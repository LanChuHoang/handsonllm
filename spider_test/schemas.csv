db_id,table,schema
browser_web,Web_client_accelerator,"CREATE TABLE ""Web_client_accelerator"" (
""id"" int,
""name"" text,
""Operating_system"" text,
""Client"" text,
""Connection"" text,
primary key(""id"")
)"
browser_web,browser,"CREATE TABLE ""browser"" (
""id"" int,
""name"" text,
""market_share"" real,
primary key(""id"")
)"
browser_web,accelerator_compatible_browser,"CREATE TABLE ""accelerator_compatible_browser"" (
""accelerator_id"" int,
""browser_id"" int,
""compatible_since_year"" int,
primary key(""accelerator_id"", ""browser_id""),
foreign key (""accelerator_id"") references `Web_client_accelerator`(""id""),
foreign key (""browser_id"") references `browser`(""id"")
)"
musical,musical,"CREATE TABLE ""musical"" (
""Musical_ID"" int,
""Name"" text,
""Year"" int,
""Award"" text,
""Category"" text,
""Nominee"" text,
""Result"" text,
PRIMARY KEY (""Musical_ID"")
)"
musical,actor,"CREATE TABLE ""actor"" (
""Actor_ID"" int,
""Name"" text,
""Musical_ID"" int,
""Character"" text,
""Duration"" text,
""age"" int,
PRIMARY KEY (""Actor_ID""),
FOREIGN KEY (""Musical_ID"") REFERENCES ""actor""(""Actor_ID"")
)"
farm,city,"CREATE TABLE ""city"" (
""City_ID"" int,
""Official_Name"" text,
""Status"" text,
""Area_km_2"" real,
""Population"" real,
""Census_Ranking"" text,
PRIMARY KEY (""City_ID"")
)"
farm,farm,"CREATE TABLE ""farm"" (
""Farm_ID"" int,
""Year"" int,
""Total_Horses"" real,
""Working_Horses"" real,
""Total_Cattle"" real,
""Oxen"" real,
""Bulls"" real,
""Cows"" real,
""Pigs"" real,
""Sheep_and_Goats"" real,
PRIMARY KEY (""Farm_ID"")
)"
farm,farm_competition,"CREATE TABLE ""farm_competition"" (
""Competition_ID"" int,
""Year"" int,
""Theme"" text,
""Host_city_ID"" int,
""Hosts"" text,
PRIMARY KEY (""Competition_ID""),
FOREIGN KEY (`Host_city_ID`) REFERENCES `city`(`City_ID`)
)"
farm,competition_record,"CREATE TABLE ""competition_record"" (
""Competition_ID"" int,
""Farm_ID"" int,
""Rank"" int,
PRIMARY KEY (""Competition_ID"",""Farm_ID""),
FOREIGN KEY (`Competition_ID`) REFERENCES `farm_competition`(`Competition_ID`),
FOREIGN KEY (`Farm_ID`) REFERENCES `farm`(`Farm_ID`)
)"
voter_1,AREA_CODE_STATE,"CREATE TABLE `AREA_CODE_STATE` (
  `area_code` integer NOT NULL
,  `state` varchar(2) NOT NULL
,  PRIMARY KEY (`area_code`)
)"
voter_1,CONTESTANTS,"CREATE TABLE `CONTESTANTS` (
  `contestant_number` integer
,  `contestant_name` varchar(50) NOT NULL
,  PRIMARY KEY (`contestant_number`)
)"
voter_1,VOTES,"CREATE TABLE `VOTES` (
  `vote_id` integer NOT NULL PRIMARY KEY
,  `phone_number` integer NOT NULL
,  `state` varchar(2) NOT NULL
,  `contestant_number` integer NOT NULL
,  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
, 	FOREIGN KEY (`state`) REFERENCES `AREA_CODE_STATE`(`state`)
, 	FOREIGN KEY (`contestant_number`) REFERENCES `CONTESTANTS`(`contestant_number`)
)"
game_injury,stadium,"CREATE TABLE ""stadium"" (
""id"" int,
""name"" text,
""Home_Games"" int,
""Average_Attendance"" real,
""Total_Attendance"" real,
""Capacity_Percentage"" real,
primary key (""id"")
)"
game_injury,game,"CREATE TABLE ""game"" (
""stadium_id"" int,
""id"" int,
""Season"" int,
""Date"" text,
""Home_team"" text,
""Away_team"" text,
""Score"" text,
""Competition"" text,
primary key (""id""),
foreign key (""stadium_id"") references `stadium`(""id"")
)"
game_injury,injury_accident,"CREATE TABLE ""injury_accident"" (
""game_id"" int,
""id"" int,
""Player"" text,
""Injury"" text,
""Number_of_matches"" text,
""Source"" text,
primary key (""id""),
foreign key (""game_id"") references `game`(""id"")
)"
hospital_1,Physician,"CREATE TABLE Physician (
  EmployeeID INTEGER NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Position VARCHAR(30) NOT NULL,
  SSN INTEGER NOT NULL,
  CONSTRAINT pk_physician PRIMARY KEY(EmployeeID)
)"
hospital_1,Department,"CREATE TABLE Department (
  DepartmentID INTEGER NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Head INTEGER NOT NULL,
  CONSTRAINT pk_Department PRIMARY KEY(DepartmentID),
  CONSTRAINT fk_Department_Physician_EmployeeID FOREIGN KEY(Head) REFERENCES Physician(EmployeeID)
)"
hospital_1,Affiliated_With,"CREATE TABLE Affiliated_With (
  Physician INTEGER NOT NULL,
  Department INTEGER NOT NULL,
  PrimaryAffiliation BOOLEAN NOT NULL,
  CONSTRAINT fk_Affiliated_With_Physician_EmployeeID FOREIGN KEY(Physician) REFERENCES Physician(EmployeeID),
  CONSTRAINT fk_Affiliated_With_Department_DepartmentID FOREIGN KEY(Department) REFERENCES Department(DepartmentID),
  PRIMARY KEY(Physician, Department)
)"
hospital_1,Procedures,"CREATE TABLE Procedures (
  Code INTEGER PRIMARY KEY NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Cost REAL NOT NULL
)"
hospital_1,Trained_In,"CREATE TABLE Trained_In (
  Physician INTEGER NOT NULL,
  Treatment INTEGER NOT NULL,
  CertificationDate DATETIME NOT NULL,
  CertificationExpires DATETIME NOT NULL,
  CONSTRAINT fk_Trained_In_Physician_EmployeeID FOREIGN KEY(Physician) REFERENCES Physician(EmployeeID),
  CONSTRAINT fk_Trained_In_Procedures_Code FOREIGN KEY(Treatment) REFERENCES Procedures(Code),
  PRIMARY KEY(Physician, Treatment)
)"
hospital_1,Patient,"CREATE TABLE Patient (
  SSN INTEGER PRIMARY KEY NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Address VARCHAR(30) NOT NULL,
  Phone VARCHAR(30) NOT NULL,
  InsuranceID INTEGER NOT NULL,
  PCP INTEGER NOT NULL,
  CONSTRAINT fk_Patient_Physician_EmployeeID FOREIGN KEY(PCP) REFERENCES Physician(EmployeeID)
)"
hospital_1,Nurse,"CREATE TABLE Nurse (
  EmployeeID INTEGER PRIMARY KEY NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Position VARCHAR(30) NOT NULL,
  Registered BOOLEAN NOT NULL,
  SSN INTEGER NOT NULL
)"
hospital_1,Appointment,"CREATE TABLE Appointment (
  AppointmentID INTEGER PRIMARY KEY NOT NULL,
  Patient INTEGER NOT NULL,    
  PrepNurse INTEGER,
  Physician INTEGER NOT NULL,
  Start DATETIME NOT NULL,
  End DATETIME NOT NULL,
  ExaminationRoom TEXT NOT NULL,
  CONSTRAINT fk_Appointment_Patient_SSN FOREIGN KEY(Patient) REFERENCES Patient(SSN),
  CONSTRAINT fk_Appointment_Nurse_EmployeeID FOREIGN KEY(PrepNurse) REFERENCES Nurse(EmployeeID),
  CONSTRAINT fk_Appointment_Physician_EmployeeID FOREIGN KEY(Physician) REFERENCES Physician(EmployeeID)
)"
hospital_1,Medication,"CREATE TABLE Medication (
  Code INTEGER PRIMARY KEY NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Brand VARCHAR(30) NOT NULL,
  Description VARCHAR(30) NOT NULL
)"
hospital_1,Prescribes,"CREATE TABLE Prescribes (
  Physician INTEGER NOT NULL,
  Patient INTEGER NOT NULL, 
  Medication INTEGER NOT NULL, 
  Date DATETIME NOT NULL,
  Appointment INTEGER,  
  Dose VARCHAR(30) NOT NULL,
  PRIMARY KEY(Physician, Patient, Medication, Date),
  CONSTRAINT fk_Prescribes_Physician_EmployeeID FOREIGN KEY(Physician) REFERENCES Physician(EmployeeID),
  CONSTRAINT fk_Prescribes_Patient_SSN FOREIGN KEY(Patient) REFERENCES Patient(SSN),
  CONSTRAINT fk_Prescribes_Medication_Code FOREIGN KEY(Medication) REFERENCES Medication(Code),
  CONSTRAINT fk_Prescribes_Appointment_AppointmentID FOREIGN KEY(Appointment) REFERENCES Appointment(AppointmentID)
)"
hospital_1,Block,"CREATE TABLE Block (
  BlockFloor INTEGER NOT NULL,
  BlockCode INTEGER NOT NULL,
  PRIMARY KEY(BlockFloor, BlockCode)
)"
hospital_1,Room,"CREATE TABLE Room (
  RoomNumber INTEGER PRIMARY KEY NOT NULL,
  RoomType VARCHAR(30) NOT NULL,
  BlockFloor INTEGER NOT NULL,  
  BlockCode INTEGER NOT NULL,  
  Unavailable BOOLEAN NOT NULL,
  CONSTRAINT fk_Room_Block_PK FOREIGN KEY(BlockFloor, BlockCode) REFERENCES Block(BlockFloor, BlockCode)
)"
hospital_1,On_Call,"CREATE TABLE On_Call (
  Nurse INTEGER NOT NULL,
  BlockFloor INTEGER NOT NULL, 
  BlockCode INTEGER NOT NULL,
  OnCallStart DATETIME NOT NULL,
  OnCallEnd DATETIME NOT NULL,
  PRIMARY KEY(Nurse, BlockFloor, BlockCode, OnCallStart, OnCallEnd),
  CONSTRAINT fk_OnCall_Nurse_EmployeeID FOREIGN KEY(Nurse) REFERENCES Nurse(EmployeeID),
  CONSTRAINT fk_OnCall_Block_Floor FOREIGN KEY(BlockFloor, BlockCode) REFERENCES Block(BlockFloor, BlockCode) 
)"
hospital_1,Stay,"CREATE TABLE Stay (
  StayID INTEGER PRIMARY KEY NOT NULL,
  Patient INTEGER NOT NULL,
  Room INTEGER NOT NULL,
  StayStart DATETIME NOT NULL,
  StayEnd DATETIME NOT NULL,
  CONSTRAINT fk_Stay_Patient_SSN FOREIGN KEY(Patient) REFERENCES Patient(SSN),
  CONSTRAINT fk_Stay_Room_Number FOREIGN KEY(Room) REFERENCES Room(RoomNumber)
)"
hospital_1,Undergoes,"CREATE TABLE Undergoes (
  Patient INTEGER NOT NULL,
  Procedures INTEGER NOT NULL,
  Stay INTEGER NOT NULL,
  DateUndergoes DATETIME NOT NULL,
  Physician INTEGER NOT NULL,
  AssistingNurse INTEGER,
  PRIMARY KEY(Patient, Procedures, Stay, DateUndergoes),
  CONSTRAINT fk_Undergoes_Patient_SSN FOREIGN KEY(Patient) REFERENCES Patient(SSN),
  CONSTRAINT fk_Undergoes_Procedures_Code FOREIGN KEY(Procedures) REFERENCES Procedures(Code),
  CONSTRAINT fk_Undergoes_Stay_StayID FOREIGN KEY(Stay) REFERENCES Stay(StayID),
  CONSTRAINT fk_Undergoes_Physician_EmployeeID FOREIGN KEY(Physician) REFERENCES Physician(EmployeeID),
  CONSTRAINT fk_Undergoes_Nurse_EmployeeID FOREIGN KEY(AssistingNurse) REFERENCES Nurse(EmployeeID)
)"
manufacturer,manufacturer,"CREATE TABLE ""manufacturer"" (
    ""Manufacturer_ID"" int,
    ""Open_Year"" real,
    ""Name"" text,
    ""Num_of_Factories"" int,
    ""Num_of_Shops"" int,
    PRIMARY KEY (""Manufacturer_ID"")
)"
manufacturer,furniture,"CREATE TABLE ""furniture"" (
    ""Furniture_ID"" int,
    ""Name"" text,
    ""Num_of_Component"" int,
    ""Market_Rate"" real,
    PRIMARY KEY (""Furniture_ID"")
)"
manufacturer,furniture_manufacte,"CREATE TABLE ""furniture_manufacte"" (
    ""Manufacturer_ID"" int,
    ""Furniture_ID"" int,
    ""Price_in_Dollar"" real,
    PRIMARY KEY (""Manufacturer_ID"",""Furniture_ID""),
    FOREIGN KEY (""Manufacturer_ID"") REFERENCES `manufacturer`(""Manufacturer_ID""),
    FOREIGN KEY (""Furniture_ID"") REFERENCES `furniture`(""Furniture_ID"")
)"
station_weather,train,"CREATE TABLE ""train"" (
    ""id"" int,
    ""train_number"" int,
    ""name"" text,
    ""origin"" text,
    ""destination"" text,
    ""time"" text,
    ""interval"" text,
    primary key (""id"")
)"
station_weather,station,"CREATE TABLE ""station"" (
    ""id"" int,
    ""network_name"" text,
    ""services"" text,
    ""local_authority"" text,
    primary key (""id"")
)"
station_weather,route,"CREATE TABLE ""route"" (
    ""train_id"" int,
    ""station_id"" int,
    primary key (""train_id"", ""station_id""),
    foreign key (""train_id"") references `train`(""id""),
    foreign key (""station_id"") references `station`(""id"")
)"
station_weather,weekly_weather,"CREATE TABLE ""weekly_weather"" (
    ""station_id"" int,
    ""day_of_week"" text,
    ""high_temperature"" int,
    ""low_temperature"" int,
    ""precipitation"" real,
    ""wind_speed_mph"" int,
    primary key (""station_id"", ""day_of_week""),
    foreign key (""station_id"") references ""station""(""id"")
)"
perpetrator,perpetrator,"CREATE TABLE ""perpetrator"" (
""Perpetrator_ID"" int,
""People_ID"" int,
""Date"" text,
""Year"" real,
""Location"" text,
""Country"" text,
""Killed"" int,
""Injured"" int,
PRIMARY KEY (""Perpetrator_ID""),
FOREIGN KEY (""People_ID"") REFERENCES ""people""(""People_ID"")
)"
perpetrator,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Name"" text,
""Height"" real,
""Weight"" real,
""Home Town"" text,
PRIMARY KEY (""People_ID"")
)"
storm_record,storm,"CREATE TABLE ""storm"" (
""Storm_ID"" int,
""Name"" text,
""Dates_active"" text,
""Max_speed"" int,
""Damage_millions_USD"" real,
""Number_Deaths"" int,
PRIMARY KEY (""Storm_ID"")
)"
storm_record,region,"CREATE TABLE ""region"" (
`Region_id` int,
`Region_code` text,
`Region_name` text,
PRIMARY KEY (""Region_id"")
)"
storm_record,affected_region,"CREATE TABLE `affected_region` (
`Region_id` int,
`Storm_ID` int,
`Number_city_affected` real,
PRIMARY KEY (`Region_id`,`Storm_ID`),
FOREIGN KEY (`Region_id`) REFERENCES `region`(`Region_id`),
FOREIGN KEY (`Storm_ID`) REFERENCES `storm`(`Storm_ID`)
)"
flight_1,flight,"CREATE TABLE flight(
	flno number(4,0) primary key,
	origin varchar2(20),
	destination varchar2(20),
	distance number(6,0),
	departure_date date,
	arrival_date date,
	price number(7,2),
    aid number(9,0),
    foreign key(""aid"") references `aircraft`(""aid""))"
flight_1,aircraft,"CREATE TABLE aircraft(
	aid number(9,0) primary key,
	name varchar2(30),
	distance number(6,0))"
flight_1,employee,"CREATE TABLE employee(
	eid number(9,0) primary key,
	name varchar2(30),
	salary number(10,2))"
flight_1,certificate,"CREATE TABLE certificate(
	eid number(9,0),
	aid number(9,0),
	primary key(eid,aid),
	foreign key(""eid"") references `employee`(""eid""),
	foreign key(""aid"") references `aircraft`(""aid""))"
manufactory_1,Manufacturers,"CREATE TABLE Manufacturers (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL,
  Headquarter VARCHAR(255) NOT NULL,
  Founder VARCHAR(255) NOT NULL,
  Revenue REAL,
  PRIMARY KEY (Code)   
)"
manufactory_1,Products,"CREATE TABLE Products (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL ,
  Price DECIMAL NOT NULL ,
  Manufacturer INTEGER NOT NULL,
  PRIMARY KEY (Code), 
  FOREIGN KEY (Manufacturer) REFERENCES Manufacturers(Code)
)"
cre_Theme_park,Ref_Hotel_Star_Ratings,"CREATE TABLE Ref_Hotel_Star_Ratings (
star_rating_code CHAR(15) NOT NULL,
star_rating_description VARCHAR(80),
PRIMARY KEY (star_rating_code),
UNIQUE (star_rating_code)
)"
cre_Theme_park,Locations,"CREATE TABLE Locations (
Location_ID INTEGER NOT NULL,
Location_Name VARCHAR(255),
Address VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Location_ID)
)"
cre_Theme_park,Ref_Attraction_Types,"CREATE TABLE Ref_Attraction_Types (
Attraction_Type_Code CHAR(15) NOT NULL,
Attraction_Type_Description VARCHAR(255),
PRIMARY KEY (Attraction_Type_Code),
UNIQUE (Attraction_Type_Code)
)"
cre_Theme_park,Visitors,"CREATE TABLE Visitors (
Tourist_ID INTEGER NOT NULL,
Tourist_Details VARCHAR(255),
PRIMARY KEY (Tourist_ID),
UNIQUE (Tourist_ID)
)"
cre_Theme_park,Features,"CREATE TABLE Features (
Feature_ID INTEGER NOT NULL,
Feature_Details VARCHAR(255),
PRIMARY KEY (Feature_ID)
)"
cre_Theme_park,Hotels,"CREATE TABLE Hotels (
hotel_id INTEGER NOT NULL,
star_rating_code CHAR(15) NOT NULL,
pets_allowed_yn CHAR(1),
price_range real,
other_hotel_details VARCHAR(255),
PRIMARY KEY (hotel_id),
FOREIGN KEY (star_rating_code) REFERENCES Ref_Hotel_Star_Ratings (star_rating_code)
)"
cre_Theme_park,Tourist_Attractions,"CREATE TABLE Tourist_Attractions (
Tourist_Attraction_ID INTEGER NOT NULL,
Attraction_Type_Code CHAR(15) NOT NULL,
Location_ID INTEGER NOT NULL,
How_to_Get_There VARCHAR(255),
Name VARCHAR(255),
Description VARCHAR(255),
Opening_Hours VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Tourist_Attraction_ID),
FOREIGN KEY (Location_ID) REFERENCES Locations (Location_ID),
FOREIGN KEY (Attraction_Type_Code) REFERENCES Ref_Attraction_Types (Attraction_Type_Code)
)"
cre_Theme_park,Street_Markets,"CREATE TABLE Street_Markets (
Market_ID INTEGER NOT NULL,
Market_Details VARCHAR(255),
PRIMARY KEY (Market_ID),
FOREIGN KEY (Market_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Shops,"CREATE TABLE Shops (
Shop_ID INTEGER NOT NULL,
Shop_Details VARCHAR(255),
PRIMARY KEY (Shop_ID),
FOREIGN KEY (Shop_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Museums,"CREATE TABLE Museums (
Museum_ID INTEGER NOT NULL,
Museum_Details VARCHAR(255),
PRIMARY KEY (Museum_ID),
FOREIGN KEY (Museum_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Royal_Family,"CREATE TABLE Royal_Family (
Royal_Family_ID INTEGER NOT NULL,
Royal_Family_Details VARCHAR(255),
PRIMARY KEY (Royal_Family_ID),
FOREIGN KEY (Royal_Family_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Theme_Parks,"CREATE TABLE Theme_Parks (
Theme_Park_ID INTEGER NOT NULL,
Theme_Park_Details VARCHAR(255),
PRIMARY KEY (Theme_Park_ID),
FOREIGN KEY (Theme_Park_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Visits,"CREATE TABLE Visits (
Visit_ID INTEGER NOT NULL,
Tourist_Attraction_ID INTEGER NOT NULL,
Tourist_ID INTEGER NOT NULL,
Visit_Date DATETIME NOT NULL,
Visit_Details VARCHAR(40) NOT NULL,
PRIMARY KEY (Visit_ID),
FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),
FOREIGN KEY (Tourist_ID) REFERENCES Visitors (Tourist_ID)
)"
cre_Theme_park,Photos,"CREATE TABLE Photos (
Photo_ID INTEGER NOT NULL,
Tourist_Attraction_ID INTEGER NOT NULL,
Name VARCHAR(255),
Description VARCHAR(255),
Filename VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Photo_ID),
FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Staff,"CREATE TABLE Staff (
Staff_ID INTEGER NOT NULL,
Tourist_Attraction_ID INTEGER NOT NULL,
Name VARCHAR(40),
Other_Details VARCHAR(255),
PRIMARY KEY (Staff_ID),
FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)
)"
cre_Theme_park,Tourist_Attraction_Features,"CREATE TABLE Tourist_Attraction_Features (
Tourist_Attraction_ID INTEGER NOT NULL,
Feature_ID INTEGER NOT NULL,
PRIMARY KEY (Tourist_Attraction_ID, Feature_ID),
FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),
FOREIGN KEY (Feature_ID) REFERENCES Features (Feature_ID)
)"
museum_visit,museum,"CREATE TABLE ""museum"" (
""Museum_ID"" int,
""Name"" text,
""Num_of_Staff"" int,
""Open_Year"" text,
PRIMARY KEY (""Museum_ID"")
)"
museum_visit,visitor,"CREATE TABLE ""visitor"" (
""ID"" int,
""Name"" text,
""Level_of_membership"" int,
""Age"" int,
PRIMARY KEY (""ID"")
)"
museum_visit,visit,"CREATE TABLE ""visit"" (
""Museum_ID"" int,
""visitor_ID"" text,
""Num_of_Ticket"" int,
""Total_spent"" real,
PRIMARY KEY (""Museum_ID"",""visitor_ID""),
FOREIGN KEY (""Museum_ID"") REFERENCES `museum`(""Museum_ID""),
FOREIGN KEY (""visitor_ID"") REFERENCES `visitor`(""ID"")
)"
race_track,race,"CREATE TABLE ""race"" (
""Race_ID"" int,
""Name"" text,
""Class"" text,
""Date"" text,
""Track_ID"" text,
PRIMARY KEY (""Race_ID""),
FOREIGN KEY (""Track_ID"") REFERENCES ""track""(""Track_ID"")
)"
race_track,track,"CREATE TABLE ""track"" (
""Track_ID"" int,
""Name"" text,
""Location"" text,
""Seating"" real,
""Year_Opened"" real,
PRIMARY KEY (""Track_ID"")
)"
soccer_2,College,"CREATE TABLE College 
  ( cName   	varchar(20) NOT NULL,
    state   	varchar(2),
    enr     	numeric(5,0),
    PRIMARY KEY (cName)
  )"
soccer_2,Player,"CREATE TABLE Player
  ( pID			numeric(5,0) NOT NULL,
  	pName   	varchar(20),
    yCard   	varchar(3),
    HS      	numeric(5,0),
    PRIMARY KEY (pID)
  )"
soccer_2,Tryout,"CREATE TABLE Tryout
  ( pID			numeric(5,0),
  	cName   	varchar(20),
    pPos    	varchar(8),
    decision    varchar(3),
    PRIMARY KEY (pID, cName),
    FOREIGN KEY (pID) REFERENCES Player(pID),
    FOREIGN KEY (cName) REFERENCES College(cName)
  )"
bike_1,station,"CREATE TABLE station (
    id INTEGER PRIMARY KEY,
    name TEXT,
    lat NUMERIC,
    long NUMERIC,
    dock_count INTEGER,
    city TEXT,
    installation_date TEXT)"
bike_1,status,"CREATE TABLE status (
    station_id INTEGER,
    bikes_available INTEGER,
    docks_available INTEGER,
    time TEXT,
    FOREIGN KEY (station_id) REFERENCES station(id)
)"
bike_1,trip,"CREATE TABLE trip (
    id INTEGER PRIMARY KEY,
    duration INTEGER,
    start_date TEXT,
    start_station_name TEXT, -- this should be removed
    start_station_id INTEGER,
    end_date TEXT,
    end_station_name TEXT, -- this should be removed
    end_station_id INTEGER,
    bike_id INTEGER,
    subscription_type TEXT,
    zip_code INTEGER)"
bike_1,weather,"CREATE TABLE weather (
    date TEXT,
    max_temperature_f INTEGER,
    mean_temperature_f INTEGER,
    min_temperature_f INTEGER,
    max_dew_point_f INTEGER,
    mean_dew_point_f INTEGER,
    min_dew_point_f INTEGER,
    max_humidity INTEGER,
    mean_humidity INTEGER,
    min_humidity INTEGER,
    max_sea_level_pressure_inches NUMERIC,
    mean_sea_level_pressure_inches NUMERIC,
    min_sea_level_pressure_inches NUMERIC,
    max_visibility_miles INTEGER,
    mean_visibility_miles INTEGER,
    min_visibility_miles INTEGER,
    max_wind_Speed_mph INTEGER,
    mean_wind_speed_mph INTEGER,
    max_gust_speed_mph INTEGER,
    precipitation_inches INTEGER,
    cloud_cover INTEGER,
    events TEXT,
    wind_dir_degrees INTEGER,
    zip_code INTEGER)"
pilot_record,aircraft,"CREATE TABLE ""aircraft"" (
""Aircraft_ID"" int,
""Order_Year"" int,
""Manufacturer"" text,
""Model"" text,
""Fleet_Series"" text,
""Powertrain"" text,
""Fuel_Propulsion"" text,
PRIMARY KEY (""Aircraft_ID"")
)"
pilot_record,pilot,"CREATE TABLE ""pilot"" (
""Pilot_ID"" int,
""Pilot_name"" text,
""Rank"" int,
""Age"" int,
""Nationality"" text,
""Position"" text,
""Join_Year"" int,
""Team"" text,
PRIMARY KEY (""Pilot_ID"")
)"
pilot_record,pilot_record,"CREATE TABLE ""pilot_record"" (
""Record_ID"" int,
""Pilot_ID"" int,
""Aircraft_ID"" int,
""Date"" text,
PRIMARY KEY (""Pilot_ID"", ""Aircraft_ID"", ""Date""),
FOREIGN KEY (`Pilot_ID`) REFERENCES `pilot`(`Pilot_ID`),
FOREIGN KEY (`Aircraft_ID`) REFERENCES `aircraft`(`Aircraft_ID`)
)"
customers_and_invoices,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`customer_first_name` VARCHAR(50),
`customer_middle_initial` VARCHAR(1),
`customer_last_name` VARCHAR(50),
`gender` VARCHAR(1),
`email_address` VARCHAR(255),
`login_name` VARCHAR(80),
`login_password` VARCHAR(20),
`phone_number` VARCHAR(255),
`town_city` VARCHAR(50),
`state_county_province` VARCHAR(50),
`country` VARCHAR(50)
)"
customers_and_invoices,Orders,"CREATE TABLE `Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`date_order_placed` DATETIME NOT NULL,
`order_details` VARCHAR(255),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_invoices,Invoices,"CREATE TABLE `Invoices` (
`invoice_number` INTEGER PRIMARY KEY,
`order_id` INTEGER NOT NULL,
`invoice_date` DATETIME,
FOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )
)"
customers_and_invoices,Accounts,"CREATE TABLE `Accounts` (
`account_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`date_account_opened` DATETIME,
`account_name` VARCHAR(50),
`other_account_details` VARCHAR(255),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_invoices,Product_Categories,"CREATE TABLE `Product_Categories` (
`production_type_code` VARCHAR(15) PRIMARY KEY,
`product_type_description` VARCHAR(80),
`vat_rating` DECIMAL(19,4)
)"
customers_and_invoices,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`parent_product_id` INTEGER,
`production_type_code` VARCHAR(15) NOT NULL,
`unit_price` DECIMAL(19,4),
`product_name` VARCHAR(80),
`product_color` VARCHAR(20),
`product_size` VARCHAR(20),
FOREIGN KEY (`production_type_code` ) REFERENCES `Product_Categories`(`production_type_code` )
)"
customers_and_invoices,Financial_Transactions,"CREATE TABLE `Financial_Transactions` (
`transaction_id` INTEGER NOT NULL ,
`account_id` INTEGER NOT NULL,
`invoice_number` INTEGER,
`transaction_type` VARCHAR(15) NOT NULL,
`transaction_date` DATETIME,
`transaction_amount` DECIMAL(19,4),
`transaction_comment` VARCHAR(255),
`other_transaction_details` VARCHAR(255),
FOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),
FOREIGN KEY (`account_id` ) REFERENCES `Accounts`(`account_id` )
)"
customers_and_invoices,Order_Items,"CREATE TABLE `Order_Items` (
`order_item_id` INTEGER PRIMARY KEY,
`order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`product_quantity` VARCHAR(50),
`other_order_item_details` VARCHAR(255),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )
)"
customers_and_invoices,Invoice_Line_Items,"CREATE TABLE `Invoice_Line_Items` (
`order_item_id` INTEGER NOT NULL,
`invoice_number` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`product_title` VARCHAR(80),
`product_quantity` VARCHAR(50),
`product_price` DECIMAL(19,4),
`derived_product_cost` DECIMAL(19,4),
`derived_vat_payable` DECIMAL(19,4),
`derived_total_cost` DECIMAL(19,4),
FOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` ),
FOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` )
)"
department_management,department,"CREATE TABLE ""department"" (
""Department_ID"" int,
""Name"" text,
""Creation"" text,
""Ranking"" int,
""Budget_in_Billions"" real,
""Num_Employees"" real,
PRIMARY KEY (""Department_ID"")
)"
department_management,head,"CREATE TABLE ""head"" (
""head_ID"" int,
""name"" text,
""born_state"" text,
""age"" real,
PRIMARY KEY (""head_ID"")
)"
department_management,management,"CREATE TABLE ""management"" (
""department_ID"" int,
""head_ID"" int,
""temporary_acting"" text,
PRIMARY KEY (""Department_ID"",""head_ID""),
FOREIGN KEY (""Department_ID"") REFERENCES `department`(""Department_ID""),
FOREIGN KEY (""head_ID"") REFERENCES `head`(""head_ID"")
)"
news_report,event,"CREATE TABLE ""event"" (
    ""Event_ID"" int,
    ""Date"" text,
    ""Venue"" text,
    ""Name"" text,
    ""Event_Attendance"" int,
    PRIMARY KEY (""Event_ID"")
)"
news_report,journalist,"CREATE TABLE ""journalist"" (
    ""journalist_ID"" int,
    ""Name"" text,
    ""Nationality"" text,
    ""Age"" text,
    ""Years_working"" int,
    PRIMARY KEY (""journalist_ID"")
)"
news_report,news_report,"CREATE TABLE ""news_report"" (
    ""journalist_ID"" int,
    ""Event_ID"" int,
    ""Work_Type"" text,
    PRIMARY KEY (""journalist_ID"",""Event_ID""),
    FOREIGN KEY (""journalist_ID"") REFERENCES `journalist`(""journalist_ID""),
    FOREIGN KEY (""Event_ID"") REFERENCES `event`(""Event_ID"")
)"
tvshow,TV_Channel,"CREATE TABLE ""TV_Channel"" (
""id"" text,
""series_name"" text,
""Country"" text,
""Language"" text,
""Content"" text,
""Pixel_aspect_ratio_PAR"" text,
""Hight_definition_TV"" text,
""Pay_per_view_PPV"" text,
""Package_Option"" text,
PRIMARY KEY (""id"")
)"
tvshow,TV_series,"CREATE TABLE ""TV_series"" (
""id"" real,
""Episode"" text,
""Air_Date"" text,
""Rating"" text,
""Share"" real,
""18_49_Rating_Share"" text,
""Viewers_m"" text,
""Weekly_Rank"" real,
""Channel"" text,
PRIMARY KEY (""id""),
FOREIGN KEY (`Channel`) REFERENCES `TV_Channel`(`id`)
)"
tvshow,Cartoon,"CREATE TABLE ""Cartoon"" (
""id"" real,
""Title"" text,
""Directed_by"" text,
""Written_by"" text,
""Original_air_date"" text,
""Production_code"" real,
""Channel"" text,
PRIMARY KEY (""id""),
FOREIGN KEY (`Channel`) REFERENCES `TV_Channel`(`id`)
)"
music_1,genre,"CREATE TABLE genre(
	g_name varchar2(20) not null,
	rating varchar2(10),
	most_popular_in varchar2(50),
	primary key(g_name)
)"
music_1,artist,"CREATE TABLE artist(
	artist_name varchar2(50) not null,
	country varchar2(20),
	gender varchar2(20),
	preferred_genre varchar2(50),
	constraint a_name primary key(artist_name),
	foreign key(preferred_genre) references genre(g_name) ON DELETE CASCADE
)"
music_1,files,"CREATE TABLE files(
	f_id number(10) not null,
	artist_name varchar2(50),
	file_size varchar2(20),
	duration varchar2(20),
	formats varchar2(20),
	primary key(f_id),
	foreign key(artist_name) references artist(artist_name) ON DELETE CASCADE
)"
music_1,song,"CREATE TABLE song(
	song_name varchar2(50),
	artist_name varchar2(50),
	country varchar2(20),
	f_id number(10),
    	genre_is varchar2(20),
	rating number(10) check(rating>0 and rating<11),
	languages varchar2(20),
	releasedate Date, 
	resolution number(10) not null,
	constraint s_name primary key(song_name),
	foreign key(artist_name) references artist(artist_name) ON DELETE CASCADE,
	foreign key(f_id) references files(f_id) ON DELETE CASCADE,
	foreign key(genre_is) references genre(g_name) ON DELETE CASCADE
)"
store_product,product,"CREATE TABLE ""product"" (
""product_id"" int,
""product"" text,
""dimensions"" text,
""dpi"" real,
""pages_per_minute_color"" real,
""max_page_size"" text,
""interface"" text,
PRIMARY KEY (""product_id"")
)"
store_product,store,"CREATE TABLE ""store"" (
""Store_ID"" int,
""Store_Name"" text,
""Type"" text,
""Area_size"" real,
""Number_of_product_category"" real,
""Ranking"" int,
PRIMARY KEY (""Store_ID"")
)"
store_product,district,"CREATE TABLE ""district"" (
""District_ID"" int,
""District_name"" text,
""Headquartered_City"" text,
""City_Population"" real,
""City_Area"" real,
PRIMARY KEY (""District_ID"")
)"
store_product,store_product,"CREATE TABLE ""store_product"" (
""Store_ID"" int,
""Product_ID"" int,
PRIMARY KEY (""Store_ID"",""Product_ID""),
FOREIGN KEY (`Store_ID`) REFERENCES `store`(`Store_ID`),
FOREIGN KEY (`Product_ID`) REFERENCES `product`(`Product_ID`)
)"
store_product,store_district,"CREATE TABLE ""store_district"" (
""Store_ID"" int,
""District_ID"" int,
PRIMARY KEY (""Store_ID""),
FOREIGN KEY (`Store_ID`) REFERENCES `store`(`Store_ID`),
FOREIGN KEY (`District_ID`) REFERENCES `district`(`District_ID`)
)"
party_host,party,"CREATE TABLE ""party"" (
""Party_ID"" int,
""Party_Theme"" text,
""Location"" text,
""First_year"" text,
""Last_year"" text,
""Number_of_hosts"" int,
PRIMARY KEY (""Party_ID"")
)"
party_host,host,"CREATE TABLE ""host"" (
""Host_ID"" int,
""Name"" text,
""Nationality"" text,
""Age"" text,
PRIMARY KEY (""Host_ID"")
)"
party_host,party_host,"CREATE TABLE ""party_host"" (
""Party_ID"" int,
""Host_ID"" int,
""Is_Main_in_Charge"" bool,
PRIMARY KEY (""Party_ID"",""Host_ID""),
FOREIGN KEY (""Host_ID"") REFERENCES `host`(""Host_ID""),
FOREIGN KEY (""Party_ID"") REFERENCES `party`(""Party_ID"")
)"
ship_1,captain,"CREATE TABLE ""captain"" (
""Captain_ID"" int,
""Name"" text,
""Ship_ID"" int,
""age"" text,
""Class"" text,
""Rank"" text,
PRIMARY KEY (""Captain_ID""),
FOREIGN KEY (""Ship_ID"") REFERENCES ""Ship""(""Ship_ID"")
)"
ship_1,Ship,"CREATE TABLE ""Ship"" (
""Ship_ID"" int,
""Name"" text,
""Type"" text,
""Built_Year"" real,
""Class"" text,
""Flag"" text,
PRIMARY KEY (""Ship_ID"")
)"
solvency_ii,Addresses,"CREATE TABLE Addresses (
Address_ID INTEGER NOT NULL ,
address_details VARCHAR(255),
PRIMARY KEY (Address_ID),
UNIQUE (Address_ID)
)"
solvency_ii,Locations,"CREATE TABLE Locations (
Location_ID INTEGER NOT NULL ,
Other_Details VARCHAR(255),
PRIMARY KEY (Location_ID)
)"
solvency_ii,Products,"CREATE TABLE Products (
Product_ID INTEGER NOT NULL,
Product_Type_Code CHAR(15),
Product_Name VARCHAR(255),
Product_Price DECIMAL(20,4),
PRIMARY KEY (Product_ID),
UNIQUE (Product_ID)
)"
solvency_ii,Parties,"CREATE TABLE Parties (
Party_ID INTEGER NOT NULL,
Party_Details VARCHAR(255),
PRIMARY KEY (Party_ID)
)"
solvency_ii,Assets,"CREATE TABLE Assets (
Asset_ID INTEGER NOT NULL ,
Other_Details VARCHAR(255),
PRIMARY KEY (Asset_ID)
)"
solvency_ii,Channels,"CREATE TABLE Channels (
Channel_ID INTEGER NOT NULL ,
Other_Details VARCHAR(255),
PRIMARY KEY (Channel_ID)
)"
solvency_ii,Finances,"CREATE TABLE Finances (
Finance_ID INTEGER NOT NULL ,
Other_Details VARCHAR(255),
PRIMARY KEY (Finance_ID)
)"
solvency_ii,Events,"CREATE TABLE Events (
Event_ID INTEGER NOT NULL ,
Address_ID INTEGER,
Channel_ID INTEGER NOT NULL,
Event_Type_Code CHAR(15),
Finance_ID INTEGER NOT NULL,
Location_ID INTEGER NOT NULL,
PRIMARY KEY (Event_ID),
UNIQUE (Event_ID),
FOREIGN KEY (Location_ID) REFERENCES Locations (Location_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),
FOREIGN KEY (Finance_ID) REFERENCES Finances (Finance_ID)
)"
solvency_ii,Products_in_Events,"CREATE TABLE Products_in_Events (
Product_in_Event_ID INTEGER NOT NULL,
Event_ID INTEGER NOT NULL,
Product_ID INTEGER NOT NULL,
PRIMARY KEY (Product_in_Event_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID),
FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)
)"
solvency_ii,Parties_in_Events,"CREATE TABLE Parties_in_Events (
Party_ID INTEGER NOT NULL,
Event_ID INTEGER NOT NULL,
Role_Code CHAR(15),
PRIMARY KEY (Party_ID, Event_ID),
FOREIGN KEY (Party_ID) REFERENCES Parties (Party_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID)
)"
solvency_ii,Agreements,"CREATE TABLE Agreements (
Document_ID INTEGER NOT NULL ,
Event_ID INTEGER NOT NULL,
PRIMARY KEY (Document_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID)
)"
solvency_ii,Assets_in_Events,"CREATE TABLE Assets_in_Events (
Asset_ID INTEGER NOT NULL,
Event_ID INTEGER NOT NULL,
PRIMARY KEY (Asset_ID, Event_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID)
)"
products_gen_characteristics,Ref_Characteristic_Types,"CREATE TABLE `Ref_Characteristic_Types` (
`characteristic_type_code` VARCHAR(15) PRIMARY KEY,
`characteristic_type_description` VARCHAR(80)
)"
products_gen_characteristics,Ref_Colors,"CREATE TABLE `Ref_Colors` (
`color_code` VARCHAR(15) PRIMARY KEY,
`color_description` VARCHAR(80)
)"
products_gen_characteristics,Ref_Product_Categories,"CREATE TABLE `Ref_Product_Categories` (
`product_category_code` VARCHAR(15) PRIMARY KEY,
`product_category_description` VARCHAR(80),
`unit_of_measure` VARCHAR(20)
)"
products_gen_characteristics,Characteristics,"CREATE TABLE `Characteristics` (
`characteristic_id` INTEGER PRIMARY KEY,
`characteristic_type_code` VARCHAR(15) NOT NULL,
`characteristic_data_type` VARCHAR(10),
`characteristic_name` VARCHAR(80),
`other_characteristic_details` VARCHAR(255),
FOREIGN KEY (`characteristic_type_code` ) REFERENCES `Ref_Characteristic_Types`(`characteristic_type_code` )
)"
products_gen_characteristics,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`color_code` VARCHAR(15) NOT NULL,
`product_category_code` VARCHAR(15) NOT NULL,
`product_name` VARCHAR(80),
`typical_buying_price` VARCHAR(20),
`typical_selling_price` VARCHAR(20),
`product_description` VARCHAR(255),
`other_product_details` VARCHAR(255),
FOREIGN KEY (`product_category_code` ) REFERENCES `Ref_Product_Categories`(`product_category_code` ),FOREIGN KEY (`color_code` ) REFERENCES `Ref_Colors`(`color_code` )
)"
products_gen_characteristics,Product_Characteristics,"CREATE TABLE `Product_Characteristics` (
`product_id` INTEGER NOT NULL,
`characteristic_id` INTEGER NOT NULL,
`product_characteristic_value` VARCHAR(50),
FOREIGN KEY (`characteristic_id` ) REFERENCES `Characteristics`(`characteristic_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` )
)"
dog_kennels,Breeds,"CREATE TABLE `Breeds` (
`breed_code` VARCHAR(10) PRIMARY KEY ,
`breed_name` VARCHAR(80)
)"
dog_kennels,Charges,"CREATE TABLE `Charges` (
`charge_id` INTEGER PRIMARY KEY ,
`charge_type` VARCHAR(10),
`charge_amount` DECIMAL(19,4)
)"
dog_kennels,Sizes,"CREATE TABLE `Sizes` (
`size_code` VARCHAR(10) PRIMARY KEY ,
`size_description` VARCHAR(80)
)"
dog_kennels,Treatment_Types,"CREATE TABLE `Treatment_Types` (
`treatment_type_code` VARCHAR(10) PRIMARY KEY ,
`treatment_type_description` VARCHAR(80)
)"
dog_kennels,Owners,"CREATE TABLE `Owners` (
`owner_id` INTEGER PRIMARY KEY ,
`first_name` VARCHAR(50),
`last_name` VARCHAR(50),
`street` VARCHAR(50),
`city` VARCHAR(50),
`state` VARCHAR(20),
`zip_code` VARCHAR(20),
`email_address` VARCHAR(50),
`home_phone` VARCHAR(20),
`cell_number` VARCHAR(20)
)"
dog_kennels,Dogs,"CREATE TABLE `Dogs` (
`dog_id` INTEGER PRIMARY KEY ,
`owner_id` INTEGER NOT NULL,
`abandoned_yn` VARCHAR(1),
`breed_code` VARCHAR(10) NOT NULL,
`size_code` VARCHAR(10) NOT NULL,
`name` VARCHAR(50),
`age` VARCHAR(20),
`date_of_birth` DATETIME,
`gender` VARCHAR(1),
`weight` VARCHAR(20),
`date_arrived` DATETIME,
`date_adopted` DATETIME,
`date_departed` DATETIME,
FOREIGN KEY (`breed_code` ) REFERENCES `Breeds`(`breed_code` ),
FOREIGN KEY (`size_code` ) REFERENCES `Sizes`(`size_code` ),
FOREIGN KEY (`owner_id` ) REFERENCES `Owners`(`owner_id` ),
FOREIGN KEY (`owner_id` ) REFERENCES `Owners`(`owner_id` )
)"
dog_kennels,Professionals,"CREATE TABLE `Professionals` (
`professional_id` INTEGER PRIMARY KEY ,
`role_code` VARCHAR(10) NOT NULL,
`first_name` VARCHAR(50),
`street` VARCHAR(50),
`city` VARCHAR(50),
`state` VARCHAR(20),
`zip_code` VARCHAR(20),
`last_name` VARCHAR(50),
`email_address` VARCHAR(50),
`home_phone` VARCHAR(20),
`cell_number` VARCHAR(20)
)"
dog_kennels,Treatments,"CREATE TABLE `Treatments` (
`treatment_id` INTEGER PRIMARY KEY ,
`dog_id` INTEGER NOT NULL,
`professional_id` INTEGER NOT NULL,
`treatment_type_code` VARCHAR(10) NOT NULL,
`date_of_treatment` DATETIME,
`cost_of_treatment` DECIMAL(19,4),
FOREIGN KEY (`treatment_type_code` ) REFERENCES `Treatment_Types`(`treatment_type_code` ),
FOREIGN KEY (`professional_id` ) REFERENCES `Professionals`(`professional_id` ),
FOREIGN KEY (`dog_id` ) REFERENCES `Dogs`(`dog_id` )
)"
local_govt_and_lot,Customers,"CREATE TABLE Customers (
customer_id INTEGER NOT NULL,
customer_details VARCHAR(255),
PRIMARY KEY (customer_id)
)"
local_govt_and_lot,Properties,"CREATE TABLE Properties (
property_id INTEGER NOT NULL,
property_type_code CHAR(15) NOT NULL,
property_address VARCHAR(255),
other_details VARCHAR(255),
PRIMARY KEY (property_id)
)"
local_govt_and_lot,Residents,"CREATE TABLE Residents (
resident_id INTEGER NOT NULL,
property_id INTEGER NOT NULL,
date_moved_in DATETIME NOT NULL,
date_moved_out DATETIME NOT NULL,
other_details VARCHAR(255),
PRIMARY KEY (resident_id, property_id, date_moved_in),
FOREIGN KEY (property_id) REFERENCES Properties (property_id)
)"
local_govt_and_lot,Organizations,"CREATE TABLE Organizations (
organization_id INTEGER NOT NULL,
parent_organization_id INTEGER,
organization_details VARCHAR(255),
PRIMARY KEY (organization_id)
)"
local_govt_and_lot,Services,"CREATE TABLE Services (
service_id INTEGER NOT NULL,
organization_id INTEGER NOT NULL,
service_type_code CHAR(15) NOT NULL,
service_details VARCHAR(255),
PRIMARY KEY (service_id),
FOREIGN KEY (organization_id) REFERENCES Organizations (organization_id)
)"
local_govt_and_lot,Residents_Services,"CREATE TABLE Residents_Services (
resident_id INTEGER NOT NULL,
service_id INTEGER NOT NULL,
date_moved_in DATETIME,
property_id INTEGER,
date_requested DATETIME,
date_provided DATETIME,
other_details VARCHAR(255),
PRIMARY KEY (resident_id, service_id),
FOREIGN KEY (service_id) REFERENCES Services (service_id),
FOREIGN KEY (resident_id, property_id, date_moved_in) REFERENCES Residents (resident_id,property_id,date_moved_in)
)"
local_govt_and_lot,Things,"CREATE TABLE Things (
thing_id INTEGER NOT NULL,
organization_id INTEGER NOT NULL,
Type_of_Thing_Code CHAR(15) NOT NULL,
service_type_code CHAR(10) NOT NULL,
service_details VARCHAR(255),
PRIMARY KEY (thing_id),
FOREIGN KEY (organization_id) REFERENCES Organizations (organization_id)
)"
local_govt_and_lot,Customer_Events,"CREATE TABLE Customer_Events (
Customer_Event_ID INTEGER NOT NULL,
customer_id INTEGER,
date_moved_in DATETIME,
property_id INTEGER,
resident_id INTEGER,
thing_id INTEGER NOT NULL,
PRIMARY KEY (Customer_Event_ID),
FOREIGN KEY (thing_id) REFERENCES Things (thing_id),
FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),
FOREIGN KEY (resident_id, property_id, date_moved_in) REFERENCES Residents (resident_id,property_id,date_moved_in)
)"
local_govt_and_lot,Customer_Event_Notes,"CREATE TABLE Customer_Event_Notes (
Customer_Event_Note_ID INTEGER NOT NULL,
Customer_Event_ID INTEGER NOT NULL,
service_type_code CHAR(15) NOT NULL,
resident_id INTEGER NOT NULL,
property_id INTEGER NOT NULL,
date_moved_in DATETIME NOT NULL,
PRIMARY KEY (Customer_Event_Note_ID),
FOREIGN KEY (Customer_Event_ID) REFERENCES Customer_Events (Customer_Event_ID)
)"
local_govt_and_lot,Timed_Status_of_Things,"CREATE TABLE Timed_Status_of_Things (
thing_id INTEGER NOT NULL,
Date_and_Date DATETIME NOT NULL,
Status_of_Thing_Code CHAR(15) NOT NULL,
PRIMARY KEY (thing_id, Date_and_Date, Status_of_Thing_Code),
FOREIGN KEY (thing_id) REFERENCES Things (thing_id)
)"
local_govt_and_lot,Timed_Locations_of_Things,"CREATE TABLE Timed_Locations_of_Things (
thing_id INTEGER NOT NULL,
Date_and_Time DATETIME NOT NULL,
Location_Code CHAR(15) NOT NULL,
PRIMARY KEY (thing_id, Date_and_Time, Location_Code),
FOREIGN KEY (thing_id) REFERENCES Things (thing_id))"
culture_company,book_club,"CREATE TABLE ""book_club"" (
""book_club_id"" int,
""Year"" int,
""Author_or_Editor"" text,
""Book_Title"" text,
""Publisher"" text,
""Category"" text,
""Result"" text,
PRIMARY KEY (""book_club_id"")
)"
culture_company,movie,"CREATE TABLE ""movie"" (
""movie_id"" int,
""Title"" text,
""Year"" int,
""Director"" text,
""Budget_million"" real,
""Gross_worldwide"" int,
PRIMARY KEY(""movie_id"")
)"
culture_company,culture_company,"CREATE TABLE ""culture_company"" (
""Company_name"" text,
""Type"" text,
""Incorporated_in"" text,
""Group_Equity_Shareholding"" real,
""book_club_id"" text,
""movie_id"" text,
PRIMARY KEY(""Company_name""),
FOREIGN KEY (""book_club_id"") REFERENCES ""book_club""(""book_club_id""),
FOREIGN KEY (""movie_id"") REFERENCES ""movie""(""movie_id"")
)"
aircraft,pilot,"CREATE TABLE `pilot` (
  `Pilot_Id` int(11) NOT NULL,
  `Name` varchar(50) NOT NULL,
  `Age` int(11) NOT NULL,
  PRIMARY KEY (`Pilot_Id`)
)"
aircraft,aircraft,"CREATE TABLE `aircraft` (
  ""Aircraft_ID"" int(11) NOT NULL,
  ""Aircraft"" varchar(50) NOT NULL,
  ""Description"" varchar(50) NOT NULL,
  ""Max_Gross_Weight"" varchar(50) NOT NULL,
  ""Total_disk_area"" varchar(50) NOT NULL,
  ""Max_disk_Loading"" varchar(50) NOT NULL,
  PRIMARY KEY (`Aircraft_ID`)
)"
aircraft,match,"CREATE TABLE `match` (
""Round"" real,
""Location"" text,
""Country"" text,
""Date"" text,
""Fastest_Qualifying"" text,
""Winning_Pilot"" text,
""Winning_Aircraft"" text,
PRIMARY KEY (""Round""),
FOREIGN KEY (`Winning_Aircraft`) REFERENCES `aircraft`(`Aircraft_ID`),
FOREIGN KEY (`Winning_Pilot`) REFERENCES `pilot`(`Pilot_Id`)
)"
aircraft,airport,"CREATE TABLE `airport` (
""Airport_ID"" int,
""Airport_Name"" text,
""Total_Passengers"" real,
""%_Change_2007"" text,
""International_Passengers"" real,
""Domestic_Passengers"" real,
""Transit_Passengers"" real,
""Aircraft_Movements"" real,
""Freight_Metric_Tonnes"" real,
PRIMARY KEY (""Airport_ID"")
)"
aircraft,airport_aircraft,"CREATE TABLE `airport_aircraft` (
""ID"" int,
""Airport_ID"" int,
""Aircraft_ID"" int,
PRIMARY KEY (""Airport_ID"",""Aircraft_ID""),
FOREIGN KEY (""Airport_ID"") REFERENCES `airport`(`Airport_ID`),
FOREIGN KEY (""Aircraft_ID"") REFERENCES `aircraft`(`Aircraft_ID`)
)"
wta_1,players,"CREATE TABLE players(
    ""player_id"" INT PRIMARY KEY,
    ""first_name"" TEXT,
    ""last_name"" TEXT,
    ""hand"" TEXT,
    ""birth_date"" DATE,
    ""country_code"" TEXT
)"
wta_1,matches,"CREATE TABLE matches(
  ""best_of"" INT,
  ""draw_size"" INT,
  ""loser_age"" FLOAT,
  ""loser_entry"" TEXT,
  ""loser_hand"" TEXT,
  ""loser_ht"" INT,
  ""loser_id"" INT,
  ""loser_ioc"" TEXT,
  ""loser_name"" TEXT,
  ""loser_rank"" INT,
  ""loser_rank_points"" INT,
  ""loser_seed"" INT,
  ""match_num"" INT,
  ""minutes"" INT,
  ""round"" TEXT,
  ""score"" TEXT,
  ""surface"" TEXT,
  ""tourney_date"" DATE,
  ""tourney_id"" TEXT,
  ""tourney_level"" TEXT,
  ""tourney_name"" TEXT,
  ""winner_age"" FLOAT,
  ""winner_entry"" TEXT,
  ""winner_hand"" TEXT,
  ""winner_ht"" INT,
  ""winner_id"" INT,
  ""winner_ioc"" TEXT,
  ""winner_name"" TEXT,
  ""winner_rank"" INT,
  ""winner_rank_points"" INT,
  ""winner_seed"" INT,
  ""year"" INT,
  FOREIGN KEY(loser_id) REFERENCES players(player_id),
  FOREIGN KEY(winner_id) REFERENCES players(player_id)
)"
wta_1,rankings,"CREATE TABLE rankings(""ranking_date"" DATE,""ranking"" INT,""player_id"" INT,""ranking_points"" INT,""tours"" INT,FOREIGN KEY(player_id) REFERENCES players(player_id))"
cinema,film,"CREATE TABLE ""film"" (
""Film_ID"" int,
""Rank_in_series"" int,
""Number_in_season"" int,
""Title"" text,
""Directed_by"" text,
""Original_air_date"" text,
""Production_code"" text,
PRIMARY KEY (""Film_ID"")
)"
cinema,cinema,"CREATE TABLE ""cinema"" (
""Cinema_ID"" int,
""Name"" text,
""Openning_year"" int,
""Capacity"" int,
""Location"" text,
PRIMARY KEY (""Cinema_ID""))"
cinema,schedule,"CREATE TABLE ""schedule"" (
""Cinema_ID"" int,
""Film_ID"" int,
""Date"" text,
""Show_times_per_day"" int,
""Price"" float,
PRIMARY KEY (""Cinema_ID"",""Film_ID""),
FOREIGN KEY (`Film_ID`) REFERENCES `film`(`Film_ID`),
FOREIGN KEY (`Cinema_ID`) REFERENCES `cinema`(`Cinema_ID`)
)"
formula_1,circuits,"CREATE TABLE ""circuits"" (
""circuitId"" INTEGER PRIMARY KEY,
  ""circuitRef"" TEXT,
  ""name"" TEXT,
  ""location"" TEXT,
  ""country"" TEXT,
  ""lat"" REAL,
  ""lng"" REAL,
  ""alt"" TEXT,
  ""url"" TEXT
)"
formula_1,races,"CREATE TABLE ""races"" (
""raceId"" INTEGER PRIMARY KEY,
  ""year"" INTEGER,
  ""round"" INTEGER,
  ""circuitId"" INTEGER,
  ""name"" TEXT,
  ""date"" TEXT,
  ""time"" TEXT,
  ""url"" TEXT,
  FOREIGN KEY (""circuitId"") REFERENCES ""circuits""(""circuitId"")
)"
formula_1,drivers,"CREATE TABLE ""drivers"" (
""driverId"" INTEGER PRIMARY KEY,
  ""driverRef"" TEXT,
  ""number"" TEXT,
  ""code"" TEXT,
  ""forename"" TEXT,
  ""surname"" TEXT,
  ""dob"" TEXT,
  ""nationality"" TEXT,
  ""url"" TEXT
)"
formula_1,status,"CREATE TABLE ""status"" (
""statusId"" INTEGER PRIMARY KEY,
  ""status"" TEXT
)"
formula_1,seasons,"CREATE TABLE ""seasons"" (
""year"" INTEGER PRIMARY KEY,
  ""url"" TEXT
)"
formula_1,constructors,"CREATE TABLE ""constructors"" (
	""constructorId"" INTEGER PRIMARY KEY,
  ""constructorRef"" TEXT,
  ""name"" TEXT,
  ""nationality"" TEXT,
  ""url"" TEXT
)"
formula_1,constructorStandings,"CREATE TABLE ""constructorStandings"" (
	""constructorStandingsId"" INTEGER PRIMARY KEY,
  ""raceId"" INTEGER,
  ""constructorId"" INTEGER,
  ""points"" REAL,
  ""position"" INTEGER,
  ""positionText"" TEXT,
  ""wins"" INTEGER,
  FOREIGN KEY(""constructorId"") REFERENCES ""constructors""(""constructorId""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId"")
)"
formula_1,results,"CREATE TABLE ""results"" (
""resultId"" INTEGER PRIMARY KEY,
  ""raceId"" INTEGER,
  ""driverId"" INTEGER,
  ""constructorId"" INTEGER,
  ""number"" INTEGER,
  ""grid"" INTEGER,
  ""position"" TEXT,
  ""positionText"" TEXT,
  ""positionOrder"" INTEGER,
  ""points"" REAL,
  ""laps"" TEXT,
  ""time"" TEXT,
  ""milliseconds"" TEXT,
  ""fastestLap"" TEXT,
  ""rank"" TEXT,
  ""fastestLapTime"" TEXT,
  ""fastestLapSpeed"" TEXT,
  ""statusId"" INTEGER,
  FOREIGN KEY(""constructorId"") REFERENCES ""constructors""(""constructorId""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId""),
  FOREIGN KEY (""driverId"") REFERENCES ""drivers""(""driverId"")
)"
formula_1,driverStandings,"CREATE TABLE ""driverStandings"" (
""driverStandingsId"" INTEGER PRIMARY KEY,
  ""raceId"" INTEGER,
  ""driverId"" INTEGER,
  ""points"" REAL,
  ""position"" INTEGER,
  ""positionText"" TEXT,
  ""wins"" INTEGER,
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId""),
  FOREIGN KEY (""driverId"") REFERENCES ""drivers""(""driverId"")
)"
formula_1,constructorResults,"CREATE TABLE ""constructorResults"" (
""constructorResultsId"" INTEGER PRIMARY KEY,
  ""raceId"" INTEGER,
  ""constructorId"" INTEGER,
  ""points"" REAL,
  ""status"" TEXT,
  FOREIGN KEY(""constructorId"") REFERENCES ""constructors""(""constructorId""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId"")
)"
formula_1,qualifying,"CREATE TABLE ""qualifying"" (
""qualifyId"" INTEGER PRIMARY KEY,
  ""raceId"" INTEGER,
  ""driverId"" INTEGER,
  ""constructorId"" INTEGER,
  ""number"" INTEGER,
  ""position"" INTEGER,
  ""q1"" TEXT,
  ""q2"" TEXT,
  ""q3"" TEXT,
  FOREIGN KEY(""constructorId"") REFERENCES ""constructors""(""constructorId""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId""),
  FOREIGN KEY (""driverId"") REFERENCES ""drivers""(""driverId"")
)"
formula_1,pitStops,"CREATE TABLE ""pitStops"" (
""raceId"" INTEGER,
  ""driverId"" INTEGER,
  ""stop"" INTEGER,
  ""lap"" INTEGER,
  ""time"" TEXT,
  ""duration"" TEXT,
  ""milliseconds"" INTEGER,
  PRIMARY KEY (""raceId"", ""driverId"", ""stop""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId""),
  FOREIGN KEY (""driverId"") REFERENCES ""drivers""(""driverId"")
)"
formula_1,lapTimes,"CREATE TABLE ""lapTimes"" (
""raceId"" INTEGER,
  ""driverId"" INTEGER,
  ""lap"" INTEGER,
  ""position"" INTEGER,
  ""time"" TEXT,
  ""milliseconds"" INTEGER,
  PRIMARY KEY(""raceId"", ""driverId"", ""lap""),
  FOREIGN KEY(""raceId"") REFERENCES ""races""(""raceId""),
  FOREIGN KEY (""driverId"") REFERENCES ""drivers""(""driverId"")
)"
wine_1,grapes,"CREATE TABLE ""grapes"" ( 
	""ID"" INTEGER PRIMARY KEY, 
	""Grape"" TEXT UNIQUE, 
	""Color"" TEXT 
)"
wine_1,appellations,"CREATE TABLE ""appellations"" ( 
	""No"" INTEGER PRIMARY KEY, 
	""Appelation"" TEXT UNIQUE, 
	""County"" TEXT, 
	""State"" TEXT, 
	""Area"" TEXT, 
	""isAVA"" TEXT
)"
wine_1,wine,"CREATE TABLE ""wine"" ( 
	""No"" INTEGER, 
	""Grape"" TEXT, 
	""Winery"" TEXT, 
	""Appelation"" TEXT, 
	""State"" TEXT, 
	""Name"" TEXT, 
	""Year"" INTEGER, 
	""Price"" INTEGER, 
	""Score"" INTEGER, 
	""Cases"" INTEGER, 
	""Drink"" TEXT,
	FOREIGN KEY (Grape) REFERENCES grapes(Grape),
	FOREIGN KEY (Appelation) REFERENCES appellations(Appelation)
)"
gas_company,company,"CREATE TABLE ""company"" (
""Company_ID"" int,
""Rank"" int,
""Company"" text,
""Headquarters"" text,
""Main_Industry"" text,
""Sales_billion"" real,
""Profits_billion"" real,
""Assets_billion"" real,
""Market_Value"" real,
PRIMARY KEY (""Company_ID"")
)"
gas_company,gas_station,"CREATE TABLE ""gas_station"" (
""Station_ID"" int,
""Open_Year"" int,
""Location"" text,
""Manager_Name"" text,
""Vice_Manager_Name"" text,
""Representative_Name"" text,
PRIMARY KEY (""Station_ID"")
)"
gas_company,station_company,"CREATE TABLE ""station_company"" (
""Station_ID"" int,
""Company_ID"" int,
""Rank_of_the_Year"" int,
PRIMARY KEY (""Station_ID"",""Company_ID""),
FOREIGN KEY (`Station_ID`) REFERENCES `gas_station`(`Station_ID`),
FOREIGN KEY (`Company_ID`) REFERENCES `company`(`Company_ID`)
)"
network_2,Person,"CREATE TABLE Person (
  name varchar(20) PRIMARY KEY,
  age INTEGER,
  city TEXT,
  gender TEXT,
  job TEXT
)"
network_2,PersonFriend,"CREATE TABLE PersonFriend (
  name varchar(20),
  friend varchar(20),
  year INTEGER,
  FOREIGN KEY (name) REFERENCES Person(name),
  FOREIGN KEY (friend) REFERENCES Person(name)
)"
match_season,country,"CREATE TABLE ""country"" (
    ""Country_id"" int,
    ""Country_name"" text,
    ""Capital"" text,
    ""Official_native_language"" text,
    PRIMARY KEY (""Country_id"")
)"
match_season,team,"CREATE TABLE `team` (
      `Team_id` int,
      `Name` text,
      PRIMARY KEY (`Team_id`)
)"
match_season,match_season,"CREATE TABLE ""match_season"" (
    ""Season"" real,
    ""Player"" text,
    ""Position"" text,
    ""Country"" int,
    ""Team"" int,
    ""Draft_Pick_Number"" int,
    ""Draft_Class"" text,
    ""College"" text,
    PRIMARY KEY (""Season""),
    FOREIGN KEY (`Country`) REFERENCES `country`(`Country_id`),
    FOREIGN KEY (`Team`) REFERENCES `team`(`Team_id`)
)"
match_season,player,"CREATE TABLE ""player"" (
    ""Player_ID"" int,
    ""Player"" text,
    ""Years_Played"" text,
    ""Total_WL"" text,
    ""Singles_WL"" text,
    ""Doubles_WL"" text,
    ""Team"" int,
    PRIMARY KEY (""Player_ID""),
    FOREIGN KEY (`Team`) REFERENCES `team`(`Team_id`)
)"
phone_1,chip_model,"CREATE TABLE ""chip_model"" (
""Model_name"" text,
""Launch_year"" real,
""RAM_MiB"" real,
""ROM_MiB"" real,
""Slots"" text,
""WiFi"" text,
""Bluetooth"" text,
PRIMARY KEY (""Model_name"")
)"
phone_1,screen_mode,"CREATE TABLE ""screen_mode"" (
""Graphics_mode"" real,
""Char_cells"" text,
""Pixels"" text,
""Hardware_colours"" real,
""used_kb"" real,
""map"" text,
""Type"" text,
PRIMARY KEY (""Graphics_mode"")
)"
phone_1,phone,"CREATE TABLE ""phone"" (
""Company_name"" text,
""Hardware_Model_name"" text,
""Accreditation_type"" text,
""Accreditation_level"" text,
""Date"" text,
""chip_model"" text,
""screen_mode"" text,
PRIMARY KEY(""Hardware_Model_name""),
FOREIGN KEY (`screen_mode`) REFERENCES `screen_mode`(`Graphics_mode`),
FOREIGN KEY (`chip_model`) REFERENCES `chip_model`(`Model_name`)
)"
pets_1,Student,"CREATE TABLE Student (
       StuID    	INTEGER PRIMARY KEY,
       LName		VARCHAR(12),
       Fname		VARCHAR(12),
       Age		INTEGER,
       Sex		VARCHAR(1),
       Major		INTEGER,
       Advisor		INTEGER,
       city_code	VARCHAR(3)
)"
pets_1,Has_Pet,"CREATE TABLE Has_Pet (
       StuID		INTEGER,
       PetID		INTEGER,
       FOREIGN KEY(PetID) REFERENCES Pets(PetID),
       FOREIGN KEY(StuID) REFERENCES Student(StuID)
)"
pets_1,Pets,"CREATE TABLE Pets (
       PetID		INTEGER PRIMARY KEY,
       PetType		VARCHAR(20),
       pet_age INTEGER,
       weight REAL
)"
tracking_grants_for_research,Document_Types,"CREATE TABLE `Document_Types` (
`document_type_code` VARCHAR(10) PRIMARY KEY,
`document_description` VARCHAR(255) NOT NULL
)"
tracking_grants_for_research,Documents,"CREATE TABLE `Documents` (
`document_id` INTEGER PRIMARY KEY,
`document_type_code` VARCHAR(10),
`grant_id` INTEGER NOT NULL,
`sent_date` DATETIME NOT NULL,
`response_received_date` DATETIME NOT NULL,
`other_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`document_type_code` ) REFERENCES `Document_Types`(`document_type_code` ),
FOREIGN KEY (`grant_id` ) REFERENCES `Grants`(`grant_id` )
)"
tracking_grants_for_research,Grants,"CREATE TABLE `Grants` (
`grant_id` INTEGER PRIMARY KEY,
`organisation_id` INTEGER NOT NULL,
`grant_amount` DECIMAL(19,4) NOT NULL DEFAULT 0,
`grant_start_date` DATETIME NOT NULL,
`grant_end_date` DATETIME NOT NULL,
`other_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`organisation_id` ) REFERENCES `Organisations`(`organisation_id` )
)"
tracking_grants_for_research,Organisation_Types,"CREATE TABLE `Organisation_Types` (
`organisation_type` VARCHAR(10) PRIMARY KEY,
`organisation_type_description` VARCHAR(255) NOT NULL
)"
tracking_grants_for_research,Organisations,"CREATE TABLE `Organisations` (
`organisation_id` INTEGER PRIMARY KEY,
`organisation_type` VARCHAR(10) NOT NULL,
`organisation_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`organisation_type` ) REFERENCES `Organisation_Types`(`organisation_type` )
)"
tracking_grants_for_research,Project_Outcomes,"CREATE TABLE `Project_Outcomes` (
`project_id` INTEGER NOT NULL,
`outcome_code` VARCHAR(10) NOT NULL,
`outcome_details` VARCHAR(255),
FOREIGN KEY (`project_id` ) REFERENCES `Projects`(`project_id` ),FOREIGN KEY (`outcome_code` ) REFERENCES `Research_Outcomes`(`outcome_code` )
)"
tracking_grants_for_research,Project_Staff,"CREATE TABLE `Project_Staff` (
`staff_id` DOUBLE PRIMARY KEY,
`project_id` INTEGER NOT NULL,
`role_code` VARCHAR(10) NOT NULL,
`date_from` DATETIME,
`date_to` DATETIME,
`other_details` VARCHAR(255),
FOREIGN KEY (`project_id` ) REFERENCES `Projects`(`project_id` ),FOREIGN KEY (`role_code` ) REFERENCES `Staff_Roles`(`role_code` )
)"
tracking_grants_for_research,Projects,"CREATE TABLE `Projects` (
`project_id` INTEGER PRIMARY KEY,
`organisation_id` INTEGER NOT NULL,
`project_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`organisation_id` ) REFERENCES `Organisations`(`organisation_id` )
)"
tracking_grants_for_research,Research_Outcomes,"CREATE TABLE `Research_Outcomes` (
`outcome_code` VARCHAR(10) PRIMARY KEY,
`outcome_description` VARCHAR(255) NOT NULL
)"
tracking_grants_for_research,Research_Staff,"CREATE TABLE `Research_Staff` (
`staff_id` INTEGER PRIMARY KEY,
`employer_organisation_id` INTEGER NOT NULL,
`staff_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`employer_organisation_id` ) REFERENCES `Organisations`(`organisation_id` )
)"
tracking_grants_for_research,Staff_Roles,"CREATE TABLE `Staff_Roles` (
`role_code` VARCHAR(10) PRIMARY KEY,
`role_description` VARCHAR(255) NOT NULL
)"
tracking_grants_for_research,Tasks,"CREATE TABLE `Tasks` (
`task_id` INTEGER PRIMARY KEY,
`project_id` INTEGER NOT NULL,
`task_details` VARCHAR(255) NOT NULL,
`eg Agree Objectives` VARCHAR(1),
FOREIGN KEY (`project_id` ) REFERENCES `Projects`(`project_id` )
)"
party_people,region,"CREATE TABLE ""region"" (
""Region_ID"" int,
""Region_name"" text,
""Date"" text,
""Label"" text,
""Format"" text,
""Catalogue"" text,
PRIMARY KEY (""Region_ID"")
)"
party_people,party,"CREATE TABLE ""party"" (
""Party_ID"" int,
""Minister"" text,
""Took_office"" text,
""Left_office"" text,
""Region_ID"" int,
""Party_name"" text,
PRIMARY KEY (""Party_ID""),
FOREIGN KEY (`Region_ID`) REFERENCES `region`(`Region_ID`)
)"
party_people,member,"CREATE TABLE ""member"" (
""Member_ID"" int,
""Member_Name"" text,
""Party_ID"" text,
""In_office"" text,
PRIMARY KEY (""Member_ID""),
FOREIGN KEY (`Party_ID`) REFERENCES `party`(`Party_ID`)
)"
party_people,party_events,"CREATE TABLE ""party_events"" (
""Event_ID"" int,
""Event_Name"" text,
""Party_ID"" int,
""Member_in_charge_ID"" int,
PRIMARY KEY (""Event_ID""),
FOREIGN KEY (`Party_ID`) REFERENCES `party`(`Party_ID`),
FOREIGN KEY (`Member_in_charge_ID`) REFERENCES `member`(`Member_ID`)
)"
hr_1,regions,"CREATE TABLE `regions` (
  `REGION_ID` decimal(5,0) NOT NULL,
  `REGION_NAME` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`REGION_ID`)
)"
hr_1,countries,"CREATE TABLE `countries` (
  `COUNTRY_ID` varchar(2) NOT NULL,
  `COUNTRY_NAME` varchar(40) DEFAULT NULL,
  `REGION_ID` decimal(10,0) DEFAULT NULL,
  PRIMARY KEY (`COUNTRY_ID`),
  FOREIGN KEY (`REGION_ID`) REFERENCES regions (`REGION_ID`)
)"
hr_1,departments,"CREATE TABLE `departments` (
  `DEPARTMENT_ID` decimal(4,0) NOT NULL DEFAULT '0',
  `DEPARTMENT_NAME` varchar(30) NOT NULL,
  `MANAGER_ID` decimal(6,0) DEFAULT NULL,
  `LOCATION_ID` decimal(4,0) DEFAULT NULL,
  PRIMARY KEY (`DEPARTMENT_ID`)
)"
hr_1,jobs,"CREATE TABLE `jobs` (
  `JOB_ID` varchar(10) NOT NULL DEFAULT '',
  `JOB_TITLE` varchar(35) NOT NULL,
  `MIN_SALARY` decimal(6,0) DEFAULT NULL,
  `MAX_SALARY` decimal(6,0) DEFAULT NULL,
  PRIMARY KEY (`JOB_ID`)
)"
hr_1,employees,"CREATE TABLE `employees` (
  `EMPLOYEE_ID` decimal(6,0) NOT NULL DEFAULT '0',
  `FIRST_NAME` varchar(20) DEFAULT NULL,
  `LAST_NAME` varchar(25) NOT NULL,
  `EMAIL` varchar(25) NOT NULL,
  `PHONE_NUMBER` varchar(20) DEFAULT NULL,
  `HIRE_DATE` date NOT NULL,
  `JOB_ID` varchar(10) NOT NULL,
  `SALARY` decimal(8,2) DEFAULT NULL,
  `COMMISSION_PCT` decimal(2,2) DEFAULT NULL,
  `MANAGER_ID` decimal(6,0) DEFAULT NULL,
  `DEPARTMENT_ID` decimal(4,0) DEFAULT NULL,
  PRIMARY KEY (`EMPLOYEE_ID`),
  FOREIGN KEY (`DEPARTMENT_ID`) REFERENCES departments(`DEPARTMENT_ID`),
  FOREIGN KEY (`JOB_ID`) REFERENCES jobs(`JOB_ID`)
)"
hr_1,job_history,"CREATE TABLE `job_history` (
  `EMPLOYEE_ID` decimal(6,0) NOT NULL,
  `START_DATE` date NOT NULL,
  `END_DATE` date NOT NULL,
  `JOB_ID` varchar(10) NOT NULL,
  `DEPARTMENT_ID` decimal(4,0) DEFAULT NULL,
  PRIMARY KEY (`EMPLOYEE_ID`,`START_DATE`),
  FOREIGN KEY (`EMPLOYEE_ID`) REFERENCES employees(`EMPLOYEE_ID`),
  FOREIGN KEY (`DEPARTMENT_ID`) REFERENCES departments(`DEPARTMENT_ID`),
  FOREIGN KEY (`JOB_ID`) REFERENCES jobs(`JOB_ID`)
)"
hr_1,locations,"CREATE TABLE `locations` (
  `LOCATION_ID` decimal(4,0) NOT NULL DEFAULT '0',
  `STREET_ADDRESS` varchar(40) DEFAULT NULL,
  `POSTAL_CODE` varchar(12) DEFAULT NULL,
  `CITY` varchar(30) NOT NULL,
  `STATE_PROVINCE` varchar(25) DEFAULT NULL,
  `COUNTRY_ID` varchar(2) DEFAULT NULL,
  PRIMARY KEY (`LOCATION_ID`),
  FOREIGN KEY (`COUNTRY_ID`) REFERENCES countries(`COUNTRY_ID`)
)"
scientist_1,Scientists,"CREATE TABLE Scientists (
  SSN int,
  Name Char(30) not null,
  Primary Key (SSN)
)"
scientist_1,Projects,"CREATE TABLE Projects (
  Code Char(4),
  Name Char(50) not null,
  Hours int,
  Primary Key (Code)
)"
scientist_1,AssignedTo,"CREATE TABLE AssignedTo (
  Scientist int not null,
  Project char(4) not null,
  Primary Key (Scientist, Project),
  Foreign Key (Scientist) references Scientists (SSN),
  Foreign Key (Project) references Projects (Code)
)"
college_3,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
college_3,Faculty,"CREATE TABLE Faculty (
       FacID 	       INTEGER PRIMARY KEY,
       Lname		VARCHAR(15),
       Fname		VARCHAR(15),
       Rank		VARCHAR(15),
       Sex		VARCHAR(1),
       Phone		INTEGER,
       Room		VARCHAR(5),
       Building		VARCHAR(13)
)"
college_3,Department,"CREATE TABLE Department (
       DNO   		INTEGER PRIMARY KEY,
       Division		VARCHAR(2),
       DName		VARCHAR(25),
       Room		VARCHAR(5),
       Building		VARCHAR(13),
       DPhone		INTEGER
)"
college_3,Member_of,"CREATE TABLE Member_of (
       FacID 	       INTEGER,
       DNO	       INTEGER,
       Appt_Type       VARCHAR(15),
       FOREIGN KEY(FacID) REFERENCES Faculty(FacID),
       FOREIGN KEY(DNO) REFERENCES Department(DNO)
)"
college_3,Course,"CREATE TABLE Course (
       CID   	    	VARCHAR(7) PRIMARY KEY,
       CName		VARCHAR(40),
       Credits		INTEGER,
       Instructor	INTEGER,
       Days		VARCHAR(5),
       Hours		VARCHAR(11),
       DNO		INTEGER,
       FOREIGN KEY(Instructor) REFERENCES Faculty(FacID),
       FOREIGN KEY(DNO) REFERENCES Department(DNO)
)"
college_3,Minor_in,"CREATE TABLE Minor_in (
       StuID 	      INTEGER,
       DNO		INTEGER,
       FOREIGN KEY(StuID) REFERENCES Student(StuID),
       FOREIGN KEY(DNO) REFERENCES Department(DNO)
)"
college_3,Enrolled_in,"CREATE TABLE Enrolled_in (
       StuID 		 INTEGER,
       CID		VARCHAR(7),
       Grade		VARCHAR(2),
       FOREIGN KEY(StuID) REFERENCES Student(StuID),
       FOREIGN KEY(CID) REFERENCES Course(CID),
       FOREIGN KEY(Grade) REFERENCES Gradeconversion(lettergrade)
)"
college_3,Gradeconversion,"CREATE TABLE Gradeconversion (
       lettergrade	     VARCHAR(2) PRIMARY KEY,
       gradepoint	     FLOAT
)"
cre_Doc_Template_Mgt,Ref_Template_Types,"CREATE TABLE Ref_Template_Types (
Template_Type_Code CHAR(15) NOT NULL,
Template_Type_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Template_Type_Code)
)"
cre_Doc_Template_Mgt,Templates,"CREATE TABLE Templates (
Template_ID INTEGER NOT NULL,
Version_Number INTEGER NOT NULL,
Template_Type_Code CHAR(15) NOT NULL,
Date_Effective_From DATETIME,
Date_Effective_To DATETIME,
Template_Details VARCHAR(255) NOT NULL,
PRIMARY KEY (Template_ID),
FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)
)"
cre_Doc_Template_Mgt,Documents,"CREATE TABLE Documents (
Document_ID INTEGER NOT NULL,
Template_ID INTEGER,
Document_Name VARCHAR(255),
Document_Description VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Document_ID),
FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)
)"
cre_Doc_Template_Mgt,Paragraphs,"CREATE TABLE Paragraphs (
Paragraph_ID INTEGER NOT NULL,
Document_ID INTEGER NOT NULL,
Paragraph_Text VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Paragraph_ID),
FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)
)"
restaurants,GEOGRAPHIC,"CREATE TABLE ""GEOGRAPHIC"" (
""CITY_NAME"" text,
""COUNTY"" text,
""REGION"" text,
primary key(""CITY_NAME"")
)"
restaurants,RESTAURANT,"CREATE TABLE ""RESTAURANT"" (
""ID"" int,
""NAME"" text,
""FOOD_TYPE"" text,
""CITY_NAME"" text,
""RATING"" real,
primary key(""ID""),
foreign key (""CITY_NAME"") references `GEOGRAPHIC`(""CITY_NAME"")
)"
restaurants,LOCATION,"CREATE TABLE ""LOCATION"" (
""RESTAURANT_ID"" int,
""HOUSE_NUMBER"" int,
""STREET_NAME"" text,
""CITY_NAME"" text,
primary key(""RESTAURANT_ID""),
foreign key (""CITY_NAME"") references `GEOGRAPHIC`(""CITY_NAME"")
foreign key (""RESTAURANT_ID"") references `RESTAURANT`(""RESTAURANT_ID"")
)"
program_share,program,"CREATE TABLE ""program"" (
""Program_ID"" int,
""Name"" text,
""Origin"" text,
""Launch"" real,
""Owner"" text,
PRIMARY KEY (""Program_ID"")
)"
program_share,channel,"CREATE TABLE ""channel"" (
""Channel_ID"" int,
""Name"" text,
""Owner"" text,
""Share_in_percent"" real,
""Rating_in_percent"" real,
PRIMARY KEY (""Channel_ID"")
)"
program_share,broadcast,"CREATE TABLE ""broadcast"" (
""Channel_ID"" int,
""Program_ID"" int,
""Time_of_day"" text,
PRIMARY KEY (""Channel_ID"",""Program_ID""),
FOREIGN KEY (`Channel_ID`) REFERENCES `channel`(`Channel_ID`),
FOREIGN KEY (`Program_ID`) REFERENCES `program`(`Program_ID`)
)"
program_share,broadcast_share,"CREATE TABLE ""broadcast_share"" (
""Channel_ID"" int,
""Program_ID"" int,
""Date"" text,
""Share_in_percent"" real,
PRIMARY KEY (""Channel_ID"",""Program_ID""),
FOREIGN KEY (`Channel_ID`) REFERENCES `channel`(`Channel_ID`),
FOREIGN KEY (`Program_ID`) REFERENCES `program`(`Program_ID`)
)"
college_2,classroom,"CREATE TABLE classroom
	(building		varchar(15),
	 room_number		varchar(7),
	 capacity		numeric(4,0),
	 primary key (building, room_number)
	)"
college_2,department,"CREATE TABLE department
	(dept_name		varchar(20),
	 building		varchar(15),
	 budget		        numeric(12,2) check (budget > 0),
	 primary key (dept_name)
	)"
college_2,course,"CREATE TABLE course
	(course_id		varchar(8),
	 title			varchar(50),
	 dept_name		varchar(20) NULL,
	 credits		numeric(2,0) check (credits > 0),
	 primary key (course_id),
    FOREIGN KEY (dept_name)
    REFERENCES `department` (dept_name)
    ON DELETE SET NULL
--    ON UPDATE NO ACTION
--    foreign key (dept_name) references department
-- on delete set null
   )"
college_2,instructor,"CREATE TABLE instructor
	(ID			varchar(5),
	 name			varchar(20) not null,
	 dept_name		varchar(20),
	 salary			numeric(8,2) check (salary > 29000),
	 primary key (ID),
	 foreign key (dept_name) references department (dept_name)
		on delete set null
	)"
college_2,section,"CREATE TABLE section
	(course_id		varchar(8),
         sec_id			varchar(8),
	 semester		varchar(6)
		check (semester in ('Fall', 'Winter', 'Spring', 'Summer')),
	 year			numeric(4,0) check (year > 1701 and year < 2100),
	 building		varchar(15),
	 room_number		varchar(7),
	 time_slot_id		varchar(4),
	 primary key (course_id, sec_id, semester, year),
	 foreign key (course_id) references course (course_id)
		on delete cascade,
	 foreign key (building, room_number) references classroom (building, room_number)
		on delete set null
	)"
college_2,teaches,"CREATE TABLE teaches
	(ID			varchar(5),
	 course_id		varchar(8),
	 sec_id			varchar(8),
	 semester		varchar(6),
	 year			numeric(4,0),
	 primary key (ID, course_id, sec_id, semester, year),
	 foreign key (course_id,sec_id, semester, year) references section (course_id, sec_id, semester, year)
		on delete cascade,
	 foreign key (ID) references instructor (ID)
		on delete cascade
	)"
college_2,student,"CREATE TABLE student
	(ID			varchar(5),
	 name			varchar(20) not null,
	 dept_name		varchar(20),
	 tot_cred		numeric(3,0) check (tot_cred >= 0),
	 primary key (ID),
	 foreign key (dept_name) references department (dept_name)
		on delete set null
	)"
college_2,takes,"CREATE TABLE takes
	(ID			varchar(5),
	 course_id		varchar(8),
	 sec_id			varchar(8),
	 semester		varchar(6),
	 year			numeric(4,0),
	 grade		        varchar(2),
	 primary key (ID, course_id, sec_id, semester, year),
	 foreign key (course_id,sec_id, semester, year) references section (course_id, sec_id, semester, year)
		on delete cascade,
	 foreign key (ID) references student (ID)
		on delete cascade
	)"
college_2,advisor,"CREATE TABLE advisor
	(s_ID			varchar(5),
	 i_ID			varchar(5),
	 primary key (s_ID),
	 foreign key (i_ID) references instructor (ID)
		on delete set null,
	 foreign key (s_ID) references student (ID)
		on delete cascade
	)"
college_2,time_slot,"CREATE TABLE time_slot
	(time_slot_id		varchar(4),
	 day			varchar(1),
	 start_hr		numeric(2) check (start_hr >= 0 and start_hr < 24),
	 start_min		numeric(2) check (start_min >= 0 and start_min < 60),
	 end_hr			numeric(2) check (end_hr >= 0 and end_hr < 24),
	 end_min		numeric(2) check (end_min >= 0 and end_min < 60),
	 primary key (time_slot_id, day, start_hr, start_min)
	)"
college_2,prereq,"CREATE TABLE prereq
	(course_id		varchar(8),
	 prereq_id		varchar(8),
	 primary key (course_id, prereq_id),
	 foreign key (course_id) references course (course_id)
		on delete cascade,
	 foreign key (prereq_id) references course (course_id)
	)"
course_teach,course,"CREATE TABLE ""course"" (
""Course_ID"" int,
""Staring_Date"" text,
""Course"" text,
PRIMARY KEY (""Course_ID"")
)"
course_teach,teacher,"CREATE TABLE ""teacher"" (
""Teacher_ID"" int,
""Name"" text,
""Age"" text,
""Hometown"" text,
PRIMARY KEY (""Teacher_ID"")
)"
course_teach,course_arrange,"CREATE TABLE ""course_arrange"" (
""Course_ID"" int,
""Teacher_ID"" int,
""Grade"" int,
PRIMARY KEY (""Course_ID"",""Teacher_ID"",""Grade""),
FOREIGN KEY (""Course_ID"") REFERENCES `course`(""Course_ID""),
FOREIGN KEY (""Teacher_ID"") REFERENCES `teacher`(""Teacher_ID"")
)"
candidate_poll,candidate,"CREATE TABLE ""candidate"" (
""Candidate_ID"" int,
""People_ID"" int,
""Poll_Source"" text,
""Date"" text,
""Support_rate"" real,
""Consider_rate"" real,
""Oppose_rate"" real,
""Unsure_rate"" real,
PRIMARY KEY (""Candidate_ID""),
FOREIGN KEY (""People_ID"") REFERENCES ""people""(""People_ID"")
)"
candidate_poll,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Sex"" text,
""Name"" text,
""Date_of_Birth"" text,
""Height"" real,
""Weight"" real,
PRIMARY KEY (""People_ID"")
)"
cre_Doc_Control_Systems,Ref_Document_Types,"CREATE TABLE Ref_Document_Types (
document_type_code CHAR(15) NOT NULL,
document_type_description VARCHAR(255) NOT NULL,
PRIMARY KEY (document_type_code)
)"
cre_Doc_Control_Systems,Roles,"CREATE TABLE Roles (
role_code CHAR(15) NOT NULL,
role_description VARCHAR(255),
PRIMARY KEY (role_code)
)"
cre_Doc_Control_Systems,Addresses,"CREATE TABLE Addresses (
address_id INTEGER NOT NULL,
address_details VARCHAR(255),
PRIMARY KEY (address_id)
)"
cre_Doc_Control_Systems,Ref_Document_Status,"CREATE TABLE Ref_Document_Status (
document_status_code CHAR(15) NOT NULL,
document_status_description VARCHAR(255) NOT NULL,
PRIMARY KEY (document_status_code)
)"
cre_Doc_Control_Systems,Ref_Shipping_Agents,"CREATE TABLE Ref_Shipping_Agents (
shipping_agent_code CHAR(15) NOT NULL,
shipping_agent_name VARCHAR(255) NOT NULL,
shipping_agent_description VARCHAR(255) NOT NULL,
PRIMARY KEY (shipping_agent_code)
)"
cre_Doc_Control_Systems,Documents,"CREATE TABLE Documents (
document_id INTEGER NOT NULL,
document_status_code CHAR(15) NOT NULL,
document_type_code CHAR(15) NOT NULL,
shipping_agent_code CHAR(15),
receipt_date DATETIME,
receipt_number VARCHAR(255),
other_details VARCHAR(255),
PRIMARY KEY (document_id),
FOREIGN KEY (document_type_code) REFERENCES Ref_Document_Types (document_type_code),
FOREIGN KEY (document_status_code) REFERENCES Ref_Document_Status (document_status_code),
FOREIGN KEY (shipping_agent_code) REFERENCES Ref_Shipping_Agents (shipping_agent_code)
)"
cre_Doc_Control_Systems,Employees,"CREATE TABLE Employees (
employee_id INTEGER NOT NULL,
role_code CHAR(15) NOT NULL,
employee_name VARCHAR(255),
other_details VARCHAR(255),
PRIMARY KEY (employee_id),
FOREIGN KEY (role_code) REFERENCES Roles (role_code)
)"
cre_Doc_Control_Systems,Document_Drafts,"CREATE TABLE Document_Drafts (
document_id INTEGER NOT NULL,
draft_number INTEGER NOT NULL,
draft_details VARCHAR(255),
PRIMARY KEY (document_id, draft_number),
FOREIGN KEY (document_id) REFERENCES Documents (document_id)
)"
cre_Doc_Control_Systems,Draft_Copies,"CREATE TABLE Draft_Copies (
document_id INTEGER NOT NULL,
draft_number INTEGER NOT NULL,
copy_number INTEGER NOT NULL,
PRIMARY KEY (document_id, draft_number, copy_number),
FOREIGN KEY (document_id, draft_number) REFERENCES Document_Drafts (document_id,draft_number)
)"
cre_Doc_Control_Systems,Circulation_History,"CREATE TABLE Circulation_History (
document_id INTEGER NOT NULL,
draft_number INTEGER NOT NULL,
copy_number INTEGER NOT NULL,
employee_id INTEGER NOT NULL,
PRIMARY KEY (document_id, draft_number, copy_number, employee_id),
FOREIGN KEY (document_id, draft_number, copy_number) REFERENCES Draft_Copies (document_id,draft_number,copy_number),
FOREIGN KEY (employee_id) REFERENCES Employees (employee_id)
)"
cre_Doc_Control_Systems,Documents_Mailed,"CREATE TABLE Documents_Mailed (
document_id INTEGER NOT NULL,
mailed_to_address_id INTEGER NOT NULL,
mailing_date DATETIME,
PRIMARY KEY (document_id, mailed_to_address_id),
FOREIGN KEY (document_id) REFERENCES Documents (document_id),
FOREIGN KEY (mailed_to_address_id) REFERENCES Addresses (address_id)
)"
wedding,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Name"" text,
""Country"" text,
""Is_Male"" text,
""Age"" int,
PRIMARY KEY (""People_ID"")
)"
wedding,church,"CREATE TABLE ""church"" (
""Church_ID"" int,
""Name"" text,
""Organized_by"" text,
""Open_Date"" int,
""Continuation_of"" text,
PRIMARY KEY (""Church_ID"")
)"
wedding,wedding,"CREATE TABLE ""wedding"" (
""Church_ID"" int,
""Male_ID"" int,
""Female_ID"" int,
""Year"" int,
PRIMARY KEY (""Church_ID"",""Male_ID"",""Female_ID""),
FOREIGN KEY (""Church_ID"") REFERENCES `church`(""Church_ID""),
FOREIGN KEY (""Male_ID"") REFERENCES `people`(""People_ID""),
FOREIGN KEY (""Female_ID"") REFERENCES `people`(""People_ID"")
)"
yelp,business,"CREATE TABLE ""business"" (
""bid"" int,
""business_id"" text,
""name"" text,
""full_address"" text,
""city"" text,
""latitude"" text,
""longitude"" text,
""review_count"" int,
""is_open"" int,
""rating"" real,
""state"" text,
primary key(""bid"")
)"
yelp,category,"CREATE TABLE ""category"" (
""id"" int,
""business_id"" text,
""category_name"" text,
primary key(""id""),
foreign key(""business_id"") references `business`(""business_id"")
)"
yelp,user,"CREATE TABLE ""user"" (
""uid"" int,
""user_id"" text,
""name"" text,
primary key(""uid"")
)"
yelp,checkin,"CREATE TABLE ""checkin"" (
""cid"" int,
""business_id"" text,
""count"" int,
""day"" text,
primary key(""cid""),
foreign key(""business_id"") references `business`(""business_id"")
)"
yelp,neighbourhood,"CREATE TABLE ""neighbourhood"" (
""id"" int,
""business_id"" text,
""neighbourhood_name"" text,
primary key(""id""),
foreign key(""business_id"") references `business`(""business_id"")
)"
yelp,review,"CREATE TABLE ""review"" (
""rid"" int,
""business_id"" text,
""user_id"" text,
""rating"" real,
""text"" text,
""year"" int,
""month"" text,
primary key(""rid""),
foreign key(""business_id"") references `business`(""business_id""),
foreign key(""user_id"") references `user`(""user_id"")
)"
yelp,tip,"CREATE TABLE ""tip"" (
""tip_id"" int,
""business_id"" text,
""text"" text,
""user_id"" text,
""likes"" int,
""year"" int,
""month"" text,
primary key(""tip_id"")
foreign key(""business_id"") references `business`(""business_id""),
foreign key(""user_id"") references `user`(""user_id"")

)"
document_management,Roles,"CREATE TABLE `Roles` (
`role_code` VARCHAR(15) PRIMARY KEY,
`role_description` VARCHAR(80)
)"
document_management,Users,"CREATE TABLE `Users` (
`user_id` INTEGER PRIMARY KEY,
`role_code` VARCHAR(15) NOT NULL,
`user_name` VARCHAR(40),
`user_login` VARCHAR(40),
`password` VARCHAR(40),
FOREIGN KEY (`role_code` ) REFERENCES `Roles`(`role_code` )
)"
document_management,Document_Structures,"CREATE TABLE `Document_Structures` (
`document_structure_code` VARCHAR(15) PRIMARY KEY,
`parent_document_structure_code` VARCHAR(15),
`document_structure_description` VARCHAR(80)
)"
document_management,Functional_Areas,"CREATE TABLE `Functional_Areas` (
`functional_area_code` VARCHAR(15) PRIMARY KEY,
`parent_functional_area_code` VARCHAR(15),
`functional_area_description` VARCHAR(80) NOT NULL
)"
document_management,Images,"CREATE TABLE `Images` (
`image_id` INTEGER PRIMARY KEY,
`image_alt_text` VARCHAR(80),
`image_name` VARCHAR(40),
`image_url` VARCHAR(255)
)"
document_management,Documents,"CREATE TABLE `Documents` (
`document_code` VARCHAR(15) PRIMARY KEY,
`document_structure_code` VARCHAR(15) NOT NULL,
`document_type_code` VARCHAR(15) NOT NULL,
`access_count` INTEGER,
`document_name` VARCHAR(80),
FOREIGN KEY (`document_structure_code` ) REFERENCES `Document_Structures`(`document_structure_code` )
)"
document_management,Document_Functional_Areas,"CREATE TABLE `Document_Functional_Areas` (
`document_code` VARCHAR(15) NOT NULL,
`functional_area_code` VARCHAR(15) NOT NULL,
FOREIGN KEY (`document_code` ) REFERENCES `Documents`(`document_code` ),
FOREIGN KEY (`functional_area_code` ) REFERENCES `Functional_Areas`(`functional_area_code` )
)"
document_management,Document_Sections,"CREATE TABLE `Document_Sections` (
`section_id` INTEGER PRIMARY KEY,
`document_code` VARCHAR(15) NOT NULL,
`section_sequence` INTEGER,
`section_code` VARCHAR(20),
`section_title` VARCHAR(80),
FOREIGN KEY (`document_code` ) REFERENCES `Documents`(`document_code` )
)"
document_management,Document_Sections_Images,"CREATE TABLE `Document_Sections_Images` (
`section_id` INTEGER NOT NULL,
`image_id` INTEGER NOT NULL,
PRIMARY KEY (`section_id`,`image_id`),
FOREIGN KEY (`section_id` ) REFERENCES `Document_Sections`(`section_id` ),
FOREIGN KEY (`image_id` ) REFERENCES `Images`(`image_id` )
)"
loan_1,bank,"CREATE TABLE bank (
branch_ID int PRIMARY KEY,
bname varchar(20),
no_of_customers int,
city varchar(10),
state varchar(20))"
loan_1,customer,"CREATE TABLE customer (
cust_ID varchar(3) PRIMARY KEY,
cust_name varchar(20),
acc_type char(1),
acc_bal int,
no_of_loans int,
credit_score int,
branch_ID int,
state varchar(20),
FOREIGN KEY(branch_ID) REFERENCES bank(branch_ID))"
loan_1,loan,"CREATE TABLE loan (
loan_ID varchar(3) PRIMARY KEY,
loan_type varchar(15),
cust_ID varchar(3),
branch_ID varchar(3),
amount int,
FOREIGN KEY(branch_ID) REFERENCES bank(branch_ID),
FOREIGN KEY(Cust_ID) REFERENCES customer(Cust_ID))"
railway,railway,"CREATE TABLE ""railway"" (
""Railway_ID"" int,
""Railway"" text,
""Builder"" text,
""Built"" text,
""Wheels"" text,
""Location"" text,
""ObjectNumber"" text,
PRIMARY KEY (""Railway_ID"")
)"
railway,train,"CREATE TABLE ""train"" (
""Train_ID"" int,
""Train_Num"" text,
""Name"" text,
""From"" text,
""Arrival"" text,
""Railway_ID"" int,
PRIMARY KEY (""Train_ID""),
FOREIGN KEY (""Railway_ID"") REFERENCES `railway`(""Railway_ID"")
)"
railway,manager,"CREATE TABLE ""manager"" (
""Manager_ID"" int,
""Name"" text,
""Country"" text,
""Working_year_starts"" text,
""Age"" int,
""Level"" int,
PRIMARY KEY (""Manager_ID"")
)"
railway,railway_manage,"CREATE TABLE ""railway_manage"" (
""Railway_ID"" int,
""Manager_ID"" int,
""From_Year"" text,
PRIMARY KEY (""Railway_ID"",""Manager_ID""),
FOREIGN KEY (""Manager_ID"") REFERENCES ""manager""(""Manager_ID""),
FOREIGN KEY (""Railway_ID"") REFERENCES ""railway""(""Railway_ID"")
)"
geo,state,"CREATE TABLE `state` (
  `state_name` text
,  `population` integer DEFAULT NULL
,  `area` double DEFAULT NULL
,  `country_name` varchar(3) NOT NULL DEFAULT ''
,  `capital` text
,  `density` double DEFAULT NULL
,  PRIMARY KEY (`state_name`)
)"
geo,city,"CREATE TABLE `city` (
  `city_name` text
,  `population` integer DEFAULT NULL
,  `country_name` varchar(3) NOT NULL DEFAULT ''
,  `state_name` text
,  PRIMARY KEY (`city_name`,`state_name`)
,  FOREIGN KEY(`state_name`) REFERENCES `state`(`state_name`)
)"
geo,border_info,"CREATE TABLE `border_info` (
  `state_name` text
,  `border` text
,  PRIMARY KEY (`border`,`state_name`)
,  FOREIGN KEY(`state_name`) REFERENCES `state`(`state_name`)
,  FOREIGN KEY(`border`) REFERENCES `state`(`state_name`)
)"
geo,highlow,"CREATE TABLE `highlow` (
  `state_name` text
,  `highest_elevation` text
,  `lowest_point` text
,  `highest_point` text
,  `lowest_elevation` text
,  PRIMARY KEY (`state_name`)
,  FOREIGN KEY(`state_name`) REFERENCES `state`(`state_name`)
)"
geo,lake,"CREATE TABLE `lake` (
  `lake_name` text
,  `area` double DEFAULT NULL
,  `country_name` varchar(3) NOT NULL DEFAULT ''
,  `state_name` text
)"
geo,mountain,"CREATE TABLE `mountain` (
  `mountain_name` text
,  `mountain_altitude` integer DEFAULT NULL
,  `country_name` varchar(3) NOT NULL DEFAULT ''
,  `state_name` text
,  PRIMARY KEY (`mountain_name`, `state_name`)
,  FOREIGN KEY(`state_name`) REFERENCES `state`(`state_name`)
)"
geo,river,"CREATE TABLE `river` (
  `river_name` text
,  `length` integer DEFAULT NULL
,  `country_name` varchar(3) NOT NULL DEFAULT ''
,  `traverse` text
,  PRIMARY KEY (`river_name`)
,  FOREIGN KEY(`traverse`) REFERENCES `state`(`state_name`)
)"
sakila_1,actor,"CREATE TABLE actor (
  actor_id SMALLINT UNSIGNED NOT NULL,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (actor_id)
)"
sakila_1,address,"CREATE TABLE address (
  address_id SMALLINT UNSIGNED NOT NULL,
  address VARCHAR(50) NOT NULL,
  address2 VARCHAR(50) DEFAULT NULL,
  district VARCHAR(20) NOT NULL,
  city_id SMALLINT UNSIGNED NOT NULL,
  postal_code VARCHAR(10) DEFAULT NULL,
  phone VARCHAR(20) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (address_id),
  FOREIGN KEY (city_id) REFERENCES city (city_id)
)"
sakila_1,category,"CREATE TABLE category (
  category_id TINYINT UNSIGNED NOT NULL,
  name VARCHAR(25) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (category_id)
)"
sakila_1,city,"CREATE TABLE city (
  city_id SMALLINT UNSIGNED NOT NULL,
  city VARCHAR(50) NOT NULL,
  country_id SMALLINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (city_id),
  FOREIGN KEY (country_id) REFERENCES country (country_id)
)"
sakila_1,country,"CREATE TABLE country (
  country_id SMALLINT UNSIGNED NOT NULL,
  country VARCHAR(50) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (country_id)
)"
sakila_1,customer,"CREATE TABLE customer (
  customer_id SMALLINT UNSIGNED NOT NULL,
  store_id TINYINT UNSIGNED NOT NULL,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  email VARCHAR(50) DEFAULT NULL,
  address_id SMALLINT UNSIGNED NOT NULL,
  active BOOLEAN NOT NULL DEFAULT TRUE,
  create_date DATETIME NOT NULL,
  last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (customer_id),
  FOREIGN KEY (address_id) REFERENCES address (address_id),
  FOREIGN KEY (store_id) REFERENCES store (store_id)
)"
sakila_1,film,"CREATE TABLE film (
  film_id SMALLINT UNSIGNED NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT DEFAULT NULL,
  release_year YEAR DEFAULT NULL,
  language_id TINYINT UNSIGNED NOT NULL,
  original_language_id TINYINT UNSIGNED DEFAULT NULL,
  rental_duration TINYINT UNSIGNED NOT NULL DEFAULT 3,
  rental_rate DECIMAL(4,2) NOT NULL DEFAULT 4.99,
  length SMALLINT UNSIGNED DEFAULT NULL,
  replacement_cost DECIMAL(5,2) NOT NULL DEFAULT 19.99,
  rating DEFAULT 'G',
  special_features DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (film_id),
  FOREIGN KEY (language_id) REFERENCES language (language_id),
  FOREIGN KEY (original_language_id) REFERENCES language (language_id)
)"
sakila_1,film_actor,"CREATE TABLE film_actor (
  actor_id SMALLINT UNSIGNED NOT NULL,
  film_id SMALLINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (actor_id,film_id),
 FOREIGN KEY (actor_id) REFERENCES actor (actor_id),
  FOREIGN KEY (film_id) REFERENCES film (film_id)
)"
sakila_1,film_category,"CREATE TABLE film_category (
  film_id SMALLINT UNSIGNED NOT NULL,
  category_id TINYINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (film_id, category_id),
  FOREIGN KEY (film_id) REFERENCES film (film_id),
  FOREIGN KEY (category_id) REFERENCES category (category_id)
)"
sakila_1,film_text,"CREATE TABLE film_text (
  film_id SMALLINT NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  PRIMARY KEY  (film_id)
)"
sakila_1,inventory,"CREATE TABLE inventory (
  inventory_id MEDIUMINT UNSIGNED NOT NULL,
  film_id SMALLINT UNSIGNED NOT NULL,
  store_id TINYINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (inventory_id),
  FOREIGN KEY (store_id) REFERENCES store (store_id),
  FOREIGN KEY (film_id) REFERENCES film (film_id)
)"
sakila_1,language,"CREATE TABLE language (
  language_id TINYINT UNSIGNED NOT NULL,
  name CHAR(20) NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (language_id)
)"
sakila_1,payment,"CREATE TABLE payment (
  payment_id SMALLINT UNSIGNED NOT NULL,
  customer_id SMALLINT UNSIGNED NOT NULL,
  staff_id TINYINT UNSIGNED NOT NULL,
  rental_id INT DEFAULT NULL,
  amount DECIMAL(5,2) NOT NULL,
  payment_date DATETIME NOT NULL,
  last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (payment_id),
  FOREIGN KEY (rental_id) REFERENCES rental (rental_id),
  FOREIGN KEY (customer_id) REFERENCES customer (customer_id),
  FOREIGN KEY (staff_id) REFERENCES staff (staff_id)
)"
sakila_1,rental,"CREATE TABLE rental (
  rental_id INT NOT NULL,
  rental_date DATETIME NOT NULL,
  inventory_id MEDIUMINT UNSIGNED NOT NULL,
  customer_id SMALLINT UNSIGNED NOT NULL,
  return_date DATETIME DEFAULT NULL,
  staff_id TINYINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (rental_id),
  FOREIGN KEY (staff_id) REFERENCES staff (staff_id),
  FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),
  FOREIGN KEY (customer_id) REFERENCES customer (customer_id)
)"
sakila_1,staff,"CREATE TABLE staff (
  staff_id TINYINT UNSIGNED NOT NULL,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  address_id SMALLINT UNSIGNED NOT NULL,
  picture BLOB DEFAULT NULL,
  email VARCHAR(50) DEFAULT NULL,
  store_id TINYINT UNSIGNED NOT NULL,
  active BOOLEAN NOT NULL DEFAULT TRUE,
  username VARCHAR(16) NOT NULL,
  password VARCHAR(40) DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (staff_id),
  --FOREIGN KEY (store_id) REFERENCES store (store_id),
  FOREIGN KEY (address_id) REFERENCES address (address_id)
)"
sakila_1,store,"CREATE TABLE store (
  store_id TINYINT UNSIGNED NOT NULL,
  manager_staff_id TINYINT UNSIGNED NOT NULL,
  address_id SMALLINT UNSIGNED NOT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY  (store_id),
  FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),
  FOREIGN KEY (address_id) REFERENCES address (address_id)
)"
movie_1,Movie,"CREATE TABLE Movie(
	mID int primary key, 
	title text, 
	year int, 
	director text
)"
movie_1,Reviewer,"CREATE TABLE Reviewer(
	rID int primary key, 
	name text)"
movie_1,Rating,"CREATE TABLE Rating(
	rID int, 
	mID int, 
	stars int, 
	ratingDate date,
	FOREIGN KEY (mID) references Movie(mID),
	FOREIGN KEY (rID) references Reviewer(rID)
)"
flight_company,airport,"CREATE TABLE ""airport"" (
""id"" int,
""City"" text,
""Country"" text,
""IATA"" text,
""ICAO"" text,
""name"" text,
primary key(""id"")
)"
flight_company,operate_company,"CREATE TABLE ""operate_company"" (
""id"" int,
""name"" text,
""Type"" text,
""Principal_activities"" text,
""Incorporated_in"" text,
""Group_Equity_Shareholding"" real,
primary key (""id"")
)"
flight_company,flight,"CREATE TABLE ""flight"" (
""id"" int,
""Vehicle_Flight_number"" text,
""Date"" text,
""Pilot"" text,
""Velocity"" real,
""Altitude"" real,
""airport_id"" int,
""company_id"" int,
primary key (""id""),
foreign key (""airport_id"") references `airport`(""id""),
foreign key (""company_id"") references `operate_company`(""id"")
)"
csu_1,Campuses,"CREATE TABLE ""Campuses"" (
	""Id"" INTEGER PRIMARY KEY, 
	""Campus"" TEXT, 
	""Location"" TEXT, 
	""County"" TEXT, 
	""Year"" INTEGER 
)"
csu_1,csu_fees,"CREATE TABLE ""csu_fees"" ( 
	""Campus"" INTEGER PRIMARY KEY, 
	""Year"" INTEGER, 
	""CampusFee"" INTEGER,
	FOREIGN KEY (Campus) REFERENCES Campuses(Id)
)"
csu_1,degrees,"CREATE TABLE ""degrees"" ( 
	""Year"" INTEGER,
	""Campus"" INTEGER, 
	""Degrees"" INTEGER,
	PRIMARY KEY (Year, Campus),
	FOREIGN KEY (Campus) REFERENCES Campuses(Id)
)"
csu_1,discipline_enrollments,"CREATE TABLE ""discipline_enrollments"" ( 
	""Campus"" INTEGER, 
	""Discipline"" INTEGER, 
	""Year"" INTEGER, 
	""Undergraduate"" INTEGER, 
	""Graduate"" INTEGER,
	PRIMARY KEY (Campus, Discipline),
	FOREIGN KEY (Campus) REFERENCES Campuses(Id)
)"
csu_1,enrollments,"CREATE TABLE ""enrollments"" ( 
	""Campus"" INTEGER, 
	""Year"" INTEGER, 
	""TotalEnrollment_AY"" INTEGER, 
	""FTE_AY"" INTEGER,
	PRIMARY KEY(Campus, Year),
	FOREIGN KEY (Campus) REFERENCES Campuses(Id)
)"
csu_1,faculty,"CREATE TABLE ""faculty"" ( 
	""Campus"" INTEGER, 
	""Year"" INTEGER, 
	""Faculty"" REAL,
	FOREIGN KEY (Campus) REFERENCES Campuses(Id) 
)"
company_employee,people,"CREATE TABLE ""people"" (
    ""People_ID"" int,
    ""Age"" int,
    ""Name"" text,
    ""Nationality"" text,
    ""Graduation_College"" text,
    PRIMARY KEY (""People_ID"")
)"
company_employee,company,"CREATE TABLE ""company"" (
    ""Company_ID"" real,
    ""Name"" text,
    ""Headquarters"" text,
    ""Industry"" text,
    ""Sales_in_Billion"" real,
    ""Profits_in_Billion"" real,
    ""Assets_in_Billion"" real,
    ""Market_Value_in_Billion"" real,
    PRIMARY KEY (""Company_ID"")
)"
company_employee,employment,"CREATE TABLE ""employment"" (
    ""Company_ID"" int,
    ""People_ID"" int,
    ""Year_working"" int,
    PRIMARY KEY (""Company_ID"",""People_ID""),
    FOREIGN KEY (""Company_ID"") REFERENCES `company`(""Company_ID""),
    FOREIGN KEY (""People_ID"") REFERENCES `people`(""People_ID"")
)"
orchestra,conductor,"CREATE TABLE ""conductor"" (
""Conductor_ID"" int,
""Name"" text,
""Age"" int,
""Nationality"" text,
""Year_of_Work"" int,
PRIMARY KEY (""Conductor_ID"")
)"
orchestra,orchestra,"CREATE TABLE ""orchestra"" (
""Orchestra_ID"" int,
""Orchestra"" text,
""Conductor_ID"" int,
""Record_Company"" text,
""Year_of_Founded"" real,
""Major_Record_Format"" text,
PRIMARY KEY (""Orchestra_ID""),
FOREIGN KEY (`Conductor_ID`) REFERENCES `conductor`(`Conductor_ID`)
)"
orchestra,performance,"CREATE TABLE ""performance"" (
""Performance_ID"" int,
""Orchestra_ID"" int,
""Type"" text,
""Date"" text,
""Official_ratings_(millions)"" real,
""Weekly_rank"" text,
""Share"" text,
PRIMARY KEY (""Performance_ID""),
FOREIGN KEY (`Orchestra_ID`) REFERENCES `orchestra`(`Orchestra_ID`)
)"
orchestra,show,"CREATE TABLE ""show"" (
""Show_ID"" int,
""Performance_ID"" int,
""If_first_show"" bool,
""Result"" text,
""Attendance"" real,
FOREIGN KEY (`Performance_ID`) REFERENCES `performance`(`Performance_ID`)
)"
car_1,continents,"CREATE TABLE ""continents"" ( 
	""ContId"" INTEGER PRIMARY KEY, 
	""Continent"" TEXT 
)"
car_1,countries,"CREATE TABLE ""countries"" (
	""CountryId"" INTEGER PRIMARY KEY, 
	""CountryName"" TEXT, 
	""Continent"" INTEGER,
	FOREIGN KEY (Continent) REFERENCES continents(ContId)
)"
car_1,car_makers,"CREATE TABLE ""car_makers"" ( 
	""Id"" INTEGER PRIMARY KEY, 
	""Maker"" TEXT, 
	""FullName"" TEXT, 
	""Country"" TEXT,
	FOREIGN KEY (Country) REFERENCES countries(CountryId)
)"
car_1,model_list,"CREATE TABLE ""model_list"" ( 
	""ModelId"" INTEGER PRIMARY KEY, 
	""Maker"" INTEGER, 
	""Model"" TEXT UNIQUE,
	FOREIGN KEY (Maker) REFERENCES car_makers (Id)

)"
car_1,car_names,"CREATE TABLE ""car_names"" ( 
	""MakeId"" INTEGER PRIMARY KEY, 
	""Model"" TEXT, 
	""Make"" TEXT,
	FOREIGN KEY (Model) REFERENCES model_list (Model)
)"
car_1,cars_data,"CREATE TABLE ""cars_data"" (
	""Id"" INTEGER PRIMARY KEY, 
	""MPG"" TEXT, 
	""Cylinders"" INTEGER, 
	""Edispl"" REAL, 
	""Horsepower"" TEXT, 
	""Weight"" INTEGER, 
	""Accelerate"" REAL, 
	""Year"" INTEGER,
	FOREIGN KEY (Id) REFERENCES car_names (MakeId)
)"
customers_card_transactions,Accounts,"CREATE TABLE `Accounts` (
`account_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`account_name` VARCHAR(50),
`other_account_details` VARCHAR(255)
)"
customers_card_transactions,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`customer_first_name` VARCHAR(20),
`customer_last_name` VARCHAR(20),
`customer_address` VARCHAR(255),
`customer_phone` VARCHAR(255),
`customer_email` VARCHAR(255),
`other_customer_details` VARCHAR(255)
)"
customers_card_transactions,Customers_Cards,"CREATE TABLE `Customers_Cards` (
`card_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`card_type_code` VARCHAR(15) NOT NULL,
`card_number` VARCHAR(80),
`date_valid_from` DATETIME,
`date_valid_to` DATETIME,
`other_card_details` VARCHAR(255)
)"
customers_card_transactions,Financial_Transactions,"CREATE TABLE `Financial_Transactions` (
`transaction_id` INTEGER NOT NULL ,
`previous_transaction_id` INTEGER,
`account_id` INTEGER NOT NULL,
`card_id` INTEGER NOT NULL,
`transaction_type` VARCHAR(15) NOT NULL,
`transaction_date` DATETIME,
`transaction_amount` DOUBLE NULL,
`transaction_comment` VARCHAR(255),
`other_transaction_details` VARCHAR(255),
FOREIGN KEY (`card_id` ) REFERENCES `Customers_Cards`(`card_id` ),
FOREIGN KEY (`account_id` ) REFERENCES `Accounts`(`account_id` )
)"
machine_repair,repair,"CREATE TABLE ""repair"" (
""repair_ID"" int,
""name"" text,
""Launch_Date"" text,
""Notes"" text,
PRIMARY KEY (""repair_ID"")
)"
machine_repair,machine,"CREATE TABLE ""machine"" (
""Machine_ID"" int,
""Making_Year"" int,
""Class"" text,
""Team"" text,
""Machine_series"" text,
""value_points"" real,
""quality_rank"" int,
PRIMARY KEY (""Machine_ID"")
)"
machine_repair,technician,"CREATE TABLE ""technician"" (
""technician_id"" real,
""Name"" text,
""Team"" text,
""Starting_Year"" real,
""Age"" int,
PRIMARY Key (""technician_id"")
)"
machine_repair,repair_assignment,"CREATE TABLE ""repair_assignment"" (
""technician_id"" int,
""repair_ID"" int,
""Machine_ID"" int,
PRIMARY Key (""technician_id"",""repair_ID"",""Machine_ID""),
FOREIGN KEY (`technician_id`) REFERENCES `technician`(`technician_id`),
FOREIGN KEY (`repair_ID`) REFERENCES `repair`(`repair_ID`),
FOREIGN KEY (`Machine_ID`) REFERENCES `machine`(`Machine_ID`)
)"
shop_membership,member,"CREATE TABLE ""member"" (
""Member_ID"" int,
""Card_Number"" text,
""Name"" text,
""Hometown"" text,
""Level"" int,
PRIMARY KEY (""Member_ID"")
)"
shop_membership,branch,"CREATE TABLE ""branch"" (
""Branch_ID"" int,
""Name"" text,
""Open_year"" text,
""Address_road"" text,
""City"" text,
""membership_amount"" text,
PRIMARY KEY (""Branch_ID"")
)"
shop_membership,membership_register_branch,"CREATE TABLE ""membership_register_branch"" (
""Member_ID"" int,
""Branch_ID"" text,
""Register_Year"" text,
PRIMARY KEY (""Member_ID""),
FOREIGN KEY (""Member_ID"") REFERENCES ""member""(""Member_ID""),
FOREIGN KEY (""Branch_ID"") REFERENCES ""branch""(""Branch_ID"")
)"
shop_membership,purchase,"CREATE TABLE ""purchase"" (
""Member_ID"" int,
""Branch_ID"" text,
""Year"" text,
""Total_pounds"" real,
PRIMARY KEY (""Member_ID"",""Branch_ID"",""Year""),
FOREIGN KEY (""Member_ID"") REFERENCES ""member""(""Member_ID""),
FOREIGN KEY (""Branch_ID"") REFERENCES ""branch""(""Branch_ID"")
)"
wrestler,wrestler,"CREATE TABLE ""wrestler"" (
""Wrestler_ID"" int,
""Name"" text,
""Reign"" text,
""Days_held"" text,
""Location"" text,
""Event"" text,
PRIMARY KEY (""Wrestler_ID"")
)"
wrestler,Elimination,"CREATE TABLE ""Elimination"" (
""Elimination_ID"" text,
""Wrestler_ID"" text,
""Team"" text,
""Eliminated_By"" text,
""Elimination_Move"" text,
""Time"" text,
PRIMARY KEY (""Elimination_ID""),
FOREIGN KEY (""Wrestler_ID"") REFERENCES ""wrestler""(""Wrestler_ID"")
)"
performance_attendance,member,"CREATE TABLE ""member"" (
    ""Member_ID"" text,
    ""Name"" text,
    ""Nationality"" text,
    ""Role"" text,
    PRIMARY KEY (""Member_ID"")
)"
performance_attendance,performance,"CREATE TABLE ""performance"" (
    ""Performance_ID"" real,
    ""Date"" text,
    ""Host"" text,
    ""Location"" text,
    ""Attendance"" int,
    PRIMARY KEY (""Performance_ID"")
)"
performance_attendance,member_attendance,"CREATE TABLE ""member_attendance"" (
    ""Member_ID"" int,
    ""Performance_ID"" int,
    ""Num_of_Pieces"" int,
    PRIMARY KEY (""Member_ID"",""Performance_ID""),
    FOREIGN KEY (""Member_ID"") REFERENCES `member`(""Member_ID""),
    FOREIGN KEY (""Performance_ID"") REFERENCES `performance`(""Performance_ID"")
)"
debate,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""District"" text,
""Name"" text,
""Party"" text,
""Age"" int,
PRIMARY KEY (""People_ID"")
)"
debate,debate,"CREATE TABLE ""debate"" (
""Debate_ID"" int,
""Date"" text,
""Venue"" text,
""Num_of_Audience"" int,
PRIMARY KEY (""Debate_ID"")
)"
debate,debate_people,"CREATE TABLE ""debate_people"" (
""Debate_ID"" int,
""Affirmative"" int,
""Negative"" int,
""If_Affirmative_Win"" bool,
PRIMARY KEY (""Debate_ID"",""Affirmative"",""Negative""),
FOREIGN KEY (""Debate_ID"") REFERENCES `debate`(""Debate_ID""),
FOREIGN KEY (""Affirmative"") REFERENCES `people`(""People_ID""),
FOREIGN KEY (""Negative"") REFERENCES `people`(""People_ID"")
)"
icfp_1,Inst,"CREATE TABLE Inst (
  instID INTEGER,
  name TEXT,
  country TEXT, -- the home country of the institution (this is obviously an impoverished model)
  PRIMARY KEY (instID)
)"
icfp_1,Authors,"CREATE TABLE Authors (
  authID INTEGER,
  lname TEXT,
  fname TEXT,
  PRIMARY KEY (authID)
)"
icfp_1,Papers,"CREATE TABLE Papers (
  paperID INTEGER,
  title TEXT,
  PRIMARY KEY (paperID)
)"
icfp_1,Authorship,"CREATE TABLE Authorship (
  authID INTEGER,
  instID INTEGER,
  paperID INTEGER,
  authOrder INTEGER,
  PRIMARY KEY (authID, instID, paperID),
  FOREIGN KEY (authID) REFERENCES Authors (authID),
  FOREIGN KEY (instID) REFERENCES Inst (instID),
  FOREIGN KEY (paperID) REFERENCES Papers (paperID)
)"
e_learning,Course_Authors_and_Tutors,"CREATE TABLE `Course_Authors_and_Tutors` (
`author_id` INTEGER PRIMARY KEY,
`author_tutor_ATB` VARCHAR(3),
`login_name` VARCHAR(40),
`password` VARCHAR(40),
`personal_name` VARCHAR(80),
`middle_name` VARCHAR(80),
`family_name` VARCHAR(80),
`gender_mf` VARCHAR(1),
`address_line_1` VARCHAR(80)
)"
e_learning,Students,"CREATE TABLE `Students` (
`student_id` INTEGER PRIMARY KEY,
`date_of_registration` DATETIME,
`date_of_latest_logon` DATETIME,
`login_name` VARCHAR(40),
`password` VARCHAR(10),
`personal_name` VARCHAR(40),
`middle_name` VARCHAR(40),
`family_name` VARCHAR(40)
)"
e_learning,Subjects,"CREATE TABLE `Subjects` (
`subject_id` INTEGER PRIMARY KEY,
`subject_name` VARCHAR(120)
)"
e_learning,Courses,"CREATE TABLE `Courses` (
`course_id` INTEGER PRIMARY KEY,
`author_id` INTEGER NOT NULL,
`subject_id` INTEGER NOT NULL,
`course_name` VARCHAR(120),
`course_description` VARCHAR(255),
FOREIGN KEY (`author_id` ) REFERENCES `Course_Authors_and_Tutors`(`author_id` ),
FOREIGN KEY (`subject_id` ) REFERENCES `Subjects`(`subject_id` )
)"
e_learning,Student_Course_Enrolment,"CREATE TABLE `Student_Course_Enrolment` (
`registration_id` INTEGER PRIMARY KEY,
`student_id` INTEGER NOT NULL,
`course_id` INTEGER NOT NULL,
`date_of_enrolment` DATETIME NOT NULL,
`date_of_completion` DATETIME NOT NULL,
FOREIGN KEY (`course_id` ) REFERENCES `Courses`(`course_id` ),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )
)"
e_learning,Student_Tests_Taken,"CREATE TABLE `Student_Tests_Taken` (
`registration_id` INTEGER NOT NULL,
`date_test_taken` DATETIME NOT NULL,
`test_result` VARCHAR(255),
FOREIGN KEY (`registration_id` ) REFERENCES `Student_Course_Enrolment`(`registration_id` )
)"
customer_deliveries,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_name` VARCHAR(20),
`product_price` DECIMAL(19,4),
`product_description` VARCHAR(255)
)"
customer_deliveries,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`address_details` VARCHAR(80),
`city` VARCHAR(50),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50)
)"
customer_deliveries,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`payment_method` VARCHAR(10) NOT NULL,
`customer_name` VARCHAR(80),
`customer_phone` VARCHAR(80),
`customer_email` VARCHAR(80),
`date_became_customer` DATETIME
)"
customer_deliveries,Regular_Orders,"CREATE TABLE `Regular_Orders` (
`regular_order_id` INTEGER PRIMARY KEY,
`distributer_id` INTEGER NOT NULL,
FOREIGN KEY (`distributer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customer_deliveries,Regular_Order_Products,"CREATE TABLE `Regular_Order_Products` (
`regular_order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`regular_order_id` ) REFERENCES `Regular_Orders`(`regular_order_id` )
)"
customer_deliveries,Actual_Orders,"CREATE TABLE `Actual_Orders` (
`actual_order_id` INTEGER PRIMARY KEY,
`order_status_code` VARCHAR(10) NOT NULL,
`regular_order_id` INTEGER NOT NULL,
`actual_order_date` DATETIME,
FOREIGN KEY (`regular_order_id` ) REFERENCES `Regular_Orders`(`regular_order_id` )
)"
customer_deliveries,Actual_Order_Products,"CREATE TABLE `Actual_Order_Products` (
`actual_order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`actual_order_id` ) REFERENCES `Actual_Orders`(`actual_order_id` )
)"
customer_deliveries,Customer_Addresses,"CREATE TABLE `Customer_Addresses` (
`customer_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_from` DATETIME NOT NULL,
`address_type` VARCHAR(10) NOT NULL,
`date_to` DATETIME,
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` ),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` )
)"
customer_deliveries,Delivery_Routes,"CREATE TABLE `Delivery_Routes` (
`route_id` INTEGER PRIMARY KEY,
`route_name` VARCHAR(50),
`other_route_details` VARCHAR(255)
)"
customer_deliveries,Delivery_Route_Locations,"CREATE TABLE `Delivery_Route_Locations` (
`location_code` VARCHAR(10) PRIMARY KEY,
`route_id` INTEGER NOT NULL,
`location_address_id` INTEGER NOT NULL,
`location_name` VARCHAR(50),
FOREIGN KEY (`location_address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`route_id` ) REFERENCES `Delivery_Routes`(`route_id` )
)"
customer_deliveries,Trucks,"CREATE TABLE `Trucks` (
`truck_id` INTEGER PRIMARY KEY,
`truck_licence_number` VARCHAR(20),
`truck_details` VARCHAR(255)
)"
customer_deliveries,Employees,"CREATE TABLE `Employees` (
`employee_id` INTEGER PRIMARY KEY,
`employee_address_id` INTEGER NOT NULL,
`employee_name` VARCHAR(80),
`employee_phone` VARCHAR(80),
FOREIGN KEY (`employee_address_id` ) REFERENCES `Addresses`(`address_id` )
)"
customer_deliveries,Order_Deliveries,"CREATE TABLE `Order_Deliveries` (
`location_code` VARCHAR(10) NOT NULL,
`actual_order_id` INTEGER NOT NULL,
`delivery_status_code` VARCHAR(10) NOT NULL,
`driver_employee_id` INTEGER NOT NULL,
`truck_id` INTEGER NOT NULL,
`delivery_date` DATETIME,
FOREIGN KEY (`truck_id` ) REFERENCES `Trucks`(`truck_id` ),
FOREIGN KEY (`actual_order_id` ) REFERENCES `Actual_Orders`(`actual_order_id` ),
FOREIGN KEY (`location_code` ) REFERENCES `Delivery_Route_Locations`(`location_code` ),
FOREIGN KEY (`driver_employee_id` ) REFERENCES `Employees`(`employee_id` )
)"
academic,author,"CREATE TABLE ""author"" (
""aid"" int,
""homepage"" text,
""name"" text,
""oid"" int,
primary key(""aid"")
)"
academic,conference,"CREATE TABLE ""conference"" (
""cid"" int,
""homepage"" text,
""name"" text,
primary key (""cid"")
)"
academic,domain,"CREATE TABLE ""domain"" (
""did"" int,
""name"" text,
primary key (""did"")
)"
academic,domain_author,"CREATE TABLE ""domain_author"" (
""aid"" int, 
""did"" int,
primary key (""did"", ""aid""),
foreign key(""aid"") references `author`(""aid""),
foreign key(""did"") references `domain`(""did"")
)"
academic,domain_conference,"CREATE TABLE ""domain_conference"" (
""cid"" int,
""did"" int,
primary key (""did"", ""cid""),
foreign key(""cid"") references `conference`(""cid""),
foreign key(""did"") references `domain`(""did"")
)"
academic,journal,"CREATE TABLE ""journal"" (
""homepage"" text,
""jid"" int,
""name"" text,
primary key(""jid"")
)"
academic,domain_journal,"CREATE TABLE ""domain_journal"" (
""did"" int,
""jid"" int,
primary key (""did"", ""jid""),
foreign key(""jid"") references ""journal""(""jid""),
foreign key(""did"") references ""domain""(""did"")
)"
academic,keyword,"CREATE TABLE ""keyword"" (
""keyword"" text,
""kid"" int,
primary key(""kid"")
)"
academic,domain_keyword,"CREATE TABLE ""domain_keyword"" (
""did"" int,
""kid"" int,
primary key (""did"", ""kid""),
foreign key(""kid"") references ""keyword""(""kid""),
foreign key(""did"") references ""domain""(""did"")
)"
academic,publication,"CREATE TABLE ""publication"" (
""abstract"" text,
""cid"" text,
""citation_num"" int,
""jid"" int,
""pid"" int,
""reference_num"" int,
""title"" text,
""year"" int,
primary key(""pid""),
foreign key(""jid"") references ""journal""(""jid""),
foreign key(""cid"") references ""conference""(""cid"")
)"
academic,domain_publication,"CREATE TABLE ""domain_publication"" (
""did"" int,
""pid"" int,
primary key (""did"", ""pid""),
foreign key(""pid"") references ""publication""(""pid""),
foreign key(""did"") references ""domain""(""did"")
)"
academic,organization,"CREATE TABLE ""organization"" (
""continent"" text,
""homepage"" text,
""name"" text,
""oid"" int,
primary key(""oid"")
)"
academic,publication_keyword,"CREATE TABLE ""publication_keyword"" (
""pid"" int,
""kid"" int,
primary key (""kid"", ""pid""),
foreign key(""pid"") references ""publication""(""pid""),
foreign key(""kid"") references ""keyword""(""kid"")
)"
academic,writes,"CREATE TABLE ""writes"" (
""aid"" int,
""pid"" int,
primary key (""aid"", ""pid""),
foreign key(""pid"") references ""publication""(""pid""),
foreign key(""aid"") references ""author""(""aid"")
)"
academic,cite,"CREATE TABLE ""cite"" (
""cited"" int,
""citing""  int,
foreign key(""cited"") references ""publication""(""pid""),
foreign key(""citing"") references ""publication""(""pid"")
)"
cre_Doc_Tracking_DB,Ref_Document_Types,"CREATE TABLE Ref_Document_Types (
Document_Type_Code CHAR(15) NOT NULL,
Document_Type_Name VARCHAR(255) NOT NULL,
Document_Type_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Document_Type_Code)
)"
cre_Doc_Tracking_DB,Ref_Calendar,"CREATE TABLE Ref_Calendar (
Calendar_Date DATETIME NOT NULL,
Day_Number INTEGER,
PRIMARY KEY (Calendar_Date)
)"
cre_Doc_Tracking_DB,Ref_Locations,"CREATE TABLE Ref_Locations (
Location_Code CHAR(15) NOT NULL,
Location_Name VARCHAR(255) NOT NULL,
Location_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Location_Code)
)"
cre_Doc_Tracking_DB,Roles,"CREATE TABLE Roles (
Role_Code CHAR(15) NOT NULL,
Role_Name VARCHAR(255),
Role_Description VARCHAR(255),
PRIMARY KEY (Role_Code)
)"
cre_Doc_Tracking_DB,All_Documents,"CREATE TABLE All_Documents (
Document_ID INTEGER NOT NULL,
Date_Stored DATETIME,
Document_Type_Code CHAR(15) NOT NULL,
Document_Name CHAR(255),
Document_Description CHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Document_ID),
FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code),
FOREIGN KEY (Date_Stored) REFERENCES Ref_Calendar (Calendar_Date)
)"
cre_Doc_Tracking_DB,Employees,"CREATE TABLE Employees (
Employee_ID INTEGER NOT NULL,
Role_Code CHAR(15) NOT NULL,
Employee_Name VARCHAR(255),
Gender_MFU CHAR(1) NOT NULL,
Date_of_Birth DATETIME NOT NULL,
Other_Details VARCHAR(255),
PRIMARY KEY (Employee_ID),
FOREIGN KEY (Role_Code) REFERENCES Roles (Role_Code)
)"
cre_Doc_Tracking_DB,Document_Locations,"CREATE TABLE Document_Locations (
Document_ID INTEGER NOT NULL,
Location_Code CHAR(15) NOT NULL,
Date_in_Location_From DATETIME NOT NULL,
Date_in_Locaton_To DATETIME,
PRIMARY KEY (Document_ID, Location_Code, Date_in_Location_From),
FOREIGN KEY (Location_Code) REFERENCES Ref_Locations (Location_Code),
FOREIGN KEY (Date_in_Location_From) REFERENCES Ref_Calendar (Calendar_Date),
FOREIGN KEY (Date_in_Locaton_To) REFERENCES Ref_Calendar (Calendar_Date),
FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID)
)"
cre_Doc_Tracking_DB,Documents_to_be_Destroyed,"CREATE TABLE Documents_to_be_Destroyed (
Document_ID INTEGER NOT NULL,
Destruction_Authorised_by_Employee_ID INTEGER,
Destroyed_by_Employee_ID INTEGER,
Planned_Destruction_Date DATETIME,
Actual_Destruction_Date DATETIME,
Other_Details VARCHAR(255),
PRIMARY KEY (Document_ID),
FOREIGN KEY (Destroyed_by_Employee_ID) REFERENCES Employees (Employee_ID),
FOREIGN KEY (Destruction_Authorised_by_Employee_ID) REFERENCES Employees (Employee_ID),
FOREIGN KEY (Planned_Destruction_Date) REFERENCES Ref_Calendar (Calendar_Date),
FOREIGN KEY (Actual_Destruction_Date) REFERENCES Ref_Calendar (Calendar_Date),
FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID)
)"
entertainment_awards,festival_detail,"CREATE TABLE ""festival_detail"" (
""Festival_ID"" int,
""Festival_Name"" text,
""Chair_Name"" text,
""Location"" text,
""Year"" int,
""Num_of_Audience"" int,
PRIMARY KEY (""Festival_ID"")
)"
entertainment_awards,artwork,"CREATE TABLE artwork (
""Artwork_ID"" int,
""Type"" text,
""Name"" text,
PRIMARY KEY (""Artwork_ID"")
)"
entertainment_awards,nomination,"CREATE TABLE nomination (
""Artwork_ID"" int,
""Festival_ID"" int,
""Result"" text,
PRIMARY KEY (""Artwork_ID"",""Festival_ID""),
FOREIGN KEY (""Artwork_ID"") REFERENCES `artwork`(""Artwork_ID""),
FOREIGN KEY (""Festival_ID"") REFERENCES `festival_detail`(""Festival_ID"")
)"
department_store,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`address_details` VARCHAR(255)
)"
department_store,Staff,"CREATE TABLE `Staff` (
`staff_id` INTEGER PRIMARY KEY,
`staff_gender` VARCHAR(1),
`staff_name` VARCHAR(80)
)"
department_store,Suppliers,"CREATE TABLE `Suppliers` (
`supplier_id` INTEGER PRIMARY KEY,
`supplier_name` VARCHAR(80),
`supplier_phone` VARCHAR(80)
)"
department_store,Department_Store_Chain,"CREATE TABLE `Department_Store_Chain` (
`dept_store_chain_id` INTEGER PRIMARY KEY,
`dept_store_chain_name` VARCHAR(80)
)"
department_store,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`payment_method_code` VARCHAR(10) NOT NULL,
`customer_code` VARCHAR(20),
`customer_name` VARCHAR(80),
`customer_address` VARCHAR(255),
`customer_phone` VARCHAR(80),
`customer_email` VARCHAR(80)
)"
department_store,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_type_code` VARCHAR(10) NOT NULL,
`product_name` VARCHAR(80),
`product_price` DECIMAL(19,4)
)"
department_store,Supplier_Addresses,"CREATE TABLE `Supplier_Addresses` (
`supplier_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_from` DATETIME NOT NULL,
`date_to` DATETIME,
PRIMARY KEY (`supplier_id`, `address_id`),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`supplier_id` ) REFERENCES `Suppliers`(`supplier_id` )
)"
department_store,Customer_Addresses,"CREATE TABLE `Customer_Addresses` (
`customer_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_from` DATETIME NOT NULL,
`date_to` DATETIME,
PRIMARY KEY (`customer_id`, `address_id`),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
department_store,Customer_Orders,"CREATE TABLE `Customer_Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`order_status_code` VARCHAR(10) NOT NULL,
`order_date` DATETIME NOT NULL,
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
department_store,Department_Stores,"CREATE TABLE `Department_Stores` (
`dept_store_id` INTEGER PRIMARY KEY,
`dept_store_chain_id` INTEGER,
`store_name` VARCHAR(80),
`store_address` VARCHAR(255),
`store_phone` VARCHAR(80),
`store_email` VARCHAR(80),
FOREIGN KEY (`dept_store_chain_id` ) REFERENCES `Department_Store_Chain`(`dept_store_chain_id` )
)"
department_store,Departments,"CREATE TABLE `Departments` (
`department_id` INTEGER PRIMARY KEY,
`dept_store_id` INTEGER NOT NULL,
`department_name` VARCHAR(80),
FOREIGN KEY (`dept_store_id` ) REFERENCES `Department_Stores`(`dept_store_id` )
)"
department_store,Order_Items,"CREATE TABLE `Order_Items` (
`order_item_id` INTEGER PRIMARY KEY,
`order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
FOREIGN KEY (`order_id` ) REFERENCES `Customer_Orders`(`order_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` )
)"
department_store,Product_Suppliers,"CREATE TABLE `Product_Suppliers` (
`product_id` INTEGER NOT NULL,
`supplier_id` INTEGER NOT NULL,
`date_supplied_from` DATETIME NOT NULL,
`date_supplied_to` DATETIME,
`total_amount_purchased` VARCHAR(80),
`total_value_purchased` DECIMAL(19,4),
PRIMARY KEY (`product_id`, `supplier_id`),
FOREIGN KEY (`supplier_id` ) REFERENCES `Suppliers`(`supplier_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` )
)"
department_store,Staff_Department_Assignments,"CREATE TABLE `Staff_Department_Assignments` (
`staff_id` INTEGER NOT NULL,
`department_id` INTEGER NOT NULL,
`date_assigned_from` DATETIME NOT NULL,
`job_title_code` VARCHAR(10) NOT NULL,
`date_assigned_to` DATETIME,
PRIMARY KEY (`staff_id`, `department_id`),
FOREIGN KEY (`department_id` ) REFERENCES `Departments`(`department_id` ),
FOREIGN KEY (`staff_id` ) REFERENCES `Staff`(`staff_id` )
)"
customers_and_products_contacts,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`line_1_number_building` VARCHAR(80),
`city` VARCHAR(50),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50)
)"
customers_and_products_contacts,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_type_code` VARCHAR(15),
`product_name` VARCHAR(80),
`product_price` DOUBLE NULL
)"
customers_and_products_contacts,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`payment_method_code` VARCHAR(15),
`customer_number` VARCHAR(20),
`customer_name` VARCHAR(80),
`customer_address` VARCHAR(255),
`customer_phone` VARCHAR(80),
`customer_email` VARCHAR(80)
)"
customers_and_products_contacts,Contacts,"CREATE TABLE `Contacts` (
`contact_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`gender` VARCHAR(1),
`first_name` VARCHAR(80),
`last_name` VARCHAR(50),
`contact_phone` VARCHAR(80)
)"
customers_and_products_contacts,Customer_Address_History,"CREATE TABLE `Customer_Address_History` (
`customer_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_from` DATETIME NOT NULL,
`date_to` DATETIME,
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` ),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` )
)"
customers_and_products_contacts,Customer_Orders,"CREATE TABLE `Customer_Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`order_date` DATETIME NOT NULL,
`order_status_code` VARCHAR(15),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_products_contacts,Order_Items,"CREATE TABLE `Order_Items` (
`order_item_id` INTEGER NOT NULL ,
`order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`order_quantity` VARCHAR(80),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`order_id` ) REFERENCES `Customer_Orders`(`order_id` )
)"
voter_2,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
voter_2,Voting_record,"CREATE TABLE Voting_record (
       StuID    	INTEGER,
       Registration_Date		VARCHAR(12),
       Election_Cycle		VARCHAR(12),
       President_Vote		INTEGER,
       Vice_President_Vote		INTEGER,
       Secretary_Vote		INTEGER,
       Treasurer_Vote		INTEGER,
       Class_President_Vote		INTEGER,
       Class_Senator_Vote		INTEGER,
       FOREIGN KEY(StuID) REFERENCES Student(StuID), 
       FOREIGN KEY(President_Vote) REFERENCES Student(StuID),
       FOREIGN KEY(Vice_President_Vote) REFERENCES Student(StuID),
       FOREIGN KEY(Secretary_Vote) REFERENCES Student(StuID),
       FOREIGN KEY(Treasurer_Vote) REFERENCES Student(StuID),
       FOREIGN KEY(Class_President_Vote) REFERENCES Student(StuID),
       FOREIGN KEY(Class_Senator_Vote) REFERENCES Student(StuID)
)"
driving_school,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`line_1_number_building` VARCHAR(80),
`city` VARCHAR(50),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50)
)"
driving_school,Staff,"CREATE TABLE `Staff` (
`staff_id` INTEGER PRIMARY KEY,
`staff_address_id` INTEGER NOT NULL,
`nickname` VARCHAR(80),
`first_name` VARCHAR(80),
`middle_name` VARCHAR(80),
`last_name` VARCHAR(80),
`date_of_birth` DATETIME,
`date_joined_staff` DATETIME,
`date_left_staff` DATETIME,
FOREIGN KEY (`staff_address_id` ) REFERENCES `Addresses`(`address_id` )
)"
driving_school,Vehicles,"CREATE TABLE `Vehicles` (
`vehicle_id` INTEGER PRIMARY KEY,
`vehicle_details` VARCHAR(255)
)"
driving_school,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`customer_address_id` INTEGER NOT NULL,
`customer_status_code` VARCHAR(15) NOT NULL,
`date_became_customer` DATETIME,
`date_of_birth` DATETIME,
`first_name` VARCHAR(80),
`last_name` VARCHAR(80),
`amount_outstanding` DOUBLE NULL,
`email_address` VARCHAR(250),
`phone_number` VARCHAR(255),
`cell_mobile_phone_number` VARCHAR(255),
FOREIGN KEY (`customer_address_id` ) REFERENCES `Addresses`(`address_id` )
)"
driving_school,Customer_Payments,"CREATE TABLE `Customer_Payments` (
`customer_id` INTEGER NOT NULL,
`datetime_payment` DATETIME NOT NULL,
`payment_method_code` VARCHAR(10) NOT NULL,
`amount_payment` DOUBLE NULL,
PRIMARY KEY (`customer_id`,`datetime_payment`),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
driving_school,Lessons,"CREATE TABLE `Lessons` (
`lesson_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`lesson_status_code` VARCHAR(15) NOT NULL,
`staff_id` INTEGER,
`vehicle_id` INTEGER NOT NULL,
`lesson_date` DATETIME,
`lesson_time` VARCHAR(10),
`price` DOUBLE NULL,
FOREIGN KEY (`vehicle_id` ) REFERENCES `Vehicles`(`vehicle_id` ),
FOREIGN KEY (`staff_id` ) REFERENCES `Staff`(`staff_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
school_finance,School,"CREATE TABLE ""School"" (
""School_id"" text,
""School_name"" text,
""Location"" text,
""Mascot"" text,
""Enrollment"" int,
""IHSAA_Class"" text,
""IHSAA_Football_Class"" text,
""County"" text,
PRIMARY KEY (""School_id"")
)"
school_finance,budget,"CREATE TABLE ""budget"" (
""School_id"" int,
""Year"" int,
""Budgeted"" int,
""total_budget_percent_budgeted"" real,
""Invested"" int,
""total_budget_percent_invested"" real,
""Budget_invested_percent"" text,
PRIMARY KEY(""School_id"",""YEAR""),
FOREIGN KEY(""School_id"") REFERENCES ""School""(""School_id"")

)"
school_finance,endowment,"CREATE TABLE ""endowment"" (
""endowment_id"" int,
""School_id"" int,
""donator_name"" text,
""amount"" real,
PRIMARY KEY(""endowment_id""),
FOREIGN KEY(""School_id"") REFERENCES ""School""(""School_id"")
)"
roller_coaster,roller_coaster,"CREATE TABLE ""roller_coaster"" (
""Roller_Coaster_ID"" int,
""Name"" text,
""Park"" text,
""Country_ID"" int,
""Length"" real,
""Height"" real,
""Speed"" text,
""Opened"" text,
""Status"" text,
PRIMARY KEY (""Roller_Coaster_ID""),
FOREIGN KEY (""Country_ID"") REFERENCES `country`(""Country_ID"")
)"
roller_coaster,country,"CREATE TABLE ""country"" (
""Country_ID"" int,
""Name"" text,
""Population"" int,
""Area"" int,
""Languages"" text,
PRIMARY KEY (""Country_ID"")
)"
journal_committee,journal,"CREATE TABLE ""journal"" (
""Journal_ID"" int,
""Date"" text,
""Theme"" text,
""Sales"" int,
PRIMARY KEY (""Journal_ID"")
)"
journal_committee,editor,"CREATE TABLE ""editor"" (
""Editor_ID"" int,
""Name"" text,
""Age"" real,
PRIMARY KEY (""Editor_ID"")
)"
journal_committee,journal_committee,"CREATE TABLE ""journal_committee"" (
""Editor_ID"" int,
""Journal_ID"" int,
""Work_Type"" text,
PRIMARY KEY (""Editor_ID"",""Journal_ID""),
FOREIGN KEY (""Editor_ID"") REFERENCES `editor`(""Editor_ID""),
FOREIGN KEY (""Journal_ID"") REFERENCES `journal`(""Journal_ID"")
)"
flight_4,routes,"CREATE TABLE routes (
   rid integer PRIMARY KEY,
   dst_apid integer,              -- Id of destination airport
   dst_ap varchar(4),             -- 3-letter (IATA) or 4-letter (ICAO) code of the destination airport
   src_apid bigint,               -- Id of source airport
   src_ap varchar(4),             -- 3-letter (IATA) or 4-letter (ICAO) code of the source airport
   alid bigint,                   -- Id of airline
   airline varchar(4),            -- 2-letter (IATA) or 3-letter (ICAO) code of the airline
   codeshare text,                -- ""Y"" if this flight is a codeshare (that is, not operated by 
                                  -- Airline, but another carrier), empty otherwise
   FOREIGN KEY(dst_apid) REFERENCES airports(apid),
   FOREIGN KEY(src_apid) REFERENCES airports(apid),
   FOREIGN KEY(alid)     REFERENCES airlines(alid)
)"
flight_4,airports,"CREATE TABLE airports (
   apid integer PRIMARY KEY,      -- Id of the airport
   name text NOT NULL,            -- Name of airport
   city text,                     -- Main city served by airport
   country text,                  -- Country or territory where airport is located
   x real,                        -- Latitude of airport: Decimal degrees, usually to six
                                  -- significant digits. Negative is South, positive is North
   y real,                        -- Longitude of airport: Decimal degrees, usually to six 
                                  -- significant digits. Negative is West, positive is East
   elevation bigint,              -- Altitude of airport measured in feets
   iata character varchar(3),     -- 3-letter IATA code. empty or null if not assigned/unknown
   icao character varchar(4)      -- 4-letter ICAO code. empty or null if not assigned
   
)"
flight_4,airlines,"CREATE TABLE airlines (
   alid integer PRIMARY KEY,      -- Id of the airline
   name text,                     -- Name of the airline
   iata varchar(2),               -- 2-letter IATA code. empty or null if not assigned/unknown 
   icao varchar(3),               -- 3-letter ICAO code. empty or null if not assigned
   callsign text,                 -- Airline callsign
   country text,                  -- Country or territory where airline is incorporated
   active varchar(2)              -- ""Y"" if the airline is or has until recently been operational,
)"
club_1,Student,"CREATE TABLE Student (
         StuID        INTEGER PRIMARY KEY,
         LName        VARCHAR(12),
         Fname        VARCHAR(12),
         Age      INTEGER,
         Sex      VARCHAR(1),
         Major        INTEGER,
         Advisor      INTEGER,
         city_code    VARCHAR(3)
  )"
club_1,Club,"CREATE TABLE Club (
       ClubID           INTEGER PRIMARY KEY,
       ClubName         VARCHAR(40),
       ClubDesc         VARCHAR(1024),
       ClubLocation VARCHAR(40)
)"
club_1,Member_of_club,"CREATE TABLE Member_of_club (
       StuID            INTEGER,
       ClubID           INTEGER,
       Position     VARCHAR(40),
       FOREIGN KEY(StuID) REFERENCES Student(StuID),
       FOREIGN KEY(ClubID) REFERENCES Club(ClubID)
)"
epinions_1,item,"CREATE TABLE `item` (
  `i_id` integer NOT NULL
,  `title` varchar(20) DEFAULT NULL
,  PRIMARY KEY (`i_id`)
)"
epinions_1,review,"CREATE TABLE `review` (
  `a_id` integer NOT NULL PRIMARY KEY
,  `u_id` integer NOT NULL
,  `i_id` integer NOT NULL
,  `rating` integer DEFAULT NULL
,  `rank` integer DEFAULT NULL
, 	FOREIGN KEY (`u_id`) REFERENCES `useracct`(`u_id`)
, 	FOREIGN KEY (`i_id`) REFERENCES `item`(`i_id`)
)"
epinions_1,useracct,"CREATE TABLE `useracct` (
  `u_id` integer NOT NULL
,  `name` varchar(128) DEFAULT NULL
,  PRIMARY KEY (`u_id`)
)"
epinions_1,trust,"CREATE TABLE ""trust"" (`source_u_id` integer NOT NULL, `target_u_id` integer NOT NULL, `trust` integer NOT NULL, FOREIGN KEY (`source_u_id`) REFERENCES `useracct`(`u_id`), FOREIGN KEY (`target_u_id`) REFERENCES `useracct`(`u_id`))"
decoration_competition,college,"CREATE TABLE ""college"" (
""College_ID"" int,
""Name"" text,
""Leader_Name"" text,
""College_Location"" text,
PRIMARY KEY (""College_ID"")
)"
decoration_competition,member,"CREATE TABLE ""member"" (
""Member_ID"" int,
""Name"" text,
""Country"" text,
""College_ID"" int,
PRIMARY KEY (""Member_ID""),
FOREIGN KEY (""College_ID"") REFERENCES `college`(""College_ID"")
)"
decoration_competition,round,"CREATE TABLE ""round"" (
""Round_ID"" int,
""Member_ID"" int,
""Decoration_Theme"" text,
""Rank_in_Round"" int,
PRIMARY KEY (""Member_ID"",""Round_ID""),
FOREIGN KEY (""Member_ID"") REFERENCES ""member""(""Member_ID"")
)"
architecture,architect,"CREATE TABLE ""architect"" (
""id"" text,
""name"" text,
""nationality"" text,
""gender"" text,
primary key(""id"")
)"
architecture,bridge,"CREATE TABLE ""bridge"" (
""architect_id"" int,
""id"" int,
""name"" text,
""location"" text,
""length_meters"" real,
""length_feet"" real,
primary key(""id""),
foreign key (""architect_id"" ) references `architect`(""id"")
)"
architecture,mill,"CREATE TABLE ""mill"" (
""architect_id"" int,
""id"" int,
""location"" text,
""name"" text,
""type"" text,
""built_year"" int,
""notes"" text,
primary key (""id""),
foreign key (""architect_id"" ) references `architect`(""id"")
)"
train_station,station,"CREATE TABLE ""station"" (
""Station_ID"" int,
""Name"" text,
""Annual_entry_exit"" real,
""Annual_interchanges"" real,
""Total_Passengers"" real,
""Location"" text,
""Main_Services"" text,
""Number_of_Platforms"" int,
PRIMARY KEY (""Station_ID"")
)"
train_station,train,"CREATE TABLE ""train"" (
""Train_ID"" int,
""Name"" text,
""Time"" text,
""Service"" text,
PRIMARY KEY (""Train_ID"")
)"
train_station,train_station,"CREATE TABLE ""train_station"" (
""Train_ID"" int,
""Station_ID"" int,	
PRIMARY KEY (""Train_ID"",""Station_ID""),
FOREIGN KEY (""Train_ID"") REFERENCES ""train""(""Train_ID""),
FOREIGN KEY (""Station_ID"") REFERENCES ""station""(""Station_ID"")
)"
allergy_1,Allergy_Type,"CREATE TABLE Allergy_Type (
       Allergy 		  VARCHAR(20) PRIMARY KEY,
       AllergyType 	  VARCHAR(20)
)"
allergy_1,Has_Allergy,"CREATE TABLE Has_Allergy (
       StuID 		 INTEGER,
       Allergy 		 VARCHAR(20),
       FOREIGN KEY(StuID) REFERENCES Student(StuID),
       FOREIGN KEY(Allergy) REFERENCES Allergy_Type(Allergy)
)"
allergy_1,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
soccer_1,Player_Attributes,"CREATE TABLE ""Player_Attributes"" (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`player_fifa_api_id`	INTEGER,
	`player_api_id`	INTEGER,
	`date`	TEXT,
	`overall_rating`	INTEGER,
	`potential`	INTEGER,
	`preferred_foot`	TEXT,
	`attacking_work_rate`	TEXT,
	`defensive_work_rate`	TEXT,
	`crossing`	INTEGER,
	`finishing`	INTEGER,
	`heading_accuracy`	INTEGER,
	`short_passing`	INTEGER,
	`volleys`	INTEGER,
	`dribbling`	INTEGER,
	`curve`	INTEGER,
	`free_kick_accuracy`	INTEGER,
	`long_passing`	INTEGER,
	`ball_control`	INTEGER,
	`acceleration`	INTEGER,
	`sprint_speed`	INTEGER,
	`agility`	INTEGER,
	`reactions`	INTEGER,
	`balance`	INTEGER,
	`shot_power`	INTEGER,
	`jumping`	INTEGER,
	`stamina`	INTEGER,
	`strength`	INTEGER,
	`long_shots`	INTEGER,
	`aggression`	INTEGER,
	`interceptions`	INTEGER,
	`positioning`	INTEGER,
	`vision`	INTEGER,
	`penalties`	INTEGER,
	`marking`	INTEGER,
	`standing_tackle`	INTEGER,
	`sliding_tackle`	INTEGER,
	`gk_diving`	INTEGER,
	`gk_handling`	INTEGER,
	`gk_kicking`	INTEGER,
	`gk_positioning`	INTEGER,
	`gk_reflexes`	INTEGER,
	FOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),
	FOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)
)"
soccer_1,Player,"CREATE TABLE `Player` (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`player_api_id`	INTEGER UNIQUE,
	`player_name`	TEXT,
	`player_fifa_api_id`	INTEGER UNIQUE,
	`birthday`	TEXT,
	`height`	INTEGER,
	`weight`	INTEGER
)"
soccer_1,League,"CREATE TABLE `League` (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`country_id`	INTEGER,
	`name`	TEXT UNIQUE,
	FOREIGN KEY(`country_id`) REFERENCES `Country`(`id`)
)"
soccer_1,Country,"CREATE TABLE `Country` (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT UNIQUE
)"
soccer_1,Team,"CREATE TABLE ""Team"" (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`team_api_id`	INTEGER UNIQUE,
	`team_fifa_api_id`	INTEGER,
	`team_long_name`	TEXT,
	`team_short_name`	TEXT
)"
soccer_1,Team_Attributes,"CREATE TABLE `Team_Attributes` (
	`id`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`team_fifa_api_id`	INTEGER,
	`team_api_id`	INTEGER,
	`date`	TEXT,
	`buildUpPlaySpeed`	INTEGER,
	`buildUpPlaySpeedClass`	TEXT,
	`buildUpPlayDribbling`	INTEGER,
	`buildUpPlayDribblingClass`	TEXT,
	`buildUpPlayPassing`	INTEGER,
	`buildUpPlayPassingClass`	TEXT,
	`buildUpPlayPositioningClass`	TEXT,
	`chanceCreationPassing`	INTEGER,
	`chanceCreationPassingClass`	TEXT,
	`chanceCreationCrossing`	INTEGER,
	`chanceCreationCrossingClass`	TEXT,
	`chanceCreationShooting`	INTEGER,
	`chanceCreationShootingClass`	TEXT,
	`chanceCreationPositioningClass`	TEXT,
	`defencePressure`	INTEGER,
	`defencePressureClass`	TEXT,
	`defenceAggression`	INTEGER,
	`defenceAggressionClass`	TEXT,
	`defenceTeamWidth`	INTEGER,
	`defenceTeamWidthClass`	TEXT,
	`defenceDefenderLineClass`	TEXT,
	FOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),
	FOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)
)"
election_representative,election,"CREATE TABLE ""election"" (
""Election_ID"" int,
""Representative_ID"" int,
""Date"" text,
""Votes"" real,
""Vote_Percent"" real,
""Seats"" real,
""Place"" real,
PRIMARY KEY (""Election_ID""),
FOREIGN KEY (""Representative_ID"") REFERENCES `representative`(""Representative_ID"")
)"
election_representative,representative,"CREATE TABLE ""representative"" (
""Representative_ID"" int,
""Name"" text,
""State"" text,
""Party"" text,
""Lifespan"" text,
PRIMARY KEY (""Representative_ID"")
)"
city_record,city,"CREATE TABLE ""city"" (
""City_ID"" int,
""City"" text,
""Hanzi"" text,
""Hanyu_Pinyin"" text,
""Regional_Population"" int,
""GDP"" real,
PRIMARY KEY (""City_ID"")
)"
city_record,match,"CREATE TABLE ""match"" (
""Match_ID"" int,
""Date"" text,
""Venue"" text,
""Score"" text,
""Result"" text,
""Competition"" text,
PRIMARY KEY (""Match_ID"")
)"
city_record,temperature,"CREATE TABLE ""temperature"" (
""City_ID"" int,
""Jan"" real,
""Feb"" real,
""Mar"" real,
""Apr"" real,
""Jun"" real,
""Jul"" real,
""Aug"" real,
""Sep"" real,
""Oct"" real,
""Nov"" real,
""Dec"" real,
PRIMARY KEY (""City_ID""),
FOREIGN KEY (`City_ID`) REFERENCES `city`(`City_ID`)
)"
city_record,hosting_city,"CREATE TABLE ""hosting_city"" (
  ""Year"" int,
  ""Match_ID"" int,
  ""Host_City"" text,
  PRIMARY KEY (""Year""),
  FOREIGN KEY (`Host_City`) REFERENCES `city`(`City_ID`),
  FOREIGN KEY (`Match_ID`) REFERENCES `match`(`Match_ID`)
)"
customers_campaigns_ecommerce,Premises,"CREATE TABLE `Premises` (
`premise_id` INTEGER PRIMARY KEY,
`premises_type` VARCHAR(15) NOT NULL,
`premise_details` VARCHAR(255)
)"
customers_campaigns_ecommerce,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_category` VARCHAR(15) NOT NULL,
`product_name` VARCHAR(80)
)"
customers_campaigns_ecommerce,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`payment_method` VARCHAR(15) NOT NULL,
`customer_name` VARCHAR(80),
`customer_phone` VARCHAR(80),
`customer_email` VARCHAR(80),
`customer_address` VARCHAR(255),
`customer_login` VARCHAR(80),
`customer_password` VARCHAR(10)
)"
customers_campaigns_ecommerce,Mailshot_Campaigns,"CREATE TABLE `Mailshot_Campaigns` (
`mailshot_id` INTEGER PRIMARY KEY,
`product_category` VARCHAR(15),
`mailshot_name` VARCHAR(80),
`mailshot_start_date` DATETIME,
`mailshot_end_date` DATETIME
)"
customers_campaigns_ecommerce,Customer_Addresses,"CREATE TABLE `Customer_Addresses` (
`customer_id` INTEGER NOT NULL,
`premise_id` INTEGER NOT NULL,
`date_address_from` DATETIME NOT NULL,
`address_type_code` VARCHAR(15) NOT NULL,
`date_address_to` DATETIME,
FOREIGN KEY (`premise_id` ) REFERENCES `Premises`(`premise_id` )
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_campaigns_ecommerce,Customer_Orders,"CREATE TABLE `Customer_Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`order_status_code` VARCHAR(15) NOT NULL,
`shipping_method_code` VARCHAR(15) NOT NULL,
`order_placed_datetime` DATETIME NOT NULL,
`order_delivered_datetime` DATETIME,
`order_shipping_charges` VARCHAR(255),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_campaigns_ecommerce,Mailshot_Customers,"CREATE TABLE `Mailshot_Customers` (
`mailshot_id` INTEGER NOT NULL,
`customer_id` INTEGER NOT NULL,
`outcome_code` VARCHAR(15) NOT NULL,
`mailshot_customer_date` DATETIME,
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` ),
FOREIGN KEY (`mailshot_id` ) REFERENCES `Mailshot_Campaigns`(`mailshot_id` )
)"
customers_campaigns_ecommerce,Order_Items,"CREATE TABLE `Order_Items` (
`item_id` INTEGER NOT NULL ,
`order_item_status_code` VARCHAR(15) NOT NULL,
`order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`item_status_code` VARCHAR(15),
`item_delivered_datetime` DATETIME,
`item_order_quantity` VARCHAR(80),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`order_id` ) REFERENCES `Customer_Orders`(`order_id` )
)"
flight_2,airlines,"CREATE TABLE 'airlines' (
	uid INTEGER PRIMARY KEY, 
	Airline TEXT, 
	Abbreviation TEXT, 
	Country TEXT
)"
flight_2,airports,"CREATE TABLE 'airports' (
	City TEXT, 
	AirportCode TEXT PRIMARY KEY, 
	AirportName TEXT, 
	Country TEXT, 
	CountryAbbrev TEXT
)"
flight_2,flights,"CREATE TABLE 'flights' (
	Airline INTEGER, 
	FlightNo INTEGER, 
	SourceAirport TEXT, 
	DestAirport TEXT, 
	PRIMARY KEY(Airline, FlightNo),
	FOREIGN KEY (SourceAirport) REFERENCES airports(AirportCode),
	FOREIGN KEY (DestAirport) REFERENCES airports(AirportCode)
)"
poker_player,poker_player,"CREATE TABLE ""poker_player"" (
""Poker_Player_ID"" int,
""People_ID"" int,
""Final_Table_Made"" real,
""Best_Finish"" real,
""Money_Rank"" real,
""Earnings"" real,
PRIMARY KEY (""Poker_Player_ID""),
FOREIGN KEY (""People_ID"") REFERENCES `people`(""People_ID"")
)"
poker_player,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Nationality"" text,
""Name"" text,
""Birth_Date"" text,
""Height"" real,
PRIMARY KEY (""People_ID"")
)"
customer_complaints,Staff,"CREATE TABLE `Staff` (
`staff_id` INTEGER PRIMARY KEY,
`gender` VARCHAR(1),
`first_name` VARCHAR(80),
`last_name` VARCHAR(80),
`email_address` VARCHAR(255),
`phone_number` VARCHAR(80)
)"
customer_complaints,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`customer_type_code` VARCHAR(20) NOT NULL,
`address_line_1` VARCHAR(80),
`address_line_2` VARCHAR(80),
`town_city` VARCHAR(80),
`state` VARCHAR(80),
`email_address` VARCHAR(255),
`phone_number` VARCHAR(80)
)"
customer_complaints,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`parent_product_id` INTEGER,
`product_category_code` VARCHAR(20) NOT NULL,
`date_product_first_available` DATETIME,
`date_product_discontinued` DATETIME,
`product_name` VARCHAR(80),
`product_description` VARCHAR(255),
`product_price` DECIMAL(19,4)
)"
customer_complaints,Complaints,"CREATE TABLE `Complaints` (
`complaint_id` INTEGER NOT NULL ,
`product_id` INTEGER NOT NULL,
`customer_id` INTEGER NOT NULL,
`complaint_outcome_code` VARCHAR(20) NOT NULL,
`complaint_status_code` VARCHAR(20) NOT NULL,
`complaint_type_code` VARCHAR(20) NOT NULL,
`date_complaint_raised` DATETIME,
`date_complaint_closed` DATETIME,
`staff_id` INTEGER NOT NULL ,
FOREIGN KEY (`staff_id` ) REFERENCES `Staff`(`staff_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
company_1,works_on,"CREATE TABLE works_on(
Essn INTEGER,
Pno INTEGER,
Hours REAL,
PRIMARY KEY(Essn, Pno))"
company_1,employee,"CREATE TABLE employee(
Fname TEXT,
Minit TEXT,
Lname TEXT,
Ssn INTEGER PRIMARY KEY,
Bdate TEXT,
Address TEXT,
Sex TEXT,
Salary INTEGER,
Super_ssn INTEGER, 
Dno INTEGER)"
company_1,department,"CREATE TABLE department(
Dname TEXT,
Dnumber INTEGER PRIMARY KEY,
Mgr_ssn INTEGER,
Mgr_start_date TEXT)"
company_1,project,"CREATE TABLE project(
Pname Text,
Pnumber INTEGER PRIMARY KEY,
Plocation TEXT,
Dnum INTEGER)"
company_1,dependent,"CREATE TABLE dependent(
Essn INTEGER,
Dependent_name TEXT,
Sex TEXT,
Bdate TEXT,
Relationship TEXT,
PRIMARY KEY(Essn, Dependent_name))"
company_1,dept_locations,"CREATE TABLE dept_locations(
Dnumber INTEGER,
Dlocation TEXT,
PRIMARY KEY(Dnumber, Dlocation))"
concert_singer,stadium,"CREATE TABLE ""stadium"" (
""Stadium_ID"" int,
""Location"" text,
""Name"" text,
""Capacity"" int,
""Highest"" int,
""Lowest"" int,
""Average"" int,
PRIMARY KEY (""Stadium_ID"")
)"
concert_singer,singer,"CREATE TABLE ""singer"" (
""Singer_ID"" int,
""Name"" text,
""Country"" text,
""Song_Name"" text,
""Song_release_year"" text,
""Age"" int,
""Is_male"" bool,
PRIMARY KEY (""Singer_ID"")
)"
concert_singer,concert,"CREATE TABLE ""concert"" (
""concert_ID"" int,
""concert_Name"" text,
""Theme"" text,
""Stadium_ID"" text,
""Year"" text,
PRIMARY KEY (""concert_ID""),
FOREIGN KEY (""Stadium_ID"") REFERENCES ""stadium""(""Stadium_ID"")
)"
concert_singer,singer_in_concert,"CREATE TABLE ""singer_in_concert"" (
""concert_ID"" int,
""Singer_ID"" text,
PRIMARY KEY (""concert_ID"",""Singer_ID""),
FOREIGN KEY (""concert_ID"") REFERENCES ""concert""(""concert_ID""),
FOREIGN KEY (""Singer_ID"") REFERENCES ""singer""(""Singer_ID"")
)"
cre_Docs_and_Epenses,Ref_Document_Types,"CREATE TABLE Ref_Document_Types (
Document_Type_Code CHAR(15) NOT NULL,
Document_Type_Name VARCHAR(255) NOT NULL,
Document_Type_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Document_Type_Code)
)"
cre_Docs_and_Epenses,Ref_Budget_Codes,"CREATE TABLE Ref_Budget_Codes (
Budget_Type_Code CHAR(15) NOT NULL,
Budget_Type_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Budget_Type_Code)
)"
cre_Docs_and_Epenses,Projects,"CREATE TABLE Projects (
Project_ID INTEGER NOT NULL,
Project_Details VARCHAR(255),
PRIMARY KEY (Project_ID)
)"
cre_Docs_and_Epenses,Documents,"CREATE TABLE Documents (
Document_ID INTEGER NOT NULL,
Document_Type_Code CHAR(15) NOT NULL,
Project_ID INTEGER NOT NULL,
Document_Date DATETIME,
Document_Name VARCHAR(255),
Document_Description VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Document_ID),
FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code),
FOREIGN KEY (Project_ID) REFERENCES Projects (Project_ID)
)"
cre_Docs_and_Epenses,Statements,"CREATE TABLE Statements (
Statement_ID INTEGER NOT NULL,
Statement_Details VARCHAR(255),
PRIMARY KEY (Statement_ID),
FOREIGN KEY (Statement_ID) REFERENCES Documents (Document_ID)
)"
cre_Docs_and_Epenses,Documents_with_Expenses,"CREATE TABLE Documents_with_Expenses (
Document_ID INTEGER NOT NULL,
Budget_Type_Code CHAR(15) NOT NULL,
Document_Details VARCHAR(255),
PRIMARY KEY (Document_ID),
FOREIGN KEY (Budget_Type_Code) REFERENCES Ref_Budget_Codes (Budget_Type_Code),
FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)
)"
cre_Docs_and_Epenses,Accounts,"CREATE TABLE Accounts (
Account_ID INTEGER NOT NULL,
Statement_ID INTEGER NOT NULL,
Account_Details VARCHAR(255),
PRIMARY KEY (Account_ID),
FOREIGN KEY (Statement_ID) REFERENCES Statements (Statement_ID)
)"
insurance_and_eClaims,Customers,"CREATE TABLE Customers (
Customer_ID INTEGER NOT NULL,
Customer_Details VARCHAR(255) NOT NULL,
PRIMARY KEY (Customer_ID)
)"
insurance_and_eClaims,Staff,"CREATE TABLE Staff (
Staff_ID INTEGER NOT NULL,
Staff_Details VARCHAR(255) NOT NULL,
PRIMARY KEY (Staff_ID)
)"
insurance_and_eClaims,Policies,"CREATE TABLE Policies (
Policy_ID INTEGER NOT NULL,
Customer_ID INTEGER NOT NULL,
Policy_Type_Code CHAR(15) NOT NULL,
Start_Date DATETIME,
End_Date DATETIME,
PRIMARY KEY (Policy_ID),
FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID)
)"
insurance_and_eClaims,Claim_Headers,"CREATE TABLE Claim_Headers (
Claim_Header_ID INTEGER NOT NULL,
Claim_Status_Code CHAR(15) NOT NULL,
Claim_Type_Code CHAR(15) NOT NULL,
Policy_ID INTEGER NOT NULL,
Date_of_Claim DATETIME,
Date_of_Settlement DATETIME,
Amount_Claimed DECIMAL(20,4),
Amount_Piad DECIMAL(20,4),
PRIMARY KEY (Claim_Header_ID),
FOREIGN KEY (Policy_ID) REFERENCES Policies (Policy_ID)
)"
insurance_and_eClaims,Claims_Documents,"CREATE TABLE Claims_Documents (
Claim_ID INTEGER NOT NULL,
Document_Type_Code CHAR(15) NOT NULL,
Created_by_Staff_ID INTEGER,
Created_Date INTEGER,
PRIMARY KEY (Claim_ID, Document_Type_Code),
FOREIGN KEY (Claim_ID) REFERENCES Claim_Headers (Claim_Header_ID),
FOREIGN KEY (Created_by_Staff_ID) REFERENCES Staff (Staff_ID)
)"
insurance_and_eClaims,Claims_Processing_Stages,"CREATE TABLE Claims_Processing_Stages (
Claim_Stage_ID INTEGER NOT NULL,
Next_Claim_Stage_ID INTEGER,
Claim_Status_Name VARCHAR(255) NOT NULL,
Claim_Status_Description VARCHAR(255) NOT NULL,
PRIMARY KEY (Claim_Stage_ID)
)"
insurance_and_eClaims,Claims_Processing,"CREATE TABLE Claims_Processing (
Claim_Processing_ID INTEGER NOT NULL,
Claim_ID INTEGER NOT NULL,
Claim_Outcome_Code CHAR(15) NOT NULL,
Claim_Stage_ID INTEGER NOT NULL,
Staff_ID INTEGER,
PRIMARY KEY (Claim_Processing_ID),
FOREIGN KEY (Claim_ID) REFERENCES Claim_Headers (Claim_Header_ID),
FOREIGN KEY (Staff_ID) REFERENCES Staff (Staff_ID)
)"
insurance_policies,Customers,"CREATE TABLE Customers (
Customer_ID INTEGER NOT NULL,
Customer_Details VARCHAR(255) NOT NULL,
PRIMARY KEY (Customer_ID)
)"
insurance_policies,Customer_Policies,"CREATE TABLE Customer_Policies (
Policy_ID INTEGER NOT NULL,
Customer_ID INTEGER NOT NULL,
Policy_Type_Code CHAR(15) NOT NULL,
Start_Date DATE,
End_Date DATE,
PRIMARY KEY (Policy_ID),
FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID)
)"
insurance_policies,Claims,"CREATE TABLE Claims (
Claim_ID INTEGER NOT NULL,
Policy_ID INTEGER NOT NULL,
Date_Claim_Made DATE,
Date_Claim_Settled DATE,
Amount_Claimed INTEGER,
Amount_Settled INTEGER,
PRIMARY KEY (Claim_ID),
FOREIGN KEY (Policy_ID) REFERENCES Customer_Policies (Policy_ID)
)"
insurance_policies,Settlements,"CREATE TABLE Settlements (
Settlement_ID INTEGER NOT NULL,
Claim_ID INTEGER NOT NULL,
Date_Claim_Made DATE,
Date_Claim_Settled DATE,
Amount_Claimed INTEGER,
Amount_Settled INTEGER,
Customer_Policy_ID INTEGER NOT NULL,
PRIMARY KEY (Settlement_ID),
FOREIGN KEY (Claim_ID) REFERENCES Claims (Claim_ID)
)"
insurance_policies,Payments,"CREATE TABLE Payments (
Payment_ID INTEGER NOT NULL,
Settlement_ID INTEGER NOT NULL,
Payment_Method_Code VARCHAR(255),
Date_Payment_Made DATE,
Amount_Payment INTEGER,
PRIMARY KEY (Payment_ID),
FOREIGN KEY (Settlement_ID) REFERENCES Settlements (Settlement_ID)
)"
county_public_safety,county_public_safety,"CREATE TABLE ""county_public_safety"" (
""County_ID"" int,
""Name"" text,
""Population"" int,
""Police_officers"" int,
""Residents_per_officer"" int,
""Case_burden"" int,
""Crime_rate"" real,
""Police_force"" text,
""Location"" text,
PRIMARY KEY (""County_ID"")
)"
county_public_safety,city,"CREATE TABLE ""city"" (
""City_ID"" int,
""County_ID"" int,
""Name"" text,
""White"" real,
""Black"" real,
""Amerindian"" real,
""Asian"" real,
""Multiracial"" real,
""Hispanic"" real,
PRIMARY KEY (""City_ID""),
FOREIGN KEY (""County_ID"") REFERENCES ""county_public_safety""(""County_ID"")
)"
baseball_1,all_star,"CREATE TABLE all_star (
    player_id TEXT,
    year INTEGER,
    game_num INTEGER,
    game_id TEXT,
    team_id TEXT,
    league_id TEXT,
    gp NUMERIC,
    starting_pos NUMERIC,
    foreign key (player_id) references player(player_id)
)"
baseball_1,appearances,"CREATE TABLE appearances (
    year INTEGER,
    team_id TEXT,
    league_id TEXT,
    player_id TEXT,
    g_all NUMERIC,
    gs NUMERIC,
    g_batting INTEGER,
    g_defense NUMERIC,
    g_p INTEGER,
    g_c INTEGER,
    g_1b INTEGER,
    g_2b INTEGER,
    g_3b INTEGER,
    g_ss INTEGER,
    g_lf INTEGER,
    g_cf INTEGER,
    g_rf INTEGER,
    g_of INTEGER,
    g_dh NUMERIC,
    g_ph NUMERIC,
    g_pr NUMERIC,
    foreign key (team_id) references team(team_id),
    foreign key (player_id) references player(player_id)
)"
baseball_1,manager_award,"CREATE TABLE manager_award (
    player_id TEXT,
    award_id TEXT,
    year INTEGER,
    league_id TEXT,
    tie TEXT,
    notes NUMERIC,
    foreign key (player_id) references player(player_id)
)"
baseball_1,player_award,"CREATE TABLE player_award ( 
	player_id TEXT, 
	award_id TEXT, 
	year INTEGER, 
	league_id TEXT,
    	tie TEXT,
    	notes TEXT,
	foreign key (player_id) references player(player_id)
)"
baseball_1,manager_award_vote,"CREATE TABLE manager_award_vote (
    award_id TEXT,
    year INTEGER,
    league_id TEXT,
    player_id TEXT,
    points_won INTEGER,
    points_max INTEGER,
    votes_first INTEGER)"
baseball_1,player_award_vote,"CREATE TABLE player_award_vote (
    award_id TEXT,
    year INTEGER,
    league_id TEXT,
    player_id TEXT,
    points_won NUMERIC,
    points_max INTEGER,
    votes_first NUMERIC,
   foreign key (player_id) references player(player_id)
)"
baseball_1,batting,"CREATE TABLE batting ( player_id TEXT, year INTEGER, stint INTEGER, team_id TEXT, league_id TEXT, g INTEGER, ab NUMERIC,
    r NUMERIC,
    h NUMERIC,
    double NUMERIC,
    triple NUMERIC,
    hr NUMERIC,
    rbi NUMERIC,
    sb NUMERIC,
    cs NUMERIC,
    bb NUMERIC,
    so NUMERIC,
    ibb NUMERIC,
    hbp NUMERIC,
    sh NUMERIC,
    sf NUMERIC,
    g_idp NUMERIC,
foreign key (player_id) references player(player_id)
)"
baseball_1,batting_postseason,"CREATE TABLE batting_postseason (
    year INTEGER,
    round TEXT,
    player_id TEXT,
    team_id TEXT,
    league_id TEXT,
    g INTEGER,
    ab INTEGER,
    r INTEGER,
    h INTEGER,
    double INTEGER,
    triple INTEGER,
    hr INTEGER,
    rbi INTEGER,
    sb INTEGER,
    cs NUMERIC,
    bb INTEGER,
    so INTEGER,
    ibb NUMERIC,
    hbp NUMERIC,
    sh NUMERIC,
    sf NUMERIC,
    g_idp NUMERIC,
	foreign key (player_id) references player(player_id),
	foreign key (team_id) references team(team_id)
)"
baseball_1,player_college,"CREATE TABLE player_college ( player_id TEXT,
    college_id TEXT,
    year INTEGER,
	foreign key (player_id) references player(player_id),
	foreign key (college_id) references college(college_id)
)"
baseball_1,fielding,"CREATE TABLE fielding (
    player_id TEXT,
    year INTEGER,
    stint INTEGER,
    team_id TEXT,
    league_id TEXT,
    pos TEXT,
    g INTEGER,
    gs NUMERIC,
    inn_outs NUMERIC,
    po NUMERIC,
    a NUMERIC,
    e NUMERIC,
    dp NUMERIC,
    pb NUMERIC,
    wp NUMERIC,
    sb NUMERIC,
    cs NUMERIC,
    zr NUMERIC,
	foreign key (player_id) references player(player_id)
)"
baseball_1,fielding_outfield,"CREATE TABLE fielding_outfield (
    player_id TEXT,
    year INTEGER,
    stint INTEGER,
    glf NUMERIC,
    gcf NUMERIC,
    grf NUMERIC,
	foreign key (player_id) references player(player_id)
)"
baseball_1,fielding_postseason,"CREATE TABLE fielding_postseason (
    player_id TEXT,
    year INTEGER,
    team_id TEXT,
    league_id TEXT,
    round TEXT,
    pos TEXT,
    g INTEGER,
    gs NUMERIC,
    inn_outs NUMERIC,
    po INTEGER,
    a INTEGER,
    e INTEGER,
    dp INTEGER,
    tp INTEGER,
    pb NUMERIC,
    sb NUMERIC,
    cs NUMERIC,
	foreign key (player_id) references player(player_id),
	foreign key (team_id) references player(team_id)
)"
baseball_1,hall_of_fame,"CREATE TABLE hall_of_fame (
    player_id TEXT,
    yearid INTEGER,
    votedby TEXT,
    ballots NUMERIC,
    needed NUMERIC,
    votes NUMERIC,
    inducted TEXT,
    category TEXT,
    needed_note TEXT,
	foreign key (player_id) references player(player_id)
)"
baseball_1,home_game,"CREATE TABLE home_game (
    year INTEGER,
    league_id TEXT,
    team_id TEXT,
    park_id TEXT,
    span_first TEXT,
    span_last TEXT,
    games INTEGER,
    openings INTEGER,
    attendance INTEGER,
	foreign key (team_id) references team(team_id),
	foreign key (park_id) references park(park_id)
)"
baseball_1,manager,"CREATE TABLE manager (
    player_id TEXT,
    year INTEGER,
    team_id TEXT,
    league_id TEXT,
    inseason INTEGER,
    g INTEGER,
    w INTEGER,
    l INTEGER,
    rank NUMERIC,
    plyr_mgr TEXT,
	foreign key (team_id) references team(team_id)
)"
baseball_1,manager_half,"CREATE TABLE manager_half (
    player_id TEXT,
    year INTEGER,
    team_id TEXT,
    league_id TEXT,
    inseason INTEGER,
    half INTEGER,
    g INTEGER,
    w INTEGER,
    l INTEGER,
    rank INTEGER,
	foreign key (team_id) references team(team_id)
)"
baseball_1,player,"CREATE TABLE player (
    player_id TEXT,
    birth_year NUMERIC,
    birth_month NUMERIC,
    birth_day NUMERIC,
    birth_country TEXT,
    birth_state TEXT,
    birth_city TEXT,
    death_year NUMERIC,
    death_month NUMERIC,
    death_day NUMERIC,
    death_country TEXT,
    death_state TEXT,
    death_city TEXT,
    name_first TEXT,
    name_last TEXT,
    name_given TEXT,
    weight NUMERIC,
    height NUMERIC,
    bats TEXT,
    throws TEXT,
    debut TEXT,
    final_game TEXT,
    retro_id TEXT,
    bbref_id TEXT)"
baseball_1,park,"CREATE TABLE park (
    park_id TEXT,
    park_name TEXT,
    park_alias TEXT,
    city TEXT,
    state TEXT,
    country TEXT)"
baseball_1,pitching,"CREATE TABLE pitching (
    player_id TEXT,
    year INTEGER,
    stint INTEGER,
    team_id TEXT,
    league_id TEXT,
    w INTEGER,
    l INTEGER,
    g INTEGER,
    gs INTEGER,
    cg INTEGER,
    sho INTEGER,
    sv INTEGER,
    ipouts NUMERIC,
    h INTEGER,
    er INTEGER,
    hr INTEGER,
    bb INTEGER,
    so INTEGER,
    baopp NUMERIC,
    era NUMERIC,
    ibb NUMERIC,
    wp NUMERIC,
    hbp NUMERIC,
    bk INTEGER,
    bfp NUMERIC,
    gf NUMERIC,
    r INTEGER,
    sh NUMERIC,
    sf NUMERIC,
    g_idp NUMERIC)"
baseball_1,pitching_postseason,"CREATE TABLE pitching_postseason (
    player_id TEXT,
    year INTEGER,
    round TEXT,
    team_id TEXT,
    league_id TEXT,
    w INTEGER,
    l INTEGER,
    g INTEGER,
    gs INTEGER,
    cg INTEGER,
    sho INTEGER,
    sv INTEGER,
    ipouts INTEGER,
    h INTEGER,
    er INTEGER,
    hr INTEGER,
    bb INTEGER,
    so INTEGER,
    baopp TEXT,
    era NUMERIC,
    ibb NUMERIC,
    wp NUMERIC,
    hbp NUMERIC,
    bk NUMERIC,
    bfp NUMERIC,
    gf INTEGER,
    r INTEGER,
    sh NUMERIC,
    sf NUMERIC,
    g_idp NUMERIC)"
baseball_1,salary,"CREATE TABLE salary (
    year INTEGER,
    team_id TEXT,
    league_id TEXT,
    player_id TEXT,
    salary INTEGER)"
baseball_1,college,"CREATE TABLE college (
    college_id TEXT,
    name_full TEXT,
    city TEXT,
    state TEXT,
    country TEXT)"
baseball_1,postseason,"CREATE TABLE postseason (
    year INTEGER,
    round TEXT,
    team_id_winner TEXT,
    league_id_winner TEXT,
    team_id_loser TEXT,
    league_id_loser TEXT,
    wins INTEGER,
    losses INTEGER,
    ties INTEGER)"
baseball_1,team,"CREATE TABLE team (
    year INTEGER,
    league_id TEXT,
    team_id TEXT,
    franchise_id TEXT,
    div_id TEXT,
    rank INTEGER,
    g INTEGER,
    ghome NUMERIC,
    w INTEGER,
    l INTEGER,
    div_win TEXT,
    wc_win TEXT,
    lg_win TEXT,
    ws_win TEXT,
    r INTEGER,
    ab INTEGER,
    h INTEGER,
    double INTEGER,
    triple INTEGER,
    hr INTEGER,
    bb INTEGER,
    so NUMERIC,
    sb NUMERIC,
    cs NUMERIC,
    hbp NUMERIC,
    sf NUMERIC,
    ra INTEGER,
    er INTEGER,
    era NUMERIC,
    cg INTEGER,
    sho INTEGER,
    sv INTEGER,
    ipouts INTEGER,
    ha INTEGER,
    hra INTEGER,
    bba INTEGER,
    soa INTEGER,
    e INTEGER,
    dp NUMERIC,
    fp NUMERIC,
    name TEXT,
    park TEXT,
    attendance NUMERIC,
    bpf INTEGER,
    ppf INTEGER,
    team_id_br TEXT,
    team_id_lahman45 TEXT,
    team_id_retro TEXT)"
baseball_1,team_franchise,"CREATE TABLE team_franchise (
    franchise_id TEXT,
    franchise_name TEXT,
    active TEXT,
    na_assoc TEXT)"
baseball_1,team_half,"CREATE TABLE team_half (
    year INTEGER,
    league_id TEXT,
    team_id TEXT,
    half INTEGER,
    div_id TEXT,
    div_win TEXT,
    rank INTEGER,
    g INTEGER,
    w INTEGER,
    l INTEGER)"
imdb,actor,"CREATE TABLE ""actor"" (
""aid"" int,
""gender"" text,
""name"" text,
""nationality"" text,
""birth_city"" text,
""birth_year"" int,
primary key(""aid"")
)"
imdb,copyright,"CREATE TABLE ""copyright"" (
""id"" int,
""msid"" int,
""cid"" int,
primary key(""id"")
)"
imdb,cast,"CREATE TABLE ""cast"" (
""id"" int,
""msid"" int,
""aid"" int,
""role"" int,
primary key(""id""),
foreign key(""aid"") references `actor`(""aid""),
foreign key(""msid"") references `copyright`(""msid"")
)"
imdb,genre,"CREATE TABLE ""genre"" (
""gid"" int,
""genre"" text,
primary key(""gid"")
)"
imdb,classification,"CREATE TABLE ""classification"" (
""id"" int,
""msid"" int,
""gid"" int,
primary key(""id""),
foreign key(""gid"") references `genre`(""gid""),
foreign key(""msid"") references `copyright`(""msid"")
)"
imdb,company,"CREATE TABLE ""company"" (
""id"" int,
""name"" text,
""country_code"" text,
primary key(""id"")
)"
imdb,director,"CREATE TABLE ""director"" (
""did"" int,
""gender"" text,
""name"" text,
""nationality"" text,
""birth_city"" text,
""birth_year"" int,
primary key(""did"")
)"
imdb,producer,"CREATE TABLE ""producer"" (
""pid"" int,
""gender"" text,
""name"" text,
""nationality"" text,
""birth_city"" text,
""birth_year"" int,
primary key(""pid"")
)"
imdb,directed_by,"CREATE TABLE ""directed_by"" (
""id"" int,
""msid"" int,
""did"" int,
primary key(""id""),
foreign key(""msid"") references `copyright`(""msid""),
foreign key(""did"") references `director`(""did"")
)"
imdb,keyword,"CREATE TABLE ""keyword"" (
""id"" int,
""keyword"" text,
primary key(""id"")
)"
imdb,made_by,"CREATE TABLE ""made_by"" (
""id"" int,
""msid"" int,
""pid"" int,
primary key(""id""),
foreign key(""msid"") references `copyright`(""msid""),
foreign key(""pid"") references `producer`(""pid"")
)"
imdb,movie,"CREATE TABLE ""movie"" (
""mid"" int,
""title"" text,
""release_year"" int,
""title_aka"" text,
""budget"" text,
primary key(""mid"")
)"
imdb,tags,"CREATE TABLE ""tags"" (
""id"" int,
""msid"" int,
""kid"" int,
primary key(""id""),
foreign key(""msid"") references `copyright`(""msid""),
foreign key(""kid"") references `keyword`(""kid"")
)"
imdb,tv_series,"CREATE TABLE ""tv_series"" (
""sid"" int,
""title"" text,
""release_year"" int,
""num_of_seasons"" int,
""num_of_episodes"" int,
""title_aka"" text,
""budget"" text,
primary key(""sid"")
)"
imdb,writer,"CREATE TABLE ""writer"" (
""wid"" int,
""gender"" text,
""name"" int,
""nationality"" int,
""num_of_episodes"" int,
""birth_city"" text,
""birth_year"" int,
primary key(""wid"")
)"
imdb,written_by,"CREATE TABLE ""written_by"" (
""id"" int,
""msid"" int,
""wid"" int,
foreign key(""msid"") references `copyright`(""msid""),
foreign key(""wid"") references `writer`(""wid"")
)"
music_2,Songs,"CREATE TABLE ""Songs"" ( 
	""SongId"" INTEGER PRIMARY KEY, 
	""Title"" TEXT 
)"
music_2,Albums,"CREATE TABLE ""Albums"" ( 
	""AId"" INTEGER PRIMARY KEY, 
	""Title"" TEXT, 
	""Year"" INTEGER, 
	""Label"" TEXT, 
	""Type"" TEXT )"
music_2,Band,"CREATE TABLE ""Band"" ( 
	""Id"" INTEGER PRIMARY KEY, 
	""Firstname"" TEXT, 
	""Lastname"" TEXT )"
music_2,Instruments,"CREATE TABLE ""Instruments"" ( 
	""SongId"" INTEGER, 
	""BandmateId"" INTEGER, 
	""Instrument"" TEXT ,
	PRIMARY KEY(SongId, BandmateId, Instrument),
	FOREIGN KEY (SongId) REFERENCES Songs(SongId),
	FOREIGN KEY (BandmateId) REFERENCES Band(Id)
)"
music_2,Performance,"CREATE TABLE ""Performance"" ( 
	""SongId"" INTEGER, 
	""Bandmate"" INTEGER, 
	""StagePosition"" TEXT,
	PRIMARY KEY(SongId, Bandmate),
	FOREIGN KEY (SongId) REFERENCES Songs(SongId),
	FOREIGN KEY (Bandmate) REFERENCES Band(Id)
)"
music_2,Tracklists,"CREATE TABLE ""Tracklists"" ( 
	""AlbumId"" INTEGER, 
	""Position"" INTEGER, 
	""SongId"" INTEGER ,
	PRIMARY KEY(AlbumId, Position),
	FOREIGN KEY (SongId) REFERENCES Songs(SongId),
	FOREIGN KEY (AlbumId) REFERENCES Albums(AId)
)"
music_2,Vocals,"CREATE TABLE ""Vocals"" ( 
	""SongId"" INTEGER, 
	""Bandmate"" INTEGER, 
	""Type"" TEXT,
	PRIMARY KEY(SongId, Bandmate),
	FOREIGN KEY (SongId) REFERENCES Songs(SongId),
	FOREIGN KEY (Bandmate) REFERENCES Band(Id)
)"
network_1,Highschooler,"CREATE TABLE Highschooler(
	ID int primary key, 
	name text, 
	grade int)"
network_1,Friend,"CREATE TABLE Friend(
	student_id int, 
	friend_id int,
	primary key (student_id,friend_id),
	foreign key(student_id) references Highschooler(ID),
	foreign key (friend_id) references Highschooler(ID)
)"
network_1,Likes,"CREATE TABLE Likes(
	student_id int, 
	liked_id int,
	primary key (student_id, liked_id),
        foreign key (liked_id) references Highschooler(ID),
        foreign key (student_id) references Highschooler(ID)
)"
climbing,mountain,"CREATE TABLE ""mountain"" (
""Mountain_ID"" int,
""Name"" text,
""Height"" real,
""Prominence"" real,
""Range"" text,
""Country"" text,
PRIMARY KEY (""Mountain_ID"")
)"
climbing,climber,"CREATE TABLE ""climber"" (
""Climber_ID"" int,
""Name"" text,
""Country"" text,
""Time"" text,
""Points"" real,
""Mountain_ID"" int,
PRIMARY KEY (""Climber_ID""),
FOREIGN KEY (""Mountain_ID"") REFERENCES ""mountain""(""Mountain_ID"")
)"
swimming,swimmer,"CREATE TABLE ""swimmer"" (
""ID"" int,
""name"" text,
""Nationality"" text,
""meter_100"" real,
""meter_200"" text,
""meter_300"" text,
""meter_400"" text,
""meter_500"" text,
""meter_600"" text,
""meter_700"" text,
""Time"" text,
PRIMARY KEY (""ID"")
)"
swimming,stadium,"CREATE TABLE ""stadium"" (
""ID"" int,
""name"" text,
""Capacity"" int,
""City"" text,
""Country"" text,
""Opening_year"" int,
PRIMARY KEY (""ID"")
)"
swimming,event,"CREATE TABLE ""event"" (
""ID"" int,
""Name"" text,
""Stadium_ID"" int,
""Year"" text,
PRIMARY KEY (""ID""),
FOREIGN KEY (`Stadium_ID`) REFERENCES `stadium`(`ID`)
)"
swimming,record,"CREATE TABLE ""record"" (
""ID"" int,
""Result"" text,
""Swimmer_ID"" int,
""Event_ID"" int,
PRIMARY KEY (""Swimmer_ID"",""Event_ID""),
FOREIGN KEY (`Event_ID`) REFERENCES `event`(`ID`),
FOREIGN KEY (`Swimmer_ID`) REFERENCES `swimmer`(`ID`)
)"
customers_and_addresses,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`address_content` VARCHAR(80),
`city` VARCHAR(50),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50),
`other_address_details` VARCHAR(255)
)"
customers_and_addresses,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_details` VARCHAR(255)
)"
customers_and_addresses,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`payment_method` VARCHAR(15) NOT NULL,
`customer_name` VARCHAR(80),
`date_became_customer` DATETIME,
`other_customer_details` VARCHAR(255)
)"
customers_and_addresses,Customer_Addresses,"CREATE TABLE `Customer_Addresses` (
`customer_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_address_from` DATETIME NOT NULL,
`address_type` VARCHAR(15) NOT NULL,
`date_address_to` DATETIME,
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_addresses,Customer_Contact_Channels,"CREATE TABLE `Customer_Contact_Channels` (
`customer_id` INTEGER NOT NULL,
`channel_code` VARCHAR(15) NOT NULL,
`active_from_date` DATETIME NOT NULL,
`active_to_date` DATETIME,
`contact_number` VARCHAR(50) NOT NULL,
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_addresses,Customer_Orders,"CREATE TABLE `Customer_Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`order_status` VARCHAR(15) NOT NULL,
`order_date` DATETIME,
`order_details` VARCHAR(255),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
customers_and_addresses,Order_Items,"CREATE TABLE `Order_Items` (
`order_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`order_quantity` VARCHAR(15),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),
FOREIGN KEY (`order_id` ) REFERENCES `Customer_Orders`(`order_id` )
)"
tracking_share_transactions,Investors,"CREATE TABLE `Investors` (
`investor_id` INTEGER PRIMARY KEY,
`Investor_details` VARCHAR(255)
)"
tracking_share_transactions,Lots,"CREATE TABLE `Lots` (
`lot_id` INTEGER PRIMARY KEY,
`investor_id` INTEGER NOT NULL,
`lot_details` VARCHAR(255),
FOREIGN KEY (`investor_id` ) REFERENCES `Investors`(`investor_id` )
)"
tracking_share_transactions,Ref_Transaction_Types,"CREATE TABLE `Ref_Transaction_Types` (
`transaction_type_code` VARCHAR(10) PRIMARY KEY,
`transaction_type_description` VARCHAR(80) NOT NULL
)"
tracking_share_transactions,Transactions,"CREATE TABLE `Transactions` (
`transaction_id` INTEGER PRIMARY KEY,
`investor_id` INTEGER NOT NULL,
`transaction_type_code` VARCHAR(10) NOT NULL,
`date_of_transaction` DATETIME,
`amount_of_transaction` DECIMAL(19,4),
`share_count` VARCHAR(40),
`other_details` VARCHAR(255),
FOREIGN KEY (`investor_id` ) REFERENCES `Investors`(`investor_id` ),FOREIGN KEY (`transaction_type_code` ) REFERENCES `Ref_Transaction_Types`(`transaction_type_code` )
)"
tracking_share_transactions,Sales,"CREATE TABLE `Sales` (
`sales_transaction_id` INTEGER PRIMARY KEY,
`sales_details` VARCHAR(255),
FOREIGN KEY (`sales_transaction_id` ) REFERENCES `Transactions`(`transaction_id` )
)"
tracking_share_transactions,Purchases,"CREATE TABLE `Purchases` (
`purchase_transaction_id` INTEGER NOT NULL,
`purchase_details` VARCHAR(255) NOT NULL,
FOREIGN KEY (`purchase_transaction_id` ) REFERENCES `Transactions`(`transaction_id` )
)"
tracking_share_transactions,Transactions_Lots,"CREATE TABLE `Transactions_Lots` (
`transaction_id` INTEGER NOT NULL,
`lot_id` INTEGER NOT NULL,
FOREIGN KEY (`lot_id` ) REFERENCES `Lots`(`lot_id` ),
FOREIGN KEY (`transaction_id` ) REFERENCES `Transactions`(`transaction_id` )
)"
game_1,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
game_1,Video_Games,"CREATE TABLE Video_Games (
       GameID           INTEGER PRIMARY KEY,
       GName            VARCHAR(40),
       GType            VARCHAR(40)
)"
game_1,Plays_Games,"CREATE TABLE Plays_Games (
       StuID                INTEGER,
       GameID            INTEGER,
       Hours_Played      INTEGER,
       FOREIGN KEY(GameID) REFERENCES Video_Games(GameID),
       FOREIGN KEY(StuID) REFERENCES Student(StuID)
)"
game_1,SportsInfo,"CREATE TABLE SportsInfo (
  StuID INTEGER,
  SportName VARCHAR(32),
  HoursPerWeek INTEGER,
  GamesPlayed INTEGER,
  OnScholarship VARCHAR(1),
  FOREIGN KEY(StuID) REFERENCES Student(StuID)
)"
cre_Drama_Workshop_Groups,Ref_Payment_Methods,"CREATE TABLE Ref_Payment_Methods (
payment_method_code CHAR(10) NOT NULL,
payment_method_description VARCHAR(80),
PRIMARY KEY (payment_method_code),
UNIQUE (payment_method_code)
)"
cre_Drama_Workshop_Groups,Ref_Service_Types,"CREATE TABLE Ref_Service_Types (
Service_Type_Code CHAR(15) NOT NULL,
Parent_Service_Type_Code CHAR(15),
Service_Type_Description VARCHAR(255),
PRIMARY KEY (Service_Type_Code),
UNIQUE (Service_Type_Code)
)"
cre_Drama_Workshop_Groups,Addresses,"CREATE TABLE Addresses (
Address_ID VARCHAR(100) NOT NULL,
Line_1 VARCHAR(255),
Line_2 VARCHAR(255),
City_Town VARCHAR(255),
State_County VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Address_ID),
UNIQUE (Address_ID)
)"
cre_Drama_Workshop_Groups,Products,"CREATE TABLE Products (
Product_ID VARCHAR(100) NOT NULL,
Product_Name VARCHAR(255),
Product_Price DECIMAL(20,4),
Product_Description VARCHAR(255),
Other_Product_Service_Details VARCHAR(255),
PRIMARY KEY (Product_ID),
UNIQUE (Product_ID)
)"
cre_Drama_Workshop_Groups,Marketing_Regions,"CREATE TABLE Marketing_Regions (
Marketing_Region_Code CHAR(15) NOT NULL,
Marketing_Region_Name VARCHAR(255) NOT NULL,
Marketing_Region_Descriptrion VARCHAR(255) NOT NULL,
Other_Details VARCHAR(255),
PRIMARY KEY (Marketing_Region_Code),
UNIQUE (Marketing_Region_Code)
)"
cre_Drama_Workshop_Groups,Clients,"CREATE TABLE Clients (
Client_ID INTEGER NOT NULL,
Address_ID INTEGER NOT NULL,
Customer_Email_Address VARCHAR(255),
Customer_Name VARCHAR(255),
Customer_Phone VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Client_ID),
UNIQUE (Client_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)
)"
cre_Drama_Workshop_Groups,Drama_Workshop_Groups,"CREATE TABLE Drama_Workshop_Groups (
Workshop_Group_ID INTEGER NOT NULL,
Address_ID INTEGER NOT NULL,
Currency_Code CHAR(15) NOT NULL,
Marketing_Region_Code CHAR(15) NOT NULL,
Store_Name VARCHAR(255),
Store_Phone VARCHAR(255),
Store_Email_Address VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Workshop_Group_ID),
UNIQUE (Workshop_Group_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)
)"
cre_Drama_Workshop_Groups,Performers,"CREATE TABLE Performers (
Performer_ID INTEGER NOT NULL,
Address_ID INTEGER NOT NULL,
Customer_Name VARCHAR(255),
Customer_Phone VARCHAR(255),
Customer_Email_Address VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Performer_ID),
UNIQUE (Performer_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)
)"
cre_Drama_Workshop_Groups,Customers,"CREATE TABLE Customers (
Customer_ID VARCHAR(100) NOT NULL,
Address_ID INTEGER NOT NULL,
Customer_Name VARCHAR(255),
Customer_Phone VARCHAR(255),
Customer_Email_Address VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Customer_ID),
UNIQUE (Customer_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)
)"
cre_Drama_Workshop_Groups,Stores,"CREATE TABLE Stores (
Store_ID VARCHAR(100) NOT NULL,
Address_ID INTEGER NOT NULL,
Marketing_Region_Code CHAR(15) NOT NULL,
Store_Name VARCHAR(255),
Store_Phone VARCHAR(255),
Store_Email_Address VARCHAR(255),
Other_Details VARCHAR(255),
PRIMARY KEY (Store_ID),
UNIQUE (Store_ID),
FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),
FOREIGN KEY (Marketing_Region_Code) REFERENCES Marketing_Regions (Marketing_Region_Code)
)"
cre_Drama_Workshop_Groups,Bookings,"CREATE TABLE Bookings (
Booking_ID INTEGER NOT NULL ,
Customer_ID INTEGER NOT NULL,
Workshop_Group_ID VARCHAR(100) NOT NULL,
Status_Code CHAR(15) NOT NULL,
Store_ID INTEGER NOT NULL,
Order_Date DATETIME NOT NULL,
Planned_Delivery_Date DATETIME NOT NULL,
Actual_Delivery_Date DATETIME NOT NULL,
Other_Order_Details VARCHAR(255),
PRIMARY KEY (Booking_ID),
UNIQUE (Booking_ID),
FOREIGN KEY (Customer_ID) REFERENCES Clients (Client_ID),
FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID)
)"
cre_Drama_Workshop_Groups,Performers_in_Bookings,"CREATE TABLE Performers_in_Bookings (
Order_ID INTEGER NOT NULL,
Performer_ID INTEGER NOT NULL,
PRIMARY KEY (Order_ID, Performer_ID),
FOREIGN KEY (Performer_ID) REFERENCES Performers (Performer_ID),
FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID)
)"
cre_Drama_Workshop_Groups,Customer_Orders,"CREATE TABLE Customer_Orders (
Order_ID INTEGER NOT NULL ,
Customer_ID INTEGER NOT NULL,
Store_ID INTEGER NOT NULL,
Order_Date DATETIME NOT NULL,
Planned_Delivery_Date DATETIME NOT NULL,
Actual_Delivery_Date DATETIME NOT NULL,
Other_Order_Details VARCHAR(255),
PRIMARY KEY (Order_ID),
UNIQUE (Order_ID),
FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),
FOREIGN KEY (Store_ID) REFERENCES Stores (Store_ID)
)"
cre_Drama_Workshop_Groups,Order_Items,"CREATE TABLE Order_Items (
Order_Item_ID INTEGER NOT NULL ,
Order_ID INTEGER NOT NULL,
Product_ID INTEGER NOT NULL,
Order_Quantity VARCHAR(288),
Other_Item_Details VARCHAR(255),
PRIMARY KEY (Order_Item_ID),
FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),
FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)
)"
cre_Drama_Workshop_Groups,Invoices,"CREATE TABLE Invoices (
Invoice_ID INTEGER NOT NULL,
Order_ID INTEGER NOT NULL,
payment_method_code CHAR(15),
Product_ID INTEGER NOT NULL,
Order_Quantity VARCHAR(288),
Other_Item_Details VARCHAR(255),
Order_Item_ID INTEGER NOT NULL,
PRIMARY KEY (Invoice_ID),
FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),
FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID),
FOREIGN KEY (payment_method_code) REFERENCES Ref_Payment_Methods (payment_method_code)
)"
cre_Drama_Workshop_Groups,Services,"CREATE TABLE Services (
Service_ID INTEGER NOT NULL,
Service_Type_Code CHAR(15),
Workshop_Group_ID INTEGER NOT NULL,
Product_Description VARCHAR(255),
Product_Name VARCHAR(255),
Product_Price DECIMAL(20,4),
Other_Product_Service_Details VARCHAR(255),
PRIMARY KEY (Service_ID),
UNIQUE (Service_ID),
FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID),
FOREIGN KEY (Service_Type_Code) REFERENCES Ref_Service_Types (Service_Type_Code)
)"
cre_Drama_Workshop_Groups,Bookings_Services,"CREATE TABLE Bookings_Services (
Order_ID INTEGER NOT NULL,
Product_ID INTEGER NOT NULL,
PRIMARY KEY (Order_ID, Product_ID),
FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID),
FOREIGN KEY (Product_ID) REFERENCES Services (Service_ID)
)"
cre_Drama_Workshop_Groups,Invoice_Items,"CREATE TABLE Invoice_Items (
Invoice_Item_ID INTEGER NOT NULL ,
Invoice_ID INTEGER NOT NULL,
Order_ID INTEGER NOT NULL,
Order_Item_ID INTEGER NOT NULL,
Product_ID INTEGER NOT NULL,
Order_Quantity INTEGER,
Other_Item_Details VARCHAR(255),
PRIMARY KEY (Invoice_Item_ID),
FOREIGN KEY (Order_Item_ID) REFERENCES Order_Items (Order_Item_ID),
FOREIGN KEY (Invoice_ID) REFERENCES Invoices (Invoice_ID),
FOREIGN KEY (Order_ID, Product_ID) REFERENCES Bookings_Services (Order_ID,Product_ID)
)"
election,county,"CREATE TABLE ""county"" (
""County_Id"" int,
""County_name"" text,
""Population"" real,
""Zip_code"" text,
PRIMARY KEY (""County_Id"")
)"
election,party,"CREATE TABLE ""party"" (
""Party_ID"" int,
""Year"" real,
""Party"" text,
""Governor"" text,
""Lieutenant_Governor"" text,
""Comptroller"" text,
""Attorney_General"" text,
""US_Senate"" text,
PRIMARY KEY (""Party_ID"")
)"
election,election,"CREATE TABLE ""election"" (
""Election_ID"" int,
""Counties_Represented"" text,
""District"" int,
""Delegate"" text,
""Party"" int,
""First_Elected"" real,
""Committee"" text,
PRIMARY KEY (""Election_ID""),
FOREIGN KEY (`Party`) REFERENCES `party`(`Party_ID`),
FOREIGN KEY (`District`) REFERENCES `county`(`County_Id`)
)"
book_2,publication,"CREATE TABLE ""publication"" (
""Publication_ID"" int,
""Book_ID"" int,
""Publisher"" text,
""Publication_Date"" text,
""Price"" real,
PRIMARY KEY (""Publication_ID""),
FOREIGN KEY (""Book_ID"") REFERENCES ""book""(""Book_ID"")
)"
book_2,book,"CREATE TABLE ""book"" (
""Book_ID"" int,
""Title"" text,
""Issues"" real,
""Writer"" text,
PRIMARY KEY (""Book_ID"")
)"
music_4,artist,"CREATE TABLE ""artist"" (
    ""Artist_ID"" int,
    ""Artist"" text,
    ""Age"" int,
    ""Famous_Title"" text,
    ""Famous_Release_date"" text,
    PRIMARY KEY (""Artist_ID"")
)"
music_4,volume,"CREATE TABLE ""volume"" (
    ""Volume_ID"" int,
    ""Volume_Issue"" text,
    ""Issue_Date"" text,
    ""Weeks_on_Top"" real,
    ""Song"" text,
    ""Artist_ID"" int,
    PRIMARY KEY (""Volume_ID""),
    FOREIGN KEY (`Artist_ID`) REFERENCES `artist`(`Artist_ID`)
)"
music_4,music_festival,"CREATE TABLE ""music_festival"" (
    ""ID"" int,
    ""Music_Festival"" text,
    ""Date_of_ceremony"" text,
    ""Category"" text,
    ""Volume"" int,
    ""Result"" text,
    PRIMARY KEY (`ID`),
    FOREIGN KEY (`Volume`) REFERENCES `volume`(`Volume_ID`)
)"
small_bank_1,ACCOUNTS,"CREATE TABLE ACCOUNTS (
    custid      BIGINT      NOT NULL PRIMARY KEY,
    name        VARCHAR(64) NOT NULL
)"
small_bank_1,SAVINGS,"CREATE TABLE SAVINGS (
    custid      BIGINT      NOT NULL PRIMARY KEY,
    balance        FLOAT       NOT NULL,
    FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)
)"
small_bank_1,CHECKING,"CREATE TABLE CHECKING (
    custid      BIGINT      NOT NULL PRIMARY KEY,
    balance        FLOAT       NOT NULL,
    FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)
)"
local_govt_in_alabama,Services,"CREATE TABLE Services (
Service_ID INTEGER NOT NULL,
Service_Type_Code CHAR(15) NOT NULL,
PRIMARY KEY (Service_ID)
)"
local_govt_in_alabama,Participants,"CREATE TABLE Participants (
Participant_ID INTEGER NOT NULL,
Participant_Type_Code CHAR(15) NOT NULL,
Participant_Details VARCHAR(255),
PRIMARY KEY (Participant_ID)
)"
local_govt_in_alabama,Events,"CREATE TABLE Events (
Event_ID INTEGER NOT NULL,
Service_ID INTEGER NOT NULL,
Event_Details VARCHAR(255),
PRIMARY KEY (Event_ID),
FOREIGN KEY (Service_ID) REFERENCES Services (Service_ID)
)"
local_govt_in_alabama,Participants_in_Events,"CREATE TABLE Participants_in_Events (
Event_ID INTEGER NOT NULL,
Participant_ID INTEGER NOT NULL,
PRIMARY KEY (Event_ID, Participant_ID),
FOREIGN KEY (Participant_ID) REFERENCES Participants (Participant_ID),
FOREIGN KEY (Event_ID) REFERENCES Events (Event_ID)
)"
device,device,"CREATE TABLE ""device"" (
""Device_ID"" int,
""Device"" text,
""Carrier"" text,
""Package_Version"" text,
""Applications"" text,
""Software_Platform"" text,
PRIMARY KEY (""Device_ID"")
)"
device,shop,"CREATE TABLE ""shop"" (
""Shop_ID"" int,
""Shop_Name"" text,
""Location"" text,
""Open_Date"" text,
""Open_Year"" int,
PRIMARY KEY (""Shop_ID"")
)"
device,stock,"CREATE TABLE ""stock"" (
""Shop_ID"" int,
""Device_ID"" int,
""Quantity"" int,
PRIMARY KEY (""Shop_ID"",""Device_ID""),
FOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),
FOREIGN KEY (`Device_ID`) REFERENCES `device`(`Device_ID`)
)"
sports_competition,club,"CREATE TABLE ""club"" (
""Club_ID"" int,
""name"" text,
""Region"" text,
""Start_year"" text,
PRIMARY KEY (""Club_ID"")
)"
sports_competition,club_rank,"CREATE TABLE ""club_rank"" (
""Rank"" real,
""Club_ID"" int,
""Gold"" real,
""Silver"" real,
""Bronze"" real,
""Total"" real,
PRIMARY KEY (""Rank"",""Club_ID"")
FOREIGN KEY (`Club_ID`) REFERENCES `club`(`Club_ID`)
)"
sports_competition,player,"CREATE TABLE ""player"" (
""Player_ID"" int,
""name"" text,
""Position"" text,
""Club_ID"" int,
""Apps"" real,
""Tries"" real,
""Goals"" text,
""Points"" real,
PRIMARY KEY (""Player_ID""),
FOREIGN KEY (`Club_ID`) REFERENCES `club`(`Club_ID`)
)"
sports_competition,competition,"CREATE TABLE ""competition"" (
""Competition_ID"" int,
""Year"" real,
""Competition_type"" text,
""Country"" text,
PRIMARY KEY (""Competition_ID"")
)"
sports_competition,competition_result,"CREATE TABLE ""competition_result"" (
""Competition_ID"" int,
""Club_ID_1"" int,
""Club_ID_2"" int,
""Score"" text,
PRIMARY KEY (""Competition_ID"",""Club_ID_1"",""Club_ID_2""),
FOREIGN KEY (`Club_ID_1`) REFERENCES `club`(`Club_ID`),
FOREIGN KEY (`Club_ID_2`) REFERENCES `club`(`Club_ID`),
FOREIGN KEY (`Competition_ID`) REFERENCES `competition`(`Competition_ID`)
)"
workshop_paper,workshop,"CREATE TABLE ""workshop"" (
""Workshop_ID"" int,
""Date"" text,
""Venue"" text,
""Name"" text,
PRIMARY KEY (""Workshop_ID"")
)"
workshop_paper,submission,"CREATE TABLE ""submission"" (
""Submission_ID"" int,
""Scores"" real,
""Author"" text,
""College"" text,
PRIMARY KEY (""Submission_ID"")
)"
workshop_paper,Acceptance,"CREATE TABLE ""Acceptance"" (
""Submission_ID"" int,
""Workshop_ID"" int,
""Result"" text,
PRIMARY KEY (""Submission_ID"",""Workshop_ID""),
FOREIGN KEY (""Submission_ID"") REFERENCES `submission`(""Submission_ID""),
FOREIGN KEY (""Workshop_ID"") REFERENCES `workshop`(""Workshop_ID"")
)"
tracking_orders,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`customer_name` VARCHAR(80),
`customer_details` VARCHAR(255)
)"
tracking_orders,Invoices,"CREATE TABLE `Invoices` (
`invoice_number` INTEGER PRIMARY KEY,
`invoice_date` DATETIME,
`invoice_details` VARCHAR(255)
)"
tracking_orders,Orders,"CREATE TABLE `Orders` (
`order_id` INTEGER PRIMARY KEY,
`customer_id` INTEGER NOT NULL,
`order_status` VARCHAR(10) NOT NULL,
`date_order_placed` DATETIME NOT NULL,
`order_details` VARCHAR(255),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
tracking_orders,Products,"CREATE TABLE `Products` (
`product_id` INTEGER PRIMARY KEY,
`product_name` VARCHAR(80),
`product_details` VARCHAR(255)
)"
tracking_orders,Order_Items,"CREATE TABLE `Order_Items` (
`order_item_id` INTEGER PRIMARY KEY,
`product_id` INTEGER NOT NULL,
`order_id` INTEGER NOT NULL,
`order_item_status` VARCHAR(10) NOT NULL,
`order_item_details` VARCHAR(255),
FOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` )
)"
tracking_orders,Shipments,"CREATE TABLE `Shipments` (
`shipment_id` INTEGER PRIMARY KEY,
`order_id` INTEGER NOT NULL,
`invoice_number` INTEGER NOT NULL,
`shipment_tracking_number` VARCHAR(80),
`shipment_date` DATETIME,
`other_shipment_details` VARCHAR(255),
FOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` ),
FOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` )
)"
tracking_orders,Shipment_Items,"CREATE TABLE `Shipment_Items` (
`shipment_id` INTEGER NOT NULL,
`order_item_id` INTEGER NOT NULL,
FOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` ),
FOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` )
)"
school_bus,driver,"CREATE TABLE ""driver"" (
""Driver_ID"" int,
""Name"" text,
""Party"" text,
""Home_city"" text,
""Age"" int,
PRIMARY KEY (""Driver_ID"")
)"
school_bus,school,"CREATE TABLE ""school"" (
""School_ID"" int,
""Grade"" text,
""School"" text,
""Location"" text,
""Type"" text,
PRIMARY KEY (""School_ID"")
)"
school_bus,school_bus,"CREATE TABLE ""school_bus"" (
""School_ID"" int,
""Driver_ID"" int,
""Years_Working"" int,
""If_full_time"" bool,
PRIMARY KEY (""School_ID"",""Driver_ID""),
FOREIGN KEY (""School_ID"") REFERENCES `school`(""School_ID""),
FOREIGN KEY (""Driver_ID"") REFERENCES `driver`(""Driver_ID"")
)"
protein_institute,building,"CREATE TABLE ""building"" (
""building_id"" text,
""Name"" text,
""Street_address"" text,
""Years_as_tallest"" text,
""Height_feet"" int,
""Floors"" int,
PRIMARY KEY(""building_id"")
)"
protein_institute,Institution,"CREATE TABLE ""Institution"" (
""Institution_id""  text,
""Institution"" text,
""Location"" text,
""Founded"" real,
""Type"" text,
""Enrollment"" int,
""Team"" text,
""Primary_Conference"" text,
""building_id"" text,
PRIMARY KEY(""Institution_id""),
FOREIGN  KEY (""building_id"") REFERENCES ""building""(""building_id"")
)"
protein_institute,protein,"CREATE TABLE ""protein"" (
""common_name"" text,
""protein_name"" text,
""divergence_from_human_lineage"" real,
""accession_number"" text,
""sequence_length"" real,
""sequence_identity_to_human_protein"" text,
""Institution_id"" text,
PRIMARY KEY(""common_name""),
FOREIGN KEY(""Institution_id"") REFERENCES ""Institution""(""Institution_id"")
)"
activity_1,Activity,"CREATE TABLE Activity (
  actid INTEGER PRIMARY KEY,
  activity_name varchar(25)
)"
activity_1,Participates_in,"CREATE TABLE Participates_in (
  stuid INTEGER,
  actid INTEGER,
  FOREIGN KEY(stuid) REFERENCES Student(StuID),
  FOREIGN KEY(actid) REFERENCES Activity(actid)
)"
activity_1,Faculty_Participates_in,"CREATE TABLE Faculty_Participates_in (
  FacID INTEGER,
  actid INTEGER,
  FOREIGN KEY(FacID) REFERENCES Faculty(FacID),
  FOREIGN KEY(actid) REFERENCES Activity(actid)
)"
activity_1,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
activity_1,Faculty,"CREATE TABLE Faculty (
       FacID 	       INTEGER PRIMARY KEY,
       Lname		VARCHAR(15),
       Fname		VARCHAR(15),
       Rank		VARCHAR(15),
       Sex		VARCHAR(1),
       Phone		INTEGER,
       Room		VARCHAR(5),
       Building		VARCHAR(13)
)"
phone_market,phone,"CREATE TABLE ""phone"" (
""Name"" text,
""Phone_ID"" int,
""Memory_in_G"" int,
""Carrier"" text,
""Price"" real,
PRIMARY KEY (""Phone_ID"")
)"
phone_market,market,"CREATE TABLE ""market"" (
""Market_ID"" int,
""District"" text,
""Num_of_employees"" int,
""Num_of_shops"" real,
""Ranking"" int,
PRIMARY KEY (""Market_ID"")
)"
phone_market,phone_market,"CREATE TABLE ""phone_market"" (
""Market_ID"" int,
""Phone_ID"" text,
""Num_of_stock"" int,
PRIMARY KEY (""Market_ID"",""Phone_ID""),
FOREIGN KEY (""Market_ID"") REFERENCES `market`(""Market_ID""),
FOREIGN KEY (""Phone_ID"") REFERENCES `phone`(""Phone_ID"")
)"
entrepreneur,entrepreneur,"CREATE TABLE ""entrepreneur"" (
""Entrepreneur_ID"" int,
""People_ID"" int,
""Company"" text,
""Money_Requested"" real,
""Investor"" text,
PRIMARY KEY (""Entrepreneur_ID""),
FOREIGN KEY (""People_ID"") REFERENCES ""people""(""People_ID"")
)"
entrepreneur,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Name"" text,
""Height"" real,
""Weight"" real,
""Date_of_Birth"" text,
PRIMARY KEY (""People_ID"")
)"
apartment_rentals,Apartment_Buildings,"CREATE TABLE Apartment_Buildings (
building_id INTEGER NOT NULL,
building_short_name CHAR(15),
building_full_name VARCHAR(80),
building_description VARCHAR(255),
building_address VARCHAR(255),
building_manager VARCHAR(50),
building_phone VARCHAR(80),
PRIMARY KEY (building_id),
UNIQUE (building_id)
)"
apartment_rentals,Apartments,"CREATE TABLE Apartments (
apt_id INTEGER NOT NULL ,
building_id INTEGER NOT NULL,
apt_type_code CHAR(15),
apt_number CHAR(10),
bathroom_count INTEGER,
bedroom_count INTEGER,
room_count CHAR(5),
PRIMARY KEY (apt_id),
UNIQUE (apt_id),
FOREIGN KEY (building_id) REFERENCES Apartment_Buildings (building_id)
)"
apartment_rentals,Apartment_Facilities,"CREATE TABLE Apartment_Facilities (
apt_id INTEGER NOT NULL,
facility_code CHAR(15) NOT NULL,
PRIMARY KEY (apt_id, facility_code),
FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id)
)"
apartment_rentals,Guests,"CREATE TABLE Guests (
guest_id INTEGER NOT NULL ,
gender_code CHAR(1),
guest_first_name VARCHAR(80),
guest_last_name VARCHAR(80),
date_of_birth DATETIME,
PRIMARY KEY (guest_id),
UNIQUE (guest_id)
)"
apartment_rentals,Apartment_Bookings,"CREATE TABLE Apartment_Bookings (
apt_booking_id INTEGER NOT NULL,
apt_id INTEGER,
guest_id INTEGER NOT NULL,
booking_status_code CHAR(15) NOT NULL,
booking_start_date DATETIME,
booking_end_date DATETIME,
PRIMARY KEY (apt_booking_id),
UNIQUE (apt_booking_id),
FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id),
FOREIGN KEY (guest_id) REFERENCES Guests (guest_id)
)"
apartment_rentals,View_Unit_Status,"CREATE TABLE View_Unit_Status (
apt_id INTEGER,
apt_booking_id INTEGER,
status_date DATETIME NOT NULL,
available_yn BIT,
PRIMARY KEY (status_date),
FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id),
FOREIGN KEY (apt_booking_id) REFERENCES Apartment_Bookings (apt_booking_id)
)"
medicine_enzyme_interaction,medicine,"CREATE TABLE ""medicine"" (
""id"" int,
""name"" text,
""Trade_Name"" text,
""FDA_approved"" text,
primary key (""id"")
)"
medicine_enzyme_interaction,enzyme,"CREATE TABLE ""enzyme"" (
""id"" int,
""name"" text,
""Location"" text,
""Product"" text,
""Chromosome"" text,
""OMIM"" int,
""Porphyria"" text,
primary key (""id"")
)"
medicine_enzyme_interaction,medicine_enzyme_interaction,"CREATE TABLE ""medicine_enzyme_interaction"" (
""enzyme_id"" int,
""medicine_id"" int,
""interaction_type"" text,
primary key (""enzyme_id"", ""medicine_id""),
foreign key (""enzyme_id"") references `enzyme`(""id""),
foreign key (""medicine_id"") references `medicine`(""id"")
)"
gymnast,gymnast,"CREATE TABLE ""gymnast"" (
""Gymnast_ID"" int,
""Floor_Exercise_Points"" real,
""Pommel_Horse_Points"" real,
""Rings_Points"" real,
""Vault_Points"" real,
""Parallel_Bars_Points"" real,
""Horizontal_Bar_Points"" real,
""Total_Points"" real,
PRIMARY KEY (""Gymnast_ID""),
FOREIGN KEY (""Gymnast_ID"") REFERENCES ""people""(""People_ID"")
)"
gymnast,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Name"" text,
""Age"" real,
""Height"" real,
""Hometown"" text,
PRIMARY KEY (""People_ID"")
)"
student_1,list,"CREATE TABLE ""list"" ( 
	""LastName"" TEXT, 
	""FirstName"" TEXT, 
	""Grade"" INTEGER, 
	""Classroom"" INTEGER,
	PRIMARY KEY(LastName, FirstName)
)"
student_1,teachers,"CREATE TABLE ""teachers"" ( 
	""LastName"" TEXT, 
	""FirstName"" TEXT, 
	""Classroom"" INTEGER,
	PRIMARY KEY(LastName, FirstName)
)"
store_1,artists,"CREATE TABLE artists
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(120)
)"
store_1,albums,"CREATE TABLE albums
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title VARCHAR(160)  NOT NULL,
    artist_id INTEGER  NOT NULL,
    FOREIGN KEY (artist_id) REFERENCES artists (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,employees,"CREATE TABLE employees
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    last_name VARCHAR(20)  NOT NULL,
    first_name VARCHAR(20)  NOT NULL,
    title VARCHAR(30),
    reports_to INTEGER,
    birth_date TIMESTAMP,
    hire_date TIMESTAMP,
    address VARCHAR(70),
    city VARCHAR(40),
    state VARCHAR(40),
    country VARCHAR(40),
    postal_code VARCHAR(10),
    phone VARCHAR(24),
    fax VARCHAR(24),
    email VARCHAR(60),
    FOREIGN KEY (reports_to) REFERENCES employees (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,customers,"CREATE TABLE customers
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR(40)  NOT NULL,
    last_name VARCHAR(20)  NOT NULL,
    company VARCHAR(80),
    address VARCHAR(70),
    city VARCHAR(40),
    state VARCHAR(40),
    country VARCHAR(40),
    postal_code VARCHAR(10),
    phone VARCHAR(24),
    fax VARCHAR(24),
    email VARCHAR(60)  NOT NULL,
    support_rep_id INTEGER,
    FOREIGN KEY (support_rep_id) REFERENCES employees (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,genres,"CREATE TABLE genres
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(120)
)"
store_1,invoices,"CREATE TABLE invoices
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER  NOT NULL,
    invoice_date TIMESTAMP  NOT NULL,
    billing_address VARCHAR(70),
    billing_city VARCHAR(40),
    billing_state VARCHAR(40),
    billing_country VARCHAR(40),
    billing_postal_code VARCHAR(10),
    total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,media_types,"CREATE TABLE media_types
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(120)
)"
store_1,tracks,"CREATE TABLE tracks
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(200)  NOT NULL,
    album_id INTEGER,
    media_type_id INTEGER  NOT NULL,
    genre_id INTEGER,
    composer VARCHAR(220),
    milliseconds INTEGER  NOT NULL,
    bytes INTEGER,
    unit_price NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (album_id) REFERENCES albums (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (genre_id) REFERENCES genres (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (media_type_id) REFERENCES media_types (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,invoice_lines,"CREATE TABLE invoice_lines
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    invoice_id INTEGER  NOT NULL,
    track_id INTEGER  NOT NULL,
    unit_price NUMERIC(10,2)  NOT NULL,
    quantity INTEGER  NOT NULL,
    FOREIGN KEY (invoice_id) REFERENCES invoices (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (track_id) REFERENCES tracks (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
store_1,playlists,"CREATE TABLE playlists
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(120)
)"
store_1,playlist_tracks,"CREATE TABLE playlist_tracks
(
    playlist_id INTEGER  NOT NULL,
    track_id INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (playlist_id, track_id),
    FOREIGN KEY (playlist_id) REFERENCES playlists (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (track_id) REFERENCES tracks (id)
    ON DELETE NO ACTION ON UPDATE NO ACTION
)"
employee_hire_evaluation,employee,"CREATE TABLE ""employee"" (
""Employee_ID"" int,
""Name"" text,
""Age"" int,
""City"" text,
PRIMARY KEY (""Employee_ID"")
)"
employee_hire_evaluation,shop,"CREATE TABLE ""shop"" (
""Shop_ID"" int,
""Name"" text,
""Location"" text,
""District"" text,
""Number_products"" int,
""Manager_name"" text,
PRIMARY KEY (""Shop_ID"")
)"
employee_hire_evaluation,hiring,"CREATE TABLE ""hiring"" (
""Shop_ID"" int,
""Employee_ID"" int,
""Start_from"" text,
""Is_full_time"" bool,
PRIMARY KEY (""Employee_ID""),
FOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),
FOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)
)"
employee_hire_evaluation,evaluation,"CREATE TABLE ""evaluation"" (
""Employee_ID"" text,
""Year_awarded"" text,
""Bonus"" real,
PRIMARY KEY (""Employee_ID"",""Year_awarded""),
FOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)
)"
college_1,CLASS,"CREATE TABLE CLASS (
CLASS_CODE varchar(5) PRIMARY KEY,
CRS_CODE varchar(10),
CLASS_SECTION varchar(2),
CLASS_TIME varchar(20),
CLASS_ROOM varchar(8),
PROF_NUM int,
FOREIGN KEY (CRS_CODE) REFERENCES COURSE(CRS_CODE)
FOREIGN KEY (PROF_NUM) REFERENCES EMPLOYEE(EMP_NUM)
)"
college_1,COURSE,"CREATE TABLE COURSE (
CRS_CODE varchar(10) PRIMARY KEY,
DEPT_CODE varchar(10),
CRS_DESCRIPTION varchar(35),
CRS_CREDIT float(8),
FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT(DEPT_CODE)
)"
college_1,DEPARTMENT,"CREATE TABLE DEPARTMENT (
DEPT_CODE varchar(10) PRIMARY KEY,
DEPT_NAME varchar(30),
SCHOOL_CODE varchar(8),
EMP_NUM int,
DEPT_ADDRESS varchar(20),
DEPT_EXTENSION varchar(4),
FOREIGN KEY (EMP_NUM) REFERENCES EMPLOYEE(EMP_NUM)
)"
college_1,EMPLOYEE,"CREATE TABLE EMPLOYEE (
EMP_NUM int PRIMARY KEY,
EMP_LNAME varchar(15),
EMP_FNAME varchar(12),
EMP_INITIAL varchar(1),
EMP_JOBCODE varchar(5),
EMP_HIREDATE datetime,
EMP_DOB datetime
)"
college_1,ENROLL,"CREATE TABLE ENROLL (
CLASS_CODE varchar(5),
STU_NUM int,
ENROLL_GRADE varchar(50),
FOREIGN KEY (CLASS_CODE) REFERENCES CLASS(CLASS_CODE)
FOREIGN KEY (STU_NUM) REFERENCES STUDENT(STU_NUM)
)"
college_1,PROFESSOR,"CREATE TABLE PROFESSOR (
EMP_NUM int,
DEPT_CODE varchar(10),
PROF_OFFICE varchar(50),
PROF_EXTENSION varchar(4),
PROF_HIGH_DEGREE varchar(5),
FOREIGN KEY (EMP_NUM) REFERENCES EMPLOYEE(EMP_NUM),
FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT(DEPT_CODE)
)"
college_1,STUDENT,"CREATE TABLE STUDENT (
STU_NUM int PRIMARY KEY,
STU_LNAME varchar(15),
STU_FNAME varchar(15),
STU_INIT varchar(1),
STU_DOB datetime,
STU_HRS int,
STU_CLASS varchar(2),
STU_GPA float(8),
STU_TRANSFER numeric,
DEPT_CODE varchar(18),
STU_PHONE varchar(4),
PROF_NUM int,
FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT(DEPT_CODE)
)"
local_govt_mdm,Customer_Master_Index,"CREATE TABLE Customer_Master_Index (
master_customer_id INTEGER NOT NULL,
cmi_details VARCHAR(255),
PRIMARY KEY (master_customer_id)
)"
local_govt_mdm,CMI_Cross_References,"CREATE TABLE CMI_Cross_References (
cmi_cross_ref_id INTEGER NOT NULL,
master_customer_id INTEGER NOT NULL,
source_system_code CHAR(15) NOT NULL,
PRIMARY KEY (cmi_cross_ref_id),
FOREIGN KEY (master_customer_id) REFERENCES Customer_Master_Index (master_customer_id)

)"
local_govt_mdm,Council_Tax,"CREATE TABLE Council_Tax (
council_tax_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (council_tax_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
local_govt_mdm,Business_Rates,"CREATE TABLE Business_Rates (
business_rates_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (business_rates_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
local_govt_mdm,Benefits_Overpayments,"CREATE TABLE Benefits_Overpayments (
council_tax_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (council_tax_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
local_govt_mdm,Parking_Fines,"CREATE TABLE Parking_Fines (
council_tax_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (council_tax_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
local_govt_mdm,Rent_Arrears,"CREATE TABLE Rent_Arrears (
council_tax_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (council_tax_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
local_govt_mdm,Electoral_Register,"CREATE TABLE Electoral_Register (
electoral_register_id INTEGER NOT NULL,
cmi_cross_ref_id INTEGER NOT NULL,
PRIMARY KEY (electoral_register_id),
FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)
)"
company_office,buildings,"CREATE TABLE ""buildings"" (
""id"" int,
""name"" text,
""City"" text,
""Height"" int,
""Stories"" int,
""Status"" text,
PRIMARY KEY(""id"")
)"
company_office,Companies,"CREATE TABLE ""Companies"" (
""id"" int,
""name"" text,
""Headquarters"" text,
""Industry"" text,
""Sales_billion"" real,
""Profits_billion"" real,
""Assets_billion"" real,
""Market_Value_billion"" text,
PRIMARY KEY (""id"")
)"
company_office,Office_locations,"CREATE TABLE ""Office_locations"" (
""building_id"" int,
""company_id"" int,
""move_in_year"" int,
PRIMARY KEY (""building_id"", ""company_id""),
FOREIGN KEY (""building_id"") REFERENCES ""buildings""(""id""),
FOREIGN KEY (""company_id"") REFERENCES ""Companies""(""id"")
)"
battle_death,battle,"CREATE TABLE ""battle"" (
""id"" int,
""name"" text,
""date"" text,
""bulgarian_commander"" text,
""latin_commander"" text,
""result"" text,
primary key(""id"")
)"
battle_death,ship,"CREATE TABLE ""ship"" (
""lost_in_battle"" int,
""id"" int,
""name"" text,
""tonnage"" text,
""ship_type"" text,
""location"" text,
""disposition_of_ship"" text,
primary key(""id""),
foreign key (`lost_in_battle`) references `battle`(""id"") 
)"
battle_death,death,"CREATE TABLE ""death"" (
""caused_by_ship_id"" int,
""id"" int,
""note"" text,
""killed"" int,
""injured"" int,
primary key(""id""),
foreign key (""caused_by_ship_id"") references `ship`(""id"") 
)"
dorm_1,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
dorm_1,Dorm,"CREATE TABLE Dorm (
       dormid		INTEGER,
       dorm_name	VARCHAR(20),
       student_capacity	INTEGER,
       gender			VARCHAR(1)
)"
dorm_1,Dorm_amenity,"CREATE TABLE Dorm_amenity (
       amenid			INTEGER,
       amenity_name		VARCHAR(25)
)"
dorm_1,Has_amenity,"CREATE TABLE Has_amenity (
       dormid			INTEGER,
       amenid				INTEGER,
	FOREIGN KEY (dormid) REFERENCES `Dorm`(dormid),
	FOREIGN KEY (amenid) REFERENCES `Dorm_amenity`(amenid)
)"
dorm_1,Lives_in,"CREATE TABLE Lives_in (
       stuid 	      INTEGER,
       dormid		INTEGER,
       room_number	INTEGER,
	FOREIGN KEY (stuid) REFERENCES `Student`(StuID),
        FOREIGN KEY (dormid) REFERENCES `Dorm`(dormid)
)"
products_for_hire,Discount_Coupons,"CREATE TABLE `Discount_Coupons` (
`coupon_id` INTEGER PRIMARY KEY,
`date_issued` DATETIME,
`coupon_amount` DECIMAL(19,4)
)"
products_for_hire,Customers,"CREATE TABLE `Customers` (
`customer_id` INTEGER PRIMARY KEY,
`coupon_id` INTEGER NOT NULL,
`good_or_bad_customer` VARCHAR(4),
`first_name` VARCHAR(80),
`last_name` VARCHAR(80),
`gender_mf` VARCHAR(1),
`date_became_customer` DATETIME,
`date_last_hire` DATETIME,
FOREIGN KEY (`coupon_id` ) REFERENCES `Discount_Coupons`(`coupon_id` )
)"
products_for_hire,Bookings,"CREATE TABLE `Bookings` (
`booking_id` INTEGER PRIMARY KEY ,
`customer_id` INTEGER NOT NULL,
`booking_status_code` VARCHAR(10) NOT NULL,
`returned_damaged_yn` VARCHAR(40),
`booking_start_date` DATETIME,
`booking_end_date` DATETIME,
`count_hired` VARCHAR(40),
`amount_payable` DECIMAL(19,4),
`amount_of_discount` DECIMAL(19,4),
`amount_outstanding` DECIMAL(19,4),
`amount_of_refund` DECIMAL(19,4),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
products_for_hire,Products_for_Hire,"CREATE TABLE `Products_for_Hire` (
`product_id` INTEGER PRIMARY KEY,
`product_type_code` VARCHAR(15) NOT NULL,
`daily_hire_cost` DECIMAL(19,4),
`product_name` VARCHAR(80),
`product_description` VARCHAR(255)
)"
products_for_hire,Payments,"CREATE TABLE `Payments` (
`payment_id` INTEGER PRIMARY KEY,
`booking_id` INTEGER,
`customer_id` INTEGER NOT NULL,
`payment_type_code` VARCHAR(15) NOT NULL,
`amount_paid_in_full_yn` VARCHAR(1),
`payment_date` DATETIME,
`amount_due` DECIMAL(19,4),
`amount_paid` DECIMAL(19,4),
FOREIGN KEY (`booking_id` ) REFERENCES `Bookings`(`booking_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )
)"
products_for_hire,Products_Booked,"CREATE TABLE `Products_Booked` (
`booking_id` INTEGER NOT NULL,
`product_id` INTEGER NOT NULL,
`returned_yn` VARCHAR(1),
`returned_late_yn` VARCHAR(1),
`booked_count` INTEGER,
`booked_amount` FLOAT NULL,
PRIMARY KEY (`booking_id`, `product_id`)
FOREIGN KEY (`booking_id` ) REFERENCES `Bookings`(`booking_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products_for_Hire`(`product_id` )
)"
products_for_hire,View_Product_Availability,"CREATE TABLE `View_Product_Availability` (
`product_id` INTEGER NOT NULL,
`booking_id` INTEGER NOT NULL,
`status_date` DATETIME PRIMARY KEY,
`available_yn` VARCHAR(1),
FOREIGN KEY (`booking_id` ) REFERENCES `Bookings`(`booking_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Products_for_Hire`(`product_id` )
)"
coffee_shop,shop,"CREATE TABLE ""shop"" (
""Shop_ID"" int,
""Address"" text,
""Num_of_staff"" text,
""Score"" real,
""Open_Year"" text,
PRIMARY KEY (""Shop_ID"")
)"
coffee_shop,member,"CREATE TABLE ""member"" (
""Member_ID"" int,
""Name"" text,
""Membership_card"" text,
""Age"" int,
""Time_of_purchase"" int,
""Level_of_membership"" int,
""Address"" text,
PRIMARY KEY (""Member_ID"")
)"
coffee_shop,happy_hour,"CREATE TABLE ""happy_hour"" (
""HH_ID"" int,
""Shop_ID"" int,
""Month"" text,
""Num_of_shaff_in_charge"" int,
PRIMARY KEY (""HH_ID"",""Shop_ID"",""Month""),
FOREIGN KEY (""Shop_ID"") REFERENCES `shop`(""Shop_ID"")
)"
coffee_shop,happy_hour_member,"CREATE TABLE ""happy_hour_member"" (
""HH_ID"" int,
""Member_ID"" int,
""Total_amount"" real,
PRIMARY KEY (""HH_ID"",""Member_ID""),
FOREIGN KEY (""Member_ID"") REFERENCES `member`(""Member_ID"")
)"
singer,singer,"CREATE TABLE ""singer"" (
""Singer_ID"" int,
""Name"" text,
""Birth_Year"" real,
""Net_Worth_Millions"" real,
""Citizenship"" text,
PRIMARY KEY (""Singer_ID"")
)"
singer,song,"CREATE TABLE ""song"" (
""Song_ID"" int,
""Title"" text,
""Singer_ID"" int,
""Sales"" real,
""Highest_Position"" real,
PRIMARY KEY (""Song_ID""),
FOREIGN KEY (""Singer_ID"") REFERENCES `singer`(""Singer_ID"")
)"
chinook_1,Album,"CREATE TABLE `Album` (
  `AlbumId` integer NOT NULL
,  `Title` varchar(160) NOT NULL
,  `ArtistId` integer NOT NULL
,  PRIMARY KEY (`AlbumId`)
,  CONSTRAINT `FK_AlbumArtistId` FOREIGN KEY (`ArtistId`) REFERENCES `Artist` (`ArtistId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,Artist,"CREATE TABLE `Artist` (
  `ArtistId` integer NOT NULL
,  `Name` varchar(120) DEFAULT NULL
,  PRIMARY KEY (`ArtistId`)
)"
chinook_1,Customer,"CREATE TABLE `Customer` (
  `CustomerId` integer NOT NULL
,  `FirstName` varchar(40) NOT NULL
,  `LastName` varchar(20) NOT NULL
,  `Company` varchar(80) DEFAULT NULL
,  `Address` varchar(70) DEFAULT NULL
,  `City` varchar(40) DEFAULT NULL
,  `State` varchar(40) DEFAULT NULL
,  `Country` varchar(40) DEFAULT NULL
,  `PostalCode` varchar(10) DEFAULT NULL
,  `Phone` varchar(24) DEFAULT NULL
,  `Fax` varchar(24) DEFAULT NULL
,  `Email` varchar(60) NOT NULL
,  `SupportRepId` integer DEFAULT NULL
,  PRIMARY KEY (`CustomerId`)
,  CONSTRAINT `FK_CustomerSupportRepId` FOREIGN KEY (`SupportRepId`) REFERENCES `Employee` (`EmployeeId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,Employee,"CREATE TABLE `Employee` (
  `EmployeeId` integer NOT NULL
,  `LastName` varchar(20) NOT NULL
,  `FirstName` varchar(20) NOT NULL
,  `Title` varchar(30) DEFAULT NULL
,  `ReportsTo` integer DEFAULT NULL
,  `BirthDate` datetime DEFAULT NULL
,  `HireDate` datetime DEFAULT NULL
,  `Address` varchar(70) DEFAULT NULL
,  `City` varchar(40) DEFAULT NULL
,  `State` varchar(40) DEFAULT NULL
,  `Country` varchar(40) DEFAULT NULL
,  `PostalCode` varchar(10) DEFAULT NULL
,  `Phone` varchar(24) DEFAULT NULL
,  `Fax` varchar(24) DEFAULT NULL
,  `Email` varchar(60) DEFAULT NULL
,  PRIMARY KEY (`EmployeeId`)
,  CONSTRAINT `FK_EmployeeReportsTo` FOREIGN KEY (`ReportsTo`) REFERENCES `Employee` (`EmployeeId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,Genre,"CREATE TABLE `Genre` (
  `GenreId` integer NOT NULL
,  `Name` varchar(120) DEFAULT NULL
,  PRIMARY KEY (`GenreId`)
)"
chinook_1,Invoice,"CREATE TABLE `Invoice` (
  `InvoiceId` integer NOT NULL
,  `CustomerId` integer NOT NULL
,  `InvoiceDate` datetime NOT NULL
,  `BillingAddress` varchar(70) DEFAULT NULL
,  `BillingCity` varchar(40) DEFAULT NULL
,  `BillingState` varchar(40) DEFAULT NULL
,  `BillingCountry` varchar(40) DEFAULT NULL
,  `BillingPostalCode` varchar(10) DEFAULT NULL
,  `Total` decimal(10,2) NOT NULL
,  PRIMARY KEY (`InvoiceId`)
,  CONSTRAINT `FK_InvoiceCustomerId` FOREIGN KEY (`CustomerId`) REFERENCES `Customer` (`CustomerId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,InvoiceLine,"CREATE TABLE `InvoiceLine` (
  `InvoiceLineId` integer NOT NULL
,  `InvoiceId` integer NOT NULL
,  `TrackId` integer NOT NULL
,  `UnitPrice` decimal(10,2) NOT NULL
,  `Quantity` integer NOT NULL
,  PRIMARY KEY (`InvoiceLineId`)
,  CONSTRAINT `FK_InvoiceLineInvoiceId` FOREIGN KEY (`InvoiceId`) REFERENCES `Invoice` (`InvoiceId`) ON DELETE NO ACTION ON UPDATE NO ACTION
,  CONSTRAINT `FK_InvoiceLineTrackId` FOREIGN KEY (`TrackId`) REFERENCES `Track` (`TrackId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,MediaType,"CREATE TABLE `MediaType` (
  `MediaTypeId` integer NOT NULL
,  `Name` varchar(120) DEFAULT NULL
,  PRIMARY KEY (`MediaTypeId`)
)"
chinook_1,Playlist,"CREATE TABLE `Playlist` (
  `PlaylistId` integer NOT NULL
,  `Name` varchar(120) DEFAULT NULL
,  PRIMARY KEY (`PlaylistId`)
)"
chinook_1,PlaylistTrack,"CREATE TABLE `PlaylistTrack` (
  `PlaylistId` integer NOT NULL
,  `TrackId` integer NOT NULL
,  PRIMARY KEY (`PlaylistId`,`TrackId`)
,  CONSTRAINT `FK_PlaylistTrackPlaylistId` FOREIGN KEY (`PlaylistId`) REFERENCES `Playlist` (`PlaylistId`) ON DELETE NO ACTION ON UPDATE NO ACTION
,  CONSTRAINT `FK_PlaylistTrackTrackId` FOREIGN KEY (`TrackId`) REFERENCES `Track` (`TrackId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
chinook_1,Track,"CREATE TABLE `Track` (
  `TrackId` integer NOT NULL
,  `Name` varchar(200) NOT NULL
,  `AlbumId` integer DEFAULT NULL
,  `MediaTypeId` integer NOT NULL
,  `GenreId` integer DEFAULT NULL
,  `Composer` varchar(220) DEFAULT NULL
,  `Milliseconds` integer NOT NULL
,  `Bytes` integer DEFAULT NULL
,  `UnitPrice` decimal(10,2) NOT NULL
,  PRIMARY KEY (`TrackId`)
,  CONSTRAINT `FK_TrackAlbumId` FOREIGN KEY (`AlbumId`) REFERENCES `Album` (`AlbumId`) ON DELETE NO ACTION ON UPDATE NO ACTION
,  CONSTRAINT `FK_TrackGenreId` FOREIGN KEY (`GenreId`) REFERENCES `Genre` (`GenreId`) ON DELETE NO ACTION ON UPDATE NO ACTION
,  CONSTRAINT `FK_TrackMediaTypeId` FOREIGN KEY (`MediaTypeId`) REFERENCES `MediaType` (`MediaTypeId`) ON DELETE NO ACTION ON UPDATE NO ACTION
)"
behavior_monitoring,Ref_Address_Types,"CREATE TABLE `Ref_Address_Types` (
`address_type_code` VARCHAR(15) PRIMARY KEY,
`address_type_description` VARCHAR(80)
)"
behavior_monitoring,Ref_Detention_Type,"CREATE TABLE `Ref_Detention_Type` (
`detention_type_code` VARCHAR(10) PRIMARY KEY,
`detention_type_description` VARCHAR(80)
)"
behavior_monitoring,Ref_Incident_Type,"CREATE TABLE `Ref_Incident_Type` (
`incident_type_code` VARCHAR(10) PRIMARY KEY,
`incident_type_description` VARCHAR(80)
)"
behavior_monitoring,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`line_1` VARCHAR(120),
`line_2` VARCHAR(120),
`line_3` VARCHAR(120),
`city` VARCHAR(80),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50),
`other_address_details` VARCHAR(255)
)"
behavior_monitoring,Students,"CREATE TABLE `Students` (
`student_id` INTEGER PRIMARY KEY,
`address_id` INTEGER NOT NULL,
`first_name` VARCHAR(80),
`middle_name` VARCHAR(40),
`last_name` VARCHAR(40),
`cell_mobile_number` VARCHAR(40),
`email_address` VARCHAR(40),
`date_first_rental` DATETIME,
`date_left_university` DATETIME,
`other_student_details` VARCHAR(255),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` )
)"
behavior_monitoring,Teachers,"CREATE TABLE `Teachers` (
`teacher_id` INTEGER PRIMARY KEY,
`address_id` INTEGER NOT NULL,
`first_name` VARCHAR(80),
`middle_name` VARCHAR(80),
`last_name` VARCHAR(80),
`gender` VARCHAR(1),
`cell_mobile_number` VARCHAR(40),
`email_address` VARCHAR(40),
`other_details` VARCHAR(255),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` )
)"
behavior_monitoring,Assessment_Notes,"CREATE TABLE `Assessment_Notes` (
`notes_id` INTEGER NOT NULL ,
`student_id` INTEGER,
`teacher_id` INTEGER NOT NULL,
`date_of_notes` DATETIME,
`text_of_notes` VARCHAR(255),
`other_details` VARCHAR(255),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` ),
FOREIGN KEY (`teacher_id` ) REFERENCES `Teachers`(`teacher_id` )
)"
behavior_monitoring,Behavior_Incident,"CREATE TABLE `Behavior_Incident` (
`incident_id` INTEGER PRIMARY KEY,
`incident_type_code` VARCHAR(10) NOT NULL,
`student_id` INTEGER NOT NULL,
`date_incident_start` DATETIME,
`date_incident_end` DATETIME,
`incident_summary` VARCHAR(255),
`recommendations` VARCHAR(255),
`other_details` VARCHAR(255),
FOREIGN KEY (`incident_type_code` ) REFERENCES `Ref_Incident_Type`(`incident_type_code` ),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )
)"
behavior_monitoring,Detention,"CREATE TABLE `Detention` (
`detention_id` INTEGER PRIMARY KEY,
`detention_type_code` VARCHAR(10) NOT NULL,
`teacher_id` INTEGER,
`datetime_detention_start` DATETIME,
`datetime_detention_end` DATETIME,
`detention_summary` VARCHAR(255),
`other_details` VARCHAR(255),
FOREIGN KEY (`detention_type_code` ) REFERENCES `Ref_Detention_Type`(`detention_type_code` ),
FOREIGN KEY (`teacher_id` ) REFERENCES `Teachers`(`teacher_id` )
)"
behavior_monitoring,Student_Addresses,"CREATE TABLE `Student_Addresses` (
`student_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_address_from` DATETIME NOT NULL,
`date_address_to` DATETIME,
`monthly_rental` DECIMAL(19,4),
`other_details` VARCHAR(255),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )
)"
behavior_monitoring,Students_in_Detention,"CREATE TABLE `Students_in_Detention` (
`student_id` INTEGER NOT NULL,
`detention_id` INTEGER NOT NULL,
`incident_id` INTEGER NOT NULL,
FOREIGN KEY (`incident_id` ) REFERENCES `Behavior_Incident`(`incident_id` ),
FOREIGN KEY (`detention_id` ) REFERENCES `Detention`(`detention_id` ),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )
)"
world_1,city,"CREATE TABLE `city` (
  `ID` integer NOT NULL PRIMARY KEY AUTOINCREMENT
,  `Name` char(35) NOT NULL DEFAULT ''
,  `CountryCode` char(3) NOT NULL DEFAULT ''
,  `District` char(20) NOT NULL DEFAULT ''
,  `Population` integer NOT NULL DEFAULT '0'
,  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `country` (`Code`)
)"
world_1,country,"CREATE TABLE `country` (
  `Code` char(3) NOT NULL DEFAULT ''
,  `Name` char(52) NOT NULL DEFAULT ''
,  `Continent` text  NOT NULL DEFAULT 'Asia'
,  `Region` char(26) NOT NULL DEFAULT ''
,  `SurfaceArea` float(10,2) NOT NULL DEFAULT '0.00'
,  `IndepYear` integer DEFAULT NULL
,  `Population` integer NOT NULL DEFAULT '0'
,  `LifeExpectancy` float(3,1) DEFAULT NULL
,  `GNP` float(10,2) DEFAULT NULL
,  `GNPOld` float(10,2) DEFAULT NULL
,  `LocalName` char(45) NOT NULL DEFAULT ''
,  `GovernmentForm` char(45) NOT NULL DEFAULT ''
,  `HeadOfState` char(60) DEFAULT NULL
,  `Capital` integer DEFAULT NULL
,  `Code2` char(2) NOT NULL DEFAULT ''
,  PRIMARY KEY (`Code`)
)"
world_1,countrylanguage,"CREATE TABLE `countrylanguage` (
  `CountryCode` char(3) NOT NULL DEFAULT ''
,  `Language` char(30) NOT NULL DEFAULT ''
,  `IsOfficial` text  NOT NULL DEFAULT 'F'
,  `Percentage` float(4,1) NOT NULL DEFAULT '0.0'
,  PRIMARY KEY (`CountryCode`,`Language`)
,  CONSTRAINT `countryLanguage_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `country` (`Code`)
)"
university_basketball,basketball_match,"CREATE TABLE ""basketball_match"" (
""Team_ID"" int,
""School_ID"" int,
""Team_Name"" text,
""ACC_Regular_Season"" text,
""ACC_Percent"" text,
""ACC_Home"" text,
""ACC_Road"" text,
""All_Games"" text,
""All_Games_Percent"" int,
""All_Home"" text,
""All_Road"" text,
""All_Neutral"" text,
PRIMARY KEY (""Team_ID""),
FOREIGN KEY (`School_ID`) REFERENCES `university`(`School_ID`)
)"
university_basketball,university,"CREATE TABLE ""university"" (
""School_ID"" int,
""School"" text,
""Location"" text,
""Founded"" real,
""Affiliation"" text,
""Enrollment"" real,
""Nickname"" text,
""Primary_conference"" text,
PRIMARY KEY (""School_ID"")
)"
mountain_photos,mountain,"CREATE TABLE ""mountain"" (
""id"" int,
""name"" text,
""Height"" real,
""Prominence"" real,
""Range"" text,
""Country"" text,
primary key(""id"")
)"
mountain_photos,camera_lens,"CREATE TABLE ""camera_lens"" (
""id"" int,
""brand"" text,
""name"" text,
""focal_length_mm"" real,
""max_aperture"" real,
primary key(""id"")
)"
mountain_photos,photos,"CREATE TABLE ""photos"" (
""id"" int, 
""camera_lens_id"" int,
""mountain_id"" int,
""color"" text, 
""name"" text,
primary key(""id""),
foreign key(""camera_lens_id"") references `camera_lens`(""id""),
foreign key(""mountain_id"") references `mountain`(""id"")
)"
scholar,venue,"CREATE TABLE `venue` (
  `venueId` integer NOT NULL
,  `venueName` varchar(100) DEFAULT NULL
,  PRIMARY KEY (`venueId`)
)"
scholar,author,"CREATE TABLE `author` (
  `authorId` integer NOT NULL
,  `authorName` varchar(50) DEFAULT NULL
,  PRIMARY KEY (`authorId`)
)"
scholar,dataset,"CREATE TABLE `dataset` (
  `datasetId` integer NOT NULL
,  `datasetName` varchar(50) DEFAULT NULL
,  PRIMARY KEY (`datasetId`)
)"
scholar,journal,"CREATE TABLE `journal` (
  `journalId` integer NOT NULL
,  `journalName` varchar(100) DEFAULT NULL
,  PRIMARY KEY (`journalId`)
)"
scholar,keyphrase,"CREATE TABLE `keyphrase` (
  `keyphraseId` integer NOT NULL
,  `keyphraseName` varchar(50) DEFAULT NULL
,  PRIMARY KEY (`keyphraseId`)
)"
scholar,paper,"CREATE TABLE `paper` (
  `paperId` integer NOT NULL
,  `title` varchar(300) DEFAULT NULL
,  `venueId` integer DEFAULT NULL
,  `year` integer DEFAULT NULL
,  `numCiting` integer DEFAULT NULL
,  `numCitedBy` integer DEFAULT NULL
,  `journalId` integer DEFAULT NULL
,  PRIMARY KEY (`paperId`)
,  FOREIGN KEY(`journalId`) REFERENCES `journal`(`journalId`)
,  FOREIGN KEY(`venueId`) REFERENCES `venue`(`venueId`)
)"
scholar,cite,"CREATE TABLE `cite` (
  `citingPaperId` integer NOT NULL
,  `citedPaperId` integer NOT NULL
,  PRIMARY KEY (`citingPaperId`,`citedPaperId`)
,  FOREIGN KEY(`citedpaperId`) REFERENCES `paper`(`paperId`)
,  FOREIGN KEY(`citingpaperId`) REFERENCES `paper`(`paperId`)
)"
scholar,paperDataset,"CREATE TABLE `paperDataset` (
  `paperId` integer DEFAULT NULL
,  `datasetId` integer DEFAULT NULL
,  PRIMARY KEY (`datasetId`, `paperId`)
)"
scholar,paperKeyphrase,"CREATE TABLE `paperKeyphrase` (
  `paperId` integer DEFAULT NULL
,  `keyphraseId` integer DEFAULT NULL
,  PRIMARY KEY (`keyphraseId`,`paperId`)
,  FOREIGN KEY(`paperId`) REFERENCES `paper`(`paperId`)
,  FOREIGN KEY(`keyphraseId`) REFERENCES `keyphrase`(`keyphraseId`)
)"
scholar,writes,"CREATE TABLE `writes` (
  `paperId` integer DEFAULT NULL
,  `authorId` integer DEFAULT NULL
,  PRIMARY KEY (`paperId`,`authorId`)
,  FOREIGN KEY(`paperId`) REFERENCES `paper`(`paperId`)
,  FOREIGN KEY(`authorId`) REFERENCES `author`(`authorId`)
)"
product_catalog,Attribute_Definitions,"CREATE TABLE `Attribute_Definitions` (
`attribute_id` INTEGER PRIMARY KEY,
`attribute_name` VARCHAR(30),
`attribute_data_type` VARCHAR(10)
)"
product_catalog,Catalogs,"CREATE TABLE `Catalogs` (
`catalog_id` INTEGER PRIMARY KEY,
`catalog_name` VARCHAR(50),
`catalog_publisher` VARCHAR(80),
`date_of_publication` DATETIME,
`date_of_latest_revision` DATETIME
)"
product_catalog,Catalog_Structure,"CREATE TABLE `Catalog_Structure` (
`catalog_level_number` INTEGER PRIMARY KEY,
`catalog_id` INTEGER NOT NULL,
`catalog_level_name` VARCHAR(50),
FOREIGN KEY (`catalog_id` ) REFERENCES `Catalogs`(`catalog_id` )
)"
product_catalog,Catalog_Contents,"CREATE TABLE `Catalog_Contents` (
`catalog_entry_id` INTEGER PRIMARY KEY,
`catalog_level_number` INTEGER NOT NULL,
`parent_entry_id` INTEGER,
`previous_entry_id` INTEGER,
`next_entry_id` INTEGER,
`catalog_entry_name` VARCHAR(80),
`product_stock_number` VARCHAR(50),
`price_in_dollars` DOUBLE NULL,
`price_in_euros` DOUBLE NULL,
`price_in_pounds` DOUBLE NULL,
`capacity` VARCHAR(20),
`length` VARCHAR(20),
`height` VARCHAR(20),
`width` VARCHAR(20),
FOREIGN KEY (`catalog_level_number` ) REFERENCES `Catalog_Structure`(`catalog_level_number` )
)"
product_catalog,Catalog_Contents_Additional_Attributes,"CREATE TABLE `Catalog_Contents_Additional_Attributes` (
`catalog_entry_id` INTEGER NOT NULL,
`catalog_level_number` INTEGER NOT NULL,
`attribute_id` INTEGER NOT NULL,
`attribute_value` VARCHAR(255) NOT NULL,
FOREIGN KEY (`catalog_entry_id` ) REFERENCES `Catalog_Contents`(`catalog_entry_id` ),
FOREIGN KEY (`catalog_level_number` ) REFERENCES `Catalog_Structure`(`catalog_level_number` )
)"
real_estate_properties,Ref_Feature_Types,"CREATE TABLE `Ref_Feature_Types` (
`feature_type_code` VARCHAR(20) PRIMARY KEY,
`feature_type_name` VARCHAR(80)
)"
real_estate_properties,Ref_Property_Types,"CREATE TABLE `Ref_Property_Types` (
`property_type_code` VARCHAR(20) PRIMARY KEY,
`property_type_description` VARCHAR(80)
)"
real_estate_properties,Other_Available_Features,"CREATE TABLE `Other_Available_Features` (
`feature_id` INTEGER PRIMARY KEY,
`feature_type_code` VARCHAR(20) NOT NULL,
`feature_name` VARCHAR(80),
`feature_description` VARCHAR(80),
FOREIGN KEY (`feature_type_code` ) REFERENCES `Ref_Feature_Types`(`feature_type_code` )
)"
real_estate_properties,Properties,"CREATE TABLE `Properties` (
`property_id` INTEGER PRIMARY KEY,
`property_type_code` VARCHAR(20) NOT NULL,
`date_on_market` DATETIME,
`date_sold` DATETIME,
`property_name` VARCHAR(80),
`property_address` VARCHAR(255),
`room_count` INTEGER,
`vendor_requested_price` DECIMAL(19,4),
`buyer_offered_price` DECIMAL(19,4),
`agreed_selling_price` DECIMAL(19,4),
`apt_feature_1` VARCHAR(255),
`apt_feature_2` VARCHAR(255),
`apt_feature_3` VARCHAR(255),
`fld_feature_1` VARCHAR(255),
`fld_feature_2` VARCHAR(255),
`fld_feature_3` VARCHAR(255),
`hse_feature_1` VARCHAR(255),
`hse_feature_2` VARCHAR(255),
`hse_feature_3` VARCHAR(255),
`oth_feature_1` VARCHAR(255),
`oth_feature_2` VARCHAR(255),
`oth_feature_3` VARCHAR(255),
`shp_feature_1` VARCHAR(255),
`shp_feature_2` VARCHAR(255),
`shp_feature_3` VARCHAR(255),
`other_property_details` VARCHAR(255),
FOREIGN KEY (`property_type_code` ) REFERENCES `Ref_Property_Types`(`property_type_code` )
)"
real_estate_properties,Other_Property_Features,"CREATE TABLE `Other_Property_Features` (
`property_id` INTEGER NOT NULL,
`feature_id` INTEGER NOT NULL,
`property_feature_description` VARCHAR(80),
FOREIGN KEY (`feature_id` ) REFERENCES `Other_Available_Features`(`feature_id` ),
FOREIGN KEY (`property_id` ) REFERENCES `Properties`(`property_id` )
)"
student_transcripts_tracking,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`line_1` VARCHAR(255),
`line_2` VARCHAR(255),
`line_3` VARCHAR(255),
`city` VARCHAR(255),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(255),
`country` VARCHAR(255),
`other_address_details` VARCHAR(255)
)"
student_transcripts_tracking,Courses,"CREATE TABLE `Courses` (
`course_id` INTEGER PRIMARY KEY,
`course_name` VARCHAR(255),
`course_description` VARCHAR(255),
`other_details` VARCHAR(255)
)"
student_transcripts_tracking,Departments,"CREATE TABLE `Departments` (
`department_id` INTEGER PRIMARY KEY,
`department_name` VARCHAR(255),
`department_description` VARCHAR(255),
`other_details` VARCHAR(255)
)"
student_transcripts_tracking,Degree_Programs,"CREATE TABLE `Degree_Programs` (
`degree_program_id` INTEGER PRIMARY KEY,
`department_id` INTEGER NOT NULL,
`degree_summary_name` VARCHAR(255),
`degree_summary_description` VARCHAR(255),
`other_details` VARCHAR(255),
FOREIGN KEY (`department_id` ) REFERENCES `Departments`(`department_id` )
)"
student_transcripts_tracking,Sections,"CREATE TABLE `Sections` (
`section_id` INTEGER PRIMARY KEY,
`course_id` INTEGER NOT NULL,
`section_name` VARCHAR(255),
`section_description` VARCHAR(255),
`other_details` VARCHAR(255),
FOREIGN KEY (`course_id` ) REFERENCES `Courses`(`course_id` )
)"
student_transcripts_tracking,Semesters,"CREATE TABLE `Semesters` (
`semester_id` INTEGER PRIMARY KEY,
`semester_name` VARCHAR(255),
`semester_description` VARCHAR(255),
`other_details` VARCHAR(255)
)"
student_transcripts_tracking,Students,"CREATE TABLE `Students` (
`student_id` INTEGER PRIMARY KEY,
`current_address_id` INTEGER NOT NULL,
`permanent_address_id` INTEGER NOT NULL,
`first_name` VARCHAR(80),
`middle_name` VARCHAR(40),
`last_name` VARCHAR(40),
`cell_mobile_number` VARCHAR(40),
`email_address` VARCHAR(40),
`ssn` VARCHAR(40),
`date_first_registered` DATETIME,
`date_left` DATETIME,
`other_student_details` VARCHAR(255),
FOREIGN KEY (`current_address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`permanent_address_id` ) REFERENCES `Addresses`(`address_id` )
)"
student_transcripts_tracking,Student_Enrolment,"CREATE TABLE `Student_Enrolment` (
`student_enrolment_id` INTEGER PRIMARY KEY,
`degree_program_id` INTEGER NOT NULL,
`semester_id` INTEGER NOT NULL,
`student_id` INTEGER NOT NULL,
`other_details` VARCHAR(255),
FOREIGN KEY (`degree_program_id` ) REFERENCES `Degree_Programs`(`degree_program_id` ),
FOREIGN KEY (`semester_id` ) REFERENCES `Semesters`(`semester_id` ),
FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )
)"
student_transcripts_tracking,Student_Enrolment_Courses,"CREATE TABLE `Student_Enrolment_Courses` (
`student_course_id` INTEGER PRIMARY KEY,
`course_id` INTEGER NOT NULL,
`student_enrolment_id` INTEGER NOT NULL,
FOREIGN KEY (`course_id` ) REFERENCES `Courses`(`course_id` ),
FOREIGN KEY (`student_enrolment_id` ) REFERENCES `Student_Enrolment`(`student_enrolment_id` )
)"
student_transcripts_tracking,Transcripts,"CREATE TABLE `Transcripts` (
`transcript_id` INTEGER PRIMARY KEY,
`transcript_date` DATETIME,
`other_details` VARCHAR(255)
)"
student_transcripts_tracking,Transcript_Contents,"CREATE TABLE `Transcript_Contents` (
`student_course_id` INTEGER NOT NULL,
`transcript_id` INTEGER NOT NULL,
FOREIGN KEY (`student_course_id` ) REFERENCES `Student_Enrolment_Courses`(`student_course_id` ),
FOREIGN KEY (`transcript_id` ) REFERENCES `Transcripts`(`transcript_id` )
)"
film_rank,film,"CREATE TABLE ""film"" (
""Film_ID"" int,
""Title"" text,
""Studio"" text,
""Director"" text,
""Gross_in_dollar"" int,
PRIMARY KEY (""Film_ID"")
)"
film_rank,market,"CREATE TABLE ""market"" (
""Market_ID"" int,
""Country"" text,
""Number_cities"" int,
PRIMARY KEY (""Market_ID"")
)"
film_rank,film_market_estimation,"CREATE TABLE ""film_market_estimation"" (
""Estimation_ID"" int,
""Low_Estimate"" real,
""High_Estimate"" real,
""Film_ID"" int,
""Type"" text,
""Market_ID"" int,
""Year"" int,
PRIMARY KEY (""Estimation_ID""),
FOREIGN KEY (""Film_ID"") REFERENCES film(""Film_ID""),
FOREIGN KEY (""Market_ID"") REFERENCES market(""Market_ID"")
)"
theme_gallery,artist,"CREATE TABLE ""artist"" (
""Artist_ID"" int,
""Name"" text,
""Country"" text,
""Year_Join"" int,
""Age"" int,
PRIMARY KEY (""Artist_ID"")
)"
theme_gallery,exhibition,"CREATE TABLE ""exhibition"" (
""Exhibition_ID"" int,
""Year"" int,
""Theme"" text,
""Artist_ID"" int,
""Ticket_Price"" real,
PRIMARY KEY (""Exhibition_ID""),
FOREIGN KEY (`Artist_ID`) REFERENCES `artist`(`Artist_ID`)
)"
theme_gallery,exhibition_record,"CREATE TABLE ""exhibition_record"" (
""Exhibition_ID"" int,
""Date"" text,
""Attendance"" int,
PRIMARY KEY (""Exhibition_ID"",""Date""),
FOREIGN KEY (`Exhibition_ID`) REFERENCES `exhibition`(`Exhibition_ID`)
)"
e_government,Addresses,"CREATE TABLE `Addresses` (
`address_id` INTEGER PRIMARY KEY,
`line_1_number_building` VARCHAR(80),
`town_city` VARCHAR(50),
`zip_postcode` VARCHAR(20),
`state_province_county` VARCHAR(50),
`country` VARCHAR(50)
)"
e_government,Services,"CREATE TABLE `Services` (
`service_id` INTEGER PRIMARY KEY,
`service_type_code` VARCHAR(15) NOT NULL,
`service_name` VARCHAR(80),
`service_descriptio` VARCHAR(255)
)"
e_government,Forms,"CREATE TABLE `Forms` (
`form_id` INTEGER PRIMARY KEY,
`form_type_code` VARCHAR(15) NOT NULL,
`service_id` INTEGER,
`form_number` VARCHAR(50),
`form_name` VARCHAR(80),
`form_description` VARCHAR(255),
FOREIGN KEY (`service_id` ) REFERENCES `Services`(`service_id` )
)"
e_government,Individuals,"CREATE TABLE `Individuals` (
`individual_id` INTEGER PRIMARY KEY,
`individual_first_name` VARCHAR(80),
`individual_middle_name` VARCHAR(80),
`inidividual_phone` VARCHAR(80),
`individual_email` VARCHAR(80),
`individual_address` VARCHAR(255),
`individual_last_name` VARCHAR(80)
)"
e_government,Organizations,"CREATE TABLE `Organizations` (
`organization_id` INTEGER PRIMARY KEY,
`date_formed` DATETIME,
`organization_name` VARCHAR(255),
`uk_vat_number` VARCHAR(20)
)"
e_government,Parties,"CREATE TABLE `Parties` (
`party_id` INTEGER PRIMARY KEY,
`payment_method_code` VARCHAR(15) NOT NULL,
`party_phone` VARCHAR(80),
`party_email` VARCHAR(80)
)"
e_government,Organization_Contact_Individuals,"CREATE TABLE `Organization_Contact_Individuals` (
`individual_id` INTEGER NOT NULL,
`organization_id` INTEGER NOT NULL,
`date_contact_from` DATETIME NOT NULL,
`date_contact_to` DATETIME,
PRIMARY KEY (`individual_id`,`organization_id` ),
FOREIGN KEY (`organization_id` ) REFERENCES `Organizations`(`organization_id` ),
FOREIGN KEY (`individual_id` ) REFERENCES `Individuals`(`individual_id` )
)"
e_government,Party_Addresses,"CREATE TABLE `Party_Addresses` (
`party_id` INTEGER NOT NULL,
`address_id` INTEGER NOT NULL,
`date_address_from` DATETIME NOT NULL,
`address_type_code` VARCHAR(15) NOT NULL,
`date_address_to` DATETIME,
PRIMARY KEY (`party_id`, `address_id`),
FOREIGN KEY (`address_id` ) REFERENCES `Addresses`(`address_id` ),
FOREIGN KEY (`party_id` ) REFERENCES `Parties`(`party_id` )
)"
e_government,Party_Forms,"CREATE TABLE `Party_Forms` (
`party_id` INTEGER NOT NULL,
`form_id` INTEGER NOT NULL,
`date_completion_started` DATETIME NOT NULL,
`form_status_code` VARCHAR(15) NOT NULL,
`date_fully_completed` DATETIME,
PRIMARY KEY (`party_id`, `form_id`),
FOREIGN KEY (`party_id` ) REFERENCES `Parties`(`party_id` ),
FOREIGN KEY (`form_id` ) REFERENCES `Forms`(`form_id` )
)"
e_government,Party_Services,"CREATE TABLE `Party_Services` (
`booking_id` INTEGER NOT NULL ,
`customer_id` INTEGER NOT NULL,
`service_id` INTEGER NOT NULL,
`service_datetime` DATETIME NOT NULL,
`booking_made_date` DATETIME,
FOREIGN KEY (`service_id` ) REFERENCES `Services`(`service_id` ),
FOREIGN KEY (`customer_id` ) REFERENCES `Parties`(`party_id` )
)"
insurance_fnol,Customers,"CREATE TABLE Customers (
Customer_ID INTEGER NOT NULL,
Customer_name VARCHAR(40),
PRIMARY KEY (Customer_ID)
)"
insurance_fnol,Services,"CREATE TABLE Services (
Service_ID INTEGER NOT NULL,
Service_name VARCHAR(40),
PRIMARY KEY (Service_ID)
)"
insurance_fnol,Available_Policies,"CREATE TABLE Available_Policies (
Policy_ID INTEGER NOT NULL,
policy_type_code CHAR(15),
Customer_Phone VARCHAR(255),
PRIMARY KEY (Policy_ID),
UNIQUE (Policy_ID)
)"
insurance_fnol,Customers_Policies,"CREATE TABLE Customers_Policies (
Customer_ID INTEGER NOT NULL,
Policy_ID INTEGER NOT NULL,
Date_Opened DATE,
Date_Closed DATE,
PRIMARY KEY (Customer_ID, Policy_ID),
FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),
FOREIGN KEY (Policy_ID) REFERENCES Available_Policies (Policy_ID)
)"
insurance_fnol,First_Notification_of_Loss,"CREATE TABLE First_Notification_of_Loss (
FNOL_ID INTEGER NOT NULL,
Customer_ID INTEGER NOT NULL,
Policy_ID INTEGER NOT NULL,
Service_ID INTEGER NOT NULL,
PRIMARY KEY (FNOL_ID),
UNIQUE (FNOL_ID),
FOREIGN KEY (Service_ID) REFERENCES Services (Service_ID),
FOREIGN KEY (Customer_ID, Policy_ID) REFERENCES Customers_Policies (Customer_ID,Policy_ID)
)"
insurance_fnol,Claims,"CREATE TABLE Claims (
Claim_ID INTEGER NOT NULL,
FNOL_ID INTEGER NOT NULL,
Effective_Date DATE,
PRIMARY KEY (Claim_ID),
UNIQUE (Claim_ID),
FOREIGN KEY (FNOL_ID) REFERENCES First_Notification_of_Loss (FNOL_ID)
)"
insurance_fnol,Settlements,"CREATE TABLE Settlements (
Settlement_ID INTEGER NOT NULL,
Claim_ID INTEGER,
Effective_Date DATE,
Settlement_Amount REAL,
PRIMARY KEY (Settlement_ID),
UNIQUE (Settlement_ID),
FOREIGN KEY (Claim_ID) REFERENCES Claims (Claim_ID)
)"
restaurant_1,Student,"CREATE TABLE Student (
        StuID        INTEGER PRIMARY KEY,
        LName        VARCHAR(12),
        Fname        VARCHAR(12),
        Age      INTEGER,
        Sex      VARCHAR(1),
        Major        INTEGER,
        Advisor      INTEGER,
        city_code    VARCHAR(3)
 )"
restaurant_1,Restaurant,"CREATE TABLE Restaurant (
       ResID       INTEGER PRIMARY KEY,
       ResName     VARCHAR(100),
       Address     VARCHAR(100),
       Rating INTEGER
)"
restaurant_1,Type_Of_Restaurant,"CREATE TABLE Type_Of_Restaurant (
       ResID       INTEGER,
       ResTypeID   INTEGER,
       FOREIGN KEY(ResID) REFERENCES Restaurant(ResID),
       FOREIGN KEY(ResTypeID) REFERENCES Restaurant_Type(ResTypeID)
)"
restaurant_1,Restaurant_Type,"CREATE TABLE Restaurant_Type (
       ResTypeID            INTEGER PRIMARY KEY,
       ResTypeName          VARCHAR(40),
       ResTypeDescription   VARCHAR(100)
)"
restaurant_1,Visits_Restaurant,"CREATE TABLE Visits_Restaurant (
       StuID      INTEGER,
       ResID      INTEGER,
       Time       TIMESTAMP,
       Spent      FLOAT,
       FOREIGN KEY(StuID) REFERENCES Student(StuID),
       FOREIGN KEY(ResID) REFERENCES Restaurant(ResID)
)"
inn_1,Rooms,"CREATE TABLE ""Rooms"" ( 
	""RoomId"" TEXT PRIMARY KEY,
	""roomName"" TEXT, 
	""beds"" INTEGER, 
	""bedType"" TEXT, 
	""maxOccupancy"" INTEGER, 
	""basePrice"" INTEGER, 
	""decor"" TEXT

)"
inn_1,Reservations,"CREATE TABLE ""Reservations"" ( 
	""Code"" INTEGER PRIMARY KEY, 
	""Room"" TEXT, 
	""CheckIn"" TEXT, 
	""CheckOut"" TEXT, 
	""Rate"" REAL, 
	""LastName"" TEXT, 
	""FirstName"" TEXT, 
	""Adults"" INTEGER, 
	""Kids"" INTEGER,
	FOREIGN KEY (Room) REFERENCES Rooms(RoomId)
)"
tracking_software_problems,Problem_Category_Codes,"CREATE TABLE `Problem_Category_Codes` (
`problem_category_code` VARCHAR(20) PRIMARY KEY,
`problem_category_description` VARCHAR(80)
)"
tracking_software_problems,Problem_Log,"CREATE TABLE `Problem_Log` (
`problem_log_id` INTEGER PRIMARY KEY,
`assigned_to_staff_id` INTEGER NOT NULL,
`problem_id` INTEGER NOT NULL,
`problem_category_code` VARCHAR(20) NOT NULL,
`problem_status_code` VARCHAR(20) NOT NULL,
`log_entry_date` DATETIME,
`log_entry_description` VARCHAR(255),
`log_entry_fix` VARCHAR(255),
`other_log_details` VARCHAR(255),
FOREIGN KEY (`problem_category_code` ) REFERENCES `Problem_Category_Codes`(`problem_category_code` ),FOREIGN KEY (`assigned_to_staff_id` ) REFERENCES `Staff`(`staff_id` ),FOREIGN KEY (`problem_id` ) REFERENCES `Problems`(`problem_id` ),FOREIGN KEY (`problem_status_code` ) REFERENCES `Problem_Status_Codes`(`problem_status_code` )
)"
tracking_software_problems,Problem_Status_Codes,"CREATE TABLE `Problem_Status_Codes` (
`problem_status_code` VARCHAR(20) PRIMARY KEY,
`problem_status_description` VARCHAR(80)
)"
tracking_software_problems,Product,"CREATE TABLE `Product` (
`product_id` INTEGER PRIMARY KEY,
`product_name` VARCHAR(80),
`product_details` VARCHAR(255)
)"
tracking_software_problems,Staff,"CREATE TABLE `Staff` (
`staff_id` INTEGER PRIMARY KEY,
`staff_first_name` VARCHAR(80),
`staff_last_name` VARCHAR(80),
`other_staff_details` VARCHAR(255)
)"
tracking_software_problems,Problems,"CREATE TABLE `Problems` (
`problem_id` INTEGER PRIMARY KEY,
`product_id` INTEGER NOT NULL,
`closure_authorised_by_staff_id` INTEGER NOT NULL,
`reported_by_staff_id` INTEGER NOT NULL,
`date_problem_reported` DATETIME NOT NULL,
`date_problem_closed` DATETIME,
`problem_description` VARCHAR(255),
`other_problem_details` VARCHAR(255),
FOREIGN KEY (`closure_authorised_by_staff_id` ) REFERENCES `Staff`(`staff_id` ),
FOREIGN KEY (`product_id` ) REFERENCES `Product`(`product_id` ),
FOREIGN KEY (`reported_by_staff_id` ) REFERENCES `Staff`(`staff_id` )
)"
riding_club,player,"CREATE TABLE ""player"" (
""Player_ID"" int,
""Sponsor_name"" text,
""Player_name"" text,
""Gender"" text,
""Residence"" text,
""Occupation"" text,
""Votes"" int,
""Rank"" text,
PRIMARY KEY (""Player_ID"")
)"
riding_club,club,"CREATE TABLE ""club"" (
""Club_ID"" int,
""Club_name"" text,
""Region"" text,
""Start_year"" int,
PRIMARY KEY (""Club_ID"")
)"
riding_club,coach,"CREATE TABLE ""coach"" (
""Coach_ID"" int,
""Coach_name"" text,
""Gender"" text,
""Club_ID"" int,
""Rank"" int,
PRIMARY KEY (""Coach_ID""),
FOREIGN KEY (`Club_ID`) REFERENCES `club`(`Club_ID`)
)"
riding_club,player_coach,"CREATE TABLE ""player_coach"" (
""Player_ID"" int,
""Coach_ID"" int,
""Starting_year"" int,
PRIMARY KEY (""Player_ID"",""Coach_ID""),
FOREIGN KEY (`Player_ID`) REFERENCES `player`(`Player_ID`),
FOREIGN KEY (`Coach_ID`) REFERENCES `coach`(`Coach_ID`)
)"
riding_club,match_result,"CREATE TABLE ""match_result"" (
""Rank"" int,
""Club_ID"" int,
""Gold"" int,
""Big_Silver"" int,
""Small_Silver"" int,
""Bronze"" int,
""Points"" int,
PRIMARY KEY (""Rank"",""Club_ID""),
FOREIGN KEY (`Club_ID`) REFERENCES `club`(`Club_ID`)
)"
ship_mission,mission,"CREATE TABLE ""mission"" (
""Mission_ID"" int,
""Ship_ID"" int,
""Code"" text,
""Launched_Year"" int,
""Location"" text,
""Speed_knots"" int,
""Fate"" text,
PRIMARY KEY (""Mission_ID""),
FOREIGN KEY (""Ship_ID"") REFERENCES `ship`(""Ship_ID"")
)"
ship_mission,ship,"CREATE TABLE ""ship"" (
""Ship_ID"" int,
""Name"" text,
""Type"" text,
""Nationality"" text,
""Tonnage"" int,
PRIMARY KEY (""Ship_ID"")
)"
student_assessment,Addresses,"CREATE TABLE Addresses (
address_id INTEGER NOT NULL,
line_1 VARCHAR(80),
line_2 VARCHAR(80),
city VARCHAR(50),
zip_postcode CHAR(20),
state_province_county VARCHAR(50),
country VARCHAR(50),
PRIMARY KEY (address_id)
)"
student_assessment,People,"CREATE TABLE People (
person_id INTEGER NOT NULL,
first_name VARCHAR(255),
middle_name VARCHAR(255),
last_name VARCHAR(255),
cell_mobile_number VARCHAR(40),
email_address VARCHAR(40),
login_name VARCHAR(40),
password VARCHAR(40),
PRIMARY KEY (person_id)
)"
student_assessment,Students,"CREATE TABLE Students (
student_id INTEGER NOT NULL,
student_details VARCHAR(255),
PRIMARY KEY (student_id),
FOREIGN KEY (student_id) REFERENCES People (person_id)
)"
student_assessment,Courses,"CREATE TABLE Courses (
course_id VARCHAR(100) NOT NULL,
course_name VARCHAR(120),
course_description VARCHAR(255),
other_details VARCHAR(255),
PRIMARY KEY (course_id)
)"
student_assessment,People_Addresses,"CREATE TABLE People_Addresses (
person_address_id INTEGER NOT NULL,
person_id INTEGER NOT NULL,
address_id INTEGER NOT NULL,
date_from DATETIME,
date_to DATETIME,
PRIMARY KEY (person_address_id),
FOREIGN KEY (person_id) REFERENCES People (person_id),
FOREIGN KEY (address_id) REFERENCES Addresses (address_id)
)"
student_assessment,Student_Course_Registrations,"CREATE TABLE Student_Course_Registrations (
student_id INTEGER NOT NULL,
course_id INTEGER NOT NULL,
registration_date DATETIME NOT NULL,
PRIMARY KEY (student_id, course_id),
FOREIGN KEY (student_id) REFERENCES Students (student_id),
FOREIGN KEY (course_id) REFERENCES Courses (course_id)
)"
student_assessment,Student_Course_Attendance,"CREATE TABLE Student_Course_Attendance (
student_id INTEGER NOT NULL,
course_id INTEGER NOT NULL,
date_of_attendance DATETIME NOT NULL,
PRIMARY KEY (student_id, course_id),
FOREIGN KEY (student_id, course_id) REFERENCES Student_Course_Registrations (student_id,course_id)
)"
student_assessment,Candidates,"CREATE TABLE Candidates (
candidate_id INTEGER NOT NULL ,
candidate_details VARCHAR(255),
PRIMARY KEY (candidate_id),
FOREIGN KEY (candidate_id) REFERENCES People (person_id)
)"
student_assessment,Candidate_Assessments,"CREATE TABLE Candidate_Assessments (
candidate_id INTEGER NOT NULL,
qualification CHAR(15) NOT NULL,
assessment_date DATETIME NOT NULL,
asessment_outcome_code CHAR(15) NOT NULL,
PRIMARY KEY (candidate_id, qualification),
FOREIGN KEY (candidate_id) REFERENCES Candidates (candidate_id)
)"
assets_maintenance,Third_Party_Companies,"CREATE TABLE `Third_Party_Companies` (
`company_id` INTEGER PRIMARY KEY ,
`company_type` VARCHAR(5) NOT NULL,
`company_name` VARCHAR(255),
`company_address` VARCHAR(255),
`other_company_details` VARCHAR(255)
)"
assets_maintenance,Maintenance_Contracts,"CREATE TABLE `Maintenance_Contracts` (
`maintenance_contract_id` INTEGER PRIMARY KEY,
`maintenance_contract_company_id` INTEGER NOT NULL,
`contract_start_date` DATETIME,
`contract_end_date` DATETIME,
`other_contract_details` VARCHAR(255),
FOREIGN KEY (`maintenance_contract_company_id` ) REFERENCES `Third_Party_Companies`(`company_id` )
)"
assets_maintenance,Parts,"CREATE TABLE `Parts` (
`part_id` INTEGER PRIMARY KEY,
`part_name` VARCHAR(255),
`chargeable_yn` VARCHAR(1),
`chargeable_amount` VARCHAR(20),
`other_part_details` VARCHAR(255)
)"
assets_maintenance,Skills,"CREATE TABLE `Skills` (
`skill_id` INTEGER PRIMARY KEY,
`skill_code` VARCHAR(20),
`skill_description` VARCHAR(255)
)"
assets_maintenance,Staff,"CREATE TABLE `Staff` (
`staff_id` INTEGER PRIMARY KEY,
`staff_name` VARCHAR(255),
`gender` VARCHAR(1),
`other_staff_details` VARCHAR(255)
)"
assets_maintenance,Assets,"CREATE TABLE `Assets` (
`asset_id` INTEGER PRIMARY KEY,
`maintenance_contract_id` INTEGER NOT NULL,
`supplier_company_id` INTEGER NOT NULL,
`asset_details` VARCHAR(255),
`asset_make` VARCHAR(20),
`asset_model` VARCHAR(20),
`asset_acquired_date` DATETIME,
`asset_disposed_date` DATETIME,
`other_asset_details` VARCHAR(255),
FOREIGN KEY (`maintenance_contract_id` )
REFERENCES `Maintenance_Contracts`(`maintenance_contract_id` ),
FOREIGN KEY (`supplier_company_id` ) REFERENCES `Third_Party_Companies`(`company_id` )
)"
assets_maintenance,Asset_Parts,"CREATE TABLE `Asset_Parts` (
`asset_id` INTEGER NOT NULL,
`part_id` INTEGER NOT NULL,
FOREIGN KEY (`part_id` ) REFERENCES `Parts`(`part_id` ),
FOREIGN KEY (`asset_id` ) REFERENCES `Assets`(`asset_id` )
)"
assets_maintenance,Maintenance_Engineers,"CREATE TABLE `Maintenance_Engineers` (
`engineer_id` INTEGER PRIMARY KEY,
`company_id` INTEGER NOT NULL,
`first_name` VARCHAR(50),
`last_name` VARCHAR(50),
`other_details` VARCHAR(255),
FOREIGN KEY (`company_id` ) REFERENCES `Third_Party_Companies`(`company_id` )
)"
assets_maintenance,Engineer_Skills,"CREATE TABLE `Engineer_Skills` (
`engineer_id` INTEGER NOT NULL,
`skill_id` INTEGER NOT NULL,
FOREIGN KEY (`engineer_id` ) REFERENCES `Maintenance_Engineers`(`engineer_id` ),
FOREIGN KEY (`skill_id` ) REFERENCES `Skills`(`skill_id` )
)"
assets_maintenance,Fault_Log,"CREATE TABLE `Fault_Log` (
`fault_log_entry_id` INTEGER PRIMARY KEY,
`asset_id` INTEGER NOT NULL,
`recorded_by_staff_id` INTEGER NOT NULL,
`fault_log_entry_datetime` DATETIME,
`fault_description` VARCHAR(255),
`other_fault_details` VARCHAR(255),
FOREIGN KEY (`asset_id` ) REFERENCES `Assets`(`asset_id` ),
FOREIGN KEY (`recorded_by_staff_id` ) REFERENCES `Staff`(`staff_id` )
)"
assets_maintenance,Engineer_Visits,"CREATE TABLE `Engineer_Visits` (
`engineer_visit_id` INTEGER PRIMARY KEY,
`contact_staff_id` INTEGER,
`engineer_id` INTEGER NOT NULL,
`fault_log_entry_id` INTEGER NOT NULL,
`fault_status` VARCHAR(10) NOT NULL,
`visit_start_datetime` DATETIME,
`visit_end_datetime` DATETIME,
`other_visit_details` VARCHAR(255),
FOREIGN KEY (`fault_log_entry_id` ) REFERENCES `Fault_Log`(`fault_log_entry_id` ),
FOREIGN KEY (`engineer_id` ) REFERENCES `Maintenance_Engineers`(`engineer_id` ),
FOREIGN KEY (`contact_staff_id` ) REFERENCES `Staff`(`staff_id` )
)"
assets_maintenance,Part_Faults,"CREATE TABLE `Part_Faults` (
`part_fault_id` INTEGER PRIMARY KEY,
`part_id` INTEGER NOT NULL,
`fault_short_name` VARCHAR(20),
`fault_description` VARCHAR(255),
`other_fault_details` VARCHAR(255),
FOREIGN KEY (`part_id` ) REFERENCES `Parts`(`part_id` )
)"
assets_maintenance,Fault_Log_Parts,"CREATE TABLE `Fault_Log_Parts` (
`fault_log_entry_id` INTEGER NOT NULL,
`part_fault_id` INTEGER NOT NULL,
`fault_status` VARCHAR(10) NOT NULL,
FOREIGN KEY (`part_fault_id` ) REFERENCES `Part_Faults`(`part_fault_id` ),
FOREIGN KEY (`fault_log_entry_id` ) REFERENCES `Fault_Log`(`fault_log_entry_id` )
)"
assets_maintenance,Skills_Required_To_Fix,"CREATE TABLE `Skills_Required_To_Fix` (
`part_fault_id` INTEGER NOT NULL,
`skill_id` INTEGER NOT NULL,
FOREIGN KEY (`part_fault_id` ) REFERENCES `Part_Faults`(`part_fault_id` ),
FOREIGN KEY (`skill_id` ) REFERENCES `Skills`(`skill_id` )
)"
twitter_1,follows,"CREATE TABLE `follows` (
  `f1` int(11) NOT NULL,
  `f2` int(11) NOT NULL,
  PRIMARY KEY (`f1`,`f2`),
  FOREIGN KEY (`f1`) REFERENCES `user_profiles`(`uid`),
  FOREIGN KEY (`f2`) REFERENCES `user_profiles`(`uid`)

)"
twitter_1,tweets,"CREATE TABLE `tweets` (
  `id` bigint(20) NOT NULL,
  `uid` int(11) NOT NULL,
  `text` char(140) NOT NULL,
  `createdate` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`uid`) REFERENCES `user_profiles`(`uid`)
)"
twitter_1,user_profiles,"CREATE TABLE ""user_profiles"" (`uid` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL, `email` varchar(255) DEFAULT NULL, `partitionid` int(11) DEFAULT NULL, `followers` int(11) DEFAULT NULL, PRIMARY KEY (`uid`))"
body_builder,body_builder,"CREATE TABLE ""body_builder"" (
""Body_Builder_ID"" int,
""People_ID"" int,
""Snatch"" real,
""Clean_Jerk"" real,
""Total"" real,
PRIMARY KEY (""Body_Builder_ID""),
FOREIGN KEY (""People_ID"") REFERENCES `people`(""People_ID"")
)"
body_builder,people,"CREATE TABLE ""people"" (
""People_ID"" int,
""Name"" text,
""Height"" real,
""Weight"" real,
""Birth_Date"" text,
""Birth_Place"" text,
PRIMARY KEY (""People_ID"")
)"
school_player,school,"CREATE TABLE ""school"" (
""School_ID"" int,
""School"" text,
""Location"" text,
""Enrollment"" real,
""Founded"" real,
""Denomination"" text,
""Boys_or_Girls"" text,
""Day_or_Boarding"" text,
""Year_Entered_Competition"" real,
""School_Colors"" text,
PRIMARY KEY (""School_Id"")
)"
school_player,school_details,"CREATE TABLE ""school_details"" (
""School_ID"" int,
""Nickname"" text,
""Colors"" text,
""League"" text,
""Class"" text,
""Division"" text,
PRIMARY KEY (""School_Id""),
FOREIGN KEY (`School_ID`) REFERENCES `school`(`School_ID`)
)"
school_player,school_performance,"CREATE TABLE ""school_performance"" (
""School_Id"" int,
""School_Year"" text,
""Class_A"" text,
""Class_AA"" text,
PRIMARY KEY (""School_Id"",""School_Year""),
FOREIGN KEY (`School_ID`) REFERENCES `school`(`School_ID`)
)"
school_player,player,"CREATE TABLE ""player"" (
""Player_ID"" int,
""Player"" text,
""Team"" text,
""Age"" int,
""Position"" text,
""School_ID"" int,
PRIMARY KEY (""Player_ID""),
FOREIGN KEY (`School_ID`) REFERENCES `school`(`School_ID`)
)"
