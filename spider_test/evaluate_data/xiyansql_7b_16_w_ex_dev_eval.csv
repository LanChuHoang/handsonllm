db_path,solution,answer,error,is_match
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name , country , age FROM singer ORDER BY age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name , Country , Age FROM singer ORDER BY Age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name , Song_release_year FROM singer ORDER BY Age LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name , Song_release_year FROM singer ORDER BY Age LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select max(capacity), average from stadium","SELECT max(capacity) , avg(capacity) FROM stadium","Not match: [('52500', '730')] != [('52500', '10621.666666666666')]",False
spider_data/database/concert_singer/concert_singer.sqlite,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(capacity) , max(capacity) FROM stadium",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY Average DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY Average DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.Name , COUNT(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T2.Name , T2.Capacity FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,"SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = ""2014""",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_Name , T1.theme , count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.concert_Name , T1.Theme , COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T2.concert_ID",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = 2014,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T2.Name FROM singer_in_concert AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = 2014,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT Name , Country FROM singer WHERE Song_Name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T2.Name , T2.Location FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year = 2014 INTERSECT SELECT T2.Name , T2.Location FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year = 2015",,True
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE stadium_ID = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1),,True
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE stadium_ID = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1),,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM PETS WHERE weight > 10,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM PETS WHERE weight > 10,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets WHERE pet_age = ( SELECT min(pet_age) FROM pets ),,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets WHERE pet_age = ( SELECT min(pet_age) FROM pets WHERE pettype = 'dog' ),,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_type = 'cat' OR T3.pet_type = 'dog',OperationalError('no such column: T3.pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_type = 'cat' OR T3.pet_type = 'dog',OperationalError('no such column: T3.pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'cat' INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'cat' INTERSECT SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = 'cat')",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = 'cat')",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student EXCEPT SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = 'cat',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Has_Pet EXCEPT SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = 'cat',"Not match: [('1002',), ('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)] != [('1002',)]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.Fname , T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'dog' EXCEPT SELECT T1.Fname , T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'cat'","Not match: [('Tracy', '19'), ('Tracy', '19')] != [('Tracy', '19')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_type = 'dog' AND T1.StuID NOT IN ( SELECT DISTINCT T1.StuID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_type = 'cat' ),OperationalError('no such column: T3.pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT petid , weight FROM pets WHERE pet_age > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT PetID , weight FROM Pets WHERE pet_age > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT avg(weight) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT avg(weight) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.stuid = T2.StuID WHERE T1.Lname = 'Smith',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.stuid = T2.StuID WHERE T1.Lname = 'Smith',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT count(*) , t1.stuid FROM student AS t1 JOIN has_pet AS t2 ON t1.stuid = t2.stuid GROUP BY t1.stuid",,True
spider_data/database/pets_1/pets_1.sqlite,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT T1.StuID , count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID","Not match: [('1', '1001'), ('2', '1002')] != [('1001', '1'), ('1002', '2')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname , T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname , T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat',,True
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM Continents,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName , T1.Id , COUNT(*) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Horsepower ASC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < ( SELECT avg(Weight) FROM CARS_DATA ),,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < ( SELECT avg(Weight) FROM CARS_DATA ),,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970,"Not match: [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('ford',), ('gm',), ('nissan',), ('peugeaut',), ('saab',), ('toyota',), ('volkswagen',)] != [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('daimler benz',), ('fiat',), ('ford',), ('gm',), ('honda',), ('hyundai',), ('kia',), ('mazda',), ('nissan',), ('opel',), ('peugeaut',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.ModelId = T3.MakeId JOIN CARS_DATA AS T4 ON T3.MakeId = T4.Id WHERE T4.Year = 1970,"Not match: [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('ford',), ('gm',), ('nissan',), ('peugeaut',), ('saab',), ('toyota',), ('volkswagen',)] != [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('daimler benz',), ('fiat',), ('ford',), ('gm',), ('honda',), ('hyundai',), ('kia',), ('mazda',), ('nissan',), ('opel',), ('peugeaut',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Year ASC LIMIT 1","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [('chevrolet chevelle malibu', '1970')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Year ASC LIMIT 1","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [('chevrolet chevelle malibu', '1970')]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(T3.Id) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent INNER JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(T3.Id) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent INNER JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",,True
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT COUNT(T1.Model) , T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName",,True
spider_data/database/car_1/car_1.sqlite,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT count(T1.Model) , T2.Id , T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.Id","Not match: [('1', 'American Motor Company', '1'), ('1', 'BMW', '3'), ('1', 'Citroen', '7'), ('1', 'Fiat', '9'), ('1', 'Honda', '11'), ('1', 'Hyundai', '23'), ('1', 'Kia Motors', '22'), ('1', 'Mazda', '12'), ('1', 'Opel', '14'), ('1', 'Peugeaut', '15'), ('1', 'Renault', '16'), ('1', 'Saab', '17'), ('1', 'Subaru', '18'), ('1', 'Triumph', '20'), ('1', 'Volvo', '21'), ('2', 'Daimler Benz', '13'), ('2', 'Nissan Motors', '8'), ('2', 'Toyota', '19'), ('2', 'Volkswagen', '2'), ('3', 'Ford Motor Company', '5'), ('4', 'Chrysler', '6'), ('5', 'General Motors', '4')] != [('1', '1', 'American Motor Company'), ('1', '11', 'Honda'), ('1', '12', 'Mazda'), ('1', '14', 'Opel'), ('1', '15', 'Peugeaut'), ('1', '16', 'Renault'), ('1', '17', 'Saab'), ('1', '18', 'Subaru'), ('1', '20', 'Triumph'), ('1', '21', 'Volvo'), ('1', '22', 'Kia Motors'), ('1', '23', 'Hyundai'), ('1', '3', 'BMW'), ('1', '7', 'Citroen'), ('1', '9', 'Fiat'), ('2', '13', 'Daimler Benz'), ('2', '19', 'Toyota'), ('2', '2', 'Volkswagen'), ('2', '8', 'Nissan Motors'), ('3', '5', 'Ford Motor Company'), ('4', '6', 'Chrysler'), ('5', '4', 'General Motors')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM CARS_DATA AS T1 INNER JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)',,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM CARS_DATA AS T1 INNER JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)',"Not match: [('13.5',)] != []",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT count(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france',,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT count(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france',,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Country = 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.Country = 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM cars_data WHERE Cylinders = 4,,True
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974,,True
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974,,True
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker , Model FROM MODEL_LIST",,True
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker , Model FROM MODEL_LIST",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.CountryName , T1.Continent FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(*) > 0","Not match: [('france', '3'), ('germany', '2'), ('italy', '5'), ('japan', '4'), ('korea', '8'), ('sweden', '6'), ('uk', '7'), ('usa', '1')] != [('france', '2'), ('germany', '2'), ('italy', '2'), ('japan', '3'), ('korea', '3'), ('sweden', '2'), ('uk', '2'), ('usa', '1')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1",,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150,,True
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) , YEAR FROM cars_data GROUP BY YEAR",,True
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) , YEAR FROM cars_data GROUP BY YEAR",,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T1.CountryName FROM COUNTRIES AS T1 INNER JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId INNER JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(T3.Maker) >= 3,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T1.CountryName FROM COUNTRIES AS T1 INNER JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId INNER JOIN car_makers AS T3 ON T3.Country = T1.CountryId WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(T3.Maker) >= 3,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT T1.Make , T2.Horsepower FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3 ORDER BY T2.Horsepower DESC LIMIT 1","Not match: [('97', 'mazda rx2 coupe')] != [('mazda rx2 coupe', '97')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.MPG DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.MPG DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,select avg(horsepower) from cars_data where year  <  1980;,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(T1.Edispl) FROM CARS_DATA AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo',,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT avg(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo',"Not match: [('133.5',)] != [('',)]",False
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(Accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(Accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(MakeId) DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company',,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.Maker = 'amc',,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FullName , T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Maker , T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3","Not match: [('Chrysler', '6'), ('General Motors', '4')] != [('chrysler', '6'), ('gm', '4')]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.MakeId = T2.ModelId JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500,"Not match: [('amc',), ('buick',), ('cadillac',), ('chevrolet',), ('chrysler',), ('dodge',), ('ford',), ('mercedes',), ('mercedes-benz',), ('mercury',), ('oldsmobile',), ('plymouth',), ('pontiac',)] != [('amc',), ('buick',), ('chevrolet',), ('datsun',), ('dodge',), ('ford',), ('hi',), ('plymouth',), ('pontiac',), ('toyota',)]",False
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight BETWEEN 3000 AND 4000;,,True
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight < 4000 INTERSECT SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight > 3000,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM CARS_DATA ORDER BY Accelerate DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM CARS_DATA ORDER BY Accelerate DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1,"Not match: [('6',)] != []",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT MAX(Accelerate) FROM CARS_DATA WHERE Horsepower = ( SELECT MAX(Horsepower) FROM CARS_DATA ) ),"Not match: [('39',)] != [('17',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT MAX(Accelerate) FROM CARS_DATA ),"Not match: [('39',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(T1.CountryId) FROM ( SELECT T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 2 ) AS T1,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(T1.CountryName) FROM ( SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName HAVING COUNT(T1.Maker) > 2 ) AS T1,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6,,True
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT T1.MakeId , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.horsepower > ( SELECT min(horsepower) FROM cars_data ) AND T2.Cylinders <= 3",,True
spider_data/database/car_1/car_1.sqlite,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT T1.MakeId , T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.horsepower > ( SELECT min(horsepower) FROM cars_data ) AND T2.Cylinders < 4",,True
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980,,True
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(mpg) FROM cars_data WHERE Cylinders = 8 OR YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id INNER JOIN MODEL_LIST AS T3 ON T1.Model = T3.Model LEFT JOIN CAR_MAKERS AS T4 ON T3.Maker = T4.Id WHERE T2.Weight < 3500 AND T4.FullName != 'Ford Motor Company',"Not match: [('amc',), ('audi',), ('bmw',), ('buick',), ('chevrolet',), ('chrysler',), ('citroen',), ('datsun',), ('dodge',), ('fiat',), ('honda',), ('mazda',), ('mercedes-benz',), ('nissan',), ('oldsmobile',), ('opel',), ('peugeot',), ('plymouth',), ('pontiac',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)] != [('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('amc',), ('audi',), ('audi',), ('audi',), ('audi',), ('audi',), ('audi',), ('audi',), ('bmw',), ('bmw',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('buick',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('chrysler',), ('chrysler',), ('citroen',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('datsun',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('dodge',), ('fiat',), ('fiat',), ('fiat',), ('fiat',), ('fiat',), ('fiat',), ('fiat',), ('fiat',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('honda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mazda',), ('mercedes-benz',), ('nissan',), ('oldsmobile',), ('oldsmobile',), ('oldsmobile',), ('oldsmobile',), ('oldsmobile',), ('opel',), ('opel',), ('opel',), ('opel',), ('peugeot',), ('peugeot',), ('peugeot',), ('peugeot',), ('peugeot',), ('peugeot',), ('peugeot',), ('peugeot',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('plymouth',), ('pontiac',), ('pontiac',), ('pontiac',), ('pontiac',), ('pontiac',), ('pontiac',), ('pontiac',), ('renault',), ('renault',), ('renault',), ('renault',), ('renault',), ('saab',), ('saab',), ('saab',), ('saab',), ('saab',), ('subaru',), ('subaru',), ('subaru',), ('subaru',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('toyota',), ('triumph',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volkswagen',), ('volvo',), ('volvo',), ('volvo',), ('volvo',), ('volvo',), ('volvo',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id INNER JOIN MODEL_LIST AS T3 ON T1.Model = T3.Model LEFT JOIN CAR_MAKERS AS T4 ON T3.Maker = T4.Id WHERE T2.Weight < 3500 AND T4.FullName != 'Ford Motor Company',,True
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country,,True
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers),,True
spider_data/database/car_1/car_1.sqlite,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) >= 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T1.Id) > 3","Not match: [('19', 'toyota'), ('2', 'volkswagen'), ('4', 'gm'), ('5', 'ford'), ('6', 'chrysler'), ('8', 'nissan')] != [('4', 'gm'), ('6', 'chrysler')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Id HAVING COUNT(*) > 3","Not match: [('19', 'toyota'), ('2', 'volkswagen'), ('4', 'gm'), ('5', 'ford'), ('6', 'chrysler'), ('8', 'nissan')] != []",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 3 UNION SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN model_list AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat'",,True
spider_data/database/car_1/car_1.sqlite,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 3 UNION SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN model_list AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat'",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = ""Anthony""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = ""Anthony""",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM airports WHERE AirportCode = ""AKO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM airports WHERE AirportCode = ""AKO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","SELECT AirportName FROM airports WHERE City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.sourceairport WHERE T1.city = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.sourceairport WHERE T1.city = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.destairport WHERE T1.city = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.destairport WHERE T1.city = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.sourceairport JOIN airports AS T3 ON T3.airportcode = T2.destairport WHERE T1.city = ""Aberdeen"" AND T3.city = ""Ashley""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.sourceairport JOIN airports AS T3 ON T3.airportcode = T2.destairport WHERE T1.city = ""Aberdeen"" AND T3.city = ""Ashley""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.DestAirport WHERE T1.Airline = 'United Airlines' AND T3.City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.DestAirport WHERE T1.Airline = ""United Airlines"" AND T3.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T2.DestAirport ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.Abbreviation , T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T2.Airline ORDER BY count(*) LIMIT 1","Not match: [('AirTran', 'USA')] != [('UAL', 'USA')]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.Abbreviation , T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""APG"" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""CVO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = "" CVO"" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""","Not match: [] != [('AirTran Airways',), ('Allegiant Air',), ('American Airlines',), ('Delta Airlines',), ('Frontier Airlines',), ('JetBlue Airways',), ('Northwest Airlines',), ('Southwest Airlines',), ('US Airways',), ('United Airlines',), ('Virgin America',)]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) > 10,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) > 10,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""United Airlines""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""United Airlines""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.destairport WHERE T1.city = ""Aberdeen"" OR T1.city = ""Abilene""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.destairport WHERE T1.city = ""Aberdeen"" OR T1.city = ""Abilene""",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights),,True
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City , COUNT(*) FROM employee GROUP BY City","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT count(*) , city FROM employee GROUP BY city",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , count(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , count(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name , District FROM shop ORDER BY Number_products DESC LIMIT 1",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name , District FROM shop ORDER BY Number_products DESC LIMIT 1",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id GROUP BY t2.employee_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id ORDER BY t2.bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id ORDER BY t2.bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.shop_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.shop_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT count(*) , t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT count(*) , T1.name FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.name",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT LOCATION) FROM shop,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT LOCATION) FROM shop,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID , Document_Name , Document_Description FROM Documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT document_id , document_name , document_description FROM Documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""",SELECT template_id FROM Templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""",SELECT template_id FROM Templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.document_name = ""Data base""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = ""Data base""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT T1.document_name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id WHERE T2.template_type_code = 'BK',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT T1.document_name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id WHERE T2.Template_Type_Code = 'BK',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Documents,OperationalError('no such column: template_type_code'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM Templates EXCEPT SELECT t1.template_type_code FROM Templates AS t1 JOIN Documents AS t2 ON t1.template_id = t2.template_id,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_id,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T1.template_details FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,"Not match: [('Advertisement',), ('Book',), ('Paper',), ('Presentation',)] != [('',)]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""","SELECT T1.template_id FROM Templates AS T1 INNER JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = ""Presentation""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT T1.template_id FROM Templates AS T1 JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = 'Presentation',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.Document_Name = 'Summer Show',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.Document_Name = 'Summer Show',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T2.Paragraph_ID, T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Welcome to NY'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""","SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = ""Customer reviews""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T1.Document_Name , count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T2.Document_Name , COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",OperationalError('no such column: T2.Document_Name'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.Document_Name FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.Document_Name FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',,True
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""","Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""","Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T3.Name , T2.Course FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name ASC",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name ASC",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Math',,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Math',,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name , COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name , COUNT(*) FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange),,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange),,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE age  <  30,SELECT count(*) FROM visitor WHERE Age < 30,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT museum_id , name FROM museum ORDER BY num_of_staff DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Num_of_Staff , Open_Year FROM museum WHERE name = 'Plaza Museum'",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010),,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","SELECT T1.id , T1.name , T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID HAVING COUNT(*) > 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T1.id , T1.Name , T1.Level_of_membership FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY SUM(T2.Total_spent) DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT T1.Museum_ID , T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit),,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT sum(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT T3.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID INNER JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T2.Open_Year < 2009 INTERSECT SELECT T3.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID INNER JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T2.Open_Year > 2011,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),SELECT count(DISTINCT T1.ID) FROM visitor AS T1 LEFT JOIN visit AS T2 ON T1.ID = T2.visitor_ID LEFT JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > 2010 OR T3.Open_Year IS NULL,"Not match: [('3',)] != [('6',)]",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT DISTINCT T1.country_code , T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT DISTINCT T1.country_code , T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT DISTINCT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT DISTINCT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'","Not match: [('GER', 'Angelique'), ('USA', 'Serena')] != [('Angelique', 'GER'), ('Serena', 'USA')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT avg(T1.ranking) , T2.first_name FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT avg(T2.ranking) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT sum(T1.ranking_points) , T2.first_name FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT sum(ranking_points) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT count(*) , country_code FROM players GROUP BY country_code",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT count(*) , country_code FROM players GROUP BY country_code",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT count(*) , YEAR FROM matches GROUP BY YEAR",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT count(*) , YEAR FROM matches GROUP BY YEAR",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships',"Not match: [('2',)] != [('3',)]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , count(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , count(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured',,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  tonnage FROM ship ORDER BY name DESC","SELECT name , tonnage FROM ship ORDER BY name DESC",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  date FROM battle","SELECT name , date , RESULT FROM battle","Not match: [('Battle of Adrianople', '14 April 1205'), ('Battle of Boruy', 'June 1205'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Philippopolis', '31 June 1208'), ('Battle of Rodosto', 'February 1206'), ('Battle of Rusion', '31 January 1206'), ('Battle of Serres', 'June 1205'), ('Siege of Constantinople', '1235')] != [('Battle of Adrianople', '14 April 1205', 'Bulgarian victory'), ('Battle of Boruy', 'June 1205', 'Bulgarian victory'), ('Battle of Messinopolis', '4 September 1207', 'Bulgarian victory'), ('Battle of Philippopolis', '31 June 1208', 'Latin victory'), ('Battle of Rodosto', 'February 1206', 'Bulgarian victory'), ('Battle of Rusion', '31 January 1206', 'Bulgarian victory'), ('Battle of Serres', 'June 1205', 'Bulgarian victory'), ('Siege of Constantinople', '1235', 'Two Year Truce')]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT max(killed) ,  min(killed) FROM death","SELECT max(killed) , min(killed) FROM death",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT avg(injured) FROM death,SELECT avg(injured) FROM death,,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","SELECT T1.killed , T1.injured FROM death AS T1 INNER JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name , RESULT FROM battle WHERE bulgarian_commander != 'Boril'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","SELECT DISTINCT T1.id , T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id , T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I',,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(DISTINCT RESULT) FROM battle,SELECT count(DISTINCT RESULT) FROM battle,,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = '225' ),,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT T1.name , T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name , T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name , RESULT , bulgarian_commander FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE location = 'English Channel' AND disposition_of_ship = 'Lost')","Not match: [('Battle of Adrianople', 'Bulgarian victory', 'Kaloyan'), ('Battle of Rusion', 'Bulgarian victory', 'Kaloyan'), ('Battle of Serres', 'Bulgarian victory', 'Kaloyan')] != [('Battle of Adrianople', 'Bulgarian victory', 'Kaloyan'), ('Battle of Boruy', 'Bulgarian victory', 'Boril'), ('Battle of Messinopolis', 'Bulgarian victory', 'Unknown'), ('Battle of Philippopolis', 'Latin victory', 'Boril'), ('Battle of Rodosto', 'Bulgarian victory', 'Kaloyan'), ('Battle of Rusion', 'Bulgarian victory', 'Kaloyan'), ('Battle of Serres', 'Bulgarian victory', 'Kaloyan'), ('Siege of Constantinople', 'Two Year Truce', 'Ivan Asen II')]",False
spider_data/database/battle_death/battle_death.sqlite,SELECT note FROM death WHERE note LIKE '%East%',SELECT note FROM death WHERE note LIKE '%East%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1 , line_2 FROM addresses",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1 , line_2 FROM addresses",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM COURSES,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM COURSES,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name = 'math',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name = 'math',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"SELECT zip_postcode FROM addresses WHERE city = ""Port Chelsea""",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"SELECT zip_postcode FROM addresses WHERE city = ""Port Chelsea""",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.department_name , T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT T1.department_name , T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineering',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , section_description FROM Sections",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , section_description FROM Sections",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) <= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) < 2","Not match: [('cal', '7'), ('db', '12'), ('dl', '9'), ('ds', '1'), ('en', '4'), ('fr', '5'), ('la', '6'), ('math', '2'), ('ml', '10'), ('nlp', '8'), ('pl', '14')] != [('cal', '7'), ('db', '12'), ('dl', '9'), ('en', '4'), ('la', '6'), ('math', '2'), ('ml', '10')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'","Not match: [('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id , T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id , T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id , T2.first_name , T2.middle_name , T2.last_name , COUNT(*) , T1.student_id FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) AS num FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY num DESC LIMIT 1","Not match: [('7', 'Frida', 'Aisha', 'Huel', '3', '7')] != [('7', 'Frida', 'Aisha', 'Huel', '3')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment),,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment),,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1,"Not match: [('rs',)] != [('pl',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT T3.student_id FROM Student_Enrolment AS T3),"Not match: [('Gleichner',), ('Weimann',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment),"Not match: [('Gleichner',), ('Weimann',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',"SELECT cell_mobile_number FROM Students WHERE first_name = ""Timmothy"" AND last_name = ""Ward""",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',"SELECT cell_mobile_number FROM Students WHERE first_name = ""Timmothy"" AND last_name = ""Ward""","Not match: [] != [('(096)889-8954x524',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id , T1.line_1 , T1.line_2 , T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","Not match: [('9', '0643 Muller Vista', 'Suite 383')] != [('9', '0643 Muller Vista', 'Suite 383', '')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Master' INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Bachelor',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Master' INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Bachelors',"Not match: [('13',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) FROM Students,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) FROM Students,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM Sections WHERE section_name = 'h',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM Sections WHERE section_name = 'h',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = ""Haiti"" OR T1.cell_mobile_number = ""09700166582""","Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = ""Haiti"" OR T1.cell_mobile_number = ""09700166582""","Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title ASC,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY title ASC,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name) , count(DISTINCT CONTENT) FROM TV_Channel",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name) , count(DISTINCT CONTENT) FROM TV_Channel",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(LANGUAGE) ASC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating DESC,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating DESC,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(SHARE) , max(SHARE) FROM TV_series","Not match: [('9.0', '5.0')] != [('5.0', '9.0')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(SHARE) , min(SHARE) FROM TV_series",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by , COUNT(*) FROM Cartoon GROUP BY Directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by , COUNT(*) FROM Cartoon GROUP BY Directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT production_code , channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT production_code , channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option , series_name FROM TV_Channel WHERE Hight_definition_TV = ""yes""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option , series_name FROM TV_Channel WHERE Hight_definition_TV = ""yes""",,True
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR , country FROM TV_Channel WHERE LANGUAGE != 'English'",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR , Country FROM TV_Channel WHERE LANGUAGE != 'English'",,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel WHERE country IN ( SELECT country FROM TV_Channel GROUP BY country HAVING count(id) > 2 ),"Not match: [('700',)] != [('700',), ('701',), ('703',), ('704',), ('705',), ('708',), ('713',), ('714',), ('715',), ('717',), ('719',), ('728',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY series_name HAVING COUNT(id) > 2,"Not match: [('700',)] != []",False
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel EXCEPT SELECT channel FROM Cartoon WHERE directed_by = 'Ben Jones',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',"SELECT id FROM TV_Channel EXCEPT SELECT Channel FROM Cartoon WHERE Directed_by = ""Ben Jones""",,True
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),"SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = ""Ben Jones"" )",,True
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT Package_Option FROM TV_Channel EXCEPT SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones',"Not match: [('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia + Sky HD',), ('no ( FTV )',), ('no ( FTV )',)] != [('Sky Famiglia + Sky HD',), ('no ( FTV )',)]",False
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM people ORDER BY Name ASC",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM people ORDER BY Name ASC",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM people,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM people,,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM area_code_state,SELECT count(DISTINCT state) FROM area_code_state,"Not match: [('305',)] != [('51',)]",False
spider_data/database/voter_1/voter_1.sqlite,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id , phone_number , state FROM votes",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT max(area_code) , min(area_code) FROM area_code_state",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT max(created) FROM votes WHERE state  =  'CA',SELECT max(created) FROM votes WHERE state = 'CA',,True
spider_data/database/voter_1/voter_1.sqlite,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT DISTINCT state ,  created FROM votes","SELECT DISTINCT state , created FROM votes",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 INNER JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA',,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),,True
spider_data/database/voter_1/voter_1.sqlite,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT T1.created , T1.state , T1.phone_number FROM VOTES AS T1 INNER JOIN CONTTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'",OperationalError('no such table: CONTTESTANTS'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state INNER JOIN CONTTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state INNER JOIN CONTTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Kelly Clauss',OperationalError('no such table: CONTTESTANTS'),False
spider_data/database/voter_1/voter_1.sqlite,"select contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%',,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY T2.Percentage DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY T2.Percentage DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Population , Region FROM country WHERE Name = ""Angola""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Population , Region FROM country WHERE Name = ""Angola""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""",,True
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,,True
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT COUNT(DISTINCT LANGUAGE) FROM countrylanguage,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba',,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba',,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT SUM(CASE WHEN T2.IsOfficial = 'T' THEN 1 ELSE 0 END) AS count FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan',,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT SUM(CASE WHEN T2.IsOfficial = 'T' THEN 1 ELSE 0 END) AS count FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan',,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(*) FROM ( SELECT T1.CountryCode FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch' GROUP BY T1.CountryCode ) T3,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"" INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French"" AND T2.IsOfficial = ""T""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese',,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""","SELECT COUNT(DISTINCT Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Chinese""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",SELECT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch',"Not match: [('Australia and New Zealand',), ('British Islands',), ('Caribbean',), ('Central America',), ('Eastern Africa',), ('Eastern Asia',), ('Melanesia',), ('Micronesia',), ('Micronesia/Caribbean',), ('Middle East',), ('Nordic Countries',), ('North America',), ('Polynesia',), ('South America',), ('Southeast Asia',), ('Southern Africa',), ('Southern Europe',), ('Southern and Central Asia',), ('Western Africa',), ('Western Europe',)] != [('Australia and New Zealand',), ('Australia and New Zealand',), ('Australia and New Zealand',), ('Australia and New Zealand',), ('Australia and New Zealand',), ('British Islands',), ('British Islands',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Caribbean',), ('Central America',), ('Eastern Africa',), ('Eastern Africa',), ('Eastern Asia',), ('Eastern Asia',), ('Eastern Asia',), ('Melanesia',), ('Micronesia',), ('Micronesia',), ('Micronesia',), ('Micronesia',), ('Micronesia',), ('Micronesia/Caribbean',), ('Middle East',), ('Middle East',), ('Nordic Countries',), ('Nordic Countries',), ('Nordic Countries',), ('North America',), ('North America',), ('North America',), ('North America',), ('Polynesia',), ('Polynesia',), ('Polynesia',), ('Polynesia',), ('Polynesia',), ('Polynesia',), ('Polynesia',), ('South America',), ('Southeast Asia',), ('Southeast Asia',), ('Southern Africa',), ('Southern Africa',), ('Southern Europe',), ('Southern Europe',), ('Southern and Central Asia',), ('Western Africa',), ('Western Europe',), ('Western Europe',), ('Western Europe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' OR T2.Language = 'English',,True
spider_data/database/world_1/world_1.sqlite,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' UNION SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' AND T2.IsOfficial = 'T',"Not match: [] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' UNION SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' AND T2.IsOfficial = 'T',"Not match: [('ABW', 'Aruba', 'North America', 'Caribbean', '193.0', '', '103000', '78.4', '828.0', '793.0', 'Aruba', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '129', 'AW', 'ABW', 'Dutch', 'T', '5.3'), ('AIA', 'Anguilla', 'North America', 'Caribbean', '96.0', '', '8000', '76.1', '63.2', '', 'Anguilla', 'Dependent Territory of the UK', 'Elisabeth II', '62', 'AI', 'AIA', 'English', 'T', '0.0'), ('ANT', 'Netherlands Antilles', 'North America', 'Caribbean', '800.0', '', '217000', '74.7', '1941.0', '', 'Nederlandse Antillen', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '33', 'AN', 'ANT', 'Dutch', 'T', '0.0'), ('ASM', 'American Samoa', 'Oceania', 'Polynesia', '199.0', '', '68000', '75.1', '334.0', '', 'Amerika Samoa', 'US Territory', 'George W. Bush', '54', 'AS', 'ASM', 'English', 'T', '3.1'), ('ATG', 'Antigua and Barbuda', 'North America', 'Caribbean', '442.0', '1981', '68000', '70.5', '612.0', '584.0', 'Antigua and Barbuda', 'Constitutional Monarchy', 'Elisabeth II', '63', 'AG', 'ATG', 'English', 'T', '0.0'), ('AUS', 'Australia', 'Oceania', 'Australia and New Zealand', '7741220.0', '1901', '18886000', '79.8', '351182.0', '392911.0', 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', '135', 'AU', 'AUS', 'English', 'T', '81.2'), ('BEL', 'Belgium', 'Europe', 'Western Europe', '30518.0', '1830', '10239000', '77.8', '249704.0', '243948.0', 'België/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', '179', 'BE', 'BEL', 'Dutch', 'T', '59.2'), ('BLZ', 'Belize', 'North America', 'Central America', '22696.0', '1981', '241000', '70.9', '630.0', '616.0', 'Belize', 'Constitutional Monarchy', 'Elisabeth II', '185', 'BZ', 'BLZ', 'English', 'T', '50.8'), ('BMU', 'Bermuda', 'North America', 'North America', '53.0', '', '65000', '76.9', '2328.0', '2190.0', 'Bermuda', 'Dependent Territory of the UK', 'Elisabeth II', '191', 'BM', 'BMU', 'English', 'T', '100.0'), ('BRB', 'Barbados', 'North America', 'Caribbean', '430.0', '1966', '270000', '73.0', '2223.0', '2186.0', 'Barbados', 'Constitutional Monarchy', 'Elisabeth II', '174', 'BB', 'BRB', 'English', 'T', '0.0'), ('CAN', 'Canada', 'North America', 'North America', '9970610.0', '1867', '31147000', '79.4', '598862.0', '625626.0', 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', '1822', 'CA', 'CAN', 'English', 'T', '60.4'), ('CCK', 'Cocos (Keeling) Islands', 'Oceania', 'Australia and New Zealand', '14.0', '', '600', '', '0.0', '', 'Cocos (Keeling) Islands', 'Territory of Australia', 'Elisabeth II', '2317', 'CC', 'CCK', 'English', 'T', '0.0'), ('CXR', 'Christmas Island', 'Oceania', 'Australia and New Zealand', '135.0', '', '2500', '', '0.0', '', 'Christmas Island', 'Territory of Australia', 'Elisabeth II', '1791', 'CX', 'CXR', 'English', 'T', '0.0'), ('CYM', 'Cayman Islands', 'North America', 'Caribbean', '264.0', '', '38000', '78.9', '1263.0', '1186.0', 'Cayman Islands', 'Dependent Territory of the UK', 'Elisabeth II', '553', 'KY', 'CYM', 'English', 'T', '0.0'), ('FLK', 'Falkland Islands', 'South America', 'South America', '12173.0', '', '2000', '', '0.0', '', 'Falkland Islands', 'Dependent Territory of the UK', 'Elisabeth II', '763', 'FK', 'FLK', 'English', 'T', '0.0'), ('GBR', 'United Kingdom', 'Europe', 'British Islands', '242900.0', '1066', '59623400', '77.7', '1378330.0', '1296830.0', 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', '456', 'GB', 'GBR', 'English', 'T', '97.3'), ('GIB', 'Gibraltar', 'Europe', 'Southern Europe', '6.0', '', '25000', '79.0', '258.0', '', 'Gibraltar', 'Dependent Territory of the UK', 'Elisabeth II', '915', 'GI', 'GIB', 'English', 'T', '88.9'), ('GUM', 'Guam', 'Oceania', 'Micronesia', '549.0', '', '168000', '77.8', '1197.0', '1136.0', 'Guam', 'US Territory', 'George W. Bush', '921', 'GU', 'GUM', 'English', 'T', '37.5'), ('HKG', 'Hong Kong', 'Asia', 'Eastern Asia', '1075.0', '', '6782000', '79.5', '166448.0', '173610.0', 'Xianggang/Hong Kong', 'Special Administrative Region of China', 'Jiang Zemin', '937', 'HK', 'HKG', 'English', 'T', '2.2'), ('IRL', 'Ireland', 'Europe', 'British Islands', '70273.0', '1921', '3775100', '76.8', '75921.0', '73132.0', 'Ireland/Éire', 'Republic', 'Mary McAleese', '1447', 'IE', 'IRL', 'English', 'T', '98.4'), ('KNA', 'Saint Kitts and Nevis', 'North America', 'Caribbean', '261.0', '1983', '38000', '70.7', '299.0', '', 'Saint Kitts and Nevis', 'Constitutional Monarchy', 'Elisabeth II', '3064', 'KN', 'KNA', 'English', 'T', '0.0'), ('LCA', 'Saint Lucia', 'North America', 'Caribbean', '622.0', '1979', '154000', '72.3', '571.0', '', 'Saint Lucia', 'Constitutional Monarchy', 'Elisabeth II', '3065', 'LC', 'LCA', 'English', 'T', '20.0'), ('LSO', 'Lesotho', 'Africa', 'Southern Africa', '30355.0', '1966', '2153000', '50.8', '1061.0', '1161.0', 'Lesotho', 'Constitutional Monarchy', 'Letsie III', '2437', 'LS', 'LSO', 'English', 'T', '0.0'), ('MHL', 'Marshall Islands', 'Oceania', 'Micronesia', '181.0', '1990', '64000', '65.5', '97.0', '', 'Marshall Islands/Majol', 'Republic', 'Kessai Note', '2507', 'MH', 'MHL', 'English', 'T', '0.0'), ('MLT', 'Malta', 'Europe', 'Southern Europe', '316.0', '1964', '380200', '77.9', '3512.0', '3338.0', 'Malta', 'Republic', 'Guido de Marco', '2484', 'MT', 'MLT', 'English', 'T', '2.1'), ('MNP', 'Northern Mariana Islands', 'Oceania', 'Micronesia', '464.0', '', '78000', '75.5', '0.0', '', 'Northern Mariana Islands', 'Commonwealth of the US', 'George W. Bush', '2913', 'MP', 'MNP', 'English', 'T', '4.8'), ('MSR', 'Montserrat', 'North America', 'Caribbean', '102.0', '', '11000', '78.0', '109.0', '', 'Montserrat', 'Dependent Territory of the UK', 'Elisabeth II', '2697', 'MS', 'MSR', 'English', 'T', '0.0'), ('NFK', 'Norfolk Island', 'Oceania', 'Australia and New Zealand', '36.0', '', '2000', '', '0.0', '', 'Norfolk Island', 'Territory of Australia', 'Elisabeth II', '2806', 'NF', 'NFK', 'English', 'T', '0.0'), ('NIU', 'Niue', 'Oceania', 'Polynesia', '260.0', '', '2000', '', '0.0', '', 'Niue', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '2805', 'NU', 'NIU', 'English', 'T', '0.0'), ('NLD', 'Netherlands', 'Europe', 'Western Europe', '41526.0', '1581', '15864000', '78.3', '371362.0', '360478.0', 'Nederland', 'Constitutional Monarchy', 'Beatrix', '5', 'NL', 'NLD', 'Dutch', 'T', '95.6'), ('NRU', 'Nauru', 'Oceania', 'Micronesia', '21.0', '1968', '12000', '60.8', '197.0', '', 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', '2728', 'NR', 'NRU', 'English', 'T', '7.5'), ('NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', '270534.0', '1907', '3862000', '77.8', '54669.0', '64960.0', 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', '3499', 'NZ', 'NZL', 'English', 'T', '87.0'), ('PLW', 'Palau', 'Oceania', 'Micronesia', '459.0', '1994', '19000', '68.6', '105.0', '', 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', '2881', 'PW', 'PLW', 'English', 'T', '3.2'), ('SHN', 'Saint Helena', 'Africa', 'Western Africa', '314.0', '', '6000', '76.8', '0.0', '', 'Saint Helena', 'Dependent Territory of the UK', 'Elisabeth II', '3063', 'SH', 'SHN', 'English', 'T', '0.0'), ('SYC', 'Seychelles', 'Africa', 'Eastern Africa', '455.0', '1976', '77000', '70.4', '536.0', '539.0', 'Sesel/Seychelles', 'Republic', 'France-Albert René', '3206', 'SC', 'SYC', 'English', 'T', '3.8'), ('TCA', 'Turks and Caicos Islands', 'North America', 'Caribbean', '430.0', '', '17000', '73.3', '96.0', '', 'The Turks and Caicos Islands', 'Dependent Territory of the UK', 'Elisabeth II', '3423', 'TC', 'TCA', 'English', 'T', '0.0'), ('TKL', 'Tokelau', 'Oceania', 'Polynesia', '12.0', '', '2000', '', '0.0', '', 'Tokelau', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '3333', 'TK', 'TKL', 'English', 'T', '0.0'), ('TON', 'Tonga', 'Oceania', 'Polynesia', '650.0', '1970', '99000', '67.9', '146.0', '170.0', 'Tonga', 'Monarchy', ""Taufa'ahau Tupou IV"", '3334', 'TO', 'TON', 'English', 'T', '0.0'), ('TUV', 'Tuvalu', 'Oceania', 'Polynesia', '26.0', '1978', '12000', '66.3', '6.0', '', 'Tuvalu', 'Constitutional Monarchy', 'Elisabeth II', '3424', 'TV', 'TUV', 'English', 'T', '0.0'), ('UMI', 'United States Minor Outlying Islands', 'Oceania', 'Micronesia/Caribbean', '16.0', '', '0', '', '0.0', '', 'United States Minor Outlying Islands', 'Dependent Territory of the US', 'George W. Bush', '', 'UM', 'UMI', 'English', 'T', '0.0'), ('USA', 'United States', 'North America', 'North America', '9363520.0', '1776', '278357000', '77.1', '8510700.0', '8110900.0', 'United States', 'Federal Republic', 'George W. Bush', '3813', 'US', 'USA', 'English', 'T', '86.2'), ('VCT', 'Saint Vincent and the Grenadines', 'North America', 'Caribbean', '388.0', '1979', '114000', '72.3', '285.0', '', 'Saint Vincent and the Grenadines', 'Constitutional Monarchy', 'Elisabeth II', '3066', 'VC', 'VCT', 'English', 'T', '0.0'), ('VGB', 'Virgin Islands, British', 'North America', 'Caribbean', '151.0', '', '21000', '75.4', '612.0', '573.0', 'British Virgin Islands', 'Dependent Territory of the UK', 'Elisabeth II', '537', 'VG', 'VGB', 'English', 'T', '0.0'), ('VIR', 'Virgin Islands, U.S.', 'North America', 'Caribbean', '347.0', '', '93000', '78.1', '0.0', '', 'Virgin Islands of the United States', 'US Territory', 'George W. Bush', '4067', 'VI', 'VIR', 'English', 'T', '81.7'), ('VUT', 'Vanuatu', 'Oceania', 'Melanesia', '12189.0', '1980', '190000', '60.6', '261.0', '246.0', 'Vanuatu', 'Republic', 'John Bani', '3537', 'VU', 'VUT', 'English', 'T', '28.3'), ('WSM', 'Samoa', 'Oceania', 'Polynesia', '2831.0', '1962', '180000', '69.2', '141.0', '157.0', 'Samoa', 'Parlementary Monarchy', 'Malietoa Tanumafili II', '3169', 'WS', 'WSM', 'English', 'T', '0.6'), ('ZAF', 'South Africa', 'Africa', 'Southern Africa', '1221037.0', '1910', '40377000', '51.1', '116729.0', '129092.0', 'South Africa', 'Republic', 'Thabo Mbeki', '716', 'ZA', 'ZAF', 'English', 'T', '8.5'), ('ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', '390757.0', '1980', '11669000', '37.8', '5951.0', '8670.0', 'Zimbabwe', 'Republic', 'Robert G. Mugabe', '4068', 'ZW', 'ZWE', 'English', 'T', '2.2')] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T1.Name) = 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T1.Name) = 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1","SELECT t1.name FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode = t2.countrycode WHERE t2.language = ""English"" ORDER BY t1.population DESC LIMIT 1","Not match: [('New York', '8008278')] != [('New York',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1,"Not match: [('New York', '8008278')] != [('New York',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'),,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")","SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")","SELECT sum(Population) FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English"" )",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")","SELECT sum(Population) FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English"" )",,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT( DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")","SELECT Name FROM country WHERE Continent = ""Africa"" AND Population < (SELECT max(Population) FROM country WHERE Continent = ""Asia"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")","SELECT Name FROM country WHERE Continent = ""Africa"" AND Population < (SELECT max(Population) FROM country WHERE Continent = ""Asia"")","Not match: [('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',), ('Sao Tome and Principe',), ('Seychelles',)] != [('Algeria',), ('Angola',), ('Benin',), ('Botswana',), ('British Indian Ocean Territory',), ('Burkina Faso',), ('Burundi',), ('Cameroon',), ('Cape Verde',), ('Central African Republic',), ('Chad',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Côte d’Ivoire',), ('Djibouti',), ('Egypt',), ('Equatorial Guinea',), ('Eritrea',), ('Ethiopia',), ('Gabon',), ('Gambia',), ('Ghana',), ('Guinea',), ('Guinea-Bissau',), ('Kenya',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Madagascar',), ('Malawi',), ('Mali',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Morocco',), ('Mozambique',), ('Namibia',), ('Niger',), ('Nigeria',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Sao Tome and Principe',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Somalia',), ('South Africa',), ('Sudan',), ('Swaziland',), ('Tanzania',), ('Togo',), ('Tunisia',), ('Uganda',), ('Western Sahara',), ('Zambia',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")","SELECT Name FROM country WHERE Continent = ""Asia"" AND Population > (SELECT max(Population) FROM country WHERE Continent = ""Africa"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")","SELECT Name FROM country WHERE Continent = ""Asia"" AND Population > (SELECT min(Population) FROM country WHERE Continent = ""Africa"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE Language = ""English""",,True
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND T3.Language = 'English' AND T3.IsOfficial = 'F',"Not match: [('A Coruña (La Coruña)',), ('Aachen',), ('Aalborg',), ('Abakan',), ('Aix-en-Provence',), ('Albacete',), ('Alcalá de Henares',), ('Alcorcón',), ('Alessandria',), ('Algeciras',), ('Alicante [Alacant]',), ('Alkmaar',), ('Almere',), ('Almería',), ('Almetjevsk',), ('Altševsk',), ('Amadora',), ('Amersfoort',), ('Amiens',), ('Amsterdam',), ('Ancona',), ('Andorra la Vella',), ('Andria',), ('Angarsk',), ('Angers',), ('Antwerpen',), ('Anzero-Sudzensk',), ('Apeldoorn',), ('Arad',), ('Arezzo',), ('Argenteuil',), ('Arkangeli',), ('Armavir',), ('Arnhem',), ('Arzamas',), ('Astrahan',), ('Athenai',), ('Atšinsk',), ('Augsburg',), ('Bacau',), ('Badajoz',), ('Badalona',), ('Baia Mare',), ('Balakovo',), ('Balašiha',), ('Balašov',), ('Balti',), ('Banja Luka',), ('Barakaldo',), ('Baranovitši',), ('Barcelona',), ('Bari',), ('Barletta',), ('Barnaul',), ('Basel',), ('Bataisk',), ('Belgorod',), ('Bender (Tîghina)',), ('Beograd',), ('Berdjansk',), ('Berdytšiv',), ('Berezniki',), ('Bergamo',), ('Bergen',), ('Bergisch Gladbach',), ('Berlin',), ('Bern',), ('Besançon',), ('Bialystok',), ('Bielefeld',), ('Bielsko-Biala',), ('Bijsk',), ('Bila Tserkva',), ('Bilbao',), ('Blagoveštšensk',), ('Bobruisk',), ('Bochum',), ('Bologna',), ('Bolzano',), ('Bonn',), ('Bordeaux',), ('Borisov',), ('Borås',), ('Botosani',), ('Bottrop',), ('Boulogne-Billancourt',), ('Braga',), ('Braila',), ('Brasov',), ('Bratislava',), ('Bratsk',), ('Braunschweig',), ('Breda',), ('Bremen',), ('Bremerhaven',), ('Brescia',), ('Brest',), ('Brindisi',), ('Brjansk',), ('Brno',), ('Brovary',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bucuresti',), ('Budapest',), ('Bugulma',), ('Burgas',), ('Burgos',), ('Buzau',), ('Bydgoszcz',), ('Bytom',), ('Bærum',), ('Caen',), ('Cagliari',), ('Cartagena',), ('Castellón de la Plana [Castell',), ('Catania',), ('Catanzaro',), ('Cesena',), ('Ceské Budejovice',), ('Charleroi',), ('Chemnitz',), ('Chisinau',), ('Chorzów',), ('Città del Vaticano',), ('Clermont-Ferrand',), ('Cluj-Napoca',), ('Constanta',), ('Cottbus',), ('Coímbra',), ('Craiova',), ('Czestochowa',), ('Cádiz',), ('Córdoba',), ('Dabrowa Górnicza',), ('Darmstadt',), ('Daugavpils',), ('Debrecen',), ('Delft',), ('Derbent',), ('Dijon',), ('Dimitrovgrad',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dobric',), ('Donetsk',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dortmund',), ('Dos Hermanas',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Duisburg',), ('Dzerzinsk',), ('Düren',), ('Düsseldorf',), ('Ede',), ('Eindhoven',), ('Elblag',), ('Elche [Elx]',), ('Elektrostal',), ('Elista',), ('Emmen',), ('Engels',), ('Enschede',), ('Erfurt',), ('Erlangen',), ('Espoo',), ('Essen',), ('Esslingen am Neckar',), ('Ferrara',), ('Firenze',), ('Focsani',), ('Foggia',), ('Forlì',), ('Frankfurt am Main',), ('Frederiksberg',), ('Freiburg im Breisgau',), ('Fuenlabrada',), ('Fürth',), ('Galati',), ('Gdansk',), ('Gdynia',), ('Gelsenkirchen',), ('Geneve',), ('Genova',), ('Gent',), ('Gera',), ('Getafe',), ('Gijón',), ('Giugliano in Campania',), ('Glazov',), ('Gliwice',), ('Gomel',), ('Gorlivka',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Granada',), ('Graz',), ('Grenoble',), ('Grodno',), ('Groningen',), ('Grozny',), ('Grudziadz',), ('Györ',), ('Gävle',), ('Göttingen',), ('Gütersloh',), ('Haag',), ('Haarlem',), ('Haarlemmermeer',), ('Habarovsk',), ('Hagen',), ('Halle/Saale',), ('Hamburg',), ('Hamm',), ('Hannover',), ('Harkova [Harkiv]',), ('Heerlen',), ('Heidelberg',), ('Heilbronn',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Herakleion',), ('Herne',), ('Herson',), ('Hildesheim',), ('Himki',), ('Hmelnytskyi',), ('Hradec Králové',), ('Huelva',), ('Iasi',), ('Ingolstadt',), ('Innsbruck',), ('Irkutsk',), ('Iserlohn',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Izevsk',), ('Izmajil',), ('Jakutsk',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jaén',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelets',), ('Jena',), ('Jenakijeve',), ('Jerez de la Frontera',), ('Jessentuki',), ('Jevpatorija',), ('Joškar-Ola',), ('Juzno-Sahalinsk',), ('Jönköping',), ('Kaiserslautern',), ('Kaliningrad',), ('Kalisz',), ('Kallithea',), ('Kaluga',), ('Kamensk-Uralski',), ('Kamjanets-Podilskyi',), ('Kamyšin',), ('Kansk',), ('Karlsruhe',), ('Kassel',), ('Katowice',), ('Kaunas',), ('Kazan',), ('Kecskemét',), ('Kemerovo',), ('Kertš',), ('Kiel',), ('Kielce',), ('Kinešma',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kiseljovsk',), ('Kislovodsk',), ('Klagenfurt',), ('Klaipeda',), ('Klin',), ('Koblenz',), ('Kolomna',), ('Kolpino',), ('Komsomolsk-na-Amure',), ('Konotop',), ('Korolev',), ('Kostjantynivka',), ('Kostroma',), ('Koszalin',), ('Kovrov',), ('Košice',), ('Kragujevac',), ('Kraków',), ('Kramatorsk',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krefeld',), ('Krementšuk',), ('Kryvyi Rig',), ('Kurgan',), ('Kursk',), ('Kuznetsk',), ('Kyiv',), ('Kyzyl',), ('Köln',), ('København',), ('La Spezia',), ('Lahti',), ('Larisa',), ('Las Palmas de Gran Canaria',), ('Latina',), ('Lausanne',), ('Le Havre',), ('Le Mans',), ('Lecce',), ('Leganés',), ('Legnica',), ('Leiden',), ('Leipzig',), ('Leninsk-Kuznetski',), ('Leverkusen',), ('León',), ('Liberec',), ('Lida',), ('Liepaja',), ('Lille',), ('Limoges',), ('Linköping',), ('Linz',), ('Lipetsk',), ('Lisboa',), ('Livorno',), ('Liège',), ('Ljubertsy',), ('Ljubljana',), ('Lleida (Lérida)',), ('Logroño',), ('Longyearbyen',), ('Lublin',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lund',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Lviv',), ('Lyon',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('Lódz',), ('Lübeck',), ('Lünen',), ('Maastricht',), ('Madrid',), ('Magadan',), ('Magdeburg',), ('Magnitogorsk',), ('Mahatškala',), ('Maikop',), ('Mainz',), ('Makijivka',), ('Malmö',), ('Mannheim',), ('Marbella',), ('Maribor',), ('Mariupol',), ('Marl',), ('Marseille',), ('Mataró',), ('Melitopol',), ('Messina',), ('Metz',), ('Mezduretšensk',), ('Miass',), ('Milano',), ('Minsk',), ('Miskolc',), ('Mitšurinsk',), ('Modena',), ('Moers',), ('Mogiljov',), ('Molodetšno',), ('Monaco-Ville',), ('Mons',), ('Monte-Carlo',), ('Montpellier',), ('Montreuil',), ('Monza',), ('Moscow',), ('Mozyr',), ('Mukatševe',), ('Mulhouse',), ('Munich [München]',), ('Murcia',), ('Murmansk',), ('Murom',), ('Mykolajiv',), ('Mytištši',), ('Málaga',), ('Móstoles',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Münster',), ('Nabereznyje Tšelny',), ('Nahodka',), ('Naltšik',), ('Namur',), ('Nancy',), ('Nantes',), ('Napoli',), ('Neftejugansk',), ('Neftekamsk',), ('Neuss',), ('Nevinnomyssk',), ('Nice',), ('Nijmegen',), ('Nikopol',), ('Niznekamsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Niš',), ('Noginsk',), ('Nojabrsk',), ('Norilsk',), ('Norrköping',), ('Novara',), ('Novi Sad',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novouralsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Nyiregyháza',), ('Nîmes',), ('Nürnberg',), ('Oberhausen',), ('Obninsk',), ('Odense',), ('Odesa',), ('Odintsovo',), ('Offenbach am Main',), ('Oktjabrski',), ('Oldenburg',), ('Oleksandrija',), ('Olomouc',), ('Olsztyn',), ('Omsk',), ('Opole',), ('Oradea',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orjol',), ('Orléans',), ('Orsk',), ('Orša',), ('Osijek',), ('Oslo',), ('Osnabrück',), ('Ostrava',), ('Oulu',), ('Ourense (Orense)',), ('Oviedo',), ('Paderborn',), ('Padova',), ('Palermo',), ('Palma de Mallorca',), ('Pamplona [Iruña]',), ('Panevezys',), ('Pardubice',), ('Paris',), ('Parma',), ('Patras',), ('Pavlograd',), ('Penza',), ('Peristerion',), ('Perm',), ('Perpignan',), ('Perugia',), ('Pervouralsk',), ('Pesaro',), ('Pescara',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Pforzheim',), ('Piacenza',), ('Piatra Neamt',), ('Pihkova',), ('Pinsk',), ('Pireus',), ('Pisa',), ('Pitesti',), ('Pjatigorsk',), ('Pleven',), ('Plock',), ('Ploiesti',), ('Plovdiv',), ('Plzen',), ('Podgorica',), ('Podolsk',), ('Porto',), ('Potsdam',), ('Poznan',), ('Praha',), ('Prato',), ('Prešov',), ('Prizren',), ('Priština',), ('Prokopjevsk',), ('Pultava [Poltava]',), ('Puškin',), ('Pécs',), ('Radom',), ('Ratingen',), ('Ravenna',), ('Recklinghausen',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reims',), ('Remscheid',), ('Rennes',), ('Resita',), ('Reutlingen',), ('Reykjavík',), ('Riga',), ('Rijeka',), ('Rimini',), ('Rivne',), ('Rjazan',), ('Roma',), ('Rostock',), ('Rostov-na-Donu',), ('Rotterdam',), ('Roubaix',), ('Rouen',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruse',), ('Rybinsk',), ('Rybnik',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Saarbrücken',), ('Sabadell',), ('Salamanca',), ('Salavat',), ('Salerno',), ('Salzburg',), ('Salzgitter',), ('Samara',), ('San Marino',), ('Santa Coloma de Gramenet',), ('Santa Cruz de Tenerife',), ('Santander',), ('Santiago de Compostela',), ('Sarajevo',), ('Saransk',), ('Sarapul',), ('Saratov',), ('Sassari',), ('Satu Mare',), ('Schaan',), ('Schaerbeek',), ('Schwerin',), ('Sergijev Posad',), ('Serov',), ('Serpuhov',), ('Serravalle',), ('Sevastopol',), ('Severodvinsk',), ('Seversk',), ('Sevilla',), ('Sibiu',), ('Siegen',), ('Simferopol',), ('Sjeverodonetsk',), ('Skopje',), ('Sliven',), ('Slovjansk',), ('Slupsk',), ('Smolensk',), ('Sofija',), ('Soligorsk',), ('Solikamsk',), ('Solingen',), ('Sosnowiec',), ('Sotši',), ('Split',), ('St Petersburg',), ('St-Étienne',), ('Stahanov',), ('Stara Zagora',), ('Staryi Oskol',), ('Stavanger',), ('Stavropol',), ('Sterlitamak',), ('Stockholm',), ('Strasbourg',), ('Stuttgart',), ('Subotica',), ('Suceava',), ('Sumy',), ('Sundsvall',), ('Surgut',), ('Syktyvkar',), ('Syrakusa',), ('Syzran',), ('Szczecin',), ('Szeged',), ('Székesfehérvár',), ('Taganrog',), ('Tallinn',), ('Tambov',), ('Tampere',), ('Taranto',), ('Tarnów',), ('Tarragona',), ('Tartu',), ('Terni',), ('Ternopil',), ('Terrassa',), ('Thessaloniki',), ('Tilburg',), ('Timisoara',), ('Tirana',), ('Tiraspol',), ('Tjumen',), ('Tobolsk',), ('Toljatti',), ('Tomsk',), ('Torino',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torun',), ('Toulon',), ('Toulouse',), ('Tourcoing',), ('Tours',), ('Trento',), ('Trier',), ('Trieste',), ('Trondheim',), ('Tula',), ('Tulcea',), ('Turku [Åbo]',), ('Tver',), ('Tychy',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Mures',), ('Tórshavn',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšita',), ('Udine',), ('Ufa',), ('Uhta',), ('Ulan-Ude',), ('Uljanovsk',), ('Ulm',), ('Uman',), ('Umeå',), ('Uppsala',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Uzgorod',), ('Vaduz',), ('Valencia',), ('Valladolid',), ('Vantaa',), ('Varna',), ('Velbert',), ('Veliki Novgorod',), ('Velikije Luki',), ('Venezia',), ('Verona',), ('Vicenza',), ('Vigo',), ('Villeurbanne',), ('Vilnius',), ('Vinnytsja',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vladikavkaz',), ('Vladimir',), ('Vladivostok',), ('Volgodonsk',), ('Volgograd',), ('Vologda',), ('Volzski',), ('Vorkuta',), ('Voronez',), ('Votkinsk',), ('Västerås',), ('Walbrzych',), ('Warszawa',), ('Wien',), ('Wiesbaden',), ('Witten',), ('Wloclawek',), ('Wolfsburg',), ('Wroclaw',), ('Wuppertal',), ('Würzburg',), ('Zaanstad',), ('Zabrze',), ('Zagreb',), ('Zaporizzja',), ('Zaragoza',), ('Zelenodolsk',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zenica',), ('Zielona Góra',), ('Zlatoust',), ('Zoetermeer',), ('Zukovski',), ('Zwickau',), ('Zwolle',), ('Zytomyr',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('´s-Hertogenbosch',), ('Århus',), ('Örebro',), ('Ústí nad Labem',), ('Šahty',), ('Šiauliai',), ('Šostka',), ('Štšolkovo',), ('Šumen',)] != [('Aalborg',), ('Bergen',), ('Bærum',), ('Frederiksberg',), ('København',), ('Monaco-Ville',), ('Monte-Carlo',), ('Odense',), ('Oslo',), ('Reykjavík',), ('Stavanger',), ('Trondheim',), ('Århus',)]",False
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND T3.Language = 'English' AND T3.IsOfficial = 'F',"Not match: [('A Coruña (La Coruña)',), ('Aachen',), ('Aalborg',), ('Abakan',), ('Aix-en-Provence',), ('Albacete',), ('Alcalá de Henares',), ('Alcorcón',), ('Alessandria',), ('Algeciras',), ('Alicante [Alacant]',), ('Alkmaar',), ('Almere',), ('Almería',), ('Almetjevsk',), ('Altševsk',), ('Amadora',), ('Amersfoort',), ('Amiens',), ('Amsterdam',), ('Ancona',), ('Andorra la Vella',), ('Andria',), ('Angarsk',), ('Angers',), ('Antwerpen',), ('Anzero-Sudzensk',), ('Apeldoorn',), ('Arad',), ('Arezzo',), ('Argenteuil',), ('Arkangeli',), ('Armavir',), ('Arnhem',), ('Arzamas',), ('Astrahan',), ('Athenai',), ('Atšinsk',), ('Augsburg',), ('Bacau',), ('Badajoz',), ('Badalona',), ('Baia Mare',), ('Balakovo',), ('Balašiha',), ('Balašov',), ('Balti',), ('Banja Luka',), ('Barakaldo',), ('Baranovitši',), ('Barcelona',), ('Bari',), ('Barletta',), ('Barnaul',), ('Basel',), ('Bataisk',), ('Belgorod',), ('Bender (Tîghina)',), ('Beograd',), ('Berdjansk',), ('Berdytšiv',), ('Berezniki',), ('Bergamo',), ('Bergen',), ('Bergisch Gladbach',), ('Berlin',), ('Bern',), ('Besançon',), ('Bialystok',), ('Bielefeld',), ('Bielsko-Biala',), ('Bijsk',), ('Bila Tserkva',), ('Bilbao',), ('Blagoveštšensk',), ('Bobruisk',), ('Bochum',), ('Bologna',), ('Bolzano',), ('Bonn',), ('Bordeaux',), ('Borisov',), ('Borås',), ('Botosani',), ('Bottrop',), ('Boulogne-Billancourt',), ('Braga',), ('Braila',), ('Brasov',), ('Bratislava',), ('Bratsk',), ('Braunschweig',), ('Breda',), ('Bremen',), ('Bremerhaven',), ('Brescia',), ('Brest',), ('Brindisi',), ('Brjansk',), ('Brno',), ('Brovary',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bucuresti',), ('Budapest',), ('Bugulma',), ('Burgas',), ('Burgos',), ('Buzau',), ('Bydgoszcz',), ('Bytom',), ('Bærum',), ('Caen',), ('Cagliari',), ('Cartagena',), ('Castellón de la Plana [Castell',), ('Catania',), ('Catanzaro',), ('Cesena',), ('Ceské Budejovice',), ('Charleroi',), ('Chemnitz',), ('Chisinau',), ('Chorzów',), ('Città del Vaticano',), ('Clermont-Ferrand',), ('Cluj-Napoca',), ('Constanta',), ('Cottbus',), ('Coímbra',), ('Craiova',), ('Czestochowa',), ('Cádiz',), ('Córdoba',), ('Dabrowa Górnicza',), ('Darmstadt',), ('Daugavpils',), ('Debrecen',), ('Delft',), ('Derbent',), ('Dijon',), ('Dimitrovgrad',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dobric',), ('Donetsk',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dortmund',), ('Dos Hermanas',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Duisburg',), ('Dzerzinsk',), ('Düren',), ('Düsseldorf',), ('Ede',), ('Eindhoven',), ('Elblag',), ('Elche [Elx]',), ('Elektrostal',), ('Elista',), ('Emmen',), ('Engels',), ('Enschede',), ('Erfurt',), ('Erlangen',), ('Espoo',), ('Essen',), ('Esslingen am Neckar',), ('Ferrara',), ('Firenze',), ('Focsani',), ('Foggia',), ('Forlì',), ('Frankfurt am Main',), ('Frederiksberg',), ('Freiburg im Breisgau',), ('Fuenlabrada',), ('Fürth',), ('Galati',), ('Gdansk',), ('Gdynia',), ('Gelsenkirchen',), ('Geneve',), ('Genova',), ('Gent',), ('Gera',), ('Getafe',), ('Gijón',), ('Giugliano in Campania',), ('Glazov',), ('Gliwice',), ('Gomel',), ('Gorlivka',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Granada',), ('Graz',), ('Grenoble',), ('Grodno',), ('Groningen',), ('Grozny',), ('Grudziadz',), ('Györ',), ('Gävle',), ('Göttingen',), ('Gütersloh',), ('Haag',), ('Haarlem',), ('Haarlemmermeer',), ('Habarovsk',), ('Hagen',), ('Halle/Saale',), ('Hamburg',), ('Hamm',), ('Hannover',), ('Harkova [Harkiv]',), ('Heerlen',), ('Heidelberg',), ('Heilbronn',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Herakleion',), ('Herne',), ('Herson',), ('Hildesheim',), ('Himki',), ('Hmelnytskyi',), ('Hradec Králové',), ('Huelva',), ('Iasi',), ('Ingolstadt',), ('Innsbruck',), ('Irkutsk',), ('Iserlohn',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Izevsk',), ('Izmajil',), ('Jakutsk',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jaén',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelets',), ('Jena',), ('Jenakijeve',), ('Jerez de la Frontera',), ('Jessentuki',), ('Jevpatorija',), ('Joškar-Ola',), ('Juzno-Sahalinsk',), ('Jönköping',), ('Kaiserslautern',), ('Kaliningrad',), ('Kalisz',), ('Kallithea',), ('Kaluga',), ('Kamensk-Uralski',), ('Kamjanets-Podilskyi',), ('Kamyšin',), ('Kansk',), ('Karlsruhe',), ('Kassel',), ('Katowice',), ('Kaunas',), ('Kazan',), ('Kecskemét',), ('Kemerovo',), ('Kertš',), ('Kiel',), ('Kielce',), ('Kinešma',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kiseljovsk',), ('Kislovodsk',), ('Klagenfurt',), ('Klaipeda',), ('Klin',), ('Koblenz',), ('Kolomna',), ('Kolpino',), ('Komsomolsk-na-Amure',), ('Konotop',), ('Korolev',), ('Kostjantynivka',), ('Kostroma',), ('Koszalin',), ('Kovrov',), ('Košice',), ('Kragujevac',), ('Kraków',), ('Kramatorsk',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krefeld',), ('Krementšuk',), ('Kryvyi Rig',), ('Kurgan',), ('Kursk',), ('Kuznetsk',), ('Kyiv',), ('Kyzyl',), ('Köln',), ('København',), ('La Spezia',), ('Lahti',), ('Larisa',), ('Las Palmas de Gran Canaria',), ('Latina',), ('Lausanne',), ('Le Havre',), ('Le Mans',), ('Lecce',), ('Leganés',), ('Legnica',), ('Leiden',), ('Leipzig',), ('Leninsk-Kuznetski',), ('Leverkusen',), ('León',), ('Liberec',), ('Lida',), ('Liepaja',), ('Lille',), ('Limoges',), ('Linköping',), ('Linz',), ('Lipetsk',), ('Lisboa',), ('Livorno',), ('Liège',), ('Ljubertsy',), ('Ljubljana',), ('Lleida (Lérida)',), ('Logroño',), ('Longyearbyen',), ('Lublin',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lund',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Lviv',), ('Lyon',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('Lódz',), ('Lübeck',), ('Lünen',), ('Maastricht',), ('Madrid',), ('Magadan',), ('Magdeburg',), ('Magnitogorsk',), ('Mahatškala',), ('Maikop',), ('Mainz',), ('Makijivka',), ('Malmö',), ('Mannheim',), ('Marbella',), ('Maribor',), ('Mariupol',), ('Marl',), ('Marseille',), ('Mataró',), ('Melitopol',), ('Messina',), ('Metz',), ('Mezduretšensk',), ('Miass',), ('Milano',), ('Minsk',), ('Miskolc',), ('Mitšurinsk',), ('Modena',), ('Moers',), ('Mogiljov',), ('Molodetšno',), ('Monaco-Ville',), ('Mons',), ('Monte-Carlo',), ('Montpellier',), ('Montreuil',), ('Monza',), ('Moscow',), ('Mozyr',), ('Mukatševe',), ('Mulhouse',), ('Munich [München]',), ('Murcia',), ('Murmansk',), ('Murom',), ('Mykolajiv',), ('Mytištši',), ('Málaga',), ('Móstoles',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Münster',), ('Nabereznyje Tšelny',), ('Nahodka',), ('Naltšik',), ('Namur',), ('Nancy',), ('Nantes',), ('Napoli',), ('Neftejugansk',), ('Neftekamsk',), ('Neuss',), ('Nevinnomyssk',), ('Nice',), ('Nijmegen',), ('Nikopol',), ('Niznekamsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Niš',), ('Noginsk',), ('Nojabrsk',), ('Norilsk',), ('Norrköping',), ('Novara',), ('Novi Sad',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novouralsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Nyiregyháza',), ('Nîmes',), ('Nürnberg',), ('Oberhausen',), ('Obninsk',), ('Odense',), ('Odesa',), ('Odintsovo',), ('Offenbach am Main',), ('Oktjabrski',), ('Oldenburg',), ('Oleksandrija',), ('Olomouc',), ('Olsztyn',), ('Omsk',), ('Opole',), ('Oradea',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orjol',), ('Orléans',), ('Orsk',), ('Orša',), ('Osijek',), ('Oslo',), ('Osnabrück',), ('Ostrava',), ('Oulu',), ('Ourense (Orense)',), ('Oviedo',), ('Paderborn',), ('Padova',), ('Palermo',), ('Palma de Mallorca',), ('Pamplona [Iruña]',), ('Panevezys',), ('Pardubice',), ('Paris',), ('Parma',), ('Patras',), ('Pavlograd',), ('Penza',), ('Peristerion',), ('Perm',), ('Perpignan',), ('Perugia',), ('Pervouralsk',), ('Pesaro',), ('Pescara',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Pforzheim',), ('Piacenza',), ('Piatra Neamt',), ('Pihkova',), ('Pinsk',), ('Pireus',), ('Pisa',), ('Pitesti',), ('Pjatigorsk',), ('Pleven',), ('Plock',), ('Ploiesti',), ('Plovdiv',), ('Plzen',), ('Podgorica',), ('Podolsk',), ('Porto',), ('Potsdam',), ('Poznan',), ('Praha',), ('Prato',), ('Prešov',), ('Prizren',), ('Priština',), ('Prokopjevsk',), ('Pultava [Poltava]',), ('Puškin',), ('Pécs',), ('Radom',), ('Ratingen',), ('Ravenna',), ('Recklinghausen',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reims',), ('Remscheid',), ('Rennes',), ('Resita',), ('Reutlingen',), ('Reykjavík',), ('Riga',), ('Rijeka',), ('Rimini',), ('Rivne',), ('Rjazan',), ('Roma',), ('Rostock',), ('Rostov-na-Donu',), ('Rotterdam',), ('Roubaix',), ('Rouen',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruse',), ('Rybinsk',), ('Rybnik',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Saarbrücken',), ('Sabadell',), ('Salamanca',), ('Salavat',), ('Salerno',), ('Salzburg',), ('Salzgitter',), ('Samara',), ('San Marino',), ('Santa Coloma de Gramenet',), ('Santa Cruz de Tenerife',), ('Santander',), ('Santiago de Compostela',), ('Sarajevo',), ('Saransk',), ('Sarapul',), ('Saratov',), ('Sassari',), ('Satu Mare',), ('Schaan',), ('Schaerbeek',), ('Schwerin',), ('Sergijev Posad',), ('Serov',), ('Serpuhov',), ('Serravalle',), ('Sevastopol',), ('Severodvinsk',), ('Seversk',), ('Sevilla',), ('Sibiu',), ('Siegen',), ('Simferopol',), ('Sjeverodonetsk',), ('Skopje',), ('Sliven',), ('Slovjansk',), ('Slupsk',), ('Smolensk',), ('Sofija',), ('Soligorsk',), ('Solikamsk',), ('Solingen',), ('Sosnowiec',), ('Sotši',), ('Split',), ('St Petersburg',), ('St-Étienne',), ('Stahanov',), ('Stara Zagora',), ('Staryi Oskol',), ('Stavanger',), ('Stavropol',), ('Sterlitamak',), ('Stockholm',), ('Strasbourg',), ('Stuttgart',), ('Subotica',), ('Suceava',), ('Sumy',), ('Sundsvall',), ('Surgut',), ('Syktyvkar',), ('Syrakusa',), ('Syzran',), ('Szczecin',), ('Szeged',), ('Székesfehérvár',), ('Taganrog',), ('Tallinn',), ('Tambov',), ('Tampere',), ('Taranto',), ('Tarnów',), ('Tarragona',), ('Tartu',), ('Terni',), ('Ternopil',), ('Terrassa',), ('Thessaloniki',), ('Tilburg',), ('Timisoara',), ('Tirana',), ('Tiraspol',), ('Tjumen',), ('Tobolsk',), ('Toljatti',), ('Tomsk',), ('Torino',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torun',), ('Toulon',), ('Toulouse',), ('Tourcoing',), ('Tours',), ('Trento',), ('Trier',), ('Trieste',), ('Trondheim',), ('Tula',), ('Tulcea',), ('Turku [Åbo]',), ('Tver',), ('Tychy',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Mures',), ('Tórshavn',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšita',), ('Udine',), ('Ufa',), ('Uhta',), ('Ulan-Ude',), ('Uljanovsk',), ('Ulm',), ('Uman',), ('Umeå',), ('Uppsala',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Uzgorod',), ('Vaduz',), ('Valencia',), ('Valladolid',), ('Vantaa',), ('Varna',), ('Velbert',), ('Veliki Novgorod',), ('Velikije Luki',), ('Venezia',), ('Verona',), ('Vicenza',), ('Vigo',), ('Villeurbanne',), ('Vilnius',), ('Vinnytsja',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vladikavkaz',), ('Vladimir',), ('Vladivostok',), ('Volgodonsk',), ('Volgograd',), ('Vologda',), ('Volzski',), ('Vorkuta',), ('Voronez',), ('Votkinsk',), ('Västerås',), ('Walbrzych',), ('Warszawa',), ('Wien',), ('Wiesbaden',), ('Witten',), ('Wloclawek',), ('Wolfsburg',), ('Wroclaw',), ('Wuppertal',), ('Würzburg',), ('Zaanstad',), ('Zabrze',), ('Zagreb',), ('Zaporizzja',), ('Zaragoza',), ('Zelenodolsk',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zenica',), ('Zielona Góra',), ('Zlatoust',), ('Zoetermeer',), ('Zukovski',), ('Zwickau',), ('Zwolle',), ('Zytomyr',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('´s-Hertogenbosch',), ('Århus',), ('Örebro',), ('Ústí nad Labem',), ('Šahty',), ('Šiauliai',), ('Šostka',), ('Štšolkovo',), ('Šumen',)] != [('Aalborg',), ('Bergen',), ('Bærum',), ('Frederiksberg',), ('København',), ('Monaco-Ville',), ('Monte-Carlo',), ('Odense',), ('Oslo',), ('Reykjavík',), ('Stavanger',), ('Trondheim',), ('Århus',)]",False
spider_data/database/world_1/world_1.sqlite,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.IsOfficial = 'T' AND T3.Language = 'Chinese',"Not match: [] != [('Acheng',), ('Amoy [Xiamen]',), ('Anda',), ('Ankang',), ('Anqing',), ('Anshan',), ('Anshun',), ('Anyang',), ('Aqsu',), ('Baicheng',), ('Baiyin',), ('Baoding',), ('Baoji',), ('Baotou',), ('Beihai',), ('Beipiao',), ('Bei´an',), ('Bengbu',), ('Benxi',), ('Binzhou',), ('Bose',), ('Bozhou',), ('Cangzhou',), ('Changchun',), ('Changde',), ('Changji',), ('Changsha',), ('Changshu',), ('Changzhi',), ('Changzhou',), ('Chaohu',), ('Chaoyang',), ('Chaozhou',), ('Chengde',), ('Chengdu',), ('Chenzhou',), ('Chifeng',), ('Chongqing',), ('Chuzhou',), ('Cixi',), ('Dali',), ('Dalian',), ('Dandong',), ('Danjiangkou',), ('Danyang',), ('Daqing',), ('Datong',), ('Daxian',), ('Da´an',), ('Deyang',), ('Dezhou',), ('Dongtai',), ('Dongwan',), ('Dongying',), ('Dujiangyan',), ('Dunhua',), ('Duyun',), ('Emeishan',), ('Enshi',), ('Ezhou',), ('Fengcheng',), ('Foshan',), ('Fujin',), ('Fuling',), ('Fuqing',), ('Fushun',), ('Fuxin',), ('Fuyang',), ('Fuyu',), ('Fuzhou',), ('Fu´an',), ('Ganzhou',), ('Gejiu',), ('Ghulja',), ('Gongziling',), ('Guangshui',), ('Guangyuan',), ('Guigang',), ('Guilin',), ('Guiyang',), ('Haicheng',), ('Haikou',), ('Hailar',), ('Hailun',), ('Haining',), ('Hami',), ('Handan',), ('Hangzhou',), ('Hanzhong',), ('Harbin',), ('Hebi',), ('Hefei',), ('Hegang',), ('Hengshui',), ('Hengyang',), ('Heyuan',), ('Heze',), ('Hohhot',), ('Honghu',), ('Hongjiang',), ('Huadian',), ('Huaibei',), ('Huaihua',), ('Huainan',), ('Huaiyin',), ('Huai´an',), ('Huangshan',), ('Huangshi',), ('Huangyan',), ('Huaying',), ('Huizhou',), ('Hunjiang',), ('Huzhou',), ('Jiamusi',), ('Jiangmen',), ('Jiangyin',), ('Jiangyou',), ('Jiaohe',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaxing',), ('Jieyang',), ('Jilin',), ('Jinan',), ('Jinchang',), ('Jincheng',), ('Jingdezhen',), ('Jinhua',), ('Jining',), ('Jinmen',), ('Jinxi',), ('Jinzhou',), ('Jiujiang',), ('Jiutai',), ('Jixi',), ('Ji´an',), ('Junan',), ('Kaifeng',), ('Kaili',), ('Kaiyuan',), ('Kanton [Guangzhou]',), ('Korla',), ('Kunming',), ('Kunshan',), ('Kuytun',), ('Laiwu',), ('Laiyang',), ('Laizhou',), ('Langfang',), ('Lanzhou',), ('Laohekou',), ('Leiyang',), ('Lengshuijiang',), ('Leshan',), ('Lhasa',), ('Liangcheng',), ('Lianyuan',), ('Lianyungang',), ('Liaocheng',), ('Liaoyang',), ('Liaoyuan',), ('Liling',), ('Linchuan',), ('Linfen',), ('Linhai',), ('Linhe',), ('Linqing',), ('Linyi',), ('Liupanshui',), ('Liuzhou',), ('Liu´an',), ('Liyang',), ('Longjing',), ('Longkou',), ('Longyan',), ('Loudi',), ('Luohe',), ('Luoyang',), ('Luzhou',), ('Manzhouli',), ('Maoming',), ('Ma´anshan',), ('Meihekou',), ('Meixian',), ('Mianyang',), ('Mishan',), ('Mudanjiang',), ('Nanchang',), ('Nanchong',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanping',), ('Nantong',), ('Nanyang',), ('Neijiang',), ('Ningbo',), ('Panjin',), ('Panzhihua',), ('Peking',), ('Pingdingshan',), ('Pingdu',), ('Pingliang',), ('Pingxiang',), ('Pingyi',), ('Puqi',), ('Putian',), ('Puyang',), ('Qaramay',), ('Qashqar',), ('Qianjiang',), ('Qidong',), ('Qingdao',), ('Qingyuan',), ('Qingzhou',), ('Qinhuangdao',), ('Qinzhou',), ('Qiqihar',), ('Qitaihe',), ('Quanzhou',), ('Qujing',), ('Quzhou',), ('Renqiu',), ('Rizhao',), ('Rui´an',), ('Sanmenxia',), ('Sanming',), ('Sanya',), ('Shanghai',), ('Shangqiu',), ('Shangrao',), ('Shangzi',), ('Shantou',), ('Shanwei',), ('Shaoguan',), ('Shaowu',), ('Shaoxing',), ('Shaoyang',), ('Shashi',), ('Shenyang',), ('Shenzhen',), ('Shihezi',), ('Shijiazhuang',), ('Shishou',), ('Shiyan',), ('Shizuishan',), ('Shuangcheng',), ('Shuangyashan',), ('Singapore',), ('Siping',), ('Suihua',), ('Suining',), ('Suizhou',), ('Suqian',), ('Suzhou',), ('Taiyuan',), ('Taizhou',), ('Tai´an',), ('Tangshan',), ('Taonan',), ('Tengzhou',), ('Tianjin',), ('Tianmen',), ('Tianshui',), ('Tiefa',), ('Tieli',), ('Tieling',), ('Tong Xian',), ('Tongchuan',), ('Tonghua',), ('Tongliao',), ('Tongling',), ('Tumen',), ('Ulanhot',), ('Urumtši [Ürümqi]',), ('Wafangdian',), ('Wanxian',), ('Weifang',), ('Weihai',), ('Weinan',), ('Wendeng',), ('Wenzhou',), ('Wuhai',), ('Wuhan',), ('Wuhu',), ('Wuwei',), ('Wuxi',), ('Wuzhou',), ('Xiangfan',), ('Xiangtan',), ('Xianning',), ('Xiantao',), ('Xianyang',), ('Xiaogan',), ('Xiaoshan',), ('Xichang',), ('Xilin Hot',), ('Xingcheng',), ('Xinghua',), ('Xingtai',), ('Xining',), ('Xintai',), ('Xinxiang',), ('Xinyang',), ('Xinyu',), ('Xinzhou',), ('Xi´an',), ('Xuangzhou',), ('Xuchang',), ('Xuzhou',), ('Yakeshi',), ('Yancheng',), ('Yangjiang',), ('Yangquan',), ('Yangzhou',), ('Yanji',), ('Yantai',), ('Yan´an',), ('Ya´an',), ('Yibin',), ('Yichang',), ('Yichun',), ('Yinchuan',), ('Yingkou',), ('Yixing',), ('Yiyang',), ('Yizheng',), ('Yong´an',), ('Yuanjiang',), ('Yuci',), ('Yueyang',), ('Yulin',), ('Yumen',), ('Yuncheng',), ('Yushu',), ('Yuyao',), ('Yuzhou',), ('Zalantun',), ('Zaoyang',), ('Zaozhuang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangzhou',), ('Zhaodong',), ('Zhaoqing',), ('Zhengzhou',), ('Zhenjiang',), ('Zhongshan',), ('Zhoukou',), ('Zhoushan',), ('Zhucheng',), ('Zhuhai',), ('Zhumadian',), ('Zhuzhou',), ('Zibo',), ('Zigong',), ('Zixing',), ('Zunyi',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = ""Asia"" AND T3.IsOfficial = ""T"" AND T3.Language = ""Chinese""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Population , Name , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","Not match: [('Russian Federation', '146934000', 'Vladimir Putin')] != [('146934000', 'Russian Federation', 'Vladimir Putin')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name , COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name , COUNT(*) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = ""80000""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = ""80000""",,True
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,,True
spider_data/database/world_1/world_1.sqlite,select name from city where population between 160000 and 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode",,True
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT CountryCode , LANGUAGE FROM countrylanguage WHERE Percentage = (SELECT max(Percentage) FROM countrylanguage AS T2 WHERE T1.CountryCode = T2.CountryCode)",OperationalError('no such column: T1.CountryCode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT COUNT(*) FROM (SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""Spanish"" ORDER BY Percentage DESC LIMIT 1)","Not match: [('1', '0.4'), ('1', '0.6'), ('1', '0.7'), ('1', '100.0'), ('1', '100.0'), ('1', '13.3'), ('1', '31.6'), ('1', '44.6'), ('1', '51.3'), ('1', '55.1'), ('1', '64.7'), ('1', '7.4'), ('1', '7.5'), ('1', '74.4'), ('1', '76.8'), ('1', '79.8'), ('1', '87.7'), ('1', '89.7'), ('1', '92.1'), ('1', '93.0'), ('1', '95.7'), ('1', '96.8'), ('1', '96.9'), ('1', '97.2'), ('1', '97.5'), ('1', '97.6'), ('1', '98.0'), ('1', '99.0')] != [('1',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT COUNT(*) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" AND Percentage = ( SELECT MAX(Percentage) FROM countrylanguage AS T2 WHERE T1.CountryCode = T2.CountryCode )",OperationalError('no such column: T1.CountryCode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""Spanish"" ORDER BY Percentage DESC LIMIT 1","Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('CUB',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""Spanish"" AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE CountryCode = ""ABW"" AND LANGUAGE = ""Spanish"")","Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('ABW',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT Nationality) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT Nationality) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""",SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM Highschooler",,True
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM Highschooler",,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10,,True
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","SELECT ID FROM Highschooler WHERE name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","SELECT ID FROM Highschooler WHERE name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,,True
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.id WHERE T1.student_id = (SELECT id FROM Highschooler WHERE name = ""Kyle"")",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.id JOIN Highschooler AS T3 ON T1.student_id = T3.id WHERE T3.name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,,True
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,,True
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,,True
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id","Not match: [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '1'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')] != [('Alexis', '1'), ('Cassandra', '2'), ('Gabriel', '1'), ('Haley', '1'), ('Jessica', '1'), ('Jordan', '1'), ('Kris', '2'), ('Kyle', '1')]",False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id","Not match: [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '1'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')] != [('Alexis', '1'), ('Cassandra', '2'), ('Gabriel', '1'), ('Haley', '1'), ('Jessica', '1'), ('Jordan', '1'), ('Kris', '2'), ('Kyle', '1')]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1,"Not match: [('John',)] != [('Cassandra',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1,"Not match: [('John',)] != [('Cassandra',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) >= 2,"Not match: [] != [('Cassandra',), ('Kris',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) >= 2,"Not match: [] != [('Cassandra',), ('Kris',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),,True
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),,True
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend),,True
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 1000 ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.owner_id HAVING sum(cost_of_treatment) > 1000 ),"Not match: [('Bessie',), ('Betty',), ('George',), ('Hipolito',), ('Holden',), ('Houston',), ('Jeffrey',), ('Jesus',), ('Kacey',), ('Mavis',), ('Merritt',), ('Narciso',)] != [('Bessie',), ('Betty',), ('Hipolito',), ('Holden',), ('Jeffrey',), ('Jesus',), ('Mavis',), ('Merritt',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(T1.owner_id) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(T1.owner_id) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","Not match: [('14', 'Funk')] != [('3', 'Stoltenberg')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT (DISTINCT T2.treatment_type_code) > 2","Not match: [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('4', '00230569697'), ('6', '139-321-7313'), ('8', '328.842.3792'), ('9', '962-983-8109x3509')] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T2.first_name , T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT DISTINCT T1.date_arrived , T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","Not match: [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')] != [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.age = ( SELECT max(age) FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state = ""Hawaii"" OR state = ""Wisconsin""",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state = ""Hawaii"" OR state = ""Wisconsin""",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(DISTINCT dog_id) FROM Treatments,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(DISTINCT dog_id) FROM Treatments,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(DISTINCT professional_id) FROM Treatments,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(DISTINCT professional_id) FROM Treatments,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role_code , street , city , state FROM Professionals WHERE city LIKE '%West%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role_code , street , city , state FROM Professionals WHERE city LIKE '%West%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = '1'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = '1'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type , charge_amount FROM Charges",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type , charge_amount FROM Charges",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT max(charge_amount) FROM Charges,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT max(charge_amount) FROM Charges,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_phone FROM professionals",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_phone FROM professionals",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT breed_code , size_code FROM dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT breed_code , size_code FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name , T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code","Not match: [('Danny', 'Vaccination'), ('Domenica', 'Take for a Walk'), ('Domenica', 'Vaccination'), ('Karley', 'Vaccination'), ('Monte', 'Physical examination'), ('Monte', 'Take for a Walk'), ('Ruben', 'Physical examination'), ('Ruben', 'Take for a Walk'), ('Sigurd', 'Physical examination'), ('Sigurd', 'Vaccination'), ('Velva', 'Take for a Walk'), ('Vernice', 'Physical examination')] != [('Danny', 'Vaccination'), ('Domenica', 'Take for a Walk'), ('Domenica', 'Vaccination'), ('Karley', 'Vaccination'), ('Karley', 'Vaccination'), ('Monte', 'Physical examination'), ('Monte', 'Take for a Walk'), ('Monte', 'Take for a Walk'), ('Ruben', 'Physical examination'), ('Ruben', 'Take for a Walk'), ('Sigurd', 'Physical examination'), ('Sigurd', 'Vaccination'), ('Velva', 'Take for a Walk'), ('Vernice', 'Physical examination'), ('Vernice', 'Physical examination')]",False
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T1.Title , T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT count(*) FROM Other_Available_Features,SELECT count(*) FROM Other_Available_Features,,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon',,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code,,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT property_name FROM Properties WHERE property_type_code = ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code = ""Apartment"" AND room_count > 1",,True
