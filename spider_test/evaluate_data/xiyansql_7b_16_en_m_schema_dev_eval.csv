db_path,solution,answer,error,is_match
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name , country , age FROM singer ORDER BY age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name , country , age FROM singer ORDER BY age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = ""France""",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = ""France""",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T2.Song_name , T2.Song_release_year FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_ID = T2.singer_ID ORDER BY T2.Age LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T2.Song_name , T2.Song_release_year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID ORDER BY T1.Age LIMIT 1",OperationalError('no such table: song'),False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT country FROM singer WHERE age > 20,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT country FROM singer WHERE age > 20,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT song_name FROM singer WHERE age > ( SELECT avg(age) FROM singer ),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select max(capacity), average from stadium","SELECT max(capacity) , avg(average) FROM stadium","Not match: [('52500', '730')] != [('52500', '917.8888888888889')]",False
spider_data/database/concert_singer/concert_singer.sqlite,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(capacity) , max(capacity) FROM stadium",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T1.name , count(*) FROM stadiumpark AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",OperationalError('no such table: stadiumpark'),False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT stadium_id , count(*) AS number_of_concerts FROM concert GROUP BY stadium_id ;","Not match: [('Balmoor', '1'), ('Glebe Park', '1'), ('Recreation Park', '1'), ('Somerset Park', '2'), (""Stark's Park"", '1')] != [('1', '1'), ('10', '1'), ('2', '2'), ('7', '1'), ('9', '1')]",False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.name , T1.capacity FROM stadiumpage AS T1 INNER JOIN concertpage AS T2 ON T1.officialname = T2.stadium WHERE T2.year >= 2014 GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",OperationalError('no such table: stadiumpage'),False
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T1.name , T1.capacity FROM stadiu AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year > 2013 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",OperationalError('no such table: stadiu'),False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT country FROM singer WHERE age > 40 INTERSECT SELECT country FROM singer WHERE age < 30,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_name , T1.theme , COUNT(T2.singer_id) FROM main.concert AS T1 LEFT JOIN main.singer_of AS T2 ON T1.concert_id = T2.concert_id GROUP BY T1.concert_id",OperationalError('no such table: main.singer_of'),False
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.cert_name , T1.theme , COUNT(T2.singer_id) FROM main.cert AS T1 LEFT JOIN main.singer_cert AS T2 ON T1.cert_id = T2.cert_id GROUP BY T1.cert_name , T1.theme",OperationalError('no such table: main.cert'),False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) AS NumberOfConcerts FROM main.singer AS T1 INNER JOIN main.singer_in_concert AS T2 ON T1.SingerID = T2.SingerID GROUP BY T1.Name",OperationalError('no such column: T1.SingerID'),False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) AS NumberOfConcerts FROM main.singer AS T1 INNER JOIN main.singer_in_concert AS T2 ON T1.SingerID = T2.SingerID GROUP BY T1.Name",OperationalError('no such column: T1.SingerID'),False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN concert AS T2 ON T1.SingerID = T2.SingerID WHERE T2.Year = 2014,OperationalError('no such column: T1.SingerID'),False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT s.Name FROM singer s JOIN concert c ON s.SingerID = c.SingerID WHERE c.Year = 2014;,OperationalError('no such column: s.SingerID'),False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T1.name , T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014 INTERSECT SELECT T1.name , T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2015",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT s.name, s.location FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year IN (2014, 2015) GROUP BY s.stadium_id HAVING COUNT(DISTINCT c.year) = 2;",,True
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT COUNT(*) AS NumberOfConcerts FROM main.stadium AS T1 INNER JOIN main.singer_in_concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.capacity = ( SELECT MAX(capacity) FROM main.stadium ),OperationalError('no such column: T2.stadium_id'),False
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM main.stadium AS T1 JOIN main.concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.capacity = (SELECT max(capacity) FROM main.stadium),,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM pets WHERE weight > 10,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM pets WHERE weight > 10,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pet_type FROM pets GROUP BY pet_type",OperationalError('no such column: pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID = T2.StuID JOIN pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID = T2.StuID JOIN pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid = T2.petid WHERE pettype = 'cat')",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid = T2.petid WHERE pettype = 'cat')",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT studentID FROM student EXCEPT SELECT T1.studentID FROM student AS T1 JOIN has_pet AS T2 ON T1.studentID = T2.studentID WHERE T2.petID IN (SELECT petID FROM pets WHERE petType = 'cat'),OperationalError('no such column: T1.studentID'),False
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"SELECT studentID FROM student EXCEPT SELECT T1.studentID FROM student AS T1 JOIN has_pet AS T2 ON T1.studentID = T2.studentID JOIN pets AS T3 ON T3.petID = T2.petID WHERE T3.pettype = ""cat""",OperationalError('no such column: T1.studentID'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.name , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' EXCEPT SELECT T1.name , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",OperationalError('no such column: T1.name'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' EXCEPT SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat',"Not match: [('Tracy', '19'), ('Tracy', '19')] != [('Tracy',)]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT petid , weight FROM pets WHERE pet_age > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT petid , weight FROM pets WHERE pet_age > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT pet_type , avg(pet_age) , max(pet_age) FROM pets GROUP BY pet_type",OperationalError('no such column: pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT pet_type , avg(weight) FROM pets GROUP BY pet_type",OperationalError('no such column: pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT pet_type , avg(weight) FROM pets GROUP BY pet_type",OperationalError('no such column: pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID = T2.StuID",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID = T2.StuID",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.lname = 'Smith',,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.lname = 'Smith',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT T1.StuID , count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID","Not match: [('1', '1001'), ('2', '1002')] != [('1001', '1'), ('1002', '2')]",False
spider_data/database/pets_1/pets_1.sqlite,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT T1.StuID , count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID","Not match: [('1', '1001'), ('2', '1002')] != [('1001', '1'), ('1002', '2')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.name , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1",OperationalError('no such column: T1.name'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname , T1.Sex FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING count(*) > 1",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T1.LName FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' AND T3.pet_age = 3,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T1.LName FROM student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_type = 'cat' AND T3.pet_age = 3,OperationalError('no such column: T3.pet_type'),False
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(DISTINCT continent) FROM CONTINENTS,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM CONTINENTS,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT c.ContinentId, c.ContinentName, COUNT(co.CountryId) AS NumberOfCountries FROM Continents c JOIN Countries co ON c.ContinentId = co.ContinentId GROUP BY c.ContinentId, c.ContinentName;",OperationalError('no such column: c.ContinentId'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT c.ContinentID, c.Name, COUNT(ct.CountryID) AS CountryCount FROM Continents c LEFT JOIN Countries ct ON c.ContinentID = ct.ContinentID GROUP BY c.ContinentID, c.Name ORDER BY c.ContinentID;",OperationalError('no such column: c.ContinentID'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM COUNTRIES,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM COUNTRIES,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FULL_NAME , T1.Make_id , COUNT(*) AS num FROM main.car_names AS T1 JOIN main.model_list AS T2 ON T1.Make_id = T2.Make_id GROUP BY T1.Make_id ;",OperationalError('no such column: T1.FULL_NAME'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.id , T1.FULL_NAME , COUNT(*) AS MODEL_COUNT FROM main.car_makers AS T1 JOIN main.model_list AS T2 ON T1.id = T2.Make GROUP BY T1.id ;",OperationalError('no such column: T1.FULL_NAME'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM main.car_names ORDER BY Horsepower ASC LIMIT 1;,OperationalError('no such column: Horsepower'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM CAR_NAMES ORDER BY Horsepower ASC LIMIT 1;,OperationalError('no such column: Horsepower'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.model FROM CAR_NAMES AS T1 INNER JOIN CAR_DATA AS T2 ON T1.id = T2.id WHERE T2.weight < ( SELECT avg(weight) FROM CAR_DATA ),OperationalError('no such table: CAR_DATA'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.model FROM CAR_NAMES AS T1 INNER JOIN CAR_DATA AS T2 ON T1.id = T2.id WHERE T2.weight < ( SELECT avg(weight) FROM CAR_DATA ),OperationalError('no such table: CAR_DATA'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.FULL_NAME FROM CAR_MAKE AS T1 INNER JOIN CAR_MODELS AS T2 ON T1.Make_ID = T2.Make_ID INNER JOIN CAR_DATA AS T3 ON T2.Model_ID = T3.Model WHERE T3.Year = 1970,OperationalError('no such table: CAR_MAKE'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Make FROM CAR_MAKERS AS T1 INNER JOIN CARS_DATA AS T2 ON T1.Make_ID = T2.Make WHERE T2.Year = 1970,OperationalError('no such column: T1.Make'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM CAR_NAMES AS T1 INNER JOIN CAR_DATA AS T2 ON T1.ID = T2.ID ORDER BY T2.Year ASC LIMIT 1",OperationalError('no such table: CAR_DATA'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make, T2.Year FROM CAR_NAMES AS T1 INNER JOIN CAR_DATA AS T2 ON T1.Id = T2.Id ORDER BY T2.Year ASC LIMIT 1",OperationalError('no such table: CAR_DATA'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_id WHERE T1.year > 1980,OperationalError('no such column: T1.model'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T2.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_name WHERE T1.year > 1980,OperationalError('no such column: T2.car_name'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(*) AS Car_Maker_Count FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.Continent_ID = T2.Continent_ID JOIN CAR_MAKERS AS T3 ON T2.Country_ID = T3.Country_ID GROUP BY T1.Continent",OperationalError('no such column: T1.Continent_ID'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(*) AS NumberOfCarMakers FROM Car_Makers AS T1 INNER JOIN Countries AS T2 ON T1.Country = T2.Country_ID GROUP BY T1.Continent",OperationalError('no such column: T1.Continent'),False
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T1.Country FROM Car_Makers AS T1 JOIN Countries AS T2 ON T1.Country = T2.Country_ID GROUP BY T1.Country ORDER BY COUNT(*) DESC LIMIT 1;,OperationalError('no such column: T2.Country_ID'),False
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,"SELECT T1.Country, COUNT(T2.Make) AS NumberOfCarMakers FROM main.countries AS T1 JOIN main.car_makers AS T2 ON T1.CountryID = T2.Country GROUP BY T1.Country ORDER BY NumberOfCarMakers DESC LIMIT 1;",OperationalError('no such column: T1.Country'),False
spider_data/database/car_1/car_1.sqlite,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT COUNT(T1.Model) AS ModelCount, T2.FullName FROM CAR_MODELS AS T1 INNER JOIN CAR_MAKERS AS T2 ON T1.Make = T2.Make GROUP BY T2.FullName",OperationalError('no such table: CAR_MODELS'),False
spider_data/database/car_1/car_1.sqlite,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT T1.Make , COUNT(*) AS NumberOfModels , T2.MakeID , T2.FullName FROM CAR_MODELS AS T1 INNER JOIN CAR_MAKERS AS T2 ON T1.Make = T2.Make GROUP BY T1.Make , T2.MakeID , T2.FullName",OperationalError('no such table: CAR_MODELS'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT accelerate FROM cars_data WHERE Make = 'amc' AND Model = 'hornet sportabout';,OperationalError('no such column: Make'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT accelerate FROM cars_data WHERE make = 'amc' AND model = 'hornet sportabout';,OperationalError('no such column: make'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) AS NumberOfCarMakers FROM main.countries c JOIN main.contents co ON c.country_id = co.continent WHERE c.country_name = 'france' AND co.content = 'america';,OperationalError('no such table: main.contents'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(DISTINCT T1.Make) AS NumberOfMakers FROM CAR_NAMES AS T1 INNER JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryID WHERE T2.CountryName = 'France',OperationalError('no such column: T1.Country'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) AS NumberOfModels FROM main.cars_data cd JOIN main.car_names cn ON cd.id = cn.id JOIN main.countries c ON cn.country = c.CountryId WHERE c.CountryName = 'USA';,OperationalError('no such column: cn.id'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) AS model_count FROM main.cars_data cd JOIN main.car_names cn ON cd.id = cn.id JOIN main.car_makers cm ON cn.make_id = cm.make_id JOIN main.countries c ON cm.country_id = c.country_id WHERE c.country_name = 'USA';,OperationalError('no such column: c.country_name'),False
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM cars_data WHERE Cylinders = 4,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM cars_data WHERE Cylinders = 4,,True
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Yea = 1974,OperationalError('no such column: Yea'),False
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Yea = 1974,OperationalError('no such column: Yea'),False
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT DISTINCT T1.Maker , T1.Model FROM CAR_MAKERS AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId",OperationalError('no such column: T1.Model'),False
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT T1.Maker , T2.Model FROM CAR_MAKERS AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId","Not match: [('1', 'amc'), ('10', 'hi'), ('11', 'honda'), ('12', 'mazda'), ('13', 'mercedes'), ('13', 'mercedes-benz'), ('14', 'opel'), ('15', 'peugeot'), ('16', 'renault'), ('17', 'saab'), ('18', 'subaru'), ('19', 'scion'), ('19', 'toyota'), ('2', 'audi'), ('2', 'volkswagen'), ('20', 'triumph'), ('21', 'volvo'), ('22', 'kia'), ('23', 'hyundai'), ('3', 'bmw'), ('4', 'buick'), ('4', 'cadillac'), ('4', 'chevrolet'), ('4', 'oldsmobile'), ('4', 'pontiac'), ('5', 'capri'), ('5', 'ford'), ('5', 'mercury'), ('6', 'chrysler'), ('6', 'dodge'), ('6', 'jeep'), ('6', 'plymouth'), ('7', 'citroen'), ('8', 'datsun'), ('8', 'nissan'), ('9', 'fiat')] != [('amc', 'chevrolet'), ('bmw', 'plymouth'), ('chrysler', 'ford'), ('citroen', 'chevrolet'), ('daimler benz', 'ford'), ('fiat', 'pontiac'), ('ford', 'ford'), ('gm', 'amc'), ('honda', 'citroen'), ('hyundai', 'amc'), ('kia', 'plymouth'), ('mazda', 'chevrolet'), ('nissan', 'plymouth'), ('opel', 'plymouth'), ('peugeaut', 'amc'), ('renault', 'dodge'), ('saab', 'plymouth'), ('subaru', 'ford'), ('toyota', 'chevrolet'), ('triumph', 'buick'), ('volkswagen', 'buick'), ('volvo', 'toyota')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.Country , T1.CountryID FROM main.countries AS T1 JOIN main.car_makers AS T2 ON T1.CountryID = T2.Country GROUP BY T1.CountryID HAVING COUNT(*) >= 1",OperationalError('no such column: T1.Country'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT DISTINCT T1.Country , T1.Country_id FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.Country_id",OperationalError('no such column: T1.Country_id'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150;,,True
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) , Yea FROM cars_data GROUP BY Yea",OperationalError('no such column: Yea'),False
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(YEAR) , avg(Weight) , YEAR FROM cars_data GROUP BY YEAR","Not match: [('2436.655172413793', '1980'), ('2453.548387096774', '1982'), ('2532.1666666666665', '1981'), ('2861.8055555555557', '1978'), ('2877.925925925926', '1974'), ('2960.344827586207', '1971'), ('2997.3571428571427', '1977'), ('3055.344827586207', '1979'), ('3078.735294117647', '1976'), ('3176.8', '1975'), ('3237.714285714286', '1972'), ('3419.025', '1973'), ('3441.3142857142857', '1970')] != [('1970.0', '3441.3142857142857', '1970'), ('1971.0', '2960.344827586207', '1971'), ('1972.0', '3237.714285714286', '1972'), ('1973.0', '3419.025', '1973'), ('1974.0', '2877.925925925926', '1974'), ('1975.0', '3176.8', '1975'), ('1976.0', '3078.735294117647', '1976'), ('1977.0', '2997.3571428571427', '1977'), ('1978.0', '2861.8055555555557', '1978'), ('1979.0', '3055.344827586207', '1979'), ('1980.0', '2436.655172413793', '1980'), ('1981.0', '2532.1666666666665', '1981'), ('1982.0', '2453.548387096774', '1982')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT c.CountryName FROM main.countries c JOIN main.car_makers cm ON c.CountryID = cm.CountryID GROUP BY c.CountryID HAVING COUNT(cm.Make) >= 3 AND c.Continent = 'Europe',OperationalError('no such column: cm.Make'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT c.CountryName FROM main.countries c JOIN main.manufacturers m ON c.CountryID = m.CountryID GROUP BY c.CountryID HAVING COUNT(m.Manufacturer) >= 3 AND c.Continent = 'Europe',OperationalError('no such table: main.manufacturers'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT MAX(horsepower) AS max_horsepower, T1.make FROM car_names AS T1 INNER JOIN engine_size AS T2 ON T1.id = T2.id WHERE T2.cylinders = 3 GROUP BY T1.make;",OperationalError('no such table: engine_size'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT MAX(horsepower) AS max_horsepower, T1.make FROM car_names AS T1 INNER JOIN engine_size AS T2 ON T1.id = T2.id WHERE T2.cylinders = 3;",OperationalError('no such table: engine_size'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT Model FROM main.car_data ORDER BY MPG DESC LIMIT 1;,OperationalError('no such table: main.car_data'),False
spider_data/database/car_1/car_1.sqlite,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT Model FROM main.car_names ORDER BY MPG DESC LIMIT 1;,OperationalError('no such column: MPG'),False
spider_data/database/car_1/car_1.sqlite,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,SELECT avg(horsepower) FROM cars_data WHERE YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,select avg(horsepower) from cars_data where year  <  1980;,SELECT avg(horsepower) FROM cars_data WHERE YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(edispl) AS average_edispl FROM main.cars_data WHERE Model = 'volvo';,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(edispl) AS average_edispl FROM main.cars_data WHERE make = 'volkswagen';,OperationalError('no such column: make'),False
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.MakeID = T2.ModelID GROUP BY T1.Model ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Make = T2.Maker AND T1.Model = T2.Model GROUP BY T1.Model ORDER BY COUNT(*) DESC LIMIT 1,"Not match: [('ford',)] != []",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(*) FROM main.car_names AS T1 INNER JOIN main.model_list AS T2 ON T1.model = T2.Model INNER JOIN main.car_makers AS T3 ON T2.Make = T3.Maker WHERE T3.Full_Name = 'American Motor Company',OperationalError('no such column: T3.Full_Name'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(*) FROM CAR_NAMES AS T1 INNER JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model INNER JOIN CAR_MAKERS AS T3 ON T2.Make = T3.Make WHERE T3.Make = 'American Motor Company',OperationalError('no such column: T3.Make'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT Full_Name , Maker FROM main.car_names AS T1 JOIN main.model_list AS T2 ON T1.Make = T2.Make WHERE T2.Model > 3",OperationalError('no such column: Full_Name'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FULL_NAME , T2.Maker FROM main.maker_list AS T1 JOIN main.model_list AS T2 ON T1.Make_ID = T2.Maker GROUP BY T2.Maker HAVING COUNT(*) > 3",OperationalError('no such table: main.maker_list'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_id INNER JOIN manufacturers AS T3 ON T2.name = T3.name WHERE (T3.FullName = 'General Motors' OR T1.weight > 3500),OperationalError('no such table: manufacturers'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_id WHERE T2.name LIKE '%general motors%' OR T1.weight > 3500,OperationalError('no such column: T1.model'),False
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight BETWEEN 3000 AND 4000;,,True
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM cars_data WHERE Weight BETWEEN 3000 AND 4000,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM main.cars_data WHERE Model = 'volvo' ORDER BY Accelerate ASC LIMIT 1;,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM main_car_data WHERE Model = 'volvo' ORDER BY Accelerate ASC LIMIT 1;,OperationalError('no such table: main_car_data'),False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT count(*) FROM CARS_DATA WHERE Accelerate > ( SELECT max(Accelerate) FROM CARS_DATA ),"Not match: [('39',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT count(*) FROM CARS_DATA WHERE Accelerate > ( SELECT max(Accelerate) FROM CARS_DATA ),"Not match: [('39',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(*) AS country_count FROM ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(DISTINCT Maker) > 2 ) AS subquery;,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(*) AS NumberOfCountries FROM ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(DISTINCT Maker) > 2 ) AS Subquery;,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6;,,True
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6;,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM main.cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1;,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM main.cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1;,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT T1.makeid , T2.Make FROM CAR_NAMES AS T1 JOIN CAR_MAKES AS T2 ON T1.Make = T2.Make WHERE T1.horsepower > ( SELECT min(horsepower) FROM CAR_NAMES ) AND T1.cylinders <= 3;",OperationalError('no such table: CAR_MAKES'),False
spider_data/database/car_1/car_1.sqlite,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT T1.MakeID, T1.Make FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.ID = T2.id WHERE T2.horsepower > ( SELECT MIN(horsepower) FROM CARS_DATA ) AND T2.cylinders < 4",OperationalError('no such column: T1.ID'),False
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(mpg) FROM cars_data WHERE cylinders = 8 OR YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(mpg) FROM cars_data WHERE cylinders = 8 OR YEAR < 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T1.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_id INNER JOIN maker AS T3 ON T2.name = T3.name WHERE T1.weight < 3500 AND T3.full_name != 'Ford Motor Company',OperationalError('no such table: maker'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT DISTINCT T1.model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.id = T2.car_id INNER JOIN model_list AS T3 ON T2.model = T3.Model WHERE T1.weight < 3500 AND T3.Make != 'Ford',OperationalError('no such column: T1.model'),False
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT country_name FROM main.countries WHERE country_id NOT IN ( SELECT country FROM main.car_makers ),OperationalError('no such column: country_name'),False
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT country_name FROM countries WHERE country_id NOT IN (SELECT country FROM car_makers),OperationalError('no such column: country_name'),False
spider_data/database/car_1/car_1.sqlite,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT make_id , full_name FROM CAR_MAKE GROUP BY make_id HAVING count(*) >= 2 INTERSECT SELECT country , full_name FROM CAR_MAKE GROUP BY country HAVING count(*) > 3",OperationalError('no such table: CAR_MAKE'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.MakeId , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.MakeId = T2.MakeId GROUP BY T1.MakeId HAVING COUNT(T2.Model) >= 2 INTERSECT SELECT T1.MakeId , T1.Maker FROM CAR_MAKERS AS T1 JOIN CAR_DATA AS T2 ON T1.MakeId = T2.MakeId GROUP BY T1.MakeId HAVING COUNT(*) > 3",OperationalError('no such table: CAR_DATA'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","SELECT T1.country_id , T1.country_name FROM main.countries AS T1 JOIN main.car_makers AS T2 ON T1.country_id = T2.country_id WHERE T2.country_id > 3 OR T2.car_model = 'fiat'",OperationalError('no such column: T1.country_id'),False
spider_data/database/car_1/car_1.sqlite,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT T1.country_id , T1.country_name FROM main.countries AS T1 JOIN main.car_makers AS T2 ON T1.country_id = T2.country_id GROUP BY T1.country_id HAVING count(*) > 3 UNION SELECT DISTINCT T1.country_id , T1.country_name FROM main.countries AS T1 JOIN main.cars_data AS T2 ON T1.country_id = T2.year JOIN main.car_names AS T3 ON T2.name = T3.name WHERE T3.model = 'fiat'",OperationalError('no such column: T1.country_id'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM Airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM Airports WHERE City = ""Anthony""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM Airports WHERE City = ""Anthony""",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM AIRLINES,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM AIRLINES,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM Airlines WHERE Country = ""USA""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM Airports WHERE AirportCode = ""AKO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM Airports WHERE AirportCode = ""AKO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","SELECT AirportName FROM airports WHERE City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","SELECT AirportName FROM airports WHERE City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE Source_Airport = ""APG""",OperationalError('no such column: Source_Airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE Source_Airport = ""APG""",OperationalError('no such column: Source_Airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM flights WHERE DestAirport = ""ATO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport WHERE T1.city = ""Aberdeen""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport WHERE T1.city = ""Aberdeen""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest WHERE T1.city = ""Aberdeen""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest WHERE T1.city = ""Aberdeen""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport WHERE T1.city = ""Aberdeen"" INTERSECT SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest_airport WHERE T1.city = ""Ashley""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport WHERE T1.city = ""Aberdeen"" INTERSECT SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest_airport WHERE T1.city = ""Ashley""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.airline = ""JetBlue Airways""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""",SELECT count(*) FROM `flight` AS T1 JOIN airlines AS T2 ON T1.airline = T2.uid WHERE T2.airline = 'United Airlines' AND T1.dest_airport = 'ASY',OperationalError('no such table: flight'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","SELECT count(*) FROM `main.flights` AS T1 JOIN `main.airlines` AS T2 ON T1.Airline = T2.uid WHERE T1.DestAirport = ""ASY"" AND T2.Airline = ""United Airlines""",OperationalError('no such table: main.flights'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT count(*) FROM `flight` AS T1 JOIN airlines AS T2 ON T1.airline = T2.uid WHERE T2.airline = 'United Airlines' AND T1.source_airport = 'AHD',OperationalError('no such table: flight'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.abbriviation = ""UA"" AND T2.Source_Airport = ""AHD""",OperationalError('no such column: T1.abbriviation'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","SELECT count(*) FROM FLIGHT AS T1 JOIN AIRPORT AS T2 ON T1.DEST = T2.Airport_ID WHERE T1.AIRLINE = ""United"" AND T2.City = ""Aberdeen""",OperationalError('no such table: FLIGHT'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","SELECT count(*) FROM Flight WHERE arrival_city = ""Aberdeen"" AND airline = ""United Airlines"";",OperationalError('no such table: Flight'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1,OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest GROUP BY T2.dest ORDER BY count(*) DESC LIMIT 1,OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1,OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.source_airport GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1,OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY COUNT(T2.FlightNo) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY COUNT(T2.FlightNo) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM Airports AS T1 JOIN Flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.airline ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.airline ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.abbrivation , T1.country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1",OperationalError('no such column: T1.abbrivation'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.abbrivation , T1.country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1",OperationalError('no such column: T1.abbrivation'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Source_Airport = ""AHD""",OperationalError('no such column: T2.Source_Airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Source_Airport = ""AHD""",OperationalError('no such column: T2.Source_Airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.airline FROM flights AS T1 WHERE T1.source_airport = ""APG"" INTERSECT SELECT T1.airline FROM flights AS T1 WHERE T1.source_airport = ""CVO""",OperationalError('no such column: T1.source_airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""APG"" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""CVO""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT T1.airline FROM flights AS T1 WHERE T1.source_airport = ""CVO"" EXCEPT SELECT T1.airline FROM flights AS T1 WHERE T1.source_airport = ""APG""",OperationalError('no such column: T1.source_airport'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT T1.airline FROM flights AS T1 INNER JOIN airports AS T2 ON T1.dest = T2.airportcode WHERE T2.airportcode = 'CVO' EXCEPT SELECT T1.airline FROM flights AS T1 INNER JOIN airports AS T2 ON T1.dest = T2.airportcode WHERE T2.airportcode = 'APG',OperationalError('no such column: T1.dest'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.airline HAVING count(*) > 10,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.airline GROUP BY T1.airline HAVING count(*) > 10,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.airline HAVING count(*) < 200,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.airline HAVING count(*) < 200,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT T2.FlightNo FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = 'United Airlines',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT T2.FlightNo FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.airline = 'United Airlines',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest WHERE T1.city = ""Aberdeen"" OR T1.city = ""Abilene""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airport_code = T2.dest WHERE T1.city = ""Aberdeen"" OR T1.city = ""Abilene""",OperationalError('no such column: T1.airport_code'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT airporename FROM airports WHERE airpcode NOT IN (SELECT sourceairp FROM flights UNION SELECT destairp FROM flights),OperationalError('no such column: airporename'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportCode FROM airports EXCEPT SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights,"Not match: [('Ada ',), ('Adak Island Ns ',), ('Ainsworth ',), ('Akhiok SPB ',), ('Akiak ',), ('Akron/canton Regional ',), ('Akutan ',), ('Alakanuk ',), ('Albany ',), ('Albany International ',), ('Albany NAS ',), ('Albert Lea ',), ('Albuquerque International ',), ('Aleknagik ',), ('Aleneva ',), ('Alexandria ',), ('Alexandria Bay ',), ('Alexandria International ',), ('Algona ',), ('Alitak SPB ',), ('Allakaket ',), ('Alliance ',), ('Alpena County Regional ',), ('Alpine ',), ('Alton ',), ('Altus AFB ',), ('Alyeska ',), ('Ambler ',), ('Amchitka ',), ('Ames ',), ('Amook ',), ('Anacortes ',), ('Anaktuvuk ',), ('Anderson ',), ('Andrews ',), ('Angel Fire ',), ('Angoon ',), ('Aniak ',), ('Anita Bay ',), ('Annette Island ',), ('Anniston Metropolitan ',), ('Anthony ',), ('Antlers ',), ('Anvik ',), ('Apple Valley ',), ('Arcata ',), ('Arctic Village ',), ('Ardmore Municipal Arpt ',), ('Artesia ',), ('Asbury Park ',), ('Ashland ',), ('Ashley ',), ('Aspen ',), ('Astoria ',), ('Athens ',), ('Colorado Plains Regional Airport ',), ('Dougherty County ',), ('Downtown ',), ('Dyess AFB ',), ('Elmendorf Afb ',), ('Esler Field ',), ('Ft Mcclellan Bus Trml ',), ('Fulton International ',), ('George Downer ',), ('Gratiot Community ',), ('Holloman AFB ',), ('International ',), ('Lee ',), ('Lenawee County ',), ('McMinn County ',), ('Merrill Field ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('Municipal ',), ('NAS ',), ('Ohio University ',), ('Orange County Steel Salvage Heliport ',), ('Outagamie County ',), ('Phillips AAF ',), ('Reilly AHP ',), ('Rick Husband Amarillo International ',), ('Rollang Field ',), ('Spb ',), ('Ted Stevens Anchorage International Airport ',), ('Thomas C Russell Fld ',), ('Tradewind ',), ('Tri-State Steuben Cty ',), ('US Army Heliport ',), ('USN Heliport ',), ('Virginia Highlands ',), ('Zahns ',)] != [(' AAF',), (' ABI',), (' ABL',), (' ABQ',), (' ABR',), (' ABY',), (' ACV',), (' ADG',), (' ADK',), (' ADM',), (' ADR',), (' ADT',), (' AED',), (' AEL',), (' AET',), (' AEX',), (' AFO',), (' AGN',), (' AHD',), (' AHF',), (' AHH',), (' AHN',), (' AHT',), (' AIA',), (' AIB',), (' AID',), (' AIK',), (' AIV',), (' AKC',), (' AKI',), (' AKK',), (' AKO',), (' AKP',), (' ALB',), (' ALE',), (' ALI',), (' ALM',), (' ALN',), (' ALS',), (' ALX',), (' ALZ',), (' AMA',), (' AMN',), (' AMW',), (' ANA',), (' ANB',), (' ANC',), (' AND',), (' ANI',), (' ANN',), (' ANP',), (' ANQ',), (' ANV',), (' ANW',), (' ANY',), (' AOS',), (' APG',), (' APN',), (' APV',), (' AQY',), (' ARB',), (' ARC',), (' ARX',), (' ASE',), (' AST',), (' ASX',), (' ASY',), (' ATE',), (' ATO',), (' ATS',), (' ATW',), (' AUK',), (' AXB',), (' AXG',), (' AXN',), (' AXS',), (' AXX',), (' AYZ',), (' CAK',), (' CVO',), (' DYS',), (' EDF',), (' ESF',), (' HMN',), (' JLH',), (' KKI',), (' KQA',), (' LTS',), (' MMI',), (' MRI',), (' NAB',), (' NDV',), (' NGZ',), (' OTS',), (' QAW',), (' RFK',), (' RLI',), (' TDW',), (' VJI',), (' WKK',), ('AAF',), ('ABI',), ('ABL',), ('ABQ',), ('ABR',), ('ABY',), ('ACV',), ('ADG',), ('ADK',), ('ADM',), ('ADR',), ('ADT',), ('AED',), ('AEL',), ('AET',), ('AEX',), ('AFO',), ('AGN',), ('AHD',), ('AHF',), ('AHH',), ('AHN',), ('AHT',), ('AIA',), ('AIB',), ('AID',), ('AIK',), ('AIV',), ('AKC',), ('AKI',), ('AKK',), ('AKO',), ('AKP',), ('ALB',), ('ALE',), ('ALI',), ('ALM',), ('ALN',), ('ALS',), ('ALX',), ('ALZ',), ('AMA',), ('AMN',), ('AMW',), ('ANA',), ('ANB',), ('ANC',), ('AND',), ('ANI',), ('ANN',), ('ANP',), ('ANQ',), ('ANV',), ('ANW',), ('ANY',), ('AOS',), ('APG',), ('APN',), ('APV',), ('AQY',), ('ARB',), ('ARC',), ('ARX',), ('ASE',), ('AST',), ('ASX',), ('ASY',), ('ATE',), ('ATO',), ('ATS',), ('ATW',), ('AUK',), ('AXB',), ('AXG',), ('AXN',), ('AXS',), ('AXX',), ('AYZ',), ('CAK',), ('CVO',), ('DYS',), ('EDF',), ('ESF',), ('HMN',), ('JLH',), ('KKI',), ('KQA',), ('LTS',), ('MMI',), ('MRI',), ('NAB',), ('NDV',), ('NGZ',), ('OTS',), ('QAW',), ('RFK',), ('RLI',), ('TDW',), ('VJI',), ('WKK',)]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT name FROM employee ORDER BY age,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT name FROM employee ORDER BY age,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT city , COUNT(*) FROM employee GROUP BY city","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT city , COUNT(*) FROM employee GROUP BY city","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , COUNT(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , COUNT(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(number_of_products) , max(number_of_products) FROM shop",OperationalError('no such column: number_of_products'),False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(number_of_products) , max(number_of_products) FROM shop",OperationalError('no such column: number_of_products'),False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > ( SELECT avg(number_products) FROM shop ),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > ( SELECT avg(number_products) FROM shop ),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id GROUP BY t2.employee_id ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_id = T2.employee_id GROUP BY T2.employee_id ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_ID = T2.employee_ID ORDER BY T2.bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_id = T2.employee_id ORDER BY T2.bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id = T2.shop_id GROUP BY T2.shop_id ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT T2.name , count(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.shop_id","Not match: [('1', 'FC Inter'), ('1', 'FC KooTeePee'), ('1', 'FC Lahti'), ('1', 'FF Jaro'), ('1', 'HJK'), ('2', 'FC Haka')] != [('FC Haka', '2'), ('FC Inter', '1'), ('FC KooTeePee', '1'), ('FC Lahti', '1'), ('FF Jaro', '1'), ('HJK', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT count(T2.employee_id) , T1.name FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.name",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT DISTINCT District FROM shop WHERE Number_of_products < 3000 INTERSECT SELECT DISTINCT District FROM shop WHERE Number_of_products > 10000,OperationalError('no such column: Number_of_products'),False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT DISTINCT District FROM shop WHERE Number_of_products < 3000 INTERSECT SELECT DISTINCT District FROM shop WHERE Number_of_products > 10000,OperationalError('no such column: Number_of_products'),False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT location) FROM shop,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT location) FROM shop,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT document_id , document_name , document_description FROM documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT document_id , document_name , document_description FROM documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM documents WHERE document_description LIKE ""%w%""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM documents WHERE document_description LIKE ""%w%""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , document_description FROM documents WHERE document_name = ""Robbin CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , document_description FROM documents WHERE document_name = ""Robbin CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM documents AS T1 INNER JOIN templates AS T2 ON T1.template_id = T2.template_id WHERE T2.template_type_code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',"SELECT count(*) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_ID = T2.template_ID WHERE T2.template_type_code = ""PPT""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT template_id FROM templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT template_id FROM templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_code = ""CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_code = ""CV""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(VERSION_NUMBER) , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) , template_type_code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM templates AS T1 JOIN documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM Templates AS T1 JOIN Docs AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""",OperationalError('no such table: Docs'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""","SELECT T1.document_name FROM documents AS T1 JOIN templates AS T2 ON T1.template_id = T2.template_id WHERE T2.template_type_code = ""BK""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""","SELECT T1.document_name FROM documents AS T1 JOIN templates AS T2 ON T1.template_id = T2.template_id WHERE T2.template_type_code = ""BK""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Documents,OperationalError('no such column: template_type_code'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM templates EXCEPT SELECT template_type_code FROM docs_templates,OperationalError('no such table: docs_templates'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = ""Book""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = ""Book""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT template_type_description FROM main.templates AS T1 JOIN main.documents AS T2 ON T1.template_id = T2.template_id,OperationalError('no such column: template_type_description'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT template_type_description FROM templates AS t JOIN documents AS d ON t.template_id = d.template_id WHERE d.document_id = <document_id>;,"OperationalError('near ""<"": syntax error')",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""","SELECT T1.template_id FROM Templates AS T1 JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = ""Presentation""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""","SELECT T1.template_id FROM Templates AS T1 JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = ""Presentation""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM documents AS T1 INNER JOIN paragraphs AS T2 ON T1.document_ID = T2.document_ID WHERE T1.document_name = 'Summer Show',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',"SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = ""Korea""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T2.paragraph_id , T2.paragraph_text FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = 'Welcome to NY'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T2.paragraph_id , T2.paragraph_text FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = 'Welcome to NY'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""","SELECT T2.paragraph_text FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = ""Customer reviews""",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT T1.paragraph_text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = 'Customer reviews',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T1.document_name , count(*) FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T2.document_name , COUNT(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text = 'Ireland',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text = 'Ireland',,True
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""","Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT name FROM teacher WHERE home_town != ""Little Lever Urban District""",OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT home_town FROM teacher ORDER BY age LIMIT 1,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT home_town FROM teacher ORDER BY age LIMIT 1,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT home_town , COUNT(*) FROM teacher GROUP BY home_town",OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT home_town , count(*) FROM teacher GROUP BY home_town",OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT home_town FROM teacher GROUP BY home_town ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT home_town FROM teacher GROUP BY home_town ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT home_town FROM teacher GROUP BY home_town HAVING COUNT(*) >= 2,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT home_town FROM teacher GROUP BY home_town HAVING COUNT(*) >= 2,OperationalError('no such column: home_town'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.course_ID = T2.course_ID JOIN teacher AS T3 ON T1.teacher_ID = T3.teacher_ID",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T1.Name , T3.course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id = T2.teacher_id JOIN course AS T3 ON T2.course_id = T3.course_id",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.course_ID = T2.course_ID JOIN teacher AS T3 ON T1.teacher_ID = T3.teacher_ID ORDER BY T3.Name",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course AS T2 JOIN course_arrange AS T1 ON T1.course_ID = T2.course_ID JOIN teacher AS T3 ON T3.teacher_ID = T1.teacher_ID ORDER BY T3.Name",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course AS T1 JOIN course_arrange AS T2 ON T1.course_id = T2.course_id JOIN teacher AS T3 ON T3.teacher_id = T2.teacher_id WHERE T1.course = 'Math',,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id = T2.teacher_id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.course = 'Math',,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name , COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name , COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T2.teacher_id HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T2.teacher_id HAVING COUNT(*) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange),,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange),,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE age  <  30,SELECT count(*) FROM visitor WHERE Age < 30,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT avg(age) FROM visitor WHERE level_of_membership <= 4,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT name , level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY Age DESC",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT museum_id , name FROM museum ORDER BY num_of_staff DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT open_year , num_of_staff FROM main.museum WHERE name = 'Plaza Museum'","Not match: [('62', '2000')] != [('2000', '62')]",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT name FROM museum WHERE num_of_staff > ( SELECT min(num_of_staff) FROM museum WHERE open_year > 2010 ),,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","SELECT T1.id , T1.name , T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id GROUP BY T1.id HAVING count(*) > 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T1.id , T1.name , T1.`level of membership` FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id ORDER BY T2.total_spent DESC LIMIT 1",OperationalError('no such column: T1.level of membership'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT T1.museum_id , T2.name FROM visit AS T1 JOIN museum AS T2 ON T1.museum_id = T2.museum_id GROUP BY T1.museum_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT name FROM museum WHERE muuseum_id NOT IN (SELECT muuseum_id FROM visit),OperationalError('no such column: muuseum_id'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT T1.name , T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID ORDER BY T2.num_of_ticket DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT sum(T2.total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.level_of_membership = 1,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.museum_ID = T3.Museum_ID WHERE T3.open_year < 2009 INTERSECT SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.museum_ID = T3.Museum_ID WHERE T3.open_year > 2011,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),SELECT count(DISTINCT visitor_ID) FROM visit WHERE museum_ID NOT IN( SELECT museum_ID FROM museum WHERE open_year > 2010 ),"Not match: [('3',)] != [('2',)]",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,SELECT count(*) FROM main.museum WHERE open_year > 2013 OR open_year < 2008,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = ""USA""",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT T1.first_name , T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner WHERE T2.year = 2013 INTERSECT SELECT T1.first_name , T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner WHERE T2.year = 2016",OperationalError('no such column: T2.winner'),False
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT p.country_code, p.first_name FROM main.players p JOIN main.ranking r ON p.player_id = r.player_id WHERE r.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT r.tourney_name) = 2;",OperationalError('no such table: main.ranking'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking = 1 AND T2.tours = 1 UNION SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking = 1 AND T2.tours = 2","Not match: [('GER', 'Angelique'), ('USA', 'Serena')] != []",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY SUM(T2.tours) DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Eleni', 'GRE')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY COUNT(*) DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Tamarine', 'THA')]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM main.matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name , T1.winner_rank_points FROM matches AS T1 GROUP BY T1.winner_name ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name , T1.winner_rank_points FROM main.matches AS T1 GROUP BY T1.winner_name ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT T1.winner_name FROM matches AS T1 INNER JOIN tournaments AS T2 ON T1.tourney_id = T2.id WHERE T2.tourney_name = 'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1,OperationalError('no such table: tournaments'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT p.player_id, p.first_name, AVG(r.ranking) AS average_ranking FROM main.players p JOIN main.rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name;","Not match: [('1001.0679611650486', 'Karis'), ('1002.6792452830189', 'Sybille'), ('1003.1212121212121', 'Kei'), ('1003.5367647058823', 'Seda'), ('1004.6666666666666', 'Sohyun'), ('1004.7428571428571', 'Malika'), ('1005.75', 'Berta'), ('1006.1769911504425', 'Vladislava'), ('1006.2982456140351', 'Elizabeth Anita Alexandria'), ('1006.5128205128206', 'Oliwia'), ('1007.15', 'Mahitha'), ('1009.8666666666667', 'Treta'), ('1010.1818181818181', 'Katyarina'), ('1010.3333333333334', 'Da Hye'), ('1010.4545454545455', 'Ramu'), ('1011.3666666666667', 'Amelie'), ('1011.469696969697', 'Wendy Qi Wen'), ('1011.9433962264151', 'Elke'), ('1012.325', 'Kelsey'), ('1013.4761904761905', 'Maud'), ('1015.2352941176471', 'Tingting'), ('1015.5', 'Fatyha'), ('1015.6792452830189', 'Susan'), ('1016.5714285714286', 'Apichaya'), ('1017.2560553633218', 'Melina'), ('1017.3134328358209', 'Nikki'), ('1017.7777777777778', 'Tijana'), ('1018.6534653465346', 'Keri'), ('1018.6637931034483', 'Ashmitha'), ('1019.0', 'Reina'), ('1019.4107142857143', 'Helen'), ('1019.9411764705883', 'Julita'), ('1020.28125', 'Hye Min'), ('1020.4271844660194', 'Kerstin'), ('1020.6', 'Carson'), ('1021.6504854368932', 'Ratnika'), ('1022.3333333333334', 'Xin Yu'), ('1022.6198347107438', 'Jordana'), ('1022.9174311926605', 'Emiliana'), ('1023.089430894309', 'Tanya'), ('1023.8690476190476', 'Eveliina'), ('1024.0116279069769', 'Sherry'), ('1024.625', 'Aishwarya'), ('1024.6666666666667', 'Julia Mansano'), ('1025.0', 'Megumi'), ('1027.0', 'Guillermina'), ('1027.1382978723404', 'Oana'), ('1028.0365853658536', 'Madeleine'), ('1028.9565217391305', 'Sandy'), ('1029.0', 'Molly'), ('1029.0980392156862', 'Sonia'), ('1029.1666666666667', 'Meiqi'), ('1029.3196721311476', 'Trang'), ('1029.6888888888889', 'Eden'), ('1030.5', 'Leylah Annie'), ('1031.0', 'Nevena'), ('1031.228855721393', 'Ana Paula'), ('1031.5342465753424', 'Mallaurie'), ('1031.6', 'Mei Xu'), ('1032.2666666666667', 'Desiree'), ('1033.027027027027', 'Sasa'), ('1034.1304347826087', 'Yujia'), ('1034.5833333333333', 'Ailen'), ('1035.0384615384614', 'Kirsten Andrea'), ('1035.327868852459', 'Libi'), ('1035.46', 'Jazmin'), ('1035.5548387096774', 'Stephanie Mariel'), ('1035.6470588235295', 'Jin Ju'), ('1035.7780678851175', 'Paulina'), ('1035.95', 'Meng Ning'), ('1036.1214953271028', 'Magalie'), ('1037.0833333333333', 'Anushka'), ('1037.5274725274726', 'Jainy'), ('1038.35', 'Akvile'), ('1038.6911764705883', 'I Hsuan'), ('1039.0', 'Inger'), ('1039.3902439024391', 'Chi Fan'), ('1039.6744186046512', 'Abiodun'), ('1039.8333333333333', 'Melany Solange'), ('1041.0740740740741', 'Pippa'), ('1041.5367231638418', 'Yuriko'), ('1041.948717948718', 'Emily J'), ('1042.037037037037', 'Annie'), ('1042.6802325581396', 'Shu Ying'), ('1042.7843137254902', 'Dominique'), ('1045.6666666666667', 'Andrina'), ('1047.3529411764705', 'Yuqi'), ('1047.7575757575758', 'Si Qi'), ('1047.98224852071', 'Maria Paulina'), ('1048.081081081081', 'Ye Xin'), ('1049.0', 'Costanza'), ('1049.4655172413793', 'Antonina'), ('1049.834745762712', 'Noelia'), ('1050.7', 'Katya'), ('1051.1224489795918', 'Margaux'), ('1051.623188405797', 'Habiba'), ('1051.7096774193549', 'Antonela'), ('1051.7349397590363', 'Rita'), ('1052.8314606741574', 'Gaelle'), ('1054.0', 'Yuan'), ('1054.0813953488373', 'Nikol'), ('1054.606896551724', 'Robyn'), ('1054.9019607843138', 'Larikah'), ('1055.020202020202', 'Kady'), ('1056.0588235294117', 'Martha'), ('1057.628205128205', 'Alessia'), ('1058.0', 'Zhibek'), ('1059.2702702702702', 'Yanni'), ('1059.73', 'Rosalia'), ('1060.5633802816901', 'Kristina N'), ('1061.3076923076924', 'Pei Ju'), ('1062.3666666666666', 'Lamis'), ('1062.795918367347', 'Karina Kristina'), ('1063.4736842105262', 'Andjela'), ('1063.9411764705883', 'Yijia'), ('1064.0', 'Axana'), ('1064.142857142857', 'Mihika'), ('1066.5343511450383', 'Eleanor'), ('1066.5887096774193', 'Rosalie'), ('1067.019801980198', 'Alejandra'), ('1067.3413173652696', 'Marisa'), ('1068.4619883040937', 'Yolande'), ('1068.7457627118645', 'Tea'), ('1068.9166666666667', 'Kariann'), ('1069.0379746835442', 'Ryann'), ('1069.0925925925926', 'Inci'), ('1069.15', 'Nermeen'), ('1069.3208955223881', 'Hyojung'), ('1070.0377358490566', 'Kwan Yau'), ('1070.1025641025642', 'Louise'), ('1070.21875', 'Maureen'), ('1070.3417721518988', 'Simone'), ('1070.3967391304348', 'Anna Maria'), ('1070.5648854961833', 'Jawairiah'), ('1070.6666666666667', 'Shiori'), ('1070.9463414634147', 'Fatimah'), ('1071.3076923076924', 'Mi Jeong'), ('1071.5833333333333', 'Yukako'), ('1072.4', 'Leticia Garcia'), ('1072.857142857143', 'Ronke'), ('1072.9591836734694', 'Maria Andrea'), ('1073.1752577319587', 'Ebony'), ('1074.3333333333333', 'Arlinda'), ('1075.0', 'Tatia'), ('1075.8260869565217', 'Amira'), ('1077.8095238095239', 'Karolayne'), ('1079.05', 'Ivanka'), ('1081.142857142857', 'Wan Yi'), ('1081.1666666666667', 'Sari'), ('1082.3548387096773', 'Agata Jadwiga'), ('1083.1454545454546', 'Wiktoria'), ('1083.8333333333333', 'Eva Marie'), ('1084.0294117647059', 'May'), ('1084.107142857143', 'Sofico'), ('1084.7916666666667', 'Ana Gabriela'), ('1085.4242424242425', 'Mariaryeni'), ('1085.581818181818', 'Iana'), ('1086.45', 'Astrid Wanja'), ('1087.372340425532', 'Eleonore'), ('1087.3823529411766', 'Naz'), ('1087.6216216216217', 'Gyulnara'), ('1089.1603773584907', 'Angeliki'), ('1089.2100840336134', 'Rashmi'), ('1089.7111111111112', 'Vanja'), ('1092.2771084337348', 'Emiliya'), ('1092.7621951219512', 'Magy'), ('1094.4583333333333', 'Dina'), ('1095.1176470588234', 'Hikari'), ('1096.1140350877192', 'Nour'), ('1096.9130434782608', 'Yoshimi'), ('1097.0', 'Sharon Sanchana'), ('1097.219512195122', 'Kimika'), ('1098.2888888888888', 'Lulu'), ('1098.357142857143', 'Yu Jin'), ('1099.625', 'Parris'), ('1104.357142857143', 'Melissa Ishuan'), ('1105.1298701298701', 'Alicia'), ('1105.171875', 'Sanae'), ('1105.3125', 'Kanako'), ('1106.3076923076924', 'Farah'), ('1106.5', 'Pei Hsuan'), ('1107.0882352941176', 'Lauryn'), ('1107.0919540229886', 'Danijela'), ('1107.7142857142858', 'Hsin Yuan'), ('1110.0434782608695', 'Abbi'), ('1110.0816326530612', 'Juliana'), ('1110.3333333333333', 'Aida'), ('1110.4411764705883', 'Mihoki'), ('1110.4594594594594', 'Yawna'), ('1110.5376344086021', 'Hana'), ('1111.08', 'Katrine Isabel'), ('1111.8333333333333', 'Johana'), ('1112.1458333333333', 'Chompoothip'), ('1112.75', 'Olaya'), ('1112.875', 'Christie'), ('1112.9450549450548', 'Camille'), ('1113.2325581395348', 'Tanaporn'), ('1114.4074074074074', 'Milena'), ('1114.9433962264152', 'Kelia'), ('1114.99375', 'Isabela'), ('1115.0851063829787', 'Deeon'), ('1115.72', 'Seira'), ('1116.4190476190477', 'Jil Nora'), ('1117.55', 'Wen Ling'), ('1117.64', 'Jasmine Amber'), ('1117.6666666666667', 'Rana'), ('1117.7142857142858', 'Kate'), ('1117.88', 'Saana'), ('1118.4166666666667', 'Tamar'), ('1118.904761904762', 'Huijie'), ('1119.1639344262296', 'Alana'), ('1119.4897959183672', 'Maria Del Rosario'), ('1120.388888888889', 'Shou Na'), ('1120.5652173913043', 'Lizaveta'), ('1121.04', 'Mitsumi'), ('1121.0869565217392', 'Maurien'), ('1121.2432432432433', 'Rafaela'), ('1121.767857142857', 'Jara'), ('1121.8846153846155', 'Ramya'), ('1122.4423076923076', 'Adnya'), ('1122.4545454545455', 'Se Jin'), ('1123.3855421686746', 'Cemre'), ('1123.4864864864865', 'Alessandra'), ('1123.6486486486488', 'Deria'), ('1124.1666666666667', 'Nina Isabella'), ('1125.0363636363636', 'Rio'), ('1125.5471698113208', 'Rona'), ('1126.3333333333333', 'Brindtha'), ('1127.7368421052631', 'Anca'), ('1127.9338842975208', 'Carlotta'), ('1128.030303030303', 'Chantelle'), ('1128.7272727272727', 'Angela'), ('1128.901098901099', 'Yoko'), ('1130.6037735849056', 'Vaniya'), ('1131.6333333333334', 'Donika'), ('1132.0', 'Chelsea'), ('1132.1744186046512', 'Dariya'), ('1132.4109589041095', 'Ushna'), ('1135.5', 'Ilay'), ('1136.8535031847134', 'Ivette'), ('1137.19', 'Priscila'), ('1138.8490566037735', 'Victoire'), ('1138.9166666666667', 'Nastassia'), ('1139.0', 'Luna'), ('1139.2340425531916', 'Sarahi'), ('1139.7', 'Mafalda'), ('114.05571428571429', 'Jie'), ('114.78806907378336', 'Yayuk'), ('1140.981981981982', 'Busra'), ('1141.842105263158', 'Cecilie Lundgaard'), ('1141.842105263158', 'Sing Le'), ('1142.9285714285713', 'Savannah'), ('1143.7957746478874', 'Marcela Guimaraes'), ('1144.45', 'Zhima'), ('1145.1641791044776', 'Alessondra'), ('1145.4333333333334', 'Rebeca'), ('1145.8235294117646', 'Akiho'), ('1146.3934426229507', 'Tamari'), ('1147.8526315789475', 'Rachel'), ('1147.8529411764705', 'Lidia'), ('1148.0', 'Shreya'), ('1148.9166666666667', 'Mariia'), ('1149.3125', 'Spurti'), ('1150.0', 'Anda'), ('1150.0', 'Vinciane'), ('1150.6607142857142', 'Ghislaine'), ('1151.95', 'Asha'), ('1152.0857142857142', 'Aneta'), ('1152.142857142857', 'Gebriela'), ('1152.7837837837837', 'Weronika Jasmina'), ('1152.888888888889', 'Maileen'), ('1153.590909090909', 'Mami'), ('1153.9166666666667', 'Georgiana'), ('1153.936507936508', 'Hao Ching'), ('1154.093023255814', 'Melissa'), ('1154.25', 'Agustina Elena'), ('1154.2714285714285', 'Elizabeta'), ('1154.2857142857142', 'Dewi'), ('1154.4166666666667', 'Shir'), ('1155.0392156862745', 'Afroditi'), ('1155.8191489361702', 'Yekaterina'), ('1156.28125', 'Paige Mary'), ('1156.340425531915', 'Ah'), ('1157.5', 'Eugenia'), ('1157.8', 'Almudena'), ('1159.1818181818182', 'Dagmara'), ('1159.5632183908046', 'Theresa'), ('1160.3125', 'Denise Antonela'), ('1161.0', 'Jiaxue'), ('1161.5675675675675', 'Caroline B'), ('1162.8301886792453', 'Kamilla'), ('1163.0', 'Mariona'), ('1163.3478260869565', 'Kaylah'), ('1164.090909090909', 'Ki Ryang'), ('1164.107142857143', 'Nelise'), ('1164.95', 'Aina'), ('1165.093023255814', 'Colomba'), ('1165.5573770491803', 'Ina'), ('1166.875', 'Yarden'), ('1167.2758620689656', 'Nonna'), ('1167.3333333333333', 'Stefani'), ('1167.3368421052633', 'Belen'), ('1168.2857142857142', 'Roosh'), ('1168.3396226415093', 'Gulben'), ('1168.6571428571428', 'Selin'), ('1168.7967479674796', 'Ella'), ('1169.4864864864865', 'Miranda'), ('1169.6923076923076', 'Jia'), ('117.95684523809524', 'Iveta'), ('1170.1830985915492', 'Maria Jesus'), ('1170.3461538461538', 'You Na'), ('1170.840579710145', 'Violetta'), ('1170.9411764705883', 'Iulia Maria'), ('1171.0', 'Shelly'), ('1172.5531914893618', 'Assia'), ('1173.75', 'Maftuna'), ('1174.0', 'Nikita'), ('1175.7666666666667', 'Juliana Rocha'), ('1175.909090909091', 'Paula Andrea'), ('1176.5', 'Ralina'), ('1177.622641509434', 'Nattawadee'), ('1177.8823529411766', 'Yang'), ('1179.1555555555556', 'Olena'), ('1179.4153846153847', 'Haine'), ('1179.6216216216217', 'Leah'), ('1179.875', 'Livia'), ('1180.3828125', 'Naoko'), ('1180.5454545454545', 'Leslie'), ('1181.27868852459', 'Aselya'), ('1181.3548387096773', 'Manya'), ('1181.4736842105262', 'Dajana'), ('1181.6078431372548', 'Alory Regina Elorriaga'), ('1182.9107142857142', 'Meritxell'), ('1184.0', 'Layne'), ('1184.0416666666667', 'Andressa Cristina'), ('1184.6666666666667', 'Sabina Elena'), ('1184.7222222222222', 'Liniques'), ('1184.8260869565217', 'Smriti'), ('1185.030303030303', 'Yidi'), ('1185.7142857142858', 'Aldana'), ('1185.75', 'Hollie'), ('1186.9444444444443', 'Muge'), ('1187.0384615384614', 'Ferny'), ('1187.9245283018868', 'Shiran'), ('1188.2941176470588', 'Schena'), ('1188.5277777777778', 'Maria Camila'), ('1188.7096774193549', 'Mary Ann'), ('1189.0', 'June'), ('1190.0629921259842', 'Lutfiye'), ('1190.0833333333333', 'Maria Agustina'), ('1190.7307692307693', 'Clara'), ('1191.6470588235295', 'Sarai Delfina'), ('1192.1818181818182', 'Cameron'), ('1192.3783783783783', 'Camila Vital'), ('1192.5454545454545', 'Intissar'), ('1193.3529411764705', 'Emma Christine'), ('1196.0', 'Gulchekhra'), ('1196.56', 'Dorien'), ('1197.0', 'Giovanna'), ('1197.578947368421', 'Carolyn'), ('1198.1538461538462', 'Laura Sofia'), ('1198.25', 'Moyuka'), ('1198.3333333333333', 'Damira'), ('1199.8235294117646', 'Aastha'), ('1200.2', 'Aimee'), ('1201.16', 'Mila'), ('1201.25', 'Vita'), ('1202.2692307692307', 'Man Ying Maggie'), ('1203.5', 'Madina'), ('1204.6666666666667', 'Salma'), ('1204.7272727272727', 'Federica Joe'), ('1205.7692307692307', 'Diana Maria'), ('1206.6666666666667', 'Maia A'), ('1208.4285714285713', 'Avgusta'), ('1208.952380952381', 'Vishesh'), ('1209.4', 'Amrita'), ('1209.625', 'Emilija'), ('1209.625', 'Rui'), ('1209.625', 'Yihong'), ('1209.7777777777778', 'Sarlota'), ('121.82273948075202', 'Tamarine'), ('121.9579326923077', 'Jill'), ('1210.2571428571428', 'Se Hyun'), ('1211.0', 'Phenomena'), ('1211.2333333333333', 'Elodie'), ('1212.9166666666667', 'Justina'), ('1213.1666666666667', 'Adrienn'), ('1213.2142857142858', 'Mercedes'), ('1214.1142857142856', 'Vincenza'), ('1214.7692307692307', 'Hazal'), ('1214.857142857143', 'Ege'), ('1215.0', 'Marijana'), ('1217.469387755102', 'Madeline'), ('1218.5652173913043', 'Esen'), ('1219.0', 'Himari'), ('122.19587628865979', 'Agnieszka'), ('1220.0', 'Loudmilla'), ('1221.3333333333333', 'Sophia'), ('1221.5', 'Zinovia'), ('1221.7931034482758', 'Elaine'), ('1221.8333333333333', 'Blessing'), ('1221.904761904762', 'Milica'), ('1222.24', 'Yosr'), ('1223.4', 'Mihaela Lorena'), ('1224.0', 'Arina Gabriela'), ('1224.0', 'Judith'), ('1225.388888888889', 'Sneha'), ('1225.75', 'Ya'), ('1226.076923076923', 'Laylo'), ('1226.3333333333333', 'Ange Oby'), ('1226.5', 'Giorgie'), ('1226.5454545454545', 'Daphne'), ('1227.0', 'Muazzez'), ('1227.344827586207', 'Zaineb'), ('1227.7777777777778', 'Yasmina'), ('1227.8', 'Joanne'), ('1228.3235294117646', 'Shangqing'), ('1228.388888888889', 'Anke'), ('1228.75', 'Abir'), ('1228.9285714285713', 'Michela'), ('1229.5714285714287', 'Betina'), ('1229.5714285714287', 'Zeynep  Sena'), ('1229.7333333333333', 'En Pei'), ('1229.8', 'Sunae'), ('1230.2', 'Talya'), ('1230.2', 'Yuval'), ('1230.6', 'Jiakang'), ('1230.6', 'Mananchaya'), ('1231.2727272727273', 'Lorenza'), ('1231.5', 'Agne'), ('1232.0', 'Emilia'), ('1232.032258064516', 'Jiatian'), ('1232.2', 'Idia'), ('1232.8', 'Chaoyi'), ('1234.2857142857142', 'Milagros'), ('1234.6176470588234', 'Doga Selen'), ('1235.1960784313726', 'Sarvinoz'), ('1236.0', 'Victoria Ariadna'), ('1236.5333333333333', 'Viktoriia'), ('1236.6153846153845', 'Gulnaz'), ('1236.7627118644068', 'Shakhnoza'), ('1236.7777777777778', 'Carlota'), ('1237.6363636363637', 'Anne Marie'), ('1237.9', 'Zhou'), ('1238.0625', 'Minami'), ('1239.6666666666667', 'Yu Tong'), ('1240.92', 'Sean'), ('1241.1379310344828', 'Siyu'), ('1242.0', 'Damini'), ('1243.0', 'Vilma Y'), ('1243.4', 'Moulika'), ('1243.4285714285713', 'Ana Luisa'), ('1243.875', 'Jaimy Gayle'), ('1243.904761904762', 'Jule'), ('1244.3333333333333', 'Frederikke'), ('1245.3333333333333', 'Constanze'), ('1245.75', 'Anastasiia'), ('1247.3333333333333', 'Jamilya'), ('1247.3636363636363', 'Marcelina'), ('1247.909090909091', 'Nataliya'), ('1248.2', 'Dilara'), ('1248.72', 'Ahlam'), ('1249.3333333333333', 'Warona'), ('1251.1333333333334', 'Hortencia'), ('1252.0', 'Anne Sophie'), ('1252.9130434782608', 'Vicky'), ('1253.4', 'Beatriz Magdalena'), ('1254.6341463414635', 'Boba'), ('1255.3333333333333', 'Adva'), ('1258.5', 'Mouna'), ('1261.8181818181818', 'Yasmyn'), ('1262.5416666666667', 'Janja'), ('1263.7666666666667', 'Yoo Ri'), ('1267.0', 'Jin'), ('127.06775067750678', 'Kaia'), ('1275.8235294117646', 'Andra Maria'), ('1281.8461538461538', 'Arthi'), ('1281.8461538461538', 'Chanikarn'), ('131.02074074074073', 'Tsvetana'), ('132.12638580931264', 'Paola'), ('1332.0737704918033', 'Micaela'), ('134.21917808219177', 'Catherine Cartan'), ('135.88910505836577', 'Tamira'), ('1382.1538461538462', 'Beauty'), ('1397.5', 'Olawaseun'), ('14.654294803817603', 'Serena'), ('143.48235294117646', 'Mallory'), ('144.3264367816092', 'Anabel'), ('146.59709379128137', 'Bethanie'), ('149.46360759493672', 'Jarmila'), ('1493.0', 'Damilola'), ('150.96681415929203', 'Roberta'), ('159.62397820163488', 'Kveta'), ('162.3505747126437', 'Sesil'), ('165.96132596685084', 'Kurumi'), ('166.41358024691357', 'Shahar'), ('166.6586270871985', 'Yung Jan'), ('167.50632911392404', 'Heather'), ('167.90740740740742', 'Shuai'), ('169.13578500707214', 'Melinda'), ('171.71134020618555', 'Dominika'), ('177.22695035460993', 'Sania'), ('182.02426160337552', 'Timea'), ('185.3469387755102', 'Michaella'), ('185.75', 'Vania'), ('186.76587795765877', 'Mirjana'), ('188.06095041322314', 'Lourdes'), ('194.2392065344224', 'Maria Elena'), ('195.66923570969814', 'Vera'), ('200.97080291970804', 'Aravane'), ('201.87700534759358', 'Anna Lena'), ('203.5871080139373', 'Sabine'), ('205.17590361445784', 'Lesia'), ('208.95263157894738', 'Misaki'), ('210.0846394984326', 'Monica'), ('211.01377118644066', 'Brenda'), ('211.41240310077518', 'Yaroslava'), ('211.67325428194994', 'Edina'), ('213.75043630017453', 'Sorana'), ('215.25185185185185', 'Akgul'), ('215.6615811373093', 'Chanelle'), ('217.2493188010899', 'Su Wei'), ('217.85922330097088', 'Alla'), ('218.4701086956522', 'Severine'), ('221.66153846153847', 'Anastasija'), ('222.81428571428572', 'Zarina'), ('223.50900900900902', 'Donna'), ('229.35687022900763', 'Urszula'), ('229.3774193548387', 'Garbine'), ('235.31431431431432', 'Klara'), ('236.07412398921832', 'Cara'), ('240.0448979591837', 'Vesna'), ('240.5306603773585', 'Janette'), ('246.19871794871796', 'Richel'), ('247.7449768160742', 'Tatjana'), ('248.74237737516572', 'Anne'), ('249.5244140625', 'Eleni'), ('252.11485774499474', 'Alize'), ('252.6093155893536', 'Barbora'), ('259.63589743589745', 'Sloane'), ('262.30884808013354', 'Junri'), ('265.79487179487177', 'Annika'), ('267.03227571115974', 'Svetlana'), ('268.05945945945945', 'Dinah'), ('270.5896860986547', 'Coco'), ('272.08855291576674', 'Kai Chen'), ('273.57517899761336', 'Mona'), ('274.85317919075146', 'Renata'), ('275.6055900621118', 'Lindsay'), ('279.16438356164383', 'Dalma'), ('279.23336006415394', 'Arantxa'), ('279.78655282817505', 'Marion'), ('280.79959100204496', 'Michelle'), ('281.871335504886', 'Mariya'), ('283.63246554364474', 'Romina'), ('284.22813688212926', 'Luksika'), ('284.8326771653543', 'Liezel'), ('284.8724727838258', 'Aiko'), ('285.84388185654007', 'Irina Camelia'), ('287.71625344352617', 'Kiki'), ('288.74423480083857', 'Irena'), ('289.60283687943263', 'Regina'), ('290.0614657210402', 'Rika'), ('290.64452214452217', 'Madison'), ('291.4792817679558', 'Kathrin'), ('293.76942355889724', 'Catalina'), ('294.33209990749305', 'Kateryna'), ('296.2025641025641', 'Vitalia'), ('296.5792682926829', 'Sharon'), ('296.8219584569733', 'Greta'), ('297.39032258064515', 'Saisai'), ('298.1861898890259', 'Pauline'), ('300.3974358974359', 'Magda'), ('300.56296296296296', 'Marie Eve'), ('302.83268482490274', 'Danka'), ('302.84831460674155', 'Ajla'), ('304.4619771863118', 'Raluca'), ('305.19563522992985', 'Galina'), ('306.1794310722101', 'Maria Jose'), ('308.56833824975416', 'Angelique'), ('308.64912280701753', 'Kirsten'), ('309.35767790262173', 'Xinyun'), ('310.3405299313052', 'Johanna'), ('311.87854251012146', 'Cagla'), ('312.54158964879855', 'Stanislava'), ('312.7584269662921', 'Kelly S'), ('313.45625', 'Nao'), ('318.2867132867133', 'Yvonne'), ('318.69978858350953', 'Carly'), ('32.984862819299906', 'Venus'), ('321.23595505617976', 'Eri'), ('322.17758620689654', 'Yurika'), ('322.62611607142856', 'Lucie'), ('323.1388101983003', 'Reka Luca'), ('323.86176470588236', 'Maryna'), ('324.3720930232558', 'Elena'), ('324.63613231552165', 'Madalina'), ('325.5912596401028', 'Margalita'), ('325.6162790697674', 'Yafan'), ('331.3681818181818', 'Ashleigh'), ('331.93949394939494', 'Katalin'), ('334.7118644067797', 'Elise'), ('337.5292682926829', 'Mervana'), ('340.2890442890443', 'Sacha'), ('342.40130505709624', 'Caroline'), ('343.0985324947589', 'Tadeja'), ('343.22432701894314', 'Alberta'), ('343.25546975546973', 'Kristina'), ('343.2835365853659', 'Chanel'), ('345.51020408163265', 'Anna Karolina'), ('347.34943639291464', 'Estrella'), ('348.19338235294117', 'Jelena'), ('348.54794520547944', 'Kyoka'), ('348.6364892881825', 'Daniela'), ('349.54794520547944', 'Aryna'), ('353.44444444444446', 'Marketa'), ('355.7223168654174', 'Masa'), ('355.88102893890675', 'Virginie'), ('356.0105210420842', 'Lisa'), ('356.8219696969697', 'Corinna'), ('359.3764705882353', 'Chia Jung'), ('359.81081081081084', 'Maria Teresa'), ('361.0', 'Mandy'), ('365.50280484204313', 'Petra'), ('367.2274678111588', 'Anett'), ('368.14331210191085', 'Valentyna'), ('368.26881720430106', 'Sachie'), ('369.1620469083156', 'Jing Jing'), ('372.32502965599053', 'Melanie'), ('372.89398280802294', 'Shelby'), ('374.93926247288505', 'Noppawan'), ('376.47888446215137', 'Flavia'), ('376.7356115107914', 'Mihaela'), ('376.7617554858934', 'Nigina'), ('378.0163727959698', 'Casey'), ('380.5308641975309', 'Louisa'), ('380.609375', 'Danica'), ('381.2581602373887', 'Yanina'), ('381.5512572533849', 'Yi Fan'), ('382.6888217522659', 'Varvara'), ('382.82479784366575', 'Lyudmyla'), ('383.4714587737844', 'Qiang'), ('383.6413199426112', 'Claudine'), ('383.7832512315271', 'Dia'), ('383.9921465968586', 'Alexa'), ('384.87776983559684', 'Yuliya'), ('385.2651515151515', 'Chin Wei'), ('385.8135593220339', 'Patty'), ('386.7025316455696', 'Tamaryn'), ('387.5662100456621', 'Taylor'), ('387.66706161137444', 'Abigail'), ('387.73412112259973', 'Stefanie'), ('387.87113402061857', 'Liana Gabriela'), ('390.0', 'Conny'), ('390.2361111111111', 'Tessah'), ('391.3003629764065', 'Agnes'), ('391.4656290531777', 'Zi'), ('392.44444444444446', 'Elena Gabriela'), ('392.7313829787234', 'Bojana'), ('395.6680227827502', 'Nuria'), ('396.225', 'Georgina'), ('396.2893280632411', 'Ana'), ('397.83561643835617', 'Ayla'), ('398.3106546854942', 'Vanessa'), ('398.83478260869566', 'Tetyana'), ('400.8093385214008', 'Sachia'), ('401.0998263888889', 'Katarina'), ('402.36756756756756', 'Jamie'), ('402.49931972789113', 'Romana'), ('403.48784576697403', 'Alison'), ('403.8775981524249', 'Ying Ying'), ('403.935', 'Patricia Maria'), ('406.21702404158543', 'Samantha'), ('406.5511363636364', 'Cory Ann'), ('406.6258503401361', 'Jana'), ('406.9281767955801', 'Fangzhou'), ('407.029702970297', 'Mayo'), ('407.5463976945245', 'Nadia'), ('410.8463541666667', 'Mailen'), ('411.5068493150685', 'Usue Maitane'), ('411.70779777206513', 'Carla'), ('412.74466019417474', 'Ayumi'), ('414.4332292750607', 'Andrea'), ('414.66339869281046', 'Evgenia'), ('415.7', 'Kathinka'), ('415.9078341013825', 'Amra'), ('416.3666666666667', 'Carina'), ('417.44323483670297', 'Heidi'), ('417.8053097345133', 'Susanne'), ('418.2566137566138', 'Yi Miao'), ('418.39748953974896', 'Elitsa'), ('418.81925343811395', 'Ling'), ('419.1633466135458', 'Denisa'), ('419.32988047808766', 'Marta'), ('421.44179894179894', 'Shuko'), ('421.6573033707865', 'Elina'), ('424.64521739130436', 'Andreja'), ('425.82394366197184', 'Tina'), ('426.3886462882096', 'Su Jeong'), ('426.6002565198803', 'Maria'), ('427.0', 'Ronit'), ('428.5496828752643', 'Anna Giulia'), ('430.0872542522642', 'Anastasia'), ('431.19607843137254', 'Robin'), ('431.3144424131627', 'Ye Ra'), ('432.6511627906977', 'Olga'), ('432.6949152542373', 'Anhelina'), ('434.68', 'Danielle Rose'), ('435.1470588235294', 'Ons'), ('436.66881028938906', 'Nudnida'), ('436.84339509862525', 'Irina'), ('437.05298013245033', 'Francoise'), ('437.11396648044695', 'Mathilde'), ('437.4119658119658', 'Tetiana'), ('437.73858921161826', 'Chiaki'), ('437.86915887850466', 'Jasmine'), ('438.4245810055866', 'Maiko'), ('439.5747863247863', 'Cristina Andreea'), ('439.81414868105514', 'Ivana'), ('439.87772357723577', 'Stephanie'), ('440.35214446952597', 'Wen Hsin'), ('441.9846743295019', 'Aliaksandra'), ('442.0344827586207', 'Evgeniya'), ('443.0228531855956', 'Maria Fernanda'), ('443.45754716981133', 'Claire'), ('443.6296006264683', 'Magdalena'), ('443.76148409893995', 'Kyra'), ('443.8467908902692', 'Kristyna'), ('444.96190476190475', 'Yue Yue'), ('444.9760935910478', 'Victoria'), ('445.18918918918916', 'Kristie'), ('446.7231833910035', 'Olivia'), ('447.93283582089555', 'Miyabi'), ('450.22998544395927', 'Aleksandra'), ('450.4642082429501', 'Varatchaya'), ('451.33577981651376', 'Lenka'), ('451.5810397553517', 'Florencia'), ('451.8657487091222', 'Sheng Nan'), ('451.92875448487956', 'Zuzana'), ('452.625', 'Ilona'), ('453.01556420233464', 'Alisa'), ('453.43392070484583', 'Asia'), ('454.06233062330625', 'Grace'), ('454.9920529801324', 'Christina'), ('457.4050279329609', 'Beatriz'), ('458.86633663366337', 'Ysaline'), ('459.29286608260327', 'Katarzyna'), ('460.8932038834951', 'An Sophie'), ('461.06702898550725', 'Teliana'), ('462.4270462633452', 'Monique'), ('464.1367781155015', 'Chi Chi'), ('464.95631067961165', 'Darija'), ('465.24962852897477', 'Pemra'), ('467.24657534246575', 'Xiaodi'), ('471.5439093484419', 'Evelyn'), ('471.8367290748899', 'Ekaterina'), ('472.338003502627', 'Karin'), ('475.2979683972912', 'Tara'), ('477.62886597938143', 'Eugenie'), ('478.30369515011546', 'Polona'), ('479.51738241308794', 'Roxane'), ('479.5530612244898', 'Ayu Fani'), ('479.8914728682171', 'Valentini'), ('480.646017699115', 'Xinyu'), ('481.3229166666667', 'Leticia'), ('482.26169844020797', 'Anais'), ('482.36648501362396', 'Ksenia'), ('482.43243243243245', 'Ioana Diana'), ('483.77464788732397', 'Destanee'), ('483.97225572979494', 'Naomi'), ('484.9442231075697', 'Lauren'), ('485.35135135135135', 'Yulia'), ('485.40168539325845', 'Myrtille'), ('485.46875', 'Nicoleta Catalina'), ('485.9559748427673', 'Indy'), ('486.6092544987147', 'Maria Joao'), ('487.6268656716418', 'Raveena'), ('488.76107382550333', 'Kumiko'), ('488.7671232876712', 'Xu Liu'), ('489.27513227513225', 'Teodora'), ('489.5294964028777', 'Iryna'), ('489.5307517084282', 'Elizaveta'), ('489.65909090909093', 'Risa'), ('490.4144736842105', 'Aranza'), ('491.8507295173962', 'Katerina'), ('492.6608695652174', 'Katy'), ('492.8915187376726', 'Jin A'), ('493.98205383848455', 'Akiko'), ('494.6111111111111', 'Remi'), ('495.22641509433964', 'Riko'), ('496.7156398104265', 'Ana Sofia'), ('496.9431818181818', 'Alyona'), ('497.42124542124543', 'Lin'), ('499.4127634660422', 'Nicole'), ('500.29483037156706', 'Eva'), ('500.688679245283', 'Shiho'), ('501.0619469026549', 'Jil Belen'), ('501.44444444444446', 'Olesya'), ('501.5860215053763', 'Jesika'), ('504.4145867098865', 'Laura'), ('506.39344262295083', 'Ulrikke'), ('507.4', 'Viktorija'), ('508.340206185567', 'Ellie'), ('508.4679802955665', 'Paula Cristina'), ('509.80945757997216', 'Sara'), ('512.1515151515151', 'Haruna'), ('512.3787128712871', 'Julie'), ('514.1732026143791', 'So Jung'), ('514.586319218241', 'Peangtarn'), ('514.7174515235457', 'Lesley'), ('515.3191489361702', 'Nicha'), ('516.1982942430703', 'Laura Ioana'), ('516.6615384615385', 'Makoto'), ('520.9397993311037', 'Doroteja'), ('521.5358361774744', 'Justine'), ('522.6561403508772', 'Kai Lin'), ('522.984693877551', 'Krista'), ('523.2788844621514', 'Miharu'), ('524.7444668008048', 'Chen'), ('524.9192825112108', 'Ana Clara'), ('525.9552572706936', 'Dalila'), ('526.2644836272041', 'Gail'), ('526.3535641547861', 'Sofia'), ('526.3698630136986', 'Mari'), ('528.8673050615595', 'Nina'), ('529.583908045977', 'Sally'), ('529.7777777777778', 'Jia Qi'), ('531.1829405162739', 'Darya'), ('532.6881807180315', 'Marina'), ('533.433770014556', 'Kyung Mi'), ('533.5940594059406', 'Georgia'), ('533.9586374695864', 'Chieh Yu'), ('533.9652351738241', 'Oksana'), ('534.890243902439', 'Hiroko'), ('537.577922077922', 'Nungnadda'), ('539.6164383561644', 'Raluca Georgiana'), ('539.7944621938232', 'Camila'), ('541.1570881226054', 'Sofiya'), ('541.273631840796', 'Bernarda'), ('541.952380952381', 'Montserrat'), ('542.2382851445662', 'Simona'), ('542.7168141592921', 'Nanuli'), ('543.031185031185', 'Nathalia'), ('543.968253968254', 'Hanyu'), ('544.1627906976744', 'Freya'), ('544.2636655948553', 'Marija'), ('544.5041866028708', 'Erika'), ('545.449074074074', 'Yuxuan'), ('546.5551763367463', 'Sarah'), ('547.277108433735', 'Greetje'), ('547.7037037037037', 'Natsumi'), ('550.1941544885177', 'Bibiane'), ('550.9545454545455', 'Dea'), ('551.5304659498208', 'Deniz'), ('551.5557158312297', 'Anna'), ('552.4653465346535', 'Ayaka'), ('553.9434782608696', 'Ekaterine'), ('554.3953934740883', 'Mi'), ('554.5290322580645', 'Nastassja'), ('554.5376344086021', 'Cristiana'), ('555.3384615384615', 'Bunyawi'), ('555.6572164948453', 'Vojislava'), ('556.0428051001821', 'Mariana'), ('556.2303370786517', 'Azra'), ('556.7936681222708', 'Jennifer'), ('557.241418764302', 'Tereza'), ('557.9232456140351', 'Allie'), ('558.0162601626016', 'Paula'), ('560.6778190830236', 'Arina'), ('562.8450704225352', 'Jaimee'), ('563.964505613908', 'Sandra'), ('564.1434426229508', 'Carol'), ('565.8211508553654', 'Silvia'), ('566.4943396226415', 'Natela'), ('566.7873931623932', 'Isabella'), ('566.9148936170212', 'Viktoria'), ('567.0507399577167', 'Korina'), ('567.8518518518518', 'Gioia'), ('567.9464544138929', 'Liga'), ('568.2547169811321', 'Kamila'), ('568.3374316939891', 'Rebecca'), ('569.1904761904761', 'Fanny'), ('569.2647632558965', 'Alexandra'), ('570.2723004694835', 'Constance'), ('570.534951862704', 'Francesca'), ('572.2654545454545', 'So Ra'), ('572.8059701492538', 'Patricia'), ('573.5197368421053', 'Na Ri'), ('573.6708333333333', 'Storm'), ('573.8729603729604', 'Rushmi'), ('574.8723404255319', 'Harmony'), ('574.9808362369338', 'Lina'), ('575.4626436781609', 'Chang'), ('576.4307692307692', 'Dayana'), ('576.9', 'Klaartje'), ('576.9173467252564', 'Julia'), ('577.9677419354839', 'Natalie'), ('578.07962529274', 'Aleksandrina'), ('578.1381578947369', 'Irina Maria'), ('578.5', 'Jiaxi'), ('579.2153846153847', 'Irene'), ('579.437984496124', 'Vanesa'), ('579.5214723926381', 'Elixane'), ('583.1686746987951', 'Kayla'), ('583.530303030303', 'Ching Wen'), ('583.9347826086956', 'Annalisa'), ('584.359375', 'Giuliana'), ('585.093851132686', 'Emily'), ('585.2589641434263', 'Wing Yau Venise'), ('585.8517745302714', 'Justyna'), ('586.2250489236791', 'Miki'), ('586.865', 'Ya Hsuan'), ('586.9412296564195', 'Karolina'), ('589.1298076923077', 'Antonia'), ('591.2544731610338', 'Audrey'), ('591.3809523809524', 'Ivonne'), ('592.5990783410139', 'Jan'), ('593.1506849315068', 'Mizuno'), ('593.1772853185596', 'Nastja'), ('593.9759036144578', 'Chayenne'), ('594.9036697247707', 'Miyu'), ('594.9436936936937', 'Lena'), ('595.3291666666667', 'Vlada'), ('597.6981132075472', 'Ayano'), ('598.2655172413793', 'Ran'), ('600.6881091617934', 'Sophie'), ('601.906914893617', 'Tammi'), ('601.9846625766871', 'Jovana'), ('604.15', 'Alexis'), ('606.1467576791808', 'Kinnie'), ('606.7211740041929', 'Ganna'), ('607.2810218978102', 'Vivien'), ('607.3360995850622', 'Macall'), ('608.1309090909091', 'Yuuki'), ('608.7791798107255', 'Na Lae'), ('609.90625', 'Chantal'), ('611.0757575757576', 'Sunam'), ('611.35', 'Aliona'), ('611.4060995184591', 'Margarita'), ('612.0185185185185', 'Fang Ying'), ('612.736', 'Lavinia'), ('613.195652173913', 'Aminat'), ('613.5330490405117', 'Vasilisa'), ('614.0434782608696', 'Tamara'), ('614.9346733668342', 'Tena'), ('615.1506849315068', 'Dhruthi'), ('615.2230215827338', 'Chinami'), ('617.0379241516966', 'Misa'), ('617.3333333333334', 'Ao'), ('617.4615384615385', 'Nathaly'), ('617.4935251798561', 'Estelle'), ('618.4714285714285', 'Ankita'), ('618.6923076923077', 'Kimberly'), ('619.4154929577464', 'Pernilla'), ('619.6814159292036', 'Adriana'), ('619.9064748201439', 'Mayya'), ('620.4120171673819', 'Clothilde'), ('620.6746411483253', 'Eugeniya'), ('620.9404580152672', 'Katie'), ('622.7673469387755', 'Manon'), ('624.6089494163424', 'Jacqueline'), ('625.013698630137', 'Berfu'), ('626.441935483871', 'Milana'), ('627.12', 'Adrijana'), ('627.7027027027027', 'Indire'), ('627.7777777777778', 'Zhanlan'), ('628.075', 'Miriam Bianca'), ('629.0081967213115', 'Zhaoxuan'), ('629.6443987667009', 'Daria'), ('630.7953529937444', 'Polina'), ('631.8181818181819', 'Nadja'), ('632.2824427480916', 'Shilin'), ('632.3150684931506', 'Snehadevi S'), ('633.027027027027', 'Jasmin'), ('633.5454545454545', 'Kaja'), ('633.9770491803279', 'Quirine'), ('634.3620689655172', 'Natalija'), ('634.7950310559006', 'Melis'), ('635.346516007533', 'Kanae'), ('635.7449168207024', 'Sung Hee'), ('637.4607407407408', 'Nadiya'), ('638.6666666666666', 'Rianna'), ('638.88', 'Ashley'), ('640.8727272727273', 'Sofya'), ('641.046992481203', 'Emma'), ('642.1811989100818', 'Jasmina'), ('642.9487179487179', 'Ylona Georgiana'), ('643.422641509434', 'Keren'), ('643.616049382716', 'Cristina'), ('643.6939163498099', 'Lara'), ('643.9216101694915', 'Daniella'), ('645.2279792746114', 'Carolin'), ('646.0441176470588', 'Ioana Loredana'), ('647.5205479452055', 'Britt'), ('647.922077922078', 'Fernanda'), ('648.2984054669704', 'Fatma'), ('649.5154639175257', 'Sherazad'), ('650.1206896551724', 'Theo'), ('650.1367521367522', 'Chalena'), ('650.6240276577355', 'Amanda'), ('651.4246575342465', 'Riya'), ('652.1984732824427', 'Elyne'), ('652.917808219178', 'Karman'), ('653.2805383022775', 'Bianca'), ('653.5070422535211', 'Prarthana G'), ('654.3773657782928', 'Diana'), ('655.7464059804486', 'Jessica'), ('655.7828348504552', 'Ipek'), ('656.2851711026616', 'Eduarda'), ('656.2932551319648', 'Basak'), ('656.8787276341948', 'Yi Jing'), ('657.0171919770773', 'Marcella'), ('657.3816155988858', 'Patrycja'), ('657.8934169278997', 'Lena Marie'), ('658.5074074074074', 'Arabela'), ('659.2103004291846', 'Vivienne'), ('659.3055555555555', 'Cindy'), ('660.8924731182796', 'Ola'), ('661.2222222222222', 'Xenia'), ('661.3972602739726', 'Ying'), ('661.8474576271186', 'Valeria'), ('661.9589041095891', 'Kajsa'), ('662.1182795698925', 'Mariam'), ('665.686684073107', 'Despina'), ('665.8219178082192', 'Sadafmoh'), ('666.1496062992126', 'Lizette'), ('666.2853403141361', 'Natasa'), ('668.2581196581197', 'Piia'), ('669.2982456140351', 'Dijana'), ('669.448275862069', 'Ria'), ('669.8542372881356', 'Romana Caroline'), ('670.9108527131783', 'Vivian'), ('671.2584369449378', 'Anastasiya'), ('672.2258064516129', 'Raluca Elena'), ('672.730407523511', 'Emelyn'), ('673.6507936507936', 'Lisanne'), ('673.6635071090047', 'Hilda'), ('673.7509157509157', 'Fatima'), ('673.9809523809524', 'Pei Chi'), ('674.9672514619883', 'Karen'), ('675.2445414847161', 'Chloe'), ('675.4124293785311', 'Priscilla'), ('676.1090909090909', 'Rebeka'), ('676.90589198036', 'Michaela'), ('677.4458598726114', 'Laetitia'), ('680.1050228310502', 'Hao Chen'), ('680.1724137931035', 'Lou'), ('680.677700348432', 'Katharina'), ('681.7736842105263', 'Belinda'), ('681.9417582417583', 'Tatiana'), ('682.0972222222222', 'Emina'), ('682.2005532503458', 'Sabina'), ('682.961038961039', 'Jia Jing'), ('683.1081081081081', 'Panna'), ('684.4892086330935', 'Josephine'), ('684.8497652582159', 'Agustina'), ('686.2234432234433', 'Angelica'), ('686.3047619047619', 'Oana Georgeta'), ('686.6470588235294', 'Elena Teodora'), ('687.0229885057471', 'Ines'), ('687.25', 'Mai'), ('687.3120567375887', 'Kim'), ('689.891129032258', 'Mana'), ('691.9934640522875', 'Sviatlana'), ('692.1515151515151', 'Macarena'), ('692.390625', 'Chun Mei'), ('693.6215943491422', 'Giulia'), ('694.0659898477157', 'Agnese'), ('694.2', 'Shanshan'), ('694.341935483871', 'Harriet'), ('694.4808743169399', 'Xin'), ('695.574074074074', 'Marie'), ('696.2878787878788', 'Tess'), ('696.4126984126984', 'Vanda'), ('696.4752475247525', 'Helene'), ('696.7697332607512', 'Gabriela'), ('696.952380952381', 'Bianka'), ('696.9606060606061', 'Karina Ildor'), ('698.7567567567568', 'Suzy'), ('698.8285714285714', 'Yuki Kristina'), ('699.7864583333334', 'Janina'), ('700.7644444444444', 'Raquel'), ('701.4009009009009', 'Wan Ting'), ('702.1784386617101', 'Yasmin'), ('703.1372549019608', 'Sanaz'), ('704.9618138424821', 'Akari'), ('705.4688346883469', 'Benedetta'), ('705.4716981132076', 'Emilie'), ('705.5625', 'Iga'), ('705.8493150684932', 'Qiu Yu'), ('707.1467889908257', 'Julieta Lara'), ('708.618398637138', 'Celine'), ('709.4247787610619', 'Caitlin'), ('709.625', 'Zarah'), ('710.3822682786414', 'Alice'), ('710.3972602739726', 'Petia'), ('710.9617224880383', 'Aki'), ('712.2780373831775', 'Ximena'), ('714.8653846153846', 'Xi Yao'), ('716.3150684931506', 'Gozal'), ('717.7932330827068', 'Bermet'), ('718.047619047619', 'Michika'), ('718.5202702702703', 'Alexia'), ('718.725321888412', 'Carolina'), ('719.3061224489796', 'Chelsey'), ('720.132932166302', 'Natalia'), ('720.1431870669746', 'Ani'), ('720.6428571428571', 'Cristina Madalina'), ('720.7490039840637', 'Daiana'), ('721.14', 'Jillian'), ('721.1643835616438', 'Mirabelle'), ('722.5087719298245', 'Lilla'), ('722.6986301369863', 'Dasha'), ('722.7286493034525', 'Federica'), ('723.484076433121', 'Nikola'), ('724.5', 'Sofie'), ('724.8712871287129', 'Yevgeniya'), ('724.9178743961353', 'Isabel'), ('725.3893333333333', 'Anja'), ('725.5322195704057', 'Yuliana'), ('726.1737089201878', 'Hua Chen'), ('726.1852387843704', 'Veronica'), ('726.2657657657658', 'Andreea Roxana'), ('728.5', 'Ahsha'), ('728.7443609022556', 'Sina'), ('728.7630208333334', 'Oceane'), ('729.0117647058823', 'Vendula'), ('729.0671936758894', 'Hyun Hui'), ('729.1047904191616', 'Poojashree'), ('730.3831168831168', 'Marianna'), ('732.1666666666666', 'Julyette Maria Josephine'), ('732.4260679079956', 'Maya'), ('732.7386018237082', 'Iva'), ('733.1351351351351', 'Erina'), ('734.0', 'Magali'), ('734.6018957345972', 'Veronika'), ('736.1650485436893', 'Di'), ('736.2288557213931', 'Viktoriya'), ('736.4809523809524', 'Megan'), ('736.9747747747748', 'Elizabeth'), ('737.7547169811321', 'Xiaoxi'), ('737.862676056338', 'Pia'), ('739.04802259887', 'Jade'), ('739.7727272727273', 'Ting Fei'), ('740.0214504596527', 'Yana'), ('740.5361842105264', 'Prerna'), ('740.5879828326181', 'Pilar'), ('743.1953125', 'Tjasa'), ('743.6062176165804', 'Sarah Rebecca'), ('744.0', 'Caty'), ('744.7453250222618', 'Danielle'), ('745.421052631579', 'Neda'), ('745.433962264151', 'Maia'), ('746.0962962962963', 'Despoina'), ('746.4803493449782', 'Yurina'), ('747.3172413793103', 'Tayisiya'), ('747.3695652173913', 'Saska'), ('747.4375', 'Amandine'), ('748.0', 'Maddison'), ('748.6622691292876', 'Ingrid Esperanza'), ('748.7238095238096', 'Jaqueline Adina'), ('748.8250591016548', 'Yuka'), ('749.3582089552239', 'Chiraz'), ('750.3207810320781', 'Angelina'), ('750.9460093896714', 'Ellen'), ('751.2668918918919', 'Valentine'), ('751.8679119412942', 'Martina'), ('753.2253164556962', 'Nicola'), ('753.8346456692914', 'Margot'), ('755.4649681528663', 'Cecilia'), ('755.5813953488372', 'Peggy'), ('756.2549019607843', 'Kaitlyn'), ('756.3141592920354', 'Lucy'), ('757.2253521126761', 'Cornelia'), ('758.06', 'Lisa Maria'), ('758.1714285714286', 'Romy'), ('758.5342960288808', 'Dejana'), ('759.2894995093228', 'Stefania'), ('759.5352697095435', 'Gaia'), ('760.4920634920635', 'Jaeda'), ('760.639175257732', 'Anna Arina'), ('762.1578947368421', 'Nidhi'), ('762.4081632653061', 'Kim Alice'), ('762.7606382978723', 'Anne Liz'), ('763.1014492753624', 'Georgia Andreea'), ('763.888198757764', 'Amy'), ('763.8900651465798', 'Barbara'), ('764.6785714285714', 'Deborah'), ('765.1395348837209', 'Kamonwan'), ('765.3777777777777', 'Zoe'), ('766.2549019607843', 'Ingrid'), ('766.4794520547945', 'Charlene'), ('767.4963503649635', 'Naiktha'), ('767.7730496453901', 'Jeannine'), ('768.560975609756', 'Yan'), ('770.8472222222222', 'Emi'), ('772.2402912621359', 'Kazusa'), ('772.2857142857143', 'Genevieve'), ('772.3186813186813', 'Szabina'), ('772.6981132075472', 'Momoko'), ('772.8571428571429', 'Akilah'), ('773.5666666666667', 'Leolia'), ('774.5654761904761', 'Marine'), ('774.64', 'Marcela'), ('774.6837606837607', 'Haruka'), ('775.2734375', 'Albina'), ('775.7269624573379', 'Rishika'), ('778.1648648648649', 'Nicolette'), ('780.7905027932961', 'Klaudia'), ('781.3218390804598', 'Etsuko'), ('781.6993464052288', 'Isabelle'), ('783.1711711711712', 'Marrit'), ('783.8288043478261', 'Gracia'), ('784.0465949820789', 'Seung Yeon'), ('784.8009049773756', 'Makiho'), ('785.0707482993197', 'Beatrice'), ('787.0', 'Maegan'), ('787.5416666666666', 'Ludmilla'), ('787.7645348837209', 'Sylwia'), ('788.0384615384615', 'Erica'), ('788.2622950819672', 'Mira'), ('789.2857142857143', 'Chengyiyi'), ('789.6113989637306', 'Ting Jr'), ('790.1538461538462', 'Adeliya'), ('790.46875', 'Asiya'), ('791.0756207674943', 'Yi'), ('791.1240506329113', 'Syna'), ('791.2352941176471', 'Zeel'), ('792.1927710843373', 'Sri Vaishnavi'), ('792.5', 'Gabriella'), ('794.4931506849315', 'Jiahui'), ('794.5416666666666', 'Zuzanna'), ('794.7118644067797', 'Gloria'), ('795.4736842105264', 'Pranjala'), ('795.6201232032854', 'Rocio'), ('797.2128378378378', 'Lidziya'), ('797.383606557377', 'Guadalupe'), ('798.3181818181819', 'Kylie'), ('799.0552486187845', 'Ionela Andreea'), ('799.0650406504066', 'Carolina Meligeni Rodrigues'), ('799.1332586786115', 'Yumi'), ('799.1875', 'Matilda'), ('799.8668224299065', 'Valeriya'), ('799.9940828402367', 'Kanami'), ('801.6712328767123', 'Yixuan'), ('801.6850649350649', 'Camilla'), ('801.6933333333334', 'Dalia'), ('801.84375', 'Andreea Amalia'), ('802.7222222222222', 'Thai Sa Grana'), ('803.3904761904762', 'Ashvarya'), ('803.7139479905437', 'Camelia Elena'), ('803.8666666666667', 'Domenica'), ('803.9764705882353', 'Amina'), ('804.6277056277056', 'Brooke'), ('804.873831775701', 'Kelly'), ('805.7028985507246', 'Dana'), ('806.2648401826484', 'Valerie'), ('807.616', 'Karla'), ('807.7222222222222', 'Kennedy'), ('808.4545454545455', 'Abbie'), ('808.5096774193548', 'Rutuja'), ('809.697247706422', 'Dianne'), ('810.6666666666666', 'Tinatin'), ('812.4581005586592', 'Sun Jung'), ('812.6', 'Ju Eun'), ('812.85', 'Meiling'), ('813.1351351351351', 'Giada'), ('813.1357142857142', 'Sowjanya'), ('814.4171122994652', 'Xiao'), ('818.2043795620438', 'Jessika'), ('819.3400503778338', 'Ema'), ('819.8425531914894', 'Min Hwa'), ('82.13112391930835', 'Na'), ('820.4563492063492', 'Alena'), ('820.59375', 'Luisa Marie'), ('822.3459915611814', 'Alix'), ('823.0909090909091', 'Ashling'), ('823.6306306306307', 'Clelia'), ('823.8770833333333', 'Vladimira'), ('823.9789029535865', 'Ji Hee'), ('824.3936170212766', 'Yukun'), ('825.039603960396', 'Malin'), ('825.7291666666666', 'Nazari'), ('825.972972972973', 'Leonie'), ('826.0238095238095', 'Komola'), ('826.1388888888889', 'Qianhui'), ('826.2619047619048', 'Claudia'), ('826.6486486486486', 'Phillis'), ('828.0675675675676', 'Nagi'), ('829.5625', 'Astra'), ('832.7818181818182', 'Corina'), ('832.9585365853659', 'Sakiko'), ('833.5061082024433', 'Ji Young'), ('834.1005025125628', 'Bernice'), ('834.2066115702479', 'Borislava'), ('835.1132075471698', 'Constanza'), ('836.6804511278195', 'Katherine'), ('837.7730496453901', 'Kristy'), ('838.1780821917808', 'Manca'), ('838.8065217391304', 'Tomoko'), ('839.4923664122138', 'Ofri'), ('840.0776699029126', 'Saray'), ('841.0514705882352', 'Nives'), ('841.4051724137931', 'Christine'), ('841.7167381974249', 'Tori'), ('841.8387096774194', 'Stamatia'), ('842.1553398058253', 'Carmen Raluca'), ('842.7045454545455', 'Eetee'), ('842.8446601941747', 'Ana Bianca'), ('843.6428571428571', 'Mirjam'), ('843.7260273972603', 'Alba'), ('843.9007633587786', 'Nicky'), ('844.0692307692308', 'Ulyana'), ('844.203007518797', 'Svenja'), ('844.3856812933026', 'Hae Sung'), ('844.7460317460317', 'Kotomi'), ('844.9310344827586', 'Yoon Young'), ('845.375', 'Imane Maelle'), ('845.740638002774', 'Lucia'), ('845.986301369863', 'Lucrezia'), ('846.2727272727273', 'Ludmila'), ('846.9154228855722', 'Kimberley'), ('847.0941176470589', 'Ilze'), ('848.4418604651163', 'Xiaorong'), ('848.9908952959029', 'Chihiro'), ('850.9791666666666', 'Anhzelika'), ('851.1224489795918', 'Marta Huqi'), ('851.5633802816901', 'Sharmada'), ('853.3908045977012', 'Fiona'), ('854.3170731707318', 'Brianna'), ('855.813627254509', 'Alicja'), ('856.0782608695653', 'Vladyslava'), ('857.1692307692308', 'Yukina'), ('857.9508196721312', 'Sang Hee'), ('858.4107142857143', 'Lea'), ('858.9173789173789', 'Seo Kyung'), ('859.2706766917294', 'Rachael'), ('859.3059701492538', 'Anamika'), ('859.8103448275862', 'Vaszilisza'), ('859.8644067796611', 'Luca'), ('860.8104265402843', 'Hirono'), ('861.5050505050505', 'Maria Constanza De Las Mercedes'), ('861.5102040816327', 'Janneke'), ('863.3225806451613', 'Joana'), ('863.5507246376811', 'Patcharin'), ('863.7826086956521', 'Desirae'), ('864.1538461538462', 'Shuo'), ('866.0454545454545', 'Oyku'), ('866.0693069306931', 'Min'), ('866.1075949367089', 'Iris'), ('867.5288461538462', 'Zalina'), ('868.2191780821918', 'Ilka'), ('868.6521739130435', 'Nadezda'), ('868.7624113475177', 'Paula Catalina'), ('868.8904109589041', 'Karine'), ('869.1666666666666', 'Mary'), ('869.1702127659574', 'Sylvia'), ('869.3571428571429', 'Ingrid Alexandra'), ('870.9007633587786', 'Liz Tatiane'), ('871.0790513833992', 'Kaori'), ('871.109375', 'Ivania'), ('871.6926829268293', 'Alona'), ('872.0', 'Ivone'), ('872.0930232558139', 'Breaunna'), ('873.6229508196722', 'Karoline'), ('874.8181818181819', 'Chisa'), ('875.0', 'Mahak'), ('875.9277108433735', 'Sarah Beth'), ('875.9772727272727', 'Clemence'), ('876.1730769230769', 'Eliessa'), ('876.7428571428571', 'Yuki'), ('878.0138888888889', 'Bhuvana'), ('878.1666666666666', 'Tornado Alicia'), ('878.3939393939394', 'Andrea Renee'), ('878.4606741573034', 'Ziyue'), ('878.6666666666666', 'Nam Yeon'), ('880.6527777777778', 'Morgane'), ('882.1071428571429', 'Katharine'), ('883.0777142857143', 'Natasha'), ('883.2352941176471', 'Quinn'), ('883.6090909090909', 'Karina'), ('883.7787610619469', 'Noelle'), ('885.0976744186047', 'Sonja'), ('885.7495107632094', 'Luciana'), ('886.1407407407407', 'Whitney'), ('887.2875', 'Liubov'), ('887.4545454545455', 'Lesedi Sheya'), ('887.502487562189', 'Kyle'), ('888.0055096418732', 'Hulya'), ('888.2213114754098', 'Elisabeth'), ('888.7272727272727', 'Satsuki'), ('889.8028169014085', 'Seone'), ('890.4455445544554', 'Nan Nan'), ('890.6351351351351', 'Carmen'), ('890.8728448275862', 'Ai'), ('891.2340425531914', 'Yuanyi'), ('891.6309523809524', 'Mayar'), ('892.3561643835617', 'Ylena'), ('894.3846153846154', 'Varunya'), ('896.7413793103449', 'Maja'), ('897.0974358974358', 'Manisha'), ('897.4873949579832', 'Yelena'), ('897.6951219512196', 'Shweta'), ('899.9150326797386', 'Libby'), ('900.75', 'Merel'), ('901.3333333333334', 'Kaitlin'), ('901.8717948717949', 'Ayan'), ('902.1470588235294', 'Jenny'), ('903.1666666666666', 'Francisca'), ('903.4289156626506', 'Oleksandra'), ('903.5769230769231', 'Karyn'), ('904.6538461538462', 'Blanca'), ('905.6324786324786', 'Sabrina'), ('907.3557312252965', 'Lu'), ('907.4', 'Ann'), ('908.156862745098', 'Lee'), ('908.3962264150944', 'Mara'), ('909.2', 'Jada'), ('910.396694214876', 'Katherine Gabriela'), ('910.5714285714286', 'Laura D'), ('911.7241379310345', 'Eudice Wong'), ('911.7619047619048', 'Suellen'), ('912.1077844311377', 'Tatsiana'), ('912.120218579235', 'Miriam'), ('912.1523178807947', 'Ai Wen'), ('912.71875', 'Blair'), ('913.4380165289256', 'Nika'), ('913.7272727272727', 'Draginja'), ('914.5321100917431', 'Hayley'), ('914.8607594936709', 'Hongrui'), ('915.5892857142857', 'Pavla'), ('915.5932203389831', 'Aymet'), ('916.559633027523', 'Zsofia'), ('916.7115384615385', 'Anna Katalina'), ('917.0', 'Brienne'), ('918.0769230769231', 'Maria Lourdes'), ('919.6147540983607', 'Ineke'), ('920.1276595744681', 'Dabin'), ('921.3333333333334', 'Valentina'), ('921.6216216216217', 'Nora'), ('922.2255639097745', 'Anaeve'), ('924.2782608695652', 'Kana'), ('924.8818897637796', 'Shakhlo'), ('924.9325842696629', 'Josepha'), ('925.0028776978418', 'Alina'), ('925.4230769230769', 'Jodie Anna'), ('925.9865771812081', 'Ho Ching'), ('927.0350877192982', 'Kassandra'), ('927.7647058823529', 'Charlotte'), ('928.3333333333334', 'Karola Patricia'), ('929.0599369085173', 'Dunja'), ('929.4388489208633', 'Napatsakorn'), ('929.4398496240601', 'Linda'), ('929.6928104575163', 'Natia'), ('930.7027027027027', 'Naima'), ('931.025641025641', 'Joanna'), ('932.8940397350993', 'Samira'), ('935.081081081081', 'Zoe Gwen'), ('935.2322946175638', 'Shivika'), ('936.3392857142857', 'Nozomi'), ('937.7878787878788', 'Wushuang'), ('937.7945205479452', 'Plobrung'), ('939.746835443038', 'Steffi'), ('940.2125603864735', 'Agni'), ('941.4724409448819', 'Catherine'), ('942.7969696969697', 'Erin'), ('943.421052631579', 'Qianqian'), ('943.5432098765432', 'Vladica'), ('943.7397959183673', 'Ainhoa'), ('943.7716535433071', 'Emmanuelle'), ('944.2432432432432', 'Sultan'), ('945.625', 'Alexandria'), ('946.8846153846154', 'Michele Alexandra'), ('946.8934426229508', 'Marlies'), ('947.3333333333334', 'Malou'), ('947.472972972973', 'Anita'), ('949.1239316239316', 'Denise'), ('949.6575342465753', 'Franziska'), ('949.7916666666666', 'Sirui'), ('949.7944444444445', 'Csilla'), ('949.8059701492538', 'Tamachan'), ('95.03465982028241', 'Kimiko'), ('950.0277777777778', 'Eleonora'), ('950.6263736263736', 'Miriana'), ('950.8813559322034', 'Chia Hsien'), ('950.9090909090909', 'Ester'), ('951.0075757575758', 'Veronica M'), ('951.4146341463414', 'Ariadna'), ('951.9764150943396', 'Alice Andrada'), ('952.4411764705883', 'Lynn'), ('952.5619834710744', 'Brynn'), ('954.046875', 'India'), ('954.6', 'Xiyu'), ('955.7833333333333', 'Radina'), ('956.0333333333333', 'Andreea'), ('956.5754716981132', 'Anastasia Evgenyevna'), ('957.2', 'Hanna'), ('957.9512195121952', 'Guiomar'), ('958.0955414012739', 'Madrie'), ('958.1327800829876', 'Verena'), ('959.6981132075472', 'Linnea'), ('960.4941860465116', 'Giorgia'), ('960.6770186335403', 'Agata'), ('961.2631578947369', 'Ana Victoria'), ('961.876923076923', 'Yuenu'), ('962.0188679245283', 'Natella'), ('962.5', 'Ida'), ('962.8536585365854', 'Kanika'), ('963.5', 'Terri'), ('964.1224489795918', 'Clementina Eugenia'), ('965.0', 'Rosa'), ('965.5343511450382', 'Noel'), ('966.0540540540541', 'Estela'), ('966.0588235294117', 'Shuyue'), ('966.4671052631579', 'Viktoryia'), ('967.2978723404256', 'Claudia Antonia'), ('967.6708860759494', 'Jessy'), ('967.9034090909091', 'Shao Yuan'), ('969.5882352941177', 'Anouk'), ('969.6588235294117', 'Taisiya'), ('969.8181818181819', 'Anette'), ('970.3620689655172', 'Andie K'), ('970.9846153846154', 'Brandy'), ('971.2865853658536', 'Beatriz Maria'), ('972.75', 'Lorraine M'), ('973.8617021276596', 'Yeong Won'), ('973.8717948717949', 'Maxine'), ('974.2702702702703', 'Lusine'), ('974.8', 'Simran Kaur'), ('975.3484848484849', 'Sinead'), ('975.6271186440678', 'Ksenija'), ('977.4539007092199', 'Daneika'), ('977.9640591966173', 'Chiara'), ('978.0229885057471', 'Khristina'), ('978.2708333333334', 'Eliza'), ('978.7321428571429', 'Ornella'), ('980.2232142857143', 'Ioana'), ('980.3333333333334', 'Ena'), ('980.575', 'Monika'), ('980.6666666666666', 'Suzuho'), ('980.9076923076923', 'Siqi'), ('981.7517730496454', 'Luisa'), ('981.9814814814815', 'Elizaveta Anna'), ('982.6666666666666', 'Lyann'), ('982.7222222222222', 'Suzan'), ('982.7397260273973', 'Sabastiani'), ('983.0410958904109', 'Yasmine'), ('983.1290322580645', 'Jazzamay'), ('983.359649122807', 'Yue'), ('983.4174757281553', 'Demi'), ('984.1714285714286', 'Rosie'), ('985.7211538461538', 'Gabrielle Faith'), ('986.3944099378882', 'Chun Yan'), ('986.82', 'Lindsey'), ('987.504761904762', 'Mia Nicole'), ('987.6739130434783', 'Margarida'), ('988.7425149700599', 'Li'), ('989.1904761904761', 'Pamela'), ('989.75', 'Zhuoma'), ('990.5210084033613', 'Brittany'), ('990.6', 'Kseniia'), ('992.4222222222222', 'Boyan'), ('992.4870588235294', 'Tyra'), ('992.7225433526012', 'Mi Rae'), ('993.1351351351351', 'Melisa'), ('993.175925925926', 'Marianne'), ('993.2105263157895', 'Josie'), ('993.4255319148937', 'Stefana'), ('994.0612244897959', 'Gabriela Nicole'), ('994.4769230769231', 'Dan Ni'), ('995.4074074074074', 'Guzal'), ('996.0408163265306', 'Lisa Marie'), ('996.2574257425742', 'Claudia Gianina'), ('996.8148148148148', 'Laili'), ('998.5238095238095', 'Sai Samhitha'), ('998.7722772277227', 'Cynthia'), ('999.0215053763441', 'Voni'), ('999.15625', 'Malene'), ('999.2', 'Frances'), ('999.375', 'Mi Zhuoma')] != [('200002', 'Mirjana', '186.76587795765877'), ('200009', 'Tamarine', '121.82273948075202'), ('200011', 'Katarina', '196.02280912364947'), ('200012', 'Jana', '178.44725111441306'), ('200020', 'Lisa', '101.55520833333334'), ('200028', 'Maureen', '1070.21875'), ('200033', 'Serena', '14.654294803817603'), ('200036', 'Nicole', '153.08190476190475'), ('200043', 'Virginie', '114.47024504084014'), ('200067', 'Patty', '385.8135593220339'), ('200069', 'Nadia', '61.8536866359447'), ('200072', 'Cara', '236.07412398921832'), ('200083', 'Alexandra', '281.5547667342799'), ('200107', 'Paola', '132.12638580931264'), ('200117', 'Kveta', '159.62397820163488'), ('200120', 'Jelena', '183.76478318002628'), ('200124', 'Anne', '220.68534906588005'), ('200554', 'Brenda', '128.8655462184874'), ('200617', 'Kimiko', '95.03465982028241'), ('200653', 'Yayuk', '114.78806907378336'), ('200697', 'Janette', '240.5306603773585'), ('200707', 'Romana', '402.49931972789113'), ('200712', 'Katerina', '205.56581986143186'), ('200729', 'Lindsay', '275.6055900621118'), ('200744', 'Svetlana', '428.6868029739777'), ('200748', 'Venus', '32.984862819299906'), ('200754', 'Jill', '121.9579326923077'), ('200764', 'Elena', '263.2128174123337'), ('200765', 'Katalin', '331.93949394939494'), ('200773', 'Stephanie', '170.97505422993493'), ('201075', 'Liezel', '284.8326771653543'), ('201077', 'Sophie', '576.5778364116095'), ('201086', 'Greta', '274.5718623481781'), ('201125', 'Elizabeth', '1140.1973684210527'), ('201211', 'Kyra', '263.821608040201'), ('201212', 'Francesca', '117.2057942057942'), ('201286', 'Anabel', '144.3264367816092'), ('201287', 'Maria Jose', '256.4249699879952'), ('201290', 'Daniela', '52.9563679245283'), ('201291', 'Nuria', '228.1888198757764'), ('201293', 'Catalina', '260.55779427359494'), ('201294', 'Marion', '105.36299435028249'), ('201303', 'Anne', '205.10836762688615'), ('201304', 'Elena', '237.35254691689008'), ('201305', 'Eleni', '189.36174863387978'), ('201308', 'Maria Elena', '194.2392065344224'), ('201311', 'Roberta', '150.96681415929203'), ('201318', 'Bethanie', '146.59709379128137'), ('201320', 'Svetlana', '35.72872340425532'), ('201325', 'Samantha', '116.44005102040816'), ('201329', 'Vera', '81.09357541899442'), ('201331', 'Iveta', '117.95684523809524'), ('201334', 'Zuzana', '273.0369928400955'), ('201339', 'Renata', '251.02574002574002'), ('201344', 'Klara', '137.5751708428246'), ('201345', 'Maria', '42.25396825396825'), ('201347', 'Jelena', '64.19160104986877'), ('201348', 'Casey', '242.36818181818182'), ('201349', 'Melinda', '169.13578500707214'), ('201353', 'Stanislava', '312.54158964879855'), ('201355', 'Flavia', '158.83442265795208'), ('201356', 'Eva', '235.0951008645533'), ('201362', 'Anais', '447.1293900184843'), ('201365', 'Edina', '211.67325428194994'), ('201366', 'Barbora', '102.04657933042212'), ('201367', 'Arantxa', '268.76683937823833'), ('201369', 'Carly', '318.69978858350953'), ('201370', 'Anastasia', '215.67872340425532'), ('201371', 'Vera', '141.8237951807229'), ('201373', 'Maria', '85.55817610062893'), ('201377', 'Yuliya', '238.01381909547737'), ('201380', 'Claudine', '383.6413199426112'), ('201383', 'Marie Eve', '300.56296296296296'), ('201384', 'Chia Jung', '359.3764705882353'), ('201386', 'Jie', '114.05571428571429'), ('201387', 'Sofia', '147.30172413793105'), ('201389', 'Zuzana', '295.0'), ('201390', 'Mervana', '337.5292682926829'), ('201392', 'Severine', '218.4701086956522'), ('201394', 'Anna Lena', '168.40409683426444'), ('201397', 'Shuai', '112.48686030428769'), ('201399', 'Emily', '457.0421511627907'), ('201400', 'Nicole', '417.51063829787233'), ('201401', 'Abigail', '322.00815217391306'), ('201402', 'Sesil', '162.3505747126437'), ('201403', 'Anna', '185.06484641638227'), ('201407', 'Evgenia', '414.66339869281046'), ('201410', 'Monique', '363.6527293844367'), ('201411', 'Aiko', '230.80138169257341'), ('201412', 'Anastasia', '248.8754098360656'), ('201414', 'Michaella', '185.3469387755102'), ('201416', 'Alona', '1175.0625'), ('201417', 'Marta', '187.96103896103895'), ('201419', 'Na', '82.13112391930835'), ('201420', 'Sania', '177.22695035460993'), ('201421', 'Ana', '54.12816188870152'), ('201423', 'Yvonne', '168.8637083993661'), ('201424', 'Shahar', '166.41358024691357'), ('201425', 'Lucie', '63.76451612903226'), ('201426', 'Pauline', '173.570987654321'), ('201427', 'Alize', '150.6958762886598'), ('201428', 'Mathilde', '225.54984894259817'), ('201429', 'Rika', '290.0614657210402'), ('201431', 'Aravane', '200.97080291970804'), ('201433', 'Sarah', '417.0098765432099'), ('201435', 'Kateryna', '184.2012012012012'), ('201437', 'Ivana', '297.1693989071038'), ('201438', 'Ekaterina', '200.24960753532181'), ('201440', 'Laura', '231.16949152542372'), ('201441', 'Emma', '412.71140939597313'), ('201442', 'Yung Jan', '166.6586270871985'), ('201443', 'Alexa', '278.57538994800694'), ('201444', 'Su Wei', '217.2493188010899'), ('201447', 'Vania', '185.75'), ('201448', 'Galina', '185.0057224606581'), ('201450', 'Tsvetana', '131.02074074074073'), ('201451', 'Kathrin', '291.4792817679558'), ('201452', 'Lourdes', '188.06095041322314'), ('201454', 'Akgul', '215.25185185185185'), ('201455', 'Elena', '110.90505359877488'), ('201456', 'Olga', '205.99685534591194'), ('201457', 'Jarmila', '149.46360759493672'), ('201458', 'Victoria', '92.10391822827938'), ('201459', 'Zi', '291.11032028469754'), ('201462', 'Alberta', '343.22432701894314'), ('201465', 'Kirsten', '178.02928257686676'), ('201466', 'Kaia', '127.06775067750678'), ('201468', 'Yaroslava', '211.41240310077518'), ('201469', 'Melanie', '385.1445182724253'), ('201470', 'Kristina', '167.9602510460251'), ('201471', 'Naomi', '582.2777777777778'), ('201472', 'Romina', '283.63246554364474'), ('201473', 'Vasilisa', '563.1287878787879'), ('201474', 'Agnieszka', '122.19587628865979'), ('201475', 'Ahsha', '728.5'), ('201476', 'Lauren', '420.47591522157995'), ('201477', 'Stephanie', '202.60919540229884'), ('201478', 'Varvara', '168.25584795321637'), ('201479', 'Olga', '295.493487698987'), ('201481', 'Tamira', '135.88910505836577'), ('201482', 'Andreja', '424.64521739130436'), ('201483', 'Madison', '268.11610486891385'), ('201484', 'Sandra', '294.9404958677686'), ('201485', 'Alla', '217.85922330097088'), ('201486', 'Aleksandra', '257.66568483063327'), ('201487', 'Jessica', '441.5659229208925'), ('201489', 'Mariya', '281.871335504886'), ('201490', 'Timea', '172.28095238095239'), ('201492', 'Andrea', '176.82479338842975'), ('201493', 'Angelique', '140.94803149606298'), ('201494', 'Raluca', '304.4619771863118'), ('201495', 'Dominika', '104.85343228200371'), ('201496', 'Caroline', '50.034274193548384'), ('201497', 'Agnes', '218.52747252747253'), ('201498', 'Karin', '252.99188311688312'), ('201499', 'Anastasia', '117.10590631364562'), ('201501', 'Olga', '208.31903945111492'), ('201502', 'Tatjana', '274.4980988593156'), ('201503', 'Ayumi', '191.73745173745175'), ('201504', 'Julia', '188.6425855513308'), ('201505', 'Ekaterina', '128.51776649746193'), ('201506', 'Sara', '197.24117647058824'), ('201508', 'Petra', '221.0070521861777'), ('201509', 'Ashley', '453.49585062240664'), ('201511', 'Ekaterina', '351.4223385689354'), ('201512', 'Monica', '205.06020558002936'), ('201513', 'Sabine', '203.5871080139373'), ('201514', 'Sorana', '213.75043630017453'), ('201515', 'Alisa', '266.65635738831617'), ('201516', 'Evgeniya', '258.0659340659341'), ('201517', 'Magdalena', '188.7824561403509'), ('201518', 'Yanina', '150.74395161290323'), ('201520', 'Petra', '75.06681034482759'), ('201521', 'Carla', '155.3848797250859'), ('201522', 'Jelena', '449.3012939001848'), ('201523', 'Marina', '172.7581818181818'), ('201524', 'Urszula', '229.35687022900763'), ('201525', 'Eva', '380.8822463768116'), ('201526', 'Julie', '284.07964601769913'), ('201527', 'Stefanie', '241.69011406844106'), ('201528', 'Melanie', '223.3237885462555'), ('201529', 'Kristie', '445.18918918918916'), ('201530', 'Gail', '526.2644836272041'), ('201531', 'Mariana', '260.6950998185118'), ('201532', 'Anastasia', '321.59166666666664'), ('201533', 'Shuai', '237.83595113438045'), ('201534', 'Asia', '453.43392070484583'), ('201535', 'Coco', '270.5896860986547'), ('201537', 'Patricia', '324.9109848484849'), ('201538', 'Isabella', '523.5121293800539'), ('201539', 'Christina', '228.9607390300231'), ('201540', 'Kristina', '263.1496062992126'), ('201541', 'Chanelle', '195.57309941520467'), ('201542', 'Olivia', '359.037527593819'), ('201543', 'Emelyn', '672.730407523511'), ('201545', 'Anastasija', '192.35827664399093'), ('201547', 'Michelle', '168.98067632850243'), ('201548', 'Ajla', '302.84831460674155'), ('201549', 'Petra', '188.66216216216216'), ('201550', 'Tamaryn', '386.7025316455696'), ('201551', 'Arantxa', '179.59712230215828'), ('201553', 'Lenka', '391.9670781893004'), ('201554', 'Vitalia', '293.81748071979433'), ('201555', 'Polona', '173.26180257510728'), ('201556', 'Lucie', '169.75233644859813'), ('201557', 'Corinna', '356.8219696969697'), ('201558', 'Lauren', '615.8323699421966'), ('201559', 'Irena', '288.74423480083857'), ('201560', 'Kinnie', '606.1467576791808'), ('201561', 'Claire', '406.7672131147541'), ('201562', 'Silvia', '298.4636510500808'), ('201563', 'Darya', '422.06724137931036'), ('201564', 'Lenka', '430.4562937062937'), ('201565', 'Katarzyna', '396.4295302013423'), ('201566', 'Agnes', '501.8861283643892'), ('201567', 'Alexandra', '274.33022388059703'), ('201568', 'Kristina', '300.7413043478261'), ('201570', 'Vesna', '240.0448979591837'), ('201571', 'Masa', '263.1043307086614'), ('201572', 'Regina', '289.60283687943263'), ('201573', 'Laura', '242.01152737752162'), ('201577', 'Heidi', '417.44323483670297'), ('201578', 'Kai Chen', '272.08855291576674'), ('201579', 'Yurika', '322.17758620689654'), ('201580', 'Xinyun', '309.35767790262173'), ('201581', 'Chun Mei', '692.390625'), ('201582', 'Jing Jing', '369.1620469083156'), ('201583', 'Yana', '725.9122807017544'), ('201584', 'Ksenia', '229.89227166276348'), ('201585', 'Sloane', '259.63589743589745'), ('201586', 'Heather', '167.50632911392404'), ('201587', 'Bojana', '177.8061797752809'), ('201588', 'Anna', '239.51930501930502'), ('201589', 'Sharon', '296.5792682926829'), ('201590', 'Alison', '263.70631067961165'), ('201591', 'Margalita', '325.5912596401028'), ('201592', 'Beatriz', '463.1709741550696'), ('201593', 'Irina Camelia', '285.84388185654007'), ('201594', 'Simona', '145.9185185185185'), ('201595', 'Misaki', '208.95263157894738'), ('201596', 'Johanna', '261.31778929188255'), ('201597', 'Kurumi', '165.96132596685084'), ('201598', 'Noppawan', '374.93926247288505'), ('201599', 'Andrea', '270.69384615384615'), ('201600', 'Jamie', '381.56892230576443'), ('201601', 'Chelsey', '719.3061224489796'), ('201602', 'Beatrice', '676.8051118210863'), ('201603', 'Shelby', '293.45733788395904'), ('201604', 'Irina', '358.4449244060475'), ('201605', 'Mandy', '299.5691176470588'), ('201606', 'Rebecca', '414.0690690690691'), ('201607', 'Sally', '529.583908045977'), ('201608', 'Sheng Nan', '451.8657487091222'), ('201609', 'Yi Miao', '418.2566137566138'), ('201610', 'Zarina', '222.81428571428572'), ('201611', 'Daria', '314.1638795986622'), ('201612', 'Junri', '262.30884808013354'), ('201613', 'Arina', '344.75'), ('201614', 'Caroline', '217.325'), ('201615', 'Lesia', '205.17590361445784'), ('201616', 'Lauren', '208.0751879699248'), ('201617', 'Ana', '293.9810495626822'), ('201618', 'Fatma', '648.2984054669704'), ('201619', 'Madison', '219.54063604240284'), ('201620', 'Monica', '222.481884057971'), ('201621', 'Mona', '273.57517899761336'), ('201622', 'Iryna', '419.9982269503546'), ('201631', 'Nicha', '515.3191489361702'), ('201638', 'Estrella', '347.34943639291464'), ('201640', 'Maria Teresa', '359.81081081081084'), ('201641', 'Nadia', '702.8116438356165'), ('201642', 'Fatima', '673.7509157509157'), ('201643', 'Eva', '460.72909698996654'), ('201646', 'Maria Joao', '486.6092544987147'), ('201647', 'Jasmin', '445.3071553228621'), ('201648', 'Naomi', '381.3239130434783'), ('201649', 'Lenka', '378.54046997389037'), ('201650', 'Irina', '445.6770072992701'), ('201652', 'Ksenia', '447.35916824196596'), ('201653', 'Ellen', '754.8923076923077'), ('201654', 'Sandra', '793.5132075471698'), ('201655', 'Anna', '360.4993234100135'), ('201656', 'Tadeja', '343.0985324947589'), ('201657', 'Nastja', '593.1772853185596'), ('201659', 'Melanie', '440.77246653919696'), ('201660', 'Tereza', '490.3264705882353'), ('201661', 'Tina', '382.1750380517504'), ('201662', 'Karolina', '344.97713097713097'), ('201663', 'Ekaterina', '374.29928315412184'), ('201664', 'Pemra', '465.24962852897477'), ('201665', 'Ipek', '655.8983666061706'), ('201666', 'Cagla', '311.87854251012146'), ('201667', 'Ling', '418.81925343811395'), ('201668', 'Alexandra', '367.9034941763727'), ('201670', 'Amra', '415.9078341013825'), ('201671', 'Ksenia', '423.12334801762114'), ('201672', 'Nigina', '376.7617554858934'), ('201674', 'Sabina', '376.1625'), ('201675', 'So Jung', '514.1732026143791'), ('201676', 'Ye Ra', '431.3144424131627'), ('201677', 'Mi', '554.3953934740883'), ('201678', 'Sacha', '340.2890442890443'), ('201679', 'Varatchaya', '450.4642082429501'), ('201682', 'Nudnida', '436.66881028938906'), ('201683', 'Bianca', '411.2672955974843'), ('201687', 'Lina', '847.7010869565217'), ('201688', 'Claire', '476.3121693121693'), ('201690', 'Nina', '250.36305732484075'), ('201691', 'Dia', '383.7832512315271'), ('201692', 'Michaela', '511.1923076923077'), ('201693', 'Timea', '201.32704402515722'), ('201694', 'Silvia', '673.017094017094'), ('201696', 'Laura', '396.82570162481534'), ('201697', 'Kristyna', '389.73932584269664'), ('201698', 'Liana Gabriela', '387.87113402061857'), ('201699', 'Martina', '575.696335078534'), ('201700', 'Nikola', '485.7513966480447'), ('201701', 'Basak', '587.9803278688524'), ('201702', 'Malou', '947.3333333333334'), ('201703', 'Yi Fan', '381.5512572533849'), ('201705', 'Alina', '1060.0184049079755'), ('201707', 'Sachie', '368.26881720430106'), ('201708', 'Natalie', '394.5745222929936'), ('201709', 'Yulia', '262.494623655914'), ('201815', 'Petra', '360.89268292682925'), ('202085', 'Galina', '449.05308219178085'), ('202135', 'Vanessa', '371.69403973509935'), ('202231', 'Shiho', '1070.5714285714287'), ('202264', 'Cory Ann', '406.5511363636364'), ('202270', 'Habiba', '1051.623188405797'), ('202273', 'Liga', '567.9464544138929'), ('202277', 'Mariana', '1211.258064516129'), ('202280', 'Olga', '525.3591954022988'), ('202290', 'Kyung Mi', '533.433770014556'), ('202297', 'Maria', '461.9377990430622'), ('202302', 'Maria Fernanda', '373.0431137724551'), ('202306', 'Diana', '472.8539007092199'), ('202313', 'Darija', '464.95631067961165'), ('202320', 'Sandra', '494.09510086455333'), ('202336', 'Magdalena', '571.8631346578367'), ('202337', 'Klaudia', '780.7905027932961'), ('202339', 'Ayu Fani', '479.5530612244898'), ('202342', 'Daniella', '625.4092920353983'), ('202347', 'Karolina', '406.56919642857144'), ('202348', 'Lina', '371.00802568218296'), ('202349', 'Rushmi', '573.8729603729604'), ('202354', 'Andrea', '496.8243243243243'), ('202356', 'Nikola', '614.3153526970955'), ('202357', 'Madalina', '324.63613231552165'), ('202359', 'Chin Wei', '385.2651515151515'), ('202360', 'Marrit', '783.1711711711712'), ('202361', 'Erika', '397.3320537428023'), ('202362', 'Teodora', '411.579476861167'), ('202365', 'Lavinia', '612.736'), ('202376', 'Raquel', '578.120792079208'), ('202378', 'Kirsten', '1084.4173913043478'), ('202379', 'Chieh Yu', '533.9586374695864'), ('202381', 'Ksenia', '527.0520547945206'), ('202384', 'Kyra', '727.8778280542987'), ('202386', 'Sung Hee', '570.6993736951983'), ('202387', 'Vlada', '585.0383795309168'), ('202389', 'Sandra', '551.0725593667546'), ('202391', 'Akiko', '466.9746434231379'), ('202393', 'Andrea', '553.5460122699386'), ('202394', 'Camila', '647.9409090909091'), ('202395', 'Maria', '351.9477756286267'), ('202400', 'Anna', '626.9345372460497'), ('202401', 'Amanda', '775.6847826086956'), ('202403', 'Leticia', '481.3229166666667'), ('202405', 'Alexis', '589.8897637795276'), ('202406', 'Natasa', '666.2853403141361'), ('202408', 'Amanda', '684.5194444444444'), ('202409', 'Alisa', '933.8396226415094'), ('202410', 'Sofia', '461.0702987697715'), ('202412', 'Maria', '680.1504424778761'), ('202413', 'Florencia', '364.22522522522524'), ('202414', 'Catherine', '969.9928571428571'), ('202415', 'Ximena', '646.3770491803278'), ('202416', 'Nungnadda', '537.577922077922'), ('202417', 'Tetiana', '437.4119658119658'), ('202418', 'Lara', '284.14021164021165'), ('202419', 'Barbara', '697.5'), ('202420', 'An Sophie', '460.8932038834951'), ('202421', 'Alison', '277.85227272727275'), ('202422', 'Shuko', '421.44179894179894'), ('202423', 'Sarah', '367.33684210526314'), ('202424', 'Conny', '390.0'), ('202425', 'Samantha', '699.2705882352941'), ('202426', 'Julia', '543.4917012448133'), ('202427', 'Johanna', '256.5040431266846'), ('202428', 'Kiki', '287.71625344352617'), ('202429', 'Camila', '316.69181034482756'), ('202430', 'Alize', '412.9482288828338'), ('202431', 'Tetyana', '398.83478260869566'), ('202432', 'Hilda', '673.6635071090047'), ('202433', 'Anna Giulia', '428.5496828752643'), ('202434', 'Aleksandra', '215.03548387096774'), ('202435', 'Vanda', '696.4126984126984'), ('202436', 'Reka Luca', '323.1388101983003'), ('202437', 'Anastasia', '460.7960687960688'), ('202438', 'Ani', '574.4025641025642'), ('202439', 'Silvia', '1013.3469387755102'), ('202440', 'Paula', '374.0572207084469'), ('202441', 'Nina', '1181.1190476190477'), ('202442', 'Tatia', '1075.0'), ('202443', 'Valeria', '389.49271844660194'), ('202444', 'Kamilla', '1162.8301886792453'), ('202445', 'Valeria', '339.99632352941177'), ('202446', 'Eugenie', '421.3669467787115'), ('202447', 'Alexandra', '502.8416149068323'), ('202448', 'Zoe Gwen', '935.081081081081'), ('202449', 'Victoria', '465.5233333333333'), ('202450', 'Jana', '262.31929824561405'), ('202451', 'Nicole', '653.0375'), ('202452', 'Yi Jing', '656.8787276341948'), ('202453', 'Saisai', '297.39032258064515'), ('202454', 'Erika', '397.39929328621906'), ('202455', 'Yue Yue', '444.96190476190475'), ('202456', 'Alexandra', '435.7653846153846'), ('202457', 'Bibiane', '550.1941544885177'), ('202458', 'Ashleigh', '331.3681818181818'), ('202459', 'Bojana', '513.439024390244'), ('202460', 'Ons', '435.1470588235294'), ('202461', 'Julia', '404.706390328152'), ('202462', 'Karen', '674.4780600461894'), ('202463', 'Ines', '546.3460559796438'), ('202464', 'Yuliana', '694.0'), ('202465', 'Maria', '501.8732943469786'), ('202466', 'Nadia', '861.640625'), ('202467', 'Elitsa', '418.39748953974896'), ('202468', 'Jessica', '386.18394648829434'), ('202469', 'Garbine', '229.3774193548387'), ('202470', 'Annika', '265.79487179487177'), ('202471', 'Karen', '675.4691943127962'), ('202472', 'Laura', '481.1577909270217'), ('202473', 'Annalisa', '583.9347826086956'), ('202475', 'Jasmina', '513.1592689295039'), ('202476', 'Csilla', '894.8397790055249'), ('202477', 'Dinah', '268.05945945945945'), ('202478', 'Tara', '475.2979683972912'), ('202479', 'Grace', '389.61876832844575'), ('202480', 'Richel', '246.19871794871796'), ('202481', 'Chi Chi', '464.1367781155015'), ('202482', 'Barbara', '460.1609195402299'), ('202483', 'Sandra', '510.56216216216217'), ('202484', 'Nicole', '408.45185185185187'), ('202485', 'Jana', '568.4027149321267'), ('202486', 'Mallory', '143.48235294117646'), ('202487', 'Nastassja', '554.5290322580645'), ('202488', 'Valentyna', '368.14331210191085'), ('202489', 'Carina', '416.3666666666667'), ('202490', 'Rebecca', '511.37888198757764'), ('202491', 'Varvara', '573.6621621621622'), ('202492', 'Qiang', '383.4714587737844'), ('202493', 'Ekaterine', '553.9434782608696'), ('202494', 'Elina', '203.95604395604394'), ('202495', 'Jennifer', '477.20512820512823'), ('202496', 'Samantha', '424.93981481481484'), ('202497', 'Victoria', '540.4605263157895'), ('202498', 'Julia', '405.8921568627451'), ('202499', 'Donna', '223.50900900900902'), ('202500', 'Maria', '393.4439834024896'), ('202501', 'Hyun Hui', '729.0671936758894'), ('202502', 'So Ra', '572.2654545454545'), ('202503', 'Luksika', '284.22813688212926'), ('202504', 'Ying Ying', '403.8775981524249'), ('202505', 'Belinda', '499.7090909090909'), ('202506', 'Margarita', '371.1981566820277'), ('202507', 'Wing Yau Venise', '585.2589641434263'), ('202508', 'Yuxuan', '545.449074074074'), ('202522', 'Stefania', '618.7228525121556'), ('202524', 'Giulia', '576.740350877193'), ('202525', 'Erika', '792.7021696252466'), ('202526', 'Marina', '513.1254019292604'), ('202529', 'Natalia', '589.568306010929'), ('202533', 'Estelle', '571.8520084566596'), ('202536', 'Ana', '556.0942028985507'), ('202537', 'Federica', '626.0774647887324'), ('202539', 'Alison', '579.0348162475822'), ('202540', 'Neda', '708.8378378378378'), ('202543', 'Alexia', '694.5176470588235'), ('202544', 'Vivienne', '659.2103004291846'), ('202551', 'Eleni', '742.5714285714286'), ('202552', 'Afroditi', '1155.0392156862745'), ('202553', 'Stamatia', '841.8387096774194'), ('202555', 'Stephanie', '541.0248618784531'), ('202557', 'Hulya', '888.0055096418732'), ('202558', 'Veronika', '447.5016501650165'), ('202559', 'Anna', '531.44921875'), ('202560', 'Olga', '614.2371794871794'), ('202561', 'Evelyn', '471.5439093484419'), ('202564', 'Anna', '528.8242894056848'), ('202568', 'Yumi', '784.9147465437788'), ('202570', 'Hao Ching', '1153.936507936508'), ('202571', 'Chi Fan', '1039.3902439024391'), ('202573', 'Wen Hsin', '440.35214446952597'), ('202574', 'Remi', '494.6111111111111'), ('202575', 'Kumiko', '488.76107382550333'), ('202578', 'Laura Ioana', '516.1982942430703'), ('202579', 'Giulia', '527.75'), ('202580', 'Federica', '637.367139959432'), ('202581', 'Chanel', '343.2835365853659'), ('202583', 'Megan', '622.6036585365854'), ('202588', 'Nicole', '608.3569131832797'), ('202590', 'Lena', '500.8991354466859'), ('202591', 'Katie', '627.6082004555809'), ('202593', 'Diana', '550.6178707224335'), ('202594', 'Elena', '517.8571428571429'), ('202595', 'Alexandra', '806.576'), ('202596', 'Mihaela', '376.7356115107914'), ('202598', 'Natalie', '582.6028368794326'), ('202599', 'Alice', '625.4850948509485'), ('202600', 'Viktoriya', '598.6225165562914'), ('202602', 'Patrycja', '601.0849673202614'), ('202604', 'Despina', '665.686684073107'), ('202605', 'Julia', '448.98591549295776'), ('202606', 'Claudia', '661.1353965183753'), ('202607', 'Yi', '693.3742802303263'), ('202608', 'Akari', '704.9618138424821'), ('202610', 'Aki', '710.9617224880383'), ('202611', 'Oksana', '533.9652351738241'), ('202614', 'Jacqueline', '545.6203966005666'), ('202615', 'Natasha', '847.62'), ('202616', 'Justyna', '585.8517745302714'), ('202619', 'Ema', '734.71'), ('202620', 'Yuliya', '487.0730593607306'), ('202621', 'Elixane', '579.5214723926381'), ('202622', 'Lyudmyla', '382.82479784366575'), ('202623', 'Valentine', '691.1423076923077'), ('202626', 'Stephanie', '398.5627906976744'), ('202627', 'Fiona', '1041.7790697674418'), ('202628', 'Maryna', '276.67868852459014'), ('202629', 'Gabriela', '465.2834890965732'), ('202630', 'Eleanor', '1067.7619047619048'), ('202631', 'Lara', '731.8966666666666'), ('202633', 'Nina', '626.2072368421053'), ('202634', 'Chen', '524.7444668008048'), ('202635', 'Jin A', '492.8915187376726'), ('202636', 'Zuzana', '518.3550724637681'), ('202637', 'Shivika', '935.2322946175638'), ('202638', 'Chiaki', '437.73858921161826'), ('202639', 'Akiko', '504.54647887323944'), ('202640', 'Irina', '522.2766666666666'), ('202641', 'Natalia', '600.1'), ('202642', 'Gioia', '567.8518518518518'), ('202643', 'Yasmin', '688.6819923371647'), ('202644', 'Ting Fei', '739.7727272727273'), ('202645', 'Jessy', '967.6708860759494'), ('202646', 'Ana Clara', '524.9192825112108'), ('202647', 'Madrie', '958.0955414012739'), ('202648', 'Zarah', '709.625'), ('202649', 'Lynn', '920.6734693877551'), ('202651', 'Lisa', '459.5925925925926'), ('202652', 'Kim Alice', '762.4081632653061'), ('202653', 'Denisa', '419.1633466135458'), ('202654', 'Martina', '1000.8086419753087'), ('202656', 'Estelle', '714.7387387387388'), ('202657', 'Dijana', '669.2982456140351'), ('202658', 'Audrey', '576.5012531328321'), ('202659', 'Tereza', '418.1658878504673'), ('202660', 'Jade', '674.0'), ('202661', 'Lucy', '756.3141592920354'), ('202662', 'Camilla', '845.3106382978723'), ('202663', 'Magda', '300.3974358974359'), ('202664', 'Roxane', '479.51738241308794'), ('202665', 'Jessica', '776.3333333333334'), ('202666', 'Nicola', '649.751256281407'), ('202667', 'Natela', '566.4943396226415'), ('202668', 'Sina', '728.7443609022556'), ('202669', 'Cristina', '395.9633333333333'), ('202671', 'Cristina Andreea', '439.5747863247863'), ('202672', 'Ekaterina', '541.26953125'), ('202673', 'Anastasiya', '1020.3069306930693'), ('202674', 'Alexandra', '761.5461254612546'), ('202675', 'Aselya', '1181.27868852459'), ('202676', 'Prerna', '740.5361842105264'), ('202677', 'Ekaterina', '1035.1683673469388'), ('202678', 'Polina', '440.11052631578946'), ('202679', 'Yuliya', '658.64'), ('202680', 'Maria', '664.4128440366973'), ('202681', 'Gabriela', '580.905701754386'), ('202682', 'Sara', '1037.076923076923'), ('202683', 'Wan Ting', '701.4009009009009'), ('202684', 'Lin', '497.42124542124543'), ('202685', 'Misa', '466.3361111111111'), ('202686', 'Di', '736.1650485436893'), ('202687', 'Ran', '557.2607003891051'), ('202688', 'Isabella', '386.4824902723735'), ('202689', 'Vaszilisza', '859.8103448275862'), ('202691', 'Ani', '977.9270833333334'), ('202692', 'Radina', '955.7833333333333'), ('202693', 'Ya Hsuan', '586.865'), ('202694', 'Teliana', '461.06702898550725'), ('202695', 'Aleksandrina', '578.07962529274'), ('202696', 'Federica', '894.3545706371191'), ('202697', 'Anne Liz', '762.7606382978723'), ('202698', 'Alessondra', '1145.1641791044776'), ('202699', 'Ryann', '1069.0379746835442'), ('202700', 'Simone', '982.58'), ('202701', 'Irina', '273.65966386554624'), ('202702', 'Tereza', '347.5242718446602'), ('202703', 'Constance', '570.2723004694835'), ('202704', 'Rocio', '762.0532150776053'), ('202705', 'Veronica', '450.6966019417476'), ('202706', 'Manon', '537.3451776649746'), ('202707', 'Myrtille', '485.40168539325845'), ('202719', 'Kelly S', '312.7584269662921'), ('202779', 'Tinatin', '810.6666666666666'), ('202823', 'Mariana', '760.0'), ('202832', 'Katerina', '646.5019083969465'), ('202839', 'Vladimira', '823.8770833333333'), ('202841', 'Alicja', '855.813627254509'), ('202845', 'Vojislava', '555.6572164948453'), ('202857', 'Ria', '669.448275862069'), ('202858', 'Anne', '365.46034816247584'), ('202861', 'Tomoko', '828.09375'), ('202863', 'Natsumi', '490.70992366412213'), ('202873', 'Ana', '509.5892857142857'), ('202874', 'Chayenne', '593.9759036144578'), ('202876', 'Simona', '797.6269662921349'), ('202878', 'Indire', '627.7027027027027'), ('202882', 'Maya', '704.4129930394431'), ('202886', 'Sherazad', '737.1428571428571'), ('202890', 'Agustina', '565.3363914373089'), ('202891', 'Mari', '483.27852998065765'), ('202894', 'Justine', '443.1351888667992'), ('202895', 'Ayumi', '579.3763919821827'), ('202896', 'Yurina', '746.4803493449782'), ('202898', 'Romana Caroline', '669.8542372881356'), ('202900', 'Maria Fernanda', '447.0668058455115'), ('202901', 'Antonela', '1051.7096774193549'), ('202902', 'Marija', '521.0897009966777'), ('202906', 'Kaitlyn', '705.1531531531532'), ('202908', 'Miyabi', '447.93283582089555'), ('202911', 'Anastasiya', '407.95652173913044'), ('202913', 'Jara', '1121.767857142857'), ('202916', 'Georgina', '314.4109589041096'), ('202917', 'Raluca Elena', '672.2258064516129'), ('202918', 'Danielle', '643.331983805668'), ('202919', 'Chang', '575.4626436781609'), ('202920', 'Yi', '936.7860465116279'), ('202921', 'Shiho', '449.41388174807196'), ('202922', 'Michaela', '425.4343434343434'), ('202924', 'Anastasia', '669.2153392330383'), ('202925', 'Francesca', '798.2897959183673'), ('202928', 'Kotomi', '844.7460317460317'), ('202929', 'Korina', '567.0507399577167'), ('202930', 'Jessica', '904.7658227848101'), ('202931', 'Nicola', '864.8258426966293'), ('202932', 'Marta', '504.7244897959184'), ('202933', 'Celine', '619.094512195122'), ('202934', 'June', '1189.0'), ('202935', 'Krista', '522.984693877551'), ('202936', 'Kanae', '635.346516007533'), ('202937', 'Yuka', '646.8995433789954'), ('202938', 'Zuzana', '520.1380597014926'), ('202939', 'Makoto', '516.6615384615385'), ('202987', 'Maiko', '438.4245810055866'), ('203095', 'Ioana', '957.8421052631579'), ('203145', 'Rui', '1209.625'), ('203191', 'Danica', '380.609375'), ('203195', 'Tomoko', '1238.75'), ('203212', 'Danielle', '893.4137168141593'), ('203221', 'Yoon Young', '844.9310344827586'), ('203222', 'Hae Sung', '844.3856812933026'), ('203224', 'Etsuko', '781.3218390804598'), ('203228', 'Virginie', '890.4780361757106'), ('203236', 'Angelina', '677.4700193423598'), ('203271', 'Jillian', '721.14'), ('203272', 'Ai', '841.9686520376175'), ('203273', 'Maya', '682.8406862745098'), ('203277', 'Sakiko', '832.9585365853659'), ('203278', 'Kaori', '871.0790513833992'), ('203279', 'Nadja', '631.8181818181819'), ('203280', 'Gracia', '783.8288043478261'), ('203281', 'Amandine', '597.5297297297298'), ('203284', 'Katerina', '582.2656546489563'), ('203286', 'Veronika', '1053.8061224489795'), ('203288', 'Jia Jing', '682.961038961039'), ('203290', 'Piia', '668.2581196581197'), ('203293', 'Karolina', '625.8927038626609'), ('203297', 'Nadiya', '515.4014423076923'), ('203299', 'Marion', '819.0524017467249'), ('203303', 'Ana', '534.9107142857143'), ('203308', 'Tatiana', '742.8783185840708'), ('203313', 'Kristy', '837.7730496453901'), ('203315', 'Alexa', '489.4848484848485'), ('203317', 'Amandine', '876.4279069767442'), ('203318', 'Shu Ying', '1042.6802325581396'), ('203325', 'Martina', '696.7325301204819'), ('203326', 'Lisa', '538.9791271347249'), ('203328', 'Allie', '616.5055555555556'), ('203330', 'Ionela Andreea', '799.0552486187845'), ('203333', 'Yumi', '812.5773420479303'), ('203335', 'Veronica', '1273.838888888889'), ('203341', 'Sanaz', '703.1372549019608'), ('203349', 'Milana', '626.441935483871'), ('203352', 'Jasmina', '782.965811965812'), ('203353', 'Nikola', '797.2966101694915'), ('203354', 'Martina', '317.94520547945206'), ('203357', 'Libby', '899.9150326797386'), ('203358', 'Khristina', '1087.972972972973'), ('203360', 'Lauren', '848.126582278481'), ('203362', 'Vivian', '558.0348583877995'), ('203363', 'Vanesa', '579.437984496124'), ('203364', 'Tatiana', '562.8954081632653'), ('203365', 'Mailen', '410.8463541666667'), ('203368', 'Jasmin', '751.9386281588447'), ('203370', 'Tori', '841.7167381974249'), ('203376', 'Eugeniya', '620.6746411483253'), ('203378', 'Ksenia', '622.453744493392'), ('203379', 'Marina', '510.5781990521327'), ('203380', 'Julia', '742.8611111111111'), ('203381', 'Ganna', '628.8181818181819'), ('203384', 'Julia', '771.8067885117493'), ('203386', 'Miki', '586.2250489236791'), ('203388', 'Poojashree', '729.1047904191616'), ('203389', 'Danielle Rose', '434.68'), ('203393', 'Martina', '694.8266129032259'), ('203398', 'Danielle', '353.4719101123595'), ('203399', 'Ellen', '715.0604026845638'), ('203400', 'Tea', '1068.7457627118645'), ('203404', 'Svenja', '843.2311557788945'), ('203405', 'Ana', '878.8'), ('203406', 'Lucia', '757.5247524752475'), ('203407', 'Pilar', '740.5879828326181'), ('203411', 'Macall', '607.3360995850622'), ('203414', 'Nicole', '679.4014084507043'), ('203415', 'Ilona', '452.625'), ('203418', 'Natalia', '1137.2954545454545'), ('203419', 'Nanuli', '542.7168141592921'), ('203420', 'Avgusta', '1208.4285714285713'), ('203422', 'Elisabeth', '914.2566371681415'), ('203423', 'Marianne', '993.175925925926'), ('203427', 'Lena Marie', '657.8934169278997'), ('203428', 'Vivien', '607.2810218978102'), ('203429', 'Tamara', '577.373801916933'), ('203431', 'Keren', '643.422641509434'), ('203432', 'Rashmi', '1089.2100840336134'), ('203433', 'Rishika', '775.7269624573379'), ('203435', 'Dalila', '424.83561643835617'), ('203437', 'Anastasia', '768.875'), ('203440', 'Alexandra', '616.9638989169675'), ('203441', 'Sviatlana', '691.9934640522875'), ('203442', 'Aminat', '613.195652173913'), ('203443', 'Sofie', '724.5'), ('203446', 'Alexandra', '928.4886363636364'), ('203449', 'Sarah Rebecca', '743.6062176165804'), ('203450', 'Yana', '658.0246305418719'), ('203451', 'Marina', '604.295652173913'), ('203453', 'Aranza', '490.4144736842105'), ('203454', 'Elizabeth', '685.5346534653465'), ('203455', 'Andreea Roxana', '726.2657657657658'), ('203456', 'Jelena', '718.2207792207793'), ('203457', 'Polona', '833.6775'), ('203458', 'Cristina Madalina', '720.6428571428571'), ('203459', 'Lucie', '774.558521560575'), ('203460', 'Martina', '629.4468085106383'), ('203462', 'Kateryna', '344.7721518987342'), ('203463', 'Nuria', '713.6415094339623'), ('203464', 'Benedetta', '705.4688346883469'), ('203465', 'Amanda', '496.64941176470586'), ('203466', 'Iris', '866.1075949367089'), ('203467', 'Dariya', '1133.9636363636364'), ('203468', 'Alexandra', '994.2234636871508'), ('203469', 'Albina', '775.2734375'), ('203470', 'Anna', '928.7887323943662'), ('203474', 'Nika', '825.7028571428572'), ('203475', 'Carol', '564.1434426229508'), ('203476', 'Alejandra', '1116.6883116883116'), ('203477', 'Silvia', '872.2721518987341'), ('203480', 'Charlene', '766.4794520547945'), ('203481', 'Oceane', '911.1595744680851'), ('203482', 'Jennifer', '916.4569536423841'), ('203483', 'Jan', '592.5990783410139'), ('203484', 'Viktoryia', '845.7530864197531'), ('203485', 'Julia', '692.8122605363984'), ('203486', 'Celine', '821.992277992278'), ('203487', 'Andrea', '640.0540540540541'), ('203488', 'Doroteja', '520.9397993311037'), ('203489', 'Hao Chen', '680.1050228310502'), ('203492', 'Alyona', '496.9431818181818'), ('203493', 'Hirono', '860.8104265402843'), ('203494', 'Emi', '770.8472222222222'), ('203495', 'Chinami', '615.2230215827338'), ('203496', 'Sophie', '611.3353293413173'), ('203497', 'Simone', '1110.9722222222222'), ('203498', 'Elizabeth', '623.0714285714286'), ('203499', 'Gabrielle Faith', '985.7211538461538'), ('203500', 'Sachia', '400.8093385214008'), ('203501', 'Taylor', '348.2173913043478'), ('203502', 'Lindsey', '986.82'), ('203503', 'Kazusa', '772.2402912621359'), ('203504', 'Miyu', '594.9036697247707'), ('203505', 'Tereza', '1208.5535714285713'), ('203507', 'Giorgia', '843.6716417910447'), ('203509', 'Diana', '454.04788732394366'), ('203510', 'Nathalia', '543.031185031185'), ('203511', 'Alexandra', '580.3488372093024'), ('203513', 'Robin', '431.19607843137254'), ('203514', 'Katarzyna', '493.671826625387'), ('203516', 'Nadiya', '833.5096525096525'), ('203517', 'Chihiro', '870.6453488372093'), ('203518', 'Paula', '432.7289972899729'), ('203520', 'Arabela', '658.5074074074074'), ('203521', 'Andrea', '408.486301369863'), ('203522', 'Yevgeniya', '724.8712871287129'), ('203523', 'Isabel', '724.9178743961353'), ('203524', 'Morgane', '812.2753623188406'), ('203525', 'Anaeve', '922.2255639097745'), ('203526', 'Tammi', '601.906914893617'), ('203527', 'Khristina', '926.5274261603375'), ('203528', 'Nicola', '852.8411214953271'), ('203529', 'Sonja', '879.4974619289341'), ('203530', 'Viktorija', '454.87593984962405'), ('203531', 'Klara', '944.5289256198347'), ('203532', 'Michaela', '983.0747126436781'), ('203533', 'Anna Karolina', '345.51020408163265'), ('203534', 'Melis', '520.0968992248062'), ('203535', 'Sultan', '944.2432432432432'), ('203536', 'Nadezda', '868.6521739130435'), ('203537', 'Victoria', '425.08252427184465'), ('203538', 'Polina', '541.8262295081968'), ('203540', 'Anastasia', '660.0541871921182'), ('203541', 'Elizaveta', '468.5403225806452'), ('203542', 'Daria', '579.6666666666666'), ('203543', 'Stefanie', '1078.6511627906978'), ('203545', 'Monika', '1209.5'), ('203546', 'Anja', '725.3893333333333'), ('203547', 'Zuzana', '694.4581395348837'), ('203548', 'Agnese', '694.0659898477157'), ('203549', 'Olga', '592.1270903010034'), ('203550', 'Brianna', '854.3170731707318'), ('203552', 'Risa', '317.2361809045226'), ('203553', 'Riko', '495.22641509433964'), ('203554', 'Yuriko', '982.5393258426966'), ('203555', 'Mai', '550.2509960159363'), ('203556', 'Yuuki', '608.1309090909091'), ('203557', 'Mana', '689.891129032258'), ('203558', 'Lou', '661.2633928571429'), ('203559', 'Clothilde', '620.4120171673819'), ('203560', 'Whitney', '873.0103626943005'), ('203561', 'Charlotte', '1129.861111111111'), ('203562', 'Erin', '760.3974358974359'), ('203563', 'Emily J', '1041.948717948718'), ('203564', 'Chloe', '675.2445414847161'), ('203565', 'Alice', '911.6255506607929'), ('203566', 'Christina', '706.2669683257918'), ('203567', 'Ipek', '598.1783783783784'), ('203568', 'Naz', '1087.3823529411766'), ('203569', 'Olga', '668.3825136612022'), ('203570', 'Bermet', '717.7932330827068'), ('203572', 'Polina', '620.6008771929825'), ('203574', 'Lisanne', '673.6507936507936'), ('203575', 'Danka', '302.83268482490274'), ('203576', 'Kai Lin', '522.6561403508772'), ('203577', 'Caroline B', '1161.5675675675675'), ('203578', 'Fangzhou', '406.9281767955801'), ('203579', 'Chalena', '650.1367521367522'), ('203581', 'Elizabeth Anita Alexandria', '1006.2982456140351'), ('203584', 'Adriana', '361.5919540229885'), ('203585', 'Tatsiana', '912.1077844311377'), ('203586', 'Ioana Loredana', '646.0441176470588'), ('203587', 'Diana', '963.0'), ('203588', 'Cristina', '837.1969696969697'), ('203589', 'Camelia Elena', '803.7139479905437'), ('203591', 'Katy', '492.6608695652174'), ('204220', 'Dianne', '809.697247706422'), ('204222', 'Tyra', '992.4870588235294'), ('204223', 'Peangtarn', '514.586319218241'), ('204231', 'Samantha', '1040.40625'), ('204232', 'Paula Catalina', '868.7624113475177'), ('204233', 'Ingrid Esperanza', '748.6622691292876'), ('204235', 'Victoria', '1099.8367346938776'), ('204236', 'Ivette', '1136.8535031847134'), ('204240', 'Intissar', '1192.5454545454545'), ('204241', 'Fatyha', '1015.5'), ('204246', 'Lesley', '514.7174515235457'), ('204249', 'Csilla', '977.5013927576601'), ('204255', 'Paulina', '1022.5'), ('204256', 'Annie', '1042.037037037037'), ('204261', 'Jeannine', '767.7730496453901'), ('204262', 'Karolina', '790.4990925589836'), ('204263', 'Janina', '699.7864583333334'), ('204265', 'Martina', '716.4880636604775'), ('204267', 'Petra', '764.9778393351801'), ('204268', 'Natalie', '889.5686274509804'), ('204282', 'Anastasiya', '814.1554054054054'), ('204285', 'Ji Young', '833.5061082024433'), ('204286', 'Seung Yeon', '784.0465949820789'), ('204288', 'Ji Hee', '781.4336734693877'), ('204289', 'Mi Rae', '992.7225433526012'), ('204290', 'Min Hwa', '819.8425531914894'), ('204291', 'Na Lae', '608.7791798107255'), ('204292', 'Hyojung', '1069.3208955223881'), ('204293', 'Seo Kyung', '858.9173789173789'), ('204294', 'Su Jeong', '426.3886462882096'), ('204295', 'Christine', '841.4051724137931'), ('204297', 'Anna Arina', '760.639175257732'), ('204298', 'Viktorija', '559.3382899628252'), ('204299', 'Ashling', '823.0909090909091'), ('204301', 'Barbara', '817.0503144654089'), ('204302', 'Ashley', '1036.9322033898304'), ('204304', 'Jawairiah', '1070.5648854961833'), ('204306', 'Trang', '1029.3196721311476'), ('204309', 'Stephanie', '1085.9809523809524'), ('204314', 'Rita', '1115.6666666666667'), ('204318', 'Margarida', '987.6739130434783'), ('204319', 'Sofia', '1071.1351351351352'), ('204320', 'Maria', '1220.904761904762'), ('204322', 'Agata', '960.6770186335403'), ('204327', 'Mai', '945.8666666666667'), ('204329', 'Kimberley', '1077.1702127659576'), ('204330', 'Alice', '757.4059040590406'), ('204335', 'Seda', '1003.5367647058823'), ('204336', 'Cecilie Lundgaard', '1141.842105263158'), ('204338', 'Nazari', '825.7291666666666'), ('204342', 'Nan Nan', '890.4455445544554'), ('204345', 'Polina', '1004.5175438596491'), ('204352', 'Yvonne', '733.6431718061674'), ('204353', 'Chihiro', '864.5165289256198'), ('204355', 'Katherine', '859.8135593220339'), ('204356', 'Emily', '1137.5128205128206'), ('204357', 'Caroline', '831.92'), ('204360', 'Carolina', '812.9764150943396'), ('204361', 'Tanaporn', '1113.2325581395348'), ('204363', 'Camila', '916.7307692307693'), ('204364', 'Josie', '993.2105263157895'), ('204366', 'Victoria', '809.776397515528'), ('204367', 'Valerie', '730.6881720430108'), ('204369', 'Natasha', '1207.75'), ('204370', 'Julie', '1121.4102564102564'), ('204374', 'Frederikke', '1244.3333333333333'), ('204376', 'Demi', '983.4174757281553'), ('204377', 'Indy', '485.9559748427673'), ('204378', 'Matilda', '799.1875'), ('204379', 'Brenda', '827.4954954954954'), ('204380', 'Rebecca', '1192.6632653061224'), ('204381', 'Louise', '1019.520325203252'), ('204382', 'Valeria', '1103.178947368421'), ('204383', 'Beatrice', '762.469512195122'), ('204384', 'Agnes', '544.9512195121952'), ('204385', 'Marisa', '1067.3413173652696'), ('204386', 'Vincenza', '1214.1142857142856'), ('204387', 'Carolina', '622.8725868725869'), ('204388', 'Lisa Maria', '758.06'), ('204389', 'Anna Maria', '1057.1584158415842'), ('204390', 'Pia', '729.6136363636364'), ('204391', 'Sofia', '646.4561403508771'), ('204394', 'Valentini', '479.8914728682171'), ('204395', 'Brooke', '711.3770491803278'), ('204397', 'Arina', '988.8534031413612'), ('204398', 'Maftuna', '1173.75'), ('204399', 'Yana', '1019.9629629629629'), ('204400', 'Natella', '962.0188679245283'), ('204403', 'Priscila', '1132.0'), ('204404', 'Ah', '1156.340425531915'), ('204406', 'Ki Ryang', '1164.090909090909'), ('204408', 'Zi', '661.3205741626795'), ('204409', 'Yoshimi', '1096.9130434782608'), ('204410', 'Kanami', '799.9940828402367'), ('204411', 'Storm', '573.6708333333333'), ('204412', 'Belinda', '932.1125'), ('204413', 'Azra', '556.2303370786517'), ('204414', 'Nattawadee', '1177.622641509434'), ('204415', 'Alexandra', '981.0702247191011'), ('204416', 'Robyn', '1054.606896551724'), ('204417', 'Hana', '1083.407894736842'), ('204418', 'Daniella', '1062.3'), ('204419', 'Ana Sofia', '496.7156398104265'), ('204420', 'Marcela', '496.35593220338984'), ('204421', 'Ana Paula', '1112.0245398773006'), ('204422', 'Valeria', '1232.2'), ('204424', 'Hayley', '914.5321100917431'), ('204426', 'Anett', '367.2274678111588'), ('204427', 'Sara', '464.9339622641509'), ('204428', 'Miriam', '1015.6524822695036'), ('204430', 'Antonia', '589.1298076923077'), ('204431', 'Anna Lena', '287.06635071090045'), ('204433', 'Syna', '791.1240506329113'), ('204434', 'Ysaline', '458.86633663366337'), ('204435', 'Emma', '1184.625'), ('204436', 'Jessica', '1089.9884393063585'), ('204437', 'Daneika', '977.4539007092199'), ('204438', 'Sabrina', '1025.6526315789474'), ('204524', 'Kim', '613.8346774193549'), ('204970', 'Karina Ildor', '696.9606060606061'), ('205010', 'Magy', '1092.7621951219512'), ('205056', 'Marta', '798.5882352941177'), ('205123', 'Alice', '651.2678571428571'), ('205125', 'Gaelle', '1028.9708737864078'), ('205144', 'Juliana', '1110.0816326530612'), ('205170', 'Anamika', '859.3059701492538'), ('205191', 'Fatimah', '1070.9463414634147'), ('205204', 'Natalia', '749.6095717884131'), ('205270', 'Martina', '831.9251700680272'), ('205344', 'Beatrice', '743.3013698630137'), ('205356', 'Blessing', '1196.8064516129032'), ('205363', 'Cristina', '598.08'), ('205371', 'Shao Yuan', '967.9034090909091'), ('205392', 'Alessia', '1036.8349056603774'), ('205393', 'Agni', '940.2125603864735'), ('205401', 'Sun Jung', '812.4581005586592'), ('205412', 'Anouk', '1032.224358974359'), ('205413', 'Nicolette', '778.1648648648649'), ('205422', 'Lara', '920.5872093023256'), ('205433', 'Sylwia', '787.7645348837209'), ('205439', 'Giulia', '1105.4458598726114'), ('205462', 'Melisa', '993.1351351351351'), ('205486', 'Blessing', '1251.673076923077'), ('205489', 'Ekaterina', '1120.7931034482758'), ('205492', 'Ashmitha', '1018.6637931034483'), ('205495', 'Asha', '1151.95'), ('205497', 'Jana', '846.9828767123288'), ('205512', 'Misa', '1001.8085106382979'), ('205522', 'Yoo Ri', '1263.7666666666667'), ('205525', 'Lu', '907.3557312252965'), ('205526', 'Sara', '1050.9178082191781'), ('205556', 'Ioana', '1080.0555555555557'), ('205562', 'Naoko', '1180.3828125'), ('205576', 'Kady', '1055.020202020202'), ('205577', 'Marcella', '657.0171919770773'), ('205588', 'Yasmine', '972.7345132743363'), ('205591', 'Paula Cristina', '508.4679802955665'), ('205594', 'Aleksandra', '1028.6904761904761'), ('205596', 'Kateryna', '852.3478260869565'), ('205606', 'Viktoria', '299.6986301369863'), ('205609', 'Marcela Guimaraes', '1143.7957746478874'), ('205610', 'Marcela', '1174.1489361702127'), ('205615', 'Julia', '832.207100591716'), ('205616', 'Xin', '694.4808743169399'), ('205642', 'Nevena', '1031.0'), ('205646', 'Adnya', '1122.4423076923076'), ('205647', 'Tereza', '786.047619047619'), ('205649', 'Pavla', '915.5892857142857'), ('205651', 'Ester', '950.9090909090909'), ('205652', 'Eden', '1153.2553191489362'), ('205655', 'Christie', '1112.875'), ('205658', 'Ronke', '1072.857142857143'), ('205681', 'Karina', '882.3758865248227'), ('205686', 'Keri', '1018.6534653465346'), ('205698', 'Diana', '915.0235849056604'), ('205700', 'Emma', '784.240174672489'), ('205709', 'Brittany', '938.6777777777778'), ('205714', 'Julie', '745.4150943396227'), ('205723', 'Anna', '589.570652173913'), ('205724', 'Ineke', '919.6147540983607'), ('205731', 'Ema', '946.2142857142857'), ('205736', 'Carmen', '876.66472303207'), ('205738', 'Karin', '649.9320388349514'), ('205740', 'Dunja', '910.3070175438596'), ('205741', 'Natasha', '925.0068728522336'), ('205743', 'Ai', '998.4620689655172'), ('205755', 'Guadalupe', '790.8422535211267'), ('205759', 'Margarita', '734.7166666666667'), ('205761', 'Johanna', '1011.1739130434783'), ('205764', 'Ingrid Alexandra', '869.3571428571429'), ('205765', 'Dalia', '801.6933333333334'), ('205770', 'Adriana', '1048.4444444444443'), ('205772', 'Deeon', '1115.0851063829787'), ('205778', 'Stephanie', '1046.5884773662551'), ('205779', 'Noel', '965.5343511450382'), ('205787', 'Francesca', '776.0992907801418'), ('205789', 'Na Ri', '573.5197368421053'), ('205790', 'Alexandra', '860.8079470198676'), ('205796', 'Chun Yan', '986.3944099378882'), ('205797', 'Cynthia', '998.7722772277227'), ('205798', 'Yi', '921.5733333333334'), ('205810', 'Iryna', '993.2272727272727'), ('205812', 'Anastasiya', '1092.3584905660377'), ('205813', 'Julia', '787.3385416666666'), ('205815', 'Eri', '321.23595505617976'), ('205824', 'Ema', '803.3813229571984'), ('205826', 'Veronika', '938.3714285714286'), ('205829', 'Sabrina', '1115.8979591836735'), ('205831', 'Isabella', '701.0719696969697'), ('205833', 'Isabela', '1114.99375'), ('205834', 'Karina', '869.4357976653697'), ('205835', 'Beatriz Maria', '971.2865853658536'), ('205837', 'Melina', '1017.2560553633218'), ('205840', 'Monique', '726.3315789473684'), ('205842', 'Carla', '630.7457627118644'), ('205846', 'Li', '988.7425149700599'), ('205847', 'Carla', '597.8743169398907'), ('205848', 'Nathaly', '617.4615384615385'), ('205850', 'Yoko', '1128.901098901099'), ('205855', 'Elyne', '652.1984732824427'), ('205856', 'Anouk', '911.0778443113772'), ('205861', 'Makiho', '784.8009049773756'), ('205863', 'Veronika', '1016.5'), ('205869', 'Alix', '822.3459915611814'), ('205870', 'Silvia', '1158.1186440677966'), ('205873', 'Anna', '726.5689655172414'), ('205874', 'Stefania', '1028.2814371257484'), ('205875', 'Chantal', '609.90625'), ('205877', 'Angelique', '434.77777777777777'), ('205878', 'Ekaterina', '1085.9857142857143'), ('205890', 'Barbara', '704.8923766816143'), ('205892', 'Giuliana', '584.359375'), ('205894', 'Olawaseun', '1397.5'), ('205898', 'Abiodun', '1039.6744186046512'), ('205900', 'Beauty', '1382.1538461538462'), ('205907', 'Rana', '1117.6666666666667'), ('205909', 'Ola', '660.8924731182796'), ('205911', 'Florencia', '941.3030303030303'), ('205913', 'Luciana', '880.0536779324055'), ('205917', 'Kyle', '887.502487562189'), ('205918', 'Ulrikke', '506.39344262295083'), ('205920', 'Darya', '708.9009900990098'), ('205921', 'Vladislava', '1006.1769911504425'), ('205922', 'Chanelle', '587.027027027027'), ('205923', 'Abbie', '808.4545454545455'), ('205924', 'Malin', '825.039603960396'), ('205925', 'Aliaksandra', '441.9846743295019'), ('205927', 'Alina', '893.7272727272727'), ('205930', 'Hye Min', '1020.28125'), ('205932', 'Samantha', '1052.38'), ('205933', 'Eduarda', '656.2851711026616'), ('205935', 'Stefani', '1167.3333333333333'), ('205936', 'Maya', '1179.5555555555557'), ('205938', 'Carolina', '546.5490196078431'), ('205939', 'Anna', '542.1207729468599'), ('205941', 'Ganna', '573.6335078534031'), ('205944', 'Lidziya', '797.2128378378378'), ('205945', 'Shiori', '1070.6666666666667'), ('205946', 'Se Jin', '1122.4545454545455'), ('205948', 'Elena', '1101.55'), ('205949', 'Dilara', '1248.2'), ('205951', 'Busra', '1140.981981981982'), ('205953', 'Zsofia', '916.559633027523'), ('205954', 'Ivana', '929.7837837837837'), ('205955', 'Yawna', '1110.4594594594594'), ('205963', 'Giulia', '766.5333333333333'), ('205964', 'Laetitia', '677.4458598726114'), ('205967', 'Alejandra', '1041.6666666666667'), ('205969', 'Yana', '601.5174129353234'), ('205970', 'Beatriz', '1128.4444444444443'), ('205972', 'Mariona', '1163.0'), ('205977', 'Verena', '866.6914893617021'), ('205981', 'Gabriela', '891.4626865671642'), ('205982', 'Lucia', '1072.9156626506024'), ('205983', 'Josepha', '924.9325842696629'), ('205984', 'Linda', '916.4411764705883'), ('205988', 'Carmen', '947.5849056603773'), ('205989', 'Elisabeth', '749.4285714285714'), ('205992', 'Stephanie', '823.2670454545455'), ('205998', 'Manisha', '897.0974358974358'), ('206000', 'Kana', '924.2782608695652'), ('206002', 'Tamara', '881.8430232558139'), ('206003', 'Laura', '733.6889763779527'), ('206005', 'Diana', '798.7529411764706'), ('206007', 'Laura', '662.4254385964912'), ('206008', 'Liz Tatiane', '870.9007633587786'), ('206009', 'Giovanna', '1197.0'), ('206011', 'Flavia', '933.0194552529183'), ('206012', 'Flavia', '1086.0625'), ('206016', 'Asiya', '790.46875'), ('206017', 'Xiao', '814.4171122994652'), ('206022', 'Sirui', '949.7916666666666'), ('206024', 'Voni', '999.0215053763441'), ('206025', 'Yuka', '858.2450980392157'), ('206026', 'Laili', '996.8148148148148'), ('206027', 'Angelica', '637.6573705179283'), ('206028', 'Alena', '714.1326530612245'), ('206029', 'Bianca', '788.8869565217391'), ('206030', 'Julia', '783.424'), ('206031', 'Carolin', '592.2685714285715'), ('206032', 'Lisa Marie', '989.175925925926'), ('206033', 'Saana', '1117.88'), ('206034', 'Katerina', '1072.3333333333333'), ('206035', 'Petra', '905.1104294478528'), ('206037', 'Daniela', '519.1768707482993'), ('206038', 'Mariana', '926.6914285714286'), ('206041', 'Laura', '1022.2115384615385'), ('206042', 'Andrea', '1093.313725490196'), ('206043', 'Victoire', '1138.8490566037735'), ('206044', 'Bernice', '834.1005025125628'), ('206045', 'Quirine', '633.9770491803279'), ('206047', 'Carlotta', '1121.4414414414414'), ('206049', 'Jovana', '553.87'), ('206051', 'Marina', '711.544'), ('206053', 'Costanza', '1039.9928057553957'), ('206054', 'Helen', '1162.3125'), ('206055', 'Claudia Antonia', '967.2978723404256'), ('206056', 'Claudia Gianina', '996.2574257425742'), ('206057', 'Simona', '782.7252747252747'), ('206060', 'Ani', '620.7623762376238'), ('206063', 'Caroline', '816.65625'), ('206065', 'Liubov', '887.2875'), ('206069', 'Marianna', '637.9914893617022'), ('206070', 'Sofiya', '541.1570881226054'), ('206071', 'Erin', '1106.3275862068965'), ('206072', 'Nina', '1121.9622641509434'), ('206073', 'Eleanor', '1057.3870967741937'), ('206074', 'Ebony', '1073.1752577319587'), ('206075', 'Hiroko', '534.890243902439'), ('206077', 'Miharu', '523.2788844621514'), ('206079', 'Brooke', '1160.1458333333333'), ('206080', 'Karis', '1001.0679611650486'), ('206081', 'Caitlin', '652.5196078431372'), ('206083', 'Rachael', '859.2706766917294'), ('206086', 'Mai', '957.7058823529412'), ('206091', 'Yolande', '1068.4619883040937'), ('206095', 'Valeriya', '1022.25'), ('206096', 'Viktoriya', '1169.4814814814815'), ('206098', 'Lucia', '788.8130841121496'), ('206099', 'Raquel', '1065.0882352941176'), ('206101', 'Nikola', '1075.5029239766081'), ('206102', 'Ankita', '618.4714285714285'), ('206103', 'Ashvarya', '803.3904761904762'), ('206104', 'Sharmada', '851.5633802816901'), ('206105', 'Rutuja', '808.5096774193548'), ('206106', 'Prarthana G', '653.5070422535211'), ('206107', 'Zhaoxuan', '629.0081967213115'), ('206108', 'Jennifer', '326.64102564102564'), ('206110', 'Aishwarya', '1024.625'), ('206111', 'Hua Chen', '726.1737089201878'), ('206115', 'Carolina', '883.1845238095239'), ('206116', 'Sofia', '1050.469696969697'), ('206117', 'Amina', '1187.0'), ('206122', 'Chiara', '874.2444444444444'), ('206123', 'Desiree', '1032.2666666666667'), ('206124', 'Tereza', '487.1965811965812'), ('206126', 'Ju Eun', '812.6'), ('206130', 'Tjasa', '743.1953125'), ('206131', 'Francesca', '891.8471337579617'), ('206132', 'Martina', '1082.9313725490197'), ('206133', 'Yanina', '1023.5898876404494'), ('206134', 'Valeria', '843.5209580838323'), ('206135', 'Lutfiye', '1190.0629921259842'), ('206136', 'Deniz', '494.2918287937743'), ('206137', 'Oleksandra', '1070.409691629956'), ('206143', 'Tanya', '1023.089430894309'), ('206144', 'Xenia', '661.2222222222222'), ('206145', 'Diana', '781.0616113744076'), ('206146', 'Catalina', '417.07086614173227'), ('206147', 'Sofia', '780.7583333333333'), ('206149', 'Gabriela', '923.6264591439689'), ('206150', 'Napatsakorn', '929.4388489208633'), ('206151', 'Kamonwan', '765.1395348837209'), ('206152', 'Anna', '761.9615384615385'), ('206154', 'Varunya', '894.3846153846154'), ('206156', 'Lorenza', '1231.2727272727273'), ('206157', 'Natalie', '733.1492537313433'), ('206160', 'Zalina', '867.5288461538462'), ('206161', 'Alisa', '1130.1267605633802'), ('206162', 'Kamila', '568.2547169811321'), ('206163', 'Elizaveta Anna', '981.9814814814815'), ('206164', 'Yelena', '897.4873949579832'), ('206166', 'Jade', '700.3270142180095'), ('206168', 'Taisiya', '969.6588235294117'), ('206170', 'Rachel', '1147.8526315789475'), ('206171', 'Alice', '853.2352941176471'), ('206172', 'Chiara', '1183.7407407407406'), ('206173', 'Beatrice', '1029.9769230769232'), ('206174', 'Cecilia', '692.07299270073'), ('206175', 'Tess', '696.2878787878788'), ('206176', 'Samira', '932.8940397350993'), ('206177', 'Joana', '803.9454545454546'), ('206178', 'Susanne', '417.8053097345133'), ('206179', 'Nika', '1145.642857142857'), ('206180', 'Ghislaine', '1150.6607142857142'), ('206181', 'Eva', '735.4837209302326'), ('206182', 'Sabrina', '879.2727272727273'), ('206183', 'Cindy', '607.5764705882353'), ('206184', 'Kelly', '803.2569832402235'), ('206186', 'Ekaterina', '1103.125'), ('206187', 'Varvara', '1114.527027027027'), ('206188', 'Viktoryia', '1104.1830985915492'), ('206190', 'Anastasia', '1015.6833333333333'), ('206192', 'Ximena', '1101.3064516129032'), ('206194', 'Gabriela', '517.7974137931035'), ('206195', 'Ya', '1225.75'), ('206197', 'Xi Yao', '714.8653846153846'), ('206199', 'Ai Wen', '912.1523178807947'), ('206200', 'Alice Andrada', '951.9764150943396'), ('206205', 'Min', '866.0693069306931'), ('206207', 'Francesca', '877.6940639269407'), ('206208', 'Giulia', '797.895652173913'), ('206209', 'Maria', '1116.7941176470588'), ('206211', 'Anna', '755.8634146341464'), ('206213', 'Amy', '605.6197916666666'), ('206214', 'Franziska', '915.9846153846154'), ('206216', 'Olga', '589.388'), ('206217', 'Andjela', '1063.4736842105262'), ('206219', 'Oceane', '553.8112244897959'), ('206220', 'Mathilde', '963.45'), ('206221', 'Magalie', '1036.1214953271028'), ('206222', 'Madeline', '1217.469387755102'), ('206223', 'Sabina', '773.2608695652174'), ('206225', 'Evgeniya', '912.5755395683453'), ('206227', 'Cemre', '1123.3855421686746'), ('206228', 'Anette', '969.8181818181819'), ('206229', 'Natia', '929.6928104575163'), ('206230', 'Alicia', '1076.1882352941177'), ('206231', 'Alexandra', '1025.8503937007874'), ('206233', 'Abbi', '1110.0434782608695'), ('206235', 'Rocio', '1216.138888888889'), ('206239', 'Marina', '1116.394366197183'), ('206240', 'Patricia', '563.7251461988304'), ('206242', 'Beatriz', '413.5833333333333'), ('206243', 'Priscila', '1137.2424242424242'), ('206244', 'Gulchekhra', '1196.0'), ('206245', 'Ofri', '839.4923664122138'), ('206248', 'Iva', '782.2297297297297'), ('206249', 'Nicky', '843.9007633587786'), ('206250', 'Michaela', '930.5444444444445'), ('206251', 'Kimberley', '776.6428571428571'), ('206252', 'Barbora', '482.9059405940594'), ('206253', 'Ivonne', '591.3809523809524'), ('206255', 'Patricia Maria', '403.935'), ('206258', 'Dunja', '977.1011235955057'), ('206259', 'Katarina', '1099.1985815602836'), ('206262', 'Veronica M', '951.0075757575758'), ('206265', 'Patricia', '1155.4489795918366'), ('206268', 'Dejana', '850.3064516129032'), ('206269', 'Danijela', '1107.0919540229886'), ('206270', 'Ashley', '960.984'), ('206271', 'Chisa', '874.8181818181819'), ('206273', 'Claudia', '1055.3680981595091'), ('206275', 'Maud', '1013.4761904761905'), ('206276', 'Ainhoa', '943.7397959183673'), ('206277', 'Marine', '774.5654761904761'), ('206278', 'Lyann', '982.6666666666666'), ('206279', 'Stephanie', '744.9586776859504'), ('206280', 'Elena', '1041.1176470588234'), ('206281', 'Mayya', '619.9064748201439'), ('206283', 'Ziyue', '878.4606741573034'), ('206287', 'Ani', '1054.5243902439024'), ('206288', 'Tamari', '1146.3934426229507'), ('206289', 'Maria', '498.3878504672897'), ('206290', 'Nives', '841.0514705882352'), ('206291', 'Mary Ann', '1188.7096774193549'), ('206292', 'Astra', '829.5625'), ('206294', 'Yue', '983.359649122807'), ('206297', 'Nour', '1202.2'), ('206298', 'Nidhi', '762.1578947368421'), ('206302', 'Gaia', '759.5352697095435'), ('206305', 'Sylvia', '869.1702127659574'), ('206307', 'Sherry', '1024.0116279069769'), ('206308', 'Katrine Isabel', '1111.08'), ('206311', 'Ekaterina', '975.6143790849674'), ('206313', 'Lee', '908.156862745098'), ('206316', 'Libi', '1035.327868852459'), ('206317', 'Rona', '1125.5471698113208'), ('206318', 'Gulben', '1168.3396226415093'), ('206320', 'Vita', '1201.25'), ('206321', 'Boyan', '992.4222222222222'), ('206323', 'Leah', '1179.6216216216217'), ('206326', 'Dana', '874.3333333333334'), ('206329', 'Montserrat', '541.952380952381'), ('206330', 'Daniela', '911.4528301886793'), ('206331', 'Jazmin', '1035.46'), ('206332', 'Camila', '703.7586206896551'), ('206333', 'Linda', '907.8590604026846'), ('206334', 'Alena', '1160.6857142857143'), ('206335', 'Jesika', '501.5860215053763'), ('206336', 'Julia', '661.8320610687023'), ('206337', 'Clelia', '823.6306306306307'), ('206338', 'Stefania', '871.703488372093'), ('206339', 'Olga', '994.2792207792207'), ('206340', 'Paula', '1070.8273381294964'), ('206341', 'Maria Constanza De Las Mercedes', '861.5050505050505'), ('206342', 'Ornella', '978.7321428571429'), ('206343', 'Stephanie Mariel', '1035.5548387096774'), ('206344', 'Fernanda', '632.03'), ('206345', 'Victoria', '564.8894736842105'), ('206346', 'Denise', '956.2231404958678'), ('206348', 'Aimee', '1200.2'), ('206349', 'Mayo', '407.029702970297'), ('206350', 'Christina', '874.1980198019802'), ('206351', 'Rio', '1125.0363636363636'), ('206352', 'Noelle', '883.7787610619469'), ('206354', 'Lina', '1186.3684210526317'), ('206357', 'Angelique', '853.6762589928057'), ('206358', 'Claudia', '1131.0384615384614'), ('206360', 'Yihong', '1209.625'), ('206361', 'Nicole', '960.8412698412699'), ('206362', 'Naiktha', '767.4963503649635'), ('206363', 'Anna', '588.4468085106383'), ('206364', 'Paula', '976.5729166666666'), ('206365', 'Breaunna', '872.0930232558139'), ('206367', 'Spurti', '1149.3125'), ('206368', 'Veronika', '500.6933333333333'), ('206369', 'Emiliya', '1092.2771084337348'), ('206370', 'Daria', '712.054347826087'), ('206371', 'Alina', '783.5474452554745'), ('206374', 'Yafan', '325.6162790697674'), ('206375', 'Sonia', '1029.0980392156862'), ('206376', 'Nour', '1038.7702702702702'), ('206378', 'Elke', '1036.406976744186'), ('206379', 'Nicole', '978.0188679245283'), ('206380', 'Gabriella', '988.0208333333334'), ('206381', 'Carmen', '927.5833333333334'), ('206382', 'Sarahi', '1139.2340425531916'), ('206383', 'Maria Andrea', '1072.9591836734694'), ('206384', 'Ana Gabriela', '1084.7916666666667'), ('206386', 'Isabella', '1227.0'), ('206387', 'Aymet', '915.5932203389831'), ('206388', 'Clementina Eugenia', '964.1224489795918'), ('206389', 'Domenica', '803.8666666666667'), ('206390', 'Isabelle', '725.5555555555555'), ('206391', 'Ellen', '806.7682926829268'), ('206393', 'Yosr', '1222.24'), ('206395', 'Sarvinoz', '1235.1960784313726'), ('206396', 'Da Hye', '1010.3333333333334'), ('206397', 'Ji Hee', '1027.3658536585365'), ('206399', 'Francesca', '1060.8163265306123'), ('206400', 'Martina', '820.1656050955414'), ('206401', 'Sanae', '1105.171875'), ('206402', 'Kanako', '1105.3125'), ('206403', 'Alona', '801.0'), ('206404', 'Elizaveta', '416.8855421686747'), ('206405', 'Sofia', '990.6554054054054'), ('206406', 'Berta', '1005.75'), ('206407', 'Carolina', '857.370786516854'), ('206408', 'Nadia', '500.37654320987656'), ('206410', 'Guadalupe', '806.4901960784314'), ('206411', 'Agustina', '1075.2736842105264'), ('206412', 'Shakhlo', '924.8818897637796'), ('206414', 'Guzal', '995.4074074074074'), ('206417', 'Leolia', '773.5666666666667'), ('206418', 'Imane Maelle', '845.375'), ('206419', 'Karin', '739.3035714285714'), ('206420', 'Ekaterina', '423.656050955414'), ('206421', 'Nam Yeon', '878.6666666666666'), ('206422', 'Anastasia', '843.5766871165645'), ('206423', 'Sandra', '925.6860465116279'), ('206424', 'Katharina', '590.3914893617022'), ('206425', 'Giulia', '1153.275'), ('206426', 'Giulia', '897.0818181818182'), ('206427', 'Daiana', '720.7490039840637'), ('206428', 'Luisa', '1112.9183673469388'), ('206429', 'Marcela', '1178.1724137931035'), ('206430', 'Carolina Meligeni Rodrigues', '799.0650406504066'), ('206431', 'Andressa Cristina', '1184.0416666666667'), ('206432', 'Ivone', '872.0'), ('206433', 'Nadia', '933.3885350318471'), ('206579', 'Sarah', '1013.655737704918'), ('208067', 'Assia', '1172.5531914893618'), ('208115', 'Adriana', '738.4942528735633'), ('208267', 'Sarah', '1286.48'), ('208289', 'Daniela', '1146.5454545454545'), ('208458', 'Carmen Raluca', '842.1553398058253'), ('208531', 'Kirsten Andrea', '1035.0384615384614'), ('208577', 'Joanna', '931.025641025641'), ('208603', 'Amira', '1075.8260869565217'), ('208644', 'Olena', '1360.6666666666667'), ('208730', 'Mitsumi', '1121.04'), ('208733', 'Magdalena', '1231.421052631579'), ('208738', 'Lenka', '767.4705882352941'), ('208818', 'Wen Ling', '1117.55'), ('208889', 'Yasmin', '1142.5'), ('208983', 'Larikah', '1054.9019607843138'), ('208985', 'Alexandra', '1373.3673469387754'), ('208988', 'Jelena', '1046.944'), ('209037', 'Elena', '1106.5'), ('209061', 'Patricia', '1226.3164556962026'), ('209170', 'Micaela', '1332.0737704918033'), ('209204', 'Natalia', '1405.2424242424242'), ('209205', 'Emma', '819.7254901960785'), ('209323', 'Amy', '1084.030303030303'), ('209331', 'Julia', '1170.6774193548388'), ('209442', 'Jade', '934.6125'), ('209446', 'Lisa', '1106.1351351351352'), ('209508', 'Julia', '1049.0833333333333'), ('209580', 'Abigail', '1203.9285714285713'), ('209649', 'Jordana', '1022.6198347107438'), ('209712', 'Elaine', '1221.7931034482758'), ('209765', 'Risa', '1086.25'), ('209771', 'Stephanie', '896.3787878787879'), ('209861', 'Marina', '964.1477272727273'), ('209866', 'Grace', '1238.892857142857'), ('209869', 'Bianca', '892.3639575971731'), ('209901', 'Marianna', '1027.8082191780823'), ('209906', 'Milena', '1114.4074074074074'), ('209915', 'Treta', '1009.8666666666667'), ('209945', 'Almudena', '1157.8'), ('209949', 'Eveliina', '1023.8690476190476'), ('209950', 'Francesca', '1117.75'), ('209952', 'Sabina', '895.1770334928229'), ('210043', 'Katharina', '949.5916666666667'), ('210056', 'Priscilla', '668.9642857142857'), ('210060', 'Nikol', '1054.0813953488373'), ('210061', 'Maria Jesus', '1170.1830985915492'), ('210064', 'Denise', '941.5221238938053'), ('210065', 'Molly', '998.1320754716982'), ('210073', 'Jin', '1267.0'), ('210108', 'Sandy', '1028.9565217391305'), ('210113', 'Katherine Gabriela', '910.396694214876'), ('210138', 'Noelia', '1054.6531791907514'), ('210146', 'Brynn', '952.5619834710744'), ('210163', 'Cecilia', '999.125'), ('210173', 'Ushna', '1132.4109589041095'), ('210191', 'Ratnika', '1021.6504854368932'), ('210192', 'Shweta', '897.6951219512196'), ('210223', 'Natasha', '1047.6377952755906'), ('210249', 'Anna', '1177.15625'), ('210250', 'Yekaterina', '1146.8846153846155'), ('210263', 'Violetta', '1137.5135135135135'), ('210271', 'Anita', '947.472972972973'), ('210289', 'Ludmila', '846.2727272727273'), ('210294', 'Malika', '1004.7428571428571'), ('210303', 'Kathinka', '415.7'), ('210325', 'Meng Ning', '1035.95'), ('210331', 'Giulia', '986.8349514563107'), ('210333', 'Alina', '854.8849557522124'), ('210335', 'Gabriela', '1087.6161616161617'), ('210336', 'Rosalie', '1018.328947368421'), ('210337', 'Natalija', '591.7393162393163'), ('210338', 'Carlotta', '1200.0'), ('210343', 'Sandra', '1092.165137614679'), ('210357', 'Mara', '908.3962264150944'), ('210362', 'Francesca', '954.444976076555'), ('210364', 'Emiliana', '1165.945205479452'), ('210369', 'Arantxa', '1134.896551724138'), ('210370', 'Sowjanya', '813.1357142857142'), ('210375', 'Carla', '1015.8947368421053'), ('210377', 'Belen', '1167.3368421052633'), ('210380', 'Kate', '1117.7142857142858'), ('210382', 'Sabrina', '551.3582089552239'), ('210399', 'Alessia', '961.4230769230769'), ('210404', 'Mami', '1153.590909090909'), ('210428', 'Qianqian', '943.421052631579'), ('210434', 'Gabriela', '1150.0'), ('210436', 'India', '954.046875'), ('210439', 'Ella', '1151.021505376344'), ('210444', 'Patricia', '1105.537037037037'), ('210448', 'Lina', '1020.8352941176471'), ('210455', 'Veronika', '1153.1025641025642'), ('210466', 'Lynn', '1034.3684210526317'), ('210476', 'Mi Jeong', '1071.3076923076924'), ('210488', 'Angelina', '1230.5625'), ('210492', 'Despoina', '746.0962962962963'), ('210500', 'Karla', '807.616'), ('210517', 'Kayla', '1101.55'), ('210526', 'Valeria', '757.0555555555555'), ('210533', 'Haine', '1179.4153846153847'), ('210536', 'Dan Ni', '994.4769230769231'), ('210537', 'Michika', '718.047619047619'), ('210543', 'Camila Vital', '1192.3783783783783'), ('210567', 'Martina', '986.3452380952381'), ('210568', 'Andrea Renee', '878.3939393939394'), ('210583', 'Brandy', '970.9846153846154'), ('210584', 'Fiona', '908.4414414414415'), ('210588', 'Daphne', '1226.5454545454545'), ('210593', 'Jazzamay', '983.1290322580645'), ('210604', 'Yujia', '1034.1304347826087'), ('210622', 'Andrea', '759.2765957446809'), ('210629', 'Ilze', '847.0941176470589'), ('210636', 'Saray', '840.0776699029126'), ('210640', 'Liniques', '1184.7222222222222'), ('210644', 'Jasmin', '1094.5833333333333'), ('210645', 'Elena Teodora', '686.6470588235294'), ('210646', 'Stefanie', '1003.1884057971015'), ('210656', 'Stefania', '1071.142857142857'), ('210657', 'Federica', '799.6744186046511'), ('210658', 'Michele Alexandra', '946.8846153846154'), ('210660', 'Joana', '910.6521739130435'), ('210668', 'Valeria', '935.9090909090909'), ('210671', 'Chantelle', '1128.030303030303'), ('210672', 'Polina', '504.54545454545456'), ('210674', 'Gaelle', '1085.6'), ('210675', 'Anna Katalina', '916.7115384615385'), ('210691', 'Saska', '747.3695652173913'), ('210693', 'Elizabeta', '1154.2714285714285'), ('210694', 'Sari', '1081.1666666666667'), ('210702', 'Pauline', '793.5889570552147'), ('210703', 'Steffi', '891.8120805369127'), ('210705', 'Irina Maria', '578.1381578947369'), ('210706', 'Stefana', '993.4255319148937'), ('210707', 'Alory Regina Elorriaga', '1181.6078431372548'), ('210717', 'Madeleine', '1028.0365853658536'), ('210722', 'Elise', '334.7118644067797'), ('210724', 'Kyra', '1143.2608695652175'), ('210728', 'Aida', '1110.3333333333333'), ('210731', 'Jelena', '1025.25'), ('210732', 'Viktoria', '811.72'), ('210734', 'Laura', '901.8187919463087'), ('210737', 'Xiaorong', '848.4418604651163'), ('210740', 'Stefanie', '506.79487179487177'), ('210741', 'Iva', '692.2707182320441'), ('210742', 'Mariana', '868.2702702702703'), ('210750', 'Sonja', '946.3888888888889'), ('210751', 'Hanna', '1115.7714285714285'), ('210754', 'Vivian', '770.6042780748663'), ('210758', 'Francesca', '1031.2119205298013'), ('210764', 'Karolina', '1034.92'), ('210775', 'Jaimy Gayle', '1243.875'), ('210776', 'Gabriela', '1000.4246575342465'), ('210781', 'Kristina', '1016.5903614457832'), ('210786', 'Anastasia', '661.2774193548387'), ('210787', 'Barbara', '1014.9026548672566'), ('210789', 'Dagmara', '1159.1818181818182'), ('210790', 'Zuzanna', '794.5416666666666'), ('210801', 'Catherine', '918.6078431372549'), ('210804', 'Carolin', '1160.111111111111'), ('210808', 'Beatriz Magdalena', '1253.4'), ('210818', 'Marta', '1112.4528301886792'), ('210821', 'Claudia', '1175.2058823529412'), ('210823', 'Giada', '813.1351351351351'), ('210847', 'Miriana', '950.6263736263736'), ('210848', 'Valeria', '874.1242236024844'), ('210860', 'Jessica', '583.9622641509434'), ('210865', 'Marie', '916.5714285714286'), ('210867', 'Marijana', '1215.0'), ('210870', 'Natalia', '852.420731707317'), ('210871', 'Steffi', '1020.9090909090909'), ('210877', 'Suellen', '911.7619047619048'), ('210880', 'Borislava', '834.2066115702479'), ('210886', 'Mayar', '711.1785714285714'), ('210887', 'Diana', '1026.5037593984962'), ('210888', 'Kanika', '962.8536585365854'), ('210892', 'Apichaya', '1016.5714285714286'), ('210910', 'Laura', '1089.6666666666667'), ('210926', 'Pei Chi', '673.9809523809524'), ('210930', 'Chia Hsien', '950.8813559322034'), ('210931', 'Ching Wen', '583.530303030303'), ('210947', 'Ferny', '1187.0384615384614'), ('210957', 'Cornelia', '757.2253521126761'), ('210958', 'Alexandra', '628.2191780821918'), ('210976', 'Linda', '1232.2'), ('210991', 'Colomba', '1165.093023255814'), ('210993', 'Ivania', '871.109375'), ('211006', 'Macarena', '692.1515151515151'), ('211008', 'Se Hyun', '1210.2571428571428'), ('211012', 'Eva', '1134.9772727272727'), ('211019', 'Audrey', '647.8557692307693'), ('211021', 'Lea', '837.0'), ('211028', 'Maria', '881.1304347826087'), ('211030', 'Dominique', '1248.9166666666667'), ('211031', 'Sarah Beth', '875.9277108433735'), ('211032', 'Pippa', '1041.0740740740741'), ('211033', 'Natasha', '707.7594936708861'), ('211034', 'Vilma Y', '1243.0'), ('211043', 'Maria Paulina', '1047.98224852071'), ('211044', 'Paula Andrea', '1175.909090909091'), ('211049', 'Sri Vaishnavi', '792.1927710843373'), ('211059', 'Giorgia', '997.28'), ('211063', 'Valeriya', '621.5885714285714'), ('211065', 'Charlotte', '1207.0'), ('211068', 'Neda', '930.0'), ('211070', 'Sharon Sanchana', '1097.0'), ('211071', 'Aleksandra', '1097.741573033708'), ('211079', 'Smriti', '1184.8260869565217'), ('211080', 'Sai Samhitha', '998.5238095238095'), ('211081', 'Mariia', '1148.9166666666667'), ('211082', 'Vaniya', '1130.6037735849056'), ('211083', 'Anushka', '1037.0833333333333'), ('211094', 'Julia', '739.8951048951049'), ('211095', 'Bernarda', '541.273631840796'), ('211098', 'Cristina', '709.8819444444445'), ('211099', 'Nicoleta Catalina', '485.46875'), ('211100', 'Ioana', '876.3333333333334'), ('211103', 'Shelby', '788.5178571428571'), ('211104', 'Sara', '1016.6752136752136'), ('211105', 'Akvile', '1038.35'), ('211107', 'Katie', '555.3473684210526'), ('211112', 'Mafalda', '1139.7'), ('211118', 'Darya', '1119.6931818181818'), ('211121', 'Anna', '1201.08'), ('211122', 'Charlotte', '958.1869158878504'), ('211124', 'Casey', '1046.134328358209'), ('211137', 'Yukako', '1071.5833333333333'), ('211143', 'Julie', '1164.6818181818182'), ('211148', 'Jasmine', '437.86915887850466'), ('211150', 'Agustina Elena', '1154.25'), ('211151', 'Camila', '1201.25'), ('211159', 'Nikki', '1017.3134328358209'), ('211160', 'Mandy', '787.2551020408164'), ('211161', 'Isabella', '1166.8'), ('211170', 'Nina Isabella', '1124.1666666666667'), ('211172', 'Lena', '1153.6666666666667'), ('211173', 'Jessica', '797.6951219512196'), ('211174', 'Kelsey', '1012.325'), ('211176', 'Blair', '912.71875'), ('211179', 'Amanda', '1068.35'), ('211182', 'Patricia', '985.0350877192982'), ('211183', 'Jainy', '1037.5274725274726'), ('211194', 'Theresa', '1159.5632183908046'), ('211197', 'Angeliki', '1089.1603773584907'), ('211200', 'Eetee', '842.7045454545455'), ('211202', 'Sara', '1052.1315789473683'), ('211208', 'Ho Ching', '925.9865771812081'), ('211216', 'Cristiana', '554.5376344086021'), ('211221', 'Chiara', '1212.0'), ('211222', 'Jamie', '455.56410256410254'), ('211225', 'Quinn', '883.2352941176471'), ('211227', 'Lina', '607.5721393034826'), ('211231', 'Vladyslava', '856.0782608695653'), ('211234', 'Deria', '1123.6486486486488'), ('211242', 'Catherine', '959.6216216216217'), ('211246', 'Daniela', '1111.2'), ('211260', 'Marie', '518.2080536912752'), ('211265', 'Karolina', '1151.59375'), ('211266', 'Yulia', '970.7878787878788'), ('211267', 'Daniela', '1000.0769230769231'), ('211268', 'Laura', '1003.8620689655172'), ('211269', 'Eudice Wong', '911.7241379310345'), ('211274', 'Justine', '996.6626506024096'), ('211275', 'Michelle', '989.4'), ('211279', 'Harriet', '694.341935483871'), ('211280', 'Sophie', '981.4137931034483'), ('211283', 'Karoline', '873.6229508196722'), ('211285', 'Tayisiya', '747.3172413793103'), ('211288', 'Mia Nicole', '987.504761904762'), ('211290', 'Sybille', '1002.6792452830189'), ('211296', 'Dea', '550.9545454545455'), ('211302', 'Eugenie', '1125.5483870967741'), ('211303', 'Deborah', '650.7578947368421'), ('211316', 'Jessika', '818.2043795620438'), ('211317', 'Olaya', '1112.75'), ('211321', 'Klaartje', '576.9'), ('211323', 'Natalia', '833.9051724137931'), ('211326', 'Katherine', '924.3037037037037'), ('211328', 'Deborah', '741.02'), ('211329', 'Tena', '614.9346733668342'), ('211330', 'Marlies', '946.8934426229508'), ('211333', 'Georgia', '533.5940594059406'), ('211334', 'Charlotte', '824.1891891891892'), ('211337', 'Tamara', '354.43809523809523'), ('211338', 'Katharina', '782.1232876712329'), ('211341', 'Sarah', '1116.9423076923076'), ('211342', 'Gabriela', '856.4285714285714'), ('211344', 'Caroline', '868.6283185840708'), ('211346', 'Jil Nora', '1116.4190476190477'), ('211347', 'Chiara', '1154.0980392156862'), ('211351', 'Ayaka', '552.4653465346535'), ('211356', 'Alejandra', '1003.1176470588235'), ('211365', 'Nozomi', '936.3392857142857'), ('211367', 'Hikari', '1095.1176470588234'), ('211380', 'Hazal', '1214.7692307692307'), ('211382', 'Caroline', '575.8761904761905'), ('211383', 'Rosalia', '1059.73'), ('211384', 'Georgina', '1249.4285714285713'), ('211386', 'Melis', '1097.171875'), ('211390', 'Mari', '685.5'), ('211396', 'Ana', '1066.1382978723404'), ('211405', 'Ena', '1006.0392156862745'), ('211406', 'Gabriela', '699.9121621621622'), ('211407', 'Dejana', '684.156862745098'), ('211408', 'Kerstin', '1020.4271844660194'), ('211411', 'Nina', '225.57534246575344'), ('211412', 'Bojana', '737.0410958904109'), ('211416', 'Elena', '829.0'), ('211418', 'Ines', '1196.3461538461538'), ('211419', 'Giulia', '1208.3125'), ('211422', 'Esen', '1218.5652173913043'), ('211423', 'Lenka', '894.1379310344828'), ('211426', 'Sadafmoh', '665.8219178082192'), ('211427', 'Violetta', '1209.375'), ('211429', 'Nastassia', '1138.9166666666667'), ('211432', 'Eden', '945.7478260869565'), ('211434', 'Corina', '832.7818181818182'), ('211437', 'Bhuvana', '878.0138888888889'), ('211439', 'Charlotte', '1178.4166666666667'), ('211440', 'Manya', '1181.3548387096773'), ('211442', 'Daniela', '1000.1896551724138'), ('211446', 'Louise', '1095.060606060606'), ('211452', 'Eva', '1064.5657894736842'), ('211455', 'Sabina Elena', '1184.6666666666667'), ('211456', 'Julia', '386.24657534246575'), ('211464', 'Naomi', '769.8858695652174'), ('211466', 'Anna', '1264.2727272727273'), ('211467', 'Alena', '1070.6666666666667'), ('211470', 'Gulnaz', '1236.6153846153845'), ('211472', 'Oleksandra', '601.169014084507'), ('211474', 'Yekaterina', '1197.7333333333333'), ('211475', 'Polina', '1212.0'), ('211476', 'Victoria', '1185.75'), ('211484', 'Lou', '1209.625'), ('211485', 'Elodie', '1211.2333333333333'), ('211486', 'Manon', '973.3541666666666'), ('211488', 'Leslie', '1180.5454545454545'), ('211489', 'Maria Agustina', '1190.0833333333333'), ('211495', 'Helen', '912.234375'), ('211497', 'Nikita', '1174.0'), ('211504', 'Juliana Rocha', '1175.7666666666667'), ('211508', 'Josephine', '684.4892086330935'), ('211519', 'Wendy Qi Wen', '1011.469696969697'), ('211522', 'Rosalie', '1143.0'), ('211524', 'Ulyana', '844.0692307692308'), ('211527', 'Daria', '1108.2295081967213'), ('211529', 'Sandra', '489.4657534246575'), ('211531', 'Oana', '1168.2307692307693'), ('211533', 'Jelena', '460.47904191616766'), ('211534', 'Erika', '1108.8'), ('211535', 'Camille', '1029.8'), ('211537', 'Mathilde', '1083.6575342465753'), ('211538', 'Carla', '810.7826086956521'), ('211539', 'Fiona', '531.6888888888889'), ('211541', 'Jacqueline', '691.6936936936937'), ('211543', 'Jennifer', '861.2063492063492'), ('211544', 'Nagi', '828.0675675675676'), ('211546', 'Mihoki', '1110.4411764705883'), ('211552', 'Harmony', '574.8723404255319'), ('211555', 'Viktoriya', '1087.4782608695652'), ('211556', 'Helene', '682.3052631578947'), ('211557', 'Nina', '838.5604395604396'), ('211562', 'Vladica', '943.5432098765432'), ('211565', 'Martina', '1035.6969696969697'), ('211577', 'Danielle', '946.1477272727273'), ('211579', 'Wan Yi', '1081.142857142857'), ('211580', 'Alessandra', '1123.4864864864865'), ('211582', 'Jamilya', '1247.3333333333333'), ('211584', 'Diana', '1142.1315789473683'), ('211585', 'Yuliya', '1167.5428571428572'), ('211586', 'Aleksandra', '1209.625'), ('211588', 'Madina', '1203.5'), ('211590', 'Julia Mansano', '1024.6666666666667'), ('211592', 'Leticia Garcia', '1072.4'), ('211594', 'Ingrid', '853.2375'), ('211598', 'Anna', '823.74'), ('211599', 'Ailen', '1034.5833333333333'), ('211600', 'Ana Victoria', '961.2631578947369'), ('211604', 'Fernanda', '1243.875'), ('211635', 'Louisa', '380.5308641975309'), ('211637', 'Tornado Alicia', '878.1666666666666'), ('211638', 'Madison', '1074.8536585365853'), ('211643', 'Kajsa', '661.9589041095891'), ('211646', 'Oana Georgeta', '686.3047619047619'), ('211647', 'Elke', '906.75'), ('211651', 'Paula', '406.53846153846155'), ('211654', 'Ana Bianca', '842.8446601941747'), ('211663', 'Amrita', '1209.4'), ('211664', 'Simran Kaur', '974.8'), ('211667', 'Shreya', '1148.0'), ('211668', 'Riya', '651.4246575342465'), ('211680', 'Camila', '1212.5263157894738'), ('211682', 'Paulina', '1011.5109489051094'), ('211683', 'Aleksandra', '1210.764705882353'), ('211684', 'Magdalena', '586.9224137931035'), ('211685', 'Rebecca', '563.75'), ('211689', 'Deniz', '1220.1818181818182'), ('211696', 'Eva', '1063.9213483146068'), ('211698', 'Pernilla', '619.4154929577464'), ('211699', 'Karolina', '819.18'), ('211700', 'Barbora', '444.9727272727273'), ('211701', 'Katerina', '291.7972027972028'), ('211702', 'Nao', '313.45625'), ('211712', 'Polina', '1073.5'), ('211713', 'Jaqueline Adina', '748.7238095238096'), ('211719', 'Shilin', '632.2824427480916'), ('211721', 'Akiho', '1145.8235294117646'), ('211722', 'Szabina', '772.3186813186813'), ('211725', 'Nicole', '539.8356164383562'), ('211726', 'Kim', '1221.6470588235295'), ('211728', 'Sofico', '1084.107142857143'), ('211729', 'Melissa', '1154.093023255814'), ('211730', 'Aleksandra', '1018.3636363636364'), ('211731', 'Ekaterina', '1241.8'), ('211732', 'Alessia', '1134.12'), ('211736', 'Ivana', '473.54'), ('211738', 'Pia', '766.21875'), ('211739', 'Olena', '1113.1515151515152'), ('211749', 'Lauren', '1198.909090909091'), ('211751', 'Alexandra', '992.4444444444445'), ('211755', 'Laura', '1129.7818181818182'), ('211756', 'Patcharin', '863.5507246376811'), ('211759', 'Margaux', '1154.0'), ('211762', 'Sandra', '1226.25'), ('211763', 'Anastasiya', '834.7169811320755'), ('211764', 'Anna', '784.5217391304348'), ('211765', 'Emina', '682.0972222222222'), ('211768', 'Naomi', '390.5'), ('211770', 'Nicole', '884.4117647058823'), ('211771', 'Julia', '603.5777777777778'), ('211772', 'Ina', '1165.5573770491803'), ('211774', 'Beatrice', '945.1636363636363'), ('211775', 'Erika', '821.4102564102565'), ('211779', 'Yana', '845.5966386554621'), ('211781', 'Alexa', '1033.6486486486488'), ('211792', 'Monique', '940.5479452054794'), ('211796', 'Francoise', '437.05298013245033'), ('211798', 'Aldana', '1185.7142857142858'), ('211801', 'Luciana', '1243.875'), ('211808', 'Anke', '1228.388888888889'), ('211809', 'Daria', '782.2476190476191'), ('211810', 'Chiara', '1173.4186046511627'), ('211811', 'Deborah', '1219.448275862069'), ('211813', 'Luisa Marie', '820.59375'), ('211814', 'Julia', '418.26027397260276'), ('211817', 'Elena Gabriela', '392.44444444444446'), ('211820', 'Martina', '783.9285714285714'), ('211821', 'Chiara', '826.9069767441861'), ('211822', 'Darya', '1117.0222222222221'), ('211825', 'Anastasiya', '899.5407407407407'), ('211829', 'Hongrui', '914.8607594936709'), ('211838', 'You Na', '1170.3461538461538'), ('211839', 'Maxine', '973.8717948717949'), ('211840', 'Katie', '868.8571428571429'), ('211841', 'Eleonore', '1160.5238095238096'), ('211843', 'Anhelina', '432.6949152542373'), ('211844', 'Haruka', '774.6837606837607'), ('211846', 'Kyoka', '348.54794520547944'), ('211848', 'Rafaela', '1121.2432432432433'), ('211851', 'Emma Christine', '1193.3529411764705'), ('211853', 'Maria', '1048.2156862745098'), ('211854', 'Katerina', '555.9921875'), ('211855', 'Jessica', '863.9344262295082'), ('211856', 'Anastasiya', '394.16'), ('211857', 'Dominika', '1009.7674418604652'), ('211858', 'Emmanuelle', '1184.7692307692307'), ('211862', 'Ana Paula', '684.6578947368421'), ('211864', 'Maria Fernanda', '877.6076923076923'), ('211871', 'Vishesh', '1208.952380952381'), ('211874', 'Victoria', '462.3642857142857'), ('211876', 'Angelina', '830.6666666666666'), ('211878', 'Lizette', '666.1496062992126'), ('211879', 'Samantha', '1012.2051282051282'), ('211880', 'Priscilla', '678.396694214876'), ('211881', 'Olivia', '637.563829787234'), ('211883', 'Michelle', '852.36'), ('211884', 'Chiara', '1028.4310344827586'), ('211885', 'Alice', '536.8039215686274'), ('211887', 'Maia', '745.433962264151'), ('211893', 'Kaitlyn', '891.3095238095239'), ('211896', 'Donika', '1131.6333333333334'), ('211897', 'Gloria', '794.7118644067797'), ('211898', 'Andreea', '833.8493150684932'), ('211901', 'Aliona', '611.35'), ('211902', 'Jacqueline', '1033.34'), ('211903', 'Barbara', '734.2'), ('211915', 'Talya', '1230.2'), ('211916', 'Valeria', '1118.015625'), ('211917', 'Alona', '1037.3055555555557'), ('211918', 'Anastasija', '1144.7142857142858'), ('211920', 'Martina', '779.1060606060606'), ('211921', 'Julieta Lara', '707.1467889908257'), ('211923', 'Eliza', '978.2708333333334'), ('211925', 'Yana', '978.8979591836735'), ('211929', 'Aleksandra', '835.16'), ('211930', 'Teodora', '938.0540540540541'), ('211931', 'Gebriela', '1152.142857142857'), ('211932', 'Vivian', '922.4666666666667'), ('211936', 'Parris', '1099.625'), ('211941', 'Zoe', '677.8082191780821'), ('211945', 'Gabriela', '1003.4827586206897'), ('211951', 'Ana', '276.82481751824815'), ('211954', 'Nicole', '1088.6315789473683'), ('211956', 'Ariadna', '951.4146341463414'), ('211959', 'Ksenija', '975.6271186440678'), ('211960', 'Lilla', '722.5087719298245'), ('211961', 'Emmanuelle', '864.0645161290323'), ('211962', 'Muge', '1186.9444444444443'), ('211963', 'Ege', '1214.857142857143'), ('211964', 'Ilka', '868.2191780821918'), ('211965', 'Jasmin', '969.8666666666667'), ('211966', 'Ksenia', '851.2647058823529'), ('211967', 'Nina', '688.2054794520548'), ('211969', 'Natsumi', '974.3428571428572'), ('211972', 'Angelina', '1229.6521739130435'), ('211974', 'Chanikarn', '1281.8461538461538'), ('211976', 'Marija', '1241.8'), ('211977', 'Adrijana', '627.12'), ('211980', 'Janneke', '861.5102040816327'), ('211982', 'Anastasiya', '1002.2307692307693'), ('211983', 'Sarai Delfina', '1191.6470588235295'), ('211996', 'Sneha', '1225.388888888889'), ('212000', 'Victoria', '1232.2'), ('212001', 'Natalia', '414.9479166666667'), ('212003', 'Ivanka', '1079.05'), ('212005', 'Valeriya', '1029.9850746268658'), ('212008', 'Dhruthi', '615.1506849315068'), ('212009', 'Nelise', '1164.107142857143'), ('212010', 'Vanja', '1089.7111111111112'), ('212011', 'Jessica', '1003.0540540540541'), ('212016', 'Caitlin', '1237.090909090909'), ('212019', 'Yan', '768.560975609756'), ('212021', 'Yuenu', '961.876923076923'), ('212026', 'Kwan Yau', '1070.0377358490566'), ('212034', 'Fang Ying', '612.0185185185185'), ('212035', 'Si Qi', '1047.7575757575758'), ('212038', 'Veronika', '1127.8181818181818'), ('212039', 'Emilia', '1232.0'), ('212041', 'Paulina', '1195.9473684210527'), ('212043', 'Freya', '544.1627906976744'), ('212044', 'Katharina', '673.986301369863'), ('212045', 'Sinead', '975.3484848484849'), ('212046', 'Shiran', '1187.9245283018868'), ('212050', 'Nataliya', '1247.909090909091'), ('212053', 'Anastasia', '430.17808219178085'), ('212054', 'Amelie', '1011.3666666666667'), ('212202', 'Mariaryeni', '1085.4242424242425'), ('212302', 'Lesedi Sheya', '887.4545454545455'), ('212303', 'Justina', '1212.9166666666667'), ('212805', 'Paige Mary', '1156.28125'), ('213013', 'Anais', '1010.2222222222222'), ('213016', 'Petra', '607.7978723404256'), ('213510', 'Ting Jr', '789.6113989637306'), ('213515', 'Damilola', '1493.0'), ('213520', 'Brittany', '1151.4137931034484'), ('213521', 'Megan', '1142.4782608695652'), ('213525', 'Jil Belen', '501.0619469026549'), ('213526', 'Sara', '891.0576923076923'), ('213530', 'Allie', '338.2395833333333'), ('213533', 'Maria', '504.45054945054943'), ('213537', 'Olga', '426.958904109589'), ('213539', 'Pamela', '989.1904761904761'), ('213542', 'Elizaveta', '1180.12'), ('213544', 'Jana', '353.3222222222222'), ('213550', 'Sofia', '433.7792207792208'), ('213552', 'Adeliya', '790.1538461538462'), ('213553', 'Camille', '1214.341463414634'), ('213554', 'Louise', '1208.5128205128206'), ('213555', 'Theo', '650.1206896551724'), ('213557', 'Maria', '905.6805555555555'), ('213558', 'Ao', '617.3333333333334'), ('213563', 'Karina Kristina', '1062.795918367347'), ('213567', 'Maria Jose', '817.8518518518518'), ('213570', 'Mahitha', '1007.15'), ('213572', 'Risa', '741.123595505618'), ('213573', 'Megumi', '1025.0'), ('213576', 'Iryna', '747.6422018348624'), ('213578', 'Oyku', '866.0454545454545'), ('213579', 'Yasmyn', '1261.8181818181818'), ('213581', 'Kristyna', '1077.4736842105262'), ('213582', 'Kateryna', '866.1971830985915'), ('213583', 'Tatjana', '131.44628099173553'), ('213584', 'Irina', '669.6590909090909'), ('213585', 'Hana', '1212.0'), ('213589', 'Tatiana', '1225.578947368421'), ('213591', 'Anna', '1052.1333333333334'), ('213593', 'Ksenia', '1046.2075471698113'), ('213594', 'Sandra', '838.4905660377359'), ('213598', 'Lisa', '1150.15'), ('213599', 'Jelena', '1010.1142857142858'), ('213600', 'Emily', '773.5352112676056'), ('213602', 'Gabriella', '557.6849315068494'), ('213604', 'Luisa', '911.8913043478261'), ('213615', 'Damini', '1242.0'), ('213620', 'Jessica', '457.1111111111111'), ('213624', 'Anna', '1084.9577464788733'), ('213626', 'Yana', '1200.1052631578948'), ('213628', 'Melanie', '597.8504672897196'), ('213631', 'Marie', '512.1145833333334'), ('213633', 'Zaineb', '1227.344827586207'), ('213634', 'Rita', '1002.7659574468086'), ('213636', 'Yukun', '824.3936170212766'), ('213637', 'Tina', '966.9056603773585'), ('213638', 'Vera', '1126.2'), ('213644', 'Eleni', '1069.25'), ('213646', 'Dalma', '279.16438356164383'), ('213648', 'Ahlam', '1248.72'), ('213651', 'Agne', '1231.5'), ('213657', 'Martha', '1056.0588235294117'), ('213659', 'Alexa', '704.0958904109589'), ('213661', 'Yukina', '857.1692307692308'), ('213666', 'Maddison', '748.0'), ('213667', 'Marie', '939.6129032258065'), ('213668', 'Alexandra', '801.0'), ('213672', 'Usue Maitane', '411.5068493150685'), ('213673', 'Ellie', '479.0652173913044'), ('213674', 'Jade', '1120.590909090909'), ('213675', 'Sung Hee', '1138.274193548387'), ('213676', 'Evgeniya', '1221.904761904762'), ('213678', 'Ivana', '1225.9166666666667'), ('213687', 'Silvia', '1212.0'), ('213690', 'Camilla', '661.2465753424658'), ('213691', 'Cecilia', '1237.34375'), ('213693', 'Sandra', '1222.5862068965516'), ('213694', 'Lisa', '758.609756097561'), ('213695', 'Costanza', '1153.3333333333333'), ('213702', 'Marta', '1045.0588235294117'), ('213706', 'Irene', '579.2153846153847'), ('213709', 'Chaoyi', '1232.8'), ('213710', 'Cristina', '820.3085106382979'), ('213713', 'Maja', '1190.6363636363637'), ('213714', 'Fanny', '707.972972972973'), ('213721', 'Ines', '749.6309523809524'), ('213723', 'Sean', '1240.92'), ('213726', 'May', '1084.0294117647059'), ('213728', 'Maria Del Rosario', '1119.4897959183672'), ('213730', 'Aina', '1164.95'), ('213734', 'Mariam', '662.1182795698925'), ('213737', 'Anastasia Evgenyevna', '956.5754716981132'), ('213738', 'Ana Luisa', '1243.4285714285713'), ('213740', 'Constanza', '835.1132075471698'), ('213741', 'Alexia', '1255.421052631579'), ('213742', 'Maia A', '1206.6666666666667'), ('213744', 'Eva', '961.8630136986301'), ('213748', 'Peggy', '755.5813953488372'), ('213750', 'Zhanlan', '627.7777777777778'), ('213751', 'En Pei', '1229.7333333333333'), ('213753', 'Thai Sa Grana', '802.7222222222222'), ('213755', 'Erika', '1146.8823529411766'), ('213758', 'Karyn', '903.5769230769231'), ('213760', 'Damira', '1198.3333333333333'), ('213761', 'Marina', '1029.6296296296296'), ('213763', 'Dajana', '1181.4736842105262'), ('213767', 'Ayla', '397.83561643835617'), ('213772', 'Amy', '908.546875'), ('213773', 'Yeong Won', '973.8617021276596'), ('213775', 'Yu Jin', '1098.357142857143'), ('213778', 'Maurien', '1121.0869565217392'), ('213779', 'Raluca Georgiana', '539.6164383561644'), ('213780', 'Andreea Amalia', '801.84375'), ('213785', 'Iulia Maria', '1170.9411764705883'), ('213788', 'Emilija', '1209.625'), ('213789', 'Katarina', '920.1794871794872'), ('213792', 'Sofia', '1157.6190476190477'), ('213793', 'Gozal', '716.3150684931506'), ('213796', 'Petra', '796.97'), ('213799', 'Yuanyi', '891.2340425531914'), ('213802', 'Aiko', '774.046875'), ('213803', 'Inger', '1039.0'), ('213804', 'Marie', '938.0645161290323'), ('213805', 'Mary', '869.1666666666666'), ('213807', 'Cristina', '1147.4583333333333'), ('213808', 'Alisa', '1240.2727272727273'), ('213817', 'Muazzez', '1227.0'), ('213821', 'Wushuang', '937.7878787878788'), ('213822', 'Verena', '931.780487804878'), ('213826', 'Plobrung', '937.7945205479452'), ('213827', 'Magdalena', '1223.9016393442623'), ('213828', 'Chompoothip', '1112.1458333333333'), ('213830', 'Qiu Yu', '705.8493150684932'), ('213831', 'Teodora', '1156.2424242424242'), ('213832', 'Rebeka', '842.0806451612904'), ('213835', 'Alba', '843.7260273972603'), ('213836', 'Federica Joe', '1204.7272727272727'), ('213837', 'Ylena', '892.3561643835617'), ('213841', 'Tamachan', '949.8059701492538'), ('213849', 'Nicole', '1132.0'), ('213850', 'Barbara', '1193.433962264151'), ('213851', 'Karolina', '1047.0243902439024'), ('213852', 'Hollie', '1185.75'), ('213853', 'Eliessa', '876.1730769230769'), ('213854', 'Elena', '1116.5'), ('213855', 'Magali', '734.0'), ('213857', 'Nonna', '1167.2758620689656'), ('213859', 'Angela', '1116.2571428571428'), ('213860', 'Ana', '1203.1698113207547'), ('213861', 'Ronit', '427.0'), ('213863', 'Kristina N', '1060.5633802816901'), ('213868', 'Ekaterina', '1014.2592592592592'), ('213871', 'Emma', '1215.698113207547'), ('213872', 'Anna', '1098.5135135135135'), ('213875', 'Nina', '1039.7272727272727'), ('213877', 'Antonina', '1049.4655172413793'), ('213879', 'Barbara', '895.763440860215'), ('213882', 'Lena', '938.4'), ('213885', 'Rosie', '984.1714285714286'), ('213887', 'Renata', '485.2386363636364'), ('213888', 'Britt', '647.5205479452055'), ('213889', 'Greetje', '547.277108433735'), ('213890', 'Morgane', '1105.3214285714287'), ('213896', 'Elina', '1116.5652173913043'), ('213897', 'Maria', '1080.3076923076924'), ('213899', 'Frances', '999.2'), ('213908', 'Yuriko', '1101.2045454545455'), ('213909', 'Clemence', '875.9772727272727'), ('213916', 'Milica', '1221.904761904762'), ('213923', 'Nina', '690.1022727272727'), ('213924', 'Tamara', '1245.6190476190477'), ('213926', 'Bianca', '561.1369863013699'), ('213927', 'Veronica', '1032.2'), ('213928', 'Ekaterina', '866.0357142857143'), ('213934', 'Nora', '921.6216216216217'), ('213938', 'Tereza', '1039.076923076923'), ('213940', 'Nikola', '1237.2666666666667'), ('213941', 'Anastasia', '710.9433962264151'), ('213944', 'Pranjala', '795.4736842105264'), ('213946', 'Jin Ju', '1035.6470588235295'), ('213947', 'Ying', '661.3972602739726'), ('213948', 'Dabin', '920.1276595744681'), ('213949', 'Hanna', '587.2'), ('213951', 'Sabina', '1161.3384615384616'), ('213953', 'Margaux', '1144.4594594594594'), ('213954', 'Sara', '1217.851851851852'), ('213959', 'Natasha', '871.4054054054054'), ('213965', 'Minami', '1238.0625'), ('213972', 'Ines', '974.8732394366198'), ('213974', 'Lamis', '1062.3666666666666'), ('213977', 'Yulia', '814.5192307692307'), ('213980', 'Sandra', '1103.658536585366'), ('213987', 'Elisabeth', '1211.2424242424242'), ('213988', 'Yulia', '1230.5625'), ('213991', 'Valentina', '921.3333333333334'), ('213994', 'Tamara', '1023.8333333333334'), ('213998', 'Ipek', '976.7878787878788'), ('214000', 'Inci', '1069.0925925925926'), ('214001', 'Irina', '1082.0'), ('214002', 'Natalie', '999.3636363636364'), ('214003', 'Nikola', '1182.1944444444443'), ('214004', 'Vendula', '729.0117647058823'), ('214006', 'Petia', '710.3972602739726'), ('214007', 'Dasha', '722.6986301369863'), ('214008', 'Elizabeth', '1242.6666666666667'), ('214014', 'Adriana', '1064.7826086956522'), ('214019', 'Raveena', '487.6268656716418'), ('214020', 'Amina', '670.2222222222222'), ('214025', 'Petra', '1203.0'), ('214026', 'Natalija', '812.4642857142857'), ('214027', 'Milagros', '1234.2857142857142'), ('214032', 'Chiraz', '749.3582089552239'), ('214040', 'Kimberly', '618.6923076923077'), ('214041', 'Bianka', '696.952380952381'), ('214045', 'Masa', '951.2911392405064'), ('214047', 'Vasilisa', '886.9589041095891'), ('214048', 'Katarina', '1059.4054054054054'), ('214053', 'Laura D', '910.5714285714286'), ('214055', 'Sofia', '977.12'), ('214060', 'Yuliana', '1082.5882352941176'), ('214061', 'Diana', '1217.7142857142858'), ('214067', 'Idia', '1232.2'), ('214074', 'Weronika Jasmina', '1152.7837837837837'), ('214080', 'Nicole', '618.8135593220339'), ('214081', 'Katharina', '434.52054794520546'), ('214082', 'Darya', '105.02597402597402'), ('214088', 'Mercedes', '1213.2142857142858'), ('214094', 'Vera', '1191.6571428571428'), ('214096', 'Karolina', '340.82191780821915'), ('214098', 'Caroline', '1242.0'), ('214106', 'Guillermina', '1027.0'), ('214113', 'Ekaterina', '1137.2'), ('214118', 'Luca', '859.8644067796611'), ('214119', 'Rebeka', '461.7291666666667'), ('214123', 'Kristina', '501.8493150684931'), ('214124', 'Anastasia', '1173.9333333333334'), ('214136', 'Melany Solange', '1039.8333333333333'), ('214143', 'Jasmine Amber', '1117.64'), ('214145', 'Julia', '943.6666666666666'), ('214148', 'Magdalena', '581.3275862068965'), ('214149', 'Viktoria', '434.8452380952381'), ('214152', 'Federica', '969.0845070422536'), ('214158', 'Anastasiya', '600.95'), ('214160', 'Eva', '1133.25'), ('214163', 'Margot', '925.1666666666666'), ('214175', 'Natalia', '1159.1458333333333'), ('214176', 'Valeria', '1048.5'), ('214180', 'Anna', '1062.509090909091'), ('214181', 'Anastasia', '524.7534246575342'), ('214182', 'Veronica', '792.015625'), ('214187', 'Anastasia', '1149.640625'), ('214188', 'Victoria', '1086.888888888889'), ('214189', 'Alicia', '1132.94'), ('214191', 'Seone', '889.8028169014085'), ('214192', 'Sofia', '1190.8461538461538'), ('214193', 'Simona', '875.5769230769231'), ('214212', 'Noelia', '1036.6031746031747'), ('214216', 'Marta Huqi', '851.1224489795918'), ('214219', 'Tessah', '390.2361111111111'), ('214220', 'Margot', '549.7671232876712'), ('214221', 'Ralina', '1176.5'), ('214225', 'Snehadevi S', '632.3150684931506'), ('214229', 'Man Ying Maggie', '1202.2692307692307'), ('214233', 'Julie', '1075.6031746031747'), ('214236', 'Angela', '1177.2222222222222'), ('214238', 'Verena', '1123.6153846153845'), ('214239', 'Sara', '570.8888888888889'), ('214246', 'Julia', '1047.1666666666667'), ('214247', 'Lena', '859.5757575757576'), ('214254', 'Alice', '1014.060606060606'), ('214257', 'Vinciane', '1150.0'), ('214259', 'Valeriya', '1217.7368421052631'), ('214260', 'Ana', '1151.3333333333333'), ('214261', 'Michaela', '667.082191780822'), ('214262', 'Ena', '931.7777777777778'), ('214263', 'Catherine Cartan', '134.21917808219177'), ('214270', 'Lisa', '909.9589041095891'), ('214271', 'Jaeda', '760.4920634920635'), ('214273', 'Ksenia', '1108.2222222222222'), ('214276', 'Yuan', '1054.0'), ('214277', 'Bunyawi', '555.3384615384615'), ('214278', 'Mizuno', '593.1506849315068'), ('214283', 'Mila', '1201.16'), ('214285', 'Alina', '1235.909090909091'), ('214288', 'Jiahui', '794.4931506849315'), ('214289', 'Kseniia', '990.6'), ('214290', 'Alisa', '1212.0'), ('214295', 'Tereza', '540.7397260273973'), ('214296', 'Erica', '788.0384615384615'), ('214298', 'Andie K', '970.3620689655172'), ('214299', 'Lucie', '1219.093023255814'), ('214300', 'Alexandria', '945.625'), ('214301', 'Tatiana', '869.0425531914893'), ('214304', 'Vera', '431.26027397260276'), ('214309', 'Kelly', '813.1428571428571'), ('214311', 'Ines', '1154.0857142857142'), ('214312', 'Sherazad', '271.3972602739726'), ('214314', 'Karin', '1194.591836734694'), ('214317', 'Mallaurie', '1031.5342465753424'), ('214318', 'Eleonore', '1028.2884615384614'), ('214319', 'Sara', '616.7735849056604'), ('214320', 'Valentine', '1185.5'), ('214322', 'Karolayne', '1077.8095238095239'), ('214324', 'Julia', '1083.05'), ('214327', 'Huijie', '1118.904761904762'), ('214328', 'Xu Liu', '488.7671232876712'), ('214329', 'Shangqing', '1228.3235294117646'), ('214340', 'Maria', '1178.9'), ('214341', 'Katya', '1050.7'), ('214343', 'Marta', '454.7945205479452'), ('214344', 'Shakhnoza', '1236.7627118644068'), ('214347', 'Terri', '963.5'), ('214359', 'Doga Selen', '1234.6176470588234'), ('214360', 'Natalie', '1172.3720930232557'), ('214367', 'Arthi', '1281.8461538461538'), ('214372', 'Daniela', '1183.4285714285713'), ('214381', 'Vera', '1171.0588235294117'), ('214385', 'Yixuan', '801.6712328767123'), ('214386', 'Xinyu', '370.7671232876712'), ('214388', 'Anna', '485.23809523809524'), ('214392', 'Maria', '1047.0'), ('214399', 'Alexis', '1207.8333333333333'), ('214400', 'Rianna', '638.6666666666666'), ('214405', 'Mirjam', '843.6428571428571'), ('214411', 'Savannah', '1142.9285714285713'), ('214435', 'Agata Jadwiga', '1082.3548387096773'), ('214438', 'Ida', '962.5'), ('214442', 'Lidia', '1147.8529411764705'), ('214444', 'Estela', '966.0540540540541'), ('214450', 'Mouna', '1258.5'), ('214452', 'Caroline', '553.5762711864406'), ('214453', 'Sophie', '676.4722222222222'), ('214455', 'Andrina', '1045.6666666666667'), ('214459', 'Lucia', '901.7966101694915'), ('214460', 'Manca', '838.1780821917808'), ('214461', 'Tamara', '298.32876712328766'), ('214463', 'Yuval', '1230.2'), ('214464', 'Shir', '1154.4166666666667'), ('214465', 'Maya', '1165.5714285714287'), ('214466', 'Sarlota', '1209.7777777777778'), ('214476', 'Phenomena', '1211.0'), ('214477', 'Alina', '1206.9'), ('214479', 'Yarden', '1166.875'), ('214480', 'Miriam Bianca', '628.075'), ('214487', 'Ioana', '1070.878787878788'), ('214503', 'Warona', '1249.3333333333333'), ('214504', 'Valeriya', '814.3333333333334'), ('214505', 'Haruna', '512.1515151515151'), ('214507', 'Berfu', '625.013698630137'), ('214510', 'Greta', '1252.608695652174'), ('214513', 'Yulia', '1162.0'), ('214514', 'Anastasia', '976.054794520548'), ('214517', 'Polina', '954.6'), ('214520', 'Andrea', '1039.448275862069'), ('214521', 'Lea', '833.2105263157895'), ('214525', 'Jessica', '1208.7142857142858'), ('214534', 'Komola', '826.0238095238095'), ('214535', 'Petra', '1152.5555555555557'), ('214539', 'Yuki Kristina', '698.8285714285714'), ('214540', 'Chihiro', '695.4794520547945'), ('214541', 'Fanny', '428.5068493150685'), ('214543', 'Anastasia', '851.3'), ('214544', 'Aryna', '349.54794520547944'), ('214546', 'Ekaterina', '708.8813559322034'), ('214553', 'Natalie', '1128.3934426229507'), ('214554', 'Paula', '1119.7272727272727'), ('214561', 'Lauren', '1242.3478260869565'), ('214562', 'Ingrid', '670.931506849315'), ('214563', 'Alexandra', '1178.888888888889'), ('214565', 'Farah', '1106.3076923076924'), ('214567', 'Dina', '1094.4583333333333'), ('214570', 'Maria', '993.375'), ('214582', 'Ayan', '901.8717948717949'), ('214587', 'Pei Hsuan', '1106.5'), ('214589', 'I Hsuan', '1038.6911764705883'), ('214593', 'Lucrezia', '845.986301369863'), ('214595', 'Giorgia', '1129.4333333333334'), ('214598', 'Gabriela Nicole', '994.0612244897959'), ('214599', 'Oana', '927.0909090909091'), ('214600', 'Georgia Andreea', '763.1014492753624'), ('214601', 'Jelena', '1139.418181818182'), ('214602', 'Jovana', '1157.1538461538462'), ('214604', 'Maria Lourdes', '918.0769230769231'), ('214605', 'Agustina', '1182.5'), ('214606', 'Margot', '1238.7777777777778'), ('214607', 'Sang Hee', '857.9508196721312'), ('214608', 'Jia Qi', '529.7777777777778'), ('214624', 'Anastasia', '996.76'), ('214643', 'Ludmilla', '787.5416666666666'), ('214644', 'Arina', '1098.1323529411766'), ('214645', 'Anastasiya', '1098.4347826086957'), ('214646', 'Xiaodi', '467.24657534246575'), ('214653', 'Andreea', '1145.8085106382978'), ('214654', 'Anna', '1027.6986301369864'), ('214658', 'Lusine', '974.2702702702703'), ('214674', 'Yuqi', '1047.3529411764705'), ('214679', 'Sunam', '611.0757575757576'), ('214684', 'Katherine', '653.4305555555555'), ('214691', 'Ylona Georgiana', '642.9487179487179'), ('214693', 'Marta', '1151.1818181818182'), ('214694', 'Karman', '652.917808219178'), ('214695', 'Tamar', '1118.4166666666667'), ('214696', 'Jessica', '820.6849315068494'), ('214697', 'Charlotte', '676.013698630137'), ('214700', 'Joanne', '1227.8'), ('214701', 'Natalia', '1135.0'), ('214706', 'Dana', '724.0'), ('214708', 'Georgiana', '1153.9166666666667'), ('214710', 'Valerie', '1232.2424242424242'), ('214713', 'Camila', '997.8333333333334'), ('214716', 'Jana', '1034.3392857142858'), ('214717', 'Sabrina', '1180.421052631579'), ('214724', 'Jiaxi', '578.5'), ('214726', 'Isabelle', '884.6296296296297'), ('214727', 'Anca', '1127.7368421052631'), ('214728', 'Ashley', '698.9076923076923'), ('214733', 'Suzuho', '980.6666666666666'), ('214744', 'Angelina', '967.4772727272727'), ('214746', 'Federica', '874.3333333333334'), ('214751', 'Barbora', '927.2641509433962'), ('214752', 'Alena', '1274.9444444444443'), ('214758', 'Gyulnara', '1087.6216216216217'), ('214762', 'Mirabelle', '721.1643835616438'), ('214764', 'Karolina', '1235.8461538461538'), ('214766', 'Margarita', '779.5217391304348'), ('214770', 'Emilie', '705.4716981132076'), ('214779', 'Sara', '988.6666666666666'), ('214784', 'Daria', '1025.0'), ('214794', 'Sophia', '1221.3333333333333'), ('214800', 'Sabastiani', '982.7397260273973'), ('214804', 'Evgeniya', '830.875'), ('214805', 'Satsuki', '888.7272727272727'), ('214809', 'Aleksandra', '962.4629629629629'), ('214810', 'Julyette Maria Josephine', '732.1666666666666'), ('214812', 'Aleksandra', '747.5342465753424'), ('214816', 'Anna', '1032.157894736842'), ('214818', 'Mira', '788.2622950819672'), ('214820', 'Moulika', '1243.4'), ('214821', 'Ioana Diana', '482.43243243243245'), ('214825', 'Janja', '1262.5416666666667'), ('214826', 'Susan', '1015.6792452830189'), ('214834', 'Carolyn', '1197.578947368421'), ('214839', 'Jodie Anna', '925.4230769230769'), ('214849', 'Maegan', '787.0'), ('214860', 'Karola Patricia', '928.3333333333334'), ('214862', 'Martina', '1042.4137931034484'), ('214863', 'Sofya', '483.3235294117647'), ('214868', 'Valeriya', '943.8'), ('214871', 'Ekaterina', '1260.6363636363637'), ('214873', 'Victoria', '923.1578947368421'), ('214875', 'Kennedy', '807.7222222222222'), ('214880', 'Iana', '1085.581818181818'), ('214882', 'Oliwia', '1006.5128205128206'), ('214883', 'Francesca', '1147.8461538461538'), ('214885', 'Meritxell', '1182.9107142857142'), ('214887', 'Stephanie', '1019.9512195121952'), ('214890', 'Petra', '1221.6363636363637'), ('214894', 'Tereza', '860.8055555555555'), ('214898', 'Kimika', '1097.219512195122'), ('214900', 'Martina', '1174.7142857142858'), ('214905', 'Abigail', '605.425925925926'), ('214906', 'Claire', '581.8194444444445'), ('214909', 'Jada', '909.2'), ('214919', 'Dalila', '876.6444444444444'), ('214924', 'Basak', '1235.0555555555557'), ('214926', 'Ema', '1234.2692307692307'), ('214929', 'Clara', '1218.2857142857142'), ('214934', 'Astrid Wanja', '1086.45'), ('214935', 'Malene', '999.15625'), ('214937', 'Eva', '852.1194029850747'), ('214939', 'Anna', '435.0281690140845'), ('214944', 'Claudia', '1148.5142857142857'), ('214945', 'Chelsea', '1132.0'), ('214954', 'Marketa', '353.44444444444446'), ('214956', 'Miriam', '564.547619047619'), ('214959', 'Nika', '1134.3055555555557'), ('214962', 'Anna', '947.0714285714286'), ('214964', 'Dariya', '1090.0'), ('214968', 'Laura Sofia', '1198.1538461538462'), ('214971', 'Kim', '1224.8823529411766'), ('214972', 'Shanshan', '694.2'), ('214973', 'Linnea', '959.6981132075472'), ('214975', 'Anhzelika', '850.9791666666666'), ('214978', 'Akiko', '1275.8235294117646'), ('214980', 'Jessica', '930.1315789473684'), ('214981', 'Elena', '632.6888888888889'), ('214983', 'Mihika', '1064.142857142857'), ('214985', 'Wiktoria', '1083.1454545454546'), ('214992', 'Zhibek', '1058.0'), ('214994', 'Polina', '1064.1025641025642'), ('214995', 'Sofya', '895.952380952381'), ('214998', 'Karina', '1246.3636363636363'), ('215002', 'Anna', '1024.904761904762'), ('215008', 'Siyu', '1241.1379310344828'), ('215010', 'Yijia', '1063.9411764705883'), ('215013', 'Marcelina', '1247.3636363636363'), ('215015', 'Karine', '868.8904109589041'), ('215016', 'Eleonora', '950.0277777777778'), ('215018', 'Destanee', '483.77464788732397'), ('215020', 'Anna', '319.4736842105263'), ('215021', 'Naima', '930.7027027027027'), ('215023', 'Elena', '1151.6666666666667'), ('215024', 'Kristina', '1218.0740740740741'), ('215026', 'Andra Maria', '1275.8235294117646'), ('215031', 'Dominique', '979.3589743589744'), ('215035', 'Dayana', '576.4307692307692'), ('215037', 'Kayla', '418.6031746031746'), ('215038', 'Pei Ju', '1061.3076923076924'), ('215039', 'Lara', '1180.5'), ('215041', 'Dalila', '1096.972972972973'), ('215042', 'Katie', '498.1111111111111'), ('215043', 'Qianhui', '826.1388888888889'), ('215044', 'Yu Tong', '1239.6666666666667'), ('215045', 'Xinyu', '681.175'), ('215047', 'Mi Zhuoma', '999.375'), ('215049', 'Michela', '1228.9285714285713'), ('215050', 'Schena', '1188.2941176470588'), ('215053', 'Dorien', '1196.56'), ('215054', 'Siqi', '980.9076923076923'), ('215055', 'Zhima', '1144.45'), ('215059', 'Reina', '1019.0'), ('215062', 'Carson', '1020.6'), ('215064', 'Maria', '835.2926829268292'), ('215065', 'Kylie', '798.3181818181819'), ('215066', 'Jenny', '902.1470588235294'), ('215071', 'Viktoriia', '1236.5333333333333'), ('215072', 'Polina', '1089.12'), ('215075', 'Laura', '937.5555555555555'), ('215096', 'Jaimee', '562.8450704225352'), ('215098', 'Emma', '1071.59375'), ('215100', 'Anna Maria', '1069.063492063492'), ('215116', 'Melissa Ishuan', '1104.357142857143'), ('215129', 'Alexandra', '1123.3461538461538'), ('215130', 'Natalie', '1062.0188679245282'), ('215134', 'Chengyiyi', '789.2857142857143'), ('215138', 'Lulu', '1098.2888888888888'), ('215140', 'Eugenia', '1157.5'), ('215144', 'Daniela', '1181.3684210526317'), ('215150', 'Shelly', '1171.0'), ('215151', 'Lina', '1153.5833333333333'), ('215155', 'Olesya', '501.44444444444446'), ('215159', 'Victoria Ariadna', '1236.0'), ('215163', 'Zeel', '791.2352941176471'), ('215164', 'Lizaveta', '1120.5652173913043'), ('215166', 'Aneta', '1149.9705882352941'), ('215174', 'Claudia', '1057.923076923077'), ('215180', 'Seira', '1115.72'), ('215185', 'Zhou', '1237.9'), ('215189', 'Alana', '1119.1639344262296'), ('215191', 'Sabina', '1057.837837837838'), ('215192', 'Veronika', '1080.3728813559321'), ('215193', 'Anda', '1150.0'), ('215196', 'Nicole', '1222.5135135135135'), ('215215', 'Mihaela Lorena', '1223.4'), ('215218', 'Anna', '1110.9333333333334'), ('215219', 'Kaja', '633.5454545454545'), ('215224', 'Aastha', '1199.8235294117646'), ('215227', 'Abigail', '915.0'), ('215228', 'Cameron', '1192.1818181818182'), ('215230', 'Katharine', '882.1071428571429'), ('215232', 'Elina', '1164.0'), ('215234', 'Daria', '859.4912280701755'), ('215236', 'Maria', '1078.25'), ('215239', 'Diana Maria', '1205.7692307692307'), ('215242', 'Nermeen', '1069.15'), ('215246', 'Mathilde', '1107.5166666666667'), ('215247', 'Daniela', '1024.888888888889'), ('215248', 'Yanni', '1059.2702702702702'), ('215249', 'Shou Na', '1120.388888888889'), ('215250', 'Hanyu', '543.968253968254'), ('215259', 'Leonie', '825.972972972973'), ('215262', 'Constanze', '1245.3333333333333'), ('215272', 'Zhuoma', '989.75'), ('215285', 'Ana', '1097.1025641025642'), ('215287', 'Alina', '1273.6842105263158'), ('215290', 'Katarina', '520.968253968254'), ('215296', 'Kristina', '1169.3725490196077'), ('215300', 'Karolina', '1277.1875'), ('215305', 'Desirae', '863.7826086956521'), ('215306', 'Emiliana', '732.8888888888889'), ('215313', 'Sing Le', '1141.842105263158'), ('215319', 'Yang', '1177.8823529411766'), ('215328', 'Margaux', '874.0'), ('215337', 'Olga', '710.5862068965517'), ('215340', 'Hortencia', '1251.1333333333334'), ('215349', 'Nina', '788.4166666666666'), ('215354', 'Lucia', '1144.4'), ('215368', 'Axana', '1064.0'), ('215369', 'Blanca', '904.6538461538462'), ('215370', 'Bianca', '408.7096774193548'), ('215371', 'Francesca', '533.8709677419355'), ('215372', 'Ksenia', '1136.24'), ('215383', 'Eva', '1162.1698113207547'), ('215384', 'Miranda', '1169.4864864864865'), ('215386', 'Vivian', '940.7358490566038'), ('215388', 'Sandra', '1251.6'), ('215392', 'Judith', '1224.0'), ('215393', 'Tijana', '1017.7777777777778'), ('215398', 'Lucia', '1122.3333333333333'), ('215401', 'Hana', '1233.0625'), ('215402', 'Boba', '1254.6341463414635'), ('215404', 'Vanessa', '1235.625'), ('215416', 'Kassandra', '927.0350877192982'), ('215417', 'Abir', '1228.75'), ('215420', 'Caroline', '1105.313725490196'), ('215423', 'Vicky', '1252.9130434782608'), ('215424', 'Patrycja', '982.4150943396227'), ('215426', 'Nikola', '1236.142857142857'), ('215431', 'Emily', '822.6792452830189'), ('215432', 'Olivia', '1149.3870967741937'), ('215435', 'Alessia', '1184.5217391304348'), ('215437', 'Monika', '893.7413793103449'), ('215438', 'Cindy', '1059.030303030303'), ('215440', 'Alicia', '1161.421052631579'), ('215442', 'Zinovia', '1221.5'), ('215448', 'Denise Antonela', '1160.3125'), ('215453', 'Marina', '1010.5454545454545'), ('215457', 'Carlota', '1236.7777777777778'), ('215459', 'Emily', '1099.6756756756756'), ('215468', 'Momoko', '772.6981132075472'), ('215470', 'Lorraine M', '972.75'), ('215472', 'Fiona', '1142.5882352941176'), ('215480', 'Suzan', '982.7222222222222'), ('215489', 'Ramu', '1010.4545454545455'), ('215492', 'Lisa Marie', '1015.0512820512821'), ('215505', 'Laura', '1035.7567567567567'), ('215507', 'Livia', '1179.875'), ('215520', 'Johana', '1111.8333333333333'), ('215523', 'Adva', '1255.3333333333333'), ('215528', 'Anna Maria', '1141.45'), ('215549', 'Laura', '947.6756756756756'), ('215550', 'Ayano', '597.6981132075472'), ('215551', 'Irina', '1227.8'), ('215554', 'Maryna', '735.0285714285715'), ('215555', 'Roosh', '1168.2857142857142'), ('215571', 'Guiomar', '957.9512195121952'), ('215575', 'Selin', '1168.6571428571428'), ('215579', 'Hsin Yuan', '1107.7142857142858'), ('215582', 'Kateryna', '1088.6'), ('215585', 'Anastasiia', '1245.75'), ('215588', 'Yasmine', '1018.3333333333334'), ('215601', 'Franziska', '1223.25'), ('215612', 'Elizabeth', '1249.0'), ('215617', 'Kei', '1003.1212121212121'), ('215627', 'Nicole', '1180.7272727272727'), ('215647', 'Lara', '1221.5'), ('215657', 'Kelia', '1114.9433962264152'), ('215658', 'Phillis', '826.6486486486486'), ('215677', 'Anne Sophie', '1252.0'), ('215693', 'Michaela', '754.8378378378378'), ('215697', 'Arlinda', '1074.3333333333333'), ('215698', 'Paula', '1122.6190476190477'), ('215699', 'Lucia', '1117.2702702702702'), ('215705', 'Dewi', '1154.2857142857142'), ('215707', 'Anna', '1112.7368421052631'), ('215709', 'Xiaoxi', '737.7547169811321'), ('215713', 'Anastasia', '337.23809523809524'), ('215721', 'Rebeca', '1145.4333333333334'), ('215727', 'Daria', '1186.6296296296296'), ('215733', 'Ekaterina', '1257.5238095238096'), ('215735', 'Sara', '1205.4'), ('215750', 'Ana', '1026.6842105263158'), ('215751', 'Mayar', '1252.5357142857142'), ('215754', 'Lea', '950.2093023255813'), ('215755', 'Mahak', '875.0'), ('215765', 'Oleksandra', '1012.4782608695652'), ('215769', 'Sarah', '869.3846153846154'), ('215774', 'Salma', '1249.3333333333333'), ('215776', 'Emmanuelle', '909.8205128205128'), ('215778', 'Emma', '1122.5384615384614'), ('215785', 'Maria Camila', '1188.5277777777778'), ('215790', 'Alexandra', '660.4509803921569'), ('215791', 'Eden', '1243.3333333333333'), ('215795', 'Lauryn', '1107.0882352941176'), ('215798', 'Rosa', '965.0'), ('215804', 'Kaylah', '1163.3478260869565'), ('215811', 'Alexandra', '1050.9130434782608'), ('215812', 'Shuyue', '966.0588235294117'), ('215820', 'Yidi', '1185.030303030303'), ('215832', 'Gabriella', '1027.5454545454545'), ('215833', 'Erina', '733.1351351351351'), ('215862', 'Vitalia', '1224.0'), ('215871', 'Laylo', '1226.076923076923'), ('215879', 'Ilay', '1135.5'), ('215889', 'Kaitlin', '901.3333333333334'), ('215894', 'Alexandra', '1225.6206896551723'), ('215898', 'Jule', '1243.904761904762'), ('215899', 'Simona', '995.3055555555555'), ('215905', 'Bojana', '857.6111111111111'), ('215909', 'Adrienn', '1200.4117647058824'), ('215910', 'Panna', '683.1081081081081'), ('215921', 'Salma', '1195.7333333333333'), ('215926', 'Julita', '1019.9411764705883'), ('215936', 'Francesca', '1121.0'), ('215937', 'Shuo', '864.1538461538462'), ('215943', 'Alexa', '971.0909090909091'), ('215946', 'Ye Xin', '1048.081081081081'), ('215947', 'Jia', '1169.6923076923076'), ('215948', 'Nina', '1220.3823529411766'), ('215950', 'Yasmina', '1227.7777777777778'), ('215962', 'Suzy', '698.7567567567568'), ('215967', 'Sasa', '1033.027027027027'), ('215970', 'Stefania', '1172.0714285714287'), ('215973', 'Katarzyna', '1045.344827586207'), ('215976', 'Valeriya', '735.3589743589744'), ('215983', 'Ann', '907.4'), ('215988', 'Mai', '721.4571428571429'), ('215992', 'Whitney', '1152.8947368421052'), ('215999', 'Julia', '1064.0'), ('216007', 'Draginja', '913.7272727272727'), ('216013', 'Yuliya', '963.9666666666667'), ('216016', 'Xiyu', '954.6'), ('216017', 'Jiatian', '1232.032258064516'), ('216020', 'Katyarina', '1010.1818181818181'), ('216036', 'Luna', '1139.0'), ('216042', 'Sunae', '1229.8'), ('216044', 'Yuki', '876.7428571428571'), ('216045', 'Svenja', '1231.0'), ('216051', 'Angelica', '1240.3181818181818'), ('216055', 'Francisca', '903.1666666666666'), ('216062', 'Meiling', '812.85'), ('216063', 'Tingting', '1015.2352941176471'), ('216066', 'Ella', '1223.9'), ('216074', 'Anna', '1136.2857142857142'), ('216076', 'Ashley', '460.9'), ('216079', 'Ran', '917.6060606060606'), ('216081', 'Maja', '717.1388888888889'), ('216083', 'Caty', '744.0'), ('216090', 'Michaela', '882.2424242424242'), ('216099', 'Loudmilla', '1220.0'), ('216119', 'Maileen', '1152.888888888889'), ('216122', 'Akilah', '772.8571428571429'), ('216133', 'Xin Yu', '1022.3333333333334'), ('216134', 'Vlada', '1034.090909090909'), ('216138', 'Romy', '758.1714285714286'), ('216143', 'Alessia', '1224.0'), ('216146', 'Marta', '536.0'), ('216148', 'Anna', '1228.5454545454545'), ('216150', 'Lara', '1104.076923076923'), ('216153', 'Amanda', '474.4166666666667'), ('216156', 'Himari', '1219.0'), ('216160', 'Ayumi', '1036.3666666666666'), ('216162', 'Meiqi', '1029.1666666666667'), ('216163', 'Mei Xu', '1031.6'), ('216185', 'Karolina', '938.375'), ('216186', 'Aneta', '1224.0'), ('216198', 'Ana', '1224.0'), ('216213', 'Sohyun', '1004.6666666666666'), ('216236', 'Adrienn', '1229.8461538461538'), ('216238', 'Ramya', '1121.8846153846155'), ('216240', 'Anne Marie', '1237.6363636363637'), ('216243', 'Yekaterina', '1224.0'), ('216252', 'Giulia', '1173.2631578947369'), ('216262', 'Clara', '1075.0'), ('216273', 'Yulia', '1117.6923076923076'), ('216288', 'Irina', '1137.75'), ('216294', 'Lucia', '1169.6923076923076'), ('216316', 'Ayumi', '1047.7575757575758'), ('216320', 'Ange Oby', '1226.3333333333333'), ('216321', 'Genevieve', '772.2857142857143'), ('216331', 'Eva Marie', '1083.8333333333333'), ('216347', 'Iga', '705.5625'), ('216355', 'Giorgie', '1226.5'), ('216357', 'Layne', '1184.0'), ('216371', 'Daria', '1178.2068965517242'), ('216373', 'Zoe', '1141.4117647058824'), ('216390', 'Jiaxue', '1161.0'), ('216397', 'Laura', '1231.7'), ('216398', 'Kariann', '1068.9166666666667'), ('216424', 'Caroline', '1231.904761904762'), ('216566', 'Mananchaya', '1230.6'), ('216569', 'Zeynep  Sena', '1229.5714285714287'), ('219434', 'Brienne', '917.0'), ('219868', 'Jiakang', '1230.6'), ('219875', 'Varvara', '1159.3076923076924'), ('220173', 'Betina', '1229.5714285714287'), ('220258', 'Viktoriya', '1174.608695652174'), ('220268', 'Eva', '1168.2857142857142'), ('220312', 'Taylor', '1066.3333333333333'), ('220330', 'Margaux', '1231.421052631579'), ('220331', 'Molly', '1210.7777777777778'), ('220367', 'Leylah Annie', '1030.5'), ('220371', 'Ellie', '1047.0'), ('220416', 'Moyuka', '1198.25'), ('220427', 'Nina', '1229.5714285714287'), ('220428', 'Brindtha', '1126.3333333333333'), ('220456', 'Naomi', '1104.5714285714287'), ('220491', 'Merel', '900.75'), ('220494', 'Arina Gabriela', '1224.0'), ('220532', 'Helene', '920.8333333333334'), ('220593', 'Kristina', '995.0')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT p.first_name , AVG(r.ranking) AS average_ranking FROM main.players p JOIN main.rankings r ON p.player_id = r.player_id GROUP BY p.first_name ;","Not match: [('1001.0679611650486', 'Karis'), ('1002.6792452830189', 'Sybille'), ('1003.1212121212121', 'Kei'), ('1003.5367647058823', 'Seda'), ('1004.6666666666666', 'Sohyun'), ('1004.7428571428571', 'Malika'), ('1005.75', 'Berta'), ('1006.1769911504425', 'Vladislava'), ('1006.2982456140351', 'Elizabeth Anita Alexandria'), ('1006.5128205128206', 'Oliwia'), ('1007.15', 'Mahitha'), ('1009.8666666666667', 'Treta'), ('1010.1818181818181', 'Katyarina'), ('1010.3333333333334', 'Da Hye'), ('1010.4545454545455', 'Ramu'), ('1011.3666666666667', 'Amelie'), ('1011.469696969697', 'Wendy Qi Wen'), ('1011.9433962264151', 'Elke'), ('1012.325', 'Kelsey'), ('1013.4761904761905', 'Maud'), ('1015.2352941176471', 'Tingting'), ('1015.5', 'Fatyha'), ('1015.6792452830189', 'Susan'), ('1016.5714285714286', 'Apichaya'), ('1017.2560553633218', 'Melina'), ('1017.3134328358209', 'Nikki'), ('1017.7777777777778', 'Tijana'), ('1018.6534653465346', 'Keri'), ('1018.6637931034483', 'Ashmitha'), ('1019.0', 'Reina'), ('1019.4107142857143', 'Helen'), ('1019.9411764705883', 'Julita'), ('1020.28125', 'Hye Min'), ('1020.4271844660194', 'Kerstin'), ('1020.6', 'Carson'), ('1021.6504854368932', 'Ratnika'), ('1022.3333333333334', 'Xin Yu'), ('1022.6198347107438', 'Jordana'), ('1022.9174311926605', 'Emiliana'), ('1023.089430894309', 'Tanya'), ('1023.8690476190476', 'Eveliina'), ('1024.0116279069769', 'Sherry'), ('1024.625', 'Aishwarya'), ('1024.6666666666667', 'Julia Mansano'), ('1025.0', 'Megumi'), ('1027.0', 'Guillermina'), ('1027.1382978723404', 'Oana'), ('1028.0365853658536', 'Madeleine'), ('1028.9565217391305', 'Sandy'), ('1029.0', 'Molly'), ('1029.0980392156862', 'Sonia'), ('1029.1666666666667', 'Meiqi'), ('1029.3196721311476', 'Trang'), ('1029.6888888888889', 'Eden'), ('1030.5', 'Leylah Annie'), ('1031.0', 'Nevena'), ('1031.228855721393', 'Ana Paula'), ('1031.5342465753424', 'Mallaurie'), ('1031.6', 'Mei Xu'), ('1032.2666666666667', 'Desiree'), ('1033.027027027027', 'Sasa'), ('1034.1304347826087', 'Yujia'), ('1034.5833333333333', 'Ailen'), ('1035.0384615384614', 'Kirsten Andrea'), ('1035.327868852459', 'Libi'), ('1035.46', 'Jazmin'), ('1035.5548387096774', 'Stephanie Mariel'), ('1035.6470588235295', 'Jin Ju'), ('1035.7780678851175', 'Paulina'), ('1035.95', 'Meng Ning'), ('1036.1214953271028', 'Magalie'), ('1037.0833333333333', 'Anushka'), ('1037.5274725274726', 'Jainy'), ('1038.35', 'Akvile'), ('1038.6911764705883', 'I Hsuan'), ('1039.0', 'Inger'), ('1039.3902439024391', 'Chi Fan'), ('1039.6744186046512', 'Abiodun'), ('1039.8333333333333', 'Melany Solange'), ('1041.0740740740741', 'Pippa'), ('1041.5367231638418', 'Yuriko'), ('1041.948717948718', 'Emily J'), ('1042.037037037037', 'Annie'), ('1042.6802325581396', 'Shu Ying'), ('1042.7843137254902', 'Dominique'), ('1045.6666666666667', 'Andrina'), ('1047.3529411764705', 'Yuqi'), ('1047.7575757575758', 'Si Qi'), ('1047.98224852071', 'Maria Paulina'), ('1048.081081081081', 'Ye Xin'), ('1049.0', 'Costanza'), ('1049.4655172413793', 'Antonina'), ('1049.834745762712', 'Noelia'), ('1050.7', 'Katya'), ('1051.1224489795918', 'Margaux'), ('1051.623188405797', 'Habiba'), ('1051.7096774193549', 'Antonela'), ('1051.7349397590363', 'Rita'), ('1052.8314606741574', 'Gaelle'), ('1054.0', 'Yuan'), ('1054.0813953488373', 'Nikol'), ('1054.606896551724', 'Robyn'), ('1054.9019607843138', 'Larikah'), ('1055.020202020202', 'Kady'), ('1056.0588235294117', 'Martha'), ('1057.628205128205', 'Alessia'), ('1058.0', 'Zhibek'), ('1059.2702702702702', 'Yanni'), ('1059.73', 'Rosalia'), ('1060.5633802816901', 'Kristina N'), ('1061.3076923076924', 'Pei Ju'), ('1062.3666666666666', 'Lamis'), ('1062.795918367347', 'Karina Kristina'), ('1063.4736842105262', 'Andjela'), ('1063.9411764705883', 'Yijia'), ('1064.0', 'Axana'), ('1064.142857142857', 'Mihika'), ('1066.5343511450383', 'Eleanor'), ('1066.5887096774193', 'Rosalie'), ('1067.019801980198', 'Alejandra'), ('1067.3413173652696', 'Marisa'), ('1068.4619883040937', 'Yolande'), ('1068.7457627118645', 'Tea'), ('1068.9166666666667', 'Kariann'), ('1069.0379746835442', 'Ryann'), ('1069.0925925925926', 'Inci'), ('1069.15', 'Nermeen'), ('1069.3208955223881', 'Hyojung'), ('1070.0377358490566', 'Kwan Yau'), ('1070.1025641025642', 'Louise'), ('1070.21875', 'Maureen'), ('1070.3417721518988', 'Simone'), ('1070.3967391304348', 'Anna Maria'), ('1070.5648854961833', 'Jawairiah'), ('1070.6666666666667', 'Shiori'), ('1070.9463414634147', 'Fatimah'), ('1071.3076923076924', 'Mi Jeong'), ('1071.5833333333333', 'Yukako'), ('1072.4', 'Leticia Garcia'), ('1072.857142857143', 'Ronke'), ('1072.9591836734694', 'Maria Andrea'), ('1073.1752577319587', 'Ebony'), ('1074.3333333333333', 'Arlinda'), ('1075.0', 'Tatia'), ('1075.8260869565217', 'Amira'), ('1077.8095238095239', 'Karolayne'), ('1079.05', 'Ivanka'), ('1081.142857142857', 'Wan Yi'), ('1081.1666666666667', 'Sari'), ('1082.3548387096773', 'Agata Jadwiga'), ('1083.1454545454546', 'Wiktoria'), ('1083.8333333333333', 'Eva Marie'), ('1084.0294117647059', 'May'), ('1084.107142857143', 'Sofico'), ('1084.7916666666667', 'Ana Gabriela'), ('1085.4242424242425', 'Mariaryeni'), ('1085.581818181818', 'Iana'), ('1086.45', 'Astrid Wanja'), ('1087.372340425532', 'Eleonore'), ('1087.3823529411766', 'Naz'), ('1087.6216216216217', 'Gyulnara'), ('1089.1603773584907', 'Angeliki'), ('1089.2100840336134', 'Rashmi'), ('1089.7111111111112', 'Vanja'), ('1092.2771084337348', 'Emiliya'), ('1092.7621951219512', 'Magy'), ('1094.4583333333333', 'Dina'), ('1095.1176470588234', 'Hikari'), ('1096.1140350877192', 'Nour'), ('1096.9130434782608', 'Yoshimi'), ('1097.0', 'Sharon Sanchana'), ('1097.219512195122', 'Kimika'), ('1098.2888888888888', 'Lulu'), ('1098.357142857143', 'Yu Jin'), ('1099.625', 'Parris'), ('1104.357142857143', 'Melissa Ishuan'), ('1105.1298701298701', 'Alicia'), ('1105.171875', 'Sanae'), ('1105.3125', 'Kanako'), ('1106.3076923076924', 'Farah'), ('1106.5', 'Pei Hsuan'), ('1107.0882352941176', 'Lauryn'), ('1107.0919540229886', 'Danijela'), ('1107.7142857142858', 'Hsin Yuan'), ('1110.0434782608695', 'Abbi'), ('1110.0816326530612', 'Juliana'), ('1110.3333333333333', 'Aida'), ('1110.4411764705883', 'Mihoki'), ('1110.4594594594594', 'Yawna'), ('1110.5376344086021', 'Hana'), ('1111.08', 'Katrine Isabel'), ('1111.8333333333333', 'Johana'), ('1112.1458333333333', 'Chompoothip'), ('1112.75', 'Olaya'), ('1112.875', 'Christie'), ('1112.9450549450548', 'Camille'), ('1113.2325581395348', 'Tanaporn'), ('1114.4074074074074', 'Milena'), ('1114.9433962264152', 'Kelia'), ('1114.99375', 'Isabela'), ('1115.0851063829787', 'Deeon'), ('1115.72', 'Seira'), ('1116.4190476190477', 'Jil Nora'), ('1117.55', 'Wen Ling'), ('1117.64', 'Jasmine Amber'), ('1117.6666666666667', 'Rana'), ('1117.7142857142858', 'Kate'), ('1117.88', 'Saana'), ('1118.4166666666667', 'Tamar'), ('1118.904761904762', 'Huijie'), ('1119.1639344262296', 'Alana'), ('1119.4897959183672', 'Maria Del Rosario'), ('1120.388888888889', 'Shou Na'), ('1120.5652173913043', 'Lizaveta'), ('1121.04', 'Mitsumi'), ('1121.0869565217392', 'Maurien'), ('1121.2432432432433', 'Rafaela'), ('1121.767857142857', 'Jara'), ('1121.8846153846155', 'Ramya'), ('1122.4423076923076', 'Adnya'), ('1122.4545454545455', 'Se Jin'), ('1123.3855421686746', 'Cemre'), ('1123.4864864864865', 'Alessandra'), ('1123.6486486486488', 'Deria'), ('1124.1666666666667', 'Nina Isabella'), ('1125.0363636363636', 'Rio'), ('1125.5471698113208', 'Rona'), ('1126.3333333333333', 'Brindtha'), ('1127.7368421052631', 'Anca'), ('1127.9338842975208', 'Carlotta'), ('1128.030303030303', 'Chantelle'), ('1128.7272727272727', 'Angela'), ('1128.901098901099', 'Yoko'), ('1130.6037735849056', 'Vaniya'), ('1131.6333333333334', 'Donika'), ('1132.0', 'Chelsea'), ('1132.1744186046512', 'Dariya'), ('1132.4109589041095', 'Ushna'), ('1135.5', 'Ilay'), ('1136.8535031847134', 'Ivette'), ('1137.19', 'Priscila'), ('1138.8490566037735', 'Victoire'), ('1138.9166666666667', 'Nastassia'), ('1139.0', 'Luna'), ('1139.2340425531916', 'Sarahi'), ('1139.7', 'Mafalda'), ('114.05571428571429', 'Jie'), ('114.78806907378336', 'Yayuk'), ('1140.981981981982', 'Busra'), ('1141.842105263158', 'Cecilie Lundgaard'), ('1141.842105263158', 'Sing Le'), ('1142.9285714285713', 'Savannah'), ('1143.7957746478874', 'Marcela Guimaraes'), ('1144.45', 'Zhima'), ('1145.1641791044776', 'Alessondra'), ('1145.4333333333334', 'Rebeca'), ('1145.8235294117646', 'Akiho'), ('1146.3934426229507', 'Tamari'), ('1147.8526315789475', 'Rachel'), ('1147.8529411764705', 'Lidia'), ('1148.0', 'Shreya'), ('1148.9166666666667', 'Mariia'), ('1149.3125', 'Spurti'), ('1150.0', 'Anda'), ('1150.0', 'Vinciane'), ('1150.6607142857142', 'Ghislaine'), ('1151.95', 'Asha'), ('1152.0857142857142', 'Aneta'), ('1152.142857142857', 'Gebriela'), ('1152.7837837837837', 'Weronika Jasmina'), ('1152.888888888889', 'Maileen'), ('1153.590909090909', 'Mami'), ('1153.9166666666667', 'Georgiana'), ('1153.936507936508', 'Hao Ching'), ('1154.093023255814', 'Melissa'), ('1154.25', 'Agustina Elena'), ('1154.2714285714285', 'Elizabeta'), ('1154.2857142857142', 'Dewi'), ('1154.4166666666667', 'Shir'), ('1155.0392156862745', 'Afroditi'), ('1155.8191489361702', 'Yekaterina'), ('1156.28125', 'Paige Mary'), ('1156.340425531915', 'Ah'), ('1157.5', 'Eugenia'), ('1157.8', 'Almudena'), ('1159.1818181818182', 'Dagmara'), ('1159.5632183908046', 'Theresa'), ('1160.3125', 'Denise Antonela'), ('1161.0', 'Jiaxue'), ('1161.5675675675675', 'Caroline B'), ('1162.8301886792453', 'Kamilla'), ('1163.0', 'Mariona'), ('1163.3478260869565', 'Kaylah'), ('1164.090909090909', 'Ki Ryang'), ('1164.107142857143', 'Nelise'), ('1164.95', 'Aina'), ('1165.093023255814', 'Colomba'), ('1165.5573770491803', 'Ina'), ('1166.875', 'Yarden'), ('1167.2758620689656', 'Nonna'), ('1167.3333333333333', 'Stefani'), ('1167.3368421052633', 'Belen'), ('1168.2857142857142', 'Roosh'), ('1168.3396226415093', 'Gulben'), ('1168.6571428571428', 'Selin'), ('1168.7967479674796', 'Ella'), ('1169.4864864864865', 'Miranda'), ('1169.6923076923076', 'Jia'), ('117.95684523809524', 'Iveta'), ('1170.1830985915492', 'Maria Jesus'), ('1170.3461538461538', 'You Na'), ('1170.840579710145', 'Violetta'), ('1170.9411764705883', 'Iulia Maria'), ('1171.0', 'Shelly'), ('1172.5531914893618', 'Assia'), ('1173.75', 'Maftuna'), ('1174.0', 'Nikita'), ('1175.7666666666667', 'Juliana Rocha'), ('1175.909090909091', 'Paula Andrea'), ('1176.5', 'Ralina'), ('1177.622641509434', 'Nattawadee'), ('1177.8823529411766', 'Yang'), ('1179.1555555555556', 'Olena'), ('1179.4153846153847', 'Haine'), ('1179.6216216216217', 'Leah'), ('1179.875', 'Livia'), ('1180.3828125', 'Naoko'), ('1180.5454545454545', 'Leslie'), ('1181.27868852459', 'Aselya'), ('1181.3548387096773', 'Manya'), ('1181.4736842105262', 'Dajana'), ('1181.6078431372548', 'Alory Regina Elorriaga'), ('1182.9107142857142', 'Meritxell'), ('1184.0', 'Layne'), ('1184.0416666666667', 'Andressa Cristina'), ('1184.6666666666667', 'Sabina Elena'), ('1184.7222222222222', 'Liniques'), ('1184.8260869565217', 'Smriti'), ('1185.030303030303', 'Yidi'), ('1185.7142857142858', 'Aldana'), ('1185.75', 'Hollie'), ('1186.9444444444443', 'Muge'), ('1187.0384615384614', 'Ferny'), ('1187.9245283018868', 'Shiran'), ('1188.2941176470588', 'Schena'), ('1188.5277777777778', 'Maria Camila'), ('1188.7096774193549', 'Mary Ann'), ('1189.0', 'June'), ('1190.0629921259842', 'Lutfiye'), ('1190.0833333333333', 'Maria Agustina'), ('1190.7307692307693', 'Clara'), ('1191.6470588235295', 'Sarai Delfina'), ('1192.1818181818182', 'Cameron'), ('1192.3783783783783', 'Camila Vital'), ('1192.5454545454545', 'Intissar'), ('1193.3529411764705', 'Emma Christine'), ('1196.0', 'Gulchekhra'), ('1196.56', 'Dorien'), ('1197.0', 'Giovanna'), ('1197.578947368421', 'Carolyn'), ('1198.1538461538462', 'Laura Sofia'), ('1198.25', 'Moyuka'), ('1198.3333333333333', 'Damira'), ('1199.8235294117646', 'Aastha'), ('1200.2', 'Aimee'), ('1201.16', 'Mila'), ('1201.25', 'Vita'), ('1202.2692307692307', 'Man Ying Maggie'), ('1203.5', 'Madina'), ('1204.6666666666667', 'Salma'), ('1204.7272727272727', 'Federica Joe'), ('1205.7692307692307', 'Diana Maria'), ('1206.6666666666667', 'Maia A'), ('1208.4285714285713', 'Avgusta'), ('1208.952380952381', 'Vishesh'), ('1209.4', 'Amrita'), ('1209.625', 'Emilija'), ('1209.625', 'Rui'), ('1209.625', 'Yihong'), ('1209.7777777777778', 'Sarlota'), ('121.82273948075202', 'Tamarine'), ('121.9579326923077', 'Jill'), ('1210.2571428571428', 'Se Hyun'), ('1211.0', 'Phenomena'), ('1211.2333333333333', 'Elodie'), ('1212.9166666666667', 'Justina'), ('1213.1666666666667', 'Adrienn'), ('1213.2142857142858', 'Mercedes'), ('1214.1142857142856', 'Vincenza'), ('1214.7692307692307', 'Hazal'), ('1214.857142857143', 'Ege'), ('1215.0', 'Marijana'), ('1217.469387755102', 'Madeline'), ('1218.5652173913043', 'Esen'), ('1219.0', 'Himari'), ('122.19587628865979', 'Agnieszka'), ('1220.0', 'Loudmilla'), ('1221.3333333333333', 'Sophia'), ('1221.5', 'Zinovia'), ('1221.7931034482758', 'Elaine'), ('1221.8333333333333', 'Blessing'), ('1221.904761904762', 'Milica'), ('1222.24', 'Yosr'), ('1223.4', 'Mihaela Lorena'), ('1224.0', 'Arina Gabriela'), ('1224.0', 'Judith'), ('1225.388888888889', 'Sneha'), ('1225.75', 'Ya'), ('1226.076923076923', 'Laylo'), ('1226.3333333333333', 'Ange Oby'), ('1226.5', 'Giorgie'), ('1226.5454545454545', 'Daphne'), ('1227.0', 'Muazzez'), ('1227.344827586207', 'Zaineb'), ('1227.7777777777778', 'Yasmina'), ('1227.8', 'Joanne'), ('1228.3235294117646', 'Shangqing'), ('1228.388888888889', 'Anke'), ('1228.75', 'Abir'), ('1228.9285714285713', 'Michela'), ('1229.5714285714287', 'Betina'), ('1229.5714285714287', 'Zeynep  Sena'), ('1229.7333333333333', 'En Pei'), ('1229.8', 'Sunae'), ('1230.2', 'Talya'), ('1230.2', 'Yuval'), ('1230.6', 'Jiakang'), ('1230.6', 'Mananchaya'), ('1231.2727272727273', 'Lorenza'), ('1231.5', 'Agne'), ('1232.0', 'Emilia'), ('1232.032258064516', 'Jiatian'), ('1232.2', 'Idia'), ('1232.8', 'Chaoyi'), ('1234.2857142857142', 'Milagros'), ('1234.6176470588234', 'Doga Selen'), ('1235.1960784313726', 'Sarvinoz'), ('1236.0', 'Victoria Ariadna'), ('1236.5333333333333', 'Viktoriia'), ('1236.6153846153845', 'Gulnaz'), ('1236.7627118644068', 'Shakhnoza'), ('1236.7777777777778', 'Carlota'), ('1237.6363636363637', 'Anne Marie'), ('1237.9', 'Zhou'), ('1238.0625', 'Minami'), ('1239.6666666666667', 'Yu Tong'), ('1240.92', 'Sean'), ('1241.1379310344828', 'Siyu'), ('1242.0', 'Damini'), ('1243.0', 'Vilma Y'), ('1243.4', 'Moulika'), ('1243.4285714285713', 'Ana Luisa'), ('1243.875', 'Jaimy Gayle'), ('1243.904761904762', 'Jule'), ('1244.3333333333333', 'Frederikke'), ('1245.3333333333333', 'Constanze'), ('1245.75', 'Anastasiia'), ('1247.3333333333333', 'Jamilya'), ('1247.3636363636363', 'Marcelina'), ('1247.909090909091', 'Nataliya'), ('1248.2', 'Dilara'), ('1248.72', 'Ahlam'), ('1249.3333333333333', 'Warona'), ('1251.1333333333334', 'Hortencia'), ('1252.0', 'Anne Sophie'), ('1252.9130434782608', 'Vicky'), ('1253.4', 'Beatriz Magdalena'), ('1254.6341463414635', 'Boba'), ('1255.3333333333333', 'Adva'), ('1258.5', 'Mouna'), ('1261.8181818181818', 'Yasmyn'), ('1262.5416666666667', 'Janja'), ('1263.7666666666667', 'Yoo Ri'), ('1267.0', 'Jin'), ('127.06775067750678', 'Kaia'), ('1275.8235294117646', 'Andra Maria'), ('1281.8461538461538', 'Arthi'), ('1281.8461538461538', 'Chanikarn'), ('131.02074074074073', 'Tsvetana'), ('132.12638580931264', 'Paola'), ('1332.0737704918033', 'Micaela'), ('134.21917808219177', 'Catherine Cartan'), ('135.88910505836577', 'Tamira'), ('1382.1538461538462', 'Beauty'), ('1397.5', 'Olawaseun'), ('14.654294803817603', 'Serena'), ('143.48235294117646', 'Mallory'), ('144.3264367816092', 'Anabel'), ('146.59709379128137', 'Bethanie'), ('149.46360759493672', 'Jarmila'), ('1493.0', 'Damilola'), ('150.96681415929203', 'Roberta'), ('159.62397820163488', 'Kveta'), ('162.3505747126437', 'Sesil'), ('165.96132596685084', 'Kurumi'), ('166.41358024691357', 'Shahar'), ('166.6586270871985', 'Yung Jan'), ('167.50632911392404', 'Heather'), ('167.90740740740742', 'Shuai'), ('169.13578500707214', 'Melinda'), ('171.71134020618555', 'Dominika'), ('177.22695035460993', 'Sania'), ('182.02426160337552', 'Timea'), ('185.3469387755102', 'Michaella'), ('185.75', 'Vania'), ('186.76587795765877', 'Mirjana'), ('188.06095041322314', 'Lourdes'), ('194.2392065344224', 'Maria Elena'), ('195.66923570969814', 'Vera'), ('200.97080291970804', 'Aravane'), ('201.87700534759358', 'Anna Lena'), ('203.5871080139373', 'Sabine'), ('205.17590361445784', 'Lesia'), ('208.95263157894738', 'Misaki'), ('210.0846394984326', 'Monica'), ('211.01377118644066', 'Brenda'), ('211.41240310077518', 'Yaroslava'), ('211.67325428194994', 'Edina'), ('213.75043630017453', 'Sorana'), ('215.25185185185185', 'Akgul'), ('215.6615811373093', 'Chanelle'), ('217.2493188010899', 'Su Wei'), ('217.85922330097088', 'Alla'), ('218.4701086956522', 'Severine'), ('221.66153846153847', 'Anastasija'), ('222.81428571428572', 'Zarina'), ('223.50900900900902', 'Donna'), ('229.35687022900763', 'Urszula'), ('229.3774193548387', 'Garbine'), ('235.31431431431432', 'Klara'), ('236.07412398921832', 'Cara'), ('240.0448979591837', 'Vesna'), ('240.5306603773585', 'Janette'), ('246.19871794871796', 'Richel'), ('247.7449768160742', 'Tatjana'), ('248.74237737516572', 'Anne'), ('249.5244140625', 'Eleni'), ('252.11485774499474', 'Alize'), ('252.6093155893536', 'Barbora'), ('259.63589743589745', 'Sloane'), ('262.30884808013354', 'Junri'), ('265.79487179487177', 'Annika'), ('267.03227571115974', 'Svetlana'), ('268.05945945945945', 'Dinah'), ('270.5896860986547', 'Coco'), ('272.08855291576674', 'Kai Chen'), ('273.57517899761336', 'Mona'), ('274.85317919075146', 'Renata'), ('275.6055900621118', 'Lindsay'), ('279.16438356164383', 'Dalma'), ('279.23336006415394', 'Arantxa'), ('279.78655282817505', 'Marion'), ('280.79959100204496', 'Michelle'), ('281.871335504886', 'Mariya'), ('283.63246554364474', 'Romina'), ('284.22813688212926', 'Luksika'), ('284.8326771653543', 'Liezel'), ('284.8724727838258', 'Aiko'), ('285.84388185654007', 'Irina Camelia'), ('287.71625344352617', 'Kiki'), ('288.74423480083857', 'Irena'), ('289.60283687943263', 'Regina'), ('290.0614657210402', 'Rika'), ('290.64452214452217', 'Madison'), ('291.4792817679558', 'Kathrin'), ('293.76942355889724', 'Catalina'), ('294.33209990749305', 'Kateryna'), ('296.2025641025641', 'Vitalia'), ('296.5792682926829', 'Sharon'), ('296.8219584569733', 'Greta'), ('297.39032258064515', 'Saisai'), ('298.1861898890259', 'Pauline'), ('300.3974358974359', 'Magda'), ('300.56296296296296', 'Marie Eve'), ('302.83268482490274', 'Danka'), ('302.84831460674155', 'Ajla'), ('304.4619771863118', 'Raluca'), ('305.19563522992985', 'Galina'), ('306.1794310722101', 'Maria Jose'), ('308.56833824975416', 'Angelique'), ('308.64912280701753', 'Kirsten'), ('309.35767790262173', 'Xinyun'), ('310.3405299313052', 'Johanna'), ('311.87854251012146', 'Cagla'), ('312.54158964879855', 'Stanislava'), ('312.7584269662921', 'Kelly S'), ('313.45625', 'Nao'), ('318.2867132867133', 'Yvonne'), ('318.69978858350953', 'Carly'), ('32.984862819299906', 'Venus'), ('321.23595505617976', 'Eri'), ('322.17758620689654', 'Yurika'), ('322.62611607142856', 'Lucie'), ('323.1388101983003', 'Reka Luca'), ('323.86176470588236', 'Maryna'), ('324.3720930232558', 'Elena'), ('324.63613231552165', 'Madalina'), ('325.5912596401028', 'Margalita'), ('325.6162790697674', 'Yafan'), ('331.3681818181818', 'Ashleigh'), ('331.93949394939494', 'Katalin'), ('334.7118644067797', 'Elise'), ('337.5292682926829', 'Mervana'), ('340.2890442890443', 'Sacha'), ('342.40130505709624', 'Caroline'), ('343.0985324947589', 'Tadeja'), ('343.22432701894314', 'Alberta'), ('343.25546975546973', 'Kristina'), ('343.2835365853659', 'Chanel'), ('345.51020408163265', 'Anna Karolina'), ('347.34943639291464', 'Estrella'), ('348.19338235294117', 'Jelena'), ('348.54794520547944', 'Kyoka'), ('348.6364892881825', 'Daniela'), ('349.54794520547944', 'Aryna'), ('353.44444444444446', 'Marketa'), ('355.7223168654174', 'Masa'), ('355.88102893890675', 'Virginie'), ('356.0105210420842', 'Lisa'), ('356.8219696969697', 'Corinna'), ('359.3764705882353', 'Chia Jung'), ('359.81081081081084', 'Maria Teresa'), ('361.0', 'Mandy'), ('365.50280484204313', 'Petra'), ('367.2274678111588', 'Anett'), ('368.14331210191085', 'Valentyna'), ('368.26881720430106', 'Sachie'), ('369.1620469083156', 'Jing Jing'), ('372.32502965599053', 'Melanie'), ('372.89398280802294', 'Shelby'), ('374.93926247288505', 'Noppawan'), ('376.47888446215137', 'Flavia'), ('376.7356115107914', 'Mihaela'), ('376.7617554858934', 'Nigina'), ('378.0163727959698', 'Casey'), ('380.5308641975309', 'Louisa'), ('380.609375', 'Danica'), ('381.2581602373887', 'Yanina'), ('381.5512572533849', 'Yi Fan'), ('382.6888217522659', 'Varvara'), ('382.82479784366575', 'Lyudmyla'), ('383.4714587737844', 'Qiang'), ('383.6413199426112', 'Claudine'), ('383.7832512315271', 'Dia'), ('383.9921465968586', 'Alexa'), ('384.87776983559684', 'Yuliya'), ('385.2651515151515', 'Chin Wei'), ('385.8135593220339', 'Patty'), ('386.7025316455696', 'Tamaryn'), ('387.5662100456621', 'Taylor'), ('387.66706161137444', 'Abigail'), ('387.73412112259973', 'Stefanie'), ('387.87113402061857', 'Liana Gabriela'), ('390.0', 'Conny'), ('390.2361111111111', 'Tessah'), ('391.3003629764065', 'Agnes'), ('391.4656290531777', 'Zi'), ('392.44444444444446', 'Elena Gabriela'), ('392.7313829787234', 'Bojana'), ('395.6680227827502', 'Nuria'), ('396.225', 'Georgina'), ('396.2893280632411', 'Ana'), ('397.83561643835617', 'Ayla'), ('398.3106546854942', 'Vanessa'), ('398.83478260869566', 'Tetyana'), ('400.8093385214008', 'Sachia'), ('401.0998263888889', 'Katarina'), ('402.36756756756756', 'Jamie'), ('402.49931972789113', 'Romana'), ('403.48784576697403', 'Alison'), ('403.8775981524249', 'Ying Ying'), ('403.935', 'Patricia Maria'), ('406.21702404158543', 'Samantha'), ('406.5511363636364', 'Cory Ann'), ('406.6258503401361', 'Jana'), ('406.9281767955801', 'Fangzhou'), ('407.029702970297', 'Mayo'), ('407.5463976945245', 'Nadia'), ('410.8463541666667', 'Mailen'), ('411.5068493150685', 'Usue Maitane'), ('411.70779777206513', 'Carla'), ('412.74466019417474', 'Ayumi'), ('414.4332292750607', 'Andrea'), ('414.66339869281046', 'Evgenia'), ('415.7', 'Kathinka'), ('415.9078341013825', 'Amra'), ('416.3666666666667', 'Carina'), ('417.44323483670297', 'Heidi'), ('417.8053097345133', 'Susanne'), ('418.2566137566138', 'Yi Miao'), ('418.39748953974896', 'Elitsa'), ('418.81925343811395', 'Ling'), ('419.1633466135458', 'Denisa'), ('419.32988047808766', 'Marta'), ('421.44179894179894', 'Shuko'), ('421.6573033707865', 'Elina'), ('424.64521739130436', 'Andreja'), ('425.82394366197184', 'Tina'), ('426.3886462882096', 'Su Jeong'), ('426.6002565198803', 'Maria'), ('427.0', 'Ronit'), ('428.5496828752643', 'Anna Giulia'), ('430.0872542522642', 'Anastasia'), ('431.19607843137254', 'Robin'), ('431.3144424131627', 'Ye Ra'), ('432.6511627906977', 'Olga'), ('432.6949152542373', 'Anhelina'), ('434.68', 'Danielle Rose'), ('435.1470588235294', 'Ons'), ('436.66881028938906', 'Nudnida'), ('436.84339509862525', 'Irina'), ('437.05298013245033', 'Francoise'), ('437.11396648044695', 'Mathilde'), ('437.4119658119658', 'Tetiana'), ('437.73858921161826', 'Chiaki'), ('437.86915887850466', 'Jasmine'), ('438.4245810055866', 'Maiko'), ('439.5747863247863', 'Cristina Andreea'), ('439.81414868105514', 'Ivana'), ('439.87772357723577', 'Stephanie'), ('440.35214446952597', 'Wen Hsin'), ('441.9846743295019', 'Aliaksandra'), ('442.0344827586207', 'Evgeniya'), ('443.0228531855956', 'Maria Fernanda'), ('443.45754716981133', 'Claire'), ('443.6296006264683', 'Magdalena'), ('443.76148409893995', 'Kyra'), ('443.8467908902692', 'Kristyna'), ('444.96190476190475', 'Yue Yue'), ('444.9760935910478', 'Victoria'), ('445.18918918918916', 'Kristie'), ('446.7231833910035', 'Olivia'), ('447.93283582089555', 'Miyabi'), ('450.22998544395927', 'Aleksandra'), ('450.4642082429501', 'Varatchaya'), ('451.33577981651376', 'Lenka'), ('451.5810397553517', 'Florencia'), ('451.8657487091222', 'Sheng Nan'), ('451.92875448487956', 'Zuzana'), ('452.625', 'Ilona'), ('453.01556420233464', 'Alisa'), ('453.43392070484583', 'Asia'), ('454.06233062330625', 'Grace'), ('454.9920529801324', 'Christina'), ('457.4050279329609', 'Beatriz'), ('458.86633663366337', 'Ysaline'), ('459.29286608260327', 'Katarzyna'), ('460.8932038834951', 'An Sophie'), ('461.06702898550725', 'Teliana'), ('462.4270462633452', 'Monique'), ('464.1367781155015', 'Chi Chi'), ('464.95631067961165', 'Darija'), ('465.24962852897477', 'Pemra'), ('467.24657534246575', 'Xiaodi'), ('471.5439093484419', 'Evelyn'), ('471.8367290748899', 'Ekaterina'), ('472.338003502627', 'Karin'), ('475.2979683972912', 'Tara'), ('477.62886597938143', 'Eugenie'), ('478.30369515011546', 'Polona'), ('479.51738241308794', 'Roxane'), ('479.5530612244898', 'Ayu Fani'), ('479.8914728682171', 'Valentini'), ('480.646017699115', 'Xinyu'), ('481.3229166666667', 'Leticia'), ('482.26169844020797', 'Anais'), ('482.36648501362396', 'Ksenia'), ('482.43243243243245', 'Ioana Diana'), ('483.77464788732397', 'Destanee'), ('483.97225572979494', 'Naomi'), ('484.9442231075697', 'Lauren'), ('485.35135135135135', 'Yulia'), ('485.40168539325845', 'Myrtille'), ('485.46875', 'Nicoleta Catalina'), ('485.9559748427673', 'Indy'), ('486.6092544987147', 'Maria Joao'), ('487.6268656716418', 'Raveena'), ('488.76107382550333', 'Kumiko'), ('488.7671232876712', 'Xu Liu'), ('489.27513227513225', 'Teodora'), ('489.5294964028777', 'Iryna'), ('489.5307517084282', 'Elizaveta'), ('489.65909090909093', 'Risa'), ('490.4144736842105', 'Aranza'), ('491.8507295173962', 'Katerina'), ('492.6608695652174', 'Katy'), ('492.8915187376726', 'Jin A'), ('493.98205383848455', 'Akiko'), ('494.6111111111111', 'Remi'), ('495.22641509433964', 'Riko'), ('496.7156398104265', 'Ana Sofia'), ('496.9431818181818', 'Alyona'), ('497.42124542124543', 'Lin'), ('499.4127634660422', 'Nicole'), ('500.29483037156706', 'Eva'), ('500.688679245283', 'Shiho'), ('501.0619469026549', 'Jil Belen'), ('501.44444444444446', 'Olesya'), ('501.5860215053763', 'Jesika'), ('504.4145867098865', 'Laura'), ('506.39344262295083', 'Ulrikke'), ('507.4', 'Viktorija'), ('508.340206185567', 'Ellie'), ('508.4679802955665', 'Paula Cristina'), ('509.80945757997216', 'Sara'), ('512.1515151515151', 'Haruna'), ('512.3787128712871', 'Julie'), ('514.1732026143791', 'So Jung'), ('514.586319218241', 'Peangtarn'), ('514.7174515235457', 'Lesley'), ('515.3191489361702', 'Nicha'), ('516.1982942430703', 'Laura Ioana'), ('516.6615384615385', 'Makoto'), ('520.9397993311037', 'Doroteja'), ('521.5358361774744', 'Justine'), ('522.6561403508772', 'Kai Lin'), ('522.984693877551', 'Krista'), ('523.2788844621514', 'Miharu'), ('524.7444668008048', 'Chen'), ('524.9192825112108', 'Ana Clara'), ('525.9552572706936', 'Dalila'), ('526.2644836272041', 'Gail'), ('526.3535641547861', 'Sofia'), ('526.3698630136986', 'Mari'), ('528.8673050615595', 'Nina'), ('529.583908045977', 'Sally'), ('529.7777777777778', 'Jia Qi'), ('531.1829405162739', 'Darya'), ('532.6881807180315', 'Marina'), ('533.433770014556', 'Kyung Mi'), ('533.5940594059406', 'Georgia'), ('533.9586374695864', 'Chieh Yu'), ('533.9652351738241', 'Oksana'), ('534.890243902439', 'Hiroko'), ('537.577922077922', 'Nungnadda'), ('539.6164383561644', 'Raluca Georgiana'), ('539.7944621938232', 'Camila'), ('541.1570881226054', 'Sofiya'), ('541.273631840796', 'Bernarda'), ('541.952380952381', 'Montserrat'), ('542.2382851445662', 'Simona'), ('542.7168141592921', 'Nanuli'), ('543.031185031185', 'Nathalia'), ('543.968253968254', 'Hanyu'), ('544.1627906976744', 'Freya'), ('544.2636655948553', 'Marija'), ('544.5041866028708', 'Erika'), ('545.449074074074', 'Yuxuan'), ('546.5551763367463', 'Sarah'), ('547.277108433735', 'Greetje'), ('547.7037037037037', 'Natsumi'), ('550.1941544885177', 'Bibiane'), ('550.9545454545455', 'Dea'), ('551.5304659498208', 'Deniz'), ('551.5557158312297', 'Anna'), ('552.4653465346535', 'Ayaka'), ('553.9434782608696', 'Ekaterine'), ('554.3953934740883', 'Mi'), ('554.5290322580645', 'Nastassja'), ('554.5376344086021', 'Cristiana'), ('555.3384615384615', 'Bunyawi'), ('555.6572164948453', 'Vojislava'), ('556.0428051001821', 'Mariana'), ('556.2303370786517', 'Azra'), ('556.7936681222708', 'Jennifer'), ('557.241418764302', 'Tereza'), ('557.9232456140351', 'Allie'), ('558.0162601626016', 'Paula'), ('560.6778190830236', 'Arina'), ('562.8450704225352', 'Jaimee'), ('563.964505613908', 'Sandra'), ('564.1434426229508', 'Carol'), ('565.8211508553654', 'Silvia'), ('566.4943396226415', 'Natela'), ('566.7873931623932', 'Isabella'), ('566.9148936170212', 'Viktoria'), ('567.0507399577167', 'Korina'), ('567.8518518518518', 'Gioia'), ('567.9464544138929', 'Liga'), ('568.2547169811321', 'Kamila'), ('568.3374316939891', 'Rebecca'), ('569.1904761904761', 'Fanny'), ('569.2647632558965', 'Alexandra'), ('570.2723004694835', 'Constance'), ('570.534951862704', 'Francesca'), ('572.2654545454545', 'So Ra'), ('572.8059701492538', 'Patricia'), ('573.5197368421053', 'Na Ri'), ('573.6708333333333', 'Storm'), ('573.8729603729604', 'Rushmi'), ('574.8723404255319', 'Harmony'), ('574.9808362369338', 'Lina'), ('575.4626436781609', 'Chang'), ('576.4307692307692', 'Dayana'), ('576.9', 'Klaartje'), ('576.9173467252564', 'Julia'), ('577.9677419354839', 'Natalie'), ('578.07962529274', 'Aleksandrina'), ('578.1381578947369', 'Irina Maria'), ('578.5', 'Jiaxi'), ('579.2153846153847', 'Irene'), ('579.437984496124', 'Vanesa'), ('579.5214723926381', 'Elixane'), ('583.1686746987951', 'Kayla'), ('583.530303030303', 'Ching Wen'), ('583.9347826086956', 'Annalisa'), ('584.359375', 'Giuliana'), ('585.093851132686', 'Emily'), ('585.2589641434263', 'Wing Yau Venise'), ('585.8517745302714', 'Justyna'), ('586.2250489236791', 'Miki'), ('586.865', 'Ya Hsuan'), ('586.9412296564195', 'Karolina'), ('589.1298076923077', 'Antonia'), ('591.2544731610338', 'Audrey'), ('591.3809523809524', 'Ivonne'), ('592.5990783410139', 'Jan'), ('593.1506849315068', 'Mizuno'), ('593.1772853185596', 'Nastja'), ('593.9759036144578', 'Chayenne'), ('594.9036697247707', 'Miyu'), ('594.9436936936937', 'Lena'), ('595.3291666666667', 'Vlada'), ('597.6981132075472', 'Ayano'), ('598.2655172413793', 'Ran'), ('600.6881091617934', 'Sophie'), ('601.906914893617', 'Tammi'), ('601.9846625766871', 'Jovana'), ('604.15', 'Alexis'), ('606.1467576791808', 'Kinnie'), ('606.7211740041929', 'Ganna'), ('607.2810218978102', 'Vivien'), ('607.3360995850622', 'Macall'), ('608.1309090909091', 'Yuuki'), ('608.7791798107255', 'Na Lae'), ('609.90625', 'Chantal'), ('611.0757575757576', 'Sunam'), ('611.35', 'Aliona'), ('611.4060995184591', 'Margarita'), ('612.0185185185185', 'Fang Ying'), ('612.736', 'Lavinia'), ('613.195652173913', 'Aminat'), ('613.5330490405117', 'Vasilisa'), ('614.0434782608696', 'Tamara'), ('614.9346733668342', 'Tena'), ('615.1506849315068', 'Dhruthi'), ('615.2230215827338', 'Chinami'), ('617.0379241516966', 'Misa'), ('617.3333333333334', 'Ao'), ('617.4615384615385', 'Nathaly'), ('617.4935251798561', 'Estelle'), ('618.4714285714285', 'Ankita'), ('618.6923076923077', 'Kimberly'), ('619.4154929577464', 'Pernilla'), ('619.6814159292036', 'Adriana'), ('619.9064748201439', 'Mayya'), ('620.4120171673819', 'Clothilde'), ('620.6746411483253', 'Eugeniya'), ('620.9404580152672', 'Katie'), ('622.7673469387755', 'Manon'), ('624.6089494163424', 'Jacqueline'), ('625.013698630137', 'Berfu'), ('626.441935483871', 'Milana'), ('627.12', 'Adrijana'), ('627.7027027027027', 'Indire'), ('627.7777777777778', 'Zhanlan'), ('628.075', 'Miriam Bianca'), ('629.0081967213115', 'Zhaoxuan'), ('629.6443987667009', 'Daria'), ('630.7953529937444', 'Polina'), ('631.8181818181819', 'Nadja'), ('632.2824427480916', 'Shilin'), ('632.3150684931506', 'Snehadevi S'), ('633.027027027027', 'Jasmin'), ('633.5454545454545', 'Kaja'), ('633.9770491803279', 'Quirine'), ('634.3620689655172', 'Natalija'), ('634.7950310559006', 'Melis'), ('635.346516007533', 'Kanae'), ('635.7449168207024', 'Sung Hee'), ('637.4607407407408', 'Nadiya'), ('638.6666666666666', 'Rianna'), ('638.88', 'Ashley'), ('640.8727272727273', 'Sofya'), ('641.046992481203', 'Emma'), ('642.1811989100818', 'Jasmina'), ('642.9487179487179', 'Ylona Georgiana'), ('643.422641509434', 'Keren'), ('643.616049382716', 'Cristina'), ('643.6939163498099', 'Lara'), ('643.9216101694915', 'Daniella'), ('645.2279792746114', 'Carolin'), ('646.0441176470588', 'Ioana Loredana'), ('647.5205479452055', 'Britt'), ('647.922077922078', 'Fernanda'), ('648.2984054669704', 'Fatma'), ('649.5154639175257', 'Sherazad'), ('650.1206896551724', 'Theo'), ('650.1367521367522', 'Chalena'), ('650.6240276577355', 'Amanda'), ('651.4246575342465', 'Riya'), ('652.1984732824427', 'Elyne'), ('652.917808219178', 'Karman'), ('653.2805383022775', 'Bianca'), ('653.5070422535211', 'Prarthana G'), ('654.3773657782928', 'Diana'), ('655.7464059804486', 'Jessica'), ('655.7828348504552', 'Ipek'), ('656.2851711026616', 'Eduarda'), ('656.2932551319648', 'Basak'), ('656.8787276341948', 'Yi Jing'), ('657.0171919770773', 'Marcella'), ('657.3816155988858', 'Patrycja'), ('657.8934169278997', 'Lena Marie'), ('658.5074074074074', 'Arabela'), ('659.2103004291846', 'Vivienne'), ('659.3055555555555', 'Cindy'), ('660.8924731182796', 'Ola'), ('661.2222222222222', 'Xenia'), ('661.3972602739726', 'Ying'), ('661.8474576271186', 'Valeria'), ('661.9589041095891', 'Kajsa'), ('662.1182795698925', 'Mariam'), ('665.686684073107', 'Despina'), ('665.8219178082192', 'Sadafmoh'), ('666.1496062992126', 'Lizette'), ('666.2853403141361', 'Natasa'), ('668.2581196581197', 'Piia'), ('669.2982456140351', 'Dijana'), ('669.448275862069', 'Ria'), ('669.8542372881356', 'Romana Caroline'), ('670.9108527131783', 'Vivian'), ('671.2584369449378', 'Anastasiya'), ('672.2258064516129', 'Raluca Elena'), ('672.730407523511', 'Emelyn'), ('673.6507936507936', 'Lisanne'), ('673.6635071090047', 'Hilda'), ('673.7509157509157', 'Fatima'), ('673.9809523809524', 'Pei Chi'), ('674.9672514619883', 'Karen'), ('675.2445414847161', 'Chloe'), ('675.4124293785311', 'Priscilla'), ('676.1090909090909', 'Rebeka'), ('676.90589198036', 'Michaela'), ('677.4458598726114', 'Laetitia'), ('680.1050228310502', 'Hao Chen'), ('680.1724137931035', 'Lou'), ('680.677700348432', 'Katharina'), ('681.7736842105263', 'Belinda'), ('681.9417582417583', 'Tatiana'), ('682.0972222222222', 'Emina'), ('682.2005532503458', 'Sabina'), ('682.961038961039', 'Jia Jing'), ('683.1081081081081', 'Panna'), ('684.4892086330935', 'Josephine'), ('684.8497652582159', 'Agustina'), ('686.2234432234433', 'Angelica'), ('686.3047619047619', 'Oana Georgeta'), ('686.6470588235294', 'Elena Teodora'), ('687.0229885057471', 'Ines'), ('687.25', 'Mai'), ('687.3120567375887', 'Kim'), ('689.891129032258', 'Mana'), ('691.9934640522875', 'Sviatlana'), ('692.1515151515151', 'Macarena'), ('692.390625', 'Chun Mei'), ('693.6215943491422', 'Giulia'), ('694.0659898477157', 'Agnese'), ('694.2', 'Shanshan'), ('694.341935483871', 'Harriet'), ('694.4808743169399', 'Xin'), ('695.574074074074', 'Marie'), ('696.2878787878788', 'Tess'), ('696.4126984126984', 'Vanda'), ('696.4752475247525', 'Helene'), ('696.7697332607512', 'Gabriela'), ('696.952380952381', 'Bianka'), ('696.9606060606061', 'Karina Ildor'), ('698.7567567567568', 'Suzy'), ('698.8285714285714', 'Yuki Kristina'), ('699.7864583333334', 'Janina'), ('700.7644444444444', 'Raquel'), ('701.4009009009009', 'Wan Ting'), ('702.1784386617101', 'Yasmin'), ('703.1372549019608', 'Sanaz'), ('704.9618138424821', 'Akari'), ('705.4688346883469', 'Benedetta'), ('705.4716981132076', 'Emilie'), ('705.5625', 'Iga'), ('705.8493150684932', 'Qiu Yu'), ('707.1467889908257', 'Julieta Lara'), ('708.618398637138', 'Celine'), ('709.4247787610619', 'Caitlin'), ('709.625', 'Zarah'), ('710.3822682786414', 'Alice'), ('710.3972602739726', 'Petia'), ('710.9617224880383', 'Aki'), ('712.2780373831775', 'Ximena'), ('714.8653846153846', 'Xi Yao'), ('716.3150684931506', 'Gozal'), ('717.7932330827068', 'Bermet'), ('718.047619047619', 'Michika'), ('718.5202702702703', 'Alexia'), ('718.725321888412', 'Carolina'), ('719.3061224489796', 'Chelsey'), ('720.132932166302', 'Natalia'), ('720.1431870669746', 'Ani'), ('720.6428571428571', 'Cristina Madalina'), ('720.7490039840637', 'Daiana'), ('721.14', 'Jillian'), ('721.1643835616438', 'Mirabelle'), ('722.5087719298245', 'Lilla'), ('722.6986301369863', 'Dasha'), ('722.7286493034525', 'Federica'), ('723.484076433121', 'Nikola'), ('724.5', 'Sofie'), ('724.8712871287129', 'Yevgeniya'), ('724.9178743961353', 'Isabel'), ('725.3893333333333', 'Anja'), ('725.5322195704057', 'Yuliana'), ('726.1737089201878', 'Hua Chen'), ('726.1852387843704', 'Veronica'), ('726.2657657657658', 'Andreea Roxana'), ('728.5', 'Ahsha'), ('728.7443609022556', 'Sina'), ('728.7630208333334', 'Oceane'), ('729.0117647058823', 'Vendula'), ('729.0671936758894', 'Hyun Hui'), ('729.1047904191616', 'Poojashree'), ('730.3831168831168', 'Marianna'), ('732.1666666666666', 'Julyette Maria Josephine'), ('732.4260679079956', 'Maya'), ('732.7386018237082', 'Iva'), ('733.1351351351351', 'Erina'), ('734.0', 'Magali'), ('734.6018957345972', 'Veronika'), ('736.1650485436893', 'Di'), ('736.2288557213931', 'Viktoriya'), ('736.4809523809524', 'Megan'), ('736.9747747747748', 'Elizabeth'), ('737.7547169811321', 'Xiaoxi'), ('737.862676056338', 'Pia'), ('739.04802259887', 'Jade'), ('739.7727272727273', 'Ting Fei'), ('740.0214504596527', 'Yana'), ('740.5361842105264', 'Prerna'), ('740.5879828326181', 'Pilar'), ('743.1953125', 'Tjasa'), ('743.6062176165804', 'Sarah Rebecca'), ('744.0', 'Caty'), ('744.7453250222618', 'Danielle'), ('745.421052631579', 'Neda'), ('745.433962264151', 'Maia'), ('746.0962962962963', 'Despoina'), ('746.4803493449782', 'Yurina'), ('747.3172413793103', 'Tayisiya'), ('747.3695652173913', 'Saska'), ('747.4375', 'Amandine'), ('748.0', 'Maddison'), ('748.6622691292876', 'Ingrid Esperanza'), ('748.7238095238096', 'Jaqueline Adina'), ('748.8250591016548', 'Yuka'), ('749.3582089552239', 'Chiraz'), ('750.3207810320781', 'Angelina'), ('750.9460093896714', 'Ellen'), ('751.2668918918919', 'Valentine'), ('751.8679119412942', 'Martina'), ('753.2253164556962', 'Nicola'), ('753.8346456692914', 'Margot'), ('755.4649681528663', 'Cecilia'), ('755.5813953488372', 'Peggy'), ('756.2549019607843', 'Kaitlyn'), ('756.3141592920354', 'Lucy'), ('757.2253521126761', 'Cornelia'), ('758.06', 'Lisa Maria'), ('758.1714285714286', 'Romy'), ('758.5342960288808', 'Dejana'), ('759.2894995093228', 'Stefania'), ('759.5352697095435', 'Gaia'), ('760.4920634920635', 'Jaeda'), ('760.639175257732', 'Anna Arina'), ('762.1578947368421', 'Nidhi'), ('762.4081632653061', 'Kim Alice'), ('762.7606382978723', 'Anne Liz'), ('763.1014492753624', 'Georgia Andreea'), ('763.888198757764', 'Amy'), ('763.8900651465798', 'Barbara'), ('764.6785714285714', 'Deborah'), ('765.1395348837209', 'Kamonwan'), ('765.3777777777777', 'Zoe'), ('766.2549019607843', 'Ingrid'), ('766.4794520547945', 'Charlene'), ('767.4963503649635', 'Naiktha'), ('767.7730496453901', 'Jeannine'), ('768.560975609756', 'Yan'), ('770.8472222222222', 'Emi'), ('772.2402912621359', 'Kazusa'), ('772.2857142857143', 'Genevieve'), ('772.3186813186813', 'Szabina'), ('772.6981132075472', 'Momoko'), ('772.8571428571429', 'Akilah'), ('773.5666666666667', 'Leolia'), ('774.5654761904761', 'Marine'), ('774.64', 'Marcela'), ('774.6837606837607', 'Haruka'), ('775.2734375', 'Albina'), ('775.7269624573379', 'Rishika'), ('778.1648648648649', 'Nicolette'), ('780.7905027932961', 'Klaudia'), ('781.3218390804598', 'Etsuko'), ('781.6993464052288', 'Isabelle'), ('783.1711711711712', 'Marrit'), ('783.8288043478261', 'Gracia'), ('784.0465949820789', 'Seung Yeon'), ('784.8009049773756', 'Makiho'), ('785.0707482993197', 'Beatrice'), ('787.0', 'Maegan'), ('787.5416666666666', 'Ludmilla'), ('787.7645348837209', 'Sylwia'), ('788.0384615384615', 'Erica'), ('788.2622950819672', 'Mira'), ('789.2857142857143', 'Chengyiyi'), ('789.6113989637306', 'Ting Jr'), ('790.1538461538462', 'Adeliya'), ('790.46875', 'Asiya'), ('791.0756207674943', 'Yi'), ('791.1240506329113', 'Syna'), ('791.2352941176471', 'Zeel'), ('792.1927710843373', 'Sri Vaishnavi'), ('792.5', 'Gabriella'), ('794.4931506849315', 'Jiahui'), ('794.5416666666666', 'Zuzanna'), ('794.7118644067797', 'Gloria'), ('795.4736842105264', 'Pranjala'), ('795.6201232032854', 'Rocio'), ('797.2128378378378', 'Lidziya'), ('797.383606557377', 'Guadalupe'), ('798.3181818181819', 'Kylie'), ('799.0552486187845', 'Ionela Andreea'), ('799.0650406504066', 'Carolina Meligeni Rodrigues'), ('799.1332586786115', 'Yumi'), ('799.1875', 'Matilda'), ('799.8668224299065', 'Valeriya'), ('799.9940828402367', 'Kanami'), ('801.6712328767123', 'Yixuan'), ('801.6850649350649', 'Camilla'), ('801.6933333333334', 'Dalia'), ('801.84375', 'Andreea Amalia'), ('802.7222222222222', 'Thai Sa Grana'), ('803.3904761904762', 'Ashvarya'), ('803.7139479905437', 'Camelia Elena'), ('803.8666666666667', 'Domenica'), ('803.9764705882353', 'Amina'), ('804.6277056277056', 'Brooke'), ('804.873831775701', 'Kelly'), ('805.7028985507246', 'Dana'), ('806.2648401826484', 'Valerie'), ('807.616', 'Karla'), ('807.7222222222222', 'Kennedy'), ('808.4545454545455', 'Abbie'), ('808.5096774193548', 'Rutuja'), ('809.697247706422', 'Dianne'), ('810.6666666666666', 'Tinatin'), ('812.4581005586592', 'Sun Jung'), ('812.6', 'Ju Eun'), ('812.85', 'Meiling'), ('813.1351351351351', 'Giada'), ('813.1357142857142', 'Sowjanya'), ('814.4171122994652', 'Xiao'), ('818.2043795620438', 'Jessika'), ('819.3400503778338', 'Ema'), ('819.8425531914894', 'Min Hwa'), ('82.13112391930835', 'Na'), ('820.4563492063492', 'Alena'), ('820.59375', 'Luisa Marie'), ('822.3459915611814', 'Alix'), ('823.0909090909091', 'Ashling'), ('823.6306306306307', 'Clelia'), ('823.8770833333333', 'Vladimira'), ('823.9789029535865', 'Ji Hee'), ('824.3936170212766', 'Yukun'), ('825.039603960396', 'Malin'), ('825.7291666666666', 'Nazari'), ('825.972972972973', 'Leonie'), ('826.0238095238095', 'Komola'), ('826.1388888888889', 'Qianhui'), ('826.2619047619048', 'Claudia'), ('826.6486486486486', 'Phillis'), ('828.0675675675676', 'Nagi'), ('829.5625', 'Astra'), ('832.7818181818182', 'Corina'), ('832.9585365853659', 'Sakiko'), ('833.5061082024433', 'Ji Young'), ('834.1005025125628', 'Bernice'), ('834.2066115702479', 'Borislava'), ('835.1132075471698', 'Constanza'), ('836.6804511278195', 'Katherine'), ('837.7730496453901', 'Kristy'), ('838.1780821917808', 'Manca'), ('838.8065217391304', 'Tomoko'), ('839.4923664122138', 'Ofri'), ('840.0776699029126', 'Saray'), ('841.0514705882352', 'Nives'), ('841.4051724137931', 'Christine'), ('841.7167381974249', 'Tori'), ('841.8387096774194', 'Stamatia'), ('842.1553398058253', 'Carmen Raluca'), ('842.7045454545455', 'Eetee'), ('842.8446601941747', 'Ana Bianca'), ('843.6428571428571', 'Mirjam'), ('843.7260273972603', 'Alba'), ('843.9007633587786', 'Nicky'), ('844.0692307692308', 'Ulyana'), ('844.203007518797', 'Svenja'), ('844.3856812933026', 'Hae Sung'), ('844.7460317460317', 'Kotomi'), ('844.9310344827586', 'Yoon Young'), ('845.375', 'Imane Maelle'), ('845.740638002774', 'Lucia'), ('845.986301369863', 'Lucrezia'), ('846.2727272727273', 'Ludmila'), ('846.9154228855722', 'Kimberley'), ('847.0941176470589', 'Ilze'), ('848.4418604651163', 'Xiaorong'), ('848.9908952959029', 'Chihiro'), ('850.9791666666666', 'Anhzelika'), ('851.1224489795918', 'Marta Huqi'), ('851.5633802816901', 'Sharmada'), ('853.3908045977012', 'Fiona'), ('854.3170731707318', 'Brianna'), ('855.813627254509', 'Alicja'), ('856.0782608695653', 'Vladyslava'), ('857.1692307692308', 'Yukina'), ('857.9508196721312', 'Sang Hee'), ('858.4107142857143', 'Lea'), ('858.9173789173789', 'Seo Kyung'), ('859.2706766917294', 'Rachael'), ('859.3059701492538', 'Anamika'), ('859.8103448275862', 'Vaszilisza'), ('859.8644067796611', 'Luca'), ('860.8104265402843', 'Hirono'), ('861.5050505050505', 'Maria Constanza De Las Mercedes'), ('861.5102040816327', 'Janneke'), ('863.3225806451613', 'Joana'), ('863.5507246376811', 'Patcharin'), ('863.7826086956521', 'Desirae'), ('864.1538461538462', 'Shuo'), ('866.0454545454545', 'Oyku'), ('866.0693069306931', 'Min'), ('866.1075949367089', 'Iris'), ('867.5288461538462', 'Zalina'), ('868.2191780821918', 'Ilka'), ('868.6521739130435', 'Nadezda'), ('868.7624113475177', 'Paula Catalina'), ('868.8904109589041', 'Karine'), ('869.1666666666666', 'Mary'), ('869.1702127659574', 'Sylvia'), ('869.3571428571429', 'Ingrid Alexandra'), ('870.9007633587786', 'Liz Tatiane'), ('871.0790513833992', 'Kaori'), ('871.109375', 'Ivania'), ('871.6926829268293', 'Alona'), ('872.0', 'Ivone'), ('872.0930232558139', 'Breaunna'), ('873.6229508196722', 'Karoline'), ('874.8181818181819', 'Chisa'), ('875.0', 'Mahak'), ('875.9277108433735', 'Sarah Beth'), ('875.9772727272727', 'Clemence'), ('876.1730769230769', 'Eliessa'), ('876.7428571428571', 'Yuki'), ('878.0138888888889', 'Bhuvana'), ('878.1666666666666', 'Tornado Alicia'), ('878.3939393939394', 'Andrea Renee'), ('878.4606741573034', 'Ziyue'), ('878.6666666666666', 'Nam Yeon'), ('880.6527777777778', 'Morgane'), ('882.1071428571429', 'Katharine'), ('883.0777142857143', 'Natasha'), ('883.2352941176471', 'Quinn'), ('883.6090909090909', 'Karina'), ('883.7787610619469', 'Noelle'), ('885.0976744186047', 'Sonja'), ('885.7495107632094', 'Luciana'), ('886.1407407407407', 'Whitney'), ('887.2875', 'Liubov'), ('887.4545454545455', 'Lesedi Sheya'), ('887.502487562189', 'Kyle'), ('888.0055096418732', 'Hulya'), ('888.2213114754098', 'Elisabeth'), ('888.7272727272727', 'Satsuki'), ('889.8028169014085', 'Seone'), ('890.4455445544554', 'Nan Nan'), ('890.6351351351351', 'Carmen'), ('890.8728448275862', 'Ai'), ('891.2340425531914', 'Yuanyi'), ('891.6309523809524', 'Mayar'), ('892.3561643835617', 'Ylena'), ('894.3846153846154', 'Varunya'), ('896.7413793103449', 'Maja'), ('897.0974358974358', 'Manisha'), ('897.4873949579832', 'Yelena'), ('897.6951219512196', 'Shweta'), ('899.9150326797386', 'Libby'), ('900.75', 'Merel'), ('901.3333333333334', 'Kaitlin'), ('901.8717948717949', 'Ayan'), ('902.1470588235294', 'Jenny'), ('903.1666666666666', 'Francisca'), ('903.4289156626506', 'Oleksandra'), ('903.5769230769231', 'Karyn'), ('904.6538461538462', 'Blanca'), ('905.6324786324786', 'Sabrina'), ('907.3557312252965', 'Lu'), ('907.4', 'Ann'), ('908.156862745098', 'Lee'), ('908.3962264150944', 'Mara'), ('909.2', 'Jada'), ('910.396694214876', 'Katherine Gabriela'), ('910.5714285714286', 'Laura D'), ('911.7241379310345', 'Eudice Wong'), ('911.7619047619048', 'Suellen'), ('912.1077844311377', 'Tatsiana'), ('912.120218579235', 'Miriam'), ('912.1523178807947', 'Ai Wen'), ('912.71875', 'Blair'), ('913.4380165289256', 'Nika'), ('913.7272727272727', 'Draginja'), ('914.5321100917431', 'Hayley'), ('914.8607594936709', 'Hongrui'), ('915.5892857142857', 'Pavla'), ('915.5932203389831', 'Aymet'), ('916.559633027523', 'Zsofia'), ('916.7115384615385', 'Anna Katalina'), ('917.0', 'Brienne'), ('918.0769230769231', 'Maria Lourdes'), ('919.6147540983607', 'Ineke'), ('920.1276595744681', 'Dabin'), ('921.3333333333334', 'Valentina'), ('921.6216216216217', 'Nora'), ('922.2255639097745', 'Anaeve'), ('924.2782608695652', 'Kana'), ('924.8818897637796', 'Shakhlo'), ('924.9325842696629', 'Josepha'), ('925.0028776978418', 'Alina'), ('925.4230769230769', 'Jodie Anna'), ('925.9865771812081', 'Ho Ching'), ('927.0350877192982', 'Kassandra'), ('927.7647058823529', 'Charlotte'), ('928.3333333333334', 'Karola Patricia'), ('929.0599369085173', 'Dunja'), ('929.4388489208633', 'Napatsakorn'), ('929.4398496240601', 'Linda'), ('929.6928104575163', 'Natia'), ('930.7027027027027', 'Naima'), ('931.025641025641', 'Joanna'), ('932.8940397350993', 'Samira'), ('935.081081081081', 'Zoe Gwen'), ('935.2322946175638', 'Shivika'), ('936.3392857142857', 'Nozomi'), ('937.7878787878788', 'Wushuang'), ('937.7945205479452', 'Plobrung'), ('939.746835443038', 'Steffi'), ('940.2125603864735', 'Agni'), ('941.4724409448819', 'Catherine'), ('942.7969696969697', 'Erin'), ('943.421052631579', 'Qianqian'), ('943.5432098765432', 'Vladica'), ('943.7397959183673', 'Ainhoa'), ('943.7716535433071', 'Emmanuelle'), ('944.2432432432432', 'Sultan'), ('945.625', 'Alexandria'), ('946.8846153846154', 'Michele Alexandra'), ('946.8934426229508', 'Marlies'), ('947.3333333333334', 'Malou'), ('947.472972972973', 'Anita'), ('949.1239316239316', 'Denise'), ('949.6575342465753', 'Franziska'), ('949.7916666666666', 'Sirui'), ('949.7944444444445', 'Csilla'), ('949.8059701492538', 'Tamachan'), ('95.03465982028241', 'Kimiko'), ('950.0277777777778', 'Eleonora'), ('950.6263736263736', 'Miriana'), ('950.8813559322034', 'Chia Hsien'), ('950.9090909090909', 'Ester'), ('951.0075757575758', 'Veronica M'), ('951.4146341463414', 'Ariadna'), ('951.9764150943396', 'Alice Andrada'), ('952.4411764705883', 'Lynn'), ('952.5619834710744', 'Brynn'), ('954.046875', 'India'), ('954.6', 'Xiyu'), ('955.7833333333333', 'Radina'), ('956.0333333333333', 'Andreea'), ('956.5754716981132', 'Anastasia Evgenyevna'), ('957.2', 'Hanna'), ('957.9512195121952', 'Guiomar'), ('958.0955414012739', 'Madrie'), ('958.1327800829876', 'Verena'), ('959.6981132075472', 'Linnea'), ('960.4941860465116', 'Giorgia'), ('960.6770186335403', 'Agata'), ('961.2631578947369', 'Ana Victoria'), ('961.876923076923', 'Yuenu'), ('962.0188679245283', 'Natella'), ('962.5', 'Ida'), ('962.8536585365854', 'Kanika'), ('963.5', 'Terri'), ('964.1224489795918', 'Clementina Eugenia'), ('965.0', 'Rosa'), ('965.5343511450382', 'Noel'), ('966.0540540540541', 'Estela'), ('966.0588235294117', 'Shuyue'), ('966.4671052631579', 'Viktoryia'), ('967.2978723404256', 'Claudia Antonia'), ('967.6708860759494', 'Jessy'), ('967.9034090909091', 'Shao Yuan'), ('969.5882352941177', 'Anouk'), ('969.6588235294117', 'Taisiya'), ('969.8181818181819', 'Anette'), ('970.3620689655172', 'Andie K'), ('970.9846153846154', 'Brandy'), ('971.2865853658536', 'Beatriz Maria'), ('972.75', 'Lorraine M'), ('973.8617021276596', 'Yeong Won'), ('973.8717948717949', 'Maxine'), ('974.2702702702703', 'Lusine'), ('974.8', 'Simran Kaur'), ('975.3484848484849', 'Sinead'), ('975.6271186440678', 'Ksenija'), ('977.4539007092199', 'Daneika'), ('977.9640591966173', 'Chiara'), ('978.0229885057471', 'Khristina'), ('978.2708333333334', 'Eliza'), ('978.7321428571429', 'Ornella'), ('980.2232142857143', 'Ioana'), ('980.3333333333334', 'Ena'), ('980.575', 'Monika'), ('980.6666666666666', 'Suzuho'), ('980.9076923076923', 'Siqi'), ('981.7517730496454', 'Luisa'), ('981.9814814814815', 'Elizaveta Anna'), ('982.6666666666666', 'Lyann'), ('982.7222222222222', 'Suzan'), ('982.7397260273973', 'Sabastiani'), ('983.0410958904109', 'Yasmine'), ('983.1290322580645', 'Jazzamay'), ('983.359649122807', 'Yue'), ('983.4174757281553', 'Demi'), ('984.1714285714286', 'Rosie'), ('985.7211538461538', 'Gabrielle Faith'), ('986.3944099378882', 'Chun Yan'), ('986.82', 'Lindsey'), ('987.504761904762', 'Mia Nicole'), ('987.6739130434783', 'Margarida'), ('988.7425149700599', 'Li'), ('989.1904761904761', 'Pamela'), ('989.75', 'Zhuoma'), ('990.5210084033613', 'Brittany'), ('990.6', 'Kseniia'), ('992.4222222222222', 'Boyan'), ('992.4870588235294', 'Tyra'), ('992.7225433526012', 'Mi Rae'), ('993.1351351351351', 'Melisa'), ('993.175925925926', 'Marianne'), ('993.2105263157895', 'Josie'), ('993.4255319148937', 'Stefana'), ('994.0612244897959', 'Gabriela Nicole'), ('994.4769230769231', 'Dan Ni'), ('995.4074074074074', 'Guzal'), ('996.0408163265306', 'Lisa Marie'), ('996.2574257425742', 'Claudia Gianina'), ('996.8148148148148', 'Laili'), ('998.5238095238095', 'Sai Samhitha'), ('998.7722772277227', 'Cynthia'), ('999.0215053763441', 'Voni'), ('999.15625', 'Malene'), ('999.2', 'Frances'), ('999.375', 'Mi Zhuoma')] != [('Aastha', '1199.8235294117646'), ('Abbi', '1110.0434782608695'), ('Abbie', '808.4545454545455'), ('Abigail', '387.66706161137444'), ('Abiodun', '1039.6744186046512'), ('Abir', '1228.75'), ('Adeliya', '790.1538461538462'), ('Adnya', '1122.4423076923076'), ('Adriana', '619.6814159292036'), ('Adrienn', '1213.1666666666667'), ('Adrijana', '627.12'), ('Adva', '1255.3333333333333'), ('Afroditi', '1155.0392156862745'), ('Agata', '960.6770186335403'), ('Agata Jadwiga', '1082.3548387096773'), ('Agne', '1231.5'), ('Agnes', '391.3003629764065'), ('Agnese', '694.0659898477157'), ('Agni', '940.2125603864735'), ('Agnieszka', '122.19587628865979'), ('Agustina', '684.8497652582159'), ('Agustina Elena', '1154.25'), ('Ah', '1156.340425531915'), ('Ahlam', '1248.72'), ('Ahsha', '728.5'), ('Ai', '890.8728448275862'), ('Ai Wen', '912.1523178807947'), ('Aida', '1110.3333333333333'), ('Aiko', '284.8724727838258'), ('Ailen', '1034.5833333333333'), ('Aimee', '1200.2'), ('Aina', '1164.95'), ('Ainhoa', '943.7397959183673'), ('Aishwarya', '1024.625'), ('Ajla', '302.84831460674155'), ('Akari', '704.9618138424821'), ('Akgul', '215.25185185185185'), ('Aki', '710.9617224880383'), ('Akiho', '1145.8235294117646'), ('Akiko', '493.98205383848455'), ('Akilah', '772.8571428571429'), ('Akvile', '1038.35'), ('Alana', '1119.1639344262296'), ('Alba', '843.7260273972603'), ('Alberta', '343.22432701894314'), ('Albina', '775.2734375'), ('Aldana', '1185.7142857142858'), ('Alejandra', '1067.019801980198'), ('Aleksandra', '450.22998544395927'), ('Aleksandrina', '578.07962529274'), ('Alena', '820.4563492063492'), ('Alessandra', '1123.4864864864865'), ('Alessia', '1057.628205128205'), ('Alessondra', '1145.1641791044776'), ('Alexa', '383.9921465968586'), ('Alexandra', '569.2647632558965'), ('Alexandria', '945.625'), ('Alexia', '718.5202702702703'), ('Alexis', '604.15'), ('Aliaksandra', '441.9846743295019'), ('Alice', '710.3822682786414'), ('Alice Andrada', '951.9764150943396'), ('Alicia', '1105.1298701298701'), ('Alicja', '855.813627254509'), ('Alina', '925.0028776978418'), ('Aliona', '611.35'), ('Alisa', '453.01556420233464'), ('Alison', '403.48784576697403'), ('Alix', '822.3459915611814'), ('Alize', '252.11485774499474'), ('Alla', '217.85922330097088'), ('Allie', '557.9232456140351'), ('Almudena', '1157.8'), ('Alona', '871.6926829268293'), ('Alory Regina Elorriaga', '1181.6078431372548'), ('Alyona', '496.9431818181818'), ('Amanda', '650.6240276577355'), ('Amandine', '747.4375'), ('Amelie', '1011.3666666666667'), ('Amina', '803.9764705882353'), ('Aminat', '613.195652173913'), ('Amira', '1075.8260869565217'), ('Amra', '415.9078341013825'), ('Amrita', '1209.4'), ('Amy', '763.888198757764'), ('An Sophie', '460.8932038834951'), ('Ana', '396.2893280632411'), ('Ana Bianca', '842.8446601941747'), ('Ana Clara', '524.9192825112108'), ('Ana Gabriela', '1084.7916666666667'), ('Ana Luisa', '1243.4285714285713'), ('Ana Paula', '1031.228855721393'), ('Ana Sofia', '496.7156398104265'), ('Ana Victoria', '961.2631578947369'), ('Anabel', '144.3264367816092'), ('Anaeve', '922.2255639097745'), ('Anais', '482.26169844020797'), ('Anamika', '859.3059701492538'), ('Anastasia', '430.0872542522642'), ('Anastasia Evgenyevna', '956.5754716981132'), ('Anastasiia', '1245.75'), ('Anastasija', '221.66153846153847'), ('Anastasiya', '671.2584369449378'), ('Anca', '1127.7368421052631'), ('Anda', '1150.0'), ('Andie K', '970.3620689655172'), ('Andjela', '1063.4736842105262'), ('Andra Maria', '1275.8235294117646'), ('Andrea', '414.4332292750607'), ('Andrea Renee', '878.3939393939394'), ('Andreea', '956.0333333333333'), ('Andreea Amalia', '801.84375'), ('Andreea Roxana', '726.2657657657658'), ('Andreja', '424.64521739130436'), ('Andressa Cristina', '1184.0416666666667'), ('Andrina', '1045.6666666666667'), ('Aneta', '1152.0857142857142'), ('Anett', '367.2274678111588'), ('Anette', '969.8181818181819'), ('Ange Oby', '1226.3333333333333'), ('Angela', '1128.7272727272727'), ('Angelica', '686.2234432234433'), ('Angeliki', '1089.1603773584907'), ('Angelina', '750.3207810320781'), ('Angelique', '308.56833824975416'), ('Anhelina', '432.6949152542373'), ('Anhzelika', '850.9791666666666'), ('Ani', '720.1431870669746'), ('Anita', '947.472972972973'), ('Anja', '725.3893333333333'), ('Anke', '1228.388888888889'), ('Ankita', '618.4714285714285'), ('Ann', '907.4'), ('Anna', '551.5557158312297'), ('Anna Arina', '760.639175257732'), ('Anna Giulia', '428.5496828752643'), ('Anna Karolina', '345.51020408163265'), ('Anna Katalina', '916.7115384615385'), ('Anna Lena', '201.87700534759358'), ('Anna Maria', '1070.3967391304348'), ('Annalisa', '583.9347826086956'), ('Anne', '248.74237737516572'), ('Anne Liz', '762.7606382978723'), ('Anne Marie', '1237.6363636363637'), ('Anne Sophie', '1252.0'), ('Annie', '1042.037037037037'), ('Annika', '265.79487179487177'), ('Anouk', '969.5882352941177'), ('Antonela', '1051.7096774193549'), ('Antonia', '589.1298076923077'), ('Antonina', '1049.4655172413793'), ('Anushka', '1037.0833333333333'), ('Ao', '617.3333333333334'), ('Apichaya', '1016.5714285714286'), ('Arabela', '658.5074074074074'), ('Arantxa', '279.23336006415394'), ('Aranza', '490.4144736842105'), ('Aravane', '200.97080291970804'), ('Ariadna', '951.4146341463414'), ('Arina', '560.6778190830236'), ('Arina Gabriela', '1224.0'), ('Arlinda', '1074.3333333333333'), ('Arthi', '1281.8461538461538'), ('Aryna', '349.54794520547944'), ('Aselya', '1181.27868852459'), ('Asha', '1151.95'), ('Ashleigh', '331.3681818181818'), ('Ashley', '638.88'), ('Ashling', '823.0909090909091'), ('Ashmitha', '1018.6637931034483'), ('Ashvarya', '803.3904761904762'), ('Asia', '453.43392070484583'), ('Asiya', '790.46875'), ('Assia', '1172.5531914893618'), ('Astra', '829.5625'), ('Astrid Wanja', '1086.45'), ('Audrey', '591.2544731610338'), ('Avgusta', '1208.4285714285713'), ('Axana', '1064.0'), ('Ayaka', '552.4653465346535'), ('Ayan', '901.8717948717949'), ('Ayano', '597.6981132075472'), ('Ayla', '397.83561643835617'), ('Aymet', '915.5932203389831'), ('Ayu Fani', '479.5530612244898'), ('Ayumi', '412.74466019417474'), ('Azra', '556.2303370786517'), ('Barbara', '763.8900651465798'), ('Barbora', '252.6093155893536'), ('Basak', '656.2932551319648'), ('Beatrice', '785.0707482993197'), ('Beatriz', '457.4050279329609'), ('Beatriz Magdalena', '1253.4'), ('Beatriz Maria', '971.2865853658536'), ('Beauty', '1382.1538461538462'), ('Belen', '1167.3368421052633'), ('Belinda', '681.7736842105263'), ('Benedetta', '705.4688346883469'), ('Berfu', '625.013698630137'), ('Bermet', '717.7932330827068'), ('Bernarda', '541.273631840796'), ('Bernice', '834.1005025125628'), ('Berta', '1005.75'), ('Bethanie', '146.59709379128137'), ('Betina', '1229.5714285714287'), ('Bhuvana', '878.0138888888889'), ('Bianca', '653.2805383022775'), ('Bianka', '696.952380952381'), ('Bibiane', '550.1941544885177'), ('Blair', '912.71875'), ('Blanca', '904.6538461538462'), ('Blessing', '1221.8333333333333'), ('Boba', '1254.6341463414635'), ('Bojana', '392.7313829787234'), ('Borislava', '834.2066115702479'), ('Boyan', '992.4222222222222'), ('Brandy', '970.9846153846154'), ('Breaunna', '872.0930232558139'), ('Brenda', '211.01377118644066'), ('Brianna', '854.3170731707318'), ('Brienne', '917.0'), ('Brindtha', '1126.3333333333333'), ('Britt', '647.5205479452055'), ('Brittany', '990.5210084033613'), ('Brooke', '804.6277056277056'), ('Brynn', '952.5619834710744'), ('Bunyawi', '555.3384615384615'), ('Busra', '1140.981981981982'), ('Cagla', '311.87854251012146'), ('Caitlin', '709.4247787610619'), ('Camelia Elena', '803.7139479905437'), ('Cameron', '1192.1818181818182'), ('Camila', '539.7944621938232'), ('Camila Vital', '1192.3783783783783'), ('Camilla', '801.6850649350649'), ('Camille', '1112.9450549450548'), ('Cara', '236.07412398921832'), ('Carina', '416.3666666666667'), ('Carla', '411.70779777206513'), ('Carlota', '1236.7777777777778'), ('Carlotta', '1127.9338842975208'), ('Carly', '318.69978858350953'), ('Carmen', '890.6351351351351'), ('Carmen Raluca', '842.1553398058253'), ('Carol', '564.1434426229508'), ('Carolin', '645.2279792746114'), ('Carolina', '718.725321888412'), ('Carolina Meligeni Rodrigues', '799.0650406504066'), ('Caroline', '342.40130505709624'), ('Caroline B', '1161.5675675675675'), ('Carolyn', '1197.578947368421'), ('Carson', '1020.6'), ('Casey', '378.0163727959698'), ('Catalina', '293.76942355889724'), ('Catherine', '941.4724409448819'), ('Catherine Cartan', '134.21917808219177'), ('Caty', '744.0'), ('Cecilia', '755.4649681528663'), ('Cecilie Lundgaard', '1141.842105263158'), ('Celine', '708.618398637138'), ('Cemre', '1123.3855421686746'), ('Chalena', '650.1367521367522'), ('Chanel', '343.2835365853659'), ('Chanelle', '215.6615811373093'), ('Chang', '575.4626436781609'), ('Chanikarn', '1281.8461538461538'), ('Chantal', '609.90625'), ('Chantelle', '1128.030303030303'), ('Chaoyi', '1232.8'), ('Charlene', '766.4794520547945'), ('Charlotte', '927.7647058823529'), ('Chayenne', '593.9759036144578'), ('Chelsea', '1132.0'), ('Chelsey', '719.3061224489796'), ('Chen', '524.7444668008048'), ('Chengyiyi', '789.2857142857143'), ('Chi Chi', '464.1367781155015'), ('Chi Fan', '1039.3902439024391'), ('Chia Hsien', '950.8813559322034'), ('Chia Jung', '359.3764705882353'), ('Chiaki', '437.73858921161826'), ('Chiara', '977.9640591966173'), ('Chieh Yu', '533.9586374695864'), ('Chihiro', '848.9908952959029'), ('Chin Wei', '385.2651515151515'), ('Chinami', '615.2230215827338'), ('Ching Wen', '583.530303030303'), ('Chiraz', '749.3582089552239'), ('Chisa', '874.8181818181819'), ('Chloe', '675.2445414847161'), ('Chompoothip', '1112.1458333333333'), ('Christie', '1112.875'), ('Christina', '454.9920529801324'), ('Christine', '841.4051724137931'), ('Chun Mei', '692.390625'), ('Chun Yan', '986.3944099378882'), ('Cindy', '659.3055555555555'), ('Claire', '443.45754716981133'), ('Clara', '1190.7307692307693'), ('Claudia', '826.2619047619048'), ('Claudia Antonia', '967.2978723404256'), ('Claudia Gianina', '996.2574257425742'), ('Claudine', '383.6413199426112'), ('Clelia', '823.6306306306307'), ('Clemence', '875.9772727272727'), ('Clementina Eugenia', '964.1224489795918'), ('Clothilde', '620.4120171673819'), ('Coco', '270.5896860986547'), ('Colomba', '1165.093023255814'), ('Conny', '390.0'), ('Constance', '570.2723004694835'), ('Constanza', '835.1132075471698'), ('Constanze', '1245.3333333333333'), ('Corina', '832.7818181818182'), ('Corinna', '356.8219696969697'), ('Cornelia', '757.2253521126761'), ('Cory Ann', '406.5511363636364'), ('Costanza', '1049.0'), ('Cristiana', '554.5376344086021'), ('Cristina', '643.616049382716'), ('Cristina Andreea', '439.5747863247863'), ('Cristina Madalina', '720.6428571428571'), ('Csilla', '949.7944444444445'), ('Cynthia', '998.7722772277227'), ('Da Hye', '1010.3333333333334'), ('Dabin', '920.1276595744681'), ('Dagmara', '1159.1818181818182'), ('Daiana', '720.7490039840637'), ('Dajana', '1181.4736842105262'), ('Dalia', '801.6933333333334'), ('Dalila', '525.9552572706936'), ('Dalma', '279.16438356164383'), ('Damilola', '1493.0'), ('Damini', '1242.0'), ('Damira', '1198.3333333333333'), ('Dan Ni', '994.4769230769231'), ('Dana', '805.7028985507246'), ('Daneika', '977.4539007092199'), ('Danica', '380.609375'), ('Daniela', '348.6364892881825'), ('Daniella', '643.9216101694915'), ('Danielle', '744.7453250222618'), ('Danielle Rose', '434.68'), ('Danijela', '1107.0919540229886'), ('Danka', '302.83268482490274'), ('Daphne', '1226.5454545454545'), ('Daria', '629.6443987667009'), ('Darija', '464.95631067961165'), ('Dariya', '1132.1744186046512'), ('Darya', '531.1829405162739'), ('Dasha', '722.6986301369863'), ('Dayana', '576.4307692307692'), ('Dea', '550.9545454545455'), ('Deborah', '764.6785714285714'), ('Deeon', '1115.0851063829787'), ('Dejana', '758.5342960288808'), ('Demi', '983.4174757281553'), ('Denisa', '419.1633466135458'), ('Denise', '949.1239316239316'), ('Denise Antonela', '1160.3125'), ('Deniz', '551.5304659498208'), ('Deria', '1123.6486486486488'), ('Desirae', '863.7826086956521'), ('Desiree', '1032.2666666666667'), ('Despina', '665.686684073107'), ('Despoina', '746.0962962962963'), ('Destanee', '483.77464788732397'), ('Dewi', '1154.2857142857142'), ('Dhruthi', '615.1506849315068'), ('Di', '736.1650485436893'), ('Dia', '383.7832512315271'), ('Diana', '654.3773657782928'), ('Diana Maria', '1205.7692307692307'), ('Dianne', '809.697247706422'), ('Dijana', '669.2982456140351'), ('Dilara', '1248.2'), ('Dina', '1094.4583333333333'), ('Dinah', '268.05945945945945'), ('Doga Selen', '1234.6176470588234'), ('Domenica', '803.8666666666667'), ('Dominika', '171.71134020618555'), ('Dominique', '1042.7843137254902'), ('Donika', '1131.6333333333334'), ('Donna', '223.50900900900902'), ('Dorien', '1196.56'), ('Doroteja', '520.9397993311037'), ('Draginja', '913.7272727272727'), ('Dunja', '929.0599369085173'), ('Ebony', '1073.1752577319587'), ('Eden', '1029.6888888888889'), ('Edina', '211.67325428194994'), ('Eduarda', '656.2851711026616'), ('Eetee', '842.7045454545455'), ('Ege', '1214.857142857143'), ('Ekaterina', '471.8367290748899'), ('Ekaterine', '553.9434782608696'), ('Elaine', '1221.7931034482758'), ('Eleanor', '1066.5343511450383'), ('Elena', '324.3720930232558'), ('Elena Gabriela', '392.44444444444446'), ('Elena Teodora', '686.6470588235294'), ('Eleni', '249.5244140625'), ('Eleonora', '950.0277777777778'), ('Eleonore', '1087.372340425532'), ('Eliessa', '876.1730769230769'), ('Elina', '421.6573033707865'), ('Elisabeth', '888.2213114754098'), ('Elise', '334.7118644067797'), ('Elitsa', '418.39748953974896'), ('Elixane', '579.5214723926381'), ('Eliza', '978.2708333333334'), ('Elizabeta', '1154.2714285714285'), ('Elizabeth', '736.9747747747748'), ('Elizabeth Anita Alexandria', '1006.2982456140351'), ('Elizaveta', '489.5307517084282'), ('Elizaveta Anna', '981.9814814814815'), ('Elke', '1011.9433962264151'), ('Ella', '1168.7967479674796'), ('Ellen', '750.9460093896714'), ('Ellie', '508.340206185567'), ('Elodie', '1211.2333333333333'), ('Elyne', '652.1984732824427'), ('Ema', '819.3400503778338'), ('Emelyn', '672.730407523511'), ('Emi', '770.8472222222222'), ('Emilia', '1232.0'), ('Emiliana', '1022.9174311926605'), ('Emilie', '705.4716981132076'), ('Emilija', '1209.625'), ('Emiliya', '1092.2771084337348'), ('Emily', '585.093851132686'), ('Emily J', '1041.948717948718'), ('Emina', '682.0972222222222'), ('Emma', '641.046992481203'), ('Emma Christine', '1193.3529411764705'), ('Emmanuelle', '943.7716535433071'), ('En Pei', '1229.7333333333333'), ('Ena', '980.3333333333334'), ('Eri', '321.23595505617976'), ('Erica', '788.0384615384615'), ('Erika', '544.5041866028708'), ('Erin', '942.7969696969697'), ('Erina', '733.1351351351351'), ('Esen', '1218.5652173913043'), ('Estela', '966.0540540540541'), ('Estelle', '617.4935251798561'), ('Ester', '950.9090909090909'), ('Estrella', '347.34943639291464'), ('Etsuko', '781.3218390804598'), ('Eudice Wong', '911.7241379310345'), ('Eugenia', '1157.5'), ('Eugenie', '477.62886597938143'), ('Eugeniya', '620.6746411483253'), ('Eva', '500.29483037156706'), ('Eva Marie', '1083.8333333333333'), ('Eveliina', '1023.8690476190476'), ('Evelyn', '471.5439093484419'), ('Evgenia', '414.66339869281046'), ('Evgeniya', '442.0344827586207'), ('Fang Ying', '612.0185185185185'), ('Fangzhou', '406.9281767955801'), ('Fanny', '569.1904761904761'), ('Farah', '1106.3076923076924'), ('Fatima', '673.7509157509157'), ('Fatimah', '1070.9463414634147'), ('Fatma', '648.2984054669704'), ('Fatyha', '1015.5'), ('Federica', '722.7286493034525'), ('Federica Joe', '1204.7272727272727'), ('Fernanda', '647.922077922078'), ('Ferny', '1187.0384615384614'), ('Fiona', '853.3908045977012'), ('Flavia', '376.47888446215137'), ('Florencia', '451.5810397553517'), ('Frances', '999.2'), ('Francesca', '570.534951862704'), ('Francisca', '903.1666666666666'), ('Francoise', '437.05298013245033'), ('Franziska', '949.6575342465753'), ('Frederikke', '1244.3333333333333'), ('Freya', '544.1627906976744'), ('Gabriela', '696.7697332607512'), ('Gabriela Nicole', '994.0612244897959'), ('Gabriella', '792.5'), ('Gabrielle Faith', '985.7211538461538'), ('Gaelle', '1052.8314606741574'), ('Gaia', '759.5352697095435'), ('Gail', '526.2644836272041'), ('Galina', '305.19563522992985'), ('Ganna', '606.7211740041929'), ('Garbine', '229.3774193548387'), ('Gebriela', '1152.142857142857'), ('Genevieve', '772.2857142857143'), ('Georgia', '533.5940594059406'), ('Georgia Andreea', '763.1014492753624'), ('Georgiana', '1153.9166666666667'), ('Georgina', '396.225'), ('Ghislaine', '1150.6607142857142'), ('Giada', '813.1351351351351'), ('Gioia', '567.8518518518518'), ('Giorgia', '960.4941860465116'), ('Giorgie', '1226.5'), ('Giovanna', '1197.0'), ('Giulia', '693.6215943491422'), ('Giuliana', '584.359375'), ('Gloria', '794.7118644067797'), ('Gozal', '716.3150684931506'), ('Grace', '454.06233062330625'), ('Gracia', '783.8288043478261'), ('Greetje', '547.277108433735'), ('Greta', '296.8219584569733'), ('Guadalupe', '797.383606557377'), ('Guillermina', '1027.0'), ('Guiomar', '957.9512195121952'), ('Gulben', '1168.3396226415093'), ('Gulchekhra', '1196.0'), ('Gulnaz', '1236.6153846153845'), ('Guzal', '995.4074074074074'), ('Gyulnara', '1087.6216216216217'), ('Habiba', '1051.623188405797'), ('Hae Sung', '844.3856812933026'), ('Haine', '1179.4153846153847'), ('Hana', '1110.5376344086021'), ('Hanna', '957.2'), ('Hanyu', '543.968253968254'), ('Hao Chen', '680.1050228310502'), ('Hao Ching', '1153.936507936508'), ('Harmony', '574.8723404255319'), ('Harriet', '694.341935483871'), ('Haruka', '774.6837606837607'), ('Haruna', '512.1515151515151'), ('Hayley', '914.5321100917431'), ('Hazal', '1214.7692307692307'), ('Heather', '167.50632911392404'), ('Heidi', '417.44323483670297'), ('Helen', '1019.4107142857143'), ('Helene', '696.4752475247525'), ('Hikari', '1095.1176470588234'), ('Hilda', '673.6635071090047'), ('Himari', '1219.0'), ('Hiroko', '534.890243902439'), ('Hirono', '860.8104265402843'), ('Ho Ching', '925.9865771812081'), ('Hollie', '1185.75'), ('Hongrui', '914.8607594936709'), ('Hortencia', '1251.1333333333334'), ('Hsin Yuan', '1107.7142857142858'), ('Hua Chen', '726.1737089201878'), ('Huijie', '1118.904761904762'), ('Hulya', '888.0055096418732'), ('Hye Min', '1020.28125'), ('Hyojung', '1069.3208955223881'), ('Hyun Hui', '729.0671936758894'), ('I Hsuan', '1038.6911764705883'), ('Iana', '1085.581818181818'), ('Ida', '962.5'), ('Idia', '1232.2'), ('Iga', '705.5625'), ('Ilay', '1135.5'), ('Ilka', '868.2191780821918'), ('Ilona', '452.625'), ('Ilze', '847.0941176470589'), ('Imane Maelle', '845.375'), ('Ina', '1165.5573770491803'), ('Inci', '1069.0925925925926'), ('India', '954.046875'), ('Indire', '627.7027027027027'), ('Indy', '485.9559748427673'), ('Ineke', '919.6147540983607'), ('Ines', '687.0229885057471'), ('Inger', '1039.0'), ('Ingrid', '766.2549019607843'), ('Ingrid Alexandra', '869.3571428571429'), ('Ingrid Esperanza', '748.6622691292876'), ('Intissar', '1192.5454545454545'), ('Ioana', '980.2232142857143'), ('Ioana Diana', '482.43243243243245'), ('Ioana Loredana', '646.0441176470588'), ('Ionela Andreea', '799.0552486187845'), ('Ipek', '655.7828348504552'), ('Irena', '288.74423480083857'), ('Irene', '579.2153846153847'), ('Irina', '436.84339509862525'), ('Irina Camelia', '285.84388185654007'), ('Irina Maria', '578.1381578947369'), ('Iris', '866.1075949367089'), ('Iryna', '489.5294964028777'), ('Isabel', '724.9178743961353'), ('Isabela', '1114.99375'), ('Isabella', '566.7873931623932'), ('Isabelle', '781.6993464052288'), ('Iulia Maria', '1170.9411764705883'), ('Iva', '732.7386018237082'), ('Ivana', '439.81414868105514'), ('Ivania', '871.109375'), ('Ivanka', '1079.05'), ('Iveta', '117.95684523809524'), ('Ivette', '1136.8535031847134'), ('Ivone', '872.0'), ('Ivonne', '591.3809523809524'), ('Jacqueline', '624.6089494163424'), ('Jada', '909.2'), ('Jade', '739.04802259887'), ('Jaeda', '760.4920634920635'), ('Jaimee', '562.8450704225352'), ('Jaimy Gayle', '1243.875'), ('Jainy', '1037.5274725274726'), ('Jamie', '402.36756756756756'), ('Jamilya', '1247.3333333333333'), ('Jan', '592.5990783410139'), ('Jana', '406.6258503401361'), ('Janette', '240.5306603773585'), ('Janina', '699.7864583333334'), ('Janja', '1262.5416666666667'), ('Janneke', '861.5102040816327'), ('Jaqueline Adina', '748.7238095238096'), ('Jara', '1121.767857142857'), ('Jarmila', '149.46360759493672'), ('Jasmin', '633.027027027027'), ('Jasmina', '642.1811989100818'), ('Jasmine', '437.86915887850466'), ('Jasmine Amber', '1117.64'), ('Jawairiah', '1070.5648854961833'), ('Jazmin', '1035.46'), ('Jazzamay', '983.1290322580645'), ('Jeannine', '767.7730496453901'), ('Jelena', '348.19338235294117'), ('Jennifer', '556.7936681222708'), ('Jenny', '902.1470588235294'), ('Jesika', '501.5860215053763'), ('Jessica', '655.7464059804486'), ('Jessika', '818.2043795620438'), ('Jessy', '967.6708860759494'), ('Ji Hee', '823.9789029535865'), ('Ji Young', '833.5061082024433'), ('Jia', '1169.6923076923076'), ('Jia Jing', '682.961038961039'), ('Jia Qi', '529.7777777777778'), ('Jiahui', '794.4931506849315'), ('Jiakang', '1230.6'), ('Jiatian', '1232.032258064516'), ('Jiaxi', '578.5'), ('Jiaxue', '1161.0'), ('Jie', '114.05571428571429'), ('Jil Belen', '501.0619469026549'), ('Jil Nora', '1116.4190476190477'), ('Jill', '121.9579326923077'), ('Jillian', '721.14'), ('Jin', '1267.0'), ('Jin A', '492.8915187376726'), ('Jin Ju', '1035.6470588235295'), ('Jing Jing', '369.1620469083156'), ('Joana', '863.3225806451613'), ('Joanna', '931.025641025641'), ('Joanne', '1227.8'), ('Jodie Anna', '925.4230769230769'), ('Johana', '1111.8333333333333'), ('Johanna', '310.3405299313052'), ('Jordana', '1022.6198347107438'), ('Josepha', '924.9325842696629'), ('Josephine', '684.4892086330935'), ('Josie', '993.2105263157895'), ('Jovana', '601.9846625766871'), ('Ju Eun', '812.6'), ('Judith', '1224.0'), ('Jule', '1243.904761904762'), ('Julia', '576.9173467252564'), ('Julia Mansano', '1024.6666666666667'), ('Juliana', '1110.0816326530612'), ('Juliana Rocha', '1175.7666666666667'), ('Julie', '512.3787128712871'), ('Julieta Lara', '707.1467889908257'), ('Julita', '1019.9411764705883'), ('Julyette Maria Josephine', '732.1666666666666'), ('June', '1189.0'), ('Junri', '262.30884808013354'), ('Justina', '1212.9166666666667'), ('Justine', '521.5358361774744'), ('Justyna', '585.8517745302714'), ('Kady', '1055.020202020202'), ('Kai Chen', '272.08855291576674'), ('Kai Lin', '522.6561403508772'), ('Kaia', '127.06775067750678'), ('Kaitlin', '901.3333333333334'), ('Kaitlyn', '756.2549019607843'), ('Kaja', '633.5454545454545'), ('Kajsa', '661.9589041095891'), ('Kamila', '568.2547169811321'), ('Kamilla', '1162.8301886792453'), ('Kamonwan', '765.1395348837209'), ('Kana', '924.2782608695652'), ('Kanae', '635.346516007533'), ('Kanako', '1105.3125'), ('Kanami', '799.9940828402367'), ('Kanika', '962.8536585365854'), ('Kaori', '871.0790513833992'), ('Karen', '674.9672514619883'), ('Kariann', '1068.9166666666667'), ('Karin', '472.338003502627'), ('Karina', '883.6090909090909'), ('Karina Ildor', '696.9606060606061'), ('Karina Kristina', '1062.795918367347'), ('Karine', '868.8904109589041'), ('Karis', '1001.0679611650486'), ('Karla', '807.616'), ('Karman', '652.917808219178'), ('Karola Patricia', '928.3333333333334'), ('Karolayne', '1077.8095238095239'), ('Karolina', '586.9412296564195'), ('Karoline', '873.6229508196722'), ('Karyn', '903.5769230769231'), ('Kassandra', '927.0350877192982'), ('Katalin', '331.93949394939494'), ('Katarina', '401.0998263888889'), ('Katarzyna', '459.29286608260327'), ('Kate', '1117.7142857142858'), ('Katerina', '491.8507295173962'), ('Kateryna', '294.33209990749305'), ('Katharina', '680.677700348432'), ('Katharine', '882.1071428571429'), ('Katherine', '836.6804511278195'), ('Katherine Gabriela', '910.396694214876'), ('Kathinka', '415.7'), ('Kathrin', '291.4792817679558'), ('Katie', '620.9404580152672'), ('Katrine Isabel', '1111.08'), ('Katy', '492.6608695652174'), ('Katya', '1050.7'), ('Katyarina', '1010.1818181818181'), ('Kayla', '583.1686746987951'), ('Kaylah', '1163.3478260869565'), ('Kazusa', '772.2402912621359'), ('Kei', '1003.1212121212121'), ('Kelia', '1114.9433962264152'), ('Kelly', '804.873831775701'), ('Kelly S', '312.7584269662921'), ('Kelsey', '1012.325'), ('Kennedy', '807.7222222222222'), ('Keren', '643.422641509434'), ('Keri', '1018.6534653465346'), ('Kerstin', '1020.4271844660194'), ('Khristina', '978.0229885057471'), ('Ki Ryang', '1164.090909090909'), ('Kiki', '287.71625344352617'), ('Kim', '687.3120567375887'), ('Kim Alice', '762.4081632653061'), ('Kimberley', '846.9154228855722'), ('Kimberly', '618.6923076923077'), ('Kimika', '1097.219512195122'), ('Kimiko', '95.03465982028241'), ('Kinnie', '606.1467576791808'), ('Kirsten', '308.64912280701753'), ('Kirsten Andrea', '1035.0384615384614'), ('Klaartje', '576.9'), ('Klara', '235.31431431431432'), ('Klaudia', '780.7905027932961'), ('Komola', '826.0238095238095'), ('Korina', '567.0507399577167'), ('Kotomi', '844.7460317460317'), ('Krista', '522.984693877551'), ('Kristie', '445.18918918918916'), ('Kristina', '343.25546975546973'), ('Kristina N', '1060.5633802816901'), ('Kristy', '837.7730496453901'), ('Kristyna', '443.8467908902692'), ('Ksenia', '482.36648501362396'), ('Kseniia', '990.6'), ('Ksenija', '975.6271186440678'), ('Kumiko', '488.76107382550333'), ('Kurumi', '165.96132596685084'), ('Kveta', '159.62397820163488'), ('Kwan Yau', '1070.0377358490566'), ('Kyle', '887.502487562189'), ('Kylie', '798.3181818181819'), ('Kyoka', '348.54794520547944'), ('Kyra', '443.76148409893995'), ('Kyung Mi', '533.433770014556'), ('Laetitia', '677.4458598726114'), ('Laili', '996.8148148148148'), ('Lamis', '1062.3666666666666'), ('Lara', '643.6939163498099'), ('Larikah', '1054.9019607843138'), ('Laura', '504.4145867098865'), ('Laura D', '910.5714285714286'), ('Laura Ioana', '516.1982942430703'), ('Laura Sofia', '1198.1538461538462'), ('Lauren', '484.9442231075697'), ('Lauryn', '1107.0882352941176'), ('Lavinia', '612.736'), ('Laylo', '1226.076923076923'), ('Layne', '1184.0'), ('Lea', '858.4107142857143'), ('Leah', '1179.6216216216217'), ('Lee', '908.156862745098'), ('Lena', '594.9436936936937'), ('Lena Marie', '657.8934169278997'), ('Lenka', '451.33577981651376'), ('Leolia', '773.5666666666667'), ('Leonie', '825.972972972973'), ('Lesedi Sheya', '887.4545454545455'), ('Lesia', '205.17590361445784'), ('Lesley', '514.7174515235457'), ('Leslie', '1180.5454545454545'), ('Leticia', '481.3229166666667'), ('Leticia Garcia', '1072.4'), ('Leylah Annie', '1030.5'), ('Li', '988.7425149700599'), ('Liana Gabriela', '387.87113402061857'), ('Libby', '899.9150326797386'), ('Libi', '1035.327868852459'), ('Lidia', '1147.8529411764705'), ('Lidziya', '797.2128378378378'), ('Liezel', '284.8326771653543'), ('Liga', '567.9464544138929'), ('Lilla', '722.5087719298245'), ('Lin', '497.42124542124543'), ('Lina', '574.9808362369338'), ('Linda', '929.4398496240601'), ('Lindsay', '275.6055900621118'), ('Lindsey', '986.82'), ('Ling', '418.81925343811395'), ('Liniques', '1184.7222222222222'), ('Linnea', '959.6981132075472'), ('Lisa', '356.0105210420842'), ('Lisa Maria', '758.06'), ('Lisa Marie', '996.0408163265306'), ('Lisanne', '673.6507936507936'), ('Liubov', '887.2875'), ('Livia', '1179.875'), ('Liz Tatiane', '870.9007633587786'), ('Lizaveta', '1120.5652173913043'), ('Lizette', '666.1496062992126'), ('Lorenza', '1231.2727272727273'), ('Lorraine M', '972.75'), ('Lou', '680.1724137931035'), ('Loudmilla', '1220.0'), ('Louisa', '380.5308641975309'), ('Louise', '1070.1025641025642'), ('Lourdes', '188.06095041322314'), ('Lu', '907.3557312252965'), ('Luca', '859.8644067796611'), ('Lucia', '845.740638002774'), ('Luciana', '885.7495107632094'), ('Lucie', '322.62611607142856'), ('Lucrezia', '845.986301369863'), ('Lucy', '756.3141592920354'), ('Ludmila', '846.2727272727273'), ('Ludmilla', '787.5416666666666'), ('Luisa', '981.7517730496454'), ('Luisa Marie', '820.59375'), ('Luksika', '284.22813688212926'), ('Lulu', '1098.2888888888888'), ('Luna', '1139.0'), ('Lusine', '974.2702702702703'), ('Lutfiye', '1190.0629921259842'), ('Lyann', '982.6666666666666'), ('Lynn', '952.4411764705883'), ('Lyudmyla', '382.82479784366575'), ('Macall', '607.3360995850622'), ('Macarena', '692.1515151515151'), ('Madalina', '324.63613231552165'), ('Maddison', '748.0'), ('Madeleine', '1028.0365853658536'), ('Madeline', '1217.469387755102'), ('Madina', '1203.5'), ('Madison', '290.64452214452217'), ('Madrie', '958.0955414012739'), ('Maegan', '787.0'), ('Mafalda', '1139.7'), ('Maftuna', '1173.75'), ('Magali', '734.0'), ('Magalie', '1036.1214953271028'), ('Magda', '300.3974358974359'), ('Magdalena', '443.6296006264683'), ('Magy', '1092.7621951219512'), ('Mahak', '875.0'), ('Mahitha', '1007.15'), ('Mai', '687.25'), ('Maia', '745.433962264151'), ('Maia A', '1206.6666666666667'), ('Maiko', '438.4245810055866'), ('Maileen', '1152.888888888889'), ('Mailen', '410.8463541666667'), ('Maja', '896.7413793103449'), ('Makiho', '784.8009049773756'), ('Makoto', '516.6615384615385'), ('Malene', '999.15625'), ('Malika', '1004.7428571428571'), ('Malin', '825.039603960396'), ('Mallaurie', '1031.5342465753424'), ('Mallory', '143.48235294117646'), ('Malou', '947.3333333333334'), ('Mami', '1153.590909090909'), ('Man Ying Maggie', '1202.2692307692307'), ('Mana', '689.891129032258'), ('Mananchaya', '1230.6'), ('Manca', '838.1780821917808'), ('Mandy', '361.0'), ('Manisha', '897.0974358974358'), ('Manon', '622.7673469387755'), ('Manya', '1181.3548387096773'), ('Mara', '908.3962264150944'), ('Marcela', '774.64'), ('Marcela Guimaraes', '1143.7957746478874'), ('Marcelina', '1247.3636363636363'), ('Marcella', '657.0171919770773'), ('Margalita', '325.5912596401028'), ('Margarida', '987.6739130434783'), ('Margarita', '611.4060995184591'), ('Margaux', '1051.1224489795918'), ('Margot', '753.8346456692914'), ('Mari', '526.3698630136986'), ('Maria', '426.6002565198803'), ('Maria Agustina', '1190.0833333333333'), ('Maria Andrea', '1072.9591836734694'), ('Maria Camila', '1188.5277777777778'), ('Maria Constanza De Las Mercedes', '861.5050505050505'), ('Maria Del Rosario', '1119.4897959183672'), ('Maria Elena', '194.2392065344224'), ('Maria Fernanda', '443.0228531855956'), ('Maria Jesus', '1170.1830985915492'), ('Maria Joao', '486.6092544987147'), ('Maria Jose', '306.1794310722101'), ('Maria Lourdes', '918.0769230769231'), ('Maria Paulina', '1047.98224852071'), ('Maria Teresa', '359.81081081081084'), ('Mariam', '662.1182795698925'), ('Mariana', '556.0428051001821'), ('Marianna', '730.3831168831168'), ('Marianne', '993.175925925926'), ('Mariaryeni', '1085.4242424242425'), ('Marie', '695.574074074074'), ('Marie Eve', '300.56296296296296'), ('Mariia', '1148.9166666666667'), ('Marija', '544.2636655948553'), ('Marijana', '1215.0'), ('Marina', '532.6881807180315'), ('Marine', '774.5654761904761'), ('Marion', '279.78655282817505'), ('Mariona', '1163.0'), ('Marisa', '1067.3413173652696'), ('Mariya', '281.871335504886'), ('Marketa', '353.44444444444446'), ('Marlies', '946.8934426229508'), ('Marrit', '783.1711711711712'), ('Marta', '419.32988047808766'), ('Marta Huqi', '851.1224489795918'), ('Martha', '1056.0588235294117'), ('Martina', '751.8679119412942'), ('Mary', '869.1666666666666'), ('Mary Ann', '1188.7096774193549'), ('Maryna', '323.86176470588236'), ('Masa', '355.7223168654174'), ('Mathilde', '437.11396648044695'), ('Matilda', '799.1875'), ('Maud', '1013.4761904761905'), ('Maureen', '1070.21875'), ('Maurien', '1121.0869565217392'), ('Maxine', '973.8717948717949'), ('May', '1084.0294117647059'), ('Maya', '732.4260679079956'), ('Mayar', '891.6309523809524'), ('Mayo', '407.029702970297'), ('Mayya', '619.9064748201439'), ('Megan', '736.4809523809524'), ('Megumi', '1025.0'), ('Mei Xu', '1031.6'), ('Meiling', '812.85'), ('Meiqi', '1029.1666666666667'), ('Melanie', '372.32502965599053'), ('Melany Solange', '1039.8333333333333'), ('Melina', '1017.2560553633218'), ('Melinda', '169.13578500707214'), ('Melis', '634.7950310559006'), ('Melisa', '993.1351351351351'), ('Melissa', '1154.093023255814'), ('Melissa Ishuan', '1104.357142857143'), ('Meng Ning', '1035.95'), ('Mercedes', '1213.2142857142858'), ('Merel', '900.75'), ('Meritxell', '1182.9107142857142'), ('Mervana', '337.5292682926829'), ('Mi', '554.3953934740883'), ('Mi Jeong', '1071.3076923076924'), ('Mi Rae', '992.7225433526012'), ('Mi Zhuoma', '999.375'), ('Mia Nicole', '987.504761904762'), ('Micaela', '1332.0737704918033'), ('Michaela', '676.90589198036'), ('Michaella', '185.3469387755102'), ('Michela', '1228.9285714285713'), ('Michele Alexandra', '946.8846153846154'), ('Michelle', '280.79959100204496'), ('Michika', '718.047619047619'), ('Mihaela', '376.7356115107914'), ('Mihaela Lorena', '1223.4'), ('Miharu', '523.2788844621514'), ('Mihika', '1064.142857142857'), ('Mihoki', '1110.4411764705883'), ('Miki', '586.2250489236791'), ('Mila', '1201.16'), ('Milagros', '1234.2857142857142'), ('Milana', '626.441935483871'), ('Milena', '1114.4074074074074'), ('Milica', '1221.904761904762'), ('Min', '866.0693069306931'), ('Min Hwa', '819.8425531914894'), ('Minami', '1238.0625'), ('Mira', '788.2622950819672'), ('Mirabelle', '721.1643835616438'), ('Miranda', '1169.4864864864865'), ('Miriam', '912.120218579235'), ('Miriam Bianca', '628.075'), ('Miriana', '950.6263736263736'), ('Mirjam', '843.6428571428571'), ('Mirjana', '186.76587795765877'), ('Misa', '617.0379241516966'), ('Misaki', '208.95263157894738'), ('Mitsumi', '1121.04'), ('Miyabi', '447.93283582089555'), ('Miyu', '594.9036697247707'), ('Mizuno', '593.1506849315068'), ('Molly', '1029.0'), ('Momoko', '772.6981132075472'), ('Mona', '273.57517899761336'), ('Monica', '210.0846394984326'), ('Monika', '980.575'), ('Monique', '462.4270462633452'), ('Montserrat', '541.952380952381'), ('Morgane', '880.6527777777778'), ('Moulika', '1243.4'), ('Mouna', '1258.5'), ('Moyuka', '1198.25'), ('Muazzez', '1227.0'), ('Muge', '1186.9444444444443'), ('Myrtille', '485.40168539325845'), ('Na', '82.13112391930835'), ('Na Lae', '608.7791798107255'), ('Na Ri', '573.5197368421053'), ('Nadezda', '868.6521739130435'), ('Nadia', '407.5463976945245'), ('Nadiya', '637.4607407407408'), ('Nadja', '631.8181818181819'), ('Nagi', '828.0675675675676'), ('Naiktha', '767.4963503649635'), ('Naima', '930.7027027027027'), ('Nam Yeon', '878.6666666666666'), ('Nan Nan', '890.4455445544554'), ('Nanuli', '542.7168141592921'), ('Nao', '313.45625'), ('Naoko', '1180.3828125'), ('Naomi', '483.97225572979494'), ('Napatsakorn', '929.4388489208633'), ('Nastassia', '1138.9166666666667'), ('Nastassja', '554.5290322580645'), ('Nastja', '593.1772853185596'), ('Natalia', '720.132932166302'), ('Natalie', '577.9677419354839'), ('Natalija', '634.3620689655172'), ('Nataliya', '1247.909090909091'), ('Natasa', '666.2853403141361'), ('Natasha', '883.0777142857143'), ('Natela', '566.4943396226415'), ('Natella', '962.0188679245283'), ('Nathalia', '543.031185031185'), ('Nathaly', '617.4615384615385'), ('Natia', '929.6928104575163'), ('Natsumi', '547.7037037037037'), ('Nattawadee', '1177.622641509434'), ('Naz', '1087.3823529411766'), ('Nazari', '825.7291666666666'), ('Neda', '745.421052631579'), ('Nelise', '1164.107142857143'), ('Nermeen', '1069.15'), ('Nevena', '1031.0'), ('Nicha', '515.3191489361702'), ('Nicky', '843.9007633587786'), ('Nicola', '753.2253164556962'), ('Nicole', '499.4127634660422'), ('Nicoleta Catalina', '485.46875'), ('Nicolette', '778.1648648648649'), ('Nidhi', '762.1578947368421'), ('Nigina', '376.7617554858934'), ('Nika', '913.4380165289256'), ('Nikita', '1174.0'), ('Nikki', '1017.3134328358209'), ('Nikol', '1054.0813953488373'), ('Nikola', '723.484076433121'), ('Nina', '528.8673050615595'), ('Nina Isabella', '1124.1666666666667'), ('Nives', '841.0514705882352'), ('Noel', '965.5343511450382'), ('Noelia', '1049.834745762712'), ('Noelle', '883.7787610619469'), ('Nonna', '1167.2758620689656'), ('Noppawan', '374.93926247288505'), ('Nora', '921.6216216216217'), ('Nour', '1096.1140350877192'), ('Nozomi', '936.3392857142857'), ('Nudnida', '436.66881028938906'), ('Nungnadda', '537.577922077922'), ('Nuria', '395.6680227827502'), ('Oana', '1027.1382978723404'), ('Oana Georgeta', '686.3047619047619'), ('Oceane', '728.7630208333334'), ('Ofri', '839.4923664122138'), ('Oksana', '533.9652351738241'), ('Ola', '660.8924731182796'), ('Olawaseun', '1397.5'), ('Olaya', '1112.75'), ('Oleksandra', '903.4289156626506'), ('Olena', '1179.1555555555556'), ('Olesya', '501.44444444444446'), ('Olga', '432.6511627906977'), ('Olivia', '446.7231833910035'), ('Oliwia', '1006.5128205128206'), ('Ons', '435.1470588235294'), ('Ornella', '978.7321428571429'), ('Oyku', '866.0454545454545'), ('Paige Mary', '1156.28125'), ('Pamela', '989.1904761904761'), ('Panna', '683.1081081081081'), ('Paola', '132.12638580931264'), ('Parris', '1099.625'), ('Patcharin', '863.5507246376811'), ('Patricia', '572.8059701492538'), ('Patricia Maria', '403.935'), ('Patrycja', '657.3816155988858'), ('Patty', '385.8135593220339'), ('Paula', '558.0162601626016'), ('Paula Andrea', '1175.909090909091'), ('Paula Catalina', '868.7624113475177'), ('Paula Cristina', '508.4679802955665'), ('Paulina', '1035.7780678851175'), ('Pauline', '298.1861898890259'), ('Pavla', '915.5892857142857'), ('Peangtarn', '514.586319218241'), ('Peggy', '755.5813953488372'), ('Pei Chi', '673.9809523809524'), ('Pei Hsuan', '1106.5'), ('Pei Ju', '1061.3076923076924'), ('Pemra', '465.24962852897477'), ('Pernilla', '619.4154929577464'), ('Petia', '710.3972602739726'), ('Petra', '365.50280484204313'), ('Phenomena', '1211.0'), ('Phillis', '826.6486486486486'), ('Pia', '737.862676056338'), ('Piia', '668.2581196581197'), ('Pilar', '740.5879828326181'), ('Pippa', '1041.0740740740741'), ('Plobrung', '937.7945205479452'), ('Polina', '630.7953529937444'), ('Polona', '478.30369515011546'), ('Poojashree', '729.1047904191616'), ('Pranjala', '795.4736842105264'), ('Prarthana G', '653.5070422535211'), ('Prerna', '740.5361842105264'), ('Priscila', '1137.19'), ('Priscilla', '675.4124293785311'), ('Qiang', '383.4714587737844'), ('Qianhui', '826.1388888888889'), ('Qianqian', '943.421052631579'), ('Qiu Yu', '705.8493150684932'), ('Quinn', '883.2352941176471'), ('Quirine', '633.9770491803279'), ('Rachael', '859.2706766917294'), ('Rachel', '1147.8526315789475'), ('Radina', '955.7833333333333'), ('Rafaela', '1121.2432432432433'), ('Ralina', '1176.5'), ('Raluca', '304.4619771863118'), ('Raluca Elena', '672.2258064516129'), ('Raluca Georgiana', '539.6164383561644'), ('Ramu', '1010.4545454545455'), ('Ramya', '1121.8846153846155'), ('Ran', '598.2655172413793'), ('Rana', '1117.6666666666667'), ('Raquel', '700.7644444444444'), ('Rashmi', '1089.2100840336134'), ('Ratnika', '1021.6504854368932'), ('Raveena', '487.6268656716418'), ('Rebeca', '1145.4333333333334'), ('Rebecca', '568.3374316939891'), ('Rebeka', '676.1090909090909'), ('Regina', '289.60283687943263'), ('Reina', '1019.0'), ('Reka Luca', '323.1388101983003'), ('Remi', '494.6111111111111'), ('Renata', '274.85317919075146'), ('Ria', '669.448275862069'), ('Rianna', '638.6666666666666'), ('Richel', '246.19871794871796'), ('Rika', '290.0614657210402'), ('Riko', '495.22641509433964'), ('Rio', '1125.0363636363636'), ('Risa', '489.65909090909093'), ('Rishika', '775.7269624573379'), ('Rita', '1051.7349397590363'), ('Riya', '651.4246575342465'), ('Roberta', '150.96681415929203'), ('Robin', '431.19607843137254'), ('Robyn', '1054.606896551724'), ('Rocio', '795.6201232032854'), ('Romana', '402.49931972789113'), ('Romana Caroline', '669.8542372881356'), ('Romina', '283.63246554364474'), ('Romy', '758.1714285714286'), ('Rona', '1125.5471698113208'), ('Ronit', '427.0'), ('Ronke', '1072.857142857143'), ('Roosh', '1168.2857142857142'), ('Rosa', '965.0'), ('Rosalia', '1059.73'), ('Rosalie', '1066.5887096774193'), ('Rosie', '984.1714285714286'), ('Roxane', '479.51738241308794'), ('Rui', '1209.625'), ('Rushmi', '573.8729603729604'), ('Rutuja', '808.5096774193548'), ('Ryann', '1069.0379746835442'), ('Saana', '1117.88'), ('Sabastiani', '982.7397260273973'), ('Sabina', '682.2005532503458'), ('Sabina Elena', '1184.6666666666667'), ('Sabine', '203.5871080139373'), ('Sabrina', '905.6324786324786'), ('Sacha', '340.2890442890443'), ('Sachia', '400.8093385214008'), ('Sachie', '368.26881720430106'), ('Sadafmoh', '665.8219178082192'), ('Sai Samhitha', '998.5238095238095'), ('Saisai', '297.39032258064515'), ('Sakiko', '832.9585365853659'), ('Sally', '529.583908045977'), ('Salma', '1204.6666666666667'), ('Samantha', '406.21702404158543'), ('Samira', '932.8940397350993'), ('Sanae', '1105.171875'), ('Sanaz', '703.1372549019608'), ('Sandra', '563.964505613908'), ('Sandy', '1028.9565217391305'), ('Sang Hee', '857.9508196721312'), ('Sania', '177.22695035460993'), ('Sara', '509.80945757997216'), ('Sarah', '546.5551763367463'), ('Sarah Beth', '875.9277108433735'), ('Sarah Rebecca', '743.6062176165804'), ('Sarahi', '1139.2340425531916'), ('Sarai Delfina', '1191.6470588235295'), ('Saray', '840.0776699029126'), ('Sari', '1081.1666666666667'), ('Sarlota', '1209.7777777777778'), ('Sarvinoz', '1235.1960784313726'), ('Sasa', '1033.027027027027'), ('Saska', '747.3695652173913'), ('Satsuki', '888.7272727272727'), ('Savannah', '1142.9285714285713'), ('Schena', '1188.2941176470588'), ('Se Hyun', '1210.2571428571428'), ('Se Jin', '1122.4545454545455'), ('Sean', '1240.92'), ('Seda', '1003.5367647058823'), ('Seira', '1115.72'), ('Selin', '1168.6571428571428'), ('Seo Kyung', '858.9173789173789'), ('Seone', '889.8028169014085'), ('Serena', '14.654294803817603'), ('Sesil', '162.3505747126437'), ('Seung Yeon', '784.0465949820789'), ('Severine', '218.4701086956522'), ('Shahar', '166.41358024691357'), ('Shakhlo', '924.8818897637796'), ('Shakhnoza', '1236.7627118644068'), ('Shangqing', '1228.3235294117646'), ('Shanshan', '694.2'), ('Shao Yuan', '967.9034090909091'), ('Sharmada', '851.5633802816901'), ('Sharon', '296.5792682926829'), ('Sharon Sanchana', '1097.0'), ('Shelby', '372.89398280802294'), ('Shelly', '1171.0'), ('Sheng Nan', '451.8657487091222'), ('Sherazad', '649.5154639175257'), ('Sherry', '1024.0116279069769'), ('Shiho', '500.688679245283'), ('Shilin', '632.2824427480916'), ('Shiori', '1070.6666666666667'), ('Shir', '1154.4166666666667'), ('Shiran', '1187.9245283018868'), ('Shivika', '935.2322946175638'), ('Shou Na', '1120.388888888889'), ('Shreya', '1148.0'), ('Shu Ying', '1042.6802325581396'), ('Shuai', '167.90740740740742'), ('Shuko', '421.44179894179894'), ('Shuo', '864.1538461538462'), ('Shuyue', '966.0588235294117'), ('Shweta', '897.6951219512196'), ('Si Qi', '1047.7575757575758'), ('Silvia', '565.8211508553654'), ('Simona', '542.2382851445662'), ('Simone', '1070.3417721518988'), ('Simran Kaur', '974.8'), ('Sina', '728.7443609022556'), ('Sinead', '975.3484848484849'), ('Sing Le', '1141.842105263158'), ('Siqi', '980.9076923076923'), ('Sirui', '949.7916666666666'), ('Siyu', '1241.1379310344828'), ('Sloane', '259.63589743589745'), ('Smriti', '1184.8260869565217'), ('Sneha', '1225.388888888889'), ('Snehadevi S', '632.3150684931506'), ('So Jung', '514.1732026143791'), ('So Ra', '572.2654545454545'), ('Sofia', '526.3535641547861'), ('Sofico', '1084.107142857143'), ('Sofie', '724.5'), ('Sofiya', '541.1570881226054'), ('Sofya', '640.8727272727273'), ('Sohyun', '1004.6666666666666'), ('Sonia', '1029.0980392156862'), ('Sonja', '885.0976744186047'), ('Sophia', '1221.3333333333333'), ('Sophie', '600.6881091617934'), ('Sorana', '213.75043630017453'), ('Sowjanya', '813.1357142857142'), ('Spurti', '1149.3125'), ('Sri Vaishnavi', '792.1927710843373'), ('Stamatia', '841.8387096774194'), ('Stanislava', '312.54158964879855'), ('Stefana', '993.4255319148937'), ('Stefani', '1167.3333333333333'), ('Stefania', '759.2894995093228'), ('Stefanie', '387.73412112259973'), ('Steffi', '939.746835443038'), ('Stephanie', '439.87772357723577'), ('Stephanie Mariel', '1035.5548387096774'), ('Storm', '573.6708333333333'), ('Su Jeong', '426.3886462882096'), ('Su Wei', '217.2493188010899'), ('Suellen', '911.7619047619048'), ('Sultan', '944.2432432432432'), ('Sun Jung', '812.4581005586592'), ('Sunae', '1229.8'), ('Sunam', '611.0757575757576'), ('Sung Hee', '635.7449168207024'), ('Susan', '1015.6792452830189'), ('Susanne', '417.8053097345133'), ('Suzan', '982.7222222222222'), ('Suzuho', '980.6666666666666'), ('Suzy', '698.7567567567568'), ('Svenja', '844.203007518797'), ('Svetlana', '267.03227571115974'), ('Sviatlana', '691.9934640522875'), ('Sybille', '1002.6792452830189'), ('Sylvia', '869.1702127659574'), ('Sylwia', '787.7645348837209'), ('Syna', '791.1240506329113'), ('Szabina', '772.3186813186813'), ('Tadeja', '343.0985324947589'), ('Taisiya', '969.6588235294117'), ('Talya', '1230.2'), ('Tamachan', '949.8059701492538'), ('Tamar', '1118.4166666666667'), ('Tamara', '614.0434782608696'), ('Tamari', '1146.3934426229507'), ('Tamarine', '121.82273948075202'), ('Tamaryn', '386.7025316455696'), ('Tamira', '135.88910505836577'), ('Tammi', '601.906914893617'), ('Tanaporn', '1113.2325581395348'), ('Tanya', '1023.089430894309'), ('Tara', '475.2979683972912'), ('Tatia', '1075.0'), ('Tatiana', '681.9417582417583'), ('Tatjana', '247.7449768160742'), ('Tatsiana', '912.1077844311377'), ('Tayisiya', '747.3172413793103'), ('Taylor', '387.5662100456621'), ('Tea', '1068.7457627118645'), ('Teliana', '461.06702898550725'), ('Tena', '614.9346733668342'), ('Teodora', '489.27513227513225'), ('Tereza', '557.241418764302'), ('Terri', '963.5'), ('Tess', '696.2878787878788'), ('Tessah', '390.2361111111111'), ('Tetiana', '437.4119658119658'), ('Tetyana', '398.83478260869566'), ('Thai Sa Grana', '802.7222222222222'), ('Theo', '650.1206896551724'), ('Theresa', '1159.5632183908046'), ('Tijana', '1017.7777777777778'), ('Timea', '182.02426160337552'), ('Tina', '425.82394366197184'), ('Tinatin', '810.6666666666666'), ('Ting Fei', '739.7727272727273'), ('Ting Jr', '789.6113989637306'), ('Tingting', '1015.2352941176471'), ('Tjasa', '743.1953125'), ('Tomoko', '838.8065217391304'), ('Tori', '841.7167381974249'), ('Tornado Alicia', '878.1666666666666'), ('Trang', '1029.3196721311476'), ('Treta', '1009.8666666666667'), ('Tsvetana', '131.02074074074073'), ('Tyra', '992.4870588235294'), ('Ulrikke', '506.39344262295083'), ('Ulyana', '844.0692307692308'), ('Urszula', '229.35687022900763'), ('Ushna', '1132.4109589041095'), ('Usue Maitane', '411.5068493150685'), ('Valentina', '921.3333333333334'), ('Valentine', '751.2668918918919'), ('Valentini', '479.8914728682171'), ('Valentyna', '368.14331210191085'), ('Valeria', '661.8474576271186'), ('Valerie', '806.2648401826484'), ('Valeriya', '799.8668224299065'), ('Vanda', '696.4126984126984'), ('Vanesa', '579.437984496124'), ('Vanessa', '398.3106546854942'), ('Vania', '185.75'), ('Vaniya', '1130.6037735849056'), ('Vanja', '1089.7111111111112'), ('Varatchaya', '450.4642082429501'), ('Varunya', '894.3846153846154'), ('Varvara', '382.6888217522659'), ('Vasilisa', '613.5330490405117'), ('Vaszilisza', '859.8103448275862'), ('Vendula', '729.0117647058823'), ('Venus', '32.984862819299906'), ('Vera', '195.66923570969814'), ('Verena', '958.1327800829876'), ('Veronica', '726.1852387843704'), ('Veronica M', '951.0075757575758'), ('Veronika', '734.6018957345972'), ('Vesna', '240.0448979591837'), ('Vicky', '1252.9130434782608'), ('Victoire', '1138.8490566037735'), ('Victoria', '444.9760935910478'), ('Victoria Ariadna', '1236.0'), ('Viktoria', '566.9148936170212'), ('Viktoriia', '1236.5333333333333'), ('Viktorija', '507.4'), ('Viktoriya', '736.2288557213931'), ('Viktoryia', '966.4671052631579'), ('Vilma Y', '1243.0'), ('Vincenza', '1214.1142857142856'), ('Vinciane', '1150.0'), ('Violetta', '1170.840579710145'), ('Virginie', '355.88102893890675'), ('Vishesh', '1208.952380952381'), ('Vita', '1201.25'), ('Vitalia', '296.2025641025641'), ('Vivian', '670.9108527131783'), ('Vivien', '607.2810218978102'), ('Vivienne', '659.2103004291846'), ('Vlada', '595.3291666666667'), ('Vladica', '943.5432098765432'), ('Vladimira', '823.8770833333333'), ('Vladislava', '1006.1769911504425'), ('Vladyslava', '856.0782608695653'), ('Vojislava', '555.6572164948453'), ('Voni', '999.0215053763441'), ('Wan Ting', '701.4009009009009'), ('Wan Yi', '1081.142857142857'), ('Warona', '1249.3333333333333'), ('Wen Hsin', '440.35214446952597'), ('Wen Ling', '1117.55'), ('Wendy Qi Wen', '1011.469696969697'), ('Weronika Jasmina', '1152.7837837837837'), ('Whitney', '886.1407407407407'), ('Wiktoria', '1083.1454545454546'), ('Wing Yau Venise', '585.2589641434263'), ('Wushuang', '937.7878787878788'), ('Xenia', '661.2222222222222'), ('Xi Yao', '714.8653846153846'), ('Xiao', '814.4171122994652'), ('Xiaodi', '467.24657534246575'), ('Xiaorong', '848.4418604651163'), ('Xiaoxi', '737.7547169811321'), ('Ximena', '712.2780373831775'), ('Xin', '694.4808743169399'), ('Xin Yu', '1022.3333333333334'), ('Xinyu', '480.646017699115'), ('Xinyun', '309.35767790262173'), ('Xiyu', '954.6'), ('Xu Liu', '488.7671232876712'), ('Ya', '1225.75'), ('Ya Hsuan', '586.865'), ('Yafan', '325.6162790697674'), ('Yan', '768.560975609756'), ('Yana', '740.0214504596527'), ('Yang', '1177.8823529411766'), ('Yanina', '381.2581602373887'), ('Yanni', '1059.2702702702702'), ('Yarden', '1166.875'), ('Yaroslava', '211.41240310077518'), ('Yasmin', '702.1784386617101'), ('Yasmina', '1227.7777777777778'), ('Yasmine', '983.0410958904109'), ('Yasmyn', '1261.8181818181818'), ('Yawna', '1110.4594594594594'), ('Yayuk', '114.78806907378336'), ('Ye Ra', '431.3144424131627'), ('Ye Xin', '1048.081081081081'), ('Yekaterina', '1155.8191489361702'), ('Yelena', '897.4873949579832'), ('Yeong Won', '973.8617021276596'), ('Yevgeniya', '724.8712871287129'), ('Yi', '791.0756207674943'), ('Yi Fan', '381.5512572533849'), ('Yi Jing', '656.8787276341948'), ('Yi Miao', '418.2566137566138'), ('Yidi', '1185.030303030303'), ('Yihong', '1209.625'), ('Yijia', '1063.9411764705883'), ('Ying', '661.3972602739726'), ('Ying Ying', '403.8775981524249'), ('Yixuan', '801.6712328767123'), ('Ylena', '892.3561643835617'), ('Ylona Georgiana', '642.9487179487179'), ('Yoko', '1128.901098901099'), ('Yolande', '1068.4619883040937'), ('Yoo Ri', '1263.7666666666667'), ('Yoon Young', '844.9310344827586'), ('Yoshimi', '1096.9130434782608'), ('Yosr', '1222.24'), ('You Na', '1170.3461538461538'), ('Ysaline', '458.86633663366337'), ('Yu Jin', '1098.357142857143'), ('Yu Tong', '1239.6666666666667'), ('Yuan', '1054.0'), ('Yuanyi', '891.2340425531914'), ('Yue', '983.359649122807'), ('Yue Yue', '444.96190476190475'), ('Yuenu', '961.876923076923'), ('Yujia', '1034.1304347826087'), ('Yuka', '748.8250591016548'), ('Yukako', '1071.5833333333333'), ('Yuki', '876.7428571428571'), ('Yuki Kristina', '698.8285714285714'), ('Yukina', '857.1692307692308'), ('Yukun', '824.3936170212766'), ('Yulia', '485.35135135135135'), ('Yuliana', '725.5322195704057'), ('Yuliya', '384.87776983559684'), ('Yumi', '799.1332586786115'), ('Yung Jan', '166.6586270871985'), ('Yuqi', '1047.3529411764705'), ('Yurika', '322.17758620689654'), ('Yuriko', '1041.5367231638418'), ('Yurina', '746.4803493449782'), ('Yuuki', '608.1309090909091'), ('Yuval', '1230.2'), ('Yuxuan', '545.449074074074'), ('Yvonne', '318.2867132867133'), ('Zaineb', '1227.344827586207'), ('Zalina', '867.5288461538462'), ('Zarah', '709.625'), ('Zarina', '222.81428571428572'), ('Zeel', '791.2352941176471'), ('Zeynep  Sena', '1229.5714285714287'), ('Zhanlan', '627.7777777777778'), ('Zhaoxuan', '629.0081967213115'), ('Zhibek', '1058.0'), ('Zhima', '1144.45'), ('Zhou', '1237.9'), ('Zhuoma', '989.75'), ('Zi', '391.4656290531777'), ('Zinovia', '1221.5'), ('Ziyue', '878.4606741573034'), ('Zoe', '765.3777777777777'), ('Zoe Gwen', '935.081081081081'), ('Zsofia', '916.559633027523'), ('Zuzana', '451.92875448487956'), ('Zuzanna', '794.5416666666666')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM main.players p JOIN main.rankings r ON p.player_id = r.player_id GROUP BY p.first_name ORDER BY total_ranking_points DESC;","Not match: [('0', 'Damilola'), ('100', 'Jiatian'), ('1000', 'Gaelle'), ('1002', 'Corina'), ('1002', 'Jenny'), ('1003', 'Karis'), ('1005319', 'Ekaterina'), ('100848', 'Ivana'), ('10087', 'Vanda'), ('101', 'Anca'), ('101', 'Merel'), ('10107', 'Kazusa'), ('1011058', 'Flavia'), ('1013', 'Luca'), ('10133', 'Ingrid Esperanza'), ('1016', 'Peggy'), ('10167', 'Lou'), ('1017069', 'Anna'), ('10178', 'Marianna'), ('101816', 'Yurika'), ('10191', 'Hilda'), ('102', 'Man Ying Maggie'), ('102', 'Mary Ann'), ('102022', 'Kyra'), ('102140', 'Shelby'), ('102260', 'Corinna'), ('1026', 'Marisa'), ('102623', 'Gabriela'), ('102693', 'Mervana'), ('103', 'Elaine'), ('10322', 'Iva'), ('1034', 'Cynthia'), ('1034', 'Sai Samhitha'), ('1036', 'Voni'), ('10360', 'Sina'), ('103659', 'Magda'), ('1039', 'Helen'), ('105', 'Shou Na'), ('105', 'Vincenza'), ('1050', 'Taisiya'), ('10507', 'Albina'), ('10539', 'Sofie'), ('1054', 'Suzy'), ('106', 'Victoria Ariadna'), ('10616', 'Amy'), ('1063', 'Hongrui'), ('10630', 'Tori'), ('106375', 'Maria Teresa'), ('106520', 'Giulia'), ('1067', 'Maja'), ('106762', 'Claudine'), ('106927', 'Vitalia'), ('107', 'Adrienn'), ('107', 'Mila'), ('10705', 'Xinyu'), ('10751', 'Ai'), ('107595', 'Ying Ying'), ('1077', 'Carmen Raluca'), ('107880', 'Anna Karolina'), ('108', 'Sohyun'), ('1082', 'Nora'), ('1083', 'Astra'), ('10859', 'Pia'), ('10865', 'Fatima'), ('109', 'Dorien'), ('1090', 'Marianne'), ('109192', 'Martina'), ('1092', 'Jordana'), ('109256', 'Xinyun'), ('1093', 'Gabrielle Faith'), ('10947', 'Jan'), ('1096', 'Oana'), ('1098', 'Mia Nicole'), ('110', 'Agne'), ('110290', 'Zi'), ('1103', 'Elizabeth Anita Alexandria'), ('1103', 'Robyn'), ('11032', 'Benedetta'), ('1108372', 'Lucie'), ('111', 'Caroline B'), ('111', 'Rosa'), ('111', 'Shangqing'), ('1119', 'Brittany'), ('11201', 'Sviatlana'), ('11216', 'Eduarda'), ('11218', 'Ema'), ('11251', 'Yasmin'), ('112562', 'Katalin'), ('112570', 'Teliana'), ('11260', 'Fanny'), ('11320', 'Maiko'), ('1132514', 'Angelique'), ('113359', 'Saisai'), ('11393', 'Alina'), ('114', 'June'), ('114098', 'Donna'), ('114104', 'Monique'), ('1142', 'Ilka'), ('114687', 'Marie Eve'), ('1149', 'Simone'), ('115', 'Nina Isabella'), ('1152', 'Bhuvana'), ('115293', 'Abigail'), ('11569', 'Georgina'), ('11572', 'Katy'), ('11596', 'Anja'), ('116', 'Clara'), ('11608', 'Arabela'), ('11623', 'Lizette'), ('1165205', 'Daniela'), ('11653', 'Wan Ting'), ('116548', 'Ajla'), ('116857', 'Qiang'), ('11694', 'Wing Yau Venise'), ('117', 'Doga Selen'), ('117', 'Shir'), ('11714', 'Camilla'), ('11721', 'Azra'), ('117472', 'Masa'), ('1176', 'Kaja'), ('117825', 'Sharon'), ('118', 'Huijie'), ('1180', 'Miriana'), ('1187', 'Ludmilla'), ('11873', 'Akari'), ('1188', 'Patcharin'), ('1192', 'Demi'), ('119279', 'Diana'), ('11954', 'Cecilia'), ('119756', 'Olivia'), ('119797', 'Cagla'), ('12', 'Anastasiia'), ('12', 'Brienne'), ('12', 'Damini'), ('12', 'Maia A'), ('12', 'Mouna'), ('120', 'Abiodun'), ('120', 'Hsin Yuan'), ('120', 'Wen Ling'), ('120995', 'Natalie'), ('121', 'Zhuoma'), ('1213', 'Bianka'), ('1214', 'Pranjala'), ('122', 'Hikari'), ('1222', 'Hye Min'), ('122331', 'Regina'), ('1225', 'Erina'), ('1225', 'Ioana'), ('1227', 'Claudia Antonia'), ('1229', 'Tanya'), ('12295', 'Robin'), ('123', 'Boba'), ('12304', 'Clothilde'), ('123243', 'Zarina'), ('1235', 'Anastasia Evgenyevna'), ('1235', 'Maia'), ('1236', 'Costanza'), ('1236', 'Kylie'), ('12379', 'Macall'), ('12388', 'Kim Alice'), ('1240', 'Monika'), ('12402', 'Tena'), ('12474', 'Yuka'), ('1247887', 'Elena'), ('12519', 'Chun Mei'), ('12525', 'Janina'), ('1254', 'Vladislava'), ('12554', 'Elyne'), ('1258', 'Emiliana'), ('1259', 'Yue'), ('126', 'Apichaya'), ('126', 'Stefani'), ('1261', 'Dabin'), ('12633', 'Indire'), ('126811', 'Estrella'), ('12693', 'Yurina'), ('1270', 'Sarah Beth'), ('12708', 'Aminat'), ('1272285', 'Marion'), ('12727', 'Andreea Roxana'), ('12728', 'Emelyn'), ('1277', 'Sang Hee'), ('128', 'Livia'), ('128183', 'Junri'), ('12829', 'Alexia'), ('128509', 'Yayuk'), ('1289', 'Tatsiana'), ('129', 'Colomba'), ('129', 'Juliana Rocha'), ('12906', 'Kamila'), ('1297', 'Gloria'), ('13', 'Giorgie'), ('13006', 'Poojashree'), ('13010', 'Ivonne'), ('13037', 'Marcella'), ('13041', 'Vivien'), ('1306087', 'Francesca'), ('13064', 'Sarah Rebecca'), ('1312', 'Seone'), ('13141', 'Chinami'), ('13241', 'Nathaly'), ('13254', 'Megan'), ('1333', 'Nozomi'), ('13389', 'Alexis'), ('1339', 'Marrit'), ('134', 'Dewi'), ('134', 'Nonna'), ('134', 'Sneha'), ('1344', 'Brynn'), ('135', 'Lizaveta'), ('1352', 'Xiaoxi'), ('1358', 'Ineke'), ('1358928', 'Na'), ('136', 'Camila Vital'), ('136', 'Yidi'), ('1363', 'Shao Yuan'), ('13643', 'Angelica'), ('1365', 'Andreea Amalia'), ('1367', 'Ana Victoria'), ('13686', 'Natalija'), ('13697', 'Kayla'), ('13717', 'Agnese'), ('137327', 'Belinda'), ('1375', 'Jaeda'), ('13761', 'Ellen'), ('138', 'Maurien'), ('1380', 'Yixuan'), ('1381', 'Yolande'), ('13843', 'Irina Maria'), ('138782', 'Alexa'), ('1388', 'Maria Paulina'), ('1397', 'Stephanie Mariel'), ('13978', 'Jil Belen'), ('1401', 'Rita'), ('140108', 'Aiko'), ('1401125', 'Nadia'), ('141', 'Ah'), ('141', 'Assia'), ('141', 'Deeon'), ('14123', 'Milana'), ('141257', 'Maria Fernanda'), ('141257', 'Rika'), ('141281', 'Kathrin'), ('14129', 'Makoto'), ('1417', 'Da Hye'), ('141876', 'Claire'), ('142', 'Jasmine Amber'), ('142', 'Nelise'), ('142', 'Shelly'), ('1420', 'Ziyue'), ('14212', 'Natasa'), ('14213', 'Carol'), ('1424', 'Alba'), ('142454', 'Lindsay'), ('1427', 'Anna Maria'), ('14277', 'Guadalupe'), ('143', 'Gebriela'), ('143', 'Se Hyun'), ('1433335', 'Anastasia'), ('143422', 'Janette'), ('1437656', 'Samantha'), ('144', 'Seira'), ('1440', 'Emilie'), ('1445', 'Xi Yao'), ('1446', 'Julyette Maria Josephine'), ('1446', 'Panna'), ('1453', 'Ylona Georgiana'), ('14578', 'Xenia'), ('1458', 'Miriam Bianca'), ('14608', 'Manon'), ('1465', 'Boyan'), ('1469', 'Seda'), ('147', 'Madeline'), ('147', 'Paige Mary'), ('14709', 'Ran'), ('148', 'Maria Camila'), ('148', 'Sarai Delfina'), ('148', 'Schena'), ('1483', 'Shu Ying'), ('14838', 'Aki'), ('1484', 'Andreea'), ('14865', 'Jasmine'), ('148701', 'Raluca'), ('148728', 'Kristyna'), ('149', 'Dina'), ('14942', 'Lena Marie'), ('15', 'Chaoyi'), ('15', 'Jiakang'), ('15', 'Jin'), ('15', 'Joanne'), ('15', 'Luna'), ('15', 'Mananchaya'), ('15', 'Mihaela Lorena'), ('15', 'Moulika'), ('15', 'Sunae'), ('150', 'Dajana'), ('15001', 'Chantal'), ('1501', 'Zsofia'), ('15071', 'Yuuki'), ('151', 'Tingting'), ('15102', 'Kinnie'), ('15190', 'Chloe'), ('15198', 'Valentini'), ('152', 'Leah'), ('15218', 'Caitlin'), ('15248', 'Yuliana'), ('1527', 'Ilze'), ('153', 'Martha'), ('1535', 'Nagi'), ('1536', 'Kana'), ('15365', 'Natasha'), ('154', 'Arlinda'), ('154', 'Mahak'), ('15401', 'Chihiro'), ('1544', 'Sultan'), ('154484', 'Mariya'), ('154599', 'Jessica'), ('1546', 'Ylena'), ('155', 'Alory Regina Elorriaga'), ('155143', 'Yulia'), ('1553', 'Jiahui'), ('1558', 'Noel'), ('156', 'Afroditi'), ('156', 'Maria Lourdes'), ('156531', 'Julie'), ('157', 'Amira'), ('157', 'Francisca'), ('1578', 'Alejandra'), ('158', 'Agustina Elena'), ('1583', 'Lisa Marie'), ('1589', 'Lucrezia'), ('1589674', 'Ana'), ('159', 'Amrita'), ('159', 'Andrina'), ('159', 'Spurti'), ('159155', 'Valeria'), ('15935', 'Dalma'), ('15955', 'Ana Sofia'), ('15970', 'Kathinka'), ('160', 'Anda'), ('160', 'Dagmara'), ('160164', 'Michelle'), ('1607', 'Daneika'), ('1609', 'Emmanuelle'), ('160945', 'Katerina'), ('161', 'Ramya'), ('1614', 'Domenica'), ('162', 'Muge'), ('1622', 'Clemence'), ('1624', 'Marlies'), ('1626', 'Mira'), ('1626', 'Sylvia'), ('16276', 'Susanne'), ('163', 'Mafalda'), ('16303', 'Natela'), ('163036', 'Darya'), ('163239', 'Naomi'), ('1633', 'Louise'), ('164', 'Donika'), ('164900', 'Lenka'), ('16494', 'Nanuli'), ('165013', 'Rebecca'), ('165477', 'Erika'), ('1657', 'Anette'), ('16621', 'Valeriya'), ('16663', 'Daniella'), ('166760', 'Brenda'), ('167', 'Farah'), ('1671', 'Luisa'), ('1676', 'Imane Maelle'), ('1678', 'Veronica M'), ('1679', 'Hayley'), ('16790', 'Marcela'), ('168', 'Denise Antonela'), ('168', 'Rebeca'), ('16886', 'Rocio'), ('169', 'Lidia'), ('169', 'Selin'), ('169371', 'Annika'), ('169500', 'Vesna'), ('1696', 'Li'), ('170', 'Nevena'), ('17020', 'Romana Caroline'), ('170617', 'Daria'), ('17078', 'Ya Hsuan'), ('171', 'Melissa Ishuan'), ('17185', 'Lucia'), ('172', 'Annie'), ('172004', 'Kai Chen'), ('172431', 'Paula'), ('1726', 'Chiraz'), ('1728', 'Yuriko'), ('173', 'Leslie'), ('17382', 'Indy'), ('1744', 'Sri Vaishnavi'), ('1748', 'Yasmine'), ('17514', 'Patrycja'), ('17577', 'Krista'), ('17587', 'Fernanda'), ('17597', 'Danica'), ('176', 'Mi Jeong'), ('177170', 'Kurumi'), ('177458', 'Lara'), ('178', 'Sarvinoz'), ('17819', 'Jesika'), ('1788', 'Mayar'), ('179', 'Weronika Jasmina'), ('1795', 'Noelle'), ('17967', 'Anhelina'), ('17975', 'Sanaz'), ('18', 'Constanze'), ('18', 'Gulchekhra'), ('18', 'Jamilya'), ('18', 'Shiori'), ('18', 'Terri'), ('180', 'Miranda'), ('1801033', 'Agnieszka'), ('181', 'Pei Ju'), ('182', 'Yoo Ri'), ('18210', 'So Ra'), ('18211', 'Elixane'), ('18219', 'Fiona'), ('1822', 'Luisa Marie'), ('1828', 'Yukun'), ('18286', 'Marketa'), ('1832', 'Petia'), ('18371', 'Sofiya'), ('184', 'Yujia'), ('1848', 'Georgia Andreea'), ('185', 'Maria Agustina'), ('1856', 'Yelena'), ('1858', 'Mi Rae'), ('1864', 'Tornado Alicia'), ('187', 'Chantelle'), ('187', 'Xin Yu'), ('1873', 'Haruna'), ('18781', 'Vojislava'), ('18824', 'Celine'), ('1884', 'Min'), ('1884', 'Trang'), ('1892', 'Maria Constanza De Las Mercedes'), ('1894', 'Katherine Gabriela'), ('1899', 'Kristy'), ('1901', 'Agata'), ('19048', 'Angelina'), ('19065', 'Despina'), ('1906587', 'Svetlana'), ('19092', 'Bernarda'), ('190997', 'Jamie'), ('191', 'Alexandria'), ('1917', 'Magali'), ('19173', 'Mai'), ('1920', 'Beatriz Maria'), ('19223', 'Na Ri'), ('192296', 'Severine'), ('1923', 'Dasha'), ('1929137', 'Vera'), ('193362', 'Tereza'), ('1936', 'Karine'), ('193767', 'Mandy'), ('19446', 'Aryna'), ('1945', 'Napatsakorn'), ('19495', 'Ximena'), ('195', 'Saana'), ('1955', 'Joana'), ('1958404', 'Petra'), ('1960', 'Lilla'), ('1962', 'Anaeve'), ('1977', 'Mirabelle'), ('1978', 'Eden'), ('197904', 'Patricia'), ('198', 'Shakhnoza'), ('1987', 'Viktoryia'), ('1990', 'Amina'), ('1991', 'Jillian'), ('1997', 'Margarida'), ('19989', 'Yi'), ('2', 'Olawaseun'), ('200', 'Melissa'), ('201', 'Mihoki'), ('201173', 'Nina'), ('201258', 'Mariana'), ('20132', 'Chayenne'), ('20142', 'Kanae'), ('201856', 'Renata'), ('20196', 'Melis'), ('202', 'Aneta'), ('2020', 'Samira'), ('202172', 'Camila'), ('20236', 'Zhaoxuan'), ('2025', 'Noelia'), ('20269', 'Yumi'), ('202697', 'Casey'), ('202780', 'Heather'), ('2034', 'Qiu Yu'), ('20368', 'Elizabeth'), ('203782', 'Misaki'), ('204801', 'Eugenie'), ('20481', 'Marija'), ('2052', 'Zalina'), ('206', 'Almudena'), ('206', 'Mariia'), ('2061', 'Momoko'), ('2061', 'Saray'), ('206375', 'Yuliya'), ('206981', 'Evgeniya'), ('207', 'Lauryn'), ('2070', 'Manca'), ('2076949', 'Caroline'), ('208108', 'Sesil'), ('20869', 'Cory Ann'), ('209', 'Parris'), ('2094', 'Ivania'), ('20989', 'Eugeniya'), ('21', 'Ana Luisa'), ('21', 'Avgusta'), ('21', 'Betina'), ('21', 'Julia Mansano'), ('21', 'Zeynep  Sena'), ('210', 'Maud'), ('210101', 'Kveta'), ('21152', 'Storm'), ('21205', 'Miharu'), ('2122', 'Shakhlo'), ('21261', 'Fatma'), ('2127', 'Szabina'), ('2127', 'Tea'), ('2133', 'Macarena'), ('2133', 'Ornella'), ('21340', 'Piia'), ('21360', 'Yue Yue'), ('2141', 'Ana Paula'), ('214121', 'Kiki'), ('21417', 'Korina'), ('2142854', 'Victoria'), ('215', 'Deria'), ('21599', 'Ankita'), ('21624', 'Antonia'), ('2166', 'Zhanlan'), ('21685', 'Francoise'), ('21728', 'Agustina'), ('2177', 'Anita'), ('219', 'Adnya'), ('219', 'Agata Jadwiga'), ('219', 'Maureen'), ('2191', 'Yuki Kristina'), ('22', 'Caty'), ('22', 'Layne'), ('22', 'Nikita'), ('221', 'Inger'), ('2216', 'Liz Tatiane'), ('221695', 'Silvia'), ('2217', 'Ai Wen'), ('2221', 'Clelia'), ('2221', 'Vendula'), ('224', 'Hao Ching'), ('224', 'Nattawadee'), ('224', 'Sandy'), ('22443', 'Yi Jing'), ('2249', 'Theo'), ('225', 'May'), ('22578', 'Vlada'), ('2258', 'Zuzanna'), ('225987', 'Lesia'), ('226', 'Aimee'), ('226', 'Mariaryeni'), ('2266', 'Madrie'), ('2275', 'Sadafmoh'), ('228', 'Andjela'), ('228', 'Rafaela'), ('2280', 'Kajsa'), ('22840', 'Miyabi'), ('228538', 'Akgul'), ('2287', 'Eleanor'), ('229', 'Kanako'), ('229391', 'Yung Jan'), ('22977', 'Sherazad'), ('22978', 'Quirine'), ('230', 'Micaela'), ('230262', 'Tatjana'), ('23195', 'Riko'), ('2321', 'Ashvarya'), ('2338', 'Anamika'), ('23411', 'Liga'), ('235', 'Alessandra'), ('23564', 'Montserrat'), ('235721', 'Coco'), ('2358', 'Alice Andrada'), ('236', 'Shiran'), ('2362', 'Libby'), ('23620', 'Deniz'), ('23668', 'Maya'), ('2369', 'Aliona'), ('237', 'Kaylah'), ('2371', 'Ho Ching'), ('2378', 'Shanshan'), ('238', 'Aselya'), ('238', 'Gyulnara'), ('238803', 'Alberta'), ('23897', 'Lavinia'), ('23968', 'Miyu'), ('23976', 'Doroteja'), ('24', 'Christie'), ('24', 'Emilija'), ('24', 'Hollie'), ('24', 'Jaimy Gayle'), ('24', 'Pei Hsuan'), ('24', 'Rui'), ('24', 'Ya'), ('24', 'Yihong'), ('2400', 'Ulyana'), ('240195', 'Greta'), ('2403', 'Ioana Diana'), ('24062', 'Keren'), ('240762', 'Cara'), ('241', 'Pamela'), ('24184', 'Aranza'), ('242', 'You Na'), ('2421', 'Ana Bianca'), ('242619', 'Michaella'), ('24279', 'Yuxuan'), ('243', 'Pippa'), ('2433', 'Ainhoa'), ('2434', 'Maddison'), ('2438', 'Christine'), ('2446', 'Eetee'), ('244807', 'Lauren'), ('245', 'Angela'), ('245139', 'Mathilde'), ('24523', 'Nungnadda'), ('24542', 'Miki'), ('24569', 'Mi'), ('24595', 'Katharina'), ('247237', 'Stefanie'), ('2484', 'Giorgia'), ('2487', 'Britt'), ('2489', 'Malin'), ('24897', 'Stefania'), ('249', 'Kamilla'), ('249446', 'Edina'), ('250056', 'Catalina'), ('251', 'Naz'), ('2515436', 'Jelena'), ('25166', 'Constance'), ('25183', 'Alyona'), ('2524', 'Alessia'), ('2526', 'Natia'), ('253', 'Ivone'), ('2531', 'Nicky'), ('253320', 'Alla'), ('253471', 'Romina'), ('254491', 'Yvonne'), ('254520', 'Karin'), ('25496', 'Marie'), ('255', 'Larikah'), ('255', 'Vaniya'), ('2570', 'Vladyslava'), ('259', 'Nam Yeon'), ('259116', 'Nuria'), ('2592', 'Rachael'), ('26', 'Beauty'), ('26059', 'Kyung Mi'), ('26077', 'Tammi'), ('2609', 'Melina'), ('26185', 'Na Lae'), ('26209', 'Jade'), ('26226', 'Viktoriya'), ('26280', 'Peangtarn'), ('2634', 'Riya'), ('2641', 'Saska'), ('265', 'Alessondra'), ('26585', 'Chang'), ('2661', 'Nadja'), ('266197', 'Sandra'), ('2662', 'Liubov'), ('26624', 'Basak'), ('266251', 'Zuzana'), ('267679', 'Marta'), ('26779', 'Chen'), ('268277', 'Anastasija'), ('268372', 'Jana'), ('26897', 'Ekaterine'), ('269', 'Astrid Wanja'), ('269', 'Paula Andrea'), ('26950', 'Ilona'), ('27', 'Carlota'), ('27', 'Sabina Elena'), ('27', 'Sarlota'), ('27', 'Vilma Y'), ('27', 'Yasmina'), ('270102', 'Kimiko'), ('27011', 'Evelyn'), ('2706', 'Nives'), ('27061', 'Beatrice'), ('2710', 'Josepha'), ('27118', 'Ulrikke'), ('272', 'Kimika'), ('272', 'Mirjam'), ('272889', 'Sania'), ('2738', 'Dhruthi'), ('27452', 'Rushmi'), ('27462', 'Jacqueline'), ('274936', 'Su Wei'), ('275', 'Yanni'), ('275255', 'Urszula'), ('275364', 'Chanelle'), ('27580', 'Hiroko'), ('276', 'Chompoothip'), ('276', 'Sirui'), ('277', 'Chengyiyi'), ('2772', 'Zoe'), ('27804', 'Ysaline'), ('2782', 'Hanna'), ('279', 'Milena'), ('279', 'Nermeen'), ('27997', 'Lena'), ('28', 'Roosh'), ('280', 'Antonela'), ('28045', 'Adriana'), ('28098', 'Nathalia'), ('281', 'Laura D'), ('281', 'Ye Xin'), ('281', 'Yuan'), ('2820', 'Snehadevi S'), ('282445', 'Mona'), ('283166', 'Bojana'), ('284', 'Meritxell'), ('285', 'Yoko'), ('2850', 'Berfu'), ('286', 'Julita'), ('286', 'Lesedi Sheya'), ('2864', 'Gozal'), ('2875425', 'Venus'), ('2877', 'Zoe Gwen'), ('288', 'Ailen'), ('288', 'Ana Gabriela'), ('289', 'Carson'), ('289', 'Giovanna'), ('290', 'Ghislaine'), ('290299', 'Melinda'), ('291', 'Ivanka'), ('291', 'Vanja'), ('292', 'Ina'), ('29214', 'Romana'), ('2922', 'Brianna'), ('29250', 'Nastja'), ('2927', 'Mizuno'), ('2929', 'Agni'), ('293366', 'Irina Camelia'), ('2935', 'Giuliana'), ('294', 'Haine'), ('294', 'Kei'), ('294', 'Maria Jesus'), ('29442', 'Annalisa'), ('296', 'Maria Del Rosario'), ('2961', 'Sowjanya'), ('296736', 'Maria Elena'), ('298', 'Kseniia'), ('298', 'Violetta'), ('29852', 'Sung Hee'), ('299530', 'Vania'), ('299698', 'Irina'), ('3', 'Arina Gabriela'), ('3', 'Himari'), ('3', 'Judith'), ('3', 'Marijana'), ('3', 'Phenomena'), ('30', 'Brindtha'), ('30', 'Damira'), ('30', 'Lyann'), ('30', 'Zhou'), ('3002', 'Jiaxi'), ('30035', 'Katie'), ('30136', 'Ganna'), ('3018', 'Verena'), ('30191', 'Viktoria'), ('3029', 'Emina'), ('302957', 'Galina'), ('30304', 'Justyna'), ('304', 'Abbi'), ('304', 'Lulu'), ('304', 'Tamari'), ('30401', 'Raquel'), ('30669', 'Vanesa'), ('3073', 'Malou'), ('308', 'Katrine Isabel'), ('308', 'Rona'), ('3085', 'Steffi'), ('309', 'Mitsumi'), ('3094', 'Nan Nan'), ('30972', 'Nicha'), ('309990', 'Ayumi'), ('310215', 'Christina'), ('3112', 'Manisha'), ('312', 'Blanca'), ('3121', 'Dana'), ('3127', 'Karla'), ('313187', 'Pauline'), ('3133', 'Irene'), ('314747', 'Elina'), ('315', 'Xiyu'), ('316', 'Malene'), ('316', 'Sasa'), ('31620', 'Cindy'), ('3165', 'Ronit'), ('317', 'Cristina Madalina'), ('31741', 'Gioia'), ('3187', 'Bunyawi'), ('3193', 'Karman'), ('32', 'Moyuka'), ('32', 'Yarden'), ('320', 'Suellen'), ('3200', 'Kyle'), ('320083', 'Eva'), ('3208', 'Paulina'), ('32169', 'Karen'), ('322202', 'Tamira'), ('323', 'Malika'), ('323', 'Maria Andrea'), ('323527', 'Alison'), ('324', 'Kelia'), ('324', 'Suzuho'), ('32445', 'Mayo'), ('325216', 'Polona'), ('3255', 'Shweta'), ('32581', 'Claudia'), ('3298', 'Denise'), ('33', 'Anne Sophie'), ('33', 'Daphne'), ('33', 'Intissar'), ('33', 'Lorenza'), ('33', 'Marcelina'), ('33', 'Nataliya'), ('330', 'Karyn'), ('33054', 'Allie'), ('331434', 'Mirjana'), ('333', 'Tijana'), ('33301', 'Chia Jung'), ('333150', 'Jarmila'), ('33388', 'Fangzhou'), ('33550', 'Nicola'), ('336', 'Rosie'), ('336', 'Shuyue'), ('336', 'Sofico'), ('3361', 'Tjasa'), ('33624', 'Audrey'), ('33672', 'Su Jeong'), ('3374', 'Chun Yan'), ('338', 'Valentina'), ('33822', 'Laura Ioana'), ('34', 'Kate'), ('340', 'Melisa'), ('3426', 'Jeannine'), ('344', 'Suzan'), ('3445', 'Lu'), ('34453', 'Jasmin'), ('3453', 'Ju Eun'), ('34570', 'Eri'), ('34647', 'Kristie'), ('3466', 'Matilda'), ('3470', 'Borislava'), ('3471', 'Ingrid'), ('34795', 'Tatiana'), ('34796', 'Chieh Yu'), ('3497', 'Ola'), ('351', 'Belen'), ('352458', 'Sloane'), ('354', 'Desirae'), ('354', 'Sanae'), ('355', 'Jodie Anna'), ('358', 'Chisa'), ('359', 'Frances'), ('359013', 'Jill'), ('3592', 'Yoon Young'), ('359374', 'Anna Lena'), ('3594', 'Sunam'), ('35957', 'Aleksandrina'), ('36', 'Ange Oby'), ('36', 'Eugenia'), ('36', 'Justina'), ('3613355', 'Maria'), ('3621', 'Anouk'), ('3623', 'Varunya'), ('362372', 'Marina'), ('3627', 'Carolina Meligeni Rodrigues'), ('363', 'Katharine'), ('363', 'Oliwia'), ('363', 'Wiktoria'), ('3633', 'Haruka'), ('3642', 'Rutuja'), ('3657', 'Michika'), ('366', 'Yijia'), ('36696', 'Ana Clara'), ('36714', 'Vivian'), ('36889', 'Carolina'), ('369810', 'Alisa'), ('37', 'Vinciane'), ('371035', 'Lourdes'), ('371140', 'Ksenia'), ('3714', 'Paula Catalina'), ('371662', 'Bethanie'), ('3724', 'Kanami'), ('37384', 'Paula Cristina'), ('3748', 'Khristina'), ('376', 'Estela'), ('376', 'Yekaterina'), ('3763', 'Vaszilisza'), ('377', 'Lusine'), ('377', 'Theresa'), ('37817', 'Kai Lin'), ('3783', 'Ying'), ('37981', 'Natsumi'), ('38', 'Cameron'), ('38086', 'Mari'), ('3809', 'Zarah'), ('3811', 'Olesya'), ('38116', 'Remi'), ('382', 'Oyku'), ('3825', 'Miriam'), ('383077', 'Kirsten'), ('383495', 'Aravane'), ('385', 'Alana'), ('38501', 'Ayu Fani'), ('385636', 'Melanie'), ('38651', 'Gail'), ('38793', 'Roxane'), ('3880', 'Emi'), ('38850', 'Taylor'), ('3894', 'Bernice'), ('39', 'Arthi'), ('39', 'Chanikarn'), ('39', 'Gulnaz'), ('39', 'Laylo'), ('390', 'Maxine'), ('390148', 'Agnes'), ('3905', 'Kaitlyn'), ('3908', 'Ester'), ('39102', 'Yana'), ('392', 'Draginja'), ('39270', 'Jovana'), ('3928', 'Helene'), ('39307', 'Sophie'), ('39352', 'Ipek'), ('39418', 'Justine'), ('3942', 'Despoina'), ('395', 'Iana'), ('395', 'Mahitha'), ('39523', 'Mailen'), ('39687', 'Yafan'), ('39782', 'Liezel'), ('39960', 'Shiho'), ('39989', 'Estelle'), ('4', 'Mariona'), ('40', 'Johana'), ('40', 'Lorraine M'), ('40', 'Mei Xu'), ('40', 'Olaya'), ('40', 'Ralina'), ('40060', 'Tamaryn'), ('401409', 'Varvara'), ('401857', 'Magdalena'), ('403', 'Kwan Yau'), ('403127', 'Paola'), ('40341', 'Lin'), ('40410', 'Ines'), ('404915', 'Yaroslava'), ('405', 'Eleonora'), ('4052', 'Alona'), ('4053', 'Cornelia'), ('406', 'Inci'), ('4060', 'Mariam'), ('40633', 'Wen Hsin'), ('407', 'Megumi'), ('40823', 'Danielle'), ('4093', 'Julieta Lara'), ('41', 'Eva Marie'), ('410', 'Gulben'), ('410', 'Karina Kristina'), ('410', 'Kelsey'), ('4106', 'Sharmada'), ('4122', 'Jessika'), ('4128', 'Pavla'), ('412872', 'Garbine'), ('413', 'Hana'), ('413', 'Ushna'), ('413759', 'Maria Jose'), ('414', 'Jin Ju'), ('414', 'Juliana'), ('41575', 'Amandine'), ('416', 'Kaitlin'), ('417', 'Meiling'), ('41792', 'Teodora'), ('41925', 'Darija'), ('4196', 'Yan'), ('4197', 'Lea'), ('42', 'Milagros'), ('42', 'Tatia'), ('42', 'Wan Yi'), ('4216', 'Linda'), ('4232828', 'Serena'), ('42527', 'Vasilisa'), ('4258', 'Raluca Georgiana'), ('42676', 'Sachie'), ('427', 'Mihika'), ('42773', 'Chiaki'), ('42925', 'Lesley'), ('4294', 'Oana Georgeta'), ('43', 'Emilia'), ('43020', 'Tetyana'), ('4314', 'Marine'), ('434692', 'Arantxa'), ('435038', 'Kateryna'), ('43550', 'Myrtille'), ('4356', 'Charlotte'), ('4368', 'Hirono'), ('43755', 'Patricia Maria'), ('43779', 'Elise'), ('4380', 'Naiktha'), ('43862', 'Jasmina'), ('439179', 'Eleni'), ('44', 'Federica Joe'), ('440', 'Genevieve'), ('440', 'Naima'), ('443', 'Ramu'), ('443695', 'Iveta'), ('444303', 'Katarina'), ('44497', 'Mallory'), ('447434', 'Nicole'), ('4499', 'Sonja'), ('45', 'Idia'), ('45', 'Talya'), ('45', 'Yuval'), ('45115', 'Leticia'), ('451414', 'Aleksandra'), ('452', 'Yu Jin'), ('4535', 'Xu Liu'), ('454', 'Victoire'), ('4543', 'Tyra'), ('455', 'Dominique'), ('456', 'Lamis'), ('456422', 'Tsvetana'), ('457043', 'Sorana'), ('4580', 'Kim'), ('45884', 'Catherine Cartan'), ('461', 'Sarahi'), ('4611', 'Shivika'), ('4612', 'Jia Qi'), ('46124', 'Shuko'), ('4619', 'Adrijana'), ('462', 'Kirsten Andrea'), ('46355', 'Jin A'), ('464', 'Andrea Renee'), ('464', 'Jara'), ('464', 'Sari'), ('4643', 'Hanyu'), ('465', 'Karolayne'), ('467', 'Ida'), ('467', 'Kady'), ('467', 'Simran Kaur'), ('468', 'Gabriela Nicole'), ('469', 'Rachel'), ('46908', 'Anais'), ('4703', 'Dunja'), ('4705', 'Kelly'), ('4709', 'Elisabeth'), ('472', 'Erica'), ('472', 'Joanna'), ('47282', 'So Jung'), ('4743', 'Iris'), ('476', 'Tinatin'), ('47651', 'Nigina'), ('4766', 'Ingrid Alexandra'), ('476768', 'Madison'), ('4777', 'Isabelle'), ('47854', 'Valentyna'), ('47867', 'Ye Ra'), ('4787', 'Margot'), ('4789', 'Xiao'), ('48', 'Georgiana'), ('48', 'Leylah Annie'), ('48', 'Mercedes'), ('480', 'Anushka'), ('480', 'Eliza'), ('480', 'Sonia'), ('4809', 'Klaudia'), ('48117', 'Jia Jing'), ('4831', 'Kimberly'), ('484', 'Antonina'), ('484', 'Olena'), ('484140', 'Sofia'), ('48788', 'Asia'), ('48811', 'Ani'), ('48857', 'Dalila'), ('49', 'Ronke'), ('490', 'Adeliya'), ('491', 'Nikol'), ('49122', 'Chi Chi'), ('4914', 'Chalena'), ('49207', 'Anna Giulia'), ('4941', 'Ao'), ('49412', 'Stanislava'), ('4962', 'Kotomi'), ('497', 'Stefana'), ('49767', 'Sachia'), ('49784', 'Sabina'), ('4980', 'Josephine'), ('4987', 'Catherine'), ('49980', 'Ashley'), ('5', 'Chelsea'), ('50', 'Ege'), ('500', 'Lindsey'), ('5007', 'Jaimee'), ('50184', 'Bibiane'), ('502', 'Susan'), ('5027', 'Nadezda'), ('505', 'Yuki'), ('5051', 'Tayisiya'), ('5057', 'Xiaodi'), ('50700', 'Louisa'), ('51', 'Andra Maria'), ('510', 'Priscila'), ('511', 'I Hsuan'), ('511', 'Magalie'), ('512490', 'Karolina'), ('515', 'Katya'), ('5155', 'Ashling'), ('515957', 'Barbora'), ('5173', 'Ayano'), ('51803', 'An Sophie'), ('519208', 'Virginie'), ('52', 'Ahsha'), ('52', 'En Pei'), ('52', 'Ilay'), ('52', 'Jia'), ('5214', 'Abbie'), ('5216', 'Alicja'), ('522', 'Libi'), ('522', 'Sharon Sanchana'), ('52274', 'Conny'), ('525', 'Maegan'), ('526', 'Ella'), ('5269', 'Anne Liz'), ('52889', 'Emily'), ('531', 'Si Qi'), ('53401', 'Barbara'), ('53480', 'Sally'), ('5356', 'Erin'), ('536', 'Elizabeta'), ('53610', 'Sheng Nan'), ('537', 'Busra'), ('5372', 'Ofri'), ('538', 'Clementina Eugenia'), ('5387', 'Raveena'), ('5393', 'Kimberley'), ('54', 'Anke'), ('54', 'Maftuna'), ('541', 'Emiliya'), ('54140', 'Tamara'), ('5416', 'Jaqueline Adina'), ('54172', 'Lyudmyla'), ('542', 'Meng Ning'), ('5422', 'Alix'), ('5425', 'Ioana Loredana'), ('5425', 'Nidhi'), ('543', 'Ivette'), ('54340', 'Varatchaya'), ('545', 'Danijela'), ('54798', 'Tara'), ('5493', 'Karina Ildor'), ('553107', 'Johanna'), ('555', 'Kristina N'), ('556', 'Rio'), ('5566', 'Ria'), ('559', 'Yuqi'), ('5592', 'Makiho'), ('55981', 'Misa'), ('5604', 'Whitney'), ('5619', 'Dayana'), ('562', 'Carlotta'), ('56212', 'Kumiko'), ('56242', 'Ons'), ('565', 'Molly'), ('56596', 'Nadiya'), ('567', 'Eleonore'), ('56817', 'Federica'), ('568191', 'Klara'), ('5683', 'Charlene'), ('56853', 'Oceane'), ('5687', 'Prarthana G'), ('571', 'Ayan'), ('574', 'Camille'), ('57585', 'Tina'), ('576', 'Guillermina'), ('57745', 'Alice'), ('578964', 'Laura'), ('5803', 'Rebeka'), ('581', 'Sybille'), ('5818', 'Klaartje'), ('58279', 'Oksana'), ('5866', 'Kamonwan'), ('587309', 'Monica'), ('58741', 'Ashleigh'), ('5880', 'Kelly S'), ('590911', 'Sabine'), ('59412', 'Cristina'), ('594217', 'Lisa'), ('594281', 'Tamarine'), ('5944', 'Harmony'), ('595', 'Laili'), ('596', 'Michele Alexandra'), ('59671', 'Nao'), ('596901', 'Alize'), ('597', 'Ryann'), ('597', 'Shuo'), ('59775', 'Evgenia'), ('59997', 'Liana Gabriela'), ('6', 'Loudmilla'), ('6', 'Madina'), ('6', 'Muazzez'), ('6', 'Shreya'), ('60', 'Tamar'), ('601693', 'Kristina'), ('602453', 'Yanina'), ('605', 'Andie K'), ('60646', 'Yi Fan'), ('60702', 'Amra'), ('6078', 'Laetitia'), ('608309', 'Stephanie'), ('60908', 'Pemra'), ('610820', 'Jie'), ('611', 'Jil Nora'), ('61196', 'Aliaksandra'), ('612072', 'Timea'), ('613', 'Wendy Qi Wen'), ('614', 'Nikki'), ('6146', 'Valerie'), ('6159', 'Chiara'), ('6168', 'Greetje'), ('6179', 'Gabriella'), ('61839', 'Yi Miao'), ('62', 'Ann'), ('62252', 'Risa'), ('625', 'Ksenija'), ('6256', 'Csilla'), ('625836', 'Kaia'), ('628', 'Jazzamay'), ('62861', 'Chanel'), ('6288', 'Yevgeniya'), ('62938', 'Madalina'), ('62977', 'Elizaveta'), ('63', 'Jule'), ('63', 'Milica'), ('63013', 'Nudnida'), ('6341', 'Svenja'), ('636', 'Elizaveta Anna'), ('6369', 'Dianne'), ('639', 'Dan Ni'), ('63998', 'Bianca'), ('64', 'Jada'), ('64', 'Reina'), ('64', 'Vita'), ('640', 'Akvile'), ('6404', 'Pilar'), ('641', 'Qianqian'), ('645', 'Ludmila'), ('64525', 'Ling'), ('646', 'Quinn'), ('6470', 'Vladimira'), ('647811', 'Anne'), ('648', 'Ashmitha'), ('648', 'Yawna'), ('649', 'Natella'), ('65', 'Emma Christine'), ('65152', 'Nastassja'), ('6525', 'Freya'), ('653', 'Kennedy'), ('653', 'Mary'), ('6542', 'Lucy'), ('6547', 'Elena Teodora'), ('65522', 'Denisa'), ('6564', 'Seo Kyung'), ('6573', 'Pernilla'), ('6591', 'Sun Jung'), ('66', 'Salma'), ('662', 'Blessing'), ('66271', 'Reka Luca'), ('662926', 'Shahar'), ('664', 'Phillis'), ('6650', 'Anna Arina'), ('6650', 'Seung Yeon'), ('667', 'Chi Fan'), ('6688', 'Isabel'), ('669546', 'Carla'), ('67017', 'Dinah'), ('672', 'Leonie'), ('67459', 'Carly'), ('676', 'Breaunna'), ('677', 'Angeliki'), ('677', 'Giada'), ('677', 'Yoshimi'), ('6777', 'Chelsey'), ('678793', 'Anabel'), ('679', 'Chia Hsien'), ('68', 'Aastha'), ('6809', 'Lidziya'), ('681', 'Se Jin'), ('6810', 'Sabrina'), ('682', 'Yuenu'), ('68207', 'Amanda'), ('683', 'Marcela Guimaraes'), ('683', 'Qianhui'), ('687', 'Guiomar'), ('688', 'Mallaurie'), ('688', 'Sinead'), ('68925', 'Jing Jing'), ('69', 'Esen'), ('6906', 'Morgane'), ('69242', 'Mihaela'), ('6948', 'Ionela Andreea'), ('697', 'Linnea'), ('699', 'Radina'), ('7', 'Axana'), ('7', 'Zhibek'), ('70', 'Savannah'), ('701', 'Komola'), ('702', 'Mara'), ('702', 'Zeel'), ('7027', 'Dea'), ('703', 'Aida'), ('704', 'Kassandra'), ('70504', 'Chin Wei'), ('706', 'Thai Sa Grana'), ('70613', 'Grace'), ('7062', 'Brooke'), ('709', 'Desiree'), ('71', 'Aldana'), ('71', 'Vishesh'), ('71', 'Yasmyn'), ('71072', 'Anett'), ('713', 'Ebony'), ('714', 'Isabela'), ('7147', 'Etsuko'), ('715', 'Madeleine'), ('716', 'Siqi'), ('71645', 'Vanessa'), ('7165', 'Tess'), ('717', 'Xiaorong'), ('7179', 'Ji Hee'), ('72', 'Abir'), ('72', 'Andressa Cristina'), ('72', 'Carolyn'), ('72', 'Janja'), ('72', 'Liniques'), ('72', 'Mi Zhuoma'), ('72', 'Nastassia'), ('724638', 'Simona'), ('725', 'Brandy'), ('72682', 'Maria Joao'), ('73', 'Yang'), ('73192', 'Veronika'), ('7323', 'Patty'), ('733', 'Lee'), ('7353', 'Dijana'), ('73589', 'Noppawan'), ('736', 'Treta'), ('7367', 'Hua Chen'), ('74', 'Iulia Maria'), ('74', 'Zinovia'), ('741', 'Rashmi'), ('742', 'Akilah'), ('7431', 'Tomoko'), ('744', 'Eveliina'), ('7444', 'Ayla'), ('74453', 'Andreja'), ('7486', 'Cristiana'), ('75', 'Beatriz Magdalena'), ('75', 'Sean'), ('75', 'Yosr'), ('750', 'Leolia'), ('75337', 'Tetiana'), ('75414', 'Cristina Andreea'), ('756', 'Magy'), ('75850', 'Anastasiya'), ('760', 'Nour'), ('7605', 'Deborah'), ('761', 'Jainy'), ('762', 'India'), ('764', 'Tanaporn'), ('76586', 'Michaela'), ('76747', 'Polina'), ('77', 'Vicky'), ('772', 'Yuanyi'), ('773929', 'Olga'), ('775', 'Guzal'), ('77519', 'Luksika'), ('7755', 'Fang Ying'), ('776', 'Karola Patricia'), ('7772', 'Elena Gabriela'), ('778', 'Marta Huqi'), ('7797', 'Hulya'), ('78', 'Ferny'), ('78', 'Hazal'), ('780', 'Sabastiani'), ('78204', 'Sacha'), ('78265', 'Margarita'), ('7843', 'Katherine'), ('78461', 'Sarah'), ('78513', 'Nikola'), ('7874', 'Usue Maitane'), ('7898', 'Lisa Maria'), ('791', 'Aymet'), ('79511', 'Viktorija'), ('7975', 'Ching Wen'), ('79958', 'Dia'), ('7996', 'Ayaka'), ('7998', 'Gaia'), ('7999', 'Gracia'), ('80', 'Fatyha'), ('801', 'Sherry'), ('802', 'Asiya'), ('803', 'Rosalia'), ('804', 'Josie'), ('8072', 'Stamatia'), ('8079', 'Ellie'), ('809611', 'Roberta'), ('811', 'Habiba'), ('81222', 'Jennifer'), ('814', 'Berta'), ('8145', 'Ting Fei'), ('8146', 'Nicoleta Catalina'), ('8174', 'Carmen'), ('8180', 'Hae Sung'), ('8203', 'Priscilla'), ('822', 'Jawairiah'), ('823', 'Ena'), ('8268', 'Sylwia'), ('8284', 'Lisanne'), ('83', 'Akiho'), ('83', 'Maileen'), ('8301', 'Hyun Hui'), ('8305', 'Luciana'), ('83476', 'Isabella'), ('836', 'Anhzelika'), ('83659', 'Tadeja'), ('837', 'Lynn'), ('84', 'Yukako'), ('8406', 'Kaori'), ('84184', 'Richel'), ('843', 'Tamachan'), ('8441', 'Bermet'), ('84446', 'Akiko'), ('8448', 'Rishika'), ('84543', 'Veronica'), ('85', 'Ahlam'), ('85', 'Dilara'), ('85', 'Kariann'), ('85022', 'Emma'), ('8507', 'Danielle Rose'), ('85425', 'Maryna'), ('857', 'Dariya'), ('857', 'Naoko'), ('8589', 'Daiana'), ('8592', 'Ji Young'), ('86', 'Ki Ryang'), ('8608', 'Harriet'), ('861', 'Janneke'), ('8676', 'Ting Jr'), ('87', 'Leticia Garcia'), ('87', 'Siyu'), ('87', 'Zaineb'), ('870', 'Hyojung'), ('8700', 'Oleksandra'), ('87263', 'Elitsa'), ('8744', 'Xin'), ('876', 'Lutfiye'), ('87844', 'Iryna'), ('879', 'Wushuang'), ('87958', 'Danka'), ('880', 'Rosalie'), ('882', 'Eliessa'), ('8832', 'Alena'), ('88369', 'Irena'), ('88542', 'Heidi'), ('887', 'Amelie'), ('8900', 'Pei Chi'), ('891796', 'Julia'), ('8918', 'Vivienne'), ('89361', 'Florencia'), ('8939', 'Dalia'), ('894', 'Keri'), ('898', 'Fatimah'), ('9', 'Adva'), ('9', 'Frederikke'), ('9', 'Rana'), ('9', 'Warona'), ('9', 'Yu Tong'), ('90', 'Elodie'), ('90', 'Michela'), ('90', 'Viktoriia'), ('9001', 'Syna'), ('9036', 'Kyoka'), ('90451', 'Carina'), ('905', 'Blair'), ('905', 'Margaux'), ('906', 'Satsuki'), ('9064', 'Mayya'), ('907', 'Anna Katalina'), ('907', 'Constanza'), ('908', 'Jazmin'), ('9093', 'Carolin'), ('910', 'Karoline'), ('911', 'Romy'), ('91117', 'Lina'), ('9116', 'Tessah'), ('9120', 'Nika'), ('913829', 'Shuai'), ('9147', 'Camelia Elena'), ('914981', 'Sara'), ('916', 'Iga'), ('9180', 'Sofya'), ('918746', 'Dominika'), ('919', 'Kanika'), ('92', 'Aina'), ('9202', 'Raluca Elena'), ('920433', 'Andrea'), ('9227', 'Destanee'), ('923', 'Jessy'), ('93', 'Manya'), ('9318', 'Prerna'), ('9338', 'Sakiko'), ('934', 'Claudia Gianina'), ('934', 'Plobrung'), ('9355', 'Karina'), ('93730', 'Katarzyna'), ('942', 'Kerstin'), ('95', 'Cecilie Lundgaard'), ('95', 'Sing Le'), ('9536', 'Neda'), ('955267', 'Alexandra'), ('957', 'Ratnika'), ('958', 'Cemre'), ('9593', 'Mana'), ('96', 'Aishwarya'), ('96', 'Jiaxue'), ('96', 'Mami'), ('96', 'Meiqi'), ('96', 'Minami'), ('96', 'Smriti'), ('96', 'Sophia'), ('960', 'Elke'), ('9600', 'Georgia'), ('9627', 'Nicolette'), ('9631', 'Hao Chen'), ('9634', 'Shilin'), ('964', 'Emily J'), ('966', 'Yeong Won'), ('96852', 'Arina'), ('97', 'Katyarina'), ('97', 'Laura Sofia'), ('97', 'Melany Solange'), ('97400', 'Natalia'), ('976', 'Eudice Wong'), ('9780', 'Di'), ('98', 'Hortencia'), ('980', 'Ariadna'), ('980', 'Nazari'), ('984', 'Rianna'), ('9846', 'Dejana'), ('98798', 'Beatriz'), ('99', 'Anne Marie'), ('99', 'Asha'), ('99', 'Diana Maria'), ('99', 'Zhima'), ('9926', 'Valentine'), ('993', 'Alicia'), ('9938', 'Min Hwa'), ('994', 'Franziska'), ('997', 'Vladica'), ('998', 'Yukina'), ('99836', 'Margalita')] != [('Aastha', '68'), ('Abbi', '304'), ('Abbie', '5214'), ('Abigail', '115293'), ('Abiodun', '120'), ('Abir', '72'), ('Adeliya', '490'), ('Adnya', '219'), ('Adriana', '28045'), ('Adrienn', '107'), ('Adrijana', '4619'), ('Adva', '9'), ('Afroditi', '156'), ('Agata', '1901'), ('Agata Jadwiga', '219'), ('Agne', '110'), ('Agnes', '390148'), ('Agnese', '13717'), ('Agni', '2929'), ('Agnieszka', '1801033'), ('Agustina', '21728'), ('Agustina Elena', '158'), ('Ah', '141'), ('Ahlam', '85'), ('Ahsha', '52'), ('Ai', '10751'), ('Ai Wen', '2217'), ('Aida', '703'), ('Aiko', '140108'), ('Ailen', '288'), ('Aimee', '226'), ('Aina', '92'), ('Ainhoa', '2433'), ('Aishwarya', '96'), ('Ajla', '116548'), ('Akari', '11873'), ('Akgul', '228538'), ('Aki', '14838'), ('Akiho', '83'), ('Akiko', '84446'), ('Akilah', '742'), ('Akvile', '640'), ('Alana', '385'), ('Alba', '1424'), ('Alberta', '238803'), ('Albina', '10507'), ('Aldana', '71'), ('Alejandra', '1578'), ('Aleksandra', '451414'), ('Aleksandrina', '35957'), ('Alena', '8832'), ('Alessandra', '235'), ('Alessia', '2524'), ('Alessondra', '265'), ('Alexa', '138782'), ('Alexandra', '955267'), ('Alexandria', '191'), ('Alexia', '12829'), ('Alexis', '13389'), ('Aliaksandra', '61196'), ('Alice', '57745'), ('Alice Andrada', '2358'), ('Alicia', '993'), ('Alicja', '5216'), ('Alina', '11393'), ('Aliona', '2369'), ('Alisa', '369810'), ('Alison', '323527'), ('Alix', '5422'), ('Alize', '596901'), ('Alla', '253320'), ('Allie', '33054'), ('Almudena', '206'), ('Alona', '4052'), ('Alory Regina Elorriaga', '155'), ('Alyona', '25183'), ('Amanda', '68207'), ('Amandine', '41575'), ('Amelie', '887'), ('Amina', '1990'), ('Aminat', '12708'), ('Amira', '157'), ('Amra', '60702'), ('Amrita', '159'), ('Amy', '10616'), ('An Sophie', '51803'), ('Ana', '1589674'), ('Ana Bianca', '2421'), ('Ana Clara', '36696'), ('Ana Gabriela', '288'), ('Ana Luisa', '21'), ('Ana Paula', '2141'), ('Ana Sofia', '15955'), ('Ana Victoria', '1367'), ('Anabel', '678793'), ('Anaeve', '1962'), ('Anais', '46908'), ('Anamika', '2338'), ('Anastasia', '1433335'), ('Anastasia Evgenyevna', '1235'), ('Anastasiia', '12'), ('Anastasija', '268277'), ('Anastasiya', '75850'), ('Anca', '101'), ('Anda', '160'), ('Andie K', '605'), ('Andjela', '228'), ('Andra Maria', '51'), ('Andrea', '920433'), ('Andrea Renee', '464'), ('Andreea', '1484'), ('Andreea Amalia', '1365'), ('Andreea Roxana', '12727'), ('Andreja', '74453'), ('Andressa Cristina', '72'), ('Andrina', '159'), ('Aneta', '202'), ('Anett', '71072'), ('Anette', '1657'), ('Ange Oby', '36'), ('Angela', '245'), ('Angelica', '13643'), ('Angeliki', '677'), ('Angelina', '19048'), ('Angelique', '1132514'), ('Anhelina', '17967'), ('Anhzelika', '836'), ('Ani', '48811'), ('Anita', '2177'), ('Anja', '11596'), ('Anke', '54'), ('Ankita', '21599'), ('Ann', '62'), ('Anna', '1017069'), ('Anna Arina', '6650'), ('Anna Giulia', '49207'), ('Anna Karolina', '107880'), ('Anna Katalina', '907'), ('Anna Lena', '359374'), ('Anna Maria', '1427'), ('Annalisa', '29442'), ('Anne', '647811'), ('Anne Liz', '5269'), ('Anne Marie', '99'), ('Anne Sophie', '33'), ('Annie', '172'), ('Annika', '169371'), ('Anouk', '3621'), ('Antonela', '280'), ('Antonia', '21624'), ('Antonina', '484'), ('Anushka', '480'), ('Ao', '4941'), ('Apichaya', '126'), ('Arabela', '11608'), ('Arantxa', '434692'), ('Aranza', '24184'), ('Aravane', '383495'), ('Ariadna', '980'), ('Arina', '96852'), ('Arina Gabriela', '3'), ('Arlinda', '154'), ('Arthi', '39'), ('Aryna', '19446'), ('Aselya', '238'), ('Asha', '99'), ('Ashleigh', '58741'), ('Ashley', '49980'), ('Ashling', '5155'), ('Ashmitha', '648'), ('Ashvarya', '2321'), ('Asia', '48788'), ('Asiya', '802'), ('Assia', '141'), ('Astra', '1083'), ('Astrid Wanja', '269'), ('Audrey', '33624'), ('Avgusta', '21'), ('Axana', '7'), ('Ayaka', '7996'), ('Ayan', '571'), ('Ayano', '5173'), ('Ayla', '7444'), ('Aymet', '791'), ('Ayu Fani', '38501'), ('Ayumi', '309990'), ('Azra', '11721'), ('Barbara', '53401'), ('Barbora', '515957'), ('Basak', '26624'), ('Beatrice', '27061'), ('Beatriz', '98798'), ('Beatriz Magdalena', '75'), ('Beatriz Maria', '1920'), ('Beauty', '26'), ('Belen', '351'), ('Belinda', '137327'), ('Benedetta', '11032'), ('Berfu', '2850'), ('Bermet', '8441'), ('Bernarda', '19092'), ('Bernice', '3894'), ('Berta', '814'), ('Bethanie', '371662'), ('Betina', '21'), ('Bhuvana', '1152'), ('Bianca', '63998'), ('Bianka', '1213'), ('Bibiane', '50184'), ('Blair', '905'), ('Blanca', '312'), ('Blessing', '662'), ('Boba', '123'), ('Bojana', '283166'), ('Borislava', '3470'), ('Boyan', '1465'), ('Brandy', '725'), ('Breaunna', '676'), ('Brenda', '166760'), ('Brianna', '2922'), ('Brienne', '12'), ('Brindtha', '30'), ('Britt', '2487'), ('Brittany', '1119'), ('Brooke', '7062'), ('Brynn', '1344'), ('Bunyawi', '3187'), ('Busra', '537'), ('Cagla', '119797'), ('Caitlin', '15218'), ('Camelia Elena', '9147'), ('Cameron', '38'), ('Camila', '202172'), ('Camila Vital', '136'), ('Camilla', '11714'), ('Camille', '574'), ('Cara', '240762'), ('Carina', '90451'), ('Carla', '669546'), ('Carlota', '27'), ('Carlotta', '562'), ('Carly', '67459'), ('Carmen', '8174'), ('Carmen Raluca', '1077'), ('Carol', '14213'), ('Carolin', '9093'), ('Carolina', '36889'), ('Carolina Meligeni Rodrigues', '3627'), ('Caroline', '2076949'), ('Caroline B', '111'), ('Carolyn', '72'), ('Carson', '289'), ('Casey', '202697'), ('Catalina', '250056'), ('Catherine', '4987'), ('Catherine Cartan', '45884'), ('Caty', '22'), ('Cecilia', '11954'), ('Cecilie Lundgaard', '95'), ('Celine', '18824'), ('Cemre', '958'), ('Chalena', '4914'), ('Chanel', '62861'), ('Chanelle', '275364'), ('Chang', '26585'), ('Chanikarn', '39'), ('Chantal', '15001'), ('Chantelle', '187'), ('Chaoyi', '15'), ('Charlene', '5683'), ('Charlotte', '4356'), ('Chayenne', '20132'), ('Chelsea', '5'), ('Chelsey', '6777'), ('Chen', '26779'), ('Chengyiyi', '277'), ('Chi Chi', '49122'), ('Chi Fan', '667'), ('Chia Hsien', '679'), ('Chia Jung', '33301'), ('Chiaki', '42773'), ('Chiara', '6159'), ('Chieh Yu', '34796'), ('Chihiro', '15401'), ('Chin Wei', '70504'), ('Chinami', '13141'), ('Ching Wen', '7975'), ('Chiraz', '1726'), ('Chisa', '358'), ('Chloe', '15190'), ('Chompoothip', '276'), ('Christie', '24'), ('Christina', '310215'), ('Christine', '2438'), ('Chun Mei', '12519'), ('Chun Yan', '3374'), ('Cindy', '31620'), ('Claire', '141876'), ('Clara', '116'), ('Claudia', '32581'), ('Claudia Antonia', '1227'), ('Claudia Gianina', '934'), ('Claudine', '106762'), ('Clelia', '2221'), ('Clemence', '1622'), ('Clementina Eugenia', '538'), ('Clothilde', '12304'), ('Coco', '235721'), ('Colomba', '129'), ('Conny', '52274'), ('Constance', '25166'), ('Constanza', '907'), ('Constanze', '18'), ('Corina', '1002'), ('Corinna', '102260'), ('Cornelia', '4053'), ('Cory Ann', '20869'), ('Costanza', '1236'), ('Cristiana', '7486'), ('Cristina', '59412'), ('Cristina Andreea', '75414'), ('Cristina Madalina', '317'), ('Csilla', '6256'), ('Cynthia', '1034'), ('Da Hye', '1417'), ('Dabin', '1261'), ('Dagmara', '160'), ('Daiana', '8589'), ('Dajana', '150'), ('Dalia', '8939'), ('Dalila', '48857'), ('Dalma', '15935'), ('Damilola', '0'), ('Damini', '12'), ('Damira', '30'), ('Dan Ni', '639'), ('Dana', '3121'), ('Daneika', '1607'), ('Danica', '17597'), ('Daniela', '1165205'), ('Daniella', '16663'), ('Danielle', '40823'), ('Danielle Rose', '8507'), ('Danijela', '545'), ('Danka', '87958'), ('Daphne', '33'), ('Daria', '170617'), ('Darija', '41925'), ('Dariya', '857'), ('Darya', '163036'), ('Dasha', '1923'), ('Dayana', '5619'), ('Dea', '7027'), ('Deborah', '7605'), ('Deeon', '141'), ('Dejana', '9846'), ('Demi', '1192'), ('Denisa', '65522'), ('Denise', '3298'), ('Denise Antonela', '168'), ('Deniz', '23620'), ('Deria', '215'), ('Desirae', '354'), ('Desiree', '709'), ('Despina', '19065'), ('Despoina', '3942'), ('Destanee', '9227'), ('Dewi', '134'), ('Dhruthi', '2738'), ('Di', '9780'), ('Dia', '79958'), ('Diana', '119279'), ('Diana Maria', '99'), ('Dianne', '6369'), ('Dijana', '7353'), ('Dilara', '85'), ('Dina', '149'), ('Dinah', '67017'), ('Doga Selen', '117'), ('Domenica', '1614'), ('Dominika', '918746'), ('Dominique', '455'), ('Donika', '164'), ('Donna', '114098'), ('Dorien', '109'), ('Doroteja', '23976'), ('Draginja', '392'), ('Dunja', '4703'), ('Ebony', '713'), ('Eden', '1978'), ('Edina', '249446'), ('Eduarda', '11216'), ('Eetee', '2446'), ('Ege', '50'), ('Ekaterina', '1005319'), ('Ekaterine', '26897'), ('Elaine', '103'), ('Eleanor', '2287'), ('Elena', '1247887'), ('Elena Gabriela', '7772'), ('Elena Teodora', '6547'), ('Eleni', '439179'), ('Eleonora', '405'), ('Eleonore', '567'), ('Eliessa', '882'), ('Elina', '314747'), ('Elisabeth', '4709'), ('Elise', '43779'), ('Elitsa', '87263'), ('Elixane', '18211'), ('Eliza', '480'), ('Elizabeta', '536'), ('Elizabeth', '20368'), ('Elizabeth Anita Alexandria', '1103'), ('Elizaveta', '62977'), ('Elizaveta Anna', '636'), ('Elke', '960'), ('Ella', '526'), ('Ellen', '13761'), ('Ellie', '8079'), ('Elodie', '90'), ('Elyne', '12554'), ('Ema', '11218'), ('Emelyn', '12728'), ('Emi', '3880'), ('Emilia', '43'), ('Emiliana', '1258'), ('Emilie', '1440'), ('Emilija', '24'), ('Emiliya', '541'), ('Emily', '52889'), ('Emily J', '964'), ('Emina', '3029'), ('Emma', '85022'), ('Emma Christine', '65'), ('Emmanuelle', '1609'), ('En Pei', '52'), ('Ena', '823'), ('Eri', '34570'), ('Erica', '472'), ('Erika', '165477'), ('Erin', '5356'), ('Erina', '1225'), ('Esen', '69'), ('Estela', '376'), ('Estelle', '39989'), ('Ester', '3908'), ('Estrella', '126811'), ('Etsuko', '7147'), ('Eudice Wong', '976'), ('Eugenia', '36'), ('Eugenie', '204801'), ('Eugeniya', '20989'), ('Eva', '320083'), ('Eva Marie', '41'), ('Eveliina', '744'), ('Evelyn', '27011'), ('Evgenia', '59775'), ('Evgeniya', '206981'), ('Fang Ying', '7755'), ('Fangzhou', '33388'), ('Fanny', '11260'), ('Farah', '167'), ('Fatima', '10865'), ('Fatimah', '898'), ('Fatma', '21261'), ('Fatyha', '80'), ('Federica', '56817'), ('Federica Joe', '44'), ('Fernanda', '17587'), ('Ferny', '78'), ('Fiona', '18219'), ('Flavia', '1011058'), ('Florencia', '89361'), ('Frances', '359'), ('Francesca', '1306087'), ('Francisca', '157'), ('Francoise', '21685'), ('Franziska', '994'), ('Frederikke', '9'), ('Freya', '6525'), ('Gabriela', '102623'), ('Gabriela Nicole', '468'), ('Gabriella', '6179'), ('Gabrielle Faith', '1093'), ('Gaelle', '1000'), ('Gaia', '7998'), ('Gail', '38651'), ('Galina', '302957'), ('Ganna', '30136'), ('Garbine', '412872'), ('Gebriela', '143'), ('Genevieve', '440'), ('Georgia', '9600'), ('Georgia Andreea', '1848'), ('Georgiana', '48'), ('Georgina', '11569'), ('Ghislaine', '290'), ('Giada', '677'), ('Gioia', '31741'), ('Giorgia', '2484'), ('Giorgie', '13'), ('Giovanna', '289'), ('Giulia', '106520'), ('Giuliana', '2935'), ('Gloria', '1297'), ('Gozal', '2864'), ('Grace', '70613'), ('Gracia', '7999'), ('Greetje', '6168'), ('Greta', '240195'), ('Guadalupe', '14277'), ('Guillermina', '576'), ('Guiomar', '687'), ('Gulben', '410'), ('Gulchekhra', '18'), ('Gulnaz', '39'), ('Guzal', '775'), ('Gyulnara', '238'), ('Habiba', '811'), ('Hae Sung', '8180'), ('Haine', '294'), ('Hana', '413'), ('Hanna', '2782'), ('Hanyu', '4643'), ('Hao Chen', '9631'), ('Hao Ching', '224'), ('Harmony', '5944'), ('Harriet', '8608'), ('Haruka', '3633'), ('Haruna', '1873'), ('Hayley', '1679'), ('Hazal', '78'), ('Heather', '202780'), ('Heidi', '88542'), ('Helen', '1039'), ('Helene', '3928'), ('Hikari', '122'), ('Hilda', '10191'), ('Himari', '3'), ('Hiroko', '27580'), ('Hirono', '4368'), ('Ho Ching', '2371'), ('Hollie', '24'), ('Hongrui', '1063'), ('Hortencia', '98'), ('Hsin Yuan', '120'), ('Hua Chen', '7367'), ('Huijie', '118'), ('Hulya', '7797'), ('Hye Min', '1222'), ('Hyojung', '870'), ('Hyun Hui', '8301'), ('I Hsuan', '511'), ('Iana', '395'), ('Ida', '467'), ('Idia', '45'), ('Iga', '916'), ('Ilay', '52'), ('Ilka', '1142'), ('Ilona', '26950'), ('Ilze', '1527'), ('Imane Maelle', '1676'), ('Ina', '292'), ('Inci', '406'), ('India', '762'), ('Indire', '12633'), ('Indy', '17382'), ('Ineke', '1358'), ('Ines', '40410'), ('Inger', '221'), ('Ingrid', '3471'), ('Ingrid Alexandra', '4766'), ('Ingrid Esperanza', '10133'), ('Intissar', '33'), ('Ioana', '1225'), ('Ioana Diana', '2403'), ('Ioana Loredana', '5425'), ('Ionela Andreea', '6948'), ('Ipek', '39352'), ('Irena', '88369'), ('Irene', '3133'), ('Irina', '299698'), ('Irina Camelia', '293366'), ('Irina Maria', '13843'), ('Iris', '4743'), ('Iryna', '87844'), ('Isabel', '6688'), ('Isabela', '714'), ('Isabella', '83476'), ('Isabelle', '4777'), ('Iulia Maria', '74'), ('Iva', '10322'), ('Ivana', '100848'), ('Ivania', '2094'), ('Ivanka', '291'), ('Iveta', '443695'), ('Ivette', '543'), ('Ivone', '253'), ('Ivonne', '13010'), ('Jacqueline', '27462'), ('Jada', '64'), ('Jade', '26209'), ('Jaeda', '1375'), ('Jaimee', '5007'), ('Jaimy Gayle', '24'), ('Jainy', '761'), ('Jamie', '190997'), ('Jamilya', '18'), ('Jan', '10947'), ('Jana', '268372'), ('Janette', '143422'), ('Janina', '12525'), ('Janja', '72'), ('Janneke', '861'), ('Jaqueline Adina', '5416'), ('Jara', '464'), ('Jarmila', '333150'), ('Jasmin', '34453'), ('Jasmina', '43862'), ('Jasmine', '14865'), ('Jasmine Amber', '142'), ('Jawairiah', '822'), ('Jazmin', '908'), ('Jazzamay', '628'), ('Jeannine', '3426'), ('Jelena', '2515436'), ('Jennifer', '81222'), ('Jenny', '1002'), ('Jesika', '17819'), ('Jessica', '154599'), ('Jessika', '4122'), ('Jessy', '923'), ('Ji Hee', '7179'), ('Ji Young', '8592'), ('Jia', '52'), ('Jia Jing', '48117'), ('Jia Qi', '4612'), ('Jiahui', '1553'), ('Jiakang', '15'), ('Jiatian', '100'), ('Jiaxi', '3002'), ('Jiaxue', '96'), ('Jie', '610820'), ('Jil Belen', '13978'), ('Jil Nora', '611'), ('Jill', '359013'), ('Jillian', '1991'), ('Jin', '15'), ('Jin A', '46355'), ('Jin Ju', '414'), ('Jing Jing', '68925'), ('Joana', '1955'), ('Joanna', '472'), ('Joanne', '15'), ('Jodie Anna', '355'), ('Johana', '40'), ('Johanna', '553107'), ('Jordana', '1092'), ('Josepha', '2710'), ('Josephine', '4980'), ('Josie', '804'), ('Jovana', '39270'), ('Ju Eun', '3453'), ('Judith', '3'), ('Jule', '63'), ('Julia', '891796'), ('Julia Mansano', '21'), ('Juliana', '414'), ('Juliana Rocha', '129'), ('Julie', '156531'), ('Julieta Lara', '4093'), ('Julita', '286'), ('Julyette Maria Josephine', '1446'), ('June', '114'), ('Junri', '128183'), ('Justina', '36'), ('Justine', '39418'), ('Justyna', '30304'), ('Kady', '467'), ('Kai Chen', '172004'), ('Kai Lin', '37817'), ('Kaia', '625836'), ('Kaitlin', '416'), ('Kaitlyn', '3905'), ('Kaja', '1176'), ('Kajsa', '2280'), ('Kamila', '12906'), ('Kamilla', '249'), ('Kamonwan', '5866'), ('Kana', '1536'), ('Kanae', '20142'), ('Kanako', '229'), ('Kanami', '3724'), ('Kanika', '919'), ('Kaori', '8406'), ('Karen', '32169'), ('Kariann', '85'), ('Karin', '254520'), ('Karina', '9355'), ('Karina Ildor', '5493'), ('Karina Kristina', '410'), ('Karine', '1936'), ('Karis', '1003'), ('Karla', '3127'), ('Karman', '3193'), ('Karola Patricia', '776'), ('Karolayne', '465'), ('Karolina', '512490'), ('Karoline', '910'), ('Karyn', '330'), ('Kassandra', '704'), ('Katalin', '112562'), ('Katarina', '444303'), ('Katarzyna', '93730'), ('Kate', '34'), ('Katerina', '160945'), ('Kateryna', '435038'), ('Katharina', '24595'), ('Katharine', '363'), ('Katherine', '7843'), ('Katherine Gabriela', '1894'), ('Kathinka', '15970'), ('Kathrin', '141281'), ('Katie', '30035'), ('Katrine Isabel', '308'), ('Katy', '11572'), ('Katya', '515'), ('Katyarina', '97'), ('Kayla', '13697'), ('Kaylah', '237'), ('Kazusa', '10107'), ('Kei', '294'), ('Kelia', '324'), ('Kelly', '4705'), ('Kelly S', '5880'), ('Kelsey', '410'), ('Kennedy', '653'), ('Keren', '24062'), ('Keri', '894'), ('Kerstin', '942'), ('Khristina', '3748'), ('Ki Ryang', '86'), ('Kiki', '214121'), ('Kim', '4580'), ('Kim Alice', '12388'), ('Kimberley', '5393'), ('Kimberly', '4831'), ('Kimika', '272'), ('Kimiko', '270102'), ('Kinnie', '15102'), ('Kirsten', '383077'), ('Kirsten Andrea', '462'), ('Klaartje', '5818'), ('Klara', '568191'), ('Klaudia', '4809'), ('Komola', '701'), ('Korina', '21417'), ('Kotomi', '4962'), ('Krista', '17577'), ('Kristie', '34647'), ('Kristina', '601693'), ('Kristina N', '555'), ('Kristy', '1899'), ('Kristyna', '148728'), ('Ksenia', '371140'), ('Kseniia', '298'), ('Ksenija', '625'), ('Kumiko', '56212'), ('Kurumi', '177170'), ('Kveta', '210101'), ('Kwan Yau', '403'), ('Kyle', '3200'), ('Kylie', '1236'), ('Kyoka', '9036'), ('Kyra', '102022'), ('Kyung Mi', '26059'), ('Laetitia', '6078'), ('Laili', '595'), ('Lamis', '456'), ('Lara', '177458'), ('Larikah', '255'), ('Laura', '578964'), ('Laura D', '281'), ('Laura Ioana', '33822'), ('Laura Sofia', '97'), ('Lauren', '244807'), ('Lauryn', '207'), ('Lavinia', '23897'), ('Laylo', '39'), ('Layne', '22'), ('Lea', '4197'), ('Leah', '152'), ('Lee', '733'), ('Lena', '27997'), ('Lena Marie', '14942'), ('Lenka', '164900'), ('Leolia', '750'), ('Leonie', '672'), ('Lesedi Sheya', '286'), ('Lesia', '225987'), ('Lesley', '42925'), ('Leslie', '173'), ('Leticia', '45115'), ('Leticia Garcia', '87'), ('Leylah Annie', '48'), ('Li', '1696'), ('Liana Gabriela', '59997'), ('Libby', '2362'), ('Libi', '522'), ('Lidia', '169'), ('Lidziya', '6809'), ('Liezel', '39782'), ('Liga', '23411'), ('Lilla', '1960'), ('Lin', '40341'), ('Lina', '91117'), ('Linda', '4216'), ('Lindsay', '142454'), ('Lindsey', '500'), ('Ling', '64525'), ('Liniques', '72'), ('Linnea', '697'), ('Lisa', '594217'), ('Lisa Maria', '7898'), ('Lisa Marie', '1583'), ('Lisanne', '8284'), ('Liubov', '2662'), ('Livia', '128'), ('Liz Tatiane', '2216'), ('Lizaveta', '135'), ('Lizette', '11623'), ('Lorenza', '33'), ('Lorraine M', '40'), ('Lou', '10167'), ('Loudmilla', '6'), ('Louisa', '50700'), ('Louise', '1633'), ('Lourdes', '371035'), ('Lu', '3445'), ('Luca', '1013'), ('Lucia', '17185'), ('Luciana', '8305'), ('Lucie', '1108372'), ('Lucrezia', '1589'), ('Lucy', '6542'), ('Ludmila', '645'), ('Ludmilla', '1187'), ('Luisa', '1671'), ('Luisa Marie', '1822'), ('Luksika', '77519'), ('Lulu', '304'), ('Luna', '15'), ('Lusine', '377'), ('Lutfiye', '876'), ('Lyann', '30'), ('Lynn', '837'), ('Lyudmyla', '54172'), ('Macall', '12379'), ('Macarena', '2133'), ('Madalina', '62938'), ('Maddison', '2434'), ('Madeleine', '715'), ('Madeline', '147'), ('Madina', '6'), ('Madison', '476768'), ('Madrie', '2266'), ('Maegan', '525'), ('Mafalda', '163'), ('Maftuna', '54'), ('Magali', '1917'), ('Magalie', '511'), ('Magda', '103659'), ('Magdalena', '401857'), ('Magy', '756'), ('Mahak', '154'), ('Mahitha', '395'), ('Mai', '19173'), ('Maia', '1235'), ('Maia A', '12'), ('Maiko', '11320'), ('Maileen', '83'), ('Mailen', '39523'), ('Maja', '1067'), ('Makiho', '5592'), ('Makoto', '14129'), ('Malene', '316'), ('Malika', '323'), ('Malin', '2489'), ('Mallaurie', '688'), ('Mallory', '44497'), ('Malou', '3073'), ('Mami', '96'), ('Man Ying Maggie', '102'), ('Mana', '9593'), ('Mananchaya', '15'), ('Manca', '2070'), ('Mandy', '193767'), ('Manisha', '3112'), ('Manon', '14608'), ('Manya', '93'), ('Mara', '702'), ('Marcela', '16790'), ('Marcela Guimaraes', '683'), ('Marcelina', '33'), ('Marcella', '13037'), ('Margalita', '99836'), ('Margarida', '1997'), ('Margarita', '78265'), ('Margaux', '905'), ('Margot', '4787'), ('Mari', '38086'), ('Maria', '3613355'), ('Maria Agustina', '185'), ('Maria Andrea', '323'), ('Maria Camila', '148'), ('Maria Constanza De Las Mercedes', '1892'), ('Maria Del Rosario', '296'), ('Maria Elena', '296736'), ('Maria Fernanda', '141257'), ('Maria Jesus', '294'), ('Maria Joao', '72682'), ('Maria Jose', '413759'), ('Maria Lourdes', '156'), ('Maria Paulina', '1388'), ('Maria Teresa', '106375'), ('Mariam', '4060'), ('Mariana', '201258'), ('Marianna', '10178'), ('Marianne', '1090'), ('Mariaryeni', '226'), ('Marie', '25496'), ('Marie Eve', '114687'), ('Mariia', '206'), ('Marija', '20481'), ('Marijana', '3'), ('Marina', '362372'), ('Marine', '4314'), ('Marion', '1272285'), ('Mariona', '4'), ('Marisa', '1026'), ('Mariya', '154484'), ('Marketa', '18286'), ('Marlies', '1624'), ('Marrit', '1339'), ('Marta', '267679'), ('Marta Huqi', '778'), ('Martha', '153'), ('Martina', '109192'), ('Mary', '653'), ('Mary Ann', '102'), ('Maryna', '85425'), ('Masa', '117472'), ('Mathilde', '245139'), ('Matilda', '3466'), ('Maud', '210'), ('Maureen', '219'), ('Maurien', '138'), ('Maxine', '390'), ('May', '225'), ('Maya', '23668'), ('Mayar', '1788'), ('Mayo', '32445'), ('Mayya', '9064'), ('Megan', '13254'), ('Megumi', '407'), ('Mei Xu', '40'), ('Meiling', '417'), ('Meiqi', '96'), ('Melanie', '385636'), ('Melany Solange', '97'), ('Melina', '2609'), ('Melinda', '290299'), ('Melis', '20196'), ('Melisa', '340'), ('Melissa', '200'), ('Melissa Ishuan', '171'), ('Meng Ning', '542'), ('Mercedes', '48'), ('Merel', '101'), ('Meritxell', '284'), ('Mervana', '102693'), ('Mi', '24569'), ('Mi Jeong', '176'), ('Mi Rae', '1858'), ('Mi Zhuoma', '72'), ('Mia Nicole', '1098'), ('Micaela', '230'), ('Michaela', '76586'), ('Michaella', '242619'), ('Michela', '90'), ('Michele Alexandra', '596'), ('Michelle', '160164'), ('Michika', '3657'), ('Mihaela', '69242'), ('Mihaela Lorena', '15'), ('Miharu', '21205'), ('Mihika', '427'), ('Mihoki', '201'), ('Miki', '24542'), ('Mila', '107'), ('Milagros', '42'), ('Milana', '14123'), ('Milena', '279'), ('Milica', '63'), ('Min', '1884'), ('Min Hwa', '9938'), ('Minami', '96'), ('Mira', '1626'), ('Mirabelle', '1977'), ('Miranda', '180'), ('Miriam', '3825'), ('Miriam Bianca', '1458'), ('Miriana', '1180'), ('Mirjam', '272'), ('Mirjana', '331434'), ('Misa', '55981'), ('Misaki', '203782'), ('Mitsumi', '309'), ('Miyabi', '22840'), ('Miyu', '23968'), ('Mizuno', '2927'), ('Molly', '565'), ('Momoko', '2061'), ('Mona', '282445'), ('Monica', '587309'), ('Monika', '1240'), ('Monique', '114104'), ('Montserrat', '23564'), ('Morgane', '6906'), ('Moulika', '15'), ('Mouna', '12'), ('Moyuka', '32'), ('Muazzez', '6'), ('Muge', '162'), ('Myrtille', '43550'), ('Na', '1358928'), ('Na Lae', '26185'), ('Na Ri', '19223'), ('Nadezda', '5027'), ('Nadia', '1401125'), ('Nadiya', '56596'), ('Nadja', '2661'), ('Nagi', '1535'), ('Naiktha', '4380'), ('Naima', '440'), ('Nam Yeon', '259'), ('Nan Nan', '3094'), ('Nanuli', '16494'), ('Nao', '59671'), ('Naoko', '857'), ('Naomi', '163239'), ('Napatsakorn', '1945'), ('Nastassia', '72'), ('Nastassja', '65152'), ('Nastja', '29250'), ('Natalia', '97400'), ('Natalie', '120995'), ('Natalija', '13686'), ('Nataliya', '33'), ('Natasa', '14212'), ('Natasha', '15365'), ('Natela', '16303'), ('Natella', '649'), ('Nathalia', '28098'), ('Nathaly', '13241'), ('Natia', '2526'), ('Natsumi', '37981'), ('Nattawadee', '224'), ('Naz', '251'), ('Nazari', '980'), ('Neda', '9536'), ('Nelise', '142'), ('Nermeen', '279'), ('Nevena', '170'), ('Nicha', '30972'), ('Nicky', '2531'), ('Nicola', '33550'), ('Nicole', '447434'), ('Nicoleta Catalina', '8146'), ('Nicolette', '9627'), ('Nidhi', '5425'), ('Nigina', '47651'), ('Nika', '9120'), ('Nikita', '22'), ('Nikki', '614'), ('Nikol', '491'), ('Nikola', '78513'), ('Nina', '201173'), ('Nina Isabella', '115'), ('Nives', '2706'), ('Noel', '1558'), ('Noelia', '2025'), ('Noelle', '1795'), ('Nonna', '134'), ('Noppawan', '73589'), ('Nora', '1082'), ('Nour', '760'), ('Nozomi', '1333'), ('Nudnida', '63013'), ('Nungnadda', '24523'), ('Nuria', '259116'), ('Oana', '1096'), ('Oana Georgeta', '4294'), ('Oceane', '56853'), ('Ofri', '5372'), ('Oksana', '58279'), ('Ola', '3497'), ('Olawaseun', '2'), ('Olaya', '40'), ('Oleksandra', '8700'), ('Olena', '484'), ('Olesya', '3811'), ('Olga', '773929'), ('Olivia', '119756'), ('Oliwia', '363'), ('Ons', '56242'), ('Ornella', '2133'), ('Oyku', '382'), ('Paige Mary', '147'), ('Pamela', '241'), ('Panna', '1446'), ('Paola', '403127'), ('Parris', '209'), ('Patcharin', '1188'), ('Patricia', '197904'), ('Patricia Maria', '43755'), ('Patrycja', '17514'), ('Patty', '7323'), ('Paula', '172431'), ('Paula Andrea', '269'), ('Paula Catalina', '3714'), ('Paula Cristina', '37384'), ('Paulina', '3208'), ('Pauline', '313187'), ('Pavla', '4128'), ('Peangtarn', '26280'), ('Peggy', '1016'), ('Pei Chi', '8900'), ('Pei Hsuan', '24'), ('Pei Ju', '181'), ('Pemra', '60908'), ('Pernilla', '6573'), ('Petia', '1832'), ('Petra', '1958404'), ('Phenomena', '3'), ('Phillis', '664'), ('Pia', '10859'), ('Piia', '21340'), ('Pilar', '6404'), ('Pippa', '243'), ('Plobrung', '934'), ('Polina', '76747'), ('Polona', '325216'), ('Poojashree', '13006'), ('Pranjala', '1214'), ('Prarthana G', '5687'), ('Prerna', '9318'), ('Priscila', '510'), ('Priscilla', '8203'), ('Qiang', '116857'), ('Qianhui', '683'), ('Qianqian', '641'), ('Qiu Yu', '2034'), ('Quinn', '646'), ('Quirine', '22978'), ('Rachael', '2592'), ('Rachel', '469'), ('Radina', '699'), ('Rafaela', '228'), ('Ralina', '40'), ('Raluca', '148701'), ('Raluca Elena', '9202'), ('Raluca Georgiana', '4258'), ('Ramu', '443'), ('Ramya', '161'), ('Ran', '14709'), ('Rana', '9'), ('Raquel', '30401'), ('Rashmi', '741'), ('Ratnika', '957'), ('Raveena', '5387'), ('Rebeca', '168'), ('Rebecca', '165013'), ('Rebeka', '5803'), ('Regina', '122331'), ('Reina', '64'), ('Reka Luca', '66271'), ('Remi', '38116'), ('Renata', '201856'), ('Ria', '5566'), ('Rianna', '984'), ('Richel', '84184'), ('Rika', '141257'), ('Riko', '23195'), ('Rio', '556'), ('Risa', '62252'), ('Rishika', '8448'), ('Rita', '1401'), ('Riya', '2634'), ('Roberta', '809611'), ('Robin', '12295'), ('Robyn', '1103'), ('Rocio', '16886'), ('Romana', '29214'), ('Romana Caroline', '17020'), ('Romina', '253471'), ('Romy', '911'), ('Rona', '308'), ('Ronit', '3165'), ('Ronke', '49'), ('Roosh', '28'), ('Rosa', '111'), ('Rosalia', '803'), ('Rosalie', '880'), ('Rosie', '336'), ('Roxane', '38793'), ('Rui', '24'), ('Rushmi', '27452'), ('Rutuja', '3642'), ('Ryann', '597'), ('Saana', '195'), ('Sabastiani', '780'), ('Sabina', '49784'), ('Sabina Elena', '27'), ('Sabine', '590911'), ('Sabrina', '6810'), ('Sacha', '78204'), ('Sachia', '49767'), ('Sachie', '42676'), ('Sadafmoh', '2275'), ('Sai Samhitha', '1034'), ('Saisai', '113359'), ('Sakiko', '9338'), ('Sally', '53480'), ('Salma', '66'), ('Samantha', '1437656'), ('Samira', '2020'), ('Sanae', '354'), ('Sanaz', '17975'), ('Sandra', '266197'), ('Sandy', '224'), ('Sang Hee', '1277'), ('Sania', '272889'), ('Sara', '914981'), ('Sarah', '78461'), ('Sarah Beth', '1270'), ('Sarah Rebecca', '13064'), ('Sarahi', '461'), ('Sarai Delfina', '148'), ('Saray', '2061'), ('Sari', '464'), ('Sarlota', '27'), ('Sarvinoz', '178'), ('Sasa', '316'), ('Saska', '2641'), ('Satsuki', '906'), ('Savannah', '70'), ('Schena', '148'), ('Se Hyun', '143'), ('Se Jin', '681'), ('Sean', '75'), ('Seda', '1469'), ('Seira', '144'), ('Selin', '169'), ('Seo Kyung', '6564'), ('Seone', '1312'), ('Serena', '4232828'), ('Sesil', '208108'), ('Seung Yeon', '6650'), ('Severine', '192296'), ('Shahar', '662926'), ('Shakhlo', '2122'), ('Shakhnoza', '198'), ('Shangqing', '111'), ('Shanshan', '2378'), ('Shao Yuan', '1363'), ('Sharmada', '4106'), ('Sharon', '117825'), ('Sharon Sanchana', '522'), ('Shelby', '102140'), ('Shelly', '142'), ('Sheng Nan', '53610'), ('Sherazad', '22977'), ('Sherry', '801'), ('Shiho', '39960'), ('Shilin', '9634'), ('Shiori', '18'), ('Shir', '117'), ('Shiran', '236'), ('Shivika', '4611'), ('Shou Na', '105'), ('Shreya', '6'), ('Shu Ying', '1483'), ('Shuai', '913829'), ('Shuko', '46124'), ('Shuo', '597'), ('Shuyue', '336'), ('Shweta', '3255'), ('Si Qi', '531'), ('Silvia', '221695'), ('Simona', '724638'), ('Simone', '1149'), ('Simran Kaur', '467'), ('Sina', '10360'), ('Sinead', '688'), ('Sing Le', '95'), ('Siqi', '716'), ('Sirui', '276'), ('Siyu', '87'), ('Sloane', '352458'), ('Smriti', '96'), ('Sneha', '134'), ('Snehadevi S', '2820'), ('So Jung', '47282'), ('So Ra', '18210'), ('Sofia', '484140'), ('Sofico', '336'), ('Sofie', '10539'), ('Sofiya', '18371'), ('Sofya', '9180'), ('Sohyun', '108'), ('Sonia', '480'), ('Sonja', '4499'), ('Sophia', '96'), ('Sophie', '39307'), ('Sorana', '457043'), ('Sowjanya', '2961'), ('Spurti', '159'), ('Sri Vaishnavi', '1744'), ('Stamatia', '8072'), ('Stanislava', '49412'), ('Stefana', '497'), ('Stefani', '126'), ('Stefania', '24897'), ('Stefanie', '247237'), ('Steffi', '3085'), ('Stephanie', '608309'), ('Stephanie Mariel', '1397'), ('Storm', '21152'), ('Su Jeong', '33672'), ('Su Wei', '274936'), ('Suellen', '320'), ('Sultan', '1544'), ('Sun Jung', '6591'), ('Sunae', '15'), ('Sunam', '3594'), ('Sung Hee', '29852'), ('Susan', '502'), ('Susanne', '16276'), ('Suzan', '344'), ('Suzuho', '324'), ('Suzy', '1054'), ('Svenja', '6341'), ('Svetlana', '1906587'), ('Sviatlana', '11201'), ('Sybille', '581'), ('Sylvia', '1626'), ('Sylwia', '8268'), ('Syna', '9001'), ('Szabina', '2127'), ('Tadeja', '83659'), ('Taisiya', '1050'), ('Talya', '45'), ('Tamachan', '843'), ('Tamar', '60'), ('Tamara', '54140'), ('Tamari', '304'), ('Tamarine', '594281'), ('Tamaryn', '40060'), ('Tamira', '322202'), ('Tammi', '26077'), ('Tanaporn', '764'), ('Tanya', '1229'), ('Tara', '54798'), ('Tatia', '42'), ('Tatiana', '34795'), ('Tatjana', '230262'), ('Tatsiana', '1289'), ('Tayisiya', '5051'), ('Taylor', '38850'), ('Tea', '2127'), ('Teliana', '112570'), ('Tena', '12402'), ('Teodora', '41792'), ('Tereza', '193362'), ('Terri', '18'), ('Tess', '7165'), ('Tessah', '9116'), ('Tetiana', '75337'), ('Tetyana', '43020'), ('Thai Sa Grana', '706'), ('Theo', '2249'), ('Theresa', '377'), ('Tijana', '333'), ('Timea', '612072'), ('Tina', '57585'), ('Tinatin', '476'), ('Ting Fei', '8145'), ('Ting Jr', '8676'), ('Tingting', '151'), ('Tjasa', '3361'), ('Tomoko', '7431'), ('Tori', '10630'), ('Tornado Alicia', '1864'), ('Trang', '1884'), ('Treta', '736'), ('Tsvetana', '456422'), ('Tyra', '4543'), ('Ulrikke', '27118'), ('Ulyana', '2400'), ('Urszula', '275255'), ('Ushna', '413'), ('Usue Maitane', '7874'), ('Valentina', '338'), ('Valentine', '9926'), ('Valentini', '15198'), ('Valentyna', '47854'), ('Valeria', '159155'), ('Valerie', '6146'), ('Valeriya', '16621'), ('Vanda', '10087'), ('Vanesa', '30669'), ('Vanessa', '71645'), ('Vania', '299530'), ('Vaniya', '255'), ('Vanja', '291'), ('Varatchaya', '54340'), ('Varunya', '3623'), ('Varvara', '401409'), ('Vasilisa', '42527'), ('Vaszilisza', '3763'), ('Vendula', '2221'), ('Venus', '2875425'), ('Vera', '1929137'), ('Verena', '3018'), ('Veronica', '84543'), ('Veronica M', '1678'), ('Veronika', '73192'), ('Vesna', '169500'), ('Vicky', '77'), ('Victoire', '454'), ('Victoria', '2142854'), ('Victoria Ariadna', '106'), ('Viktoria', '30191'), ('Viktoriia', '90'), ('Viktorija', '79511'), ('Viktoriya', '26226'), ('Viktoryia', '1987'), ('Vilma Y', '27'), ('Vincenza', '105'), ('Vinciane', '37'), ('Violetta', '298'), ('Virginie', '519208'), ('Vishesh', '71'), ('Vita', '64'), ('Vitalia', '106927'), ('Vivian', '36714'), ('Vivien', '13041'), ('Vivienne', '8918'), ('Vlada', '22578'), ('Vladica', '997'), ('Vladimira', '6470'), ('Vladislava', '1254'), ('Vladyslava', '2570'), ('Vojislava', '18781'), ('Voni', '1036'), ('Wan Ting', '11653'), ('Wan Yi', '42'), ('Warona', '9'), ('Wen Hsin', '40633'), ('Wen Ling', '120'), ('Wendy Qi Wen', '613'), ('Weronika Jasmina', '179'), ('Whitney', '5604'), ('Wiktoria', '363'), ('Wing Yau Venise', '11694'), ('Wushuang', '879'), ('Xenia', '14578'), ('Xi Yao', '1445'), ('Xiao', '4789'), ('Xiaodi', '5057'), ('Xiaorong', '717'), ('Xiaoxi', '1352'), ('Ximena', '19495'), ('Xin', '8744'), ('Xin Yu', '187'), ('Xinyu', '10705'), ('Xinyun', '109256'), ('Xiyu', '315'), ('Xu Liu', '4535'), ('Ya', '24'), ('Ya Hsuan', '17078'), ('Yafan', '39687'), ('Yan', '4196'), ('Yana', '39102'), ('Yang', '73'), ('Yanina', '602453'), ('Yanni', '275'), ('Yarden', '32'), ('Yaroslava', '404915'), ('Yasmin', '11251'), ('Yasmina', '27'), ('Yasmine', '1748'), ('Yasmyn', '71'), ('Yawna', '648'), ('Yayuk', '128509'), ('Ye Ra', '47867'), ('Ye Xin', '281'), ('Yekaterina', '376'), ('Yelena', '1856'), ('Yeong Won', '966'), ('Yevgeniya', '6288'), ('Yi', '19989'), ('Yi Fan', '60646'), ('Yi Jing', '22443'), ('Yi Miao', '61839'), ('Yidi', '136'), ('Yihong', '24'), ('Yijia', '366'), ('Ying', '3783'), ('Ying Ying', '107595'), ('Yixuan', '1380'), ('Ylena', '1546'), ('Ylona Georgiana', '1453'), ('Yoko', '285'), ('Yolande', '1381'), ('Yoo Ri', '182'), ('Yoon Young', '3592'), ('Yoshimi', '677'), ('Yosr', '75'), ('You Na', '242'), ('Ysaline', '27804'), ('Yu Jin', '452'), ('Yu Tong', '9'), ('Yuan', '281'), ('Yuanyi', '772'), ('Yue', '1259'), ('Yue Yue', '21360'), ('Yuenu', '682'), ('Yujia', '184'), ('Yuka', '12474'), ('Yukako', '84'), ('Yuki', '505'), ('Yuki Kristina', '2191'), ('Yukina', '998'), ('Yukun', '1828'), ('Yulia', '155143'), ('Yuliana', '15248'), ('Yuliya', '206375'), ('Yumi', '20269'), ('Yung Jan', '229391'), ('Yuqi', '559'), ('Yurika', '101816'), ('Yuriko', '1728'), ('Yurina', '12693'), ('Yuuki', '15071'), ('Yuval', '45'), ('Yuxuan', '24279'), ('Yvonne', '254491'), ('Zaineb', '87'), ('Zalina', '2052'), ('Zarah', '3809'), ('Zarina', '123243'), ('Zeel', '702'), ('Zeynep  Sena', '21'), ('Zhanlan', '2166'), ('Zhaoxuan', '20236'), ('Zhibek', '7'), ('Zhima', '99'), ('Zhou', '30'), ('Zhuoma', '121'), ('Zi', '110290'), ('Zinovia', '74'), ('Ziyue', '1420'), ('Zoe', '2772'), ('Zoe Gwen', '2877'), ('Zsofia', '1501'), ('Zuzana', '266251'), ('Zuzanna', '2258')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , SUM(T2.ranking_points) AS total_ranking_points FROM main.players AS T1 JOIN main.rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('0', 'Damilola'), ('100', 'Jiatian'), ('1000', 'Gaelle'), ('1002', 'Corina'), ('1002', 'Jenny'), ('1003', 'Karis'), ('1005319', 'Ekaterina'), ('100848', 'Ivana'), ('10087', 'Vanda'), ('101', 'Anca'), ('101', 'Merel'), ('10107', 'Kazusa'), ('1011058', 'Flavia'), ('1013', 'Luca'), ('10133', 'Ingrid Esperanza'), ('1016', 'Peggy'), ('10167', 'Lou'), ('1017069', 'Anna'), ('10178', 'Marianna'), ('101816', 'Yurika'), ('10191', 'Hilda'), ('102', 'Man Ying Maggie'), ('102', 'Mary Ann'), ('102022', 'Kyra'), ('102140', 'Shelby'), ('102260', 'Corinna'), ('1026', 'Marisa'), ('102623', 'Gabriela'), ('102693', 'Mervana'), ('103', 'Elaine'), ('10322', 'Iva'), ('1034', 'Cynthia'), ('1034', 'Sai Samhitha'), ('1036', 'Voni'), ('10360', 'Sina'), ('103659', 'Magda'), ('1039', 'Helen'), ('105', 'Shou Na'), ('105', 'Vincenza'), ('1050', 'Taisiya'), ('10507', 'Albina'), ('10539', 'Sofie'), ('1054', 'Suzy'), ('106', 'Victoria Ariadna'), ('10616', 'Amy'), ('1063', 'Hongrui'), ('10630', 'Tori'), ('106375', 'Maria Teresa'), ('106520', 'Giulia'), ('1067', 'Maja'), ('106762', 'Claudine'), ('106927', 'Vitalia'), ('107', 'Adrienn'), ('107', 'Mila'), ('10705', 'Xinyu'), ('10751', 'Ai'), ('107595', 'Ying Ying'), ('1077', 'Carmen Raluca'), ('107880', 'Anna Karolina'), ('108', 'Sohyun'), ('1082', 'Nora'), ('1083', 'Astra'), ('10859', 'Pia'), ('10865', 'Fatima'), ('109', 'Dorien'), ('1090', 'Marianne'), ('109192', 'Martina'), ('1092', 'Jordana'), ('109256', 'Xinyun'), ('1093', 'Gabrielle Faith'), ('10947', 'Jan'), ('1096', 'Oana'), ('1098', 'Mia Nicole'), ('110', 'Agne'), ('110290', 'Zi'), ('1103', 'Elizabeth Anita Alexandria'), ('1103', 'Robyn'), ('11032', 'Benedetta'), ('1108372', 'Lucie'), ('111', 'Caroline B'), ('111', 'Rosa'), ('111', 'Shangqing'), ('1119', 'Brittany'), ('11201', 'Sviatlana'), ('11216', 'Eduarda'), ('11218', 'Ema'), ('11251', 'Yasmin'), ('112562', 'Katalin'), ('112570', 'Teliana'), ('11260', 'Fanny'), ('11320', 'Maiko'), ('1132514', 'Angelique'), ('113359', 'Saisai'), ('11393', 'Alina'), ('114', 'June'), ('114098', 'Donna'), ('114104', 'Monique'), ('1142', 'Ilka'), ('114687', 'Marie Eve'), ('1149', 'Simone'), ('115', 'Nina Isabella'), ('1152', 'Bhuvana'), ('115293', 'Abigail'), ('11569', 'Georgina'), ('11572', 'Katy'), ('11596', 'Anja'), ('116', 'Clara'), ('11608', 'Arabela'), ('11623', 'Lizette'), ('1165205', 'Daniela'), ('11653', 'Wan Ting'), ('116548', 'Ajla'), ('116857', 'Qiang'), ('11694', 'Wing Yau Venise'), ('117', 'Doga Selen'), ('117', 'Shir'), ('11714', 'Camilla'), ('11721', 'Azra'), ('117472', 'Masa'), ('1176', 'Kaja'), ('117825', 'Sharon'), ('118', 'Huijie'), ('1180', 'Miriana'), ('1187', 'Ludmilla'), ('11873', 'Akari'), ('1188', 'Patcharin'), ('1192', 'Demi'), ('119279', 'Diana'), ('11954', 'Cecilia'), ('119756', 'Olivia'), ('119797', 'Cagla'), ('12', 'Anastasiia'), ('12', 'Brienne'), ('12', 'Damini'), ('12', 'Maia A'), ('12', 'Mouna'), ('120', 'Abiodun'), ('120', 'Hsin Yuan'), ('120', 'Wen Ling'), ('120995', 'Natalie'), ('121', 'Zhuoma'), ('1213', 'Bianka'), ('1214', 'Pranjala'), ('122', 'Hikari'), ('1222', 'Hye Min'), ('122331', 'Regina'), ('1225', 'Erina'), ('1225', 'Ioana'), ('1227', 'Claudia Antonia'), ('1229', 'Tanya'), ('12295', 'Robin'), ('123', 'Boba'), ('12304', 'Clothilde'), ('123243', 'Zarina'), ('1235', 'Anastasia Evgenyevna'), ('1235', 'Maia'), ('1236', 'Costanza'), ('1236', 'Kylie'), ('12379', 'Macall'), ('12388', 'Kim Alice'), ('1240', 'Monika'), ('12402', 'Tena'), ('12474', 'Yuka'), ('1247887', 'Elena'), ('12519', 'Chun Mei'), ('12525', 'Janina'), ('1254', 'Vladislava'), ('12554', 'Elyne'), ('1258', 'Emiliana'), ('1259', 'Yue'), ('126', 'Apichaya'), ('126', 'Stefani'), ('1261', 'Dabin'), ('12633', 'Indire'), ('126811', 'Estrella'), ('12693', 'Yurina'), ('1270', 'Sarah Beth'), ('12708', 'Aminat'), ('1272285', 'Marion'), ('12727', 'Andreea Roxana'), ('12728', 'Emelyn'), ('1277', 'Sang Hee'), ('128', 'Livia'), ('128183', 'Junri'), ('12829', 'Alexia'), ('128509', 'Yayuk'), ('1289', 'Tatsiana'), ('129', 'Colomba'), ('129', 'Juliana Rocha'), ('12906', 'Kamila'), ('1297', 'Gloria'), ('13', 'Giorgie'), ('13006', 'Poojashree'), ('13010', 'Ivonne'), ('13037', 'Marcella'), ('13041', 'Vivien'), ('1306087', 'Francesca'), ('13064', 'Sarah Rebecca'), ('1312', 'Seone'), ('13141', 'Chinami'), ('13241', 'Nathaly'), ('13254', 'Megan'), ('1333', 'Nozomi'), ('13389', 'Alexis'), ('1339', 'Marrit'), ('134', 'Dewi'), ('134', 'Nonna'), ('134', 'Sneha'), ('1344', 'Brynn'), ('135', 'Lizaveta'), ('1352', 'Xiaoxi'), ('1358', 'Ineke'), ('1358928', 'Na'), ('136', 'Camila Vital'), ('136', 'Yidi'), ('1363', 'Shao Yuan'), ('13643', 'Angelica'), ('1365', 'Andreea Amalia'), ('1367', 'Ana Victoria'), ('13686', 'Natalija'), ('13697', 'Kayla'), ('13717', 'Agnese'), ('137327', 'Belinda'), ('1375', 'Jaeda'), ('13761', 'Ellen'), ('138', 'Maurien'), ('1380', 'Yixuan'), ('1381', 'Yolande'), ('13843', 'Irina Maria'), ('138782', 'Alexa'), ('1388', 'Maria Paulina'), ('1397', 'Stephanie Mariel'), ('13978', 'Jil Belen'), ('1401', 'Rita'), ('140108', 'Aiko'), ('1401125', 'Nadia'), ('141', 'Ah'), ('141', 'Assia'), ('141', 'Deeon'), ('14123', 'Milana'), ('141257', 'Maria Fernanda'), ('141257', 'Rika'), ('141281', 'Kathrin'), ('14129', 'Makoto'), ('1417', 'Da Hye'), ('141876', 'Claire'), ('142', 'Jasmine Amber'), ('142', 'Nelise'), ('142', 'Shelly'), ('1420', 'Ziyue'), ('14212', 'Natasa'), ('14213', 'Carol'), ('1424', 'Alba'), ('142454', 'Lindsay'), ('1427', 'Anna Maria'), ('14277', 'Guadalupe'), ('143', 'Gebriela'), ('143', 'Se Hyun'), ('1433335', 'Anastasia'), ('143422', 'Janette'), ('1437656', 'Samantha'), ('144', 'Seira'), ('1440', 'Emilie'), ('1445', 'Xi Yao'), ('1446', 'Julyette Maria Josephine'), ('1446', 'Panna'), ('1453', 'Ylona Georgiana'), ('14578', 'Xenia'), ('1458', 'Miriam Bianca'), ('14608', 'Manon'), ('1465', 'Boyan'), ('1469', 'Seda'), ('147', 'Madeline'), ('147', 'Paige Mary'), ('14709', 'Ran'), ('148', 'Maria Camila'), ('148', 'Sarai Delfina'), ('148', 'Schena'), ('1483', 'Shu Ying'), ('14838', 'Aki'), ('1484', 'Andreea'), ('14865', 'Jasmine'), ('148701', 'Raluca'), ('148728', 'Kristyna'), ('149', 'Dina'), ('14942', 'Lena Marie'), ('15', 'Chaoyi'), ('15', 'Jiakang'), ('15', 'Jin'), ('15', 'Joanne'), ('15', 'Luna'), ('15', 'Mananchaya'), ('15', 'Mihaela Lorena'), ('15', 'Moulika'), ('15', 'Sunae'), ('150', 'Dajana'), ('15001', 'Chantal'), ('1501', 'Zsofia'), ('15071', 'Yuuki'), ('151', 'Tingting'), ('15102', 'Kinnie'), ('15190', 'Chloe'), ('15198', 'Valentini'), ('152', 'Leah'), ('15218', 'Caitlin'), ('15248', 'Yuliana'), ('1527', 'Ilze'), ('153', 'Martha'), ('1535', 'Nagi'), ('1536', 'Kana'), ('15365', 'Natasha'), ('154', 'Arlinda'), ('154', 'Mahak'), ('15401', 'Chihiro'), ('1544', 'Sultan'), ('154484', 'Mariya'), ('154599', 'Jessica'), ('1546', 'Ylena'), ('155', 'Alory Regina Elorriaga'), ('155143', 'Yulia'), ('1553', 'Jiahui'), ('1558', 'Noel'), ('156', 'Afroditi'), ('156', 'Maria Lourdes'), ('156531', 'Julie'), ('157', 'Amira'), ('157', 'Francisca'), ('1578', 'Alejandra'), ('158', 'Agustina Elena'), ('1583', 'Lisa Marie'), ('1589', 'Lucrezia'), ('1589674', 'Ana'), ('159', 'Amrita'), ('159', 'Andrina'), ('159', 'Spurti'), ('159155', 'Valeria'), ('15935', 'Dalma'), ('15955', 'Ana Sofia'), ('15970', 'Kathinka'), ('160', 'Anda'), ('160', 'Dagmara'), ('160164', 'Michelle'), ('1607', 'Daneika'), ('1609', 'Emmanuelle'), ('160945', 'Katerina'), ('161', 'Ramya'), ('1614', 'Domenica'), ('162', 'Muge'), ('1622', 'Clemence'), ('1624', 'Marlies'), ('1626', 'Mira'), ('1626', 'Sylvia'), ('16276', 'Susanne'), ('163', 'Mafalda'), ('16303', 'Natela'), ('163036', 'Darya'), ('163239', 'Naomi'), ('1633', 'Louise'), ('164', 'Donika'), ('164900', 'Lenka'), ('16494', 'Nanuli'), ('165013', 'Rebecca'), ('165477', 'Erika'), ('1657', 'Anette'), ('16621', 'Valeriya'), ('16663', 'Daniella'), ('166760', 'Brenda'), ('167', 'Farah'), ('1671', 'Luisa'), ('1676', 'Imane Maelle'), ('1678', 'Veronica M'), ('1679', 'Hayley'), ('16790', 'Marcela'), ('168', 'Denise Antonela'), ('168', 'Rebeca'), ('16886', 'Rocio'), ('169', 'Lidia'), ('169', 'Selin'), ('169371', 'Annika'), ('169500', 'Vesna'), ('1696', 'Li'), ('170', 'Nevena'), ('17020', 'Romana Caroline'), ('170617', 'Daria'), ('17078', 'Ya Hsuan'), ('171', 'Melissa Ishuan'), ('17185', 'Lucia'), ('172', 'Annie'), ('172004', 'Kai Chen'), ('172431', 'Paula'), ('1726', 'Chiraz'), ('1728', 'Yuriko'), ('173', 'Leslie'), ('17382', 'Indy'), ('1744', 'Sri Vaishnavi'), ('1748', 'Yasmine'), ('17514', 'Patrycja'), ('17577', 'Krista'), ('17587', 'Fernanda'), ('17597', 'Danica'), ('176', 'Mi Jeong'), ('177170', 'Kurumi'), ('177458', 'Lara'), ('178', 'Sarvinoz'), ('17819', 'Jesika'), ('1788', 'Mayar'), ('179', 'Weronika Jasmina'), ('1795', 'Noelle'), ('17967', 'Anhelina'), ('17975', 'Sanaz'), ('18', 'Constanze'), ('18', 'Gulchekhra'), ('18', 'Jamilya'), ('18', 'Shiori'), ('18', 'Terri'), ('180', 'Miranda'), ('1801033', 'Agnieszka'), ('181', 'Pei Ju'), ('182', 'Yoo Ri'), ('18210', 'So Ra'), ('18211', 'Elixane'), ('18219', 'Fiona'), ('1822', 'Luisa Marie'), ('1828', 'Yukun'), ('18286', 'Marketa'), ('1832', 'Petia'), ('18371', 'Sofiya'), ('184', 'Yujia'), ('1848', 'Georgia Andreea'), ('185', 'Maria Agustina'), ('1856', 'Yelena'), ('1858', 'Mi Rae'), ('1864', 'Tornado Alicia'), ('187', 'Chantelle'), ('187', 'Xin Yu'), ('1873', 'Haruna'), ('18781', 'Vojislava'), ('18824', 'Celine'), ('1884', 'Min'), ('1884', 'Trang'), ('1892', 'Maria Constanza De Las Mercedes'), ('1894', 'Katherine Gabriela'), ('1899', 'Kristy'), ('1901', 'Agata'), ('19048', 'Angelina'), ('19065', 'Despina'), ('1906587', 'Svetlana'), ('19092', 'Bernarda'), ('190997', 'Jamie'), ('191', 'Alexandria'), ('1917', 'Magali'), ('19173', 'Mai'), ('1920', 'Beatriz Maria'), ('19223', 'Na Ri'), ('192296', 'Severine'), ('1923', 'Dasha'), ('1929137', 'Vera'), ('193362', 'Tereza'), ('1936', 'Karine'), ('193767', 'Mandy'), ('19446', 'Aryna'), ('1945', 'Napatsakorn'), ('19495', 'Ximena'), ('195', 'Saana'), ('1955', 'Joana'), ('1958404', 'Petra'), ('1960', 'Lilla'), ('1962', 'Anaeve'), ('1977', 'Mirabelle'), ('1978', 'Eden'), ('197904', 'Patricia'), ('198', 'Shakhnoza'), ('1987', 'Viktoryia'), ('1990', 'Amina'), ('1991', 'Jillian'), ('1997', 'Margarida'), ('19989', 'Yi'), ('2', 'Olawaseun'), ('200', 'Melissa'), ('201', 'Mihoki'), ('201173', 'Nina'), ('201258', 'Mariana'), ('20132', 'Chayenne'), ('20142', 'Kanae'), ('201856', 'Renata'), ('20196', 'Melis'), ('202', 'Aneta'), ('2020', 'Samira'), ('202172', 'Camila'), ('20236', 'Zhaoxuan'), ('2025', 'Noelia'), ('20269', 'Yumi'), ('202697', 'Casey'), ('202780', 'Heather'), ('2034', 'Qiu Yu'), ('20368', 'Elizabeth'), ('203782', 'Misaki'), ('204801', 'Eugenie'), ('20481', 'Marija'), ('2052', 'Zalina'), ('206', 'Almudena'), ('206', 'Mariia'), ('2061', 'Momoko'), ('2061', 'Saray'), ('206375', 'Yuliya'), ('206981', 'Evgeniya'), ('207', 'Lauryn'), ('2070', 'Manca'), ('2076949', 'Caroline'), ('208108', 'Sesil'), ('20869', 'Cory Ann'), ('209', 'Parris'), ('2094', 'Ivania'), ('20989', 'Eugeniya'), ('21', 'Ana Luisa'), ('21', 'Avgusta'), ('21', 'Betina'), ('21', 'Julia Mansano'), ('21', 'Zeynep  Sena'), ('210', 'Maud'), ('210101', 'Kveta'), ('21152', 'Storm'), ('21205', 'Miharu'), ('2122', 'Shakhlo'), ('21261', 'Fatma'), ('2127', 'Szabina'), ('2127', 'Tea'), ('2133', 'Macarena'), ('2133', 'Ornella'), ('21340', 'Piia'), ('21360', 'Yue Yue'), ('2141', 'Ana Paula'), ('214121', 'Kiki'), ('21417', 'Korina'), ('2142854', 'Victoria'), ('215', 'Deria'), ('21599', 'Ankita'), ('21624', 'Antonia'), ('2166', 'Zhanlan'), ('21685', 'Francoise'), ('21728', 'Agustina'), ('2177', 'Anita'), ('219', 'Adnya'), ('219', 'Agata Jadwiga'), ('219', 'Maureen'), ('2191', 'Yuki Kristina'), ('22', 'Caty'), ('22', 'Layne'), ('22', 'Nikita'), ('221', 'Inger'), ('2216', 'Liz Tatiane'), ('221695', 'Silvia'), ('2217', 'Ai Wen'), ('2221', 'Clelia'), ('2221', 'Vendula'), ('224', 'Hao Ching'), ('224', 'Nattawadee'), ('224', 'Sandy'), ('22443', 'Yi Jing'), ('2249', 'Theo'), ('225', 'May'), ('22578', 'Vlada'), ('2258', 'Zuzanna'), ('225987', 'Lesia'), ('226', 'Aimee'), ('226', 'Mariaryeni'), ('2266', 'Madrie'), ('2275', 'Sadafmoh'), ('228', 'Andjela'), ('228', 'Rafaela'), ('2280', 'Kajsa'), ('22840', 'Miyabi'), ('228538', 'Akgul'), ('2287', 'Eleanor'), ('229', 'Kanako'), ('229391', 'Yung Jan'), ('22977', 'Sherazad'), ('22978', 'Quirine'), ('230', 'Micaela'), ('230262', 'Tatjana'), ('23195', 'Riko'), ('2321', 'Ashvarya'), ('2338', 'Anamika'), ('23411', 'Liga'), ('235', 'Alessandra'), ('23564', 'Montserrat'), ('235721', 'Coco'), ('2358', 'Alice Andrada'), ('236', 'Shiran'), ('2362', 'Libby'), ('23620', 'Deniz'), ('23668', 'Maya'), ('2369', 'Aliona'), ('237', 'Kaylah'), ('2371', 'Ho Ching'), ('2378', 'Shanshan'), ('238', 'Aselya'), ('238', 'Gyulnara'), ('238803', 'Alberta'), ('23897', 'Lavinia'), ('23968', 'Miyu'), ('23976', 'Doroteja'), ('24', 'Christie'), ('24', 'Emilija'), ('24', 'Hollie'), ('24', 'Jaimy Gayle'), ('24', 'Pei Hsuan'), ('24', 'Rui'), ('24', 'Ya'), ('24', 'Yihong'), ('2400', 'Ulyana'), ('240195', 'Greta'), ('2403', 'Ioana Diana'), ('24062', 'Keren'), ('240762', 'Cara'), ('241', 'Pamela'), ('24184', 'Aranza'), ('242', 'You Na'), ('2421', 'Ana Bianca'), ('242619', 'Michaella'), ('24279', 'Yuxuan'), ('243', 'Pippa'), ('2433', 'Ainhoa'), ('2434', 'Maddison'), ('2438', 'Christine'), ('2446', 'Eetee'), ('244807', 'Lauren'), ('245', 'Angela'), ('245139', 'Mathilde'), ('24523', 'Nungnadda'), ('24542', 'Miki'), ('24569', 'Mi'), ('24595', 'Katharina'), ('247237', 'Stefanie'), ('2484', 'Giorgia'), ('2487', 'Britt'), ('2489', 'Malin'), ('24897', 'Stefania'), ('249', 'Kamilla'), ('249446', 'Edina'), ('250056', 'Catalina'), ('251', 'Naz'), ('2515436', 'Jelena'), ('25166', 'Constance'), ('25183', 'Alyona'), ('2524', 'Alessia'), ('2526', 'Natia'), ('253', 'Ivone'), ('2531', 'Nicky'), ('253320', 'Alla'), ('253471', 'Romina'), ('254491', 'Yvonne'), ('254520', 'Karin'), ('25496', 'Marie'), ('255', 'Larikah'), ('255', 'Vaniya'), ('2570', 'Vladyslava'), ('259', 'Nam Yeon'), ('259116', 'Nuria'), ('2592', 'Rachael'), ('26', 'Beauty'), ('26059', 'Kyung Mi'), ('26077', 'Tammi'), ('2609', 'Melina'), ('26185', 'Na Lae'), ('26209', 'Jade'), ('26226', 'Viktoriya'), ('26280', 'Peangtarn'), ('2634', 'Riya'), ('2641', 'Saska'), ('265', 'Alessondra'), ('26585', 'Chang'), ('2661', 'Nadja'), ('266197', 'Sandra'), ('2662', 'Liubov'), ('26624', 'Basak'), ('266251', 'Zuzana'), ('267679', 'Marta'), ('26779', 'Chen'), ('268277', 'Anastasija'), ('268372', 'Jana'), ('26897', 'Ekaterine'), ('269', 'Astrid Wanja'), ('269', 'Paula Andrea'), ('26950', 'Ilona'), ('27', 'Carlota'), ('27', 'Sabina Elena'), ('27', 'Sarlota'), ('27', 'Vilma Y'), ('27', 'Yasmina'), ('270102', 'Kimiko'), ('27011', 'Evelyn'), ('2706', 'Nives'), ('27061', 'Beatrice'), ('2710', 'Josepha'), ('27118', 'Ulrikke'), ('272', 'Kimika'), ('272', 'Mirjam'), ('272889', 'Sania'), ('2738', 'Dhruthi'), ('27452', 'Rushmi'), ('27462', 'Jacqueline'), ('274936', 'Su Wei'), ('275', 'Yanni'), ('275255', 'Urszula'), ('275364', 'Chanelle'), ('27580', 'Hiroko'), ('276', 'Chompoothip'), ('276', 'Sirui'), ('277', 'Chengyiyi'), ('2772', 'Zoe'), ('27804', 'Ysaline'), ('2782', 'Hanna'), ('279', 'Milena'), ('279', 'Nermeen'), ('27997', 'Lena'), ('28', 'Roosh'), ('280', 'Antonela'), ('28045', 'Adriana'), ('28098', 'Nathalia'), ('281', 'Laura D'), ('281', 'Ye Xin'), ('281', 'Yuan'), ('2820', 'Snehadevi S'), ('282445', 'Mona'), ('283166', 'Bojana'), ('284', 'Meritxell'), ('285', 'Yoko'), ('2850', 'Berfu'), ('286', 'Julita'), ('286', 'Lesedi Sheya'), ('2864', 'Gozal'), ('2875425', 'Venus'), ('2877', 'Zoe Gwen'), ('288', 'Ailen'), ('288', 'Ana Gabriela'), ('289', 'Carson'), ('289', 'Giovanna'), ('290', 'Ghislaine'), ('290299', 'Melinda'), ('291', 'Ivanka'), ('291', 'Vanja'), ('292', 'Ina'), ('29214', 'Romana'), ('2922', 'Brianna'), ('29250', 'Nastja'), ('2927', 'Mizuno'), ('2929', 'Agni'), ('293366', 'Irina Camelia'), ('2935', 'Giuliana'), ('294', 'Haine'), ('294', 'Kei'), ('294', 'Maria Jesus'), ('29442', 'Annalisa'), ('296', 'Maria Del Rosario'), ('2961', 'Sowjanya'), ('296736', 'Maria Elena'), ('298', 'Kseniia'), ('298', 'Violetta'), ('29852', 'Sung Hee'), ('299530', 'Vania'), ('299698', 'Irina'), ('3', 'Arina Gabriela'), ('3', 'Himari'), ('3', 'Judith'), ('3', 'Marijana'), ('3', 'Phenomena'), ('30', 'Brindtha'), ('30', 'Damira'), ('30', 'Lyann'), ('30', 'Zhou'), ('3002', 'Jiaxi'), ('30035', 'Katie'), ('30136', 'Ganna'), ('3018', 'Verena'), ('30191', 'Viktoria'), ('3029', 'Emina'), ('302957', 'Galina'), ('30304', 'Justyna'), ('304', 'Abbi'), ('304', 'Lulu'), ('304', 'Tamari'), ('30401', 'Raquel'), ('30669', 'Vanesa'), ('3073', 'Malou'), ('308', 'Katrine Isabel'), ('308', 'Rona'), ('3085', 'Steffi'), ('309', 'Mitsumi'), ('3094', 'Nan Nan'), ('30972', 'Nicha'), ('309990', 'Ayumi'), ('310215', 'Christina'), ('3112', 'Manisha'), ('312', 'Blanca'), ('3121', 'Dana'), ('3127', 'Karla'), ('313187', 'Pauline'), ('3133', 'Irene'), ('314747', 'Elina'), ('315', 'Xiyu'), ('316', 'Malene'), ('316', 'Sasa'), ('31620', 'Cindy'), ('3165', 'Ronit'), ('317', 'Cristina Madalina'), ('31741', 'Gioia'), ('3187', 'Bunyawi'), ('3193', 'Karman'), ('32', 'Moyuka'), ('32', 'Yarden'), ('320', 'Suellen'), ('3200', 'Kyle'), ('320083', 'Eva'), ('3208', 'Paulina'), ('32169', 'Karen'), ('322202', 'Tamira'), ('323', 'Malika'), ('323', 'Maria Andrea'), ('323527', 'Alison'), ('324', 'Kelia'), ('324', 'Suzuho'), ('32445', 'Mayo'), ('325216', 'Polona'), ('3255', 'Shweta'), ('32581', 'Claudia'), ('3298', 'Denise'), ('33', 'Anne Sophie'), ('33', 'Daphne'), ('33', 'Intissar'), ('33', 'Lorenza'), ('33', 'Marcelina'), ('33', 'Nataliya'), ('330', 'Karyn'), ('33054', 'Allie'), ('331434', 'Mirjana'), ('333', 'Tijana'), ('33301', 'Chia Jung'), ('333150', 'Jarmila'), ('33388', 'Fangzhou'), ('33550', 'Nicola'), ('336', 'Rosie'), ('336', 'Shuyue'), ('336', 'Sofico'), ('3361', 'Tjasa'), ('33624', 'Audrey'), ('33672', 'Su Jeong'), ('3374', 'Chun Yan'), ('338', 'Valentina'), ('33822', 'Laura Ioana'), ('34', 'Kate'), ('340', 'Melisa'), ('3426', 'Jeannine'), ('344', 'Suzan'), ('3445', 'Lu'), ('34453', 'Jasmin'), ('3453', 'Ju Eun'), ('34570', 'Eri'), ('34647', 'Kristie'), ('3466', 'Matilda'), ('3470', 'Borislava'), ('3471', 'Ingrid'), ('34795', 'Tatiana'), ('34796', 'Chieh Yu'), ('3497', 'Ola'), ('351', 'Belen'), ('352458', 'Sloane'), ('354', 'Desirae'), ('354', 'Sanae'), ('355', 'Jodie Anna'), ('358', 'Chisa'), ('359', 'Frances'), ('359013', 'Jill'), ('3592', 'Yoon Young'), ('359374', 'Anna Lena'), ('3594', 'Sunam'), ('35957', 'Aleksandrina'), ('36', 'Ange Oby'), ('36', 'Eugenia'), ('36', 'Justina'), ('3613355', 'Maria'), ('3621', 'Anouk'), ('3623', 'Varunya'), ('362372', 'Marina'), ('3627', 'Carolina Meligeni Rodrigues'), ('363', 'Katharine'), ('363', 'Oliwia'), ('363', 'Wiktoria'), ('3633', 'Haruka'), ('3642', 'Rutuja'), ('3657', 'Michika'), ('366', 'Yijia'), ('36696', 'Ana Clara'), ('36714', 'Vivian'), ('36889', 'Carolina'), ('369810', 'Alisa'), ('37', 'Vinciane'), ('371035', 'Lourdes'), ('371140', 'Ksenia'), ('3714', 'Paula Catalina'), ('371662', 'Bethanie'), ('3724', 'Kanami'), ('37384', 'Paula Cristina'), ('3748', 'Khristina'), ('376', 'Estela'), ('376', 'Yekaterina'), ('3763', 'Vaszilisza'), ('377', 'Lusine'), ('377', 'Theresa'), ('37817', 'Kai Lin'), ('3783', 'Ying'), ('37981', 'Natsumi'), ('38', 'Cameron'), ('38086', 'Mari'), ('3809', 'Zarah'), ('3811', 'Olesya'), ('38116', 'Remi'), ('382', 'Oyku'), ('3825', 'Miriam'), ('383077', 'Kirsten'), ('383495', 'Aravane'), ('385', 'Alana'), ('38501', 'Ayu Fani'), ('385636', 'Melanie'), ('38651', 'Gail'), ('38793', 'Roxane'), ('3880', 'Emi'), ('38850', 'Taylor'), ('3894', 'Bernice'), ('39', 'Arthi'), ('39', 'Chanikarn'), ('39', 'Gulnaz'), ('39', 'Laylo'), ('390', 'Maxine'), ('390148', 'Agnes'), ('3905', 'Kaitlyn'), ('3908', 'Ester'), ('39102', 'Yana'), ('392', 'Draginja'), ('39270', 'Jovana'), ('3928', 'Helene'), ('39307', 'Sophie'), ('39352', 'Ipek'), ('39418', 'Justine'), ('3942', 'Despoina'), ('395', 'Iana'), ('395', 'Mahitha'), ('39523', 'Mailen'), ('39687', 'Yafan'), ('39782', 'Liezel'), ('39960', 'Shiho'), ('39989', 'Estelle'), ('4', 'Mariona'), ('40', 'Johana'), ('40', 'Lorraine M'), ('40', 'Mei Xu'), ('40', 'Olaya'), ('40', 'Ralina'), ('40060', 'Tamaryn'), ('401409', 'Varvara'), ('401857', 'Magdalena'), ('403', 'Kwan Yau'), ('403127', 'Paola'), ('40341', 'Lin'), ('40410', 'Ines'), ('404915', 'Yaroslava'), ('405', 'Eleonora'), ('4052', 'Alona'), ('4053', 'Cornelia'), ('406', 'Inci'), ('4060', 'Mariam'), ('40633', 'Wen Hsin'), ('407', 'Megumi'), ('40823', 'Danielle'), ('4093', 'Julieta Lara'), ('41', 'Eva Marie'), ('410', 'Gulben'), ('410', 'Karina Kristina'), ('410', 'Kelsey'), ('4106', 'Sharmada'), ('4122', 'Jessika'), ('4128', 'Pavla'), ('412872', 'Garbine'), ('413', 'Hana'), ('413', 'Ushna'), ('413759', 'Maria Jose'), ('414', 'Jin Ju'), ('414', 'Juliana'), ('41575', 'Amandine'), ('416', 'Kaitlin'), ('417', 'Meiling'), ('41792', 'Teodora'), ('41925', 'Darija'), ('4196', 'Yan'), ('4197', 'Lea'), ('42', 'Milagros'), ('42', 'Tatia'), ('42', 'Wan Yi'), ('4216', 'Linda'), ('4232828', 'Serena'), ('42527', 'Vasilisa'), ('4258', 'Raluca Georgiana'), ('42676', 'Sachie'), ('427', 'Mihika'), ('42773', 'Chiaki'), ('42925', 'Lesley'), ('4294', 'Oana Georgeta'), ('43', 'Emilia'), ('43020', 'Tetyana'), ('4314', 'Marine'), ('434692', 'Arantxa'), ('435038', 'Kateryna'), ('43550', 'Myrtille'), ('4356', 'Charlotte'), ('4368', 'Hirono'), ('43755', 'Patricia Maria'), ('43779', 'Elise'), ('4380', 'Naiktha'), ('43862', 'Jasmina'), ('439179', 'Eleni'), ('44', 'Federica Joe'), ('440', 'Genevieve'), ('440', 'Naima'), ('443', 'Ramu'), ('443695', 'Iveta'), ('444303', 'Katarina'), ('44497', 'Mallory'), ('447434', 'Nicole'), ('4499', 'Sonja'), ('45', 'Idia'), ('45', 'Talya'), ('45', 'Yuval'), ('45115', 'Leticia'), ('451414', 'Aleksandra'), ('452', 'Yu Jin'), ('4535', 'Xu Liu'), ('454', 'Victoire'), ('4543', 'Tyra'), ('455', 'Dominique'), ('456', 'Lamis'), ('456422', 'Tsvetana'), ('457043', 'Sorana'), ('4580', 'Kim'), ('45884', 'Catherine Cartan'), ('461', 'Sarahi'), ('4611', 'Shivika'), ('4612', 'Jia Qi'), ('46124', 'Shuko'), ('4619', 'Adrijana'), ('462', 'Kirsten Andrea'), ('46355', 'Jin A'), ('464', 'Andrea Renee'), ('464', 'Jara'), ('464', 'Sari'), ('4643', 'Hanyu'), ('465', 'Karolayne'), ('467', 'Ida'), ('467', 'Kady'), ('467', 'Simran Kaur'), ('468', 'Gabriela Nicole'), ('469', 'Rachel'), ('46908', 'Anais'), ('4703', 'Dunja'), ('4705', 'Kelly'), ('4709', 'Elisabeth'), ('472', 'Erica'), ('472', 'Joanna'), ('47282', 'So Jung'), ('4743', 'Iris'), ('476', 'Tinatin'), ('47651', 'Nigina'), ('4766', 'Ingrid Alexandra'), ('476768', 'Madison'), ('4777', 'Isabelle'), ('47854', 'Valentyna'), ('47867', 'Ye Ra'), ('4787', 'Margot'), ('4789', 'Xiao'), ('48', 'Georgiana'), ('48', 'Leylah Annie'), ('48', 'Mercedes'), ('480', 'Anushka'), ('480', 'Eliza'), ('480', 'Sonia'), ('4809', 'Klaudia'), ('48117', 'Jia Jing'), ('4831', 'Kimberly'), ('484', 'Antonina'), ('484', 'Olena'), ('484140', 'Sofia'), ('48788', 'Asia'), ('48811', 'Ani'), ('48857', 'Dalila'), ('49', 'Ronke'), ('490', 'Adeliya'), ('491', 'Nikol'), ('49122', 'Chi Chi'), ('4914', 'Chalena'), ('49207', 'Anna Giulia'), ('4941', 'Ao'), ('49412', 'Stanislava'), ('4962', 'Kotomi'), ('497', 'Stefana'), ('49767', 'Sachia'), ('49784', 'Sabina'), ('4980', 'Josephine'), ('4987', 'Catherine'), ('49980', 'Ashley'), ('5', 'Chelsea'), ('50', 'Ege'), ('500', 'Lindsey'), ('5007', 'Jaimee'), ('50184', 'Bibiane'), ('502', 'Susan'), ('5027', 'Nadezda'), ('505', 'Yuki'), ('5051', 'Tayisiya'), ('5057', 'Xiaodi'), ('50700', 'Louisa'), ('51', 'Andra Maria'), ('510', 'Priscila'), ('511', 'I Hsuan'), ('511', 'Magalie'), ('512490', 'Karolina'), ('515', 'Katya'), ('5155', 'Ashling'), ('515957', 'Barbora'), ('5173', 'Ayano'), ('51803', 'An Sophie'), ('519208', 'Virginie'), ('52', 'Ahsha'), ('52', 'En Pei'), ('52', 'Ilay'), ('52', 'Jia'), ('5214', 'Abbie'), ('5216', 'Alicja'), ('522', 'Libi'), ('522', 'Sharon Sanchana'), ('52274', 'Conny'), ('525', 'Maegan'), ('526', 'Ella'), ('5269', 'Anne Liz'), ('52889', 'Emily'), ('531', 'Si Qi'), ('53401', 'Barbara'), ('53480', 'Sally'), ('5356', 'Erin'), ('536', 'Elizabeta'), ('53610', 'Sheng Nan'), ('537', 'Busra'), ('5372', 'Ofri'), ('538', 'Clementina Eugenia'), ('5387', 'Raveena'), ('5393', 'Kimberley'), ('54', 'Anke'), ('54', 'Maftuna'), ('541', 'Emiliya'), ('54140', 'Tamara'), ('5416', 'Jaqueline Adina'), ('54172', 'Lyudmyla'), ('542', 'Meng Ning'), ('5422', 'Alix'), ('5425', 'Ioana Loredana'), ('5425', 'Nidhi'), ('543', 'Ivette'), ('54340', 'Varatchaya'), ('545', 'Danijela'), ('54798', 'Tara'), ('5493', 'Karina Ildor'), ('553107', 'Johanna'), ('555', 'Kristina N'), ('556', 'Rio'), ('5566', 'Ria'), ('559', 'Yuqi'), ('5592', 'Makiho'), ('55981', 'Misa'), ('5604', 'Whitney'), ('5619', 'Dayana'), ('562', 'Carlotta'), ('56212', 'Kumiko'), ('56242', 'Ons'), ('565', 'Molly'), ('56596', 'Nadiya'), ('567', 'Eleonore'), ('56817', 'Federica'), ('568191', 'Klara'), ('5683', 'Charlene'), ('56853', 'Oceane'), ('5687', 'Prarthana G'), ('571', 'Ayan'), ('574', 'Camille'), ('57585', 'Tina'), ('576', 'Guillermina'), ('57745', 'Alice'), ('578964', 'Laura'), ('5803', 'Rebeka'), ('581', 'Sybille'), ('5818', 'Klaartje'), ('58279', 'Oksana'), ('5866', 'Kamonwan'), ('587309', 'Monica'), ('58741', 'Ashleigh'), ('5880', 'Kelly S'), ('590911', 'Sabine'), ('59412', 'Cristina'), ('594217', 'Lisa'), ('594281', 'Tamarine'), ('5944', 'Harmony'), ('595', 'Laili'), ('596', 'Michele Alexandra'), ('59671', 'Nao'), ('596901', 'Alize'), ('597', 'Ryann'), ('597', 'Shuo'), ('59775', 'Evgenia'), ('59997', 'Liana Gabriela'), ('6', 'Loudmilla'), ('6', 'Madina'), ('6', 'Muazzez'), ('6', 'Shreya'), ('60', 'Tamar'), ('601693', 'Kristina'), ('602453', 'Yanina'), ('605', 'Andie K'), ('60646', 'Yi Fan'), ('60702', 'Amra'), ('6078', 'Laetitia'), ('608309', 'Stephanie'), ('60908', 'Pemra'), ('610820', 'Jie'), ('611', 'Jil Nora'), ('61196', 'Aliaksandra'), ('612072', 'Timea'), ('613', 'Wendy Qi Wen'), ('614', 'Nikki'), ('6146', 'Valerie'), ('6159', 'Chiara'), ('6168', 'Greetje'), ('6179', 'Gabriella'), ('61839', 'Yi Miao'), ('62', 'Ann'), ('62252', 'Risa'), ('625', 'Ksenija'), ('6256', 'Csilla'), ('625836', 'Kaia'), ('628', 'Jazzamay'), ('62861', 'Chanel'), ('6288', 'Yevgeniya'), ('62938', 'Madalina'), ('62977', 'Elizaveta'), ('63', 'Jule'), ('63', 'Milica'), ('63013', 'Nudnida'), ('6341', 'Svenja'), ('636', 'Elizaveta Anna'), ('6369', 'Dianne'), ('639', 'Dan Ni'), ('63998', 'Bianca'), ('64', 'Jada'), ('64', 'Reina'), ('64', 'Vita'), ('640', 'Akvile'), ('6404', 'Pilar'), ('641', 'Qianqian'), ('645', 'Ludmila'), ('64525', 'Ling'), ('646', 'Quinn'), ('6470', 'Vladimira'), ('647811', 'Anne'), ('648', 'Ashmitha'), ('648', 'Yawna'), ('649', 'Natella'), ('65', 'Emma Christine'), ('65152', 'Nastassja'), ('6525', 'Freya'), ('653', 'Kennedy'), ('653', 'Mary'), ('6542', 'Lucy'), ('6547', 'Elena Teodora'), ('65522', 'Denisa'), ('6564', 'Seo Kyung'), ('6573', 'Pernilla'), ('6591', 'Sun Jung'), ('66', 'Salma'), ('662', 'Blessing'), ('66271', 'Reka Luca'), ('662926', 'Shahar'), ('664', 'Phillis'), ('6650', 'Anna Arina'), ('6650', 'Seung Yeon'), ('667', 'Chi Fan'), ('6688', 'Isabel'), ('669546', 'Carla'), ('67017', 'Dinah'), ('672', 'Leonie'), ('67459', 'Carly'), ('676', 'Breaunna'), ('677', 'Angeliki'), ('677', 'Giada'), ('677', 'Yoshimi'), ('6777', 'Chelsey'), ('678793', 'Anabel'), ('679', 'Chia Hsien'), ('68', 'Aastha'), ('6809', 'Lidziya'), ('681', 'Se Jin'), ('6810', 'Sabrina'), ('682', 'Yuenu'), ('68207', 'Amanda'), ('683', 'Marcela Guimaraes'), ('683', 'Qianhui'), ('687', 'Guiomar'), ('688', 'Mallaurie'), ('688', 'Sinead'), ('68925', 'Jing Jing'), ('69', 'Esen'), ('6906', 'Morgane'), ('69242', 'Mihaela'), ('6948', 'Ionela Andreea'), ('697', 'Linnea'), ('699', 'Radina'), ('7', 'Axana'), ('7', 'Zhibek'), ('70', 'Savannah'), ('701', 'Komola'), ('702', 'Mara'), ('702', 'Zeel'), ('7027', 'Dea'), ('703', 'Aida'), ('704', 'Kassandra'), ('70504', 'Chin Wei'), ('706', 'Thai Sa Grana'), ('70613', 'Grace'), ('7062', 'Brooke'), ('709', 'Desiree'), ('71', 'Aldana'), ('71', 'Vishesh'), ('71', 'Yasmyn'), ('71072', 'Anett'), ('713', 'Ebony'), ('714', 'Isabela'), ('7147', 'Etsuko'), ('715', 'Madeleine'), ('716', 'Siqi'), ('71645', 'Vanessa'), ('7165', 'Tess'), ('717', 'Xiaorong'), ('7179', 'Ji Hee'), ('72', 'Abir'), ('72', 'Andressa Cristina'), ('72', 'Carolyn'), ('72', 'Janja'), ('72', 'Liniques'), ('72', 'Mi Zhuoma'), ('72', 'Nastassia'), ('724638', 'Simona'), ('725', 'Brandy'), ('72682', 'Maria Joao'), ('73', 'Yang'), ('73192', 'Veronika'), ('7323', 'Patty'), ('733', 'Lee'), ('7353', 'Dijana'), ('73589', 'Noppawan'), ('736', 'Treta'), ('7367', 'Hua Chen'), ('74', 'Iulia Maria'), ('74', 'Zinovia'), ('741', 'Rashmi'), ('742', 'Akilah'), ('7431', 'Tomoko'), ('744', 'Eveliina'), ('7444', 'Ayla'), ('74453', 'Andreja'), ('7486', 'Cristiana'), ('75', 'Beatriz Magdalena'), ('75', 'Sean'), ('75', 'Yosr'), ('750', 'Leolia'), ('75337', 'Tetiana'), ('75414', 'Cristina Andreea'), ('756', 'Magy'), ('75850', 'Anastasiya'), ('760', 'Nour'), ('7605', 'Deborah'), ('761', 'Jainy'), ('762', 'India'), ('764', 'Tanaporn'), ('76586', 'Michaela'), ('76747', 'Polina'), ('77', 'Vicky'), ('772', 'Yuanyi'), ('773929', 'Olga'), ('775', 'Guzal'), ('77519', 'Luksika'), ('7755', 'Fang Ying'), ('776', 'Karola Patricia'), ('7772', 'Elena Gabriela'), ('778', 'Marta Huqi'), ('7797', 'Hulya'), ('78', 'Ferny'), ('78', 'Hazal'), ('780', 'Sabastiani'), ('78204', 'Sacha'), ('78265', 'Margarita'), ('7843', 'Katherine'), ('78461', 'Sarah'), ('78513', 'Nikola'), ('7874', 'Usue Maitane'), ('7898', 'Lisa Maria'), ('791', 'Aymet'), ('79511', 'Viktorija'), ('7975', 'Ching Wen'), ('79958', 'Dia'), ('7996', 'Ayaka'), ('7998', 'Gaia'), ('7999', 'Gracia'), ('80', 'Fatyha'), ('801', 'Sherry'), ('802', 'Asiya'), ('803', 'Rosalia'), ('804', 'Josie'), ('8072', 'Stamatia'), ('8079', 'Ellie'), ('809611', 'Roberta'), ('811', 'Habiba'), ('81222', 'Jennifer'), ('814', 'Berta'), ('8145', 'Ting Fei'), ('8146', 'Nicoleta Catalina'), ('8174', 'Carmen'), ('8180', 'Hae Sung'), ('8203', 'Priscilla'), ('822', 'Jawairiah'), ('823', 'Ena'), ('8268', 'Sylwia'), ('8284', 'Lisanne'), ('83', 'Akiho'), ('83', 'Maileen'), ('8301', 'Hyun Hui'), ('8305', 'Luciana'), ('83476', 'Isabella'), ('836', 'Anhzelika'), ('83659', 'Tadeja'), ('837', 'Lynn'), ('84', 'Yukako'), ('8406', 'Kaori'), ('84184', 'Richel'), ('843', 'Tamachan'), ('8441', 'Bermet'), ('84446', 'Akiko'), ('8448', 'Rishika'), ('84543', 'Veronica'), ('85', 'Ahlam'), ('85', 'Dilara'), ('85', 'Kariann'), ('85022', 'Emma'), ('8507', 'Danielle Rose'), ('85425', 'Maryna'), ('857', 'Dariya'), ('857', 'Naoko'), ('8589', 'Daiana'), ('8592', 'Ji Young'), ('86', 'Ki Ryang'), ('8608', 'Harriet'), ('861', 'Janneke'), ('8676', 'Ting Jr'), ('87', 'Leticia Garcia'), ('87', 'Siyu'), ('87', 'Zaineb'), ('870', 'Hyojung'), ('8700', 'Oleksandra'), ('87263', 'Elitsa'), ('8744', 'Xin'), ('876', 'Lutfiye'), ('87844', 'Iryna'), ('879', 'Wushuang'), ('87958', 'Danka'), ('880', 'Rosalie'), ('882', 'Eliessa'), ('8832', 'Alena'), ('88369', 'Irena'), ('88542', 'Heidi'), ('887', 'Amelie'), ('8900', 'Pei Chi'), ('891796', 'Julia'), ('8918', 'Vivienne'), ('89361', 'Florencia'), ('8939', 'Dalia'), ('894', 'Keri'), ('898', 'Fatimah'), ('9', 'Adva'), ('9', 'Frederikke'), ('9', 'Rana'), ('9', 'Warona'), ('9', 'Yu Tong'), ('90', 'Elodie'), ('90', 'Michela'), ('90', 'Viktoriia'), ('9001', 'Syna'), ('9036', 'Kyoka'), ('90451', 'Carina'), ('905', 'Blair'), ('905', 'Margaux'), ('906', 'Satsuki'), ('9064', 'Mayya'), ('907', 'Anna Katalina'), ('907', 'Constanza'), ('908', 'Jazmin'), ('9093', 'Carolin'), ('910', 'Karoline'), ('911', 'Romy'), ('91117', 'Lina'), ('9116', 'Tessah'), ('9120', 'Nika'), ('913829', 'Shuai'), ('9147', 'Camelia Elena'), ('914981', 'Sara'), ('916', 'Iga'), ('9180', 'Sofya'), ('918746', 'Dominika'), ('919', 'Kanika'), ('92', 'Aina'), ('9202', 'Raluca Elena'), ('920433', 'Andrea'), ('9227', 'Destanee'), ('923', 'Jessy'), ('93', 'Manya'), ('9318', 'Prerna'), ('9338', 'Sakiko'), ('934', 'Claudia Gianina'), ('934', 'Plobrung'), ('9355', 'Karina'), ('93730', 'Katarzyna'), ('942', 'Kerstin'), ('95', 'Cecilie Lundgaard'), ('95', 'Sing Le'), ('9536', 'Neda'), ('955267', 'Alexandra'), ('957', 'Ratnika'), ('958', 'Cemre'), ('9593', 'Mana'), ('96', 'Aishwarya'), ('96', 'Jiaxue'), ('96', 'Mami'), ('96', 'Meiqi'), ('96', 'Minami'), ('96', 'Smriti'), ('96', 'Sophia'), ('960', 'Elke'), ('9600', 'Georgia'), ('9627', 'Nicolette'), ('9631', 'Hao Chen'), ('9634', 'Shilin'), ('964', 'Emily J'), ('966', 'Yeong Won'), ('96852', 'Arina'), ('97', 'Katyarina'), ('97', 'Laura Sofia'), ('97', 'Melany Solange'), ('97400', 'Natalia'), ('976', 'Eudice Wong'), ('9780', 'Di'), ('98', 'Hortencia'), ('980', 'Ariadna'), ('980', 'Nazari'), ('984', 'Rianna'), ('9846', 'Dejana'), ('98798', 'Beatriz'), ('99', 'Anne Marie'), ('99', 'Asha'), ('99', 'Diana Maria'), ('99', 'Zhima'), ('9926', 'Valentine'), ('993', 'Alicia'), ('9938', 'Min Hwa'), ('994', 'Franziska'), ('997', 'Vladica'), ('998', 'Yukina'), ('99836', 'Margalita')] != [('Aastha', '68'), ('Abbi', '304'), ('Abbie', '5214'), ('Abigail', '115293'), ('Abiodun', '120'), ('Abir', '72'), ('Adeliya', '490'), ('Adnya', '219'), ('Adriana', '28045'), ('Adrienn', '107'), ('Adrijana', '4619'), ('Adva', '9'), ('Afroditi', '156'), ('Agata', '1901'), ('Agata Jadwiga', '219'), ('Agne', '110'), ('Agnes', '390148'), ('Agnese', '13717'), ('Agni', '2929'), ('Agnieszka', '1801033'), ('Agustina', '21728'), ('Agustina Elena', '158'), ('Ah', '141'), ('Ahlam', '85'), ('Ahsha', '52'), ('Ai', '10751'), ('Ai Wen', '2217'), ('Aida', '703'), ('Aiko', '140108'), ('Ailen', '288'), ('Aimee', '226'), ('Aina', '92'), ('Ainhoa', '2433'), ('Aishwarya', '96'), ('Ajla', '116548'), ('Akari', '11873'), ('Akgul', '228538'), ('Aki', '14838'), ('Akiho', '83'), ('Akiko', '84446'), ('Akilah', '742'), ('Akvile', '640'), ('Alana', '385'), ('Alba', '1424'), ('Alberta', '238803'), ('Albina', '10507'), ('Aldana', '71'), ('Alejandra', '1578'), ('Aleksandra', '451414'), ('Aleksandrina', '35957'), ('Alena', '8832'), ('Alessandra', '235'), ('Alessia', '2524'), ('Alessondra', '265'), ('Alexa', '138782'), ('Alexandra', '955267'), ('Alexandria', '191'), ('Alexia', '12829'), ('Alexis', '13389'), ('Aliaksandra', '61196'), ('Alice', '57745'), ('Alice Andrada', '2358'), ('Alicia', '993'), ('Alicja', '5216'), ('Alina', '11393'), ('Aliona', '2369'), ('Alisa', '369810'), ('Alison', '323527'), ('Alix', '5422'), ('Alize', '596901'), ('Alla', '253320'), ('Allie', '33054'), ('Almudena', '206'), ('Alona', '4052'), ('Alory Regina Elorriaga', '155'), ('Alyona', '25183'), ('Amanda', '68207'), ('Amandine', '41575'), ('Amelie', '887'), ('Amina', '1990'), ('Aminat', '12708'), ('Amira', '157'), ('Amra', '60702'), ('Amrita', '159'), ('Amy', '10616'), ('An Sophie', '51803'), ('Ana', '1589674'), ('Ana Bianca', '2421'), ('Ana Clara', '36696'), ('Ana Gabriela', '288'), ('Ana Luisa', '21'), ('Ana Paula', '2141'), ('Ana Sofia', '15955'), ('Ana Victoria', '1367'), ('Anabel', '678793'), ('Anaeve', '1962'), ('Anais', '46908'), ('Anamika', '2338'), ('Anastasia', '1433335'), ('Anastasia Evgenyevna', '1235'), ('Anastasiia', '12'), ('Anastasija', '268277'), ('Anastasiya', '75850'), ('Anca', '101'), ('Anda', '160'), ('Andie K', '605'), ('Andjela', '228'), ('Andra Maria', '51'), ('Andrea', '920433'), ('Andrea Renee', '464'), ('Andreea', '1484'), ('Andreea Amalia', '1365'), ('Andreea Roxana', '12727'), ('Andreja', '74453'), ('Andressa Cristina', '72'), ('Andrina', '159'), ('Aneta', '202'), ('Anett', '71072'), ('Anette', '1657'), ('Ange Oby', '36'), ('Angela', '245'), ('Angelica', '13643'), ('Angeliki', '677'), ('Angelina', '19048'), ('Angelique', '1132514'), ('Anhelina', '17967'), ('Anhzelika', '836'), ('Ani', '48811'), ('Anita', '2177'), ('Anja', '11596'), ('Anke', '54'), ('Ankita', '21599'), ('Ann', '62'), ('Anna', '1017069'), ('Anna Arina', '6650'), ('Anna Giulia', '49207'), ('Anna Karolina', '107880'), ('Anna Katalina', '907'), ('Anna Lena', '359374'), ('Anna Maria', '1427'), ('Annalisa', '29442'), ('Anne', '647811'), ('Anne Liz', '5269'), ('Anne Marie', '99'), ('Anne Sophie', '33'), ('Annie', '172'), ('Annika', '169371'), ('Anouk', '3621'), ('Antonela', '280'), ('Antonia', '21624'), ('Antonina', '484'), ('Anushka', '480'), ('Ao', '4941'), ('Apichaya', '126'), ('Arabela', '11608'), ('Arantxa', '434692'), ('Aranza', '24184'), ('Aravane', '383495'), ('Ariadna', '980'), ('Arina', '96852'), ('Arina Gabriela', '3'), ('Arlinda', '154'), ('Arthi', '39'), ('Aryna', '19446'), ('Aselya', '238'), ('Asha', '99'), ('Ashleigh', '58741'), ('Ashley', '49980'), ('Ashling', '5155'), ('Ashmitha', '648'), ('Ashvarya', '2321'), ('Asia', '48788'), ('Asiya', '802'), ('Assia', '141'), ('Astra', '1083'), ('Astrid Wanja', '269'), ('Audrey', '33624'), ('Avgusta', '21'), ('Axana', '7'), ('Ayaka', '7996'), ('Ayan', '571'), ('Ayano', '5173'), ('Ayla', '7444'), ('Aymet', '791'), ('Ayu Fani', '38501'), ('Ayumi', '309990'), ('Azra', '11721'), ('Barbara', '53401'), ('Barbora', '515957'), ('Basak', '26624'), ('Beatrice', '27061'), ('Beatriz', '98798'), ('Beatriz Magdalena', '75'), ('Beatriz Maria', '1920'), ('Beauty', '26'), ('Belen', '351'), ('Belinda', '137327'), ('Benedetta', '11032'), ('Berfu', '2850'), ('Bermet', '8441'), ('Bernarda', '19092'), ('Bernice', '3894'), ('Berta', '814'), ('Bethanie', '371662'), ('Betina', '21'), ('Bhuvana', '1152'), ('Bianca', '63998'), ('Bianka', '1213'), ('Bibiane', '50184'), ('Blair', '905'), ('Blanca', '312'), ('Blessing', '662'), ('Boba', '123'), ('Bojana', '283166'), ('Borislava', '3470'), ('Boyan', '1465'), ('Brandy', '725'), ('Breaunna', '676'), ('Brenda', '166760'), ('Brianna', '2922'), ('Brienne', '12'), ('Brindtha', '30'), ('Britt', '2487'), ('Brittany', '1119'), ('Brooke', '7062'), ('Brynn', '1344'), ('Bunyawi', '3187'), ('Busra', '537'), ('Cagla', '119797'), ('Caitlin', '15218'), ('Camelia Elena', '9147'), ('Cameron', '38'), ('Camila', '202172'), ('Camila Vital', '136'), ('Camilla', '11714'), ('Camille', '574'), ('Cara', '240762'), ('Carina', '90451'), ('Carla', '669546'), ('Carlota', '27'), ('Carlotta', '562'), ('Carly', '67459'), ('Carmen', '8174'), ('Carmen Raluca', '1077'), ('Carol', '14213'), ('Carolin', '9093'), ('Carolina', '36889'), ('Carolina Meligeni Rodrigues', '3627'), ('Caroline', '2076949'), ('Caroline B', '111'), ('Carolyn', '72'), ('Carson', '289'), ('Casey', '202697'), ('Catalina', '250056'), ('Catherine', '4987'), ('Catherine Cartan', '45884'), ('Caty', '22'), ('Cecilia', '11954'), ('Cecilie Lundgaard', '95'), ('Celine', '18824'), ('Cemre', '958'), ('Chalena', '4914'), ('Chanel', '62861'), ('Chanelle', '275364'), ('Chang', '26585'), ('Chanikarn', '39'), ('Chantal', '15001'), ('Chantelle', '187'), ('Chaoyi', '15'), ('Charlene', '5683'), ('Charlotte', '4356'), ('Chayenne', '20132'), ('Chelsea', '5'), ('Chelsey', '6777'), ('Chen', '26779'), ('Chengyiyi', '277'), ('Chi Chi', '49122'), ('Chi Fan', '667'), ('Chia Hsien', '679'), ('Chia Jung', '33301'), ('Chiaki', '42773'), ('Chiara', '6159'), ('Chieh Yu', '34796'), ('Chihiro', '15401'), ('Chin Wei', '70504'), ('Chinami', '13141'), ('Ching Wen', '7975'), ('Chiraz', '1726'), ('Chisa', '358'), ('Chloe', '15190'), ('Chompoothip', '276'), ('Christie', '24'), ('Christina', '310215'), ('Christine', '2438'), ('Chun Mei', '12519'), ('Chun Yan', '3374'), ('Cindy', '31620'), ('Claire', '141876'), ('Clara', '116'), ('Claudia', '32581'), ('Claudia Antonia', '1227'), ('Claudia Gianina', '934'), ('Claudine', '106762'), ('Clelia', '2221'), ('Clemence', '1622'), ('Clementina Eugenia', '538'), ('Clothilde', '12304'), ('Coco', '235721'), ('Colomba', '129'), ('Conny', '52274'), ('Constance', '25166'), ('Constanza', '907'), ('Constanze', '18'), ('Corina', '1002'), ('Corinna', '102260'), ('Cornelia', '4053'), ('Cory Ann', '20869'), ('Costanza', '1236'), ('Cristiana', '7486'), ('Cristina', '59412'), ('Cristina Andreea', '75414'), ('Cristina Madalina', '317'), ('Csilla', '6256'), ('Cynthia', '1034'), ('Da Hye', '1417'), ('Dabin', '1261'), ('Dagmara', '160'), ('Daiana', '8589'), ('Dajana', '150'), ('Dalia', '8939'), ('Dalila', '48857'), ('Dalma', '15935'), ('Damilola', '0'), ('Damini', '12'), ('Damira', '30'), ('Dan Ni', '639'), ('Dana', '3121'), ('Daneika', '1607'), ('Danica', '17597'), ('Daniela', '1165205'), ('Daniella', '16663'), ('Danielle', '40823'), ('Danielle Rose', '8507'), ('Danijela', '545'), ('Danka', '87958'), ('Daphne', '33'), ('Daria', '170617'), ('Darija', '41925'), ('Dariya', '857'), ('Darya', '163036'), ('Dasha', '1923'), ('Dayana', '5619'), ('Dea', '7027'), ('Deborah', '7605'), ('Deeon', '141'), ('Dejana', '9846'), ('Demi', '1192'), ('Denisa', '65522'), ('Denise', '3298'), ('Denise Antonela', '168'), ('Deniz', '23620'), ('Deria', '215'), ('Desirae', '354'), ('Desiree', '709'), ('Despina', '19065'), ('Despoina', '3942'), ('Destanee', '9227'), ('Dewi', '134'), ('Dhruthi', '2738'), ('Di', '9780'), ('Dia', '79958'), ('Diana', '119279'), ('Diana Maria', '99'), ('Dianne', '6369'), ('Dijana', '7353'), ('Dilara', '85'), ('Dina', '149'), ('Dinah', '67017'), ('Doga Selen', '117'), ('Domenica', '1614'), ('Dominika', '918746'), ('Dominique', '455'), ('Donika', '164'), ('Donna', '114098'), ('Dorien', '109'), ('Doroteja', '23976'), ('Draginja', '392'), ('Dunja', '4703'), ('Ebony', '713'), ('Eden', '1978'), ('Edina', '249446'), ('Eduarda', '11216'), ('Eetee', '2446'), ('Ege', '50'), ('Ekaterina', '1005319'), ('Ekaterine', '26897'), ('Elaine', '103'), ('Eleanor', '2287'), ('Elena', '1247887'), ('Elena Gabriela', '7772'), ('Elena Teodora', '6547'), ('Eleni', '439179'), ('Eleonora', '405'), ('Eleonore', '567'), ('Eliessa', '882'), ('Elina', '314747'), ('Elisabeth', '4709'), ('Elise', '43779'), ('Elitsa', '87263'), ('Elixane', '18211'), ('Eliza', '480'), ('Elizabeta', '536'), ('Elizabeth', '20368'), ('Elizabeth Anita Alexandria', '1103'), ('Elizaveta', '62977'), ('Elizaveta Anna', '636'), ('Elke', '960'), ('Ella', '526'), ('Ellen', '13761'), ('Ellie', '8079'), ('Elodie', '90'), ('Elyne', '12554'), ('Ema', '11218'), ('Emelyn', '12728'), ('Emi', '3880'), ('Emilia', '43'), ('Emiliana', '1258'), ('Emilie', '1440'), ('Emilija', '24'), ('Emiliya', '541'), ('Emily', '52889'), ('Emily J', '964'), ('Emina', '3029'), ('Emma', '85022'), ('Emma Christine', '65'), ('Emmanuelle', '1609'), ('En Pei', '52'), ('Ena', '823'), ('Eri', '34570'), ('Erica', '472'), ('Erika', '165477'), ('Erin', '5356'), ('Erina', '1225'), ('Esen', '69'), ('Estela', '376'), ('Estelle', '39989'), ('Ester', '3908'), ('Estrella', '126811'), ('Etsuko', '7147'), ('Eudice Wong', '976'), ('Eugenia', '36'), ('Eugenie', '204801'), ('Eugeniya', '20989'), ('Eva', '320083'), ('Eva Marie', '41'), ('Eveliina', '744'), ('Evelyn', '27011'), ('Evgenia', '59775'), ('Evgeniya', '206981'), ('Fang Ying', '7755'), ('Fangzhou', '33388'), ('Fanny', '11260'), ('Farah', '167'), ('Fatima', '10865'), ('Fatimah', '898'), ('Fatma', '21261'), ('Fatyha', '80'), ('Federica', '56817'), ('Federica Joe', '44'), ('Fernanda', '17587'), ('Ferny', '78'), ('Fiona', '18219'), ('Flavia', '1011058'), ('Florencia', '89361'), ('Frances', '359'), ('Francesca', '1306087'), ('Francisca', '157'), ('Francoise', '21685'), ('Franziska', '994'), ('Frederikke', '9'), ('Freya', '6525'), ('Gabriela', '102623'), ('Gabriela Nicole', '468'), ('Gabriella', '6179'), ('Gabrielle Faith', '1093'), ('Gaelle', '1000'), ('Gaia', '7998'), ('Gail', '38651'), ('Galina', '302957'), ('Ganna', '30136'), ('Garbine', '412872'), ('Gebriela', '143'), ('Genevieve', '440'), ('Georgia', '9600'), ('Georgia Andreea', '1848'), ('Georgiana', '48'), ('Georgina', '11569'), ('Ghislaine', '290'), ('Giada', '677'), ('Gioia', '31741'), ('Giorgia', '2484'), ('Giorgie', '13'), ('Giovanna', '289'), ('Giulia', '106520'), ('Giuliana', '2935'), ('Gloria', '1297'), ('Gozal', '2864'), ('Grace', '70613'), ('Gracia', '7999'), ('Greetje', '6168'), ('Greta', '240195'), ('Guadalupe', '14277'), ('Guillermina', '576'), ('Guiomar', '687'), ('Gulben', '410'), ('Gulchekhra', '18'), ('Gulnaz', '39'), ('Guzal', '775'), ('Gyulnara', '238'), ('Habiba', '811'), ('Hae Sung', '8180'), ('Haine', '294'), ('Hana', '413'), ('Hanna', '2782'), ('Hanyu', '4643'), ('Hao Chen', '9631'), ('Hao Ching', '224'), ('Harmony', '5944'), ('Harriet', '8608'), ('Haruka', '3633'), ('Haruna', '1873'), ('Hayley', '1679'), ('Hazal', '78'), ('Heather', '202780'), ('Heidi', '88542'), ('Helen', '1039'), ('Helene', '3928'), ('Hikari', '122'), ('Hilda', '10191'), ('Himari', '3'), ('Hiroko', '27580'), ('Hirono', '4368'), ('Ho Ching', '2371'), ('Hollie', '24'), ('Hongrui', '1063'), ('Hortencia', '98'), ('Hsin Yuan', '120'), ('Hua Chen', '7367'), ('Huijie', '118'), ('Hulya', '7797'), ('Hye Min', '1222'), ('Hyojung', '870'), ('Hyun Hui', '8301'), ('I Hsuan', '511'), ('Iana', '395'), ('Ida', '467'), ('Idia', '45'), ('Iga', '916'), ('Ilay', '52'), ('Ilka', '1142'), ('Ilona', '26950'), ('Ilze', '1527'), ('Imane Maelle', '1676'), ('Ina', '292'), ('Inci', '406'), ('India', '762'), ('Indire', '12633'), ('Indy', '17382'), ('Ineke', '1358'), ('Ines', '40410'), ('Inger', '221'), ('Ingrid', '3471'), ('Ingrid Alexandra', '4766'), ('Ingrid Esperanza', '10133'), ('Intissar', '33'), ('Ioana', '1225'), ('Ioana Diana', '2403'), ('Ioana Loredana', '5425'), ('Ionela Andreea', '6948'), ('Ipek', '39352'), ('Irena', '88369'), ('Irene', '3133'), ('Irina', '299698'), ('Irina Camelia', '293366'), ('Irina Maria', '13843'), ('Iris', '4743'), ('Iryna', '87844'), ('Isabel', '6688'), ('Isabela', '714'), ('Isabella', '83476'), ('Isabelle', '4777'), ('Iulia Maria', '74'), ('Iva', '10322'), ('Ivana', '100848'), ('Ivania', '2094'), ('Ivanka', '291'), ('Iveta', '443695'), ('Ivette', '543'), ('Ivone', '253'), ('Ivonne', '13010'), ('Jacqueline', '27462'), ('Jada', '64'), ('Jade', '26209'), ('Jaeda', '1375'), ('Jaimee', '5007'), ('Jaimy Gayle', '24'), ('Jainy', '761'), ('Jamie', '190997'), ('Jamilya', '18'), ('Jan', '10947'), ('Jana', '268372'), ('Janette', '143422'), ('Janina', '12525'), ('Janja', '72'), ('Janneke', '861'), ('Jaqueline Adina', '5416'), ('Jara', '464'), ('Jarmila', '333150'), ('Jasmin', '34453'), ('Jasmina', '43862'), ('Jasmine', '14865'), ('Jasmine Amber', '142'), ('Jawairiah', '822'), ('Jazmin', '908'), ('Jazzamay', '628'), ('Jeannine', '3426'), ('Jelena', '2515436'), ('Jennifer', '81222'), ('Jenny', '1002'), ('Jesika', '17819'), ('Jessica', '154599'), ('Jessika', '4122'), ('Jessy', '923'), ('Ji Hee', '7179'), ('Ji Young', '8592'), ('Jia', '52'), ('Jia Jing', '48117'), ('Jia Qi', '4612'), ('Jiahui', '1553'), ('Jiakang', '15'), ('Jiatian', '100'), ('Jiaxi', '3002'), ('Jiaxue', '96'), ('Jie', '610820'), ('Jil Belen', '13978'), ('Jil Nora', '611'), ('Jill', '359013'), ('Jillian', '1991'), ('Jin', '15'), ('Jin A', '46355'), ('Jin Ju', '414'), ('Jing Jing', '68925'), ('Joana', '1955'), ('Joanna', '472'), ('Joanne', '15'), ('Jodie Anna', '355'), ('Johana', '40'), ('Johanna', '553107'), ('Jordana', '1092'), ('Josepha', '2710'), ('Josephine', '4980'), ('Josie', '804'), ('Jovana', '39270'), ('Ju Eun', '3453'), ('Judith', '3'), ('Jule', '63'), ('Julia', '891796'), ('Julia Mansano', '21'), ('Juliana', '414'), ('Juliana Rocha', '129'), ('Julie', '156531'), ('Julieta Lara', '4093'), ('Julita', '286'), ('Julyette Maria Josephine', '1446'), ('June', '114'), ('Junri', '128183'), ('Justina', '36'), ('Justine', '39418'), ('Justyna', '30304'), ('Kady', '467'), ('Kai Chen', '172004'), ('Kai Lin', '37817'), ('Kaia', '625836'), ('Kaitlin', '416'), ('Kaitlyn', '3905'), ('Kaja', '1176'), ('Kajsa', '2280'), ('Kamila', '12906'), ('Kamilla', '249'), ('Kamonwan', '5866'), ('Kana', '1536'), ('Kanae', '20142'), ('Kanako', '229'), ('Kanami', '3724'), ('Kanika', '919'), ('Kaori', '8406'), ('Karen', '32169'), ('Kariann', '85'), ('Karin', '254520'), ('Karina', '9355'), ('Karina Ildor', '5493'), ('Karina Kristina', '410'), ('Karine', '1936'), ('Karis', '1003'), ('Karla', '3127'), ('Karman', '3193'), ('Karola Patricia', '776'), ('Karolayne', '465'), ('Karolina', '512490'), ('Karoline', '910'), ('Karyn', '330'), ('Kassandra', '704'), ('Katalin', '112562'), ('Katarina', '444303'), ('Katarzyna', '93730'), ('Kate', '34'), ('Katerina', '160945'), ('Kateryna', '435038'), ('Katharina', '24595'), ('Katharine', '363'), ('Katherine', '7843'), ('Katherine Gabriela', '1894'), ('Kathinka', '15970'), ('Kathrin', '141281'), ('Katie', '30035'), ('Katrine Isabel', '308'), ('Katy', '11572'), ('Katya', '515'), ('Katyarina', '97'), ('Kayla', '13697'), ('Kaylah', '237'), ('Kazusa', '10107'), ('Kei', '294'), ('Kelia', '324'), ('Kelly', '4705'), ('Kelly S', '5880'), ('Kelsey', '410'), ('Kennedy', '653'), ('Keren', '24062'), ('Keri', '894'), ('Kerstin', '942'), ('Khristina', '3748'), ('Ki Ryang', '86'), ('Kiki', '214121'), ('Kim', '4580'), ('Kim Alice', '12388'), ('Kimberley', '5393'), ('Kimberly', '4831'), ('Kimika', '272'), ('Kimiko', '270102'), ('Kinnie', '15102'), ('Kirsten', '383077'), ('Kirsten Andrea', '462'), ('Klaartje', '5818'), ('Klara', '568191'), ('Klaudia', '4809'), ('Komola', '701'), ('Korina', '21417'), ('Kotomi', '4962'), ('Krista', '17577'), ('Kristie', '34647'), ('Kristina', '601693'), ('Kristina N', '555'), ('Kristy', '1899'), ('Kristyna', '148728'), ('Ksenia', '371140'), ('Kseniia', '298'), ('Ksenija', '625'), ('Kumiko', '56212'), ('Kurumi', '177170'), ('Kveta', '210101'), ('Kwan Yau', '403'), ('Kyle', '3200'), ('Kylie', '1236'), ('Kyoka', '9036'), ('Kyra', '102022'), ('Kyung Mi', '26059'), ('Laetitia', '6078'), ('Laili', '595'), ('Lamis', '456'), ('Lara', '177458'), ('Larikah', '255'), ('Laura', '578964'), ('Laura D', '281'), ('Laura Ioana', '33822'), ('Laura Sofia', '97'), ('Lauren', '244807'), ('Lauryn', '207'), ('Lavinia', '23897'), ('Laylo', '39'), ('Layne', '22'), ('Lea', '4197'), ('Leah', '152'), ('Lee', '733'), ('Lena', '27997'), ('Lena Marie', '14942'), ('Lenka', '164900'), ('Leolia', '750'), ('Leonie', '672'), ('Lesedi Sheya', '286'), ('Lesia', '225987'), ('Lesley', '42925'), ('Leslie', '173'), ('Leticia', '45115'), ('Leticia Garcia', '87'), ('Leylah Annie', '48'), ('Li', '1696'), ('Liana Gabriela', '59997'), ('Libby', '2362'), ('Libi', '522'), ('Lidia', '169'), ('Lidziya', '6809'), ('Liezel', '39782'), ('Liga', '23411'), ('Lilla', '1960'), ('Lin', '40341'), ('Lina', '91117'), ('Linda', '4216'), ('Lindsay', '142454'), ('Lindsey', '500'), ('Ling', '64525'), ('Liniques', '72'), ('Linnea', '697'), ('Lisa', '594217'), ('Lisa Maria', '7898'), ('Lisa Marie', '1583'), ('Lisanne', '8284'), ('Liubov', '2662'), ('Livia', '128'), ('Liz Tatiane', '2216'), ('Lizaveta', '135'), ('Lizette', '11623'), ('Lorenza', '33'), ('Lorraine M', '40'), ('Lou', '10167'), ('Loudmilla', '6'), ('Louisa', '50700'), ('Louise', '1633'), ('Lourdes', '371035'), ('Lu', '3445'), ('Luca', '1013'), ('Lucia', '17185'), ('Luciana', '8305'), ('Lucie', '1108372'), ('Lucrezia', '1589'), ('Lucy', '6542'), ('Ludmila', '645'), ('Ludmilla', '1187'), ('Luisa', '1671'), ('Luisa Marie', '1822'), ('Luksika', '77519'), ('Lulu', '304'), ('Luna', '15'), ('Lusine', '377'), ('Lutfiye', '876'), ('Lyann', '30'), ('Lynn', '837'), ('Lyudmyla', '54172'), ('Macall', '12379'), ('Macarena', '2133'), ('Madalina', '62938'), ('Maddison', '2434'), ('Madeleine', '715'), ('Madeline', '147'), ('Madina', '6'), ('Madison', '476768'), ('Madrie', '2266'), ('Maegan', '525'), ('Mafalda', '163'), ('Maftuna', '54'), ('Magali', '1917'), ('Magalie', '511'), ('Magda', '103659'), ('Magdalena', '401857'), ('Magy', '756'), ('Mahak', '154'), ('Mahitha', '395'), ('Mai', '19173'), ('Maia', '1235'), ('Maia A', '12'), ('Maiko', '11320'), ('Maileen', '83'), ('Mailen', '39523'), ('Maja', '1067'), ('Makiho', '5592'), ('Makoto', '14129'), ('Malene', '316'), ('Malika', '323'), ('Malin', '2489'), ('Mallaurie', '688'), ('Mallory', '44497'), ('Malou', '3073'), ('Mami', '96'), ('Man Ying Maggie', '102'), ('Mana', '9593'), ('Mananchaya', '15'), ('Manca', '2070'), ('Mandy', '193767'), ('Manisha', '3112'), ('Manon', '14608'), ('Manya', '93'), ('Mara', '702'), ('Marcela', '16790'), ('Marcela Guimaraes', '683'), ('Marcelina', '33'), ('Marcella', '13037'), ('Margalita', '99836'), ('Margarida', '1997'), ('Margarita', '78265'), ('Margaux', '905'), ('Margot', '4787'), ('Mari', '38086'), ('Maria', '3613355'), ('Maria Agustina', '185'), ('Maria Andrea', '323'), ('Maria Camila', '148'), ('Maria Constanza De Las Mercedes', '1892'), ('Maria Del Rosario', '296'), ('Maria Elena', '296736'), ('Maria Fernanda', '141257'), ('Maria Jesus', '294'), ('Maria Joao', '72682'), ('Maria Jose', '413759'), ('Maria Lourdes', '156'), ('Maria Paulina', '1388'), ('Maria Teresa', '106375'), ('Mariam', '4060'), ('Mariana', '201258'), ('Marianna', '10178'), ('Marianne', '1090'), ('Mariaryeni', '226'), ('Marie', '25496'), ('Marie Eve', '114687'), ('Mariia', '206'), ('Marija', '20481'), ('Marijana', '3'), ('Marina', '362372'), ('Marine', '4314'), ('Marion', '1272285'), ('Mariona', '4'), ('Marisa', '1026'), ('Mariya', '154484'), ('Marketa', '18286'), ('Marlies', '1624'), ('Marrit', '1339'), ('Marta', '267679'), ('Marta Huqi', '778'), ('Martha', '153'), ('Martina', '109192'), ('Mary', '653'), ('Mary Ann', '102'), ('Maryna', '85425'), ('Masa', '117472'), ('Mathilde', '245139'), ('Matilda', '3466'), ('Maud', '210'), ('Maureen', '219'), ('Maurien', '138'), ('Maxine', '390'), ('May', '225'), ('Maya', '23668'), ('Mayar', '1788'), ('Mayo', '32445'), ('Mayya', '9064'), ('Megan', '13254'), ('Megumi', '407'), ('Mei Xu', '40'), ('Meiling', '417'), ('Meiqi', '96'), ('Melanie', '385636'), ('Melany Solange', '97'), ('Melina', '2609'), ('Melinda', '290299'), ('Melis', '20196'), ('Melisa', '340'), ('Melissa', '200'), ('Melissa Ishuan', '171'), ('Meng Ning', '542'), ('Mercedes', '48'), ('Merel', '101'), ('Meritxell', '284'), ('Mervana', '102693'), ('Mi', '24569'), ('Mi Jeong', '176'), ('Mi Rae', '1858'), ('Mi Zhuoma', '72'), ('Mia Nicole', '1098'), ('Micaela', '230'), ('Michaela', '76586'), ('Michaella', '242619'), ('Michela', '90'), ('Michele Alexandra', '596'), ('Michelle', '160164'), ('Michika', '3657'), ('Mihaela', '69242'), ('Mihaela Lorena', '15'), ('Miharu', '21205'), ('Mihika', '427'), ('Mihoki', '201'), ('Miki', '24542'), ('Mila', '107'), ('Milagros', '42'), ('Milana', '14123'), ('Milena', '279'), ('Milica', '63'), ('Min', '1884'), ('Min Hwa', '9938'), ('Minami', '96'), ('Mira', '1626'), ('Mirabelle', '1977'), ('Miranda', '180'), ('Miriam', '3825'), ('Miriam Bianca', '1458'), ('Miriana', '1180'), ('Mirjam', '272'), ('Mirjana', '331434'), ('Misa', '55981'), ('Misaki', '203782'), ('Mitsumi', '309'), ('Miyabi', '22840'), ('Miyu', '23968'), ('Mizuno', '2927'), ('Molly', '565'), ('Momoko', '2061'), ('Mona', '282445'), ('Monica', '587309'), ('Monika', '1240'), ('Monique', '114104'), ('Montserrat', '23564'), ('Morgane', '6906'), ('Moulika', '15'), ('Mouna', '12'), ('Moyuka', '32'), ('Muazzez', '6'), ('Muge', '162'), ('Myrtille', '43550'), ('Na', '1358928'), ('Na Lae', '26185'), ('Na Ri', '19223'), ('Nadezda', '5027'), ('Nadia', '1401125'), ('Nadiya', '56596'), ('Nadja', '2661'), ('Nagi', '1535'), ('Naiktha', '4380'), ('Naima', '440'), ('Nam Yeon', '259'), ('Nan Nan', '3094'), ('Nanuli', '16494'), ('Nao', '59671'), ('Naoko', '857'), ('Naomi', '163239'), ('Napatsakorn', '1945'), ('Nastassia', '72'), ('Nastassja', '65152'), ('Nastja', '29250'), ('Natalia', '97400'), ('Natalie', '120995'), ('Natalija', '13686'), ('Nataliya', '33'), ('Natasa', '14212'), ('Natasha', '15365'), ('Natela', '16303'), ('Natella', '649'), ('Nathalia', '28098'), ('Nathaly', '13241'), ('Natia', '2526'), ('Natsumi', '37981'), ('Nattawadee', '224'), ('Naz', '251'), ('Nazari', '980'), ('Neda', '9536'), ('Nelise', '142'), ('Nermeen', '279'), ('Nevena', '170'), ('Nicha', '30972'), ('Nicky', '2531'), ('Nicola', '33550'), ('Nicole', '447434'), ('Nicoleta Catalina', '8146'), ('Nicolette', '9627'), ('Nidhi', '5425'), ('Nigina', '47651'), ('Nika', '9120'), ('Nikita', '22'), ('Nikki', '614'), ('Nikol', '491'), ('Nikola', '78513'), ('Nina', '201173'), ('Nina Isabella', '115'), ('Nives', '2706'), ('Noel', '1558'), ('Noelia', '2025'), ('Noelle', '1795'), ('Nonna', '134'), ('Noppawan', '73589'), ('Nora', '1082'), ('Nour', '760'), ('Nozomi', '1333'), ('Nudnida', '63013'), ('Nungnadda', '24523'), ('Nuria', '259116'), ('Oana', '1096'), ('Oana Georgeta', '4294'), ('Oceane', '56853'), ('Ofri', '5372'), ('Oksana', '58279'), ('Ola', '3497'), ('Olawaseun', '2'), ('Olaya', '40'), ('Oleksandra', '8700'), ('Olena', '484'), ('Olesya', '3811'), ('Olga', '773929'), ('Olivia', '119756'), ('Oliwia', '363'), ('Ons', '56242'), ('Ornella', '2133'), ('Oyku', '382'), ('Paige Mary', '147'), ('Pamela', '241'), ('Panna', '1446'), ('Paola', '403127'), ('Parris', '209'), ('Patcharin', '1188'), ('Patricia', '197904'), ('Patricia Maria', '43755'), ('Patrycja', '17514'), ('Patty', '7323'), ('Paula', '172431'), ('Paula Andrea', '269'), ('Paula Catalina', '3714'), ('Paula Cristina', '37384'), ('Paulina', '3208'), ('Pauline', '313187'), ('Pavla', '4128'), ('Peangtarn', '26280'), ('Peggy', '1016'), ('Pei Chi', '8900'), ('Pei Hsuan', '24'), ('Pei Ju', '181'), ('Pemra', '60908'), ('Pernilla', '6573'), ('Petia', '1832'), ('Petra', '1958404'), ('Phenomena', '3'), ('Phillis', '664'), ('Pia', '10859'), ('Piia', '21340'), ('Pilar', '6404'), ('Pippa', '243'), ('Plobrung', '934'), ('Polina', '76747'), ('Polona', '325216'), ('Poojashree', '13006'), ('Pranjala', '1214'), ('Prarthana G', '5687'), ('Prerna', '9318'), ('Priscila', '510'), ('Priscilla', '8203'), ('Qiang', '116857'), ('Qianhui', '683'), ('Qianqian', '641'), ('Qiu Yu', '2034'), ('Quinn', '646'), ('Quirine', '22978'), ('Rachael', '2592'), ('Rachel', '469'), ('Radina', '699'), ('Rafaela', '228'), ('Ralina', '40'), ('Raluca', '148701'), ('Raluca Elena', '9202'), ('Raluca Georgiana', '4258'), ('Ramu', '443'), ('Ramya', '161'), ('Ran', '14709'), ('Rana', '9'), ('Raquel', '30401'), ('Rashmi', '741'), ('Ratnika', '957'), ('Raveena', '5387'), ('Rebeca', '168'), ('Rebecca', '165013'), ('Rebeka', '5803'), ('Regina', '122331'), ('Reina', '64'), ('Reka Luca', '66271'), ('Remi', '38116'), ('Renata', '201856'), ('Ria', '5566'), ('Rianna', '984'), ('Richel', '84184'), ('Rika', '141257'), ('Riko', '23195'), ('Rio', '556'), ('Risa', '62252'), ('Rishika', '8448'), ('Rita', '1401'), ('Riya', '2634'), ('Roberta', '809611'), ('Robin', '12295'), ('Robyn', '1103'), ('Rocio', '16886'), ('Romana', '29214'), ('Romana Caroline', '17020'), ('Romina', '253471'), ('Romy', '911'), ('Rona', '308'), ('Ronit', '3165'), ('Ronke', '49'), ('Roosh', '28'), ('Rosa', '111'), ('Rosalia', '803'), ('Rosalie', '880'), ('Rosie', '336'), ('Roxane', '38793'), ('Rui', '24'), ('Rushmi', '27452'), ('Rutuja', '3642'), ('Ryann', '597'), ('Saana', '195'), ('Sabastiani', '780'), ('Sabina', '49784'), ('Sabina Elena', '27'), ('Sabine', '590911'), ('Sabrina', '6810'), ('Sacha', '78204'), ('Sachia', '49767'), ('Sachie', '42676'), ('Sadafmoh', '2275'), ('Sai Samhitha', '1034'), ('Saisai', '113359'), ('Sakiko', '9338'), ('Sally', '53480'), ('Salma', '66'), ('Samantha', '1437656'), ('Samira', '2020'), ('Sanae', '354'), ('Sanaz', '17975'), ('Sandra', '266197'), ('Sandy', '224'), ('Sang Hee', '1277'), ('Sania', '272889'), ('Sara', '914981'), ('Sarah', '78461'), ('Sarah Beth', '1270'), ('Sarah Rebecca', '13064'), ('Sarahi', '461'), ('Sarai Delfina', '148'), ('Saray', '2061'), ('Sari', '464'), ('Sarlota', '27'), ('Sarvinoz', '178'), ('Sasa', '316'), ('Saska', '2641'), ('Satsuki', '906'), ('Savannah', '70'), ('Schena', '148'), ('Se Hyun', '143'), ('Se Jin', '681'), ('Sean', '75'), ('Seda', '1469'), ('Seira', '144'), ('Selin', '169'), ('Seo Kyung', '6564'), ('Seone', '1312'), ('Serena', '4232828'), ('Sesil', '208108'), ('Seung Yeon', '6650'), ('Severine', '192296'), ('Shahar', '662926'), ('Shakhlo', '2122'), ('Shakhnoza', '198'), ('Shangqing', '111'), ('Shanshan', '2378'), ('Shao Yuan', '1363'), ('Sharmada', '4106'), ('Sharon', '117825'), ('Sharon Sanchana', '522'), ('Shelby', '102140'), ('Shelly', '142'), ('Sheng Nan', '53610'), ('Sherazad', '22977'), ('Sherry', '801'), ('Shiho', '39960'), ('Shilin', '9634'), ('Shiori', '18'), ('Shir', '117'), ('Shiran', '236'), ('Shivika', '4611'), ('Shou Na', '105'), ('Shreya', '6'), ('Shu Ying', '1483'), ('Shuai', '913829'), ('Shuko', '46124'), ('Shuo', '597'), ('Shuyue', '336'), ('Shweta', '3255'), ('Si Qi', '531'), ('Silvia', '221695'), ('Simona', '724638'), ('Simone', '1149'), ('Simran Kaur', '467'), ('Sina', '10360'), ('Sinead', '688'), ('Sing Le', '95'), ('Siqi', '716'), ('Sirui', '276'), ('Siyu', '87'), ('Sloane', '352458'), ('Smriti', '96'), ('Sneha', '134'), ('Snehadevi S', '2820'), ('So Jung', '47282'), ('So Ra', '18210'), ('Sofia', '484140'), ('Sofico', '336'), ('Sofie', '10539'), ('Sofiya', '18371'), ('Sofya', '9180'), ('Sohyun', '108'), ('Sonia', '480'), ('Sonja', '4499'), ('Sophia', '96'), ('Sophie', '39307'), ('Sorana', '457043'), ('Sowjanya', '2961'), ('Spurti', '159'), ('Sri Vaishnavi', '1744'), ('Stamatia', '8072'), ('Stanislava', '49412'), ('Stefana', '497'), ('Stefani', '126'), ('Stefania', '24897'), ('Stefanie', '247237'), ('Steffi', '3085'), ('Stephanie', '608309'), ('Stephanie Mariel', '1397'), ('Storm', '21152'), ('Su Jeong', '33672'), ('Su Wei', '274936'), ('Suellen', '320'), ('Sultan', '1544'), ('Sun Jung', '6591'), ('Sunae', '15'), ('Sunam', '3594'), ('Sung Hee', '29852'), ('Susan', '502'), ('Susanne', '16276'), ('Suzan', '344'), ('Suzuho', '324'), ('Suzy', '1054'), ('Svenja', '6341'), ('Svetlana', '1906587'), ('Sviatlana', '11201'), ('Sybille', '581'), ('Sylvia', '1626'), ('Sylwia', '8268'), ('Syna', '9001'), ('Szabina', '2127'), ('Tadeja', '83659'), ('Taisiya', '1050'), ('Talya', '45'), ('Tamachan', '843'), ('Tamar', '60'), ('Tamara', '54140'), ('Tamari', '304'), ('Tamarine', '594281'), ('Tamaryn', '40060'), ('Tamira', '322202'), ('Tammi', '26077'), ('Tanaporn', '764'), ('Tanya', '1229'), ('Tara', '54798'), ('Tatia', '42'), ('Tatiana', '34795'), ('Tatjana', '230262'), ('Tatsiana', '1289'), ('Tayisiya', '5051'), ('Taylor', '38850'), ('Tea', '2127'), ('Teliana', '112570'), ('Tena', '12402'), ('Teodora', '41792'), ('Tereza', '193362'), ('Terri', '18'), ('Tess', '7165'), ('Tessah', '9116'), ('Tetiana', '75337'), ('Tetyana', '43020'), ('Thai Sa Grana', '706'), ('Theo', '2249'), ('Theresa', '377'), ('Tijana', '333'), ('Timea', '612072'), ('Tina', '57585'), ('Tinatin', '476'), ('Ting Fei', '8145'), ('Ting Jr', '8676'), ('Tingting', '151'), ('Tjasa', '3361'), ('Tomoko', '7431'), ('Tori', '10630'), ('Tornado Alicia', '1864'), ('Trang', '1884'), ('Treta', '736'), ('Tsvetana', '456422'), ('Tyra', '4543'), ('Ulrikke', '27118'), ('Ulyana', '2400'), ('Urszula', '275255'), ('Ushna', '413'), ('Usue Maitane', '7874'), ('Valentina', '338'), ('Valentine', '9926'), ('Valentini', '15198'), ('Valentyna', '47854'), ('Valeria', '159155'), ('Valerie', '6146'), ('Valeriya', '16621'), ('Vanda', '10087'), ('Vanesa', '30669'), ('Vanessa', '71645'), ('Vania', '299530'), ('Vaniya', '255'), ('Vanja', '291'), ('Varatchaya', '54340'), ('Varunya', '3623'), ('Varvara', '401409'), ('Vasilisa', '42527'), ('Vaszilisza', '3763'), ('Vendula', '2221'), ('Venus', '2875425'), ('Vera', '1929137'), ('Verena', '3018'), ('Veronica', '84543'), ('Veronica M', '1678'), ('Veronika', '73192'), ('Vesna', '169500'), ('Vicky', '77'), ('Victoire', '454'), ('Victoria', '2142854'), ('Victoria Ariadna', '106'), ('Viktoria', '30191'), ('Viktoriia', '90'), ('Viktorija', '79511'), ('Viktoriya', '26226'), ('Viktoryia', '1987'), ('Vilma Y', '27'), ('Vincenza', '105'), ('Vinciane', '37'), ('Violetta', '298'), ('Virginie', '519208'), ('Vishesh', '71'), ('Vita', '64'), ('Vitalia', '106927'), ('Vivian', '36714'), ('Vivien', '13041'), ('Vivienne', '8918'), ('Vlada', '22578'), ('Vladica', '997'), ('Vladimira', '6470'), ('Vladislava', '1254'), ('Vladyslava', '2570'), ('Vojislava', '18781'), ('Voni', '1036'), ('Wan Ting', '11653'), ('Wan Yi', '42'), ('Warona', '9'), ('Wen Hsin', '40633'), ('Wen Ling', '120'), ('Wendy Qi Wen', '613'), ('Weronika Jasmina', '179'), ('Whitney', '5604'), ('Wiktoria', '363'), ('Wing Yau Venise', '11694'), ('Wushuang', '879'), ('Xenia', '14578'), ('Xi Yao', '1445'), ('Xiao', '4789'), ('Xiaodi', '5057'), ('Xiaorong', '717'), ('Xiaoxi', '1352'), ('Ximena', '19495'), ('Xin', '8744'), ('Xin Yu', '187'), ('Xinyu', '10705'), ('Xinyun', '109256'), ('Xiyu', '315'), ('Xu Liu', '4535'), ('Ya', '24'), ('Ya Hsuan', '17078'), ('Yafan', '39687'), ('Yan', '4196'), ('Yana', '39102'), ('Yang', '73'), ('Yanina', '602453'), ('Yanni', '275'), ('Yarden', '32'), ('Yaroslava', '404915'), ('Yasmin', '11251'), ('Yasmina', '27'), ('Yasmine', '1748'), ('Yasmyn', '71'), ('Yawna', '648'), ('Yayuk', '128509'), ('Ye Ra', '47867'), ('Ye Xin', '281'), ('Yekaterina', '376'), ('Yelena', '1856'), ('Yeong Won', '966'), ('Yevgeniya', '6288'), ('Yi', '19989'), ('Yi Fan', '60646'), ('Yi Jing', '22443'), ('Yi Miao', '61839'), ('Yidi', '136'), ('Yihong', '24'), ('Yijia', '366'), ('Ying', '3783'), ('Ying Ying', '107595'), ('Yixuan', '1380'), ('Ylena', '1546'), ('Ylona Georgiana', '1453'), ('Yoko', '285'), ('Yolande', '1381'), ('Yoo Ri', '182'), ('Yoon Young', '3592'), ('Yoshimi', '677'), ('Yosr', '75'), ('You Na', '242'), ('Ysaline', '27804'), ('Yu Jin', '452'), ('Yu Tong', '9'), ('Yuan', '281'), ('Yuanyi', '772'), ('Yue', '1259'), ('Yue Yue', '21360'), ('Yuenu', '682'), ('Yujia', '184'), ('Yuka', '12474'), ('Yukako', '84'), ('Yuki', '505'), ('Yuki Kristina', '2191'), ('Yukina', '998'), ('Yukun', '1828'), ('Yulia', '155143'), ('Yuliana', '15248'), ('Yuliya', '206375'), ('Yumi', '20269'), ('Yung Jan', '229391'), ('Yuqi', '559'), ('Yurika', '101816'), ('Yuriko', '1728'), ('Yurina', '12693'), ('Yuuki', '15071'), ('Yuval', '45'), ('Yuxuan', '24279'), ('Yvonne', '254491'), ('Zaineb', '87'), ('Zalina', '2052'), ('Zarah', '3809'), ('Zarina', '123243'), ('Zeel', '702'), ('Zeynep  Sena', '21'), ('Zhanlan', '2166'), ('Zhaoxuan', '20236'), ('Zhibek', '7'), ('Zhima', '99'), ('Zhou', '30'), ('Zhuoma', '121'), ('Zi', '110290'), ('Zinovia', '74'), ('Ziyue', '1420'), ('Zoe', '2772'), ('Zoe Gwen', '2877'), ('Zsofia', '1501'), ('Zuzana', '266251'), ('Zuzanna', '2258')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT count(*) , country_code FROM players GROUP BY country_code",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT country_code , COUNT(*) FROM players GROUP BY country_code","Not match: [('1', 'AND'), ('1', 'ANG'), ('1', 'GRN'), ('1', 'MGL'), ('1', 'PNG'), ('1', 'QAT'), ('1', 'TTO'), ('1', 'UAE'), ('1', 'ZAM'), ('10', 'AZE'), ('103', 'FIN'), ('104', 'NZL'), ('11', 'LIB'), ('11', 'UNK'), ('112', 'EGY'), ('114', 'CHI'), ('12', 'POC'), ('12', 'TKM'), ('123', 'UZB'), ('13', 'NAM'), ('142', 'POR'), ('144', 'BLR'), ('145', 'SLO'), ('146', 'TPE'), ('15', 'IRI'), ('15', 'LIE'), ('15', 'MRI'), ('150', 'VEN'), ('16', 'SCG'), ('163', 'GRE'), ('169', 'HUN'), ('17', 'BOT'), ('17', 'MLT'), ('17', 'REU'), ('171', 'THA'), ('18', 'ISL'), ('18', 'PAK'), ('181', 'BUL'), ('181', 'INA'), ('19', 'JAM'), ('19', 'VIE'), ('2', 'ALB'), ('2', 'BEN'), ('2', 'CGO'), ('2', 'MON'), ('2', 'TOG'), ('20', 'BAR'), ('20', 'BER'), ('203', 'TUR'), ('21', 'MAD'), ('21', 'SYR'), ('21', 'TCH'), ('22', 'BAH'), ('22', 'CYP'), ('22', 'FRG'), ('22', 'PAN'), ('22', 'URS'), ('2217', 'USA'), ('224', 'SRB'), ('23', 'KEN'), ('23', 'KGZ'), ('23', 'MKD'), ('232', 'ISR'), ('236', 'AUT'), ('24', 'CRC'), ('240', 'COL'), ('240', 'CRO'), ('243', 'SUI'), ('247', 'BEL'), ('247', 'SVK'), ('25', 'MNE'), ('26', 'ZIM'), ('266', 'POL'), ('27', 'ARM'), ('274', 'KOR'), ('283', 'RSA'), ('29', 'GUA'), ('29', 'TRI'), ('3', 'ECA'), ('3', 'KUW'), ('3', 'LES'), ('3', 'NCA'), ('3', 'OMA'), ('3', 'RHO'), ('3', 'SAM'), ('31', 'LTU'), ('311', 'UKR'), ('32', 'SRI'), ('324', 'SWE'), ('33', 'ESA'), ('331', 'CAN'), ('342', 'NED'), ('35', 'MAS'), ('37', 'LUX'), ('38', 'DOM'), ('39', 'CUB'), ('391', 'CHN'), ('4', 'BRU'), ('4', 'GHA'), ('4', 'MRN'), ('4', 'SMR'), ('4', 'rc='), ('416', 'MEX'), ('422', 'ROU'), ('43', 'PUR'), ('44', 'SIN'), ('45', 'MDA'), ('456', 'ARG'), ('456', 'BRA'), ('456', 'CZE'), ('478', 'IND'), ('48', 'EST'), ('48', 'YUG'), ('5', 'BDI'), ('5', 'BRN'), ('5', 'FIJ'), ('5', 'HAI'), ('56', 'HKG'), ('56', 'LAT'), ('56', 'PAR'), ('56', 'URU'), ('57', 'TUN'), ('6', 'AHO'), ('6', 'JOR'), ('6', 'TJK'), ('63', 'ALG'), ('660', 'GBR'), ('68', 'IRL'), ('68', 'NOR'), ('7', 'IRQ'), ('7', 'SEN'), ('70', 'PHI'), ('736', 'FRA'), ('742', 'AUS'), ('75', 'BIH'), ('76', 'PER'), ('79', 'DEN'), ('8', 'ANT'), ('8', 'CMR'), ('8', 'ETH'), ('8', 'GUD'), ('8', 'HON'), ('80', 'NGR'), ('810', 'RUS'), ('823', 'JPN'), ('833', 'GER'), ('853', 'ESP'), ('866', 'ITA'), ('90', 'ECU'), ('91', 'GEO'), ('97', 'BOL'), ('97', 'MAR'), ('99', 'KAZ')] != [('AHO', '6'), ('ALB', '2'), ('ALG', '63'), ('AND', '1'), ('ANG', '1'), ('ANT', '8'), ('ARG', '456'), ('ARM', '27'), ('AUS', '742'), ('AUT', '236'), ('AZE', '10'), ('BAH', '22'), ('BAR', '20'), ('BDI', '5'), ('BEL', '247'), ('BEN', '2'), ('BER', '20'), ('BIH', '75'), ('BLR', '144'), ('BOL', '97'), ('BOT', '17'), ('BRA', '456'), ('BRN', '5'), ('BRU', '4'), ('BUL', '181'), ('CAN', '331'), ('CGO', '2'), ('CHI', '114'), ('CHN', '391'), ('CMR', '8'), ('COL', '240'), ('CRC', '24'), ('CRO', '240'), ('CUB', '39'), ('CYP', '22'), ('CZE', '456'), ('DEN', '79'), ('DOM', '38'), ('ECA', '3'), ('ECU', '90'), ('EGY', '112'), ('ESA', '33'), ('ESP', '853'), ('EST', '48'), ('ETH', '8'), ('FIJ', '5'), ('FIN', '103'), ('FRA', '736'), ('FRG', '22'), ('GBR', '660'), ('GEO', '91'), ('GER', '833'), ('GHA', '4'), ('GRE', '163'), ('GRN', '1'), ('GUA', '29'), ('GUD', '8'), ('HAI', '5'), ('HKG', '56'), ('HON', '8'), ('HUN', '169'), ('INA', '181'), ('IND', '478'), ('IRI', '15'), ('IRL', '68'), ('IRQ', '7'), ('ISL', '18'), ('ISR', '232'), ('ITA', '866'), ('JAM', '19'), ('JOR', '6'), ('JPN', '823'), ('KAZ', '99'), ('KEN', '23'), ('KGZ', '23'), ('KOR', '274'), ('KUW', '3'), ('LAT', '56'), ('LES', '3'), ('LIB', '11'), ('LIE', '15'), ('LTU', '31'), ('LUX', '37'), ('MAD', '21'), ('MAR', '97'), ('MAS', '35'), ('MDA', '45'), ('MEX', '416'), ('MGL', '1'), ('MKD', '23'), ('MLT', '17'), ('MNE', '25'), ('MON', '2'), ('MRI', '15'), ('MRN', '4'), ('NAM', '13'), ('NCA', '3'), ('NED', '342'), ('NGR', '80'), ('NOR', '68'), ('NZL', '104'), ('OMA', '3'), ('PAK', '18'), ('PAN', '22'), ('PAR', '56'), ('PER', '76'), ('PHI', '70'), ('PNG', '1'), ('POC', '12'), ('POL', '266'), ('POR', '142'), ('PUR', '43'), ('QAT', '1'), ('REU', '17'), ('RHO', '3'), ('ROU', '422'), ('RSA', '283'), ('RUS', '810'), ('SAM', '3'), ('SCG', '16'), ('SEN', '7'), ('SIN', '44'), ('SLO', '145'), ('SMR', '4'), ('SRB', '224'), ('SRI', '32'), ('SUI', '243'), ('SVK', '247'), ('SWE', '324'), ('SYR', '21'), ('TCH', '21'), ('THA', '171'), ('TJK', '6'), ('TKM', '12'), ('TOG', '2'), ('TPE', '146'), ('TRI', '29'), ('TTO', '1'), ('TUN', '57'), ('TUR', '203'), ('UAE', '1'), ('UKR', '311'), ('UNK', '11'), ('URS', '22'), ('URU', '56'), ('USA', '2217'), ('UZB', '123'), ('VEN', '150'), ('VIE', '19'), ('YUG', '48'), ('ZAM', '1'), ('ZIM', '26'), ('rc=', '4')]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT count(*) , YEAR FROM matches GROUP BY YEAR",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT YEAR , count(*) FROM matches GROUP BY YEAR","Not match: [('108', '2017'), ('12', '2013'), ('158', '2016')] != [('2013', '12'), ('2016', '158'), ('2017', '108')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM main.matches ORDER BY winner_age LIMIT 3",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hanD = 'L',,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hannd = 'L',OperationalError('no such column: T2.hannd'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN ranking AS T2 ON T1.player_id = T2.player_id ORDER BY T2.ranking_points DESC LIMIT 1",OperationalError('no such table: ranking'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN ranking AS T2 ON T1.player_id = T2.player_id ORDER BY T2.winner_rank_points DESC LIMIT 1",OperationalError('no such table: ranking'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , count(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , count(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured',,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  tonnage FROM ship ORDER BY name DESC","SELECT name , tonnage FROM ship ORDER BY name DESC",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  date FROM battle","SELECT name , date , RESULT FROM battle","Not match: [('Battle of Adrianople', '14 April 1205'), ('Battle of Boruy', 'June 1205'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Philippopolis', '31 June 1208'), ('Battle of Rodosto', 'February 1206'), ('Battle of Rusion', '31 January 1206'), ('Battle of Serres', 'June 1205'), ('Siege of Constantinople', '1235')] != [('Battle of Adrianople', '14 April 1205', 'Bulgarian victory'), ('Battle of Boruy', 'June 1205', 'Bulgarian victory'), ('Battle of Messinopolis', '4 September 1207', 'Bulgarian victory'), ('Battle of Philippopolis', '31 June 1208', 'Latin victory'), ('Battle of Rodosto', 'February 1206', 'Bulgarian victory'), ('Battle of Rusion', '31 January 1206', 'Bulgarian victory'), ('Battle of Serres', 'June 1205', 'Bulgarian victory'), ('Siege of Constantinople', '1235', 'Two Year Truce')]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT max(killed) ,  min(killed) FROM death","SELECT max(killed) , min(killed) FROM death",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT avg(injured) FROM death,SELECT avg(injured) FROM death,,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","SELECT T1.killed , T1.injured FROM main.death AS T1 JOIN main.battle AS T2 ON T1.cause_by_ship_id = T2.id JOIN main.ship AS T3 ON T2.id = T3.id WHERE T3.tonnage = 't'",OperationalError('no such column: T1.cause_by_ship_id'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name , RESULT FROM battle WHERE bulgarian_commander != ""Boril""",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","SELECT DISTINCT T1.id , T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.id JOIN ship AS T3 ON T2.cause_by_ship_id = T3.id WHERE T3.ship_type = 'Brig'",OperationalError('no such column: T2.cause_by_ship_id'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT T1.id , T1.name FROM main.battle AS T1 JOIN main.death AS T2 ON T1.id = T2.battle_id GROUP BY T1.id HAVING SUM(T2.killed) > 10",OperationalError('no such column: T2.battle_id'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id , T1.name FROM ship AS T1 JOIN battle AS T2 ON T1.id = T2.cause_d_by_ship_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",OperationalError('no such column: T2.cause_d_by_ship_id'),False
spider_data/database/battle_death/battle_death.sqlite,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' INTERSECT SELECT name FROM battle WHERE latin_commander = 'Baldwin I',,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(DISTINCT RESULT) FROM battle,SELECT count(DISTINCT result) FROM battle,,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,SELECT count(*) FROM battle AS T1 LEFT JOIN death AS T2 ON T1.id = T2.battle_id LEFT JOIN ship AS T3 ON T2.ship_id = T3.id WHERE T3.tonnage != 225,OperationalError('no such column: T2.battle_id'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT T1.name , T1.date FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.cause_of_death JOIN ship AS T3 ON T2.ship_id = T3.id WHERE T3.name = 'Lettice' INTERSECT SELECT T1.name , T1.date FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.cause_of_death JOIN ship AS T3 ON T2.ship_id = T3.id WHERE T3.name = 'HMS Atalanta'",OperationalError('no such column: T2.cause_of_death'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name , RESULT , bulgarian_commander FROM battle WHERE id NOT IN (SELECT T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel')",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT note FROM death WHERE note LIKE '%East%',SELECT note FROM death WHERE note LIKE '%East%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT current_address_id, permanent_address_id FROM students;","Not match: [('0144 Lamar Plaza Apt. 346', 'Suite 703'), ('0643 Muller Vista', 'Suite 383'), ('16998 Mraz Lodge', 'Apt. 689'), ('186 Evan Motorway Apt. 409', 'Suite 079'), ('193 Marlin Brook', 'Apt. 406'), ('202 Hessel Views Apt. 468', 'Apt. 305'), ('2294 Grant Square Apt. 235', 'Apt. 370'), ('3999 Aufderhar Ways Suite 593', 'Apt. 388'), ('492 Wilkinson Route', 'Suite 865'), ('67942 Carlotta Ferry Apt. 686', 'Apt. 583'), ('7081 Eda Center', 'Suite 830'), ('74046 Metz Walk Apt. 113', 'Suite 674'), ('858 Peggie Bypass Suite 212', 'Apt. 335'), ('9283 Schulist Falls Apt. 037', 'Suite 239'), ('979 Haag Shores Suite 656', 'Apt. 468')] != [('1', '5'), ('10', '15'), ('12', '11'), ('12', '5'), ('14', '4'), ('14', '9'), ('15', '14'), ('15', '3'), ('2', '15'), ('2', '9'), ('6', '3'), ('7', '11'), ('9', '5'), ('9', '8'), ('9', '9')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT current_address_id, permenent_address_id FROM students;",OperationalError('no such column: permenent_address_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM main.courses,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM main.courses,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT description FROM courses WHERE course_name = 'Math';,OperationalError('no such column: description'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM courses WHERE subject = 'Math';,OperationalError('no such column: subject'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_code FROM addresses WHERE city = 'Port Chelsea';,OperationalError('no such column: zip_code'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_code FROM addresses WHERE city = 'Port Chelsea';,OperationalError('no such column: zip_code'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT d.department_name, d.department_id FROM departments d JOIN degrees g ON d.department_id = g.department_id GROUP BY d.department_id ORDER BY COUNT(g.degree_id) DESC LIMIT 1;",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT T1.department_name , T2.department_id FROM departments AS T1 JOIN degrees AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY count(*) DESC LIMIT 1",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) AS num_departments FROM degrees,OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department) AS num_departments FROM degrees,OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree_name) as distinct_degrees FROM degrees,OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree) AS num_degrees FROM degrees,OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(DISTINCT degree) AS num_degrees FROM departments WHERE department = 'Engineering';,OperationalError('no such column: degree'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(DISTINCT degree) AS num_degrees FROM departments WHERE dept_name = 'Engineering';,OperationalError('no such column: degree'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , description FROM sections",OperationalError('no such column: description'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , section_description FROM sections",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) <= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) < 2","Not match: [('cal', '7'), ('db', '12'), ('dl', '9'), ('ds', '1'), ('en', '4'), ('fr', '5'), ('la', '6'), ('math', '2'), ('ml', '10'), ('nlp', '8'), ('pl', '14')] != [('cal', '7'), ('db', '12'), ('dl', '9'), ('en', '4'), ('la', '6'), ('math', '2'), ('ml', '10')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T2.semester_id FROM main.semesters AS T1 JOIN main.student_enrollments AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY count(*) DESC LIMIT 1",OperationalError('no such table: main.student_enrollments'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT s.semester_name , s.id FROM semesters s JOIN student_semesters ss ON s.id = ss.semester_id GROUP BY s.semester_name ORDER BY count(*) DESC LIMIT 1 ;",OperationalError('no such table: student_semesters'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM students AS T1 JOIN student_enrollment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program = 2 GROUP BY T1.student_id HAVING COUNT(*) = 1",OperationalError('no such table: student_enrollment'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM students AS T1 JOIN student_enrollment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program = 2 GROUP BY T1.student_id HAVING COUNT(T2.semester) = 1",OperationalError('no such table: student_enrollment'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name , T1.middle_name , T1.last_name FROM students AS T1 JOIN student_enrollment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_type = 'Bachelor';",OperationalError('no such table: student_enrollment'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name , T1.middle_name , T1.last_name FROM students AS T1 JOIN student_enrollment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree = 'Bachelors'",OperationalError('no such table: student_enrollment'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT degree_name, COUNT(*) AS num_students FROM degrees JOIN student_degrees ON degrees.id = student_degrees.degree_id GROUP BY degree_name ORDER BY num_students DESC LIMIT 1;",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT T1.degree_name, COUNT(*) AS num_students FROM degrees AS T1 JOIN student_degrees AS T2 ON T1.id = T2.degree_id GROUP BY T1.degree_name ORDER BY num_students DESC LIMIT 1",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT degree_program_id, summary FROM degrees ORDER BY num_students DESC LIMIT 1;",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_id , T2.summary FROM students AS T1 INNER JOIN degrees AS T2 ON T1.degree_id = T2.id GROUP BY T1.degree_id ORDER BY COUNT(*) DESC LIMIT 1",OperationalError('no such table: degrees'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS enrollment_count FROM students s JOIN student_enrollments se ON s.student_id = se.student_id GROUP BY s.student_id ORDER BY enrollment_count DESC LIMIT 1;",OperationalError('no such table: student_enrollments'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id , COUNT(*) AS num_enrollments FROM students AS T1 JOIN student_enrollments AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY num_enrollments DESC LIMIT 1",OperationalError('no such table: student_enrollments'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT s.semester_name FROM semesters s LEFT JOIN student_enrollments se ON s.semester_id = se.semester_id WHERE se.student_id IS NULL;,OperationalError('no such table: student_enrollments'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT s.semester_name FROM semesters s LEFT JOIN student_enrollments se ON s.semester_id = se.semester_id WHERE se.student_id IS NULL;,OperationalError('no such table: student_enrollments'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM courses AS T1 JOIN student_course AS T2 ON T1.course_id = T2.course_id,OperationalError('no such table: student_course'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM courses AS T1 JOIN student_course AS T2 ON T1.course_id = T2.course_id,OperationalError('no such table: student_course'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM courses AS T1 JOIN transcripts AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such column: T2.course_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM courses AS T1 JOIN student_course AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such table: student_course'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students WHERE current_address_id IN ( SELECT address_id FROM addresses WHERE state = 'North Carolina' ) AND student_id NOT IN ( SELECT student_id FROM degree_programs );,OperationalError('no such column: state'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students WHERE current_address_id IN ( SELECT address_id FROM addresses WHERE state = 'North Carolina' ) AND student_id NOT IN ( SELECT student_id FROM degree_programs );,OperationalError('no such column: state'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT t1.transcript_date , t1.transcript_id FROM transcripts AS t1 JOIN transcript_contents AS t2 ON t1.transcript_id = t2.transcript_id GROUP BY t1.transcript_id HAVING count(*) >= 2;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT t1.transcript_date , t1.transcript_id FROM transcripts AS t1 JOIN transcript_contents AS t2 ON t1.transcript_id = t2.transcript_id GROUP BY t1.transcript_id HAVING count(*) >= 2 ;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward';,"Not match: [] != [('(096)889-8954x524',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM students ORDER BY date_first_registered ASC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM students ORDER BY date_first_registered ASC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM students ORDER BY date_first_registered ASC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM students ORDER BY date_left ASC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM students WHERE current_address_id != permanent_address_id;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM students WHERE current_address_id != permanent_address_id;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT current_address_id, street1, street2, city, state, zip FROM addresses WHERE address_id = ( SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1 );",OperationalError('no such column: current_address_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT current_address_id, line_1, line_2 FROM addresses GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1;",OperationalError('no such column: current_address_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(EXTRACT(EPOCH FROM transcript_date)) AS average_timestamp FROM transcripts;,"OperationalError('near ""FROM"": syntax error')",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(transcript_date) AS average_transcript_date FROM main.transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT script_date , other_details FROM transcripts ORDER BY script_date ASC LIMIT 1;",OperationalError('no such column: script_date'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT MIN(script_date) AS earliest_release_date, other_details FROM transcripts;",OperationalError('no such column: script_date'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM main.transcripts,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM main.transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT max(transcript_date) AS last_transcript_release_date FROM main.transcripts ;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT max(script_date) AS last_transcript_release FROM transcripts;,OperationalError('no such column: script_date'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT COUNT(DISTINCT transcript_id) AS max_appearances, student_course_id FROM transcript_contents GROUP BY student_course_id ORDER BY max_appearances DESC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.course_id , COUNT(*) AS num_times FROM Transcripts AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY num_times DESC LIMIT 1",OperationalError('no such column: T1.course_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT script_date ,script_id FROM transcripts GROUP BY script_id ORDER BY count(*) ASC LIMIT 1;",OperationalError('no such column: script_date'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT script_date ,script_id FROM transcripts ORDER BY script_id ASC LIMIT 1;",OperationalError('no such column: script_date'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT DISTINCT T1.semester FROM enrollment AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_level = 'Master' OR T2.degree_level = 'Bachelor',OperationalError('no such table: enrollment'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT DISTINCT t1.semester_id FROM transcript_contents AS t1 JOIN transcripts AS t2 ON t1.transcript_id = t2.transcript_id WHERE t2.student_id IN ( SELECT student_id FROM transcripts WHERE degree_type = 'Masters' ) AND t2.student_id IN ( SELECT student_id FROM transcripts WHERE degree_type = 'Bachelors' );,OperationalError('no such column: t1.semester_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) AS number_of_addresses FROM students,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,"SELECT DISTINCT current_address_id, permanent_address_id FROM students;","Not match: [('9',)] != [('1', '5'), ('10', '15'), ('12', '11'), ('12', '5'), ('14', '4'), ('14', '9'), ('15', '14'), ('15', '3'), ('2', '15'), ('2', '9'), ('6', '3'), ('7', '11'), ('9', '5'), ('9', '8'), ('9', '9')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM students ORDER BY other_student_details DESC;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT * FROM main.students ORDER BY last_name DESC, first_name DESC;","Not match: [('assumenda',), ('atque',), ('autem',), ('dolorum',), ('et',), ('facilis',), ('laborum',), ('nesciunt',), ('non',), ('omnis',), ('omnis',), ('qui',), ('quia',), ('rerum',), ('voluptatem',)] != [('1', '10', '15', 'Timmothy', 'Anna', 'Ward', '(096)889-8954x524', 'erwin.zboncak@example.com', '965', '1971-02-05 07:28:23', '1971-05-17 19:28:49', 'quia'), ('10', '15', '14', 'Helga', 'Cleve', 'Mohr', '677.401.9382', 'nya.lesch@example.net', '43', '2009-09-25 00:14:25', '2017-07-09 21:38:43', 'rerum'), ('11', '14', '4', 'Gregg', 'Mossie', 'Schuppe', '(462)246-7921', 'nbruen@example.org', '494', '1989-05-24 23:31:29', '1975-10-09 00:49:27', 'omnis'), ('12', '14', '9', 'Orrin', 'Neal', 'Kemmer', '(982)153-1469x1733', 'beth42@example.org', '6274274', '2005-12-15 08:42:10', '2006-08-04 17:26:49', 'non'), ('13', '9', '8', 'Deon', 'Brooklyn', 'Weimann', '(213)445-0399x85208', 'jhuel@example.com', '68095', '1986-02-24 21:12:23', '2014-05-30 23:32:02', 'assumenda'), ('14', '12', '11', 'Jordy', 'Osborne', 'Rempel', '(605)919-3594x3661', 'gracie29@example.com', '34458427', '2004-12-24 12:36:46', '1999-08-24 00:07:10', 'et'), ('15', '2', '9', 'Jett', 'Alberta', 'Jaskolski', '877.549.9067x8723', 'mya88@example.org', '156', '1982-06-19 13:15:18', '1982-06-11 00:25:39', 'omnis'), ('2', '12', '5', 'Hobart', 'Lorenz', 'Balistreri', '1-009-710-5151', 'swift.kolby@example.com', '304246', '1976-10-26 02:33:06', '2013-10-05 17:41:28', 'autem'), ('3', '9', '5', 'Warren', 'Violet', 'Gleichner', '07661787471', 'johns.unique@example.net', '3', '2007-08-29 23:25:41', '2007-03-31 09:53:19', 'facilis'), ('4', '7', '11', 'Jarvis', 'Aaliyah', 'Carroll', '09700166582', 'jillian26@example.net', '141072406', '2014-03-28 05:48:23', '2007-08-02 04:12:58', 'atque'), ('5', '9', '9', 'Milton', 'Vaughn', 'Christiansen', '171-642-5684', 'lhartmann@example.org', '', '1973-05-19 19:12:46', '2007-11-28 12:50:21', 'laborum'), ('6', '6', '3', 'Stanford', 'Mona', 'Rogahn', '436.613.7683', 'skassulke@example.net', '248', '1997-03-20 16:47:25', '2016-04-09 12:27:04', 'qui'), ('7', '15', '3', 'Frida', 'Aisha', 'Huel', '1-879-796-8987x164', 'baumbach.lucious@example.org', '668', '2018-03-13 09:56:22', '1997-11-16 08:54:33', 'dolorum'), ('8', '1', '5', 'Delaney', 'Judd', 'Ankunding', '03174364122', 'dell43@example.net', '402', '1982-02-14 08:46:35', '2004-12-08 05:29:11', 'voluptatem'), ('9', '2', '15', 'Reva', 'Golda', 'Osinski', '(507)365-8405', ""qo'kon@example.com"", '39', '2017-01-04 08:10:25', '1990-09-01 05:03:27', 'nesciunt')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT * FROM main.sections WHERE section_name = 'h';,"Not match: [('et',)] != [('8', '14', 'h', 'et', '')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT other_section_details FROM sections WHERE section_name = 'h';,OperationalError('no such column: other_section_details'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students WHERE perm_address_id IN ( SELECT address_id FROM addresses WHERE country = 'Haiti' ) OR cell_mobile_number = '09700166582';,OperationalError('no such column: perm_address_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students WHERE permanent_address_id IN ( SELECT address_id FROM addresses WHERE country = 'Haiti' ) OR cell_mobile_number = '09700166582';,"Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT title FROM Cartoon ORDER BY title,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT title FROM cartoon ORDER BY title,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT title FROM Cartoon WHERE directed_by = ""Ben Jones"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT title FROM Cartoon WHERE directed_by = ""Ben Jones""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , directed_by FROM Cartoon ORDER BY original_air_date",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , directed_by FROM Cartoon ORDER BY original_air_date",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT title FROM Cartoon WHERE directed_by = ""Ben Jones"" OR directed_by = ""Brandon Vietti"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT title FROM Cartoon WHERE directed_by = ""Ben Jones"" OR directed_by = ""Brandon Vietti""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT CONTENT FROM TV_Channel WHERE series_name = ""Sky Radio"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";","SELECT count(*) FROM `TV Channel` WHERE LANGUAGE = ""English"";",OperationalError('no such table: TV Channel'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";","SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT t1.series_name FROM main.TV_Channel AS t1 INNER JOIN main.Cartoon AS t2 ON t1.id = t2.channel WHERE t2.title = 'The Rise of the Blue Beetle!';,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT series_name FROM main.TV_Channel WHERE content = 'cartoon' AND country = 'United States';,"Not match: [('Sky Radio',)] != []",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT T1.title FROM main.Cartoons AS T1 INNER JOIN main.TV_Channel AS T2 ON T1.id = T2.id WHERE T2.series_name = ""Sky Radio"";",OperationalError('no such table: main.Cartoons'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT T1.title FROM cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.id = T2.id WHERE T2.series_name = ""Sky Radio"";","Not match: [('Return of the Fearsome Fangs!',), ('The Rise of the Blue Beetle!',)] != []",False
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY rating,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT episode FROM TV_series ORDER BY rating,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT episode , rating FROM main.TV_series ORDER BY rating DESC LIMIT 3",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(SHARE) , max(SHARE) FROM TV_series","Not match: [('9.0', '5.0')] != [('5.0', '9.0')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(SHARE) , min(SHARE) FROM TV_series",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_Series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM `TV series` WHERE Episode = ""A Love of a Lifetime"";",OperationalError('no such table: TV series'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_Series AS T2 ON T1.id = T2.channel WHERE T2.episode = 'A Love of a Lifetime';,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT series_name FROM TV_series WHERE episode = 'A Love of a Lifetime';,OperationalError('no such column: series_name'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT Episode FROM main.TV_series WHERE channel = ( SELECT id FROM main.TV_Channel WHERE series_name = ""Sky Radio"" )",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT episode FROM main.TV_series WHERE series_name = ""Sky Radio"";",OperationalError('no such column: series_name'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT directed_by , count(*) FROM Cartoon GROUP BY directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT directed_by , count(*) FROM Cartoon GROUP BY directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT T1.production_code , T2.channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.channel = T2.id ORDER BY T1.original_air_date DESC LIMIT 1",OperationalError('no such column: T2.channel'),False
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT production_code , channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT package_option , series_name FROM TV_Channel WHERE high_defination_TV = ""yes""",OperationalError('no such column: high_defination_TV'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT package_option , series_name FROM TV_Channel AS T1 JOIN TV_Series AS T2 ON T1.id = T2.channel WHERE high_defination_TV = ""yes""",OperationalError('no such column: high_defination_TV'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT country FROM main.TV_Channel WHERE production_code IN ( SELECT production_code FROM main.Cartoon WHERE writer = 'Todd Casey' );,OperationalError('no such column: writer'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT T1.country FROM TV_Channel AS T1 INNER JOIN TV_Series AS T2 ON T1.id = T2.channel INNER JOIN Episode AS T3 ON T2.id = T3.series WHERE T3.written_by LIKE '%Todd Casey%';,OperationalError('no such table: Episode'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT country FROM main.TV_Channel WHERE id NOT IN ( SELECT channel FROM main.TV_Series WHERE content LIKE '%Cartoon%' AND id IN ( SELECT production_code FROM main.Cartoon WHERE writer = 'Todd Casey' ) );,OperationalError('no such column: writer'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT country FROM TV_Channel WHERE content != 'cartoons' AND writer != 'Todd Casey';,OperationalError('no such column: writer'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT t1.series_name , t1.country FROM TV_Channel AS t1 JOIN TV_Series AS t2 ON t1.id = t2.channel WHERE t2.director = ""Ben Jones"" OR t2.director = ""Michael Chang"";",OperationalError('no such column: t2.director'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT series_name , country FROM TV_Channel WHERE content = 'cartoons' AND channel IN ( SELECT channel FROM TV_Series WHERE director = 'Ben Jones' UNION SELECT channel FROM TV_Series WHERE director = 'Michael Chang' )",OperationalError('no such column: director'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT pixel_aspect_ratio_ PAR , country FROM TV_Channel WHERE LANGUAGE != 'English'",OperationalError('no such column: pixel_aspect_ratio_'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT pixel_aspect_ratio_ PAR , country FROM tv_channel WHERE language != 'English'",OperationalError('no such column: pixel_aspect_ratio_'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY country HAVING count(id) > 2,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY country HAVING count(*) > 2,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel EXCEPT SELECT channel FROM TV_Series WHERE production_code IN ( SELECT production_code FROM Production WHERE director = 'Ben Jones' ) AND content = 'cartoon';,OperationalError('no such table: Production'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel EXCEPT SELECT channel FROM TV_Series WHERE director = 'Ben Jones' AND content = 'cartoons';,OperationalError('no such column: director'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT DISTINCT p.OPTION FROM TV_Channel c JOIN Package p ON c.id = p.channel_id LEFT JOIN Series s ON c.id = s.channel_id AND s.director = 'Ben Jones' WHERE s.id IS NULL;,OperationalError('no such table: Package'),False
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT package_option FROM TV_Channel WHERE id NOT IN ( SELECT channel FROM TV_Series WHERE production_code IN ( SELECT production_code FROM Production WHERE director = 'Ben Jones' AND content = 'cartoons' ) );,OperationalError('no such table: Production'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Tables_Made) FROM poker_player WHERE Earnings < 200000,OperationalError('no such column: Final_Tables_Made'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T2.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T2.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T1.Earnings > 300000,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T1.Earnings > 300000,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID ORDER BY T1.Final_Table_Made ASC,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID ORDER BY T1.Final_Table_Made ASC,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM main.player AS T1 INNER JOIN main.poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,OperationalError('no such table: main.player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM main.player AS T1 JOIN main.poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,OperationalError('no such table: main.player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM poker_player AS T1 INNER JOIN main.player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,OperationalError('no such table: main.player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM poker_player AS T1 INNER JOIN main.player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,OperationalError('no such table: main.player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T1.Earnings) FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Height > 200,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T1.Earnings) FROM poker_player AS T1 INNER JOIN main.people AS T2 ON T1.Player_ID = T2.People_ID WHERE T2.Height > 200,OperationalError('no such column: T1.Player_ID'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID ORDER BY T1.Earnings DESC,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID ORDER BY T1.Earnings DESC,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM player GROUP BY Nationality",OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM poker_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID GROUP BY Nationality",OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM main.people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM main.people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID GROUP BY T2.Nationality HAVING COUNT(*) >= 2,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM poker_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID GROUP BY T2.Nationality HAVING COUNT(*) >= 2,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM poker_player ORDER BY Name ASC",OperationalError('no such column: Name'),False
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM people ORDER BY Name ASC",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM poker_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Nationality != ""Russia""",OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM poker_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Nationality != ""Russia""",OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM main.people WHERE Person_ID NOT IN (SELECT Person_ID FROM main.poker_player),OperationalError('no such column: Person_ID'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM main.people WHERE Person_ID NOT IN (SELECT Person_ID FROM main.poker_player),OperationalError('no such column: Person_ID'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID,OperationalError('no such table: player'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM poker_player AS T1 INNER JOIN player AS T2 ON T1.Player_ID = T2.Player_ID,OperationalError('no such table: player'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM area_code_state,SELECT count(*) FROM AREAS_CODE_STATE,OperationalError('no such table: AREAS_CODE_STATE'),False
spider_data/database/voter_1/voter_1.sqlite,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id , phone_number , state FROM votes",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT max(area_code) , min(area_code) FROM area_code_state",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT max(created) FROM votes WHERE state  =  'CA',SELECT max(created) FROM votes WHERE state = 'CA',,True
spider_data/database/voter_1/voter_1.sqlite,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT DISTINCT state ,  created FROM votes","SELECT DISTINCT state , created FROM votes",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","SELECT T1.contestant_number , T1.contestant_name FROM CONTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",OperationalError('no such table: CONTANTS'),False
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT T1.contestant_number , T1.contestant_name FROM CONTENTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",OperationalError('no such table: CONTENTS'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA',,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT count(*) FROM CONTENDANTS WHERE contest_number NOT IN ( SELECT contest_number FROM Votes );,OperationalError('no such table: CONTENDANTS'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.area_code FROM area_code_state AS T1 INNER JOIN votes AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT T1.created , T1.state , T1.phone_number FROM VOTES AS T1 JOIN CONTENDANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = ""Tabatha Gehling""",OperationalError('no such table: CONTENDANTS'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT T1.area_code FROM area_code_state AS T1 INNER JOIN votes AS T2 ON T1.area_code = T2.phone_number INNER JOIN contestants AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM area_code_state AS T1 INNER JOIN votes AS T2 ON T1.area_code = T2.phone_number INNER JOIN contestants AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Kelly Clauss',"Not match: [('212',), ('315',), ('347',), ('516',), ('518',), ('585',), ('607',), ('631',), ('646',), ('716',), ('718',), ('845',), ('914',), ('917',)] != []",False
spider_data/database/voter_1/voter_1.sqlite,"select contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%',,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT name FROM country WHERE indep > 1950,OperationalError('no such column: indep'),False
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT name FROM country WHERE indep > 1950,OperationalError('no such column: indep'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE Government_Form = ""Republic""",OperationalError('no such column: Government_Form'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""","SELECT Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T2.Name = ""Kabul""",OperationalError('no such column: T2.Country'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT language FROM main_country_language WHERE country_code = 'AHO' ORDER BY percentage DESC LIMIT 1;,OperationalError('no such table: main_country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT language FROM main_country_language WHERE country_code = 'ABW' AND percentage = ( SELECT MAX(percentage) FROM main_country_language WHERE country_code = 'ABW' );,OperationalError('no such table: main_country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region , Population FROM country WHERE name = ""Angola""","Not match: [('12878000', 'Central Africa')] != [('Central Africa', '12878000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region , Population FROM country WHERE name = ""Angola""","Not match: [('12878000', 'Central Africa')] != [('Central Africa', '12878000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",SELECT T1.name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.code = T2.countrycode WHERE T1.continent = 'Asia' ORDER BY T1.LifeExpectancy LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE Government_form = ""US Territory""",OperationalError('no such column: Government_form'),False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE governmentform = ""US Territory""",,True
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT language) FROM countrylanguage,,True
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT language) FROM countrylanguage,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT T1.GovernmentForm) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT T1.GovernmentForm) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Africa""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(DISTINCT language) AS total_languages FROM country_language WHERE countrycode = 'ABW';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(*) AS NumberOfLanguages FROM country_language WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' );,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT SUM(CASE WHEN is_official = 'T' THEN 1 ELSE 0 END) AS num_official_languages FROM country_language WHERE country_code = 'AFG';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT SUM(CASE WHEN is_official = 'T' THEN 1 ELSE 0 END) AS num_official_languages FROM country_language WHERE country_code = 'AFG';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT (T2.Language) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country_language GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT continent FROM country_language GROUP BY continent ORDER BY COUNT(DISTINCT language) DESC LIMIT 1;,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT continent, COUNT(DISTINCT language) AS language_count FROM country_language JOIN country ON country_language.countrycode = country.code GROUP BY continent ORDER BY language_count DESC LIMIT 1;",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(*) FROM country_language WHERE language = 'English' INTERSECT SELECT COUNT(*) FROM country_language WHERE language = 'Dutch';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(*) FROM country_language WHERE language = 'English' OR language = 'Dutch';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode WHERE cl1.Language = 'English' INTERSECT SELECT c.Name FROM country c JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl2.Language = 'French',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT c.Name FROM country c JOIN country_language cl1 ON c.Code = cl1.CountryCode WHERE cl1.Language = 'English' INTERSECT SELECT c.Name FROM country c JOIN country_language cl2 ON c.Code = cl2.CountryCode WHERE cl2.Language = 'French',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT c.Name FROM country c JOIN country_language cl1 ON c.Code = cl1.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' JOIN country_language cl2 ON c.Code = cl2.CountryCode WHERE cl2.Language = 'French' AND cl2.IsOfficial = 'T',"OperationalError('near ""JOIN"": syntax error')",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT c.Name FROM country c JOIN country_language cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' INTERSECT SELECT c.Name FROM country c JOIN country_language cl ON c.Code = cl.CountryCode WHERE cl.Language = 'French' AND cl.IsOfficial = 'T',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT continent) AS distinct_continents FROM country_language WHERE language = 'Chinese';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""","SELECT COUNT(DISTINCT continent) AS number_of_continents FROM country_language WHERE language = ""Chinese"";",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT DISTINCT region FROM country_language WHERE language = ""English"" OR language = ""Dutch"";",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT DISTINCT T1.Region FROM main.country AS T1 INNER JOIN main.country_language AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')",OperationalError('no such table: main.country_language'),False
spider_data/database/world_1/world_1.sqlite,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""","SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE (T2.Language = ""English"" AND T2.IsOfficial = ""T"") OR (T2.Language = ""Dutch"" AND T2.IsOfficial = ""T"")","Not match: [] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""","SELECT c.Name FROM country c JOIN country_language cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 'T'",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT language FROM main_country_language WHERE country_code IN ( SELECT code FROM main_country WHERE region = 'Asia' ) GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1;,OperationalError('no such table: main_country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT language FROM country_language WHERE country IN ( SELECT code FROM country WHERE continent = 'Asia' ) GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1","SELECT T1.language FROM main_country_language AS T1 INNER JOIN main_country AS T2 ON T1.country_code = T2.Code WHERE T2.GovernmentForm = ""Republic"" GROUP BY T1.language HAVING COUNT(T1.country_code) = 1",OperationalError('no such table: main_country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T1.language FROM main_country_language AS T1 INNER JOIN main_country AS T2 ON T1.country_code = T2.Code WHERE T2.`Government Form` = 'Republic' GROUP BY T1.language HAVING COUNT(T1.country_code) = 1,OperationalError('no such table: main_country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT c.Name FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' ORDER BY c.Population DESC LIMIT 1,"Not match: [('New York', '8008278')] != [('New York',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1","SELECT c.Name AS CityName, c.Population FROM main.city c JOIN main.country co ON c.CountryCode = co.Code JOIN main.countrylanguage cl ON co.Code = cl.CountryCode WHERE cl.Language = 'English' ORDER BY c.Population DESC LIMIT 1;",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT name , population , LifeExpectancy FROM country WHERE continent = ""Asia"" ORDER BY surfacearea DESC LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT AVG(T1.LifeExpectancy) AS avg_life_expectancy FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'F',"Not match: [('65.4827027027027',)] != [('74.95',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")","SELECT AVG(T1.life_expectancy) FROM country AS T1 INNER JOIN country_language AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""F""",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT SUM(population) AS total_population FROM main.country WHERE country_code NOT IN ( SELECT country_code FROM main.country_language WHERE language = 'English' );,OperationalError('no such table: main.country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT SUM(population) AS total_population FROM main.country WHERE country_code NOT IN ( SELECT country_code FROM main.country_language WHERE language = 'English' );,OperationalError('no such table: main.country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.language FROM country AS T1 INNER JOIN country_language AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.language FROM country AS T1 INNER JOIN country_language AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.language) AS total_unique_official_languages FROM country AS T1 INNER JOIN country_language AS T2 ON T1.Code = T2.CountryCode WHERE T1.Independence > 1930 AND T2.IsOfficial = 'T',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT language) AS total_official_languages FROM country_language JOIN country ON country_language.country_code = country.Code WHERE country.Independence > 1930 AND country_language.IsOfficial = 'T';,OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT name FROM country WHERE surfacearea > (SELECT min(surfacearea) FROM country WHERE continent = ""Europe"")",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT name FROM country WHERE surface_area > (SELECT min(surface_area) FROM country WHERE continent = ""Europe"")",OperationalError('no such column: surface_area'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT max(population) FROM country WHERE continent = 'Asia'),,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")",SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT max(population) FROM country WHERE continent = 'Asia'),"Not match: [('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',), ('Sao Tome and Principe',), ('Seychelles',)] != [('Algeria',), ('Angola',), ('Benin',), ('Botswana',), ('British Indian Ocean Territory',), ('Burkina Faso',), ('Burundi',), ('Cameroon',), ('Cape Verde',), ('Central African Republic',), ('Chad',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Côte d’Ivoire',), ('Djibouti',), ('Egypt',), ('Equatorial Guinea',), ('Eritrea',), ('Ethiopia',), ('Gabon',), ('Gambia',), ('Ghana',), ('Guinea',), ('Guinea-Bissau',), ('Kenya',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Madagascar',), ('Malawi',), ('Mali',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Morocco',), ('Mozambique',), ('Namibia',), ('Niger',), ('Nigeria',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Sao Tome and Principe',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Somalia',), ('South Africa',), ('Sudan',), ('Swaziland',), ('Tanzania',), ('Togo',), ('Tunisia',), ('Uganda',), ('Western Sahara',), ('Zambia',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT min(population) FROM country WHERE continent = 'Africa'),"Not match: [('Bangladesh',), ('China',), ('India',), ('Indonesia',), ('Japan',), ('Pakistan',)] != [('Afghanistan',), ('Armenia',), ('Azerbaijan',), ('Bahrain',), ('Bangladesh',), ('Bhutan',), ('Brunei',), ('Cambodia',), ('China',), ('Cyprus',), ('East Timor',), ('Georgia',), ('Hong Kong',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Israel',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kuwait',), ('Kyrgyzstan',), ('Laos',), ('Lebanon',), ('Macao',), ('Malaysia',), ('Maldives',), ('Mongolia',), ('Myanmar',), ('Nepal',), ('North Korea',), ('Oman',), ('Pakistan',), ('Palestine',), ('Philippines',), ('Qatar',), ('Saudi Arabia',), ('Singapore',), ('South Korea',), ('Sri Lanka',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Thailand',), ('Turkey',), ('Turkmenistan',), ('United Arab Emirates',), ('Uzbekistan',), ('Vietnam',), ('Yemen',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT min(population) FROM country WHERE continent = 'Africa'),,True
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT DISTINCT T1.country_code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code = T2.country_code WHERE T2.language != ""English""",OperationalError('no such column: T1.country_code'),False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT DISTINCT country_code FROM countrylanguage WHERE language != ""English""",OperationalError('no such column: country_code'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT country_code FROM countrylanguage WHERE language != ""English""",OperationalError('no such column: country_code'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT country_code FROM countrylanguage WHERE language != ""English""",OperationalError('no such column: country_code'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT country_code FROM country WHERE government_form != 'Republic' EXCEPT SELECT country_code FROM country_language WHERE language = 'English',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT country_code FROM country WHERE government != 'Republic' EXCEPT SELECT country_code FROM country_language WHERE language = 'English',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"SELECT c.name AS country_name, ci.name AS city_name FROM main.country c JOIN main.city ci ON c.code = ci.country_code JOIN main.country_language cl ON c.code = cl.country_code WHERE cl.language = 'English' AND cl.isofficial = 'F' ORDER BY c.name, ci.name;",OperationalError('no such table: main.country_language'),False
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = ""Europe"" AND T2.Language = ""English"" AND T2.IsOfficial = ""F""","Not match: [('A Coruña (La Coruña)',), ('Aachen',), ('Aalborg',), ('Abakan',), ('Aix-en-Provence',), ('Albacete',), ('Alcalá de Henares',), ('Alcorcón',), ('Alessandria',), ('Algeciras',), ('Alicante [Alacant]',), ('Alkmaar',), ('Almere',), ('Almería',), ('Almetjevsk',), ('Altševsk',), ('Amadora',), ('Amersfoort',), ('Amiens',), ('Amsterdam',), ('Ancona',), ('Andorra la Vella',), ('Andria',), ('Angarsk',), ('Angers',), ('Antwerpen',), ('Anzero-Sudzensk',), ('Apeldoorn',), ('Arad',), ('Arezzo',), ('Argenteuil',), ('Arkangeli',), ('Armavir',), ('Arnhem',), ('Arzamas',), ('Astrahan',), ('Athenai',), ('Atšinsk',), ('Augsburg',), ('Bacau',), ('Badajoz',), ('Badalona',), ('Baia Mare',), ('Balakovo',), ('Balašiha',), ('Balašov',), ('Balti',), ('Banja Luka',), ('Barakaldo',), ('Baranovitši',), ('Barcelona',), ('Bari',), ('Barletta',), ('Barnaul',), ('Basel',), ('Bataisk',), ('Belgorod',), ('Bender (Tîghina)',), ('Beograd',), ('Berdjansk',), ('Berdytšiv',), ('Berezniki',), ('Bergamo',), ('Bergen',), ('Bergisch Gladbach',), ('Berlin',), ('Bern',), ('Besançon',), ('Bialystok',), ('Bielefeld',), ('Bielsko-Biala',), ('Bijsk',), ('Bila Tserkva',), ('Bilbao',), ('Blagoveštšensk',), ('Bobruisk',), ('Bochum',), ('Bologna',), ('Bolzano',), ('Bonn',), ('Bordeaux',), ('Borisov',), ('Borås',), ('Botosani',), ('Bottrop',), ('Boulogne-Billancourt',), ('Braga',), ('Braila',), ('Brasov',), ('Bratislava',), ('Bratsk',), ('Braunschweig',), ('Breda',), ('Bremen',), ('Bremerhaven',), ('Brescia',), ('Brest',), ('Brindisi',), ('Brjansk',), ('Brno',), ('Brovary',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bucuresti',), ('Budapest',), ('Bugulma',), ('Burgas',), ('Burgos',), ('Buzau',), ('Bydgoszcz',), ('Bytom',), ('Bærum',), ('Caen',), ('Cagliari',), ('Cartagena',), ('Castellón de la Plana [Castell',), ('Catania',), ('Catanzaro',), ('Cesena',), ('Ceské Budejovice',), ('Charleroi',), ('Chemnitz',), ('Chisinau',), ('Chorzów',), ('Città del Vaticano',), ('Clermont-Ferrand',), ('Cluj-Napoca',), ('Constanta',), ('Cottbus',), ('Coímbra',), ('Craiova',), ('Czestochowa',), ('Cádiz',), ('Córdoba',), ('Dabrowa Górnicza',), ('Darmstadt',), ('Daugavpils',), ('Debrecen',), ('Delft',), ('Derbent',), ('Dijon',), ('Dimitrovgrad',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dobric',), ('Donetsk',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dortmund',), ('Dos Hermanas',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Duisburg',), ('Dzerzinsk',), ('Düren',), ('Düsseldorf',), ('Ede',), ('Eindhoven',), ('Elblag',), ('Elche [Elx]',), ('Elektrostal',), ('Elista',), ('Emmen',), ('Engels',), ('Enschede',), ('Erfurt',), ('Erlangen',), ('Espoo',), ('Essen',), ('Esslingen am Neckar',), ('Ferrara',), ('Firenze',), ('Focsani',), ('Foggia',), ('Forlì',), ('Frankfurt am Main',), ('Frederiksberg',), ('Freiburg im Breisgau',), ('Fuenlabrada',), ('Fürth',), ('Galati',), ('Gdansk',), ('Gdynia',), ('Gelsenkirchen',), ('Geneve',), ('Genova',), ('Gent',), ('Gera',), ('Getafe',), ('Gijón',), ('Giugliano in Campania',), ('Glazov',), ('Gliwice',), ('Gomel',), ('Gorlivka',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Granada',), ('Graz',), ('Grenoble',), ('Grodno',), ('Groningen',), ('Grozny',), ('Grudziadz',), ('Györ',), ('Gävle',), ('Göttingen',), ('Gütersloh',), ('Haag',), ('Haarlem',), ('Haarlemmermeer',), ('Habarovsk',), ('Hagen',), ('Halle/Saale',), ('Hamburg',), ('Hamm',), ('Hannover',), ('Harkova [Harkiv]',), ('Heerlen',), ('Heidelberg',), ('Heilbronn',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Herakleion',), ('Herne',), ('Herson',), ('Hildesheim',), ('Himki',), ('Hmelnytskyi',), ('Hradec Králové',), ('Huelva',), ('Iasi',), ('Ingolstadt',), ('Innsbruck',), ('Irkutsk',), ('Iserlohn',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Izevsk',), ('Izmajil',), ('Jakutsk',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jaén',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelets',), ('Jena',), ('Jenakijeve',), ('Jerez de la Frontera',), ('Jessentuki',), ('Jevpatorija',), ('Joškar-Ola',), ('Juzno-Sahalinsk',), ('Jönköping',), ('Kaiserslautern',), ('Kaliningrad',), ('Kalisz',), ('Kallithea',), ('Kaluga',), ('Kamensk-Uralski',), ('Kamjanets-Podilskyi',), ('Kamyšin',), ('Kansk',), ('Karlsruhe',), ('Kassel',), ('Katowice',), ('Kaunas',), ('Kazan',), ('Kecskemét',), ('Kemerovo',), ('Kertš',), ('Kiel',), ('Kielce',), ('Kinešma',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kiseljovsk',), ('Kislovodsk',), ('Klagenfurt',), ('Klaipeda',), ('Klin',), ('Koblenz',), ('Kolomna',), ('Kolpino',), ('Komsomolsk-na-Amure',), ('Konotop',), ('Korolev',), ('Kostjantynivka',), ('Kostroma',), ('Koszalin',), ('Kovrov',), ('Košice',), ('Kragujevac',), ('Kraków',), ('Kramatorsk',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krefeld',), ('Krementšuk',), ('Kryvyi Rig',), ('Kurgan',), ('Kursk',), ('Kuznetsk',), ('Kyiv',), ('Kyzyl',), ('Köln',), ('København',), ('La Spezia',), ('Lahti',), ('Larisa',), ('Las Palmas de Gran Canaria',), ('Latina',), ('Lausanne',), ('Le Havre',), ('Le Mans',), ('Lecce',), ('Leganés',), ('Legnica',), ('Leiden',), ('Leipzig',), ('Leninsk-Kuznetski',), ('Leverkusen',), ('León',), ('Liberec',), ('Lida',), ('Liepaja',), ('Lille',), ('Limoges',), ('Linköping',), ('Linz',), ('Lipetsk',), ('Lisboa',), ('Livorno',), ('Liège',), ('Ljubertsy',), ('Ljubljana',), ('Lleida (Lérida)',), ('Logroño',), ('Longyearbyen',), ('Lublin',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lund',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Lviv',), ('Lyon',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('Lódz',), ('Lübeck',), ('Lünen',), ('Maastricht',), ('Madrid',), ('Magadan',), ('Magdeburg',), ('Magnitogorsk',), ('Mahatškala',), ('Maikop',), ('Mainz',), ('Makijivka',), ('Malmö',), ('Mannheim',), ('Marbella',), ('Maribor',), ('Mariupol',), ('Marl',), ('Marseille',), ('Mataró',), ('Melitopol',), ('Messina',), ('Metz',), ('Mezduretšensk',), ('Miass',), ('Milano',), ('Minsk',), ('Miskolc',), ('Mitšurinsk',), ('Modena',), ('Moers',), ('Mogiljov',), ('Molodetšno',), ('Monaco-Ville',), ('Mons',), ('Monte-Carlo',), ('Montpellier',), ('Montreuil',), ('Monza',), ('Moscow',), ('Mozyr',), ('Mukatševe',), ('Mulhouse',), ('Munich [München]',), ('Murcia',), ('Murmansk',), ('Murom',), ('Mykolajiv',), ('Mytištši',), ('Málaga',), ('Móstoles',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Münster',), ('Nabereznyje Tšelny',), ('Nahodka',), ('Naltšik',), ('Namur',), ('Nancy',), ('Nantes',), ('Napoli',), ('Neftejugansk',), ('Neftekamsk',), ('Neuss',), ('Nevinnomyssk',), ('Nice',), ('Nijmegen',), ('Nikopol',), ('Niznekamsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Niš',), ('Noginsk',), ('Nojabrsk',), ('Norilsk',), ('Norrköping',), ('Novara',), ('Novi Sad',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novouralsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Nyiregyháza',), ('Nîmes',), ('Nürnberg',), ('Oberhausen',), ('Obninsk',), ('Odense',), ('Odesa',), ('Odintsovo',), ('Offenbach am Main',), ('Oktjabrski',), ('Oldenburg',), ('Oleksandrija',), ('Olomouc',), ('Olsztyn',), ('Omsk',), ('Opole',), ('Oradea',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orjol',), ('Orléans',), ('Orsk',), ('Orša',), ('Osijek',), ('Oslo',), ('Osnabrück',), ('Ostrava',), ('Oulu',), ('Ourense (Orense)',), ('Oviedo',), ('Paderborn',), ('Padova',), ('Palermo',), ('Palma de Mallorca',), ('Pamplona [Iruña]',), ('Panevezys',), ('Pardubice',), ('Paris',), ('Parma',), ('Patras',), ('Pavlograd',), ('Penza',), ('Peristerion',), ('Perm',), ('Perpignan',), ('Perugia',), ('Pervouralsk',), ('Pesaro',), ('Pescara',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Pforzheim',), ('Piacenza',), ('Piatra Neamt',), ('Pihkova',), ('Pinsk',), ('Pireus',), ('Pisa',), ('Pitesti',), ('Pjatigorsk',), ('Pleven',), ('Plock',), ('Ploiesti',), ('Plovdiv',), ('Plzen',), ('Podgorica',), ('Podolsk',), ('Porto',), ('Potsdam',), ('Poznan',), ('Praha',), ('Prato',), ('Prešov',), ('Prizren',), ('Priština',), ('Prokopjevsk',), ('Pultava [Poltava]',), ('Puškin',), ('Pécs',), ('Radom',), ('Ratingen',), ('Ravenna',), ('Recklinghausen',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reims',), ('Remscheid',), ('Rennes',), ('Resita',), ('Reutlingen',), ('Reykjavík',), ('Riga',), ('Rijeka',), ('Rimini',), ('Rivne',), ('Rjazan',), ('Roma',), ('Rostock',), ('Rostov-na-Donu',), ('Rotterdam',), ('Roubaix',), ('Rouen',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruse',), ('Rybinsk',), ('Rybnik',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Saarbrücken',), ('Sabadell',), ('Salamanca',), ('Salavat',), ('Salerno',), ('Salzburg',), ('Salzgitter',), ('Samara',), ('San Marino',), ('Santa Coloma de Gramenet',), ('Santa Cruz de Tenerife',), ('Santander',), ('Santiago de Compostela',), ('Sarajevo',), ('Saransk',), ('Sarapul',), ('Saratov',), ('Sassari',), ('Satu Mare',), ('Schaan',), ('Schaerbeek',), ('Schwerin',), ('Sergijev Posad',), ('Serov',), ('Serpuhov',), ('Serravalle',), ('Sevastopol',), ('Severodvinsk',), ('Seversk',), ('Sevilla',), ('Sibiu',), ('Siegen',), ('Simferopol',), ('Sjeverodonetsk',), ('Skopje',), ('Sliven',), ('Slovjansk',), ('Slupsk',), ('Smolensk',), ('Sofija',), ('Soligorsk',), ('Solikamsk',), ('Solingen',), ('Sosnowiec',), ('Sotši',), ('Split',), ('St Petersburg',), ('St-Étienne',), ('Stahanov',), ('Stara Zagora',), ('Staryi Oskol',), ('Stavanger',), ('Stavropol',), ('Sterlitamak',), ('Stockholm',), ('Strasbourg',), ('Stuttgart',), ('Subotica',), ('Suceava',), ('Sumy',), ('Sundsvall',), ('Surgut',), ('Syktyvkar',), ('Syrakusa',), ('Syzran',), ('Szczecin',), ('Szeged',), ('Székesfehérvár',), ('Taganrog',), ('Tallinn',), ('Tambov',), ('Tampere',), ('Taranto',), ('Tarnów',), ('Tarragona',), ('Tartu',), ('Terni',), ('Ternopil',), ('Terrassa',), ('Thessaloniki',), ('Tilburg',), ('Timisoara',), ('Tirana',), ('Tiraspol',), ('Tjumen',), ('Tobolsk',), ('Toljatti',), ('Tomsk',), ('Torino',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torun',), ('Toulon',), ('Toulouse',), ('Tourcoing',), ('Tours',), ('Trento',), ('Trier',), ('Trieste',), ('Trondheim',), ('Tula',), ('Tulcea',), ('Turku [Åbo]',), ('Tver',), ('Tychy',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Mures',), ('Tórshavn',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšita',), ('Udine',), ('Ufa',), ('Uhta',), ('Ulan-Ude',), ('Uljanovsk',), ('Ulm',), ('Uman',), ('Umeå',), ('Uppsala',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Uzgorod',), ('Vaduz',), ('Valencia',), ('Valladolid',), ('Vantaa',), ('Varna',), ('Velbert',), ('Veliki Novgorod',), ('Velikije Luki',), ('Venezia',), ('Verona',), ('Vicenza',), ('Vigo',), ('Villeurbanne',), ('Vilnius',), ('Vinnytsja',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vladikavkaz',), ('Vladimir',), ('Vladivostok',), ('Volgodonsk',), ('Volgograd',), ('Vologda',), ('Volzski',), ('Vorkuta',), ('Voronez',), ('Votkinsk',), ('Västerås',), ('Walbrzych',), ('Warszawa',), ('Wien',), ('Wiesbaden',), ('Witten',), ('Wloclawek',), ('Wolfsburg',), ('Wroclaw',), ('Wuppertal',), ('Würzburg',), ('Zaanstad',), ('Zabrze',), ('Zagreb',), ('Zaporizzja',), ('Zaragoza',), ('Zelenodolsk',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zenica',), ('Zielona Góra',), ('Zlatoust',), ('Zoetermeer',), ('Zukovski',), ('Zwickau',), ('Zwolle',), ('Zytomyr',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('´s-Hertogenbosch',), ('Århus',), ('Örebro',), ('Ústí nad Labem',), ('Šahty',), ('Šiauliai',), ('Šostka',), ('Štšolkovo',), ('Šumen',)] != []",False
spider_data/database/world_1/world_1.sqlite,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T1.name FROM country AS T1 INNER JOIN country_language AS T2 ON T1.Code = T2.CountryCode INNER JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.Language = 'Chinese' AND T2.IsOfficial = 'T' AND T1.Continent = 'Asia',OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Asia"" AND T2.Language = ""Chinese"" AND T2.IsOfficial = ""T""","Not match: [('Acheng',), ('Amoy [Xiamen]',), ('Anda',), ('Ankang',), ('Anqing',), ('Anshan',), ('Anshun',), ('Anyang',), ('Aqsu',), ('Baicheng',), ('Baiyin',), ('Baoding',), ('Baoji',), ('Baotou',), ('Beihai',), ('Beipiao',), ('Bei´an',), ('Bengbu',), ('Benxi',), ('Binzhou',), ('Bose',), ('Bozhou',), ('Cangzhou',), ('Changchun',), ('Changde',), ('Changji',), ('Changsha',), ('Changshu',), ('Changzhi',), ('Changzhou',), ('Chaohu',), ('Chaoyang',), ('Chaozhou',), ('Chengde',), ('Chengdu',), ('Chenzhou',), ('Chifeng',), ('Chongqing',), ('Chuzhou',), ('Cixi',), ('Dali',), ('Dalian',), ('Dandong',), ('Danjiangkou',), ('Danyang',), ('Daqing',), ('Datong',), ('Daxian',), ('Da´an',), ('Deyang',), ('Dezhou',), ('Dongtai',), ('Dongwan',), ('Dongying',), ('Dujiangyan',), ('Dunhua',), ('Duyun',), ('Emeishan',), ('Enshi',), ('Ezhou',), ('Fengcheng',), ('Foshan',), ('Fujin',), ('Fuling',), ('Fuqing',), ('Fushun',), ('Fuxin',), ('Fuyang',), ('Fuyu',), ('Fuzhou',), ('Fu´an',), ('Ganzhou',), ('Gejiu',), ('Ghulja',), ('Gongziling',), ('Guangshui',), ('Guangyuan',), ('Guigang',), ('Guilin',), ('Guiyang',), ('Haicheng',), ('Haikou',), ('Hailar',), ('Hailun',), ('Haining',), ('Hami',), ('Handan',), ('Hangzhou',), ('Hanzhong',), ('Harbin',), ('Hebi',), ('Hefei',), ('Hegang',), ('Hengshui',), ('Hengyang',), ('Heyuan',), ('Heze',), ('Hohhot',), ('Honghu',), ('Hongjiang',), ('Huadian',), ('Huaibei',), ('Huaihua',), ('Huainan',), ('Huaiyin',), ('Huai´an',), ('Huangshan',), ('Huangshi',), ('Huangyan',), ('Huaying',), ('Huizhou',), ('Hunjiang',), ('Huzhou',), ('Jiamusi',), ('Jiangmen',), ('Jiangyin',), ('Jiangyou',), ('Jiaohe',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaxing',), ('Jieyang',), ('Jilin',), ('Jinan',), ('Jinchang',), ('Jincheng',), ('Jingdezhen',), ('Jinhua',), ('Jining',), ('Jinmen',), ('Jinxi',), ('Jinzhou',), ('Jiujiang',), ('Jiutai',), ('Jixi',), ('Ji´an',), ('Junan',), ('Kaifeng',), ('Kaili',), ('Kaiyuan',), ('Kanton [Guangzhou]',), ('Korla',), ('Kunming',), ('Kunshan',), ('Kuytun',), ('Laiwu',), ('Laiyang',), ('Laizhou',), ('Langfang',), ('Lanzhou',), ('Laohekou',), ('Leiyang',), ('Lengshuijiang',), ('Leshan',), ('Lhasa',), ('Liangcheng',), ('Lianyuan',), ('Lianyungang',), ('Liaocheng',), ('Liaoyang',), ('Liaoyuan',), ('Liling',), ('Linchuan',), ('Linfen',), ('Linhai',), ('Linhe',), ('Linqing',), ('Linyi',), ('Liupanshui',), ('Liuzhou',), ('Liu´an',), ('Liyang',), ('Longjing',), ('Longkou',), ('Longyan',), ('Loudi',), ('Luohe',), ('Luoyang',), ('Luzhou',), ('Manzhouli',), ('Maoming',), ('Ma´anshan',), ('Meihekou',), ('Meixian',), ('Mianyang',), ('Mishan',), ('Mudanjiang',), ('Nanchang',), ('Nanchong',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanping',), ('Nantong',), ('Nanyang',), ('Neijiang',), ('Ningbo',), ('Panjin',), ('Panzhihua',), ('Peking',), ('Pingdingshan',), ('Pingdu',), ('Pingliang',), ('Pingxiang',), ('Pingyi',), ('Puqi',), ('Putian',), ('Puyang',), ('Qaramay',), ('Qashqar',), ('Qianjiang',), ('Qidong',), ('Qingdao',), ('Qingyuan',), ('Qingzhou',), ('Qinhuangdao',), ('Qinzhou',), ('Qiqihar',), ('Qitaihe',), ('Quanzhou',), ('Qujing',), ('Quzhou',), ('Renqiu',), ('Rizhao',), ('Rui´an',), ('Sanmenxia',), ('Sanming',), ('Sanya',), ('Shanghai',), ('Shangqiu',), ('Shangrao',), ('Shangzi',), ('Shantou',), ('Shanwei',), ('Shaoguan',), ('Shaowu',), ('Shaoxing',), ('Shaoyang',), ('Shashi',), ('Shenyang',), ('Shenzhen',), ('Shihezi',), ('Shijiazhuang',), ('Shishou',), ('Shiyan',), ('Shizuishan',), ('Shuangcheng',), ('Shuangyashan',), ('Singapore',), ('Siping',), ('Suihua',), ('Suining',), ('Suizhou',), ('Suqian',), ('Suzhou',), ('Taiyuan',), ('Taizhou',), ('Tai´an',), ('Tangshan',), ('Taonan',), ('Tengzhou',), ('Tianjin',), ('Tianmen',), ('Tianshui',), ('Tiefa',), ('Tieli',), ('Tieling',), ('Tong Xian',), ('Tongchuan',), ('Tonghua',), ('Tongliao',), ('Tongling',), ('Tumen',), ('Ulanhot',), ('Urumtši [Ürümqi]',), ('Wafangdian',), ('Wanxian',), ('Weifang',), ('Weihai',), ('Weinan',), ('Wendeng',), ('Wenzhou',), ('Wuhai',), ('Wuhan',), ('Wuhu',), ('Wuwei',), ('Wuxi',), ('Wuzhou',), ('Xiangfan',), ('Xiangtan',), ('Xianning',), ('Xiantao',), ('Xianyang',), ('Xiaogan',), ('Xiaoshan',), ('Xichang',), ('Xilin Hot',), ('Xingcheng',), ('Xinghua',), ('Xingtai',), ('Xining',), ('Xintai',), ('Xinxiang',), ('Xinyang',), ('Xinyu',), ('Xinzhou',), ('Xi´an',), ('Xuangzhou',), ('Xuchang',), ('Xuzhou',), ('Yakeshi',), ('Yancheng',), ('Yangjiang',), ('Yangquan',), ('Yangzhou',), ('Yanji',), ('Yantai',), ('Yan´an',), ('Ya´an',), ('Yibin',), ('Yichang',), ('Yichun',), ('Yinchuan',), ('Yingkou',), ('Yixing',), ('Yiyang',), ('Yizheng',), ('Yong´an',), ('Yuanjiang',), ('Yuci',), ('Yueyang',), ('Yulin',), ('Yumen',), ('Yuncheng',), ('Yushu',), ('Yuyao',), ('Yuzhou',), ('Zalantun',), ('Zaoyang',), ('Zaozhuang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangzhou',), ('Zhaodong',), ('Zhaoqing',), ('Zhengzhou',), ('Zhenjiang',), ('Zhongshan',), ('Zhoukou',), ('Zhoushan',), ('Zhucheng',), ('Zhuhai',), ('Zhumadian',), ('Zhuzhou',), ('Zibo',), ('Zigong',), ('Zixing',), ('Zunyi',)] != [('China',), ('Singapore',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT name , INDEPENDENCE , Surface_Area FROM country ORDER BY Population LIMIT 1",OperationalError('no such column: INDEPENDENCE'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT T1.population , T1.name , T1.Government_form FROM country AS T1 ORDER BY T1.Surface_area DESC LIMIT 1",OperationalError('no such column: T1.Government_form'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT name , population , Head_of_state FROM country ORDER BY Surface_Area DESC LIMIT 1",OperationalError('no such column: Head_of_state'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.name , COUNT(*) AS language_count FROM country AS T1 JOIN country_language AS T2 ON T1.code = T2.countrycode GROUP BY T1.name HAVING COUNT(*) >= 3",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name , COUNT(T2.Language) AS LangNum FROM main.country AS T1 LEFT JOIN main.countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) > 2","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE continent = ""Asia""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT name FROM country WHERE continent = ""Europe"" AND population = ""80000""",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT name FROM country WHERE continent = ""Europe"" AND population = ""80000""",,True
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,SELECT name FROM city WHERE population BETWEEN 160000 AND 900000,,True
spider_data/database/world_1/world_1.sqlite,select name from city where population between 160000 and 900000,SELECT name FROM city WHERE population BETWEEN 160000 AND 900000,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.name , T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code = T2.countrycode WHERE T2percentage = (SELECT max(percentage) FROM countrylanguage WHERE countrycode = T1.code)",OperationalError('no such column: T2percentage'),False
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT countrycode , LANGUAGE FROM countrylanguage WHERE percentage = (SELECT max(percentage) FROM countrylanguage AS T2 WHERE T1.countrycode = T2.countrycode)",OperationalError('no such column: T1.countrycode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT COUNT(*) FROM ( SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code = T2.countrycode WHERE T2.language = ""Spanish"" GROUP BY T1.name ORDER BY SUM(T2.percentage) DESC LIMIT 1 )","Not match: [('1', '0.4'), ('1', '0.6'), ('1', '0.7'), ('1', '100.0'), ('1', '100.0'), ('1', '13.3'), ('1', '31.6'), ('1', '44.6'), ('1', '51.3'), ('1', '55.1'), ('1', '64.7'), ('1', '7.4'), ('1', '7.5'), ('1', '74.4'), ('1', '76.8'), ('1', '79.8'), ('1', '87.7'), ('1', '89.7'), ('1', '92.1'), ('1', '93.0'), ('1', '95.7'), ('1', '96.8'), ('1', '96.9'), ('1', '97.2'), ('1', '97.5'), ('1', '97.6'), ('1', '98.0'), ('1', '99.0')] != [('1',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT COUNT(*) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.`CountryCode` = T2.`Code` WHERE T1.Language = ""Spanish"" AND T1.Percentage > ( SELECT MAX(Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.Code )","Not match: [('1', '0.4'), ('1', '0.6'), ('1', '0.7'), ('1', '100.0'), ('1', '100.0'), ('1', '13.3'), ('1', '31.6'), ('1', '44.6'), ('1', '51.3'), ('1', '55.1'), ('1', '64.7'), ('1', '7.4'), ('1', '7.5'), ('1', '74.4'), ('1', '76.8'), ('1', '79.8'), ('1', '87.7'), ('1', '89.7'), ('1', '92.1'), ('1', '93.0'), ('1', '95.7'), ('1', '96.8'), ('1', '96.9'), ('1', '97.2'), ('1', '97.5'), ('1', '97.6'), ('1', '98.0'), ('1', '99.0')] != [('0',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT country_code FROM country_language WHERE language = ""Spanish"" ORDER BY percentage DESC LIMIT 1",OperationalError('no such table: country_language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT country_code FROM countrylanguage WHERE LANGUAGE = ""Spanish"" AND percentage > ( SELECT MAX(percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" )",OperationalError('no such column: country_code'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT name FROM conductor ORDER BY age,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchesra ORDER BY Year_of_Founded DESC,OperationalError('no such table: orchesra'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT record_company FROM orchestra ORDER BY year_of_founded DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT nationality) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT nationality) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Years_of_work DESC,OperationalError('no such column: Years_of_work'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Years_of_Work DESC LIMIT 1,OperationalError('no such column: Years_of_Work'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT c.Name, o.Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID;",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT c.Conductor, o.Orchestra FROM main.conductor c JOIN main.orchestra o ON c.Conductor_ID = o.Conductor_ID",OperationalError('no such column: c.Conductor'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID HAVING COUNT(o.Orchestra_ID) > 1;,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID HAVING COUNT(o.Orchestra_ID) > 1;,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID ORDER BY COUNT(o.Orchestra_ID) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID ORDER BY COUNT(o.Orchestra_ID) DESC LIMIT 1;,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_Founded > 2008;,OperationalError('no such column: o.Year_Founded'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_Founded > 2008;,OperationalError('no such column: o.Year_Founded'),False
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Record_Company FROM main.orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC,"Not match: [('CD',), ('CD / LP',), ('DVD',)] != [('Columbia Masterworks',), ('Decca Records',), ('Delos Records',), ('Deutsche Grammophon',), ('EMI',), ('Koch Records / Naxos Records',), ('Kultur',), ('Mercury Records',), ('Philips',), ('Philips Classics Records',), ('RCA',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM main.orchestras GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,OperationalError('no such table: main.orchestras'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM main.orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT orchestra FROM main.orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM main.performance),,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT orchestra FROM main.orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM main.performance),,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT record_company FROM orchestra WHERE year_of_founded < 2003 INTERSECT SELECT record_company FROM orchestra WHERE year_of_founded > 2003,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT record_company FROM orches WHERE year_of_founded < 2003 INTERSECT SELECT record_company FROM orches WHERE year_of_founded > 2003,OperationalError('no such table: orches'),False
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM main.orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM main.orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT DISTINCT YEAR_FOUND FROM main.orchestra WHERE orchestra_id IN ( SELECT orchestra_id FROM main.performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1 ),OperationalError('no such column: YEAR_FOUND'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT Year_Founded FROM main.orchestra AS T1 JOIN main.performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1,OperationalError('no such column: Year_Founded'),False
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM higher,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM higher,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM higher",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM higher",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM higher,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM higher,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT T2.grade FROM main.Friend AS T1 INNER JOIN main.Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.friend_id = ( SELECT ID FROM Highschooler WHERE name = ""Kyle"" )","Not match: [('12',)] != [('11',), ('11',)]",False
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM higher WHERE grade = 10,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM higher WHERE grade = 10,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","SELECT ID FROM higher WHERE name = ""Kyle""",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",SELECT ID FROM Higher WHERE name = 'Kyle',OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Higher WHERE grade = 9 OR grade = 10,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,"SELECT count(*) FROM higher WHERE grade IN ( 9 , 10 )",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM higher GROUP BY grade",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM higher GROUP BY grade",OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM higher GROUP BY grade ORDER BY count(*) DESC LIMIT 1,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM higher GROUP BY grade ORDER BY count(*) DESC LIMIT 1,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM higher GROUP BY grade HAVING count(*) >= 4,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM higher GROUP BY grade HAVING count(*) >= 4,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT t2.name FROM Friend AS t1 JOIN Higher AS t2 ON t1.student_id = t2.id GROUP BY t1.student_id ORDER BY count(*) DESC LIMIT 1,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM higher AS t1 JOIN friend AS t2 ON t1.id = t2.student_id GROUP BY t2.student_id ORDER BY count(*) DESC LIMIT 1,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T3.name FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id JOIN Higher AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T2.name FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID JOIN Higher AS T3 ON T1.friend_id = T3.ID WHERE T3.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID WHERE T2.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID WHERE T2.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT student_id FROM higher WHERE id NOT IN (SELECT student_id FROM friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT id FROM higher WHERE id NOT IN (SELECT student_id FROM Friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM higher WHERE id NOT IN (SELECT student_id FROM Friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM higher WHERE id NOT IN (SELECT student_id FROM friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,,True
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Likes INTERSECT SELECT friend_id FROM Friend,"Not match: [('1101',), ('1247',), ('1304',), ('1468',), ('1501',), ('1689',), ('1709',), ('1934',)] != [('1025',), ('1247',), ('1316',), ('1501',), ('1641',), ('1689',), ('1709',), ('1782',), ('1911',), ('1934',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T1.name FROM higher AS T1 JOIN friend AS T2 ON T1.ID = T2.student_id INTERSECT SELECT T3.name FROM higher AS T3 JOIN likes AS T4 ON T3.ID = T4.liked_id,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T1.name FROM higher AS T1 JOIN likes AS T2 ON T1.id = T2.student_id INTERSECT SELECT T3.name FROM higher AS T3 JOIN friend AS T4 ON T3.id = T4.student_id,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM higher AS T1 JOIN likes AS T2 ON T1.id = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM higher AS T1 JOIN likes AS T2 ON T1.id = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Higher AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T2.student_id HAVING COUNT(*) >= 2,OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM higher AS T1 JOIN friend AS T2 ON T1.id = T2.student_id WHERE T1.grade > 5 GROUP BY T2.student_id HAVING count(*) >= 2,OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID WHERE T2.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Higher AS T2 ON T1.student_id = T2.ID WHERE T2.name = ""Kyle""",OperationalError('no such table: Higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM higher WHERE id IN (SELECT student_id FROM friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM higher WHERE id IN ( SELECT student_id FROM friend ),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM higher WHERE id NOT IN (SELECT student_id FROM Friend),OperationalError('no such table: higher'),False
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM higher WHERE id NOT IN (SELECT student_id FROM Friend),OperationalError('no such table: higher'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,"SELECT DISTINCT o.state, p.state FROM main.Owners o JOIN main.Professionals p ON o.state = p.state","Not match: [('Indiana',), ('Mississippi',), ('Wisconsin',)] != [('Indiana', 'Indiana'), ('Mississippi', 'Mississippi'), ('Wisconsin', 'Wisconsin')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,"SELECT DISTINCT o.state, p.state FROM main.Owners o JOIN main.Professionals p ON o.dog_id = p.dog_id WHERE o.state = p.state",OperationalError('no such column: o.dog_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(dog_age) AS average_age FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );,OperationalError('no such column: dog_age'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(ages.age) AS average_age FROM ages JOIN treatments ON ages.dog_id = treatments.dog_id;,OperationalError('no such table: ages'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT p.professionaL_id , p.last_name , p.cell_number FROM main.professionals p WHERE p.state = 'Indiana' UNION SELECT t.professionaL_id , t.last_name , t.cell_number FROM main.treatments t GROUP BY t.professionaL_id HAVING count(*) > 2",OperationalError('no such column: t.last_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT p.professional_id, p.last_name, p.cell_phone FROM main.Professionals p WHERE p.state = 'Indiana' UNION SELECT t.professional_id, p.last_name, p.cell_phone FROM main.Treatments t JOIN main.Professionals p ON t.professional_id = p.professional_id GROUP BY t.professional_id HAVING COUNT(t.treatment_id) > 2",OperationalError('no such column: p.cell_phone'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT d.dog_name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000;,OperationalError('no such column: d.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT d.name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY d.dog_id HAVING SUM(t.cost_of_treatment) <= 1000;,"Not match: [('Bessie',), ('Betty',), ('George',), ('Hipolito',), ('Holden',), ('Houston',), ('Jeffrey',), ('Jesus',), ('Kacey',), ('Mavis',), ('Merritt',), ('Narciso',)] != [('Hipolito',), ('Holden',), ('Houston',), ('Jesus',), ('Kacey',), ('Narciso',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT DISTINCT p.first_name FROM main.professionals p LEFT JOIN main.owners o ON p.first_name = o.first_name LEFT JOIN main.dogs d ON p.first_name = d.name WHERE o.first_name IS NOT NULL AND d.name IS NULL UNION SELECT DISTINCT o.first_name FROM main.owners o LEFT JOIN main.professionals p ON o.first_name = p.first_name LEFT JOIN main.dogs d ON o.first_name = d.name WHERE p.first_name IS NOT NULL AND d.name IS NULL,"Not match: [('Adelle',), ('Brady',), ('Cindy',), ('Danny',), ('Domenica',), ('Emelie',), ('Ericka',), ('Gay',), ('Heather',), ('Jaclyn',), ('Jayson',), ('Johann',), ('Kade',), ('Karley',), ('Lesly',), ('Lorenz',), ('Melisa',), ('Monte',), ('Nora',), ('Olaf',), ('Orlando',), ('Rachelle',), ('Rolando',), ('Ruben',), ('Sigurd',), ('Taryn',), ('Tre',), ('Velva',), ('Vernice',), ('Winfield',)] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT DISTINCT p.first_name FROM main.professionals p LEFT JOIN main.owners o ON p.first_name = o.first_name LEFT JOIN main.dogs d ON p.first_name = d.name WHERE o.first_name IS NOT NULL AND d.name IS NULL UNION SELECT DISTINCT o.first_name FROM main.owners o LEFT JOIN main.professionals p ON o.first_name = p.first_name LEFT JOIN main.dogs d ON o.first_name = d.name WHERE p.first_name IS NOT NULL AND d.name IS NULL,"Not match: [('Adelle',), ('Brady',), ('Cindy',), ('Danny',), ('Domenica',), ('Emelie',), ('Ericka',), ('Gay',), ('Heather',), ('Jaclyn',), ('Jayson',), ('Johann',), ('Kade',), ('Karley',), ('Lesly',), ('Lorenz',), ('Melisa',), ('Monte',), ('Nora',), ('Olaf',), ('Orlando',), ('Rachelle',), ('Rolando',), ('Ruben',), ('Sigurd',), ('Taryn',), ('Tre',), ('Velva',), ('Vernice',), ('Winfield',)] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id ,role ,email FROM professionals WHERE professional_id NOT IN ( SELECT professional_id FROM treatments )",OperationalError('no such column: role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id ,role ,email FROM professionals WHERE professional_id NOT IN ( SELECT professional_id FROM treatments )",OperationalError('no such column: role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.first_name , T2.last_name FROM Owners AS T1 JOIN People AS T2 ON T1.owner_id = T2.person_id JOIN Dogs AS T3 ON T1.owner_id = T3.dog_owner GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",OperationalError('no such table: People'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professionaL_id , T2.role , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professionaL_id = T2.professionaL_id GROUP BY T1.professionaL_id HAVING count(*) >= 2",OperationalError('no such column: T2.role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professionaL_id , T1.role , T1.first_name FROM main.professionals AS T1 JOIN main.treatments AS T2 ON T1.professionaL_id = T2.professionaL_id GROUP BY T1.professionaL_id HAVING count(*) >= 2",OperationalError('no such column: T1.role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY count DESC LIMIT 1;,OperationalError('no such column: count'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;,"Not match: [('Bulldog',)] != [('Husky',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.last_name FROM Treatments AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(*) DESC LIMIT 1",OperationalError('no such column: T1.owner_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.last_name FROM main.owners AS T1 JOIN main.dogs AS T3 ON T1.owner_id = T3.owner_id JOIN main.treatments AS T4 ON T3.dog_id = T4.dog_id JOIN main.owners AS T2 ON T4.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY SUM(T4.cost_of_treatment) DESC LIMIT 1",OperationalError('no such column: T4.owner_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT t.treatment_type_description FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code GROUP BY t.treatment_type_code ORDER BY SUM(t.cost_of_treatment) ASC LIMIT 1;,OperationalError('no such column: t.treatment_type_description'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1;,OperationalError('ambiguous column name: treatment_type_code'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id = T2.professional_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1","Not match: [('3', '02647')] != [('14', '22731')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id = T2.professional_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1","Not match: [('3', '02647')] != [('14', '22731')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.cell_number FROM main.professionals AS T1 JOIN main.treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id , cell_number FROM professionals WHERE professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2 )","Not match: [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('4', '00230569697'), ('6', '139-321-7313'), ('8', '328.842.3792'), ('9', '962-983-8109x3509')] != [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('6', '139-321-7313'), ('9', '962-983-8109x3509')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT p.first_name, p.last_name FROM main.professionals p JOIN main.treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < ( SELECT AVG(cost_of_treatment) FROM main.treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman'), ('Vernice', 'Tillman')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < ( SELECT AVG(cost_of_treatment) FROM Treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman'), ('Vernice', 'Tillman')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT o.first_name, o.last_name, s.size_description FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Sizes s ON d.size_code = s.size_code;","Not match: [('Cindy', 'Schmitt', 'LGE'), ('Emelie', 'Mertz', 'MED'), ('Gay', 'Feil', 'LGE'), ('Jaclyn', 'Stoltenberg', 'LGE'), ('Jaclyn', 'Stoltenberg', 'MED'), ('Johann', 'Fisher', 'MED'), ('Kade', 'Rippin', 'MED'), ('Lorenz', 'Nicolas', 'MED'), ('Melisa', 'DuBuque', 'MED'), ('Nora', 'Haley', 'MED'), ('Orlando', 'Price', 'MED'), ('Rachelle', 'Funk', 'LGE'), ('Rachelle', 'Funk', 'MED'), ('Rachelle', 'Funk', 'SML'), ('Rolando', 'Prohaska', 'SML')] != [('Cindy', 'Schmitt', 'Large'), ('Emelie', 'Mertz', 'Medium'), ('Gay', 'Feil', 'Large'), ('Jaclyn', 'Stoltenberg', 'Large'), ('Jaclyn', 'Stoltenberg', 'Medium'), ('Johann', 'Fisher', 'Medium'), ('Kade', 'Rippin', 'Medium'), ('Lorenz', 'Nicolas', 'Medium'), ('Melisa', 'DuBuque', 'Medium'), ('Nora', 'Haley', 'Medium'), ('Orlando', 'Price', 'Medium'), ('Rachelle', 'Funk', 'Large'), ('Rachelle', 'Funk', 'Medium'), ('Rachelle', 'Funk', 'Small'), ('Rolando', 'Prohaska', 'Small')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT o.first_name, o.last_name, d.size FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id;",OperationalError('no such column: d.size'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id;",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT o.first_name, d.dog_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id;",OperationalError('no such column: d.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.dog_name, T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id INNER JOIN Breeds AS T3 ON T1.breed_code = T3.breed_code WHERE T3.rarity_rank = (SELECT MAX(rarity_rank) FROM Breeds)",OperationalError('no such column: T1.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.dog_name, T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code IN ( SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY count(*) ASC LIMIT 3 )",OperationalError('no such column: T1.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT DISTINCT T1.first_name, T3.dog_name FROM main.owners AS T1 INNER JOIN main.treatments AS T2 ON T1.owner_id = T2.professional_id INNER JOIN main.dogs AS T3 ON T2.dog_id = T3.dog_id WHERE T1.state = 'Virginia'",OperationalError('no such column: T3.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT o.first_name, d.dog_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id WHERE o.state = 'Virginia'",OperationalError('no such column: d.dog_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_of_treatment , T1.arriving_date , T1.departing_date FROM main.treatments AS T1 JOIN main.dogs AS T2 ON T1.dog_id = T2.dog_id",OperationalError('no such column: T1.arriving_date'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_of_treatment, T1.departing_date FROM main.treatments AS T1 INNER JOIN main.dogs AS T2 ON T1.dog_id = T2.dog_id",OperationalError('no such column: T1.departing_date'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY T2.date_of_birth DESC LIMIT 1,"Not match: [('Feil',), ('Fisher',), ('Rippin',)] != [('Mertz',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM owners AS T1 INNER JOIN dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY T2.date_of_birth DESC LIMIT 1,"Not match: [('Feil',), ('Fisher',), ('Rippin',)] != [('Mertz',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',SELECT email_address FROM main.Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM main.Professionals WHERE state = ""Hawaii"" OR state = ""Wisconsin"";",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT T1.date_of_arrival , T1.date_of_departure FROM main.dogs AS T1 INNER JOIN main.treatments AS T2 ON T1.dog_id = T2.dog_id",OperationalError('no such column: T1.date_of_arrival'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT T1.date_of_arrival, T1.date_of_departure FROM main.dogs AS T1 INNER JOIN main.treatments AS T2 ON T1.dog_id = T2.dog_id",OperationalError('no such column: T1.date_of_arrival'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(DISTINCT dog_id) AS number_of_dogs FROM Treatments,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(DISTINCT dog_id) AS number_of_dogs FROM treatments;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(DISTINCT professional_id) AS number_of_professionals FROM Treatments ;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(DISTINCT professional_id) AS num_professionals FROM Treatments ;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role , street , city , state FROM professionals WHERE city LIKE '%West%'",OperationalError('no such column: role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role, street, city, state FROM main.Professionals WHERE city LIKE '%West%'",OperationalError('no such column: role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name, last_name, email FROM Owners WHERE state LIKE '%North%'",OperationalError('no such column: email'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name , last_name , email FROM Owners WHERE state LIKE '%North%'",OperationalError('no such column: email'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ) ;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE date_of_birth > ( SELECT avg(date_of_birth) FROM Dogs ) ;,"Not match: [('9',)] != [('15',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),"SELECT count(*) FROM Dogs WHERE treatment_id = ""none""",OperationalError('no such column: treatment_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(DISTINCT owner_id) AS number_of_owners FROM Owners WHERE dog_id IS NULL,OperationalError('no such column: dog_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE dog_id IS NULL;,OperationalError('no such column: dog_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM main.professionals WHERE professional_id NOT IN ( SELECT professional_id FROM main.treatments ),,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM main.professionals WHERE professional_id NOT IN ( SELECT professional_id FROM main.treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT d.dog_name, d.age, d.weight FROM Dogs d JOIN Abandonment a ON d.dog_id = a.dog_id WHERE a.abandoned = 1;",OperationalError('no such table: Abandonment'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT d.dog_name, s.age_in_months, w.weight FROM Dogs d JOIN Sizes s ON d.size_code = s.size_code JOIN Weights w ON d.weight_code = w.weight_code JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.treatment_type_code = 'ABD';",OperationalError('no such table: Weights'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT AVG(age) AS average_age FROM Dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT AVG(age) AS average_age FROM Dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT MAX(age) AS oldest_dog_age FROM dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT MAX(age) AS oldest_dog_age FROM dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT treatment_type_code , cost_of_treatment FROM Treatments ;","Not match: [('Daily Accommodation', '98'), ('Drugs', '322'), ('Health Check', '640')] != [('EXAM', '313'), ('EXAM', '407'), ('EXAM', '428'), ('EXAM', '429'), ('EXAM', '852'), ('VAC', '147'), ('VAC', '266'), ('VAC', '514'), ('VAC', '668'), ('VAC', '945'), ('WALK', '139'), ('WALK', '349'), ('WALK', '567'), ('WALK', '656'), ('WALK', '681')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type, amount FROM charges;",OperationalError('no such column: amount'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT max(cost_of_charge) FROM charges;,OperationalError('no such column: cost_of_charge'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT cost_of_treatment FROM treatments ORDER BY cost_of_treatment DESC LIMIT 1;,"Not match: [('640',)] != [('945',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_number FROM main.professionals",OperationalError('no such column: home_number'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_number FROM main.professionals",OperationalError('no such column: home_number'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT breed_type, size_type FROM dogs;",OperationalError('no such column: breed_type'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT T1.breed_type, T2.size_type FROM breeds AS T1 INNER JOIN sizes AS T2 ON T1.dog_id = T2.dog_id",OperationalError('no such column: T1.breed_type'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name , T2.treatment_description FROM main.professionals AS T1 JOIN main.treatment_types AS T2 ON T1.professional_id = T2.treatment_type_code",OperationalError('no such column: T2.treatment_description'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name , T2.treatment_description FROM main.professionals AS T1 JOIN main.treatment_types AS T2 ON T1.professional_id = T2.treatment_code",OperationalError('no such column: T2.treatment_description'),False
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.title , T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id",,True
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.title , T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id",,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id WHERE T2.sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id WHERE T2.sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id GROUP BY T1.singer_id HAVING COUNT(*) > 1,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id GROUP BY T1.singer_id HAVING COUNT(*) > 1,,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.name , sum(T2.sales) FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id GROUP BY T1.singer_id",,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.name , sum(T2.sales) FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id GROUP BY T1.name",,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song),,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE BirthYear < 1945 INTERSECT SELECT Citizenship FROM singer WHERE BirthYear > 1955,OperationalError('no such column: BirthYear'),False
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE BirthYear < 1945 INTERSECT SELECT Citizenship FROM singer WHERE BirthYear > 1955,OperationalError('no such column: BirthYear'),False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT count(*) FROM Other_Available_Features,SELECT count(DISTINCT feature_name) FROM main.Other_Available_Features,,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT feature_type_name FROM main.ref_feature_types WHERE feature_type_code = 'AirCon';,"Not match: [('Amenity, eg Pool.',)] != []",False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,SELECT property_type_description FROM ref_property_types WHERE property_type_code = 'your_code_here';,"Not match: [('Apartment, Flat, Condo, etc.',), ('Field, Meadow.',), ('House, Bungalow, etc.',), ('Other, to be determined.',), ('Shop, Retail Outlet.',)] != []",False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT property_name FROM properties WHERE property_type_code = ""House"" UNION SELECT property_name FROM properties WHERE property_type_code = ""Apartment"" AND room_count > 1",,True
