question_number,question,hardness,db_path,solution,answer,error,is_match
0,How many singers do we have?,easy,spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
1,What is the total number of singers?,easy,spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
2,"Show name, country, age for all singers ordered by age from the oldest to the youngest.",medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name , country , age FROM singer ORDER BY age DESC",,True
3,"What are the names, countries, and ages for every singer in descending order of age?",medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name , Country , Age FROM singer ORDER BY Age DESC",,True
4,"What is the average, minimum, and maximum age of all singers from France?",medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'",,True
5,"What is the average, minimum, and maximum age for all French singers?",medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = ""France""",,True
6,Show the name and the release year of the song by the youngest singer.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name , Song_release_year FROM singer ORDER BY Age LIMIT 1",,True
7,What are the names and release years for all the songs of the youngest singer?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name , Song_release_year FROM singer ORDER BY Age LIMIT 1",,True
8,What are all distinct countries where singers above age 20 are from?,easy,spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20,,True
9,What are  the different countries with singers above age 20?,easy,spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20,,True
10,Show all countries and the number of singers in each country.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
11,How many singers are from each country?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",,True
12,List all song names by singers above the average age.,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age > ( SELECT avg(Age) FROM singer ),,True
13,What are all the song names by singers who are older than average?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age > ( SELECT avg(Age) FROM singer ),,True
14,Show location and name for all stadiums with a capacity between 5000 and 10000.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
15,What are the locations and names of all stations with capacity between 5000 and 10000?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,True
16,What is the maximum capacity and the average of all stadiums ?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"select max(capacity), average from stadium","SELECT max(capacity) , avg(capacity) FROM stadium","Not match: [('52500', '730')] != [('52500', '10621.666666666666')]",False
17,What is the average and maximum capacities for all stadiums ?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(capacity) , max(capacity) FROM stadium",,True
18,What is the name and capacity for the stadium with highest average attendance?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",,True
19,What is the name and capacity for the stadium with the highest average attendance?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",,True
20,How many concerts are there in year 2014 or 2015?,medium,spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
21,How many concerts occurred in 2014 or 2015?,medium,spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,,True
22,Show the stadium name and the number of concerts in each stadium.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",,True
23,"For each stadium, how many concerts play there?",medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.Name , COUNT(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Name",,True
24,Show the stadium name and capacity with most number of concerts in year 2014 or after.,extra,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",,True
25,What is the name and capacity of the stadium with the most concerts after 2013 ?,extra,spider_data/database/concert_singer/concert_singer.sqlite,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year > 2013 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",,True
26,Which year has most number of concerts?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
27,What is the year that had the most concerts?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
28,Show the stadium names without any concert.,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
29,What are the names of the stadiums without any concerts?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),,True
30,Show countries where a singer above age 40 and a singer below 30 are from.,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30,,True
31,Show names for all stadiums except for stadiums having a concert in year 2014.,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014,,True
32,What are the names of all stadiums that did not have a concert in 2014?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014,,True
33,Show the name and theme for all concerts and the number of singers in each concert.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_name , T1.theme , count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T1.concert_id",,True
34,"What are the names , themes , and number of singers for every concert ?",medium,spider_data/database/concert_singer/concert_singer.sqlite,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.concert_Name , T1.Theme , COUNT(*) FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID",,True
35,List singer names and number of concerts for each singer.,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
36,What are the names of the singers and number of concerts for each person?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
37,List all singer names in concerts in year 2014.,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T3.Name FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T1.Year = 2014,,True
38,What are the names of the singers who performed in a concert in 2014?,hard,spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T2.Name FROM singer_in_concert AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = 2014,,True
39,what is the name and nation of the singer who have a song having 'Hey' in its name?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT Name , Country FROM singer WHERE Song_Name LIKE '%Hey%'",,True
40,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,medium,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",,True
41,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,extra,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015",,True
42,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,extra,spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T1.name , T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014 INTERSECT SELECT T1.name , T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2015",,True
43,Find the number of concerts happened in the stadium with the highest capacity .,hard,spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id ORDER BY T2.capacity DESC LIMIT 1,"Not match: [('0',)] != [('6',)]",False
44,What are the number of concerts that occurred in the stadium with the largest capacity ?,hard,spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY capacity DESC LIMIT 1),,True
45,Find the number of pets whose weight is heavier than 10.,easy,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM PETS WHERE weight > 10,,True
46,How many pets have a greater weight than 10?,easy,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM PETS WHERE weight > 10,,True
47,Find the weight of the youngest dog.,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM PETS ORDER BY pet_age LIMIT 1,,True
48,How much does the youngest dog weigh?,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets ORDER BY pet_age ASC LIMIT 1,,True
49,Find the maximum weight for each type of pet. List the maximum weight and pet type.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pettype FROM pets GROUP BY pettype",,True
50,List the maximum weight and type for each type of pet.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) , pettype FROM pets GROUP BY pettype",,True
51,Find number of pets owned by students who are older than 20.,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
52,How many pets are owned by students that have an age greater than 20?,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,,True
53,Find the number of dog pets that are raised by female students (with sex F).,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = ""dog""",,True
54,How many dog pets are raised by female students?,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',,True
55,Find the number of distinct type of pets.,easy,spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
56,How many different types of pet are there?,easy,spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pettype) FROM pets,,True
57,Find the first name of students who have cat or dog pet.,extra,spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'cat' OR T3.PetType = 'dog',,True
58,What are the first names of every student who has a cat or dog as a pet?,extra,spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'cat' OR T3.PetType = 'dog',,True
59,Find the first name of students who have both cat and dog pets .,extra,spider_data/database/pets_1/pets_1.sqlite,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'dog',,True
60,What are the students' first names who have both cats and dogs as pets?,extra,spider_data/database/pets_1/pets_1.sqlite,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'dog',,True
61,Find the major and age of students who do not have a cat pet.,extra,spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = 'cat')",,True
62,"What major is every student who does not own a cat as a pet, and also how old are they?",extra,spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major , age FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = ""cat"")",,True
63,Find the id of students who do not have a cat pet.,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"SELECT StuID FROM Student EXCEPT SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = ""cat""",,True
64,What are the ids of the students who do not own cats as pets?,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"SELECT StuID FROM Has_Pet EXCEPT SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pettype = ""cat""","Not match: [('1002',), ('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)] != [('1002',)]",False
65,Find the first name and age of students who have a dog but do not have a cat as a pet.,extra,spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.Fname , T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'dog' EXCEPT SELECT T1.Fname , T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pettype = 'cat'","Not match: [('Tracy', '19'), ('Tracy', '19')] != [('Tracy', '19')]",False
66,What is the first name of every student who has a dog but does not have a cat?,extra,spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'dog' AND T1.StuID NOT IN (SELECT T1.StuID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'cat'),"Not match: [('Tracy', '19'), ('Tracy', '19')] != [('Tracy',)]",False
67,Find the type and weight of the youngest pet.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
68,"What type of pet is the youngest animal, and how much does it weigh?",medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",,True
69,Find the id and weight of all pets whose age is older than 1.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT petid , weight FROM pets WHERE pet_age > 1",,True
70,What is the id and weight of every pet who is older than 1?,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT petid , weight FROM pets WHERE pet_age > 1",,True
71,Find the average and maximum age for each type of pet.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",,True
72,What is the average and maximum age for each pet type?,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",,True
73,Find the average weight for each pet type.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT avg(weight) , pettype FROM pets GROUP BY pettype",,True
74,What is the average weight for each type of pet?,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT avg(weight) , pettype FROM pets GROUP BY pettype",,True
75,Find the first name and age of students who have a pet.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",,True
76,What are the different first names and ages of the students who do have pets?,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",,True
77,Find the id of the pet owned by student whose last name is ‘Smith’.,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',,True
78,What is the id of the pet owned by the student whose last name is 'Smith'?,medium,spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',,True
79,Find the number of pets for each student who has any pet and student id.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT count(*) , t1.stuid FROM Student AS t1 JOIN Has_Pet AS t2 ON t1.StuID = t2.StuID GROUP BY t1.StuID",,True
80,"For students who have pets , how many pets does each student have ? list their ids instead of names .",medium,spider_data/database/pets_1/pets_1.sqlite,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT T1.StuID , count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID","Not match: [('1', '1001'), ('2', '1002')] != [('1001', '1'), ('1002', '2')]",False
81,Find the first name and gender of student who have more than one pet.,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname , T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",,True
82,What is the first name and gender of the all the students who have more than one pet?,medium,spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname , T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",,True
83,Find the last name of the student who has a cat that is age 3.,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_age = 3 AND T3.PetType = ""cat""",,True
84,What is the last name of the student who has a cat that is 3 years old?,hard,spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.pet_age = 3 AND T3.PetType = ""cat""",,True
85,Find the average age of students who do not have any pet .,extra,spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
86,What is the average age for all students who do not own any pets ?,extra,spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),,True
87,How many continents are there?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM Continents,,True
88,What is the number of continents?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM Continents,,True
89,"How many countries does each continent have? List the continent id, continent name and the number of countries.",medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , COUNT(T2.CountryId) FROM CONTINENTS AS T1 LEFT JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
90,"For each continent, list its id, name, and how many countries it has?",medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
91,How many countries are listed?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,,True
92,How many countries exist?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,,True
93,"How many models does each car maker produce? List maker full name, id and the number.",medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",,True
94,"What is the full name of each car maker, along with its id and how many models it produces?",medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName , T1.Id , COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",,True
95,Which model of the car has the minimum horsepower?,hard,spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1,,True
96,What is the model of the car with the smallest amount of horsepower?,hard,spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1,,True
97,Find the model of the car whose weight is below the average weight.,extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < ( SELECT avg(Weight) FROM CARS_DATA ),,True
98,What is the model for the car with a weight smaller than the average?,extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < ( SELECT avg(Weight) FROM CARS_DATA ),,True
99,Find the name of the makers that produced some cars in the year of 1970?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 INNER JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId INNER JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970,"Not match: [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('ford',), ('gm',), ('nissan',), ('peugeaut',), ('saab',), ('toyota',), ('volkswagen',)] != [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('daimler benz',), ('fiat',), ('ford',), ('gm',), ('honda',), ('hyundai',), ('kia',), ('mazda',), ('nissan',), ('opel',), ('peugeaut',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)]",False
100,What is the name of the different car makers who produced a car in 1970?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.ModelId = T3.MakeId JOIN CARS_DATA AS T4 ON T3.MakeId = T4.Id WHERE T4.Year = 1970,"Not match: [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('ford',), ('gm',), ('nissan',), ('peugeaut',), ('saab',), ('toyota',), ('volkswagen',)] != [('amc',), ('bmw',), ('chrysler',), ('citroen',), ('daimler benz',), ('fiat',), ('ford',), ('gm',), ('honda',), ('hyundai',), ('kia',), ('mazda',), ('nissan',), ('opel',), ('peugeaut',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)]",False
101,Find the make and production time of the cars that were produced in the earliest year?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Year ASC LIMIT 1","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [('chevrolet chevelle malibu', '1970')]",False
102,What is the maker of the carr produced in the earliest year and what year was it?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Year ASC LIMIT 1","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [('chevrolet chevelle malibu', '1970')]",False
103,Which distinct car models are the produced after 1980?,hard,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980,,True
104,What are the different models for the cards produced after 1980?,hard,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980,,True
105,How many car makers are there in each continents? List the continent name and the count.,hard,spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(T3.Id) FROM CONTINENTS AS T1 INNER JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent INNER JOIN CAR_MAKERS AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",,True
106,What is the name of each continent and how many car makers are there in each one?,hard,spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(T3.Id) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent INNER JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",,True
107,Which of the countries has the most car makers? List the country name.,extra,spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(*) DESC LIMIT 1,,True
108,What is the name of the country with the most car makers?,extra,spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1,,True
109,How many car models are produced by each maker ? Only list the count and the maker full name .,medium,spider_data/database/car_1/car_1.sqlite,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT COUNT(T1.Model) , T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName",,True
110,What is the number of car models that are produced by each maker and what is the id and full name of each maker?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT count(T2.Model) , T1.Id , T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id","Not match: [('1', 'American Motor Company', '1'), ('1', 'BMW', '3'), ('1', 'Citroen', '7'), ('1', 'Fiat', '9'), ('1', 'Honda', '11'), ('1', 'Hyundai', '23'), ('1', 'Kia Motors', '22'), ('1', 'Mazda', '12'), ('1', 'Opel', '14'), ('1', 'Peugeaut', '15'), ('1', 'Renault', '16'), ('1', 'Saab', '17'), ('1', 'Subaru', '18'), ('1', 'Triumph', '20'), ('1', 'Volvo', '21'), ('2', 'Daimler Benz', '13'), ('2', 'Nissan Motors', '8'), ('2', 'Toyota', '19'), ('2', 'Volkswagen', '2'), ('3', 'Ford Motor Company', '5'), ('4', 'Chrysler', '6'), ('5', 'General Motors', '4')] != [('1', '1', 'American Motor Company'), ('1', '11', 'Honda'), ('1', '12', 'Mazda'), ('1', '14', 'Opel'), ('1', '15', 'Peugeaut'), ('1', '16', 'Renault'), ('1', '17', 'Saab'), ('1', '18', 'Subaru'), ('1', '20', 'Triumph'), ('1', '21', 'Volvo'), ('1', '22', 'Kia Motors'), ('1', '23', 'Hyundai'), ('1', '3', 'BMW'), ('1', '7', 'Citroen'), ('1', '9', 'Fiat'), ('2', '13', 'Daimler Benz'), ('2', '19', 'Toyota'), ('2', '2', 'Volkswagen'), ('2', '8', 'Nissan Motors'), ('3', '5', 'Ford Motor Company'), ('4', '6', 'Chrysler'), ('5', '4', 'General Motors')]",False
111,What is the accelerate of the car make amc hornet sportabout (sw)?,medium,spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM CARS_DATA AS T1 INNER JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc' AND T2.Model = 'hornet sportabout (sw)',"Not match: [('13.5',)] != []",False
112,How much does the car accelerate that makes amc hornet sportabout (sw)?,medium,spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM CARS_DATA AS T1 INNER JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)',"Not match: [('13.5',)] != []",False
113,How many car makers are there in france?,medium,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,"SELECT count(*) FROM car_makers WHERE Country = ( SELECT CountryId FROM countries WHERE CountryName = ""France"" )","Not match: [('3',)] != [('0',)]",False
114,What is the number of makers of care in France?,medium,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT count(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'France',"Not match: [('3',)] != [('0',)]",False
115,How many car models are produced in the usa?,hard,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.Country = ""USA""","Not match: [('13',)] != [('0',)]",False
116,What is the count of the car models produced in the United States?,hard,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'USA',"Not match: [('13',)] != [('0',)]",False
117,What is the average miles per gallon(mpg) of the cars with 4 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4,,True
118,What is the average miles per gallon of all the cards with 4 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4,,True
119,What is the smallest weight of the car produced with 8 cylinders on 1974 ?,medium,spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974,,True
120,What is the minimum weight of the car with 8 cylinders produced in 1974 ?,medium,spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM CARS_DATA WHERE Cylinders = 8 AND Year = 1974,,True
121,What are all the makers and models?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker , Model FROM MODEL_LIST",,True
122,What are the makers and models?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker , Model FROM MODEL_LIST",,True
123,What are the countries having at least one car maker? List name and id.,medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT DISTINCT T1.CountryName , T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country",,True
124,What are the names and ids of all countries with at least one car maker?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1",,True
125,What is the number of the cars with horsepower more than 150?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150,,True
126,What is the number of cars with a horsepower greater than 150?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM CARS_DATA WHERE Horsepower > 150,,True
127,What is the average weight of cars each year?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR",,True
128,What is the average weight and year for each year?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) , YEAR FROM cars_data GROUP BY YEAR",,True
129,Which countries in europe have at least 3 car manufacturers?,extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = ( SELECT ContId FROM CONTINENTS WHERE Continent = 'Europe' ) GROUP BY T1.CountryName HAVING COUNT(T2.Maker) >= 3,"Not match: [('france',), ('germany',)] != []",False
130,What are the names of all European countries with at least 3 manufacturers?,extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = ( SELECT ContId FROM CONTINENTS WHERE Continent = 'Europe' ) GROUP BY T1.CountryName HAVING COUNT(T1.CountryName) >= 3,"Not match: [('france',), ('germany',)] != []",False
131,What is the maximum horsepower and the make of the car models with 3 cylinders?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3",,True
132,What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT T1.Make , T2.Horsepower FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3 ORDER BY T2.Horsepower DESC LIMIT 1","Not match: [('97', 'mazda rx2 coupe')] != [('mazda rx2 coupe', '97')]",False
133,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",hard,spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.MPG DESC LIMIT 1,,True
134,What is the car model with the highest mpg ?,hard,spider_data/database/car_1/car_1.sqlite,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.MPG DESC LIMIT 1,,True
135,What is the average horsepower of the cars before 1980?,easy,spider_data/database/car_1/car_1.sqlite,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980,,True
136,What is the average horsepower for all cars produced before 1980 ?,easy,spider_data/database/car_1/car_1.sqlite,select avg(horsepower) from cars_data where year  <  1980;,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980,,True
137,What is the average edispl of the cars of model volvo?,medium,spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(T1.Edispl) FROM CARS_DATA AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo',,True
138,What is the average edispl for all volvos?,medium,spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(T1.Edispl) FROM CARS_DATA AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo',"Not match: [('133.5',)] != [('',)]",False
139,What is the maximum accelerate for different number of cylinders?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(Accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
140,What is the maximum accelerate for all the different cylinders?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(Accelerate) , Cylinders FROM cars_data GROUP BY Cylinders",,True
141,Which model has the most version(make) of cars?,hard,spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(MakeId) DESC LIMIT 1,,True
142,What model has the most different versions?,hard,spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1,,True
143,How many cars have more than 4 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4,,True
144,What is the number of cars with more than 4 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4,,True
145,how many cars were produced in 1980?,easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980,,True
146,"In 1980, how many cars were made?",easy,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980,,True
147,How many car models were produced by the maker with full name American Motor Company?,medium,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company',,True
148,What is the number of car models created by the car maker American Motor Company?,medium,spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.Maker = 'American Motor Company',"Not match: [('1',)] != [('0',)]",False
149,Which makers designed more than 3 car models? List full name and the id.,medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FullName , T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3",,True
150,What are the names and ids of all makers with more than 3 models?,medium,spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Maker , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3","Not match: [('Chrysler', '6'), ('General Motors', '4')] != [('chrysler', '6'), ('gm', '4')]",False
151,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 INNER JOIN model_list AS T2 ON T1.MakeId = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500,"Not match: [('amc',), ('buick',), ('cadillac',), ('chevrolet',), ('chrysler',), ('dodge',), ('ford',), ('mercedes',), ('mercedes-benz',), ('mercury',), ('oldsmobile',), ('plymouth',), ('pontiac',)] != []",False
152,What are the different models created by either the car maker General Motors or weighed more than 3500?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 JOIN model_list AS T2 ON T1.MakeId = T2.Model JOIN car_makers AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500,"Not match: [('amc',), ('buick',), ('cadillac',), ('chevrolet',), ('chrysler',), ('dodge',), ('ford',), ('mercedes',), ('mercedes-benz',), ('mercury',), ('oldsmobile',), ('plymouth',), ('pontiac',)] != []",False
153,In which years cars were produced weighing no less than 3000 and no more than 4000 ?,easy,spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight BETWEEN 3000 AND 4000;,,True
154,What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?,easy,spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight < 4000 INTERSECT SELECT DISTINCT YEAR FROM CARS_DATA WHERE Weight > 3000,,True
155,What is the horsepower of the car with the largest accelerate?,medium,spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT T1.Horsepower FROM CARS_DATA AS T1 ORDER BY T1.Accelerate DESC LIMIT 1,,True
156,What is the horsepower of the car with the greatest accelerate?,medium,spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT T1.Horsepower FROM CARS_DATA AS T1 ORDER BY T1.Accelerate DESC LIMIT 1,,True
157,"For model volvo, how many cylinders does the car with the least accelerate have?",extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1,,True
158,"For a volvo model, how many cylinders does the version with least accelerate have?",extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1,"Not match: [('6',)] != []",False
159,How many cars have a larger accelerate than the car with the largest horsepower?,hard,spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ),,True
160,What is the number of cars with a greater accelerate than the one with the most horsepower?,hard,spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ),,True
161,How many countries has more than 2 car makers ?,medium,spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(T1.CountryId) FROM ( SELECT T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 2 ) AS T1,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
162,What is the number of countries with more than 2 car makers ?,medium,spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(*) FROM ( SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(T1.CountryName) > 2 ) T3,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('4',)]",False
163,How many cars has over 6 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6,,True
164,What is the number of carsw ith over 6 cylinders?,easy,spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 6,,True
165,"For the cars with 4 cylinders, which model has the largest horsepower?",extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1,,True
166,"For all of the 4 cylinder cars, which model has the most horsepower?",extra,spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1,,True
167,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",extra,spider_data/database/car_1/car_1.sqlite,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT T1.MakeId , T1.Make FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.horsepower > ( SELECT min(horsepower) FROM cars_data ) AND T2.Cylinders <= 3",,True
168,"Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",extra,spider_data/database/car_1/car_1.sqlite,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT T1.MakeId, T1.Make FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.horsepower != ( SELECT min(horsepower) FROM cars_data ) AND T2.Cylinders < 4",,True
169,What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?,medium,spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980,,True
170,What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?,medium,spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT max(mpg) FROM CARS_DATA WHERE Cylinders = 8 OR YEAR < 1980,,True
171,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id INNER JOIN MODEL_LIST AS T3 ON T3.ModelId = T1.Model LEFT JOIN CAR_MAKERS AS T4 ON T4.Id = T3.Maker WHERE T2.Weight < 3500 AND T4.FullName != 'Ford Motor Company',"Not match: [('amc',), ('audi',), ('bmw',), ('buick',), ('chevrolet',), ('chrysler',), ('citroen',), ('datsun',), ('dodge',), ('fiat',), ('honda',), ('mazda',), ('mercedes-benz',), ('nissan',), ('oldsmobile',), ('opel',), ('peugeot',), ('plymouth',), ('pontiac',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)] != []",False
172,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,extra,spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT DISTINCT T1.Model FROM CAR_NAMES AS T1 INNER JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id INNER JOIN MODEL_LIST AS T3 ON T3.ModelId = T1.Model WHERE T2.Weight < 3500 AND T3.Maker != ( SELECT Id FROM car_makers WHERE Maker = 'Ford' ),"Not match: [('amc',), ('audi',), ('bmw',), ('buick',), ('chevrolet',), ('chrysler',), ('citroen',), ('datsun',), ('dodge',), ('fiat',), ('honda',), ('mazda',), ('mercedes-benz',), ('nissan',), ('oldsmobile',), ('opel',), ('peugeot',), ('plymouth',), ('pontiac',), ('renault',), ('saab',), ('subaru',), ('toyota',), ('triumph',), ('volkswagen',), ('volvo',)] != []",False
173,What are the name of the countries where there is not a single car maker?,hard,spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT T1.CountryName FROM COUNTRIES AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Maker IS NULL,,True
174,What are the names of the countries with no car makers?,hard,spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country,,True
175,Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .,extra,spider_data/database/car_1/car_1.sqlite,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3","Not match: [('19', 'toyota'), ('2', 'volkswagen'), ('4', 'gm'), ('5', 'ford'), ('6', 'chrysler'), ('8', 'nissan')] != [('4', 'gm'), ('6', 'chrysler')]",False
176,What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Id HAVING COUNT(*) > 3","Not match: [('19', 'toyota'), ('2', 'volkswagen'), ('4', 'gm'), ('5', 'ford'), ('6', 'chrysler'), ('8', 'nissan')] != []",False
177,What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?,extra,spider_data/database/car_1/car_1.sqlite,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 3 UNION SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country INNER JOIN model_list AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat'",,True
178,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?,extra,spider_data/database/car_1/car_1.sqlite,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Maker) > 3 UNION SELECT T1.CountryId , T1.CountryName FROM COUNTRIES AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country INNER JOIN model_list AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat'",,True
179,"Which country does Airline ""JetBlue Airways"" belong to?",easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
180,What country is Jetblue Airways affiliated with?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",,True
181,"What is the abbreviation of Airline ""JetBlue Airways""?",easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""JetBlue Airways""",,True
182,Which abbreviation corresponds to Jetblue Airways?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""JetBlue Airways""",,True
183,"List all airline names and their abbreviations in ""USA"".",medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",,True
184,What are the airline names and abbreviations for airlines in the USA?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",,True
185,List the airport code and name in the city of Anthony.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = ""Anthony""",,True
186,Give the airport code and airport name corresonding to the city Anthony.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = ""Anthony""",,True
187,How many airlines do we have?,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,,True
188,What is the total number of airlines?,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,,True
189,How many airports do we have?,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
190,Return the number of  airports.,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,,True
191,How many flights do we have?,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
192,Return the number of flights.,easy,spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM FLIGHTS,,True
193,Which airline has abbreviation 'UAL'?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
194,Give the airline with abbreviation 'UAL'.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",,True
195,How many airlines are from USA?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM airlines WHERE Country = ""USA""",,True
196,Return the number of airlines in the USA.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","SELECT count(*) FROM airlines WHERE Country = ""USA""",,True
197,Which city and country is the Alton airport at?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
198,Give the city and country for the Alton airport.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City , Country FROM airports WHERE AirportName = ""Alton""",,True
199,What is the airport name for airport 'AKO'?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM airports WHERE AirportCode = ""AKO""",,True
200,Return the name of the airport with code 'AKO'.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","SELECT AirportName FROM airports WHERE AirportCode = ""AKO""",,True
201,What are airport names at City 'Aberdeen'?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City = 'Aberdeen',,True
202,What are the names of airports in Aberdeen?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","SELECT AirportName FROM airports WHERE City = ""Aberdeen""",,True
203,How many flights depart from 'APG'?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
204,Count the number of flights departing from 'APG'.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
205,How many flights have destination ATO?,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",,True
206,Count the number of flights into ATO.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",,True
207,How many flights depart from City Aberdeen?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
208,Return the number of flights departing from Aberdeen.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
209,How many flights arriving in Aberdeen city?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode = T2.destairport WHERE T1.city = ""Aberdeen""",,True
210,Return the number of flights arriving in Aberdeen.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
211,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T2.City = ""Aberdeen"" AND T3.City = ""Ashley""",,True
212,How many flights fly from Aberdeen to Ashley?,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T2.City = ""Aberdeen"" AND T3.City = ""Ashley""",,True
213,How many flights does airline 'JetBlue Airways' have?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""JetBlue Airways""",,True
214,Give the number of Jetblue Airways flights.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""JetBlue Airways""",,True
215,How many 'United Airlines' flights go to Airport 'ASY'?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",,True
216,Count the number of United Airlines flights arriving in ASY Airport.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",,True
217,How many 'United Airlines' flights depart from Airport 'AHD'?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",,True
218,Return the number of United Airlines flights leaving from AHD Airport.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",,True
219,How many United Airlines flights go to City 'Aberdeen'?,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.DestAirport WHERE T1.Airline = ""United Airlines"" AND T3.City = ""Aberdeen""",,True
220,Count the number of United Airlines flights that arrive in Aberdeen.,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.DestAirport WHERE T1.Airline = ""United Airlines"" AND T3.City = ""Aberdeen""",,True
221,Which city has most number of arriving flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1,,True
222,Which city has the most frequent destination airport?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T2.DestAirport ORDER BY COUNT(*) DESC LIMIT 1,,True
223,Which city has most number of departing flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1,,True
224,Which city is the most frequent source airport?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T2.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1,,True
225,What is the code of airport that has the highest number of flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,,True
226,What is the airport code of the airport with the most flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,,True
227,What is the code of airport that has fewest number of flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
228,Give the code of the airport with the least flights.,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,,True
229,Which airline has most number of flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,,True
230,What airline serves the most flights?,extra,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,,True
231,Find the abbreviation and country of the airline that has fewest number of flights?,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.Abbreviation , T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1","Not match: [('AirTran', 'USA')] != [('UAL', 'USA')]",False
232,What is the abbreviation of the airilne has the fewest flights and what country is it in?,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT T1.Abbreviation , T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",,True
233,What are airlines that have some flight departing from airport 'AHD'?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",,True
234,Which airlines have a flight with source airport AHD?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",,True
235,What are airlines that have flights arriving at airport 'AHD'?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
236,Which airlines have a flight with destination airport AHD?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",,True
237,Find all airlines that have flights from both airports 'APG' and 'CVO'.,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""",,True
238,Which airlines have departing flights from both APG and CVO airports?,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""APG"" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""CVO""",,True
239,Find all airlines that have flights from airport 'CVO' but not from 'APG'.,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",,True
240,Which airlines have departures from CVO but not from APG airports?,extra,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",,True
241,Find all airlines that have at least 10 flights.,medium,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) > 10,,True
242,Which airlines have at least 10 flights?,medium,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) > 10,,True
243,Find all airlines that have fewer than 200 flights.,medium,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,,True
244,Which airlines have less than 200 flights?,medium,spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) < 200,,True
245,"What are flight numbers of Airline ""United Airlines""?",medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""United Airlines""",,True
246,Which flight numbers correspond to United Airlines flights?,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""United Airlines""",,True
247,"What are flight numbers of flights departing from Airport ""APG""?",easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
248,Give the flight numbers of flights leaving from APG.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",,True
249,"What are flight numbers of flights arriving at Airport ""APG""?",easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
250,Give the flight numbers of flights landing at APG.,easy,spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",,True
251,"What are flight numbers of flights departing from City ""Aberdeen ""?",medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
252,Give the flight numbers of flights leaving from Aberdeen.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
253,"What are flight numbers of flights arriving at City ""Aberdeen""?",medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
254,Give the flight numbers of flights arriving in Aberdeen.,medium,spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",,True
255,Find the number of flights landing in the city of Aberdeen or Abilene.,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = ""Aberdeen"" OR T2.city = ""Abilene""",,True
256,How many flights land in Aberdeen or Abilene?,hard,spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen"" OR T2.City = ""Abilene""",,True
257,Find the name of airports which do not have any flight in and out.,hard,spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights),,True
258,Which airports do not have departing or arriving flights?,hard,spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights),,True
259,How many employees are there?,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
260,Count the number of employees,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT count(*) FROM employee,,True
261,Sort employee names by their age in ascending order.,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,,True
262,List the names of employees and sort in ascending order of age.,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,,True
263,What is the number of employees from each city?,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City , COUNT(*) FROM employee GROUP BY City","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
264,Count the number of employees for each city.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City , COUNT(*) FROM employee GROUP BY City","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
265,Which cities do more than one employee under age 30 come from?,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1,,True
266,Find the cities that have more than one employee under age 30.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1,,True
267,Find the number of shops in each location.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , COUNT(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
268,How many shops are there in each location?,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT LOCATION , count(*) FROM shop GROUP BY LOCATION","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
269,Find the manager name and district of the shop whose number of products is the largest.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name , District FROM shop ORDER BY Number_products DESC LIMIT 1",,True
270,What are the manager name and district of the shop that sells the largest number of products?,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name , District FROM shop ORDER BY Number_products DESC LIMIT 1",,True
271,find the minimum and maximum number of products of all stores.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",,True
272,What are the minimum and maximum number of products across all the shops?,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",,True
273,"Return the name, location and district of all shops in descending order of number of products.",medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY Number_products DESC",,True
274,"Sort all the shops by number products in descending order, and return the name, location and district of each shop.",medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT name , LOCATION , district FROM shop ORDER BY Number_products DESC",,True
275,Find the names of stores whose number products is more than the average number of products.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),,True
276,Which shops' number products is above the average? Give me the shop names.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),,True
277,find the name of employee who was awarded the most times in the evaluation.,extra,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id GROUP BY t2.employee_id ORDER BY count(*) DESC LIMIT 1,,True
278,Which employee received the most awards in evaluations? Give me the employee name.,extra,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
279,Find the name of the employee who got the highest one time bonus.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id ORDER BY t2.bonus DESC LIMIT 1,,True
280,Which employee received the biggest bonus? Give me the employee name.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1,,True
281,Find the names of employees who never won any award in the evaluation.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),,True
282,What are the names of the employees who never received any evaluation?,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),,True
283,What is the name of the shop that is hiring the largest number of employees?,extra,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM shop AS t1 JOIN hiring AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.shop_id ORDER BY count(*) DESC LIMIT 1,,True
284,Which shop has the most employees? Give me the shop name.,extra,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1,,True
285,Find the name of the shops that do not hire any employee.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
286,Which shops run with no employees? Find the shop names,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),,True
287,Find the number of employees hired in each shop; show the shop name as well.,medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT T2.name , count(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.shop_id","Not match: [('1', 'FC Inter'), ('1', 'FC KooTeePee'), ('1', 'FC Lahti'), ('1', 'FF Jaro'), ('1', 'HJK'), ('2', 'FC Haka')] != [('FC Haka', '2'), ('FC Inter', '1'), ('FC KooTeePee', '1'), ('FC Lahti', '1'), ('FF Jaro', '1'), ('HJK', '1')]",False
288,"For each shop, return the number of employees working there and the name of the shop.",medium,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT count(*) , T2.name FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T2.name",,True
289,What is total bonus given in all evaluations?,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
290,Find the total amount of bonus given in all the evaluations.,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT sum(bonus) FROM evaluation,,True
291,Give me all the information about hiring.,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
292,What is all the information about hiring?,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring,,True
293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
294,Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.,hard,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
295,How many different store locations are there?,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT LOCATION) FROM shop,,True
296,Count the number of distinct store locations.,easy,spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT LOCATION) FROM shop,,True
297,How many documents do we have?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,,True
298,Count the number of documents.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,,True
299,"List document IDs, document names, and document descriptions for all documents.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID , Document_Name , Document_Description FROM Documents",,True
300,"What are the ids, names, and descriptions for all documents?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT document_id , document_name , document_description FROM Documents",,True
301,What is the document name and template id for document with description with the letter 'w' in it?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",,True
302,Return the names and template ids for documents that contain the letter w in their description.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",,True
303,"What is the document id, template id and description for document named ""Robbin CV""?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""",,True
304,"Return the document id, template id, and description for the document with the name Robbin CV.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""",,True
305,How many different templates do all document use?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM Documents,,True
306,Count the number of different templates used for documents.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT template_id) FROM Documents,,True
307,How many documents are using the template with type code 'PPT'?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT COUNT(T1.document_id) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id WHERE T2.Template_Type_Code = 'PPT',,True
308,Count the number of documents that use the PPT template type.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',,True
309,Show all template ids and number of documents using each template.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
310,"What are all different template ids used for documents, and how many times were each of them used?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT template_id , count(*) FROM Documents GROUP BY template_id",,True
311,What is the id and type code for the template used by the most documents?,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
312,Return the id and type code of the template that is used for the greatest number of documents.,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",,True
313,Show ids for all templates that are used by more than one document.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
314,What are the template ids of any templates used in more than a single document?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,,True
315,Show ids for all templates not used by any document.,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,,True
316,What are the ids for templates that are not used in any documents?,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,,True
317,How many templates do we have?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
318,Count the number of templates.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,,True
319,"Show template ids, version numbers, and template type codes for all templates.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
320,"What are the ids, version numbers, and type codes for each template?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT template_id , version_number , template_type_code FROM Templates",,True
321,Show all distinct template type codes for all templates.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM Templates,,True
322,What are the different template type codes?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT template_type_code FROM Templates,,True
323,What are the ids of templates with template type code PP or PPT?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""",SELECT template_id FROM Templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT',,True
324,Return the ids of templates that have the code PP or PPT.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT template_id FROM Templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",,True
325,How many templates have template type code CV?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",,True
326,Count the number of templates of the type CV.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",,True
327,What is the version number and template type code for the template with version number later than 5?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
328,Return the version numbers and template type codes of templates with a version number greater than 5.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",,True
329,Show all template type codes and number of templates for each.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
330,"What are the different template type codes, and how many templates correspond to each?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",,True
331,Which template type code has most number of templates?,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
332,Return the type code of the template type that the most templates belong to.,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,,True
333,Show all template type codes with less than three templates.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
334,What are the codes of template types that have fewer than 3 templates?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,,True
335,What the smallest version number and its template type code?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) , template_type_code FROM Templates",,True
336,"Return the lowest version number, along with its corresponding template type code.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) , template_type_code FROM Templates",,True
337,"What is the template type code of the template used by document with the name ""Data base""?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""",,True
338,Return the template type code of the template that is used by a document named Data base.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""",,True
339,Show all document names using templates with template type code BK.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT T1.document_name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id WHERE T2.template_type_code = 'BK',,True
340,What are the names of documents that use templates with the code BK?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT T1.document_name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.template_id = T2.template_id WHERE T2.Template_Type_Code = 'BK',,True
341,Show all template type codes and the number of documents using each type.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",,True
342,"What are the different template type codes, and how many documents use each type?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",,True
343,Which template type code is used by most number of documents?,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,,True
344,Return the code of the template type that is most commonly used in documents.,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,,True
345,Show all template type codes that are not used by any document.,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM Templates EXCEPT SELECT t1.template_type_code FROM Templates AS t1 INNER JOIN Documents AS t2 ON t1.template_id = t2.template_id,,True
346,What are the codes of template types that are not used for any document?,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT template_type_code FROM Templates EXCEPT SELECT t1.template_type_code FROM Templates AS t1 JOIN Documents AS t2 ON t1.template_id = t2.template_id,,True
347,Show all template type codes and descriptions.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
348,What are the type codes and descriptions for all template types?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT template_type_code , template_type_description FROM Ref_template_types",,True
349,"What is the template type descriptions for template type code ""AD"".",easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
350,Return the template type description of the template type with the code AD.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",,True
351,"What is the template type code for template type description ""Book"".",easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""",,True
352,"Return the type code of the template type with the description ""Book"".",easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""","SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""",,True
353,What are the distinct template type descriptions for the templates ever used by any document?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_id,,True
354,Return the different descriptions for templates that have been used in a document.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T1.template_details FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,"Not match: [('Advertisement',), ('Book',), ('Paper',), ('Presentation',)] != [('',)]",False
355,"What are the template ids with template type description ""Presentation"".",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""","SELECT T1.template_id FROM Templates AS T1 INNER JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = ""Presentation""",,True
356,Return the ids corresponding to templates with the description 'Presentation'.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT T1.template_id FROM Templates AS T1 INNER JOIN Ref_template_types AS T2 ON T1.template_type_code = T2.template_type_code WHERE T2.template_type_description = 'Presentation',,True
357,How many paragraphs in total?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
358,Count the number of paragraphs.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,,True
359,How many paragraphs for the document with name 'Summer Show'?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Summer Show',,True
360,Count the number of paragraphs in the document named 'Summer Show'.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Summer Show',,True
361,Show paragraph details for paragraph with text 'Korea ' .,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea ',"Not match: [('',), ('',)] != []",False
362,What are the details for the paragraph that includes the text 'Korea ' ?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%',,True
363,Show all paragraph ids and texts for the document with name 'Welcome to NY'.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = 'Welcome to NY'",,True
364,What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'",,True
365,"Show all paragraph texts for the document ""Customer reviews"".",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""","SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = ""Customer reviews""",,True
366,What are the paragraph texts for the document with the name 'Customer reviews'?,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews',,True
367,Show all document ids and the number of paragraphs in each document. Order by document id.,medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT T1.document_id , count(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.document_id = T2.Document_ID GROUP BY T1.document_id ORDER BY T1.document_id",,True
368,"Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID , COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID",,True
369,"Show all document ids, names and the number of paragraphs in each document.",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",,True
370,"What are the ids and names of each document, as well as the number of paragraphs in each?",medium,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.document_id , T2.Document_Name , count(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",,True
371,List all document ids with at least two paragraphs.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,,True
372,What are the ids of documents that have 2 or more paragraphs?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,,True
373,What is the document id and name with greatest number of paragraphs?,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.Document_Name FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(*) DESC LIMIT 1",,True
374,Return the id and name of the document with the most paragraphs.,extra,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.document_id , T2.Document_Name FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(*) DESC LIMIT 1",,True
375,What is the document id with least number of paragraphs?,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) ASC LIMIT 1,,True
376,Return the id of the document with the fewest paragraphs.,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1,,True
377,What is the document id with 1 to 2 paragraphs?,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2,,True
378,Give the ids of documents that have between one and two paragraphs.,easy,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,,True
379,Show the document id with paragraph text 'Brazil' and 'Ireland'.,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland',,True
380,What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?,hard,spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT document_id FROM Paragraphs WHERE paragraph_text LIKE 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text LIKE 'Ireland',,True
381,How many teachers are there?,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
382,What is the total count of teachers?,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,,True
383,List the names of teachers in ascending order of age.,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
384,What are the names of the teachers ordered by ascending age?,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
385,What are the age and hometown of teachers?,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
386,What is the age and hometown of every teacher?,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age , Hometown FROM teacher",,True
387,List the name of teachers whose hometown is not `` Little Lever Urban District '' .,easy,spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""","Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
388,What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?,easy,spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""","Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
389,Show the name of teachers aged either 32 or 33?,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
390,What are the names of the teachers who are aged either 32 or 33?,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,,True
391,What is the hometown of the youngest teacher?,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,,True
392,Where is the youngest teacher from?,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,,True
393,Show different hometown of teachers and the number of teachers from each hometown.,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",,True
394,"For each hometown, how many teachers are there?",medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",,True
395,List the most common hometown of teachers.,hard,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
396,What is the most commmon hometowns for teachers?,hard,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
397,Show the hometowns shared by at least two teachers.,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,,True
398,What are the towns from which at least two teachers come from?,easy,spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,,True
399,Show names of teachers and the courses they are arranged to teach.,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",,True
400,What is the name of each teacher and what course they teach?,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T3.Name , T2.Course FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",,True
401,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,hard,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name ASC",,True
402,What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?,hard,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T3.Name , T2.Course FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name ASC",,True
403,Show the name of the teacher for the math course.,hard,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'math',"Not match: [('Kearsley Brown',), ('Vicente Carretero',)] != []",False
404,What are the names of the people who teach math courses?,hard,spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course_arrange AS T1 INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Math',,True
405,Show names of teachers and the number of courses they teach.,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",,True
406,What are the names of the teachers and how many courses do they teach?,medium,spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",,True
407,Show names of teachers that teach at least two courses.,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,,True
408,What are the names of the teachers who teach at least two courses?,medium,spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T2.Name FROM course_arrange AS T1 INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,,True
409,List the names of teachers who have not been arranged to teach courses.,hard,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange),,True
410,What are the names of the teachers whose courses have not been arranged?,hard,spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange),,True
411,How many visitors below age 30 are there?,easy,spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE age  <  30,SELECT count(*) FROM visitor WHERE Age < 30,,True
412,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",medium,spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,,True
413,What is the average age of the visitors whose membership level is not higher than 4?,easy,spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4,,True
414,"Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",medium,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC",,True
415,Find the id and name of the museum that has the most staff members?,medium,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT Museum_ID , Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1",,True
416,Find the average number of staff working for the museums that were open before 2009.,easy,spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009,,True
417,What are the opening year and staff number of the museum named Plaza Museum?,medium,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Num_of_Staff , Open_Year FROM museum WHERE Name = 'Plaza Museum'",,True
418,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,hard,spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010),,True
419,"find the id, name and age for visitors who visited some museums more than once.",medium,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","SELECT T1.id , T1.name , T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID HAVING COUNT(*) > 1",,True
420,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",extra,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T1.id , T1.Name , T1.Level_of_membership FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY SUM(T2.Total_spent) DESC LIMIT 1",,True
421,What are the id and name of the museum visited most times?,extra,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT T1.Museum_ID , T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1",,True
422,What is the name of the museum that had no visitor yet?,hard,spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),,True
423,Find the name and age of the visitor who bought the most tickets at once.,hard,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT T1.Name , T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID ORDER BY T2.Num_of_Ticket DESC LIMIT 1",,True
424,What are the average and maximum number of tickets bought in all visits?,medium,spider_data/database/museum_visit/museum_visit.sqlite,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit",,True
425,What is the total ticket expense of the visitors whose membership level is 1?,medium,spider_data/database/museum_visit/museum_visit.sqlite,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT sum(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1,,True
426,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,extra,spider_data/database/museum_visit/museum_visit.sqlite,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT T1.Name FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < 2009 INTERSECT SELECT T1.Name FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > 2011,,True
427,Find the number of visitors who did not visit any museum opened after 2010.,extra,spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),SELECT count(DISTINCT ID) FROM visitor WHERE id NOT IN ( SELECT T1.visitor_id FROM visit AS T1 JOIN museum AS T2 ON T1.museum_id = T2.museum_id WHERE T2.open_year > 2010 ),,True
428,How many museums were opened after 2013 or before 2008?,medium,spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,SELECT count(*) FROM museum WHERE open_year > 2013 OR open_year < 2008,,True
429,Find the total number of players.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
430,How many players are there?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT count(*) FROM players,,True
431,Find the total number of matches.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
432,Count the number of matches.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT count(*) FROM matches,,True
433,List the first name and birth date of all players from the country with code USA.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",,True
434,What are the first names and birth dates of players from the USA?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",,True
435,Find the average age of losers and winners of all matches.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
436,What are the average ages of losers and winners across matches?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",,True
437,Find the average rank of winners in all matches.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
438,What is the average rank for winners in all matches?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,,True
439,Find the highest rank of losers in all matches.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
440,What is the best rank of losers across all matches?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT min(loser_rank) FROM matches,,True
441,find the number of distinct country codes of all players.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
442,How many distinct countries do players come from?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,,True
443,Find the number of distinct name of losers.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
444,How many different loser names are there?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,,True
445,Find the name of tourney that has more than 10 matches.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
446,What are the names of tournaments that have more than 10 matches?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,,True
447,List the names of all winners who played in both 2013 and 2016.,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,,True
448,What are the names of players who won in both 2013 and 2016?,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,,True
449,List the number of all matches who played in years of 2013 or 2016.,medium,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
450,How many matches were played in 2013 or 2016?,medium,spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,,True
451,What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,extra,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.country_code , T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",,True
452,What are the first names and country codes for players who won both the WTA Championships and the Australian Open?,extra,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT DISTINCT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT DISTINCT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'","Not match: [('GER', 'Angelique'), ('USA', 'Serena')] != [('Angelique', 'GER'), ('Serena', 'USA')]",False
453,Find the first name and country code of the oldest player.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
454,What is the first name and country code of the oldest player?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",,True
455,List the first and last name of all players in the order of birth date.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
456,"What are the full names of all players, sorted by birth date?",medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",,True
457,List the first and last name of all players who are left / L hand in the order of birth date.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
458,"What are the full names of all left handed players, in order of birth date?",medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",,True
459,Find the first name and country code of the player who did the most number of tours.,hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
460,What is the first name and country code of the player with the most tours?,hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
461,Find the year that has the most number of matches.,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
462,Which year had the most matches?,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,,True
463,Find the name and rank points of the winner who won the most times.,hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name , T1.winner_rank_points FROM matches AS T1 GROUP BY T1.winner_name ORDER BY COUNT(*) DESC LIMIT 1",,True
464,"What is the name of the winner who has won the most matches, and how many rank points does this player have?",hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name , T1.winner_rank_points FROM matches AS T1 GROUP BY T1.winner_name ORDER BY COUNT(T1.winner_name) DESC LIMIT 1",,True
465,Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,,True
466,What is the name of the winner with the most rank points who participated in the Australian Open tournament?,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,,True
467,find the names of loser and winner who played in the match with greatest number of minutes.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
468,What are the names of the winner and loser who played in the longest match?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",,True
469,Find the average ranking for each player and their first name.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , avg(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('1001.0679611650486', 'Karis'), ('1002.6792452830189', 'Sybille'), ('1003.1212121212121', 'Kei'), ('1003.5367647058823', 'Seda'), ('1004.6666666666666', 'Sohyun'), ('1004.7428571428571', 'Malika'), ('1005.75', 'Berta'), ('1006.1769911504425', 'Vladislava'), ('1006.2982456140351', 'Elizabeth Anita Alexandria'), ('1006.5128205128206', 'Oliwia'), ('1007.15', 'Mahitha'), ('1009.8666666666667', 'Treta'), ('1010.1818181818181', 'Katyarina'), ('1010.3333333333334', 'Da Hye'), ('1010.4545454545455', 'Ramu'), ('1011.3666666666667', 'Amelie'), ('1011.469696969697', 'Wendy Qi Wen'), ('1011.9433962264151', 'Elke'), ('1012.325', 'Kelsey'), ('1013.4761904761905', 'Maud'), ('1015.2352941176471', 'Tingting'), ('1015.5', 'Fatyha'), ('1015.6792452830189', 'Susan'), ('1016.5714285714286', 'Apichaya'), ('1017.2560553633218', 'Melina'), ('1017.3134328358209', 'Nikki'), ('1017.7777777777778', 'Tijana'), ('1018.6534653465346', 'Keri'), ('1018.6637931034483', 'Ashmitha'), ('1019.0', 'Reina'), ('1019.4107142857143', 'Helen'), ('1019.9411764705883', 'Julita'), ('1020.28125', 'Hye Min'), ('1020.4271844660194', 'Kerstin'), ('1020.6', 'Carson'), ('1021.6504854368932', 'Ratnika'), ('1022.3333333333334', 'Xin Yu'), ('1022.6198347107438', 'Jordana'), ('1022.9174311926605', 'Emiliana'), ('1023.089430894309', 'Tanya'), ('1023.8690476190476', 'Eveliina'), ('1024.0116279069769', 'Sherry'), ('1024.625', 'Aishwarya'), ('1024.6666666666667', 'Julia Mansano'), ('1025.0', 'Megumi'), ('1027.0', 'Guillermina'), ('1027.1382978723404', 'Oana'), ('1028.0365853658536', 'Madeleine'), ('1028.9565217391305', 'Sandy'), ('1029.0', 'Molly'), ('1029.0980392156862', 'Sonia'), ('1029.1666666666667', 'Meiqi'), ('1029.3196721311476', 'Trang'), ('1029.6888888888889', 'Eden'), ('1030.5', 'Leylah Annie'), ('1031.0', 'Nevena'), ('1031.228855721393', 'Ana Paula'), ('1031.5342465753424', 'Mallaurie'), ('1031.6', 'Mei Xu'), ('1032.2666666666667', 'Desiree'), ('1033.027027027027', 'Sasa'), ('1034.1304347826087', 'Yujia'), ('1034.5833333333333', 'Ailen'), ('1035.0384615384614', 'Kirsten Andrea'), ('1035.327868852459', 'Libi'), ('1035.46', 'Jazmin'), ('1035.5548387096774', 'Stephanie Mariel'), ('1035.6470588235295', 'Jin Ju'), ('1035.7780678851175', 'Paulina'), ('1035.95', 'Meng Ning'), ('1036.1214953271028', 'Magalie'), ('1037.0833333333333', 'Anushka'), ('1037.5274725274726', 'Jainy'), ('1038.35', 'Akvile'), ('1038.6911764705883', 'I Hsuan'), ('1039.0', 'Inger'), ('1039.3902439024391', 'Chi Fan'), ('1039.6744186046512', 'Abiodun'), ('1039.8333333333333', 'Melany Solange'), ('1041.0740740740741', 'Pippa'), ('1041.5367231638418', 'Yuriko'), ('1041.948717948718', 'Emily J'), ('1042.037037037037', 'Annie'), ('1042.6802325581396', 'Shu Ying'), ('1042.7843137254902', 'Dominique'), ('1045.6666666666667', 'Andrina'), ('1047.3529411764705', 'Yuqi'), ('1047.7575757575758', 'Si Qi'), ('1047.98224852071', 'Maria Paulina'), ('1048.081081081081', 'Ye Xin'), ('1049.0', 'Costanza'), ('1049.4655172413793', 'Antonina'), ('1049.834745762712', 'Noelia'), ('1050.7', 'Katya'), ('1051.1224489795918', 'Margaux'), ('1051.623188405797', 'Habiba'), ('1051.7096774193549', 'Antonela'), ('1051.7349397590363', 'Rita'), ('1052.8314606741574', 'Gaelle'), ('1054.0', 'Yuan'), ('1054.0813953488373', 'Nikol'), ('1054.606896551724', 'Robyn'), ('1054.9019607843138', 'Larikah'), ('1055.020202020202', 'Kady'), ('1056.0588235294117', 'Martha'), ('1057.628205128205', 'Alessia'), ('1058.0', 'Zhibek'), ('1059.2702702702702', 'Yanni'), ('1059.73', 'Rosalia'), ('1060.5633802816901', 'Kristina N'), ('1061.3076923076924', 'Pei Ju'), ('1062.3666666666666', 'Lamis'), ('1062.795918367347', 'Karina Kristina'), ('1063.4736842105262', 'Andjela'), ('1063.9411764705883', 'Yijia'), ('1064.0', 'Axana'), ('1064.142857142857', 'Mihika'), ('1066.5343511450383', 'Eleanor'), ('1066.5887096774193', 'Rosalie'), ('1067.019801980198', 'Alejandra'), ('1067.3413173652696', 'Marisa'), ('1068.4619883040937', 'Yolande'), ('1068.7457627118645', 'Tea'), ('1068.9166666666667', 'Kariann'), ('1069.0379746835442', 'Ryann'), ('1069.0925925925926', 'Inci'), ('1069.15', 'Nermeen'), ('1069.3208955223881', 'Hyojung'), ('1070.0377358490566', 'Kwan Yau'), ('1070.1025641025642', 'Louise'), ('1070.21875', 'Maureen'), ('1070.3417721518988', 'Simone'), ('1070.3967391304348', 'Anna Maria'), ('1070.5648854961833', 'Jawairiah'), ('1070.6666666666667', 'Shiori'), ('1070.9463414634147', 'Fatimah'), ('1071.3076923076924', 'Mi Jeong'), ('1071.5833333333333', 'Yukako'), ('1072.4', 'Leticia Garcia'), ('1072.857142857143', 'Ronke'), ('1072.9591836734694', 'Maria Andrea'), ('1073.1752577319587', 'Ebony'), ('1074.3333333333333', 'Arlinda'), ('1075.0', 'Tatia'), ('1075.8260869565217', 'Amira'), ('1077.8095238095239', 'Karolayne'), ('1079.05', 'Ivanka'), ('1081.142857142857', 'Wan Yi'), ('1081.1666666666667', 'Sari'), ('1082.3548387096773', 'Agata Jadwiga'), ('1083.1454545454546', 'Wiktoria'), ('1083.8333333333333', 'Eva Marie'), ('1084.0294117647059', 'May'), ('1084.107142857143', 'Sofico'), ('1084.7916666666667', 'Ana Gabriela'), ('1085.4242424242425', 'Mariaryeni'), ('1085.581818181818', 'Iana'), ('1086.45', 'Astrid Wanja'), ('1087.372340425532', 'Eleonore'), ('1087.3823529411766', 'Naz'), ('1087.6216216216217', 'Gyulnara'), ('1089.1603773584907', 'Angeliki'), ('1089.2100840336134', 'Rashmi'), ('1089.7111111111112', 'Vanja'), ('1092.2771084337348', 'Emiliya'), ('1092.7621951219512', 'Magy'), ('1094.4583333333333', 'Dina'), ('1095.1176470588234', 'Hikari'), ('1096.1140350877192', 'Nour'), ('1096.9130434782608', 'Yoshimi'), ('1097.0', 'Sharon Sanchana'), ('1097.219512195122', 'Kimika'), ('1098.2888888888888', 'Lulu'), ('1098.357142857143', 'Yu Jin'), ('1099.625', 'Parris'), ('1104.357142857143', 'Melissa Ishuan'), ('1105.1298701298701', 'Alicia'), ('1105.171875', 'Sanae'), ('1105.3125', 'Kanako'), ('1106.3076923076924', 'Farah'), ('1106.5', 'Pei Hsuan'), ('1107.0882352941176', 'Lauryn'), ('1107.0919540229886', 'Danijela'), ('1107.7142857142858', 'Hsin Yuan'), ('1110.0434782608695', 'Abbi'), ('1110.0816326530612', 'Juliana'), ('1110.3333333333333', 'Aida'), ('1110.4411764705883', 'Mihoki'), ('1110.4594594594594', 'Yawna'), ('1110.5376344086021', 'Hana'), ('1111.08', 'Katrine Isabel'), ('1111.8333333333333', 'Johana'), ('1112.1458333333333', 'Chompoothip'), ('1112.75', 'Olaya'), ('1112.875', 'Christie'), ('1112.9450549450548', 'Camille'), ('1113.2325581395348', 'Tanaporn'), ('1114.4074074074074', 'Milena'), ('1114.9433962264152', 'Kelia'), ('1114.99375', 'Isabela'), ('1115.0851063829787', 'Deeon'), ('1115.72', 'Seira'), ('1116.4190476190477', 'Jil Nora'), ('1117.55', 'Wen Ling'), ('1117.64', 'Jasmine Amber'), ('1117.6666666666667', 'Rana'), ('1117.7142857142858', 'Kate'), ('1117.88', 'Saana'), ('1118.4166666666667', 'Tamar'), ('1118.904761904762', 'Huijie'), ('1119.1639344262296', 'Alana'), ('1119.4897959183672', 'Maria Del Rosario'), ('1120.388888888889', 'Shou Na'), ('1120.5652173913043', 'Lizaveta'), ('1121.04', 'Mitsumi'), ('1121.0869565217392', 'Maurien'), ('1121.2432432432433', 'Rafaela'), ('1121.767857142857', 'Jara'), ('1121.8846153846155', 'Ramya'), ('1122.4423076923076', 'Adnya'), ('1122.4545454545455', 'Se Jin'), ('1123.3855421686746', 'Cemre'), ('1123.4864864864865', 'Alessandra'), ('1123.6486486486488', 'Deria'), ('1124.1666666666667', 'Nina Isabella'), ('1125.0363636363636', 'Rio'), ('1125.5471698113208', 'Rona'), ('1126.3333333333333', 'Brindtha'), ('1127.7368421052631', 'Anca'), ('1127.9338842975208', 'Carlotta'), ('1128.030303030303', 'Chantelle'), ('1128.7272727272727', 'Angela'), ('1128.901098901099', 'Yoko'), ('1130.6037735849056', 'Vaniya'), ('1131.6333333333334', 'Donika'), ('1132.0', 'Chelsea'), ('1132.1744186046512', 'Dariya'), ('1132.4109589041095', 'Ushna'), ('1135.5', 'Ilay'), ('1136.8535031847134', 'Ivette'), ('1137.19', 'Priscila'), ('1138.8490566037735', 'Victoire'), ('1138.9166666666667', 'Nastassia'), ('1139.0', 'Luna'), ('1139.2340425531916', 'Sarahi'), ('1139.7', 'Mafalda'), ('114.05571428571429', 'Jie'), ('114.78806907378336', 'Yayuk'), ('1140.981981981982', 'Busra'), ('1141.842105263158', 'Cecilie Lundgaard'), ('1141.842105263158', 'Sing Le'), ('1142.9285714285713', 'Savannah'), ('1143.7957746478874', 'Marcela Guimaraes'), ('1144.45', 'Zhima'), ('1145.1641791044776', 'Alessondra'), ('1145.4333333333334', 'Rebeca'), ('1145.8235294117646', 'Akiho'), ('1146.3934426229507', 'Tamari'), ('1147.8526315789475', 'Rachel'), ('1147.8529411764705', 'Lidia'), ('1148.0', 'Shreya'), ('1148.9166666666667', 'Mariia'), ('1149.3125', 'Spurti'), ('1150.0', 'Anda'), ('1150.0', 'Vinciane'), ('1150.6607142857142', 'Ghislaine'), ('1151.95', 'Asha'), ('1152.0857142857142', 'Aneta'), ('1152.142857142857', 'Gebriela'), ('1152.7837837837837', 'Weronika Jasmina'), ('1152.888888888889', 'Maileen'), ('1153.590909090909', 'Mami'), ('1153.9166666666667', 'Georgiana'), ('1153.936507936508', 'Hao Ching'), ('1154.093023255814', 'Melissa'), ('1154.25', 'Agustina Elena'), ('1154.2714285714285', 'Elizabeta'), ('1154.2857142857142', 'Dewi'), ('1154.4166666666667', 'Shir'), ('1155.0392156862745', 'Afroditi'), ('1155.8191489361702', 'Yekaterina'), ('1156.28125', 'Paige Mary'), ('1156.340425531915', 'Ah'), ('1157.5', 'Eugenia'), ('1157.8', 'Almudena'), ('1159.1818181818182', 'Dagmara'), ('1159.5632183908046', 'Theresa'), ('1160.3125', 'Denise Antonela'), ('1161.0', 'Jiaxue'), ('1161.5675675675675', 'Caroline B'), ('1162.8301886792453', 'Kamilla'), ('1163.0', 'Mariona'), ('1163.3478260869565', 'Kaylah'), ('1164.090909090909', 'Ki Ryang'), ('1164.107142857143', 'Nelise'), ('1164.95', 'Aina'), ('1165.093023255814', 'Colomba'), ('1165.5573770491803', 'Ina'), ('1166.875', 'Yarden'), ('1167.2758620689656', 'Nonna'), ('1167.3333333333333', 'Stefani'), ('1167.3368421052633', 'Belen'), ('1168.2857142857142', 'Roosh'), ('1168.3396226415093', 'Gulben'), ('1168.6571428571428', 'Selin'), ('1168.7967479674796', 'Ella'), ('1169.4864864864865', 'Miranda'), ('1169.6923076923076', 'Jia'), ('117.95684523809524', 'Iveta'), ('1170.1830985915492', 'Maria Jesus'), ('1170.3461538461538', 'You Na'), ('1170.840579710145', 'Violetta'), ('1170.9411764705883', 'Iulia Maria'), ('1171.0', 'Shelly'), ('1172.5531914893618', 'Assia'), ('1173.75', 'Maftuna'), ('1174.0', 'Nikita'), ('1175.7666666666667', 'Juliana Rocha'), ('1175.909090909091', 'Paula Andrea'), ('1176.5', 'Ralina'), ('1177.622641509434', 'Nattawadee'), ('1177.8823529411766', 'Yang'), ('1179.1555555555556', 'Olena'), ('1179.4153846153847', 'Haine'), ('1179.6216216216217', 'Leah'), ('1179.875', 'Livia'), ('1180.3828125', 'Naoko'), ('1180.5454545454545', 'Leslie'), ('1181.27868852459', 'Aselya'), ('1181.3548387096773', 'Manya'), ('1181.4736842105262', 'Dajana'), ('1181.6078431372548', 'Alory Regina Elorriaga'), ('1182.9107142857142', 'Meritxell'), ('1184.0', 'Layne'), ('1184.0416666666667', 'Andressa Cristina'), ('1184.6666666666667', 'Sabina Elena'), ('1184.7222222222222', 'Liniques'), ('1184.8260869565217', 'Smriti'), ('1185.030303030303', 'Yidi'), ('1185.7142857142858', 'Aldana'), ('1185.75', 'Hollie'), ('1186.9444444444443', 'Muge'), ('1187.0384615384614', 'Ferny'), ('1187.9245283018868', 'Shiran'), ('1188.2941176470588', 'Schena'), ('1188.5277777777778', 'Maria Camila'), ('1188.7096774193549', 'Mary Ann'), ('1189.0', 'June'), ('1190.0629921259842', 'Lutfiye'), ('1190.0833333333333', 'Maria Agustina'), ('1190.7307692307693', 'Clara'), ('1191.6470588235295', 'Sarai Delfina'), ('1192.1818181818182', 'Cameron'), ('1192.3783783783783', 'Camila Vital'), ('1192.5454545454545', 'Intissar'), ('1193.3529411764705', 'Emma Christine'), ('1196.0', 'Gulchekhra'), ('1196.56', 'Dorien'), ('1197.0', 'Giovanna'), ('1197.578947368421', 'Carolyn'), ('1198.1538461538462', 'Laura Sofia'), ('1198.25', 'Moyuka'), ('1198.3333333333333', 'Damira'), ('1199.8235294117646', 'Aastha'), ('1200.2', 'Aimee'), ('1201.16', 'Mila'), ('1201.25', 'Vita'), ('1202.2692307692307', 'Man Ying Maggie'), ('1203.5', 'Madina'), ('1204.6666666666667', 'Salma'), ('1204.7272727272727', 'Federica Joe'), ('1205.7692307692307', 'Diana Maria'), ('1206.6666666666667', 'Maia A'), ('1208.4285714285713', 'Avgusta'), ('1208.952380952381', 'Vishesh'), ('1209.4', 'Amrita'), ('1209.625', 'Emilija'), ('1209.625', 'Rui'), ('1209.625', 'Yihong'), ('1209.7777777777778', 'Sarlota'), ('121.82273948075202', 'Tamarine'), ('121.9579326923077', 'Jill'), ('1210.2571428571428', 'Se Hyun'), ('1211.0', 'Phenomena'), ('1211.2333333333333', 'Elodie'), ('1212.9166666666667', 'Justina'), ('1213.1666666666667', 'Adrienn'), ('1213.2142857142858', 'Mercedes'), ('1214.1142857142856', 'Vincenza'), ('1214.7692307692307', 'Hazal'), ('1214.857142857143', 'Ege'), ('1215.0', 'Marijana'), ('1217.469387755102', 'Madeline'), ('1218.5652173913043', 'Esen'), ('1219.0', 'Himari'), ('122.19587628865979', 'Agnieszka'), ('1220.0', 'Loudmilla'), ('1221.3333333333333', 'Sophia'), ('1221.5', 'Zinovia'), ('1221.7931034482758', 'Elaine'), ('1221.8333333333333', 'Blessing'), ('1221.904761904762', 'Milica'), ('1222.24', 'Yosr'), ('1223.4', 'Mihaela Lorena'), ('1224.0', 'Arina Gabriela'), ('1224.0', 'Judith'), ('1225.388888888889', 'Sneha'), ('1225.75', 'Ya'), ('1226.076923076923', 'Laylo'), ('1226.3333333333333', 'Ange Oby'), ('1226.5', 'Giorgie'), ('1226.5454545454545', 'Daphne'), ('1227.0', 'Muazzez'), ('1227.344827586207', 'Zaineb'), ('1227.7777777777778', 'Yasmina'), ('1227.8', 'Joanne'), ('1228.3235294117646', 'Shangqing'), ('1228.388888888889', 'Anke'), ('1228.75', 'Abir'), ('1228.9285714285713', 'Michela'), ('1229.5714285714287', 'Betina'), ('1229.5714285714287', 'Zeynep  Sena'), ('1229.7333333333333', 'En Pei'), ('1229.8', 'Sunae'), ('1230.2', 'Talya'), ('1230.2', 'Yuval'), ('1230.6', 'Jiakang'), ('1230.6', 'Mananchaya'), ('1231.2727272727273', 'Lorenza'), ('1231.5', 'Agne'), ('1232.0', 'Emilia'), ('1232.032258064516', 'Jiatian'), ('1232.2', 'Idia'), ('1232.8', 'Chaoyi'), ('1234.2857142857142', 'Milagros'), ('1234.6176470588234', 'Doga Selen'), ('1235.1960784313726', 'Sarvinoz'), ('1236.0', 'Victoria Ariadna'), ('1236.5333333333333', 'Viktoriia'), ('1236.6153846153845', 'Gulnaz'), ('1236.7627118644068', 'Shakhnoza'), ('1236.7777777777778', 'Carlota'), ('1237.6363636363637', 'Anne Marie'), ('1237.9', 'Zhou'), ('1238.0625', 'Minami'), ('1239.6666666666667', 'Yu Tong'), ('1240.92', 'Sean'), ('1241.1379310344828', 'Siyu'), ('1242.0', 'Damini'), ('1243.0', 'Vilma Y'), ('1243.4', 'Moulika'), ('1243.4285714285713', 'Ana Luisa'), ('1243.875', 'Jaimy Gayle'), ('1243.904761904762', 'Jule'), ('1244.3333333333333', 'Frederikke'), ('1245.3333333333333', 'Constanze'), ('1245.75', 'Anastasiia'), ('1247.3333333333333', 'Jamilya'), ('1247.3636363636363', 'Marcelina'), ('1247.909090909091', 'Nataliya'), ('1248.2', 'Dilara'), ('1248.72', 'Ahlam'), ('1249.3333333333333', 'Warona'), ('1251.1333333333334', 'Hortencia'), ('1252.0', 'Anne Sophie'), ('1252.9130434782608', 'Vicky'), ('1253.4', 'Beatriz Magdalena'), ('1254.6341463414635', 'Boba'), ('1255.3333333333333', 'Adva'), ('1258.5', 'Mouna'), ('1261.8181818181818', 'Yasmyn'), ('1262.5416666666667', 'Janja'), ('1263.7666666666667', 'Yoo Ri'), ('1267.0', 'Jin'), ('127.06775067750678', 'Kaia'), ('1275.8235294117646', 'Andra Maria'), ('1281.8461538461538', 'Arthi'), ('1281.8461538461538', 'Chanikarn'), ('131.02074074074073', 'Tsvetana'), ('132.12638580931264', 'Paola'), ('1332.0737704918033', 'Micaela'), ('134.21917808219177', 'Catherine Cartan'), ('135.88910505836577', 'Tamira'), ('1382.1538461538462', 'Beauty'), ('1397.5', 'Olawaseun'), ('14.654294803817603', 'Serena'), ('143.48235294117646', 'Mallory'), ('144.3264367816092', 'Anabel'), ('146.59709379128137', 'Bethanie'), ('149.46360759493672', 'Jarmila'), ('1493.0', 'Damilola'), ('150.96681415929203', 'Roberta'), ('159.62397820163488', 'Kveta'), ('162.3505747126437', 'Sesil'), ('165.96132596685084', 'Kurumi'), ('166.41358024691357', 'Shahar'), ('166.6586270871985', 'Yung Jan'), ('167.50632911392404', 'Heather'), ('167.90740740740742', 'Shuai'), ('169.13578500707214', 'Melinda'), ('171.71134020618555', 'Dominika'), ('177.22695035460993', 'Sania'), ('182.02426160337552', 'Timea'), ('185.3469387755102', 'Michaella'), ('185.75', 'Vania'), ('186.76587795765877', 'Mirjana'), ('188.06095041322314', 'Lourdes'), ('194.2392065344224', 'Maria Elena'), ('195.66923570969814', 'Vera'), ('200.97080291970804', 'Aravane'), ('201.87700534759358', 'Anna Lena'), ('203.5871080139373', 'Sabine'), ('205.17590361445784', 'Lesia'), ('208.95263157894738', 'Misaki'), ('210.0846394984326', 'Monica'), ('211.01377118644066', 'Brenda'), ('211.41240310077518', 'Yaroslava'), ('211.67325428194994', 'Edina'), ('213.75043630017453', 'Sorana'), ('215.25185185185185', 'Akgul'), ('215.6615811373093', 'Chanelle'), ('217.2493188010899', 'Su Wei'), ('217.85922330097088', 'Alla'), ('218.4701086956522', 'Severine'), ('221.66153846153847', 'Anastasija'), ('222.81428571428572', 'Zarina'), ('223.50900900900902', 'Donna'), ('229.35687022900763', 'Urszula'), ('229.3774193548387', 'Garbine'), ('235.31431431431432', 'Klara'), ('236.07412398921832', 'Cara'), ('240.0448979591837', 'Vesna'), ('240.5306603773585', 'Janette'), ('246.19871794871796', 'Richel'), ('247.7449768160742', 'Tatjana'), ('248.74237737516572', 'Anne'), ('249.5244140625', 'Eleni'), ('252.11485774499474', 'Alize'), ('252.6093155893536', 'Barbora'), ('259.63589743589745', 'Sloane'), ('262.30884808013354', 'Junri'), ('265.79487179487177', 'Annika'), ('267.03227571115974', 'Svetlana'), ('268.05945945945945', 'Dinah'), ('270.5896860986547', 'Coco'), ('272.08855291576674', 'Kai Chen'), ('273.57517899761336', 'Mona'), ('274.85317919075146', 'Renata'), ('275.6055900621118', 'Lindsay'), ('279.16438356164383', 'Dalma'), ('279.23336006415394', 'Arantxa'), ('279.78655282817505', 'Marion'), ('280.79959100204496', 'Michelle'), ('281.871335504886', 'Mariya'), ('283.63246554364474', 'Romina'), ('284.22813688212926', 'Luksika'), ('284.8326771653543', 'Liezel'), ('284.8724727838258', 'Aiko'), ('285.84388185654007', 'Irina Camelia'), ('287.71625344352617', 'Kiki'), ('288.74423480083857', 'Irena'), ('289.60283687943263', 'Regina'), ('290.0614657210402', 'Rika'), ('290.64452214452217', 'Madison'), ('291.4792817679558', 'Kathrin'), ('293.76942355889724', 'Catalina'), ('294.33209990749305', 'Kateryna'), ('296.2025641025641', 'Vitalia'), ('296.5792682926829', 'Sharon'), ('296.8219584569733', 'Greta'), ('297.39032258064515', 'Saisai'), ('298.1861898890259', 'Pauline'), ('300.3974358974359', 'Magda'), ('300.56296296296296', 'Marie Eve'), ('302.83268482490274', 'Danka'), ('302.84831460674155', 'Ajla'), ('304.4619771863118', 'Raluca'), ('305.19563522992985', 'Galina'), ('306.1794310722101', 'Maria Jose'), ('308.56833824975416', 'Angelique'), ('308.64912280701753', 'Kirsten'), ('309.35767790262173', 'Xinyun'), ('310.3405299313052', 'Johanna'), ('311.87854251012146', 'Cagla'), ('312.54158964879855', 'Stanislava'), ('312.7584269662921', 'Kelly S'), ('313.45625', 'Nao'), ('318.2867132867133', 'Yvonne'), ('318.69978858350953', 'Carly'), ('32.984862819299906', 'Venus'), ('321.23595505617976', 'Eri'), ('322.17758620689654', 'Yurika'), ('322.62611607142856', 'Lucie'), ('323.1388101983003', 'Reka Luca'), ('323.86176470588236', 'Maryna'), ('324.3720930232558', 'Elena'), ('324.63613231552165', 'Madalina'), ('325.5912596401028', 'Margalita'), ('325.6162790697674', 'Yafan'), ('331.3681818181818', 'Ashleigh'), ('331.93949394939494', 'Katalin'), ('334.7118644067797', 'Elise'), ('337.5292682926829', 'Mervana'), ('340.2890442890443', 'Sacha'), ('342.40130505709624', 'Caroline'), ('343.0985324947589', 'Tadeja'), ('343.22432701894314', 'Alberta'), ('343.25546975546973', 'Kristina'), ('343.2835365853659', 'Chanel'), ('345.51020408163265', 'Anna Karolina'), ('347.34943639291464', 'Estrella'), ('348.19338235294117', 'Jelena'), ('348.54794520547944', 'Kyoka'), ('348.6364892881825', 'Daniela'), ('349.54794520547944', 'Aryna'), ('353.44444444444446', 'Marketa'), ('355.7223168654174', 'Masa'), ('355.88102893890675', 'Virginie'), ('356.0105210420842', 'Lisa'), ('356.8219696969697', 'Corinna'), ('359.3764705882353', 'Chia Jung'), ('359.81081081081084', 'Maria Teresa'), ('361.0', 'Mandy'), ('365.50280484204313', 'Petra'), ('367.2274678111588', 'Anett'), ('368.14331210191085', 'Valentyna'), ('368.26881720430106', 'Sachie'), ('369.1620469083156', 'Jing Jing'), ('372.32502965599053', 'Melanie'), ('372.89398280802294', 'Shelby'), ('374.93926247288505', 'Noppawan'), ('376.47888446215137', 'Flavia'), ('376.7356115107914', 'Mihaela'), ('376.7617554858934', 'Nigina'), ('378.0163727959698', 'Casey'), ('380.5308641975309', 'Louisa'), ('380.609375', 'Danica'), ('381.2581602373887', 'Yanina'), ('381.5512572533849', 'Yi Fan'), ('382.6888217522659', 'Varvara'), ('382.82479784366575', 'Lyudmyla'), ('383.4714587737844', 'Qiang'), ('383.6413199426112', 'Claudine'), ('383.7832512315271', 'Dia'), ('383.9921465968586', 'Alexa'), ('384.87776983559684', 'Yuliya'), ('385.2651515151515', 'Chin Wei'), ('385.8135593220339', 'Patty'), ('386.7025316455696', 'Tamaryn'), ('387.5662100456621', 'Taylor'), ('387.66706161137444', 'Abigail'), ('387.73412112259973', 'Stefanie'), ('387.87113402061857', 'Liana Gabriela'), ('390.0', 'Conny'), ('390.2361111111111', 'Tessah'), ('391.3003629764065', 'Agnes'), ('391.4656290531777', 'Zi'), ('392.44444444444446', 'Elena Gabriela'), ('392.7313829787234', 'Bojana'), ('395.6680227827502', 'Nuria'), ('396.225', 'Georgina'), ('396.2893280632411', 'Ana'), ('397.83561643835617', 'Ayla'), ('398.3106546854942', 'Vanessa'), ('398.83478260869566', 'Tetyana'), ('400.8093385214008', 'Sachia'), ('401.0998263888889', 'Katarina'), ('402.36756756756756', 'Jamie'), ('402.49931972789113', 'Romana'), ('403.48784576697403', 'Alison'), ('403.8775981524249', 'Ying Ying'), ('403.935', 'Patricia Maria'), ('406.21702404158543', 'Samantha'), ('406.5511363636364', 'Cory Ann'), ('406.6258503401361', 'Jana'), ('406.9281767955801', 'Fangzhou'), ('407.029702970297', 'Mayo'), ('407.5463976945245', 'Nadia'), ('410.8463541666667', 'Mailen'), ('411.5068493150685', 'Usue Maitane'), ('411.70779777206513', 'Carla'), ('412.74466019417474', 'Ayumi'), ('414.4332292750607', 'Andrea'), ('414.66339869281046', 'Evgenia'), ('415.7', 'Kathinka'), ('415.9078341013825', 'Amra'), ('416.3666666666667', 'Carina'), ('417.44323483670297', 'Heidi'), ('417.8053097345133', 'Susanne'), ('418.2566137566138', 'Yi Miao'), ('418.39748953974896', 'Elitsa'), ('418.81925343811395', 'Ling'), ('419.1633466135458', 'Denisa'), ('419.32988047808766', 'Marta'), ('421.44179894179894', 'Shuko'), ('421.6573033707865', 'Elina'), ('424.64521739130436', 'Andreja'), ('425.82394366197184', 'Tina'), ('426.3886462882096', 'Su Jeong'), ('426.6002565198803', 'Maria'), ('427.0', 'Ronit'), ('428.5496828752643', 'Anna Giulia'), ('430.0872542522642', 'Anastasia'), ('431.19607843137254', 'Robin'), ('431.3144424131627', 'Ye Ra'), ('432.6511627906977', 'Olga'), ('432.6949152542373', 'Anhelina'), ('434.68', 'Danielle Rose'), ('435.1470588235294', 'Ons'), ('436.66881028938906', 'Nudnida'), ('436.84339509862525', 'Irina'), ('437.05298013245033', 'Francoise'), ('437.11396648044695', 'Mathilde'), ('437.4119658119658', 'Tetiana'), ('437.73858921161826', 'Chiaki'), ('437.86915887850466', 'Jasmine'), ('438.4245810055866', 'Maiko'), ('439.5747863247863', 'Cristina Andreea'), ('439.81414868105514', 'Ivana'), ('439.87772357723577', 'Stephanie'), ('440.35214446952597', 'Wen Hsin'), ('441.9846743295019', 'Aliaksandra'), ('442.0344827586207', 'Evgeniya'), ('443.0228531855956', 'Maria Fernanda'), ('443.45754716981133', 'Claire'), ('443.6296006264683', 'Magdalena'), ('443.76148409893995', 'Kyra'), ('443.8467908902692', 'Kristyna'), ('444.96190476190475', 'Yue Yue'), ('444.9760935910478', 'Victoria'), ('445.18918918918916', 'Kristie'), ('446.7231833910035', 'Olivia'), ('447.93283582089555', 'Miyabi'), ('450.22998544395927', 'Aleksandra'), ('450.4642082429501', 'Varatchaya'), ('451.33577981651376', 'Lenka'), ('451.5810397553517', 'Florencia'), ('451.8657487091222', 'Sheng Nan'), ('451.92875448487956', 'Zuzana'), ('452.625', 'Ilona'), ('453.01556420233464', 'Alisa'), ('453.43392070484583', 'Asia'), ('454.06233062330625', 'Grace'), ('454.9920529801324', 'Christina'), ('457.4050279329609', 'Beatriz'), ('458.86633663366337', 'Ysaline'), ('459.29286608260327', 'Katarzyna'), ('460.8932038834951', 'An Sophie'), ('461.06702898550725', 'Teliana'), ('462.4270462633452', 'Monique'), ('464.1367781155015', 'Chi Chi'), ('464.95631067961165', 'Darija'), ('465.24962852897477', 'Pemra'), ('467.24657534246575', 'Xiaodi'), ('471.5439093484419', 'Evelyn'), ('471.8367290748899', 'Ekaterina'), ('472.338003502627', 'Karin'), ('475.2979683972912', 'Tara'), ('477.62886597938143', 'Eugenie'), ('478.30369515011546', 'Polona'), ('479.51738241308794', 'Roxane'), ('479.5530612244898', 'Ayu Fani'), ('479.8914728682171', 'Valentini'), ('480.646017699115', 'Xinyu'), ('481.3229166666667', 'Leticia'), ('482.26169844020797', 'Anais'), ('482.36648501362396', 'Ksenia'), ('482.43243243243245', 'Ioana Diana'), ('483.77464788732397', 'Destanee'), ('483.97225572979494', 'Naomi'), ('484.9442231075697', 'Lauren'), ('485.35135135135135', 'Yulia'), ('485.40168539325845', 'Myrtille'), ('485.46875', 'Nicoleta Catalina'), ('485.9559748427673', 'Indy'), ('486.6092544987147', 'Maria Joao'), ('487.6268656716418', 'Raveena'), ('488.76107382550333', 'Kumiko'), ('488.7671232876712', 'Xu Liu'), ('489.27513227513225', 'Teodora'), ('489.5294964028777', 'Iryna'), ('489.5307517084282', 'Elizaveta'), ('489.65909090909093', 'Risa'), ('490.4144736842105', 'Aranza'), ('491.8507295173962', 'Katerina'), ('492.6608695652174', 'Katy'), ('492.8915187376726', 'Jin A'), ('493.98205383848455', 'Akiko'), ('494.6111111111111', 'Remi'), ('495.22641509433964', 'Riko'), ('496.7156398104265', 'Ana Sofia'), ('496.9431818181818', 'Alyona'), ('497.42124542124543', 'Lin'), ('499.4127634660422', 'Nicole'), ('500.29483037156706', 'Eva'), ('500.688679245283', 'Shiho'), ('501.0619469026549', 'Jil Belen'), ('501.44444444444446', 'Olesya'), ('501.5860215053763', 'Jesika'), ('504.4145867098865', 'Laura'), ('506.39344262295083', 'Ulrikke'), ('507.4', 'Viktorija'), ('508.340206185567', 'Ellie'), ('508.4679802955665', 'Paula Cristina'), ('509.80945757997216', 'Sara'), ('512.1515151515151', 'Haruna'), ('512.3787128712871', 'Julie'), ('514.1732026143791', 'So Jung'), ('514.586319218241', 'Peangtarn'), ('514.7174515235457', 'Lesley'), ('515.3191489361702', 'Nicha'), ('516.1982942430703', 'Laura Ioana'), ('516.6615384615385', 'Makoto'), ('520.9397993311037', 'Doroteja'), ('521.5358361774744', 'Justine'), ('522.6561403508772', 'Kai Lin'), ('522.984693877551', 'Krista'), ('523.2788844621514', 'Miharu'), ('524.7444668008048', 'Chen'), ('524.9192825112108', 'Ana Clara'), ('525.9552572706936', 'Dalila'), ('526.2644836272041', 'Gail'), ('526.3535641547861', 'Sofia'), ('526.3698630136986', 'Mari'), ('528.8673050615595', 'Nina'), ('529.583908045977', 'Sally'), ('529.7777777777778', 'Jia Qi'), ('531.1829405162739', 'Darya'), ('532.6881807180315', 'Marina'), ('533.433770014556', 'Kyung Mi'), ('533.5940594059406', 'Georgia'), ('533.9586374695864', 'Chieh Yu'), ('533.9652351738241', 'Oksana'), ('534.890243902439', 'Hiroko'), ('537.577922077922', 'Nungnadda'), ('539.6164383561644', 'Raluca Georgiana'), ('539.7944621938232', 'Camila'), ('541.1570881226054', 'Sofiya'), ('541.273631840796', 'Bernarda'), ('541.952380952381', 'Montserrat'), ('542.2382851445662', 'Simona'), ('542.7168141592921', 'Nanuli'), ('543.031185031185', 'Nathalia'), ('543.968253968254', 'Hanyu'), ('544.1627906976744', 'Freya'), ('544.2636655948553', 'Marija'), ('544.5041866028708', 'Erika'), ('545.449074074074', 'Yuxuan'), ('546.5551763367463', 'Sarah'), ('547.277108433735', 'Greetje'), ('547.7037037037037', 'Natsumi'), ('550.1941544885177', 'Bibiane'), ('550.9545454545455', 'Dea'), ('551.5304659498208', 'Deniz'), ('551.5557158312297', 'Anna'), ('552.4653465346535', 'Ayaka'), ('553.9434782608696', 'Ekaterine'), ('554.3953934740883', 'Mi'), ('554.5290322580645', 'Nastassja'), ('554.5376344086021', 'Cristiana'), ('555.3384615384615', 'Bunyawi'), ('555.6572164948453', 'Vojislava'), ('556.0428051001821', 'Mariana'), ('556.2303370786517', 'Azra'), ('556.7936681222708', 'Jennifer'), ('557.241418764302', 'Tereza'), ('557.9232456140351', 'Allie'), ('558.0162601626016', 'Paula'), ('560.6778190830236', 'Arina'), ('562.8450704225352', 'Jaimee'), ('563.964505613908', 'Sandra'), ('564.1434426229508', 'Carol'), ('565.8211508553654', 'Silvia'), ('566.4943396226415', 'Natela'), ('566.7873931623932', 'Isabella'), ('566.9148936170212', 'Viktoria'), ('567.0507399577167', 'Korina'), ('567.8518518518518', 'Gioia'), ('567.9464544138929', 'Liga'), ('568.2547169811321', 'Kamila'), ('568.3374316939891', 'Rebecca'), ('569.1904761904761', 'Fanny'), ('569.2647632558965', 'Alexandra'), ('570.2723004694835', 'Constance'), ('570.534951862704', 'Francesca'), ('572.2654545454545', 'So Ra'), ('572.8059701492538', 'Patricia'), ('573.5197368421053', 'Na Ri'), ('573.6708333333333', 'Storm'), ('573.8729603729604', 'Rushmi'), ('574.8723404255319', 'Harmony'), ('574.9808362369338', 'Lina'), ('575.4626436781609', 'Chang'), ('576.4307692307692', 'Dayana'), ('576.9', 'Klaartje'), ('576.9173467252564', 'Julia'), ('577.9677419354839', 'Natalie'), ('578.07962529274', 'Aleksandrina'), ('578.1381578947369', 'Irina Maria'), ('578.5', 'Jiaxi'), ('579.2153846153847', 'Irene'), ('579.437984496124', 'Vanesa'), ('579.5214723926381', 'Elixane'), ('583.1686746987951', 'Kayla'), ('583.530303030303', 'Ching Wen'), ('583.9347826086956', 'Annalisa'), ('584.359375', 'Giuliana'), ('585.093851132686', 'Emily'), ('585.2589641434263', 'Wing Yau Venise'), ('585.8517745302714', 'Justyna'), ('586.2250489236791', 'Miki'), ('586.865', 'Ya Hsuan'), ('586.9412296564195', 'Karolina'), ('589.1298076923077', 'Antonia'), ('591.2544731610338', 'Audrey'), ('591.3809523809524', 'Ivonne'), ('592.5990783410139', 'Jan'), ('593.1506849315068', 'Mizuno'), ('593.1772853185596', 'Nastja'), ('593.9759036144578', 'Chayenne'), ('594.9036697247707', 'Miyu'), ('594.9436936936937', 'Lena'), ('595.3291666666667', 'Vlada'), ('597.6981132075472', 'Ayano'), ('598.2655172413793', 'Ran'), ('600.6881091617934', 'Sophie'), ('601.906914893617', 'Tammi'), ('601.9846625766871', 'Jovana'), ('604.15', 'Alexis'), ('606.1467576791808', 'Kinnie'), ('606.7211740041929', 'Ganna'), ('607.2810218978102', 'Vivien'), ('607.3360995850622', 'Macall'), ('608.1309090909091', 'Yuuki'), ('608.7791798107255', 'Na Lae'), ('609.90625', 'Chantal'), ('611.0757575757576', 'Sunam'), ('611.35', 'Aliona'), ('611.4060995184591', 'Margarita'), ('612.0185185185185', 'Fang Ying'), ('612.736', 'Lavinia'), ('613.195652173913', 'Aminat'), ('613.5330490405117', 'Vasilisa'), ('614.0434782608696', 'Tamara'), ('614.9346733668342', 'Tena'), ('615.1506849315068', 'Dhruthi'), ('615.2230215827338', 'Chinami'), ('617.0379241516966', 'Misa'), ('617.3333333333334', 'Ao'), ('617.4615384615385', 'Nathaly'), ('617.4935251798561', 'Estelle'), ('618.4714285714285', 'Ankita'), ('618.6923076923077', 'Kimberly'), ('619.4154929577464', 'Pernilla'), ('619.6814159292036', 'Adriana'), ('619.9064748201439', 'Mayya'), ('620.4120171673819', 'Clothilde'), ('620.6746411483253', 'Eugeniya'), ('620.9404580152672', 'Katie'), ('622.7673469387755', 'Manon'), ('624.6089494163424', 'Jacqueline'), ('625.013698630137', 'Berfu'), ('626.441935483871', 'Milana'), ('627.12', 'Adrijana'), ('627.7027027027027', 'Indire'), ('627.7777777777778', 'Zhanlan'), ('628.075', 'Miriam Bianca'), ('629.0081967213115', 'Zhaoxuan'), ('629.6443987667009', 'Daria'), ('630.7953529937444', 'Polina'), ('631.8181818181819', 'Nadja'), ('632.2824427480916', 'Shilin'), ('632.3150684931506', 'Snehadevi S'), ('633.027027027027', 'Jasmin'), ('633.5454545454545', 'Kaja'), ('633.9770491803279', 'Quirine'), ('634.3620689655172', 'Natalija'), ('634.7950310559006', 'Melis'), ('635.346516007533', 'Kanae'), ('635.7449168207024', 'Sung Hee'), ('637.4607407407408', 'Nadiya'), ('638.6666666666666', 'Rianna'), ('638.88', 'Ashley'), ('640.8727272727273', 'Sofya'), ('641.046992481203', 'Emma'), ('642.1811989100818', 'Jasmina'), ('642.9487179487179', 'Ylona Georgiana'), ('643.422641509434', 'Keren'), ('643.616049382716', 'Cristina'), ('643.6939163498099', 'Lara'), ('643.9216101694915', 'Daniella'), ('645.2279792746114', 'Carolin'), ('646.0441176470588', 'Ioana Loredana'), ('647.5205479452055', 'Britt'), ('647.922077922078', 'Fernanda'), ('648.2984054669704', 'Fatma'), ('649.5154639175257', 'Sherazad'), ('650.1206896551724', 'Theo'), ('650.1367521367522', 'Chalena'), ('650.6240276577355', 'Amanda'), ('651.4246575342465', 'Riya'), ('652.1984732824427', 'Elyne'), ('652.917808219178', 'Karman'), ('653.2805383022775', 'Bianca'), ('653.5070422535211', 'Prarthana G'), ('654.3773657782928', 'Diana'), ('655.7464059804486', 'Jessica'), ('655.7828348504552', 'Ipek'), ('656.2851711026616', 'Eduarda'), ('656.2932551319648', 'Basak'), ('656.8787276341948', 'Yi Jing'), ('657.0171919770773', 'Marcella'), ('657.3816155988858', 'Patrycja'), ('657.8934169278997', 'Lena Marie'), ('658.5074074074074', 'Arabela'), ('659.2103004291846', 'Vivienne'), ('659.3055555555555', 'Cindy'), ('660.8924731182796', 'Ola'), ('661.2222222222222', 'Xenia'), ('661.3972602739726', 'Ying'), ('661.8474576271186', 'Valeria'), ('661.9589041095891', 'Kajsa'), ('662.1182795698925', 'Mariam'), ('665.686684073107', 'Despina'), ('665.8219178082192', 'Sadafmoh'), ('666.1496062992126', 'Lizette'), ('666.2853403141361', 'Natasa'), ('668.2581196581197', 'Piia'), ('669.2982456140351', 'Dijana'), ('669.448275862069', 'Ria'), ('669.8542372881356', 'Romana Caroline'), ('670.9108527131783', 'Vivian'), ('671.2584369449378', 'Anastasiya'), ('672.2258064516129', 'Raluca Elena'), ('672.730407523511', 'Emelyn'), ('673.6507936507936', 'Lisanne'), ('673.6635071090047', 'Hilda'), ('673.7509157509157', 'Fatima'), ('673.9809523809524', 'Pei Chi'), ('674.9672514619883', 'Karen'), ('675.2445414847161', 'Chloe'), ('675.4124293785311', 'Priscilla'), ('676.1090909090909', 'Rebeka'), ('676.90589198036', 'Michaela'), ('677.4458598726114', 'Laetitia'), ('680.1050228310502', 'Hao Chen'), ('680.1724137931035', 'Lou'), ('680.677700348432', 'Katharina'), ('681.7736842105263', 'Belinda'), ('681.9417582417583', 'Tatiana'), ('682.0972222222222', 'Emina'), ('682.2005532503458', 'Sabina'), ('682.961038961039', 'Jia Jing'), ('683.1081081081081', 'Panna'), ('684.4892086330935', 'Josephine'), ('684.8497652582159', 'Agustina'), ('686.2234432234433', 'Angelica'), ('686.3047619047619', 'Oana Georgeta'), ('686.6470588235294', 'Elena Teodora'), ('687.0229885057471', 'Ines'), ('687.25', 'Mai'), ('687.3120567375887', 'Kim'), ('689.891129032258', 'Mana'), ('691.9934640522875', 'Sviatlana'), ('692.1515151515151', 'Macarena'), ('692.390625', 'Chun Mei'), ('693.6215943491422', 'Giulia'), ('694.0659898477157', 'Agnese'), ('694.2', 'Shanshan'), ('694.341935483871', 'Harriet'), ('694.4808743169399', 'Xin'), ('695.574074074074', 'Marie'), ('696.2878787878788', 'Tess'), ('696.4126984126984', 'Vanda'), ('696.4752475247525', 'Helene'), ('696.7697332607512', 'Gabriela'), ('696.952380952381', 'Bianka'), ('696.9606060606061', 'Karina Ildor'), ('698.7567567567568', 'Suzy'), ('698.8285714285714', 'Yuki Kristina'), ('699.7864583333334', 'Janina'), ('700.7644444444444', 'Raquel'), ('701.4009009009009', 'Wan Ting'), ('702.1784386617101', 'Yasmin'), ('703.1372549019608', 'Sanaz'), ('704.9618138424821', 'Akari'), ('705.4688346883469', 'Benedetta'), ('705.4716981132076', 'Emilie'), ('705.5625', 'Iga'), ('705.8493150684932', 'Qiu Yu'), ('707.1467889908257', 'Julieta Lara'), ('708.618398637138', 'Celine'), ('709.4247787610619', 'Caitlin'), ('709.625', 'Zarah'), ('710.3822682786414', 'Alice'), ('710.3972602739726', 'Petia'), ('710.9617224880383', 'Aki'), ('712.2780373831775', 'Ximena'), ('714.8653846153846', 'Xi Yao'), ('716.3150684931506', 'Gozal'), ('717.7932330827068', 'Bermet'), ('718.047619047619', 'Michika'), ('718.5202702702703', 'Alexia'), ('718.725321888412', 'Carolina'), ('719.3061224489796', 'Chelsey'), ('720.132932166302', 'Natalia'), ('720.1431870669746', 'Ani'), ('720.6428571428571', 'Cristina Madalina'), ('720.7490039840637', 'Daiana'), ('721.14', 'Jillian'), ('721.1643835616438', 'Mirabelle'), ('722.5087719298245', 'Lilla'), ('722.6986301369863', 'Dasha'), ('722.7286493034525', 'Federica'), ('723.484076433121', 'Nikola'), ('724.5', 'Sofie'), ('724.8712871287129', 'Yevgeniya'), ('724.9178743961353', 'Isabel'), ('725.3893333333333', 'Anja'), ('725.5322195704057', 'Yuliana'), ('726.1737089201878', 'Hua Chen'), ('726.1852387843704', 'Veronica'), ('726.2657657657658', 'Andreea Roxana'), ('728.5', 'Ahsha'), ('728.7443609022556', 'Sina'), ('728.7630208333334', 'Oceane'), ('729.0117647058823', 'Vendula'), ('729.0671936758894', 'Hyun Hui'), ('729.1047904191616', 'Poojashree'), ('730.3831168831168', 'Marianna'), ('732.1666666666666', 'Julyette Maria Josephine'), ('732.4260679079956', 'Maya'), ('732.7386018237082', 'Iva'), ('733.1351351351351', 'Erina'), ('734.0', 'Magali'), ('734.6018957345972', 'Veronika'), ('736.1650485436893', 'Di'), ('736.2288557213931', 'Viktoriya'), ('736.4809523809524', 'Megan'), ('736.9747747747748', 'Elizabeth'), ('737.7547169811321', 'Xiaoxi'), ('737.862676056338', 'Pia'), ('739.04802259887', 'Jade'), ('739.7727272727273', 'Ting Fei'), ('740.0214504596527', 'Yana'), ('740.5361842105264', 'Prerna'), ('740.5879828326181', 'Pilar'), ('743.1953125', 'Tjasa'), ('743.6062176165804', 'Sarah Rebecca'), ('744.0', 'Caty'), ('744.7453250222618', 'Danielle'), ('745.421052631579', 'Neda'), ('745.433962264151', 'Maia'), ('746.0962962962963', 'Despoina'), ('746.4803493449782', 'Yurina'), ('747.3172413793103', 'Tayisiya'), ('747.3695652173913', 'Saska'), ('747.4375', 'Amandine'), ('748.0', 'Maddison'), ('748.6622691292876', 'Ingrid Esperanza'), ('748.7238095238096', 'Jaqueline Adina'), ('748.8250591016548', 'Yuka'), ('749.3582089552239', 'Chiraz'), ('750.3207810320781', 'Angelina'), ('750.9460093896714', 'Ellen'), ('751.2668918918919', 'Valentine'), ('751.8679119412942', 'Martina'), ('753.2253164556962', 'Nicola'), ('753.8346456692914', 'Margot'), ('755.4649681528663', 'Cecilia'), ('755.5813953488372', 'Peggy'), ('756.2549019607843', 'Kaitlyn'), ('756.3141592920354', 'Lucy'), ('757.2253521126761', 'Cornelia'), ('758.06', 'Lisa Maria'), ('758.1714285714286', 'Romy'), ('758.5342960288808', 'Dejana'), ('759.2894995093228', 'Stefania'), ('759.5352697095435', 'Gaia'), ('760.4920634920635', 'Jaeda'), ('760.639175257732', 'Anna Arina'), ('762.1578947368421', 'Nidhi'), ('762.4081632653061', 'Kim Alice'), ('762.7606382978723', 'Anne Liz'), ('763.1014492753624', 'Georgia Andreea'), ('763.888198757764', 'Amy'), ('763.8900651465798', 'Barbara'), ('764.6785714285714', 'Deborah'), ('765.1395348837209', 'Kamonwan'), ('765.3777777777777', 'Zoe'), ('766.2549019607843', 'Ingrid'), ('766.4794520547945', 'Charlene'), ('767.4963503649635', 'Naiktha'), ('767.7730496453901', 'Jeannine'), ('768.560975609756', 'Yan'), ('770.8472222222222', 'Emi'), ('772.2402912621359', 'Kazusa'), ('772.2857142857143', 'Genevieve'), ('772.3186813186813', 'Szabina'), ('772.6981132075472', 'Momoko'), ('772.8571428571429', 'Akilah'), ('773.5666666666667', 'Leolia'), ('774.5654761904761', 'Marine'), ('774.64', 'Marcela'), ('774.6837606837607', 'Haruka'), ('775.2734375', 'Albina'), ('775.7269624573379', 'Rishika'), ('778.1648648648649', 'Nicolette'), ('780.7905027932961', 'Klaudia'), ('781.3218390804598', 'Etsuko'), ('781.6993464052288', 'Isabelle'), ('783.1711711711712', 'Marrit'), ('783.8288043478261', 'Gracia'), ('784.0465949820789', 'Seung Yeon'), ('784.8009049773756', 'Makiho'), ('785.0707482993197', 'Beatrice'), ('787.0', 'Maegan'), ('787.5416666666666', 'Ludmilla'), ('787.7645348837209', 'Sylwia'), ('788.0384615384615', 'Erica'), ('788.2622950819672', 'Mira'), ('789.2857142857143', 'Chengyiyi'), ('789.6113989637306', 'Ting Jr'), ('790.1538461538462', 'Adeliya'), ('790.46875', 'Asiya'), ('791.0756207674943', 'Yi'), ('791.1240506329113', 'Syna'), ('791.2352941176471', 'Zeel'), ('792.1927710843373', 'Sri Vaishnavi'), ('792.5', 'Gabriella'), ('794.4931506849315', 'Jiahui'), ('794.5416666666666', 'Zuzanna'), ('794.7118644067797', 'Gloria'), ('795.4736842105264', 'Pranjala'), ('795.6201232032854', 'Rocio'), ('797.2128378378378', 'Lidziya'), ('797.383606557377', 'Guadalupe'), ('798.3181818181819', 'Kylie'), ('799.0552486187845', 'Ionela Andreea'), ('799.0650406504066', 'Carolina Meligeni Rodrigues'), ('799.1332586786115', 'Yumi'), ('799.1875', 'Matilda'), ('799.8668224299065', 'Valeriya'), ('799.9940828402367', 'Kanami'), ('801.6712328767123', 'Yixuan'), ('801.6850649350649', 'Camilla'), ('801.6933333333334', 'Dalia'), ('801.84375', 'Andreea Amalia'), ('802.7222222222222', 'Thai Sa Grana'), ('803.3904761904762', 'Ashvarya'), ('803.7139479905437', 'Camelia Elena'), ('803.8666666666667', 'Domenica'), ('803.9764705882353', 'Amina'), ('804.6277056277056', 'Brooke'), ('804.873831775701', 'Kelly'), ('805.7028985507246', 'Dana'), ('806.2648401826484', 'Valerie'), ('807.616', 'Karla'), ('807.7222222222222', 'Kennedy'), ('808.4545454545455', 'Abbie'), ('808.5096774193548', 'Rutuja'), ('809.697247706422', 'Dianne'), ('810.6666666666666', 'Tinatin'), ('812.4581005586592', 'Sun Jung'), ('812.6', 'Ju Eun'), ('812.85', 'Meiling'), ('813.1351351351351', 'Giada'), ('813.1357142857142', 'Sowjanya'), ('814.4171122994652', 'Xiao'), ('818.2043795620438', 'Jessika'), ('819.3400503778338', 'Ema'), ('819.8425531914894', 'Min Hwa'), ('82.13112391930835', 'Na'), ('820.4563492063492', 'Alena'), ('820.59375', 'Luisa Marie'), ('822.3459915611814', 'Alix'), ('823.0909090909091', 'Ashling'), ('823.6306306306307', 'Clelia'), ('823.8770833333333', 'Vladimira'), ('823.9789029535865', 'Ji Hee'), ('824.3936170212766', 'Yukun'), ('825.039603960396', 'Malin'), ('825.7291666666666', 'Nazari'), ('825.972972972973', 'Leonie'), ('826.0238095238095', 'Komola'), ('826.1388888888889', 'Qianhui'), ('826.2619047619048', 'Claudia'), ('826.6486486486486', 'Phillis'), ('828.0675675675676', 'Nagi'), ('829.5625', 'Astra'), ('832.7818181818182', 'Corina'), ('832.9585365853659', 'Sakiko'), ('833.5061082024433', 'Ji Young'), ('834.1005025125628', 'Bernice'), ('834.2066115702479', 'Borislava'), ('835.1132075471698', 'Constanza'), ('836.6804511278195', 'Katherine'), ('837.7730496453901', 'Kristy'), ('838.1780821917808', 'Manca'), ('838.8065217391304', 'Tomoko'), ('839.4923664122138', 'Ofri'), ('840.0776699029126', 'Saray'), ('841.0514705882352', 'Nives'), ('841.4051724137931', 'Christine'), ('841.7167381974249', 'Tori'), ('841.8387096774194', 'Stamatia'), ('842.1553398058253', 'Carmen Raluca'), ('842.7045454545455', 'Eetee'), ('842.8446601941747', 'Ana Bianca'), ('843.6428571428571', 'Mirjam'), ('843.7260273972603', 'Alba'), ('843.9007633587786', 'Nicky'), ('844.0692307692308', 'Ulyana'), ('844.203007518797', 'Svenja'), ('844.3856812933026', 'Hae Sung'), ('844.7460317460317', 'Kotomi'), ('844.9310344827586', 'Yoon Young'), ('845.375', 'Imane Maelle'), ('845.740638002774', 'Lucia'), ('845.986301369863', 'Lucrezia'), ('846.2727272727273', 'Ludmila'), ('846.9154228855722', 'Kimberley'), ('847.0941176470589', 'Ilze'), ('848.4418604651163', 'Xiaorong'), ('848.9908952959029', 'Chihiro'), ('850.9791666666666', 'Anhzelika'), ('851.1224489795918', 'Marta Huqi'), ('851.5633802816901', 'Sharmada'), ('853.3908045977012', 'Fiona'), ('854.3170731707318', 'Brianna'), ('855.813627254509', 'Alicja'), ('856.0782608695653', 'Vladyslava'), ('857.1692307692308', 'Yukina'), ('857.9508196721312', 'Sang Hee'), ('858.4107142857143', 'Lea'), ('858.9173789173789', 'Seo Kyung'), ('859.2706766917294', 'Rachael'), ('859.3059701492538', 'Anamika'), ('859.8103448275862', 'Vaszilisza'), ('859.8644067796611', 'Luca'), ('860.8104265402843', 'Hirono'), ('861.5050505050505', 'Maria Constanza De Las Mercedes'), ('861.5102040816327', 'Janneke'), ('863.3225806451613', 'Joana'), ('863.5507246376811', 'Patcharin'), ('863.7826086956521', 'Desirae'), ('864.1538461538462', 'Shuo'), ('866.0454545454545', 'Oyku'), ('866.0693069306931', 'Min'), ('866.1075949367089', 'Iris'), ('867.5288461538462', 'Zalina'), ('868.2191780821918', 'Ilka'), ('868.6521739130435', 'Nadezda'), ('868.7624113475177', 'Paula Catalina'), ('868.8904109589041', 'Karine'), ('869.1666666666666', 'Mary'), ('869.1702127659574', 'Sylvia'), ('869.3571428571429', 'Ingrid Alexandra'), ('870.9007633587786', 'Liz Tatiane'), ('871.0790513833992', 'Kaori'), ('871.109375', 'Ivania'), ('871.6926829268293', 'Alona'), ('872.0', 'Ivone'), ('872.0930232558139', 'Breaunna'), ('873.6229508196722', 'Karoline'), ('874.8181818181819', 'Chisa'), ('875.0', 'Mahak'), ('875.9277108433735', 'Sarah Beth'), ('875.9772727272727', 'Clemence'), ('876.1730769230769', 'Eliessa'), ('876.7428571428571', 'Yuki'), ('878.0138888888889', 'Bhuvana'), ('878.1666666666666', 'Tornado Alicia'), ('878.3939393939394', 'Andrea Renee'), ('878.4606741573034', 'Ziyue'), ('878.6666666666666', 'Nam Yeon'), ('880.6527777777778', 'Morgane'), ('882.1071428571429', 'Katharine'), ('883.0777142857143', 'Natasha'), ('883.2352941176471', 'Quinn'), ('883.6090909090909', 'Karina'), ('883.7787610619469', 'Noelle'), ('885.0976744186047', 'Sonja'), ('885.7495107632094', 'Luciana'), ('886.1407407407407', 'Whitney'), ('887.2875', 'Liubov'), ('887.4545454545455', 'Lesedi Sheya'), ('887.502487562189', 'Kyle'), ('888.0055096418732', 'Hulya'), ('888.2213114754098', 'Elisabeth'), ('888.7272727272727', 'Satsuki'), ('889.8028169014085', 'Seone'), ('890.4455445544554', 'Nan Nan'), ('890.6351351351351', 'Carmen'), ('890.8728448275862', 'Ai'), ('891.2340425531914', 'Yuanyi'), ('891.6309523809524', 'Mayar'), ('892.3561643835617', 'Ylena'), ('894.3846153846154', 'Varunya'), ('896.7413793103449', 'Maja'), ('897.0974358974358', 'Manisha'), ('897.4873949579832', 'Yelena'), ('897.6951219512196', 'Shweta'), ('899.9150326797386', 'Libby'), ('900.75', 'Merel'), ('901.3333333333334', 'Kaitlin'), ('901.8717948717949', 'Ayan'), ('902.1470588235294', 'Jenny'), ('903.1666666666666', 'Francisca'), ('903.4289156626506', 'Oleksandra'), ('903.5769230769231', 'Karyn'), ('904.6538461538462', 'Blanca'), ('905.6324786324786', 'Sabrina'), ('907.3557312252965', 'Lu'), ('907.4', 'Ann'), ('908.156862745098', 'Lee'), ('908.3962264150944', 'Mara'), ('909.2', 'Jada'), ('910.396694214876', 'Katherine Gabriela'), ('910.5714285714286', 'Laura D'), ('911.7241379310345', 'Eudice Wong'), ('911.7619047619048', 'Suellen'), ('912.1077844311377', 'Tatsiana'), ('912.120218579235', 'Miriam'), ('912.1523178807947', 'Ai Wen'), ('912.71875', 'Blair'), ('913.4380165289256', 'Nika'), ('913.7272727272727', 'Draginja'), ('914.5321100917431', 'Hayley'), ('914.8607594936709', 'Hongrui'), ('915.5892857142857', 'Pavla'), ('915.5932203389831', 'Aymet'), ('916.559633027523', 'Zsofia'), ('916.7115384615385', 'Anna Katalina'), ('917.0', 'Brienne'), ('918.0769230769231', 'Maria Lourdes'), ('919.6147540983607', 'Ineke'), ('920.1276595744681', 'Dabin'), ('921.3333333333334', 'Valentina'), ('921.6216216216217', 'Nora'), ('922.2255639097745', 'Anaeve'), ('924.2782608695652', 'Kana'), ('924.8818897637796', 'Shakhlo'), ('924.9325842696629', 'Josepha'), ('925.0028776978418', 'Alina'), ('925.4230769230769', 'Jodie Anna'), ('925.9865771812081', 'Ho Ching'), ('927.0350877192982', 'Kassandra'), ('927.7647058823529', 'Charlotte'), ('928.3333333333334', 'Karola Patricia'), ('929.0599369085173', 'Dunja'), ('929.4388489208633', 'Napatsakorn'), ('929.4398496240601', 'Linda'), ('929.6928104575163', 'Natia'), ('930.7027027027027', 'Naima'), ('931.025641025641', 'Joanna'), ('932.8940397350993', 'Samira'), ('935.081081081081', 'Zoe Gwen'), ('935.2322946175638', 'Shivika'), ('936.3392857142857', 'Nozomi'), ('937.7878787878788', 'Wushuang'), ('937.7945205479452', 'Plobrung'), ('939.746835443038', 'Steffi'), ('940.2125603864735', 'Agni'), ('941.4724409448819', 'Catherine'), ('942.7969696969697', 'Erin'), ('943.421052631579', 'Qianqian'), ('943.5432098765432', 'Vladica'), ('943.7397959183673', 'Ainhoa'), ('943.7716535433071', 'Emmanuelle'), ('944.2432432432432', 'Sultan'), ('945.625', 'Alexandria'), ('946.8846153846154', 'Michele Alexandra'), ('946.8934426229508', 'Marlies'), ('947.3333333333334', 'Malou'), ('947.472972972973', 'Anita'), ('949.1239316239316', 'Denise'), ('949.6575342465753', 'Franziska'), ('949.7916666666666', 'Sirui'), ('949.7944444444445', 'Csilla'), ('949.8059701492538', 'Tamachan'), ('95.03465982028241', 'Kimiko'), ('950.0277777777778', 'Eleonora'), ('950.6263736263736', 'Miriana'), ('950.8813559322034', 'Chia Hsien'), ('950.9090909090909', 'Ester'), ('951.0075757575758', 'Veronica M'), ('951.4146341463414', 'Ariadna'), ('951.9764150943396', 'Alice Andrada'), ('952.4411764705883', 'Lynn'), ('952.5619834710744', 'Brynn'), ('954.046875', 'India'), ('954.6', 'Xiyu'), ('955.7833333333333', 'Radina'), ('956.0333333333333', 'Andreea'), ('956.5754716981132', 'Anastasia Evgenyevna'), ('957.2', 'Hanna'), ('957.9512195121952', 'Guiomar'), ('958.0955414012739', 'Madrie'), ('958.1327800829876', 'Verena'), ('959.6981132075472', 'Linnea'), ('960.4941860465116', 'Giorgia'), ('960.6770186335403', 'Agata'), ('961.2631578947369', 'Ana Victoria'), ('961.876923076923', 'Yuenu'), ('962.0188679245283', 'Natella'), ('962.5', 'Ida'), ('962.8536585365854', 'Kanika'), ('963.5', 'Terri'), ('964.1224489795918', 'Clementina Eugenia'), ('965.0', 'Rosa'), ('965.5343511450382', 'Noel'), ('966.0540540540541', 'Estela'), ('966.0588235294117', 'Shuyue'), ('966.4671052631579', 'Viktoryia'), ('967.2978723404256', 'Claudia Antonia'), ('967.6708860759494', 'Jessy'), ('967.9034090909091', 'Shao Yuan'), ('969.5882352941177', 'Anouk'), ('969.6588235294117', 'Taisiya'), ('969.8181818181819', 'Anette'), ('970.3620689655172', 'Andie K'), ('970.9846153846154', 'Brandy'), ('971.2865853658536', 'Beatriz Maria'), ('972.75', 'Lorraine M'), ('973.8617021276596', 'Yeong Won'), ('973.8717948717949', 'Maxine'), ('974.2702702702703', 'Lusine'), ('974.8', 'Simran Kaur'), ('975.3484848484849', 'Sinead'), ('975.6271186440678', 'Ksenija'), ('977.4539007092199', 'Daneika'), ('977.9640591966173', 'Chiara'), ('978.0229885057471', 'Khristina'), ('978.2708333333334', 'Eliza'), ('978.7321428571429', 'Ornella'), ('980.2232142857143', 'Ioana'), ('980.3333333333334', 'Ena'), ('980.575', 'Monika'), ('980.6666666666666', 'Suzuho'), ('980.9076923076923', 'Siqi'), ('981.7517730496454', 'Luisa'), ('981.9814814814815', 'Elizaveta Anna'), ('982.6666666666666', 'Lyann'), ('982.7222222222222', 'Suzan'), ('982.7397260273973', 'Sabastiani'), ('983.0410958904109', 'Yasmine'), ('983.1290322580645', 'Jazzamay'), ('983.359649122807', 'Yue'), ('983.4174757281553', 'Demi'), ('984.1714285714286', 'Rosie'), ('985.7211538461538', 'Gabrielle Faith'), ('986.3944099378882', 'Chun Yan'), ('986.82', 'Lindsey'), ('987.504761904762', 'Mia Nicole'), ('987.6739130434783', 'Margarida'), ('988.7425149700599', 'Li'), ('989.1904761904761', 'Pamela'), ('989.75', 'Zhuoma'), ('990.5210084033613', 'Brittany'), ('990.6', 'Kseniia'), ('992.4222222222222', 'Boyan'), ('992.4870588235294', 'Tyra'), ('992.7225433526012', 'Mi Rae'), ('993.1351351351351', 'Melisa'), ('993.175925925926', 'Marianne'), ('993.2105263157895', 'Josie'), ('993.4255319148937', 'Stefana'), ('994.0612244897959', 'Gabriela Nicole'), ('994.4769230769231', 'Dan Ni'), ('995.4074074074074', 'Guzal'), ('996.0408163265306', 'Lisa Marie'), ('996.2574257425742', 'Claudia Gianina'), ('996.8148148148148', 'Laili'), ('998.5238095238095', 'Sai Samhitha'), ('998.7722772277227', 'Cynthia'), ('999.0215053763441', 'Voni'), ('999.15625', 'Malene'), ('999.2', 'Frances'), ('999.375', 'Mi Zhuoma')] != [('Aastha', '1199.8235294117646'), ('Abbi', '1110.0434782608695'), ('Abbie', '808.4545454545455'), ('Abigail', '387.66706161137444'), ('Abiodun', '1039.6744186046512'), ('Abir', '1228.75'), ('Adeliya', '790.1538461538462'), ('Adnya', '1122.4423076923076'), ('Adriana', '619.6814159292036'), ('Adrienn', '1213.1666666666667'), ('Adrijana', '627.12'), ('Adva', '1255.3333333333333'), ('Afroditi', '1155.0392156862745'), ('Agata', '960.6770186335403'), ('Agata Jadwiga', '1082.3548387096773'), ('Agne', '1231.5'), ('Agnes', '391.3003629764065'), ('Agnese', '694.0659898477157'), ('Agni', '940.2125603864735'), ('Agnieszka', '122.19587628865979'), ('Agustina', '684.8497652582159'), ('Agustina Elena', '1154.25'), ('Ah', '1156.340425531915'), ('Ahlam', '1248.72'), ('Ahsha', '728.5'), ('Ai', '890.8728448275862'), ('Ai Wen', '912.1523178807947'), ('Aida', '1110.3333333333333'), ('Aiko', '284.8724727838258'), ('Ailen', '1034.5833333333333'), ('Aimee', '1200.2'), ('Aina', '1164.95'), ('Ainhoa', '943.7397959183673'), ('Aishwarya', '1024.625'), ('Ajla', '302.84831460674155'), ('Akari', '704.9618138424821'), ('Akgul', '215.25185185185185'), ('Aki', '710.9617224880383'), ('Akiho', '1145.8235294117646'), ('Akiko', '493.98205383848455'), ('Akilah', '772.8571428571429'), ('Akvile', '1038.35'), ('Alana', '1119.1639344262296'), ('Alba', '843.7260273972603'), ('Alberta', '343.22432701894314'), ('Albina', '775.2734375'), ('Aldana', '1185.7142857142858'), ('Alejandra', '1067.019801980198'), ('Aleksandra', '450.22998544395927'), ('Aleksandrina', '578.07962529274'), ('Alena', '820.4563492063492'), ('Alessandra', '1123.4864864864865'), ('Alessia', '1057.628205128205'), ('Alessondra', '1145.1641791044776'), ('Alexa', '383.9921465968586'), ('Alexandra', '569.2647632558965'), ('Alexandria', '945.625'), ('Alexia', '718.5202702702703'), ('Alexis', '604.15'), ('Aliaksandra', '441.9846743295019'), ('Alice', '710.3822682786414'), ('Alice Andrada', '951.9764150943396'), ('Alicia', '1105.1298701298701'), ('Alicja', '855.813627254509'), ('Alina', '925.0028776978418'), ('Aliona', '611.35'), ('Alisa', '453.01556420233464'), ('Alison', '403.48784576697403'), ('Alix', '822.3459915611814'), ('Alize', '252.11485774499474'), ('Alla', '217.85922330097088'), ('Allie', '557.9232456140351'), ('Almudena', '1157.8'), ('Alona', '871.6926829268293'), ('Alory Regina Elorriaga', '1181.6078431372548'), ('Alyona', '496.9431818181818'), ('Amanda', '650.6240276577355'), ('Amandine', '747.4375'), ('Amelie', '1011.3666666666667'), ('Amina', '803.9764705882353'), ('Aminat', '613.195652173913'), ('Amira', '1075.8260869565217'), ('Amra', '415.9078341013825'), ('Amrita', '1209.4'), ('Amy', '763.888198757764'), ('An Sophie', '460.8932038834951'), ('Ana', '396.2893280632411'), ('Ana Bianca', '842.8446601941747'), ('Ana Clara', '524.9192825112108'), ('Ana Gabriela', '1084.7916666666667'), ('Ana Luisa', '1243.4285714285713'), ('Ana Paula', '1031.228855721393'), ('Ana Sofia', '496.7156398104265'), ('Ana Victoria', '961.2631578947369'), ('Anabel', '144.3264367816092'), ('Anaeve', '922.2255639097745'), ('Anais', '482.26169844020797'), ('Anamika', '859.3059701492538'), ('Anastasia', '430.0872542522642'), ('Anastasia Evgenyevna', '956.5754716981132'), ('Anastasiia', '1245.75'), ('Anastasija', '221.66153846153847'), ('Anastasiya', '671.2584369449378'), ('Anca', '1127.7368421052631'), ('Anda', '1150.0'), ('Andie K', '970.3620689655172'), ('Andjela', '1063.4736842105262'), ('Andra Maria', '1275.8235294117646'), ('Andrea', '414.4332292750607'), ('Andrea Renee', '878.3939393939394'), ('Andreea', '956.0333333333333'), ('Andreea Amalia', '801.84375'), ('Andreea Roxana', '726.2657657657658'), ('Andreja', '424.64521739130436'), ('Andressa Cristina', '1184.0416666666667'), ('Andrina', '1045.6666666666667'), ('Aneta', '1152.0857142857142'), ('Anett', '367.2274678111588'), ('Anette', '969.8181818181819'), ('Ange Oby', '1226.3333333333333'), ('Angela', '1128.7272727272727'), ('Angelica', '686.2234432234433'), ('Angeliki', '1089.1603773584907'), ('Angelina', '750.3207810320781'), ('Angelique', '308.56833824975416'), ('Anhelina', '432.6949152542373'), ('Anhzelika', '850.9791666666666'), ('Ani', '720.1431870669746'), ('Anita', '947.472972972973'), ('Anja', '725.3893333333333'), ('Anke', '1228.388888888889'), ('Ankita', '618.4714285714285'), ('Ann', '907.4'), ('Anna', '551.5557158312297'), ('Anna Arina', '760.639175257732'), ('Anna Giulia', '428.5496828752643'), ('Anna Karolina', '345.51020408163265'), ('Anna Katalina', '916.7115384615385'), ('Anna Lena', '201.87700534759358'), ('Anna Maria', '1070.3967391304348'), ('Annalisa', '583.9347826086956'), ('Anne', '248.74237737516572'), ('Anne Liz', '762.7606382978723'), ('Anne Marie', '1237.6363636363637'), ('Anne Sophie', '1252.0'), ('Annie', '1042.037037037037'), ('Annika', '265.79487179487177'), ('Anouk', '969.5882352941177'), ('Antonela', '1051.7096774193549'), ('Antonia', '589.1298076923077'), ('Antonina', '1049.4655172413793'), ('Anushka', '1037.0833333333333'), ('Ao', '617.3333333333334'), ('Apichaya', '1016.5714285714286'), ('Arabela', '658.5074074074074'), ('Arantxa', '279.23336006415394'), ('Aranza', '490.4144736842105'), ('Aravane', '200.97080291970804'), ('Ariadna', '951.4146341463414'), ('Arina', '560.6778190830236'), ('Arina Gabriela', '1224.0'), ('Arlinda', '1074.3333333333333'), ('Arthi', '1281.8461538461538'), ('Aryna', '349.54794520547944'), ('Aselya', '1181.27868852459'), ('Asha', '1151.95'), ('Ashleigh', '331.3681818181818'), ('Ashley', '638.88'), ('Ashling', '823.0909090909091'), ('Ashmitha', '1018.6637931034483'), ('Ashvarya', '803.3904761904762'), ('Asia', '453.43392070484583'), ('Asiya', '790.46875'), ('Assia', '1172.5531914893618'), ('Astra', '829.5625'), ('Astrid Wanja', '1086.45'), ('Audrey', '591.2544731610338'), ('Avgusta', '1208.4285714285713'), ('Axana', '1064.0'), ('Ayaka', '552.4653465346535'), ('Ayan', '901.8717948717949'), ('Ayano', '597.6981132075472'), ('Ayla', '397.83561643835617'), ('Aymet', '915.5932203389831'), ('Ayu Fani', '479.5530612244898'), ('Ayumi', '412.74466019417474'), ('Azra', '556.2303370786517'), ('Barbara', '763.8900651465798'), ('Barbora', '252.6093155893536'), ('Basak', '656.2932551319648'), ('Beatrice', '785.0707482993197'), ('Beatriz', '457.4050279329609'), ('Beatriz Magdalena', '1253.4'), ('Beatriz Maria', '971.2865853658536'), ('Beauty', '1382.1538461538462'), ('Belen', '1167.3368421052633'), ('Belinda', '681.7736842105263'), ('Benedetta', '705.4688346883469'), ('Berfu', '625.013698630137'), ('Bermet', '717.7932330827068'), ('Bernarda', '541.273631840796'), ('Bernice', '834.1005025125628'), ('Berta', '1005.75'), ('Bethanie', '146.59709379128137'), ('Betina', '1229.5714285714287'), ('Bhuvana', '878.0138888888889'), ('Bianca', '653.2805383022775'), ('Bianka', '696.952380952381'), ('Bibiane', '550.1941544885177'), ('Blair', '912.71875'), ('Blanca', '904.6538461538462'), ('Blessing', '1221.8333333333333'), ('Boba', '1254.6341463414635'), ('Bojana', '392.7313829787234'), ('Borislava', '834.2066115702479'), ('Boyan', '992.4222222222222'), ('Brandy', '970.9846153846154'), ('Breaunna', '872.0930232558139'), ('Brenda', '211.01377118644066'), ('Brianna', '854.3170731707318'), ('Brienne', '917.0'), ('Brindtha', '1126.3333333333333'), ('Britt', '647.5205479452055'), ('Brittany', '990.5210084033613'), ('Brooke', '804.6277056277056'), ('Brynn', '952.5619834710744'), ('Bunyawi', '555.3384615384615'), ('Busra', '1140.981981981982'), ('Cagla', '311.87854251012146'), ('Caitlin', '709.4247787610619'), ('Camelia Elena', '803.7139479905437'), ('Cameron', '1192.1818181818182'), ('Camila', '539.7944621938232'), ('Camila Vital', '1192.3783783783783'), ('Camilla', '801.6850649350649'), ('Camille', '1112.9450549450548'), ('Cara', '236.07412398921832'), ('Carina', '416.3666666666667'), ('Carla', '411.70779777206513'), ('Carlota', '1236.7777777777778'), ('Carlotta', '1127.9338842975208'), ('Carly', '318.69978858350953'), ('Carmen', '890.6351351351351'), ('Carmen Raluca', '842.1553398058253'), ('Carol', '564.1434426229508'), ('Carolin', '645.2279792746114'), ('Carolina', '718.725321888412'), ('Carolina Meligeni Rodrigues', '799.0650406504066'), ('Caroline', '342.40130505709624'), ('Caroline B', '1161.5675675675675'), ('Carolyn', '1197.578947368421'), ('Carson', '1020.6'), ('Casey', '378.0163727959698'), ('Catalina', '293.76942355889724'), ('Catherine', '941.4724409448819'), ('Catherine Cartan', '134.21917808219177'), ('Caty', '744.0'), ('Cecilia', '755.4649681528663'), ('Cecilie Lundgaard', '1141.842105263158'), ('Celine', '708.618398637138'), ('Cemre', '1123.3855421686746'), ('Chalena', '650.1367521367522'), ('Chanel', '343.2835365853659'), ('Chanelle', '215.6615811373093'), ('Chang', '575.4626436781609'), ('Chanikarn', '1281.8461538461538'), ('Chantal', '609.90625'), ('Chantelle', '1128.030303030303'), ('Chaoyi', '1232.8'), ('Charlene', '766.4794520547945'), ('Charlotte', '927.7647058823529'), ('Chayenne', '593.9759036144578'), ('Chelsea', '1132.0'), ('Chelsey', '719.3061224489796'), ('Chen', '524.7444668008048'), ('Chengyiyi', '789.2857142857143'), ('Chi Chi', '464.1367781155015'), ('Chi Fan', '1039.3902439024391'), ('Chia Hsien', '950.8813559322034'), ('Chia Jung', '359.3764705882353'), ('Chiaki', '437.73858921161826'), ('Chiara', '977.9640591966173'), ('Chieh Yu', '533.9586374695864'), ('Chihiro', '848.9908952959029'), ('Chin Wei', '385.2651515151515'), ('Chinami', '615.2230215827338'), ('Ching Wen', '583.530303030303'), ('Chiraz', '749.3582089552239'), ('Chisa', '874.8181818181819'), ('Chloe', '675.2445414847161'), ('Chompoothip', '1112.1458333333333'), ('Christie', '1112.875'), ('Christina', '454.9920529801324'), ('Christine', '841.4051724137931'), ('Chun Mei', '692.390625'), ('Chun Yan', '986.3944099378882'), ('Cindy', '659.3055555555555'), ('Claire', '443.45754716981133'), ('Clara', '1190.7307692307693'), ('Claudia', '826.2619047619048'), ('Claudia Antonia', '967.2978723404256'), ('Claudia Gianina', '996.2574257425742'), ('Claudine', '383.6413199426112'), ('Clelia', '823.6306306306307'), ('Clemence', '875.9772727272727'), ('Clementina Eugenia', '964.1224489795918'), ('Clothilde', '620.4120171673819'), ('Coco', '270.5896860986547'), ('Colomba', '1165.093023255814'), ('Conny', '390.0'), ('Constance', '570.2723004694835'), ('Constanza', '835.1132075471698'), ('Constanze', '1245.3333333333333'), ('Corina', '832.7818181818182'), ('Corinna', '356.8219696969697'), ('Cornelia', '757.2253521126761'), ('Cory Ann', '406.5511363636364'), ('Costanza', '1049.0'), ('Cristiana', '554.5376344086021'), ('Cristina', '643.616049382716'), ('Cristina Andreea', '439.5747863247863'), ('Cristina Madalina', '720.6428571428571'), ('Csilla', '949.7944444444445'), ('Cynthia', '998.7722772277227'), ('Da Hye', '1010.3333333333334'), ('Dabin', '920.1276595744681'), ('Dagmara', '1159.1818181818182'), ('Daiana', '720.7490039840637'), ('Dajana', '1181.4736842105262'), ('Dalia', '801.6933333333334'), ('Dalila', '525.9552572706936'), ('Dalma', '279.16438356164383'), ('Damilola', '1493.0'), ('Damini', '1242.0'), ('Damira', '1198.3333333333333'), ('Dan Ni', '994.4769230769231'), ('Dana', '805.7028985507246'), ('Daneika', '977.4539007092199'), ('Danica', '380.609375'), ('Daniela', '348.6364892881825'), ('Daniella', '643.9216101694915'), ('Danielle', '744.7453250222618'), ('Danielle Rose', '434.68'), ('Danijela', '1107.0919540229886'), ('Danka', '302.83268482490274'), ('Daphne', '1226.5454545454545'), ('Daria', '629.6443987667009'), ('Darija', '464.95631067961165'), ('Dariya', '1132.1744186046512'), ('Darya', '531.1829405162739'), ('Dasha', '722.6986301369863'), ('Dayana', '576.4307692307692'), ('Dea', '550.9545454545455'), ('Deborah', '764.6785714285714'), ('Deeon', '1115.0851063829787'), ('Dejana', '758.5342960288808'), ('Demi', '983.4174757281553'), ('Denisa', '419.1633466135458'), ('Denise', '949.1239316239316'), ('Denise Antonela', '1160.3125'), ('Deniz', '551.5304659498208'), ('Deria', '1123.6486486486488'), ('Desirae', '863.7826086956521'), ('Desiree', '1032.2666666666667'), ('Despina', '665.686684073107'), ('Despoina', '746.0962962962963'), ('Destanee', '483.77464788732397'), ('Dewi', '1154.2857142857142'), ('Dhruthi', '615.1506849315068'), ('Di', '736.1650485436893'), ('Dia', '383.7832512315271'), ('Diana', '654.3773657782928'), ('Diana Maria', '1205.7692307692307'), ('Dianne', '809.697247706422'), ('Dijana', '669.2982456140351'), ('Dilara', '1248.2'), ('Dina', '1094.4583333333333'), ('Dinah', '268.05945945945945'), ('Doga Selen', '1234.6176470588234'), ('Domenica', '803.8666666666667'), ('Dominika', '171.71134020618555'), ('Dominique', '1042.7843137254902'), ('Donika', '1131.6333333333334'), ('Donna', '223.50900900900902'), ('Dorien', '1196.56'), ('Doroteja', '520.9397993311037'), ('Draginja', '913.7272727272727'), ('Dunja', '929.0599369085173'), ('Ebony', '1073.1752577319587'), ('Eden', '1029.6888888888889'), ('Edina', '211.67325428194994'), ('Eduarda', '656.2851711026616'), ('Eetee', '842.7045454545455'), ('Ege', '1214.857142857143'), ('Ekaterina', '471.8367290748899'), ('Ekaterine', '553.9434782608696'), ('Elaine', '1221.7931034482758'), ('Eleanor', '1066.5343511450383'), ('Elena', '324.3720930232558'), ('Elena Gabriela', '392.44444444444446'), ('Elena Teodora', '686.6470588235294'), ('Eleni', '249.5244140625'), ('Eleonora', '950.0277777777778'), ('Eleonore', '1087.372340425532'), ('Eliessa', '876.1730769230769'), ('Elina', '421.6573033707865'), ('Elisabeth', '888.2213114754098'), ('Elise', '334.7118644067797'), ('Elitsa', '418.39748953974896'), ('Elixane', '579.5214723926381'), ('Eliza', '978.2708333333334'), ('Elizabeta', '1154.2714285714285'), ('Elizabeth', '736.9747747747748'), ('Elizabeth Anita Alexandria', '1006.2982456140351'), ('Elizaveta', '489.5307517084282'), ('Elizaveta Anna', '981.9814814814815'), ('Elke', '1011.9433962264151'), ('Ella', '1168.7967479674796'), ('Ellen', '750.9460093896714'), ('Ellie', '508.340206185567'), ('Elodie', '1211.2333333333333'), ('Elyne', '652.1984732824427'), ('Ema', '819.3400503778338'), ('Emelyn', '672.730407523511'), ('Emi', '770.8472222222222'), ('Emilia', '1232.0'), ('Emiliana', '1022.9174311926605'), ('Emilie', '705.4716981132076'), ('Emilija', '1209.625'), ('Emiliya', '1092.2771084337348'), ('Emily', '585.093851132686'), ('Emily J', '1041.948717948718'), ('Emina', '682.0972222222222'), ('Emma', '641.046992481203'), ('Emma Christine', '1193.3529411764705'), ('Emmanuelle', '943.7716535433071'), ('En Pei', '1229.7333333333333'), ('Ena', '980.3333333333334'), ('Eri', '321.23595505617976'), ('Erica', '788.0384615384615'), ('Erika', '544.5041866028708'), ('Erin', '942.7969696969697'), ('Erina', '733.1351351351351'), ('Esen', '1218.5652173913043'), ('Estela', '966.0540540540541'), ('Estelle', '617.4935251798561'), ('Ester', '950.9090909090909'), ('Estrella', '347.34943639291464'), ('Etsuko', '781.3218390804598'), ('Eudice Wong', '911.7241379310345'), ('Eugenia', '1157.5'), ('Eugenie', '477.62886597938143'), ('Eugeniya', '620.6746411483253'), ('Eva', '500.29483037156706'), ('Eva Marie', '1083.8333333333333'), ('Eveliina', '1023.8690476190476'), ('Evelyn', '471.5439093484419'), ('Evgenia', '414.66339869281046'), ('Evgeniya', '442.0344827586207'), ('Fang Ying', '612.0185185185185'), ('Fangzhou', '406.9281767955801'), ('Fanny', '569.1904761904761'), ('Farah', '1106.3076923076924'), ('Fatima', '673.7509157509157'), ('Fatimah', '1070.9463414634147'), ('Fatma', '648.2984054669704'), ('Fatyha', '1015.5'), ('Federica', '722.7286493034525'), ('Federica Joe', '1204.7272727272727'), ('Fernanda', '647.922077922078'), ('Ferny', '1187.0384615384614'), ('Fiona', '853.3908045977012'), ('Flavia', '376.47888446215137'), ('Florencia', '451.5810397553517'), ('Frances', '999.2'), ('Francesca', '570.534951862704'), ('Francisca', '903.1666666666666'), ('Francoise', '437.05298013245033'), ('Franziska', '949.6575342465753'), ('Frederikke', '1244.3333333333333'), ('Freya', '544.1627906976744'), ('Gabriela', '696.7697332607512'), ('Gabriela Nicole', '994.0612244897959'), ('Gabriella', '792.5'), ('Gabrielle Faith', '985.7211538461538'), ('Gaelle', '1052.8314606741574'), ('Gaia', '759.5352697095435'), ('Gail', '526.2644836272041'), ('Galina', '305.19563522992985'), ('Ganna', '606.7211740041929'), ('Garbine', '229.3774193548387'), ('Gebriela', '1152.142857142857'), ('Genevieve', '772.2857142857143'), ('Georgia', '533.5940594059406'), ('Georgia Andreea', '763.1014492753624'), ('Georgiana', '1153.9166666666667'), ('Georgina', '396.225'), ('Ghislaine', '1150.6607142857142'), ('Giada', '813.1351351351351'), ('Gioia', '567.8518518518518'), ('Giorgia', '960.4941860465116'), ('Giorgie', '1226.5'), ('Giovanna', '1197.0'), ('Giulia', '693.6215943491422'), ('Giuliana', '584.359375'), ('Gloria', '794.7118644067797'), ('Gozal', '716.3150684931506'), ('Grace', '454.06233062330625'), ('Gracia', '783.8288043478261'), ('Greetje', '547.277108433735'), ('Greta', '296.8219584569733'), ('Guadalupe', '797.383606557377'), ('Guillermina', '1027.0'), ('Guiomar', '957.9512195121952'), ('Gulben', '1168.3396226415093'), ('Gulchekhra', '1196.0'), ('Gulnaz', '1236.6153846153845'), ('Guzal', '995.4074074074074'), ('Gyulnara', '1087.6216216216217'), ('Habiba', '1051.623188405797'), ('Hae Sung', '844.3856812933026'), ('Haine', '1179.4153846153847'), ('Hana', '1110.5376344086021'), ('Hanna', '957.2'), ('Hanyu', '543.968253968254'), ('Hao Chen', '680.1050228310502'), ('Hao Ching', '1153.936507936508'), ('Harmony', '574.8723404255319'), ('Harriet', '694.341935483871'), ('Haruka', '774.6837606837607'), ('Haruna', '512.1515151515151'), ('Hayley', '914.5321100917431'), ('Hazal', '1214.7692307692307'), ('Heather', '167.50632911392404'), ('Heidi', '417.44323483670297'), ('Helen', '1019.4107142857143'), ('Helene', '696.4752475247525'), ('Hikari', '1095.1176470588234'), ('Hilda', '673.6635071090047'), ('Himari', '1219.0'), ('Hiroko', '534.890243902439'), ('Hirono', '860.8104265402843'), ('Ho Ching', '925.9865771812081'), ('Hollie', '1185.75'), ('Hongrui', '914.8607594936709'), ('Hortencia', '1251.1333333333334'), ('Hsin Yuan', '1107.7142857142858'), ('Hua Chen', '726.1737089201878'), ('Huijie', '1118.904761904762'), ('Hulya', '888.0055096418732'), ('Hye Min', '1020.28125'), ('Hyojung', '1069.3208955223881'), ('Hyun Hui', '729.0671936758894'), ('I Hsuan', '1038.6911764705883'), ('Iana', '1085.581818181818'), ('Ida', '962.5'), ('Idia', '1232.2'), ('Iga', '705.5625'), ('Ilay', '1135.5'), ('Ilka', '868.2191780821918'), ('Ilona', '452.625'), ('Ilze', '847.0941176470589'), ('Imane Maelle', '845.375'), ('Ina', '1165.5573770491803'), ('Inci', '1069.0925925925926'), ('India', '954.046875'), ('Indire', '627.7027027027027'), ('Indy', '485.9559748427673'), ('Ineke', '919.6147540983607'), ('Ines', '687.0229885057471'), ('Inger', '1039.0'), ('Ingrid', '766.2549019607843'), ('Ingrid Alexandra', '869.3571428571429'), ('Ingrid Esperanza', '748.6622691292876'), ('Intissar', '1192.5454545454545'), ('Ioana', '980.2232142857143'), ('Ioana Diana', '482.43243243243245'), ('Ioana Loredana', '646.0441176470588'), ('Ionela Andreea', '799.0552486187845'), ('Ipek', '655.7828348504552'), ('Irena', '288.74423480083857'), ('Irene', '579.2153846153847'), ('Irina', '436.84339509862525'), ('Irina Camelia', '285.84388185654007'), ('Irina Maria', '578.1381578947369'), ('Iris', '866.1075949367089'), ('Iryna', '489.5294964028777'), ('Isabel', '724.9178743961353'), ('Isabela', '1114.99375'), ('Isabella', '566.7873931623932'), ('Isabelle', '781.6993464052288'), ('Iulia Maria', '1170.9411764705883'), ('Iva', '732.7386018237082'), ('Ivana', '439.81414868105514'), ('Ivania', '871.109375'), ('Ivanka', '1079.05'), ('Iveta', '117.95684523809524'), ('Ivette', '1136.8535031847134'), ('Ivone', '872.0'), ('Ivonne', '591.3809523809524'), ('Jacqueline', '624.6089494163424'), ('Jada', '909.2'), ('Jade', '739.04802259887'), ('Jaeda', '760.4920634920635'), ('Jaimee', '562.8450704225352'), ('Jaimy Gayle', '1243.875'), ('Jainy', '1037.5274725274726'), ('Jamie', '402.36756756756756'), ('Jamilya', '1247.3333333333333'), ('Jan', '592.5990783410139'), ('Jana', '406.6258503401361'), ('Janette', '240.5306603773585'), ('Janina', '699.7864583333334'), ('Janja', '1262.5416666666667'), ('Janneke', '861.5102040816327'), ('Jaqueline Adina', '748.7238095238096'), ('Jara', '1121.767857142857'), ('Jarmila', '149.46360759493672'), ('Jasmin', '633.027027027027'), ('Jasmina', '642.1811989100818'), ('Jasmine', '437.86915887850466'), ('Jasmine Amber', '1117.64'), ('Jawairiah', '1070.5648854961833'), ('Jazmin', '1035.46'), ('Jazzamay', '983.1290322580645'), ('Jeannine', '767.7730496453901'), ('Jelena', '348.19338235294117'), ('Jennifer', '556.7936681222708'), ('Jenny', '902.1470588235294'), ('Jesika', '501.5860215053763'), ('Jessica', '655.7464059804486'), ('Jessika', '818.2043795620438'), ('Jessy', '967.6708860759494'), ('Ji Hee', '823.9789029535865'), ('Ji Young', '833.5061082024433'), ('Jia', '1169.6923076923076'), ('Jia Jing', '682.961038961039'), ('Jia Qi', '529.7777777777778'), ('Jiahui', '794.4931506849315'), ('Jiakang', '1230.6'), ('Jiatian', '1232.032258064516'), ('Jiaxi', '578.5'), ('Jiaxue', '1161.0'), ('Jie', '114.05571428571429'), ('Jil Belen', '501.0619469026549'), ('Jil Nora', '1116.4190476190477'), ('Jill', '121.9579326923077'), ('Jillian', '721.14'), ('Jin', '1267.0'), ('Jin A', '492.8915187376726'), ('Jin Ju', '1035.6470588235295'), ('Jing Jing', '369.1620469083156'), ('Joana', '863.3225806451613'), ('Joanna', '931.025641025641'), ('Joanne', '1227.8'), ('Jodie Anna', '925.4230769230769'), ('Johana', '1111.8333333333333'), ('Johanna', '310.3405299313052'), ('Jordana', '1022.6198347107438'), ('Josepha', '924.9325842696629'), ('Josephine', '684.4892086330935'), ('Josie', '993.2105263157895'), ('Jovana', '601.9846625766871'), ('Ju Eun', '812.6'), ('Judith', '1224.0'), ('Jule', '1243.904761904762'), ('Julia', '576.9173467252564'), ('Julia Mansano', '1024.6666666666667'), ('Juliana', '1110.0816326530612'), ('Juliana Rocha', '1175.7666666666667'), ('Julie', '512.3787128712871'), ('Julieta Lara', '707.1467889908257'), ('Julita', '1019.9411764705883'), ('Julyette Maria Josephine', '732.1666666666666'), ('June', '1189.0'), ('Junri', '262.30884808013354'), ('Justina', '1212.9166666666667'), ('Justine', '521.5358361774744'), ('Justyna', '585.8517745302714'), ('Kady', '1055.020202020202'), ('Kai Chen', '272.08855291576674'), ('Kai Lin', '522.6561403508772'), ('Kaia', '127.06775067750678'), ('Kaitlin', '901.3333333333334'), ('Kaitlyn', '756.2549019607843'), ('Kaja', '633.5454545454545'), ('Kajsa', '661.9589041095891'), ('Kamila', '568.2547169811321'), ('Kamilla', '1162.8301886792453'), ('Kamonwan', '765.1395348837209'), ('Kana', '924.2782608695652'), ('Kanae', '635.346516007533'), ('Kanako', '1105.3125'), ('Kanami', '799.9940828402367'), ('Kanika', '962.8536585365854'), ('Kaori', '871.0790513833992'), ('Karen', '674.9672514619883'), ('Kariann', '1068.9166666666667'), ('Karin', '472.338003502627'), ('Karina', '883.6090909090909'), ('Karina Ildor', '696.9606060606061'), ('Karina Kristina', '1062.795918367347'), ('Karine', '868.8904109589041'), ('Karis', '1001.0679611650486'), ('Karla', '807.616'), ('Karman', '652.917808219178'), ('Karola Patricia', '928.3333333333334'), ('Karolayne', '1077.8095238095239'), ('Karolina', '586.9412296564195'), ('Karoline', '873.6229508196722'), ('Karyn', '903.5769230769231'), ('Kassandra', '927.0350877192982'), ('Katalin', '331.93949394939494'), ('Katarina', '401.0998263888889'), ('Katarzyna', '459.29286608260327'), ('Kate', '1117.7142857142858'), ('Katerina', '491.8507295173962'), ('Kateryna', '294.33209990749305'), ('Katharina', '680.677700348432'), ('Katharine', '882.1071428571429'), ('Katherine', '836.6804511278195'), ('Katherine Gabriela', '910.396694214876'), ('Kathinka', '415.7'), ('Kathrin', '291.4792817679558'), ('Katie', '620.9404580152672'), ('Katrine Isabel', '1111.08'), ('Katy', '492.6608695652174'), ('Katya', '1050.7'), ('Katyarina', '1010.1818181818181'), ('Kayla', '583.1686746987951'), ('Kaylah', '1163.3478260869565'), ('Kazusa', '772.2402912621359'), ('Kei', '1003.1212121212121'), ('Kelia', '1114.9433962264152'), ('Kelly', '804.873831775701'), ('Kelly S', '312.7584269662921'), ('Kelsey', '1012.325'), ('Kennedy', '807.7222222222222'), ('Keren', '643.422641509434'), ('Keri', '1018.6534653465346'), ('Kerstin', '1020.4271844660194'), ('Khristina', '978.0229885057471'), ('Ki Ryang', '1164.090909090909'), ('Kiki', '287.71625344352617'), ('Kim', '687.3120567375887'), ('Kim Alice', '762.4081632653061'), ('Kimberley', '846.9154228855722'), ('Kimberly', '618.6923076923077'), ('Kimika', '1097.219512195122'), ('Kimiko', '95.03465982028241'), ('Kinnie', '606.1467576791808'), ('Kirsten', '308.64912280701753'), ('Kirsten Andrea', '1035.0384615384614'), ('Klaartje', '576.9'), ('Klara', '235.31431431431432'), ('Klaudia', '780.7905027932961'), ('Komola', '826.0238095238095'), ('Korina', '567.0507399577167'), ('Kotomi', '844.7460317460317'), ('Krista', '522.984693877551'), ('Kristie', '445.18918918918916'), ('Kristina', '343.25546975546973'), ('Kristina N', '1060.5633802816901'), ('Kristy', '837.7730496453901'), ('Kristyna', '443.8467908902692'), ('Ksenia', '482.36648501362396'), ('Kseniia', '990.6'), ('Ksenija', '975.6271186440678'), ('Kumiko', '488.76107382550333'), ('Kurumi', '165.96132596685084'), ('Kveta', '159.62397820163488'), ('Kwan Yau', '1070.0377358490566'), ('Kyle', '887.502487562189'), ('Kylie', '798.3181818181819'), ('Kyoka', '348.54794520547944'), ('Kyra', '443.76148409893995'), ('Kyung Mi', '533.433770014556'), ('Laetitia', '677.4458598726114'), ('Laili', '996.8148148148148'), ('Lamis', '1062.3666666666666'), ('Lara', '643.6939163498099'), ('Larikah', '1054.9019607843138'), ('Laura', '504.4145867098865'), ('Laura D', '910.5714285714286'), ('Laura Ioana', '516.1982942430703'), ('Laura Sofia', '1198.1538461538462'), ('Lauren', '484.9442231075697'), ('Lauryn', '1107.0882352941176'), ('Lavinia', '612.736'), ('Laylo', '1226.076923076923'), ('Layne', '1184.0'), ('Lea', '858.4107142857143'), ('Leah', '1179.6216216216217'), ('Lee', '908.156862745098'), ('Lena', '594.9436936936937'), ('Lena Marie', '657.8934169278997'), ('Lenka', '451.33577981651376'), ('Leolia', '773.5666666666667'), ('Leonie', '825.972972972973'), ('Lesedi Sheya', '887.4545454545455'), ('Lesia', '205.17590361445784'), ('Lesley', '514.7174515235457'), ('Leslie', '1180.5454545454545'), ('Leticia', '481.3229166666667'), ('Leticia Garcia', '1072.4'), ('Leylah Annie', '1030.5'), ('Li', '988.7425149700599'), ('Liana Gabriela', '387.87113402061857'), ('Libby', '899.9150326797386'), ('Libi', '1035.327868852459'), ('Lidia', '1147.8529411764705'), ('Lidziya', '797.2128378378378'), ('Liezel', '284.8326771653543'), ('Liga', '567.9464544138929'), ('Lilla', '722.5087719298245'), ('Lin', '497.42124542124543'), ('Lina', '574.9808362369338'), ('Linda', '929.4398496240601'), ('Lindsay', '275.6055900621118'), ('Lindsey', '986.82'), ('Ling', '418.81925343811395'), ('Liniques', '1184.7222222222222'), ('Linnea', '959.6981132075472'), ('Lisa', '356.0105210420842'), ('Lisa Maria', '758.06'), ('Lisa Marie', '996.0408163265306'), ('Lisanne', '673.6507936507936'), ('Liubov', '887.2875'), ('Livia', '1179.875'), ('Liz Tatiane', '870.9007633587786'), ('Lizaveta', '1120.5652173913043'), ('Lizette', '666.1496062992126'), ('Lorenza', '1231.2727272727273'), ('Lorraine M', '972.75'), ('Lou', '680.1724137931035'), ('Loudmilla', '1220.0'), ('Louisa', '380.5308641975309'), ('Louise', '1070.1025641025642'), ('Lourdes', '188.06095041322314'), ('Lu', '907.3557312252965'), ('Luca', '859.8644067796611'), ('Lucia', '845.740638002774'), ('Luciana', '885.7495107632094'), ('Lucie', '322.62611607142856'), ('Lucrezia', '845.986301369863'), ('Lucy', '756.3141592920354'), ('Ludmila', '846.2727272727273'), ('Ludmilla', '787.5416666666666'), ('Luisa', '981.7517730496454'), ('Luisa Marie', '820.59375'), ('Luksika', '284.22813688212926'), ('Lulu', '1098.2888888888888'), ('Luna', '1139.0'), ('Lusine', '974.2702702702703'), ('Lutfiye', '1190.0629921259842'), ('Lyann', '982.6666666666666'), ('Lynn', '952.4411764705883'), ('Lyudmyla', '382.82479784366575'), ('Macall', '607.3360995850622'), ('Macarena', '692.1515151515151'), ('Madalina', '324.63613231552165'), ('Maddison', '748.0'), ('Madeleine', '1028.0365853658536'), ('Madeline', '1217.469387755102'), ('Madina', '1203.5'), ('Madison', '290.64452214452217'), ('Madrie', '958.0955414012739'), ('Maegan', '787.0'), ('Mafalda', '1139.7'), ('Maftuna', '1173.75'), ('Magali', '734.0'), ('Magalie', '1036.1214953271028'), ('Magda', '300.3974358974359'), ('Magdalena', '443.6296006264683'), ('Magy', '1092.7621951219512'), ('Mahak', '875.0'), ('Mahitha', '1007.15'), ('Mai', '687.25'), ('Maia', '745.433962264151'), ('Maia A', '1206.6666666666667'), ('Maiko', '438.4245810055866'), ('Maileen', '1152.888888888889'), ('Mailen', '410.8463541666667'), ('Maja', '896.7413793103449'), ('Makiho', '784.8009049773756'), ('Makoto', '516.6615384615385'), ('Malene', '999.15625'), ('Malika', '1004.7428571428571'), ('Malin', '825.039603960396'), ('Mallaurie', '1031.5342465753424'), ('Mallory', '143.48235294117646'), ('Malou', '947.3333333333334'), ('Mami', '1153.590909090909'), ('Man Ying Maggie', '1202.2692307692307'), ('Mana', '689.891129032258'), ('Mananchaya', '1230.6'), ('Manca', '838.1780821917808'), ('Mandy', '361.0'), ('Manisha', '897.0974358974358'), ('Manon', '622.7673469387755'), ('Manya', '1181.3548387096773'), ('Mara', '908.3962264150944'), ('Marcela', '774.64'), ('Marcela Guimaraes', '1143.7957746478874'), ('Marcelina', '1247.3636363636363'), ('Marcella', '657.0171919770773'), ('Margalita', '325.5912596401028'), ('Margarida', '987.6739130434783'), ('Margarita', '611.4060995184591'), ('Margaux', '1051.1224489795918'), ('Margot', '753.8346456692914'), ('Mari', '526.3698630136986'), ('Maria', '426.6002565198803'), ('Maria Agustina', '1190.0833333333333'), ('Maria Andrea', '1072.9591836734694'), ('Maria Camila', '1188.5277777777778'), ('Maria Constanza De Las Mercedes', '861.5050505050505'), ('Maria Del Rosario', '1119.4897959183672'), ('Maria Elena', '194.2392065344224'), ('Maria Fernanda', '443.0228531855956'), ('Maria Jesus', '1170.1830985915492'), ('Maria Joao', '486.6092544987147'), ('Maria Jose', '306.1794310722101'), ('Maria Lourdes', '918.0769230769231'), ('Maria Paulina', '1047.98224852071'), ('Maria Teresa', '359.81081081081084'), ('Mariam', '662.1182795698925'), ('Mariana', '556.0428051001821'), ('Marianna', '730.3831168831168'), ('Marianne', '993.175925925926'), ('Mariaryeni', '1085.4242424242425'), ('Marie', '695.574074074074'), ('Marie Eve', '300.56296296296296'), ('Mariia', '1148.9166666666667'), ('Marija', '544.2636655948553'), ('Marijana', '1215.0'), ('Marina', '532.6881807180315'), ('Marine', '774.5654761904761'), ('Marion', '279.78655282817505'), ('Mariona', '1163.0'), ('Marisa', '1067.3413173652696'), ('Mariya', '281.871335504886'), ('Marketa', '353.44444444444446'), ('Marlies', '946.8934426229508'), ('Marrit', '783.1711711711712'), ('Marta', '419.32988047808766'), ('Marta Huqi', '851.1224489795918'), ('Martha', '1056.0588235294117'), ('Martina', '751.8679119412942'), ('Mary', '869.1666666666666'), ('Mary Ann', '1188.7096774193549'), ('Maryna', '323.86176470588236'), ('Masa', '355.7223168654174'), ('Mathilde', '437.11396648044695'), ('Matilda', '799.1875'), ('Maud', '1013.4761904761905'), ('Maureen', '1070.21875'), ('Maurien', '1121.0869565217392'), ('Maxine', '973.8717948717949'), ('May', '1084.0294117647059'), ('Maya', '732.4260679079956'), ('Mayar', '891.6309523809524'), ('Mayo', '407.029702970297'), ('Mayya', '619.9064748201439'), ('Megan', '736.4809523809524'), ('Megumi', '1025.0'), ('Mei Xu', '1031.6'), ('Meiling', '812.85'), ('Meiqi', '1029.1666666666667'), ('Melanie', '372.32502965599053'), ('Melany Solange', '1039.8333333333333'), ('Melina', '1017.2560553633218'), ('Melinda', '169.13578500707214'), ('Melis', '634.7950310559006'), ('Melisa', '993.1351351351351'), ('Melissa', '1154.093023255814'), ('Melissa Ishuan', '1104.357142857143'), ('Meng Ning', '1035.95'), ('Mercedes', '1213.2142857142858'), ('Merel', '900.75'), ('Meritxell', '1182.9107142857142'), ('Mervana', '337.5292682926829'), ('Mi', '554.3953934740883'), ('Mi Jeong', '1071.3076923076924'), ('Mi Rae', '992.7225433526012'), ('Mi Zhuoma', '999.375'), ('Mia Nicole', '987.504761904762'), ('Micaela', '1332.0737704918033'), ('Michaela', '676.90589198036'), ('Michaella', '185.3469387755102'), ('Michela', '1228.9285714285713'), ('Michele Alexandra', '946.8846153846154'), ('Michelle', '280.79959100204496'), ('Michika', '718.047619047619'), ('Mihaela', '376.7356115107914'), ('Mihaela Lorena', '1223.4'), ('Miharu', '523.2788844621514'), ('Mihika', '1064.142857142857'), ('Mihoki', '1110.4411764705883'), ('Miki', '586.2250489236791'), ('Mila', '1201.16'), ('Milagros', '1234.2857142857142'), ('Milana', '626.441935483871'), ('Milena', '1114.4074074074074'), ('Milica', '1221.904761904762'), ('Min', '866.0693069306931'), ('Min Hwa', '819.8425531914894'), ('Minami', '1238.0625'), ('Mira', '788.2622950819672'), ('Mirabelle', '721.1643835616438'), ('Miranda', '1169.4864864864865'), ('Miriam', '912.120218579235'), ('Miriam Bianca', '628.075'), ('Miriana', '950.6263736263736'), ('Mirjam', '843.6428571428571'), ('Mirjana', '186.76587795765877'), ('Misa', '617.0379241516966'), ('Misaki', '208.95263157894738'), ('Mitsumi', '1121.04'), ('Miyabi', '447.93283582089555'), ('Miyu', '594.9036697247707'), ('Mizuno', '593.1506849315068'), ('Molly', '1029.0'), ('Momoko', '772.6981132075472'), ('Mona', '273.57517899761336'), ('Monica', '210.0846394984326'), ('Monika', '980.575'), ('Monique', '462.4270462633452'), ('Montserrat', '541.952380952381'), ('Morgane', '880.6527777777778'), ('Moulika', '1243.4'), ('Mouna', '1258.5'), ('Moyuka', '1198.25'), ('Muazzez', '1227.0'), ('Muge', '1186.9444444444443'), ('Myrtille', '485.40168539325845'), ('Na', '82.13112391930835'), ('Na Lae', '608.7791798107255'), ('Na Ri', '573.5197368421053'), ('Nadezda', '868.6521739130435'), ('Nadia', '407.5463976945245'), ('Nadiya', '637.4607407407408'), ('Nadja', '631.8181818181819'), ('Nagi', '828.0675675675676'), ('Naiktha', '767.4963503649635'), ('Naima', '930.7027027027027'), ('Nam Yeon', '878.6666666666666'), ('Nan Nan', '890.4455445544554'), ('Nanuli', '542.7168141592921'), ('Nao', '313.45625'), ('Naoko', '1180.3828125'), ('Naomi', '483.97225572979494'), ('Napatsakorn', '929.4388489208633'), ('Nastassia', '1138.9166666666667'), ('Nastassja', '554.5290322580645'), ('Nastja', '593.1772853185596'), ('Natalia', '720.132932166302'), ('Natalie', '577.9677419354839'), ('Natalija', '634.3620689655172'), ('Nataliya', '1247.909090909091'), ('Natasa', '666.2853403141361'), ('Natasha', '883.0777142857143'), ('Natela', '566.4943396226415'), ('Natella', '962.0188679245283'), ('Nathalia', '543.031185031185'), ('Nathaly', '617.4615384615385'), ('Natia', '929.6928104575163'), ('Natsumi', '547.7037037037037'), ('Nattawadee', '1177.622641509434'), ('Naz', '1087.3823529411766'), ('Nazari', '825.7291666666666'), ('Neda', '745.421052631579'), ('Nelise', '1164.107142857143'), ('Nermeen', '1069.15'), ('Nevena', '1031.0'), ('Nicha', '515.3191489361702'), ('Nicky', '843.9007633587786'), ('Nicola', '753.2253164556962'), ('Nicole', '499.4127634660422'), ('Nicoleta Catalina', '485.46875'), ('Nicolette', '778.1648648648649'), ('Nidhi', '762.1578947368421'), ('Nigina', '376.7617554858934'), ('Nika', '913.4380165289256'), ('Nikita', '1174.0'), ('Nikki', '1017.3134328358209'), ('Nikol', '1054.0813953488373'), ('Nikola', '723.484076433121'), ('Nina', '528.8673050615595'), ('Nina Isabella', '1124.1666666666667'), ('Nives', '841.0514705882352'), ('Noel', '965.5343511450382'), ('Noelia', '1049.834745762712'), ('Noelle', '883.7787610619469'), ('Nonna', '1167.2758620689656'), ('Noppawan', '374.93926247288505'), ('Nora', '921.6216216216217'), ('Nour', '1096.1140350877192'), ('Nozomi', '936.3392857142857'), ('Nudnida', '436.66881028938906'), ('Nungnadda', '537.577922077922'), ('Nuria', '395.6680227827502'), ('Oana', '1027.1382978723404'), ('Oana Georgeta', '686.3047619047619'), ('Oceane', '728.7630208333334'), ('Ofri', '839.4923664122138'), ('Oksana', '533.9652351738241'), ('Ola', '660.8924731182796'), ('Olawaseun', '1397.5'), ('Olaya', '1112.75'), ('Oleksandra', '903.4289156626506'), ('Olena', '1179.1555555555556'), ('Olesya', '501.44444444444446'), ('Olga', '432.6511627906977'), ('Olivia', '446.7231833910035'), ('Oliwia', '1006.5128205128206'), ('Ons', '435.1470588235294'), ('Ornella', '978.7321428571429'), ('Oyku', '866.0454545454545'), ('Paige Mary', '1156.28125'), ('Pamela', '989.1904761904761'), ('Panna', '683.1081081081081'), ('Paola', '132.12638580931264'), ('Parris', '1099.625'), ('Patcharin', '863.5507246376811'), ('Patricia', '572.8059701492538'), ('Patricia Maria', '403.935'), ('Patrycja', '657.3816155988858'), ('Patty', '385.8135593220339'), ('Paula', '558.0162601626016'), ('Paula Andrea', '1175.909090909091'), ('Paula Catalina', '868.7624113475177'), ('Paula Cristina', '508.4679802955665'), ('Paulina', '1035.7780678851175'), ('Pauline', '298.1861898890259'), ('Pavla', '915.5892857142857'), ('Peangtarn', '514.586319218241'), ('Peggy', '755.5813953488372'), ('Pei Chi', '673.9809523809524'), ('Pei Hsuan', '1106.5'), ('Pei Ju', '1061.3076923076924'), ('Pemra', '465.24962852897477'), ('Pernilla', '619.4154929577464'), ('Petia', '710.3972602739726'), ('Petra', '365.50280484204313'), ('Phenomena', '1211.0'), ('Phillis', '826.6486486486486'), ('Pia', '737.862676056338'), ('Piia', '668.2581196581197'), ('Pilar', '740.5879828326181'), ('Pippa', '1041.0740740740741'), ('Plobrung', '937.7945205479452'), ('Polina', '630.7953529937444'), ('Polona', '478.30369515011546'), ('Poojashree', '729.1047904191616'), ('Pranjala', '795.4736842105264'), ('Prarthana G', '653.5070422535211'), ('Prerna', '740.5361842105264'), ('Priscila', '1137.19'), ('Priscilla', '675.4124293785311'), ('Qiang', '383.4714587737844'), ('Qianhui', '826.1388888888889'), ('Qianqian', '943.421052631579'), ('Qiu Yu', '705.8493150684932'), ('Quinn', '883.2352941176471'), ('Quirine', '633.9770491803279'), ('Rachael', '859.2706766917294'), ('Rachel', '1147.8526315789475'), ('Radina', '955.7833333333333'), ('Rafaela', '1121.2432432432433'), ('Ralina', '1176.5'), ('Raluca', '304.4619771863118'), ('Raluca Elena', '672.2258064516129'), ('Raluca Georgiana', '539.6164383561644'), ('Ramu', '1010.4545454545455'), ('Ramya', '1121.8846153846155'), ('Ran', '598.2655172413793'), ('Rana', '1117.6666666666667'), ('Raquel', '700.7644444444444'), ('Rashmi', '1089.2100840336134'), ('Ratnika', '1021.6504854368932'), ('Raveena', '487.6268656716418'), ('Rebeca', '1145.4333333333334'), ('Rebecca', '568.3374316939891'), ('Rebeka', '676.1090909090909'), ('Regina', '289.60283687943263'), ('Reina', '1019.0'), ('Reka Luca', '323.1388101983003'), ('Remi', '494.6111111111111'), ('Renata', '274.85317919075146'), ('Ria', '669.448275862069'), ('Rianna', '638.6666666666666'), ('Richel', '246.19871794871796'), ('Rika', '290.0614657210402'), ('Riko', '495.22641509433964'), ('Rio', '1125.0363636363636'), ('Risa', '489.65909090909093'), ('Rishika', '775.7269624573379'), ('Rita', '1051.7349397590363'), ('Riya', '651.4246575342465'), ('Roberta', '150.96681415929203'), ('Robin', '431.19607843137254'), ('Robyn', '1054.606896551724'), ('Rocio', '795.6201232032854'), ('Romana', '402.49931972789113'), ('Romana Caroline', '669.8542372881356'), ('Romina', '283.63246554364474'), ('Romy', '758.1714285714286'), ('Rona', '1125.5471698113208'), ('Ronit', '427.0'), ('Ronke', '1072.857142857143'), ('Roosh', '1168.2857142857142'), ('Rosa', '965.0'), ('Rosalia', '1059.73'), ('Rosalie', '1066.5887096774193'), ('Rosie', '984.1714285714286'), ('Roxane', '479.51738241308794'), ('Rui', '1209.625'), ('Rushmi', '573.8729603729604'), ('Rutuja', '808.5096774193548'), ('Ryann', '1069.0379746835442'), ('Saana', '1117.88'), ('Sabastiani', '982.7397260273973'), ('Sabina', '682.2005532503458'), ('Sabina Elena', '1184.6666666666667'), ('Sabine', '203.5871080139373'), ('Sabrina', '905.6324786324786'), ('Sacha', '340.2890442890443'), ('Sachia', '400.8093385214008'), ('Sachie', '368.26881720430106'), ('Sadafmoh', '665.8219178082192'), ('Sai Samhitha', '998.5238095238095'), ('Saisai', '297.39032258064515'), ('Sakiko', '832.9585365853659'), ('Sally', '529.583908045977'), ('Salma', '1204.6666666666667'), ('Samantha', '406.21702404158543'), ('Samira', '932.8940397350993'), ('Sanae', '1105.171875'), ('Sanaz', '703.1372549019608'), ('Sandra', '563.964505613908'), ('Sandy', '1028.9565217391305'), ('Sang Hee', '857.9508196721312'), ('Sania', '177.22695035460993'), ('Sara', '509.80945757997216'), ('Sarah', '546.5551763367463'), ('Sarah Beth', '875.9277108433735'), ('Sarah Rebecca', '743.6062176165804'), ('Sarahi', '1139.2340425531916'), ('Sarai Delfina', '1191.6470588235295'), ('Saray', '840.0776699029126'), ('Sari', '1081.1666666666667'), ('Sarlota', '1209.7777777777778'), ('Sarvinoz', '1235.1960784313726'), ('Sasa', '1033.027027027027'), ('Saska', '747.3695652173913'), ('Satsuki', '888.7272727272727'), ('Savannah', '1142.9285714285713'), ('Schena', '1188.2941176470588'), ('Se Hyun', '1210.2571428571428'), ('Se Jin', '1122.4545454545455'), ('Sean', '1240.92'), ('Seda', '1003.5367647058823'), ('Seira', '1115.72'), ('Selin', '1168.6571428571428'), ('Seo Kyung', '858.9173789173789'), ('Seone', '889.8028169014085'), ('Serena', '14.654294803817603'), ('Sesil', '162.3505747126437'), ('Seung Yeon', '784.0465949820789'), ('Severine', '218.4701086956522'), ('Shahar', '166.41358024691357'), ('Shakhlo', '924.8818897637796'), ('Shakhnoza', '1236.7627118644068'), ('Shangqing', '1228.3235294117646'), ('Shanshan', '694.2'), ('Shao Yuan', '967.9034090909091'), ('Sharmada', '851.5633802816901'), ('Sharon', '296.5792682926829'), ('Sharon Sanchana', '1097.0'), ('Shelby', '372.89398280802294'), ('Shelly', '1171.0'), ('Sheng Nan', '451.8657487091222'), ('Sherazad', '649.5154639175257'), ('Sherry', '1024.0116279069769'), ('Shiho', '500.688679245283'), ('Shilin', '632.2824427480916'), ('Shiori', '1070.6666666666667'), ('Shir', '1154.4166666666667'), ('Shiran', '1187.9245283018868'), ('Shivika', '935.2322946175638'), ('Shou Na', '1120.388888888889'), ('Shreya', '1148.0'), ('Shu Ying', '1042.6802325581396'), ('Shuai', '167.90740740740742'), ('Shuko', '421.44179894179894'), ('Shuo', '864.1538461538462'), ('Shuyue', '966.0588235294117'), ('Shweta', '897.6951219512196'), ('Si Qi', '1047.7575757575758'), ('Silvia', '565.8211508553654'), ('Simona', '542.2382851445662'), ('Simone', '1070.3417721518988'), ('Simran Kaur', '974.8'), ('Sina', '728.7443609022556'), ('Sinead', '975.3484848484849'), ('Sing Le', '1141.842105263158'), ('Siqi', '980.9076923076923'), ('Sirui', '949.7916666666666'), ('Siyu', '1241.1379310344828'), ('Sloane', '259.63589743589745'), ('Smriti', '1184.8260869565217'), ('Sneha', '1225.388888888889'), ('Snehadevi S', '632.3150684931506'), ('So Jung', '514.1732026143791'), ('So Ra', '572.2654545454545'), ('Sofia', '526.3535641547861'), ('Sofico', '1084.107142857143'), ('Sofie', '724.5'), ('Sofiya', '541.1570881226054'), ('Sofya', '640.8727272727273'), ('Sohyun', '1004.6666666666666'), ('Sonia', '1029.0980392156862'), ('Sonja', '885.0976744186047'), ('Sophia', '1221.3333333333333'), ('Sophie', '600.6881091617934'), ('Sorana', '213.75043630017453'), ('Sowjanya', '813.1357142857142'), ('Spurti', '1149.3125'), ('Sri Vaishnavi', '792.1927710843373'), ('Stamatia', '841.8387096774194'), ('Stanislava', '312.54158964879855'), ('Stefana', '993.4255319148937'), ('Stefani', '1167.3333333333333'), ('Stefania', '759.2894995093228'), ('Stefanie', '387.73412112259973'), ('Steffi', '939.746835443038'), ('Stephanie', '439.87772357723577'), ('Stephanie Mariel', '1035.5548387096774'), ('Storm', '573.6708333333333'), ('Su Jeong', '426.3886462882096'), ('Su Wei', '217.2493188010899'), ('Suellen', '911.7619047619048'), ('Sultan', '944.2432432432432'), ('Sun Jung', '812.4581005586592'), ('Sunae', '1229.8'), ('Sunam', '611.0757575757576'), ('Sung Hee', '635.7449168207024'), ('Susan', '1015.6792452830189'), ('Susanne', '417.8053097345133'), ('Suzan', '982.7222222222222'), ('Suzuho', '980.6666666666666'), ('Suzy', '698.7567567567568'), ('Svenja', '844.203007518797'), ('Svetlana', '267.03227571115974'), ('Sviatlana', '691.9934640522875'), ('Sybille', '1002.6792452830189'), ('Sylvia', '869.1702127659574'), ('Sylwia', '787.7645348837209'), ('Syna', '791.1240506329113'), ('Szabina', '772.3186813186813'), ('Tadeja', '343.0985324947589'), ('Taisiya', '969.6588235294117'), ('Talya', '1230.2'), ('Tamachan', '949.8059701492538'), ('Tamar', '1118.4166666666667'), ('Tamara', '614.0434782608696'), ('Tamari', '1146.3934426229507'), ('Tamarine', '121.82273948075202'), ('Tamaryn', '386.7025316455696'), ('Tamira', '135.88910505836577'), ('Tammi', '601.906914893617'), ('Tanaporn', '1113.2325581395348'), ('Tanya', '1023.089430894309'), ('Tara', '475.2979683972912'), ('Tatia', '1075.0'), ('Tatiana', '681.9417582417583'), ('Tatjana', '247.7449768160742'), ('Tatsiana', '912.1077844311377'), ('Tayisiya', '747.3172413793103'), ('Taylor', '387.5662100456621'), ('Tea', '1068.7457627118645'), ('Teliana', '461.06702898550725'), ('Tena', '614.9346733668342'), ('Teodora', '489.27513227513225'), ('Tereza', '557.241418764302'), ('Terri', '963.5'), ('Tess', '696.2878787878788'), ('Tessah', '390.2361111111111'), ('Tetiana', '437.4119658119658'), ('Tetyana', '398.83478260869566'), ('Thai Sa Grana', '802.7222222222222'), ('Theo', '650.1206896551724'), ('Theresa', '1159.5632183908046'), ('Tijana', '1017.7777777777778'), ('Timea', '182.02426160337552'), ('Tina', '425.82394366197184'), ('Tinatin', '810.6666666666666'), ('Ting Fei', '739.7727272727273'), ('Ting Jr', '789.6113989637306'), ('Tingting', '1015.2352941176471'), ('Tjasa', '743.1953125'), ('Tomoko', '838.8065217391304'), ('Tori', '841.7167381974249'), ('Tornado Alicia', '878.1666666666666'), ('Trang', '1029.3196721311476'), ('Treta', '1009.8666666666667'), ('Tsvetana', '131.02074074074073'), ('Tyra', '992.4870588235294'), ('Ulrikke', '506.39344262295083'), ('Ulyana', '844.0692307692308'), ('Urszula', '229.35687022900763'), ('Ushna', '1132.4109589041095'), ('Usue Maitane', '411.5068493150685'), ('Valentina', '921.3333333333334'), ('Valentine', '751.2668918918919'), ('Valentini', '479.8914728682171'), ('Valentyna', '368.14331210191085'), ('Valeria', '661.8474576271186'), ('Valerie', '806.2648401826484'), ('Valeriya', '799.8668224299065'), ('Vanda', '696.4126984126984'), ('Vanesa', '579.437984496124'), ('Vanessa', '398.3106546854942'), ('Vania', '185.75'), ('Vaniya', '1130.6037735849056'), ('Vanja', '1089.7111111111112'), ('Varatchaya', '450.4642082429501'), ('Varunya', '894.3846153846154'), ('Varvara', '382.6888217522659'), ('Vasilisa', '613.5330490405117'), ('Vaszilisza', '859.8103448275862'), ('Vendula', '729.0117647058823'), ('Venus', '32.984862819299906'), ('Vera', '195.66923570969814'), ('Verena', '958.1327800829876'), ('Veronica', '726.1852387843704'), ('Veronica M', '951.0075757575758'), ('Veronika', '734.6018957345972'), ('Vesna', '240.0448979591837'), ('Vicky', '1252.9130434782608'), ('Victoire', '1138.8490566037735'), ('Victoria', '444.9760935910478'), ('Victoria Ariadna', '1236.0'), ('Viktoria', '566.9148936170212'), ('Viktoriia', '1236.5333333333333'), ('Viktorija', '507.4'), ('Viktoriya', '736.2288557213931'), ('Viktoryia', '966.4671052631579'), ('Vilma Y', '1243.0'), ('Vincenza', '1214.1142857142856'), ('Vinciane', '1150.0'), ('Violetta', '1170.840579710145'), ('Virginie', '355.88102893890675'), ('Vishesh', '1208.952380952381'), ('Vita', '1201.25'), ('Vitalia', '296.2025641025641'), ('Vivian', '670.9108527131783'), ('Vivien', '607.2810218978102'), ('Vivienne', '659.2103004291846'), ('Vlada', '595.3291666666667'), ('Vladica', '943.5432098765432'), ('Vladimira', '823.8770833333333'), ('Vladislava', '1006.1769911504425'), ('Vladyslava', '856.0782608695653'), ('Vojislava', '555.6572164948453'), ('Voni', '999.0215053763441'), ('Wan Ting', '701.4009009009009'), ('Wan Yi', '1081.142857142857'), ('Warona', '1249.3333333333333'), ('Wen Hsin', '440.35214446952597'), ('Wen Ling', '1117.55'), ('Wendy Qi Wen', '1011.469696969697'), ('Weronika Jasmina', '1152.7837837837837'), ('Whitney', '886.1407407407407'), ('Wiktoria', '1083.1454545454546'), ('Wing Yau Venise', '585.2589641434263'), ('Wushuang', '937.7878787878788'), ('Xenia', '661.2222222222222'), ('Xi Yao', '714.8653846153846'), ('Xiao', '814.4171122994652'), ('Xiaodi', '467.24657534246575'), ('Xiaorong', '848.4418604651163'), ('Xiaoxi', '737.7547169811321'), ('Ximena', '712.2780373831775'), ('Xin', '694.4808743169399'), ('Xin Yu', '1022.3333333333334'), ('Xinyu', '480.646017699115'), ('Xinyun', '309.35767790262173'), ('Xiyu', '954.6'), ('Xu Liu', '488.7671232876712'), ('Ya', '1225.75'), ('Ya Hsuan', '586.865'), ('Yafan', '325.6162790697674'), ('Yan', '768.560975609756'), ('Yana', '740.0214504596527'), ('Yang', '1177.8823529411766'), ('Yanina', '381.2581602373887'), ('Yanni', '1059.2702702702702'), ('Yarden', '1166.875'), ('Yaroslava', '211.41240310077518'), ('Yasmin', '702.1784386617101'), ('Yasmina', '1227.7777777777778'), ('Yasmine', '983.0410958904109'), ('Yasmyn', '1261.8181818181818'), ('Yawna', '1110.4594594594594'), ('Yayuk', '114.78806907378336'), ('Ye Ra', '431.3144424131627'), ('Ye Xin', '1048.081081081081'), ('Yekaterina', '1155.8191489361702'), ('Yelena', '897.4873949579832'), ('Yeong Won', '973.8617021276596'), ('Yevgeniya', '724.8712871287129'), ('Yi', '791.0756207674943'), ('Yi Fan', '381.5512572533849'), ('Yi Jing', '656.8787276341948'), ('Yi Miao', '418.2566137566138'), ('Yidi', '1185.030303030303'), ('Yihong', '1209.625'), ('Yijia', '1063.9411764705883'), ('Ying', '661.3972602739726'), ('Ying Ying', '403.8775981524249'), ('Yixuan', '801.6712328767123'), ('Ylena', '892.3561643835617'), ('Ylona Georgiana', '642.9487179487179'), ('Yoko', '1128.901098901099'), ('Yolande', '1068.4619883040937'), ('Yoo Ri', '1263.7666666666667'), ('Yoon Young', '844.9310344827586'), ('Yoshimi', '1096.9130434782608'), ('Yosr', '1222.24'), ('You Na', '1170.3461538461538'), ('Ysaline', '458.86633663366337'), ('Yu Jin', '1098.357142857143'), ('Yu Tong', '1239.6666666666667'), ('Yuan', '1054.0'), ('Yuanyi', '891.2340425531914'), ('Yue', '983.359649122807'), ('Yue Yue', '444.96190476190475'), ('Yuenu', '961.876923076923'), ('Yujia', '1034.1304347826087'), ('Yuka', '748.8250591016548'), ('Yukako', '1071.5833333333333'), ('Yuki', '876.7428571428571'), ('Yuki Kristina', '698.8285714285714'), ('Yukina', '857.1692307692308'), ('Yukun', '824.3936170212766'), ('Yulia', '485.35135135135135'), ('Yuliana', '725.5322195704057'), ('Yuliya', '384.87776983559684'), ('Yumi', '799.1332586786115'), ('Yung Jan', '166.6586270871985'), ('Yuqi', '1047.3529411764705'), ('Yurika', '322.17758620689654'), ('Yuriko', '1041.5367231638418'), ('Yurina', '746.4803493449782'), ('Yuuki', '608.1309090909091'), ('Yuval', '1230.2'), ('Yuxuan', '545.449074074074'), ('Yvonne', '318.2867132867133'), ('Zaineb', '1227.344827586207'), ('Zalina', '867.5288461538462'), ('Zarah', '709.625'), ('Zarina', '222.81428571428572'), ('Zeel', '791.2352941176471'), ('Zeynep  Sena', '1229.5714285714287'), ('Zhanlan', '627.7777777777778'), ('Zhaoxuan', '629.0081967213115'), ('Zhibek', '1058.0'), ('Zhima', '1144.45'), ('Zhou', '1237.9'), ('Zhuoma', '989.75'), ('Zi', '391.4656290531777'), ('Zinovia', '1221.5'), ('Ziyue', '878.4606741573034'), ('Zoe', '765.3777777777777'), ('Zoe Gwen', '935.081081081081'), ('Zsofia', '916.559633027523'), ('Zuzana', '451.92875448487956'), ('Zuzanna', '794.5416666666666')]",False
470,"What are the first names of all players, and their average rankings?",medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('1001.0679611650486', 'Karis'), ('1002.6792452830189', 'Sybille'), ('1003.1212121212121', 'Kei'), ('1003.5367647058823', 'Seda'), ('1004.6666666666666', 'Sohyun'), ('1004.7428571428571', 'Malika'), ('1005.75', 'Berta'), ('1006.1769911504425', 'Vladislava'), ('1006.2982456140351', 'Elizabeth Anita Alexandria'), ('1006.5128205128206', 'Oliwia'), ('1007.15', 'Mahitha'), ('1009.8666666666667', 'Treta'), ('1010.1818181818181', 'Katyarina'), ('1010.3333333333334', 'Da Hye'), ('1010.4545454545455', 'Ramu'), ('1011.3666666666667', 'Amelie'), ('1011.469696969697', 'Wendy Qi Wen'), ('1011.9433962264151', 'Elke'), ('1012.325', 'Kelsey'), ('1013.4761904761905', 'Maud'), ('1015.2352941176471', 'Tingting'), ('1015.5', 'Fatyha'), ('1015.6792452830189', 'Susan'), ('1016.5714285714286', 'Apichaya'), ('1017.2560553633218', 'Melina'), ('1017.3134328358209', 'Nikki'), ('1017.7777777777778', 'Tijana'), ('1018.6534653465346', 'Keri'), ('1018.6637931034483', 'Ashmitha'), ('1019.0', 'Reina'), ('1019.4107142857143', 'Helen'), ('1019.9411764705883', 'Julita'), ('1020.28125', 'Hye Min'), ('1020.4271844660194', 'Kerstin'), ('1020.6', 'Carson'), ('1021.6504854368932', 'Ratnika'), ('1022.3333333333334', 'Xin Yu'), ('1022.6198347107438', 'Jordana'), ('1022.9174311926605', 'Emiliana'), ('1023.089430894309', 'Tanya'), ('1023.8690476190476', 'Eveliina'), ('1024.0116279069769', 'Sherry'), ('1024.625', 'Aishwarya'), ('1024.6666666666667', 'Julia Mansano'), ('1025.0', 'Megumi'), ('1027.0', 'Guillermina'), ('1027.1382978723404', 'Oana'), ('1028.0365853658536', 'Madeleine'), ('1028.9565217391305', 'Sandy'), ('1029.0', 'Molly'), ('1029.0980392156862', 'Sonia'), ('1029.1666666666667', 'Meiqi'), ('1029.3196721311476', 'Trang'), ('1029.6888888888889', 'Eden'), ('1030.5', 'Leylah Annie'), ('1031.0', 'Nevena'), ('1031.228855721393', 'Ana Paula'), ('1031.5342465753424', 'Mallaurie'), ('1031.6', 'Mei Xu'), ('1032.2666666666667', 'Desiree'), ('1033.027027027027', 'Sasa'), ('1034.1304347826087', 'Yujia'), ('1034.5833333333333', 'Ailen'), ('1035.0384615384614', 'Kirsten Andrea'), ('1035.327868852459', 'Libi'), ('1035.46', 'Jazmin'), ('1035.5548387096774', 'Stephanie Mariel'), ('1035.6470588235295', 'Jin Ju'), ('1035.7780678851175', 'Paulina'), ('1035.95', 'Meng Ning'), ('1036.1214953271028', 'Magalie'), ('1037.0833333333333', 'Anushka'), ('1037.5274725274726', 'Jainy'), ('1038.35', 'Akvile'), ('1038.6911764705883', 'I Hsuan'), ('1039.0', 'Inger'), ('1039.3902439024391', 'Chi Fan'), ('1039.6744186046512', 'Abiodun'), ('1039.8333333333333', 'Melany Solange'), ('1041.0740740740741', 'Pippa'), ('1041.5367231638418', 'Yuriko'), ('1041.948717948718', 'Emily J'), ('1042.037037037037', 'Annie'), ('1042.6802325581396', 'Shu Ying'), ('1042.7843137254902', 'Dominique'), ('1045.6666666666667', 'Andrina'), ('1047.3529411764705', 'Yuqi'), ('1047.7575757575758', 'Si Qi'), ('1047.98224852071', 'Maria Paulina'), ('1048.081081081081', 'Ye Xin'), ('1049.0', 'Costanza'), ('1049.4655172413793', 'Antonina'), ('1049.834745762712', 'Noelia'), ('1050.7', 'Katya'), ('1051.1224489795918', 'Margaux'), ('1051.623188405797', 'Habiba'), ('1051.7096774193549', 'Antonela'), ('1051.7349397590363', 'Rita'), ('1052.8314606741574', 'Gaelle'), ('1054.0', 'Yuan'), ('1054.0813953488373', 'Nikol'), ('1054.606896551724', 'Robyn'), ('1054.9019607843138', 'Larikah'), ('1055.020202020202', 'Kady'), ('1056.0588235294117', 'Martha'), ('1057.628205128205', 'Alessia'), ('1058.0', 'Zhibek'), ('1059.2702702702702', 'Yanni'), ('1059.73', 'Rosalia'), ('1060.5633802816901', 'Kristina N'), ('1061.3076923076924', 'Pei Ju'), ('1062.3666666666666', 'Lamis'), ('1062.795918367347', 'Karina Kristina'), ('1063.4736842105262', 'Andjela'), ('1063.9411764705883', 'Yijia'), ('1064.0', 'Axana'), ('1064.142857142857', 'Mihika'), ('1066.5343511450383', 'Eleanor'), ('1066.5887096774193', 'Rosalie'), ('1067.019801980198', 'Alejandra'), ('1067.3413173652696', 'Marisa'), ('1068.4619883040937', 'Yolande'), ('1068.7457627118645', 'Tea'), ('1068.9166666666667', 'Kariann'), ('1069.0379746835442', 'Ryann'), ('1069.0925925925926', 'Inci'), ('1069.15', 'Nermeen'), ('1069.3208955223881', 'Hyojung'), ('1070.0377358490566', 'Kwan Yau'), ('1070.1025641025642', 'Louise'), ('1070.21875', 'Maureen'), ('1070.3417721518988', 'Simone'), ('1070.3967391304348', 'Anna Maria'), ('1070.5648854961833', 'Jawairiah'), ('1070.6666666666667', 'Shiori'), ('1070.9463414634147', 'Fatimah'), ('1071.3076923076924', 'Mi Jeong'), ('1071.5833333333333', 'Yukako'), ('1072.4', 'Leticia Garcia'), ('1072.857142857143', 'Ronke'), ('1072.9591836734694', 'Maria Andrea'), ('1073.1752577319587', 'Ebony'), ('1074.3333333333333', 'Arlinda'), ('1075.0', 'Tatia'), ('1075.8260869565217', 'Amira'), ('1077.8095238095239', 'Karolayne'), ('1079.05', 'Ivanka'), ('1081.142857142857', 'Wan Yi'), ('1081.1666666666667', 'Sari'), ('1082.3548387096773', 'Agata Jadwiga'), ('1083.1454545454546', 'Wiktoria'), ('1083.8333333333333', 'Eva Marie'), ('1084.0294117647059', 'May'), ('1084.107142857143', 'Sofico'), ('1084.7916666666667', 'Ana Gabriela'), ('1085.4242424242425', 'Mariaryeni'), ('1085.581818181818', 'Iana'), ('1086.45', 'Astrid Wanja'), ('1087.372340425532', 'Eleonore'), ('1087.3823529411766', 'Naz'), ('1087.6216216216217', 'Gyulnara'), ('1089.1603773584907', 'Angeliki'), ('1089.2100840336134', 'Rashmi'), ('1089.7111111111112', 'Vanja'), ('1092.2771084337348', 'Emiliya'), ('1092.7621951219512', 'Magy'), ('1094.4583333333333', 'Dina'), ('1095.1176470588234', 'Hikari'), ('1096.1140350877192', 'Nour'), ('1096.9130434782608', 'Yoshimi'), ('1097.0', 'Sharon Sanchana'), ('1097.219512195122', 'Kimika'), ('1098.2888888888888', 'Lulu'), ('1098.357142857143', 'Yu Jin'), ('1099.625', 'Parris'), ('1104.357142857143', 'Melissa Ishuan'), ('1105.1298701298701', 'Alicia'), ('1105.171875', 'Sanae'), ('1105.3125', 'Kanako'), ('1106.3076923076924', 'Farah'), ('1106.5', 'Pei Hsuan'), ('1107.0882352941176', 'Lauryn'), ('1107.0919540229886', 'Danijela'), ('1107.7142857142858', 'Hsin Yuan'), ('1110.0434782608695', 'Abbi'), ('1110.0816326530612', 'Juliana'), ('1110.3333333333333', 'Aida'), ('1110.4411764705883', 'Mihoki'), ('1110.4594594594594', 'Yawna'), ('1110.5376344086021', 'Hana'), ('1111.08', 'Katrine Isabel'), ('1111.8333333333333', 'Johana'), ('1112.1458333333333', 'Chompoothip'), ('1112.75', 'Olaya'), ('1112.875', 'Christie'), ('1112.9450549450548', 'Camille'), ('1113.2325581395348', 'Tanaporn'), ('1114.4074074074074', 'Milena'), ('1114.9433962264152', 'Kelia'), ('1114.99375', 'Isabela'), ('1115.0851063829787', 'Deeon'), ('1115.72', 'Seira'), ('1116.4190476190477', 'Jil Nora'), ('1117.55', 'Wen Ling'), ('1117.64', 'Jasmine Amber'), ('1117.6666666666667', 'Rana'), ('1117.7142857142858', 'Kate'), ('1117.88', 'Saana'), ('1118.4166666666667', 'Tamar'), ('1118.904761904762', 'Huijie'), ('1119.1639344262296', 'Alana'), ('1119.4897959183672', 'Maria Del Rosario'), ('1120.388888888889', 'Shou Na'), ('1120.5652173913043', 'Lizaveta'), ('1121.04', 'Mitsumi'), ('1121.0869565217392', 'Maurien'), ('1121.2432432432433', 'Rafaela'), ('1121.767857142857', 'Jara'), ('1121.8846153846155', 'Ramya'), ('1122.4423076923076', 'Adnya'), ('1122.4545454545455', 'Se Jin'), ('1123.3855421686746', 'Cemre'), ('1123.4864864864865', 'Alessandra'), ('1123.6486486486488', 'Deria'), ('1124.1666666666667', 'Nina Isabella'), ('1125.0363636363636', 'Rio'), ('1125.5471698113208', 'Rona'), ('1126.3333333333333', 'Brindtha'), ('1127.7368421052631', 'Anca'), ('1127.9338842975208', 'Carlotta'), ('1128.030303030303', 'Chantelle'), ('1128.7272727272727', 'Angela'), ('1128.901098901099', 'Yoko'), ('1130.6037735849056', 'Vaniya'), ('1131.6333333333334', 'Donika'), ('1132.0', 'Chelsea'), ('1132.1744186046512', 'Dariya'), ('1132.4109589041095', 'Ushna'), ('1135.5', 'Ilay'), ('1136.8535031847134', 'Ivette'), ('1137.19', 'Priscila'), ('1138.8490566037735', 'Victoire'), ('1138.9166666666667', 'Nastassia'), ('1139.0', 'Luna'), ('1139.2340425531916', 'Sarahi'), ('1139.7', 'Mafalda'), ('114.05571428571429', 'Jie'), ('114.78806907378336', 'Yayuk'), ('1140.981981981982', 'Busra'), ('1141.842105263158', 'Cecilie Lundgaard'), ('1141.842105263158', 'Sing Le'), ('1142.9285714285713', 'Savannah'), ('1143.7957746478874', 'Marcela Guimaraes'), ('1144.45', 'Zhima'), ('1145.1641791044776', 'Alessondra'), ('1145.4333333333334', 'Rebeca'), ('1145.8235294117646', 'Akiho'), ('1146.3934426229507', 'Tamari'), ('1147.8526315789475', 'Rachel'), ('1147.8529411764705', 'Lidia'), ('1148.0', 'Shreya'), ('1148.9166666666667', 'Mariia'), ('1149.3125', 'Spurti'), ('1150.0', 'Anda'), ('1150.0', 'Vinciane'), ('1150.6607142857142', 'Ghislaine'), ('1151.95', 'Asha'), ('1152.0857142857142', 'Aneta'), ('1152.142857142857', 'Gebriela'), ('1152.7837837837837', 'Weronika Jasmina'), ('1152.888888888889', 'Maileen'), ('1153.590909090909', 'Mami'), ('1153.9166666666667', 'Georgiana'), ('1153.936507936508', 'Hao Ching'), ('1154.093023255814', 'Melissa'), ('1154.25', 'Agustina Elena'), ('1154.2714285714285', 'Elizabeta'), ('1154.2857142857142', 'Dewi'), ('1154.4166666666667', 'Shir'), ('1155.0392156862745', 'Afroditi'), ('1155.8191489361702', 'Yekaterina'), ('1156.28125', 'Paige Mary'), ('1156.340425531915', 'Ah'), ('1157.5', 'Eugenia'), ('1157.8', 'Almudena'), ('1159.1818181818182', 'Dagmara'), ('1159.5632183908046', 'Theresa'), ('1160.3125', 'Denise Antonela'), ('1161.0', 'Jiaxue'), ('1161.5675675675675', 'Caroline B'), ('1162.8301886792453', 'Kamilla'), ('1163.0', 'Mariona'), ('1163.3478260869565', 'Kaylah'), ('1164.090909090909', 'Ki Ryang'), ('1164.107142857143', 'Nelise'), ('1164.95', 'Aina'), ('1165.093023255814', 'Colomba'), ('1165.5573770491803', 'Ina'), ('1166.875', 'Yarden'), ('1167.2758620689656', 'Nonna'), ('1167.3333333333333', 'Stefani'), ('1167.3368421052633', 'Belen'), ('1168.2857142857142', 'Roosh'), ('1168.3396226415093', 'Gulben'), ('1168.6571428571428', 'Selin'), ('1168.7967479674796', 'Ella'), ('1169.4864864864865', 'Miranda'), ('1169.6923076923076', 'Jia'), ('117.95684523809524', 'Iveta'), ('1170.1830985915492', 'Maria Jesus'), ('1170.3461538461538', 'You Na'), ('1170.840579710145', 'Violetta'), ('1170.9411764705883', 'Iulia Maria'), ('1171.0', 'Shelly'), ('1172.5531914893618', 'Assia'), ('1173.75', 'Maftuna'), ('1174.0', 'Nikita'), ('1175.7666666666667', 'Juliana Rocha'), ('1175.909090909091', 'Paula Andrea'), ('1176.5', 'Ralina'), ('1177.622641509434', 'Nattawadee'), ('1177.8823529411766', 'Yang'), ('1179.1555555555556', 'Olena'), ('1179.4153846153847', 'Haine'), ('1179.6216216216217', 'Leah'), ('1179.875', 'Livia'), ('1180.3828125', 'Naoko'), ('1180.5454545454545', 'Leslie'), ('1181.27868852459', 'Aselya'), ('1181.3548387096773', 'Manya'), ('1181.4736842105262', 'Dajana'), ('1181.6078431372548', 'Alory Regina Elorriaga'), ('1182.9107142857142', 'Meritxell'), ('1184.0', 'Layne'), ('1184.0416666666667', 'Andressa Cristina'), ('1184.6666666666667', 'Sabina Elena'), ('1184.7222222222222', 'Liniques'), ('1184.8260869565217', 'Smriti'), ('1185.030303030303', 'Yidi'), ('1185.7142857142858', 'Aldana'), ('1185.75', 'Hollie'), ('1186.9444444444443', 'Muge'), ('1187.0384615384614', 'Ferny'), ('1187.9245283018868', 'Shiran'), ('1188.2941176470588', 'Schena'), ('1188.5277777777778', 'Maria Camila'), ('1188.7096774193549', 'Mary Ann'), ('1189.0', 'June'), ('1190.0629921259842', 'Lutfiye'), ('1190.0833333333333', 'Maria Agustina'), ('1190.7307692307693', 'Clara'), ('1191.6470588235295', 'Sarai Delfina'), ('1192.1818181818182', 'Cameron'), ('1192.3783783783783', 'Camila Vital'), ('1192.5454545454545', 'Intissar'), ('1193.3529411764705', 'Emma Christine'), ('1196.0', 'Gulchekhra'), ('1196.56', 'Dorien'), ('1197.0', 'Giovanna'), ('1197.578947368421', 'Carolyn'), ('1198.1538461538462', 'Laura Sofia'), ('1198.25', 'Moyuka'), ('1198.3333333333333', 'Damira'), ('1199.8235294117646', 'Aastha'), ('1200.2', 'Aimee'), ('1201.16', 'Mila'), ('1201.25', 'Vita'), ('1202.2692307692307', 'Man Ying Maggie'), ('1203.5', 'Madina'), ('1204.6666666666667', 'Salma'), ('1204.7272727272727', 'Federica Joe'), ('1205.7692307692307', 'Diana Maria'), ('1206.6666666666667', 'Maia A'), ('1208.4285714285713', 'Avgusta'), ('1208.952380952381', 'Vishesh'), ('1209.4', 'Amrita'), ('1209.625', 'Emilija'), ('1209.625', 'Rui'), ('1209.625', 'Yihong'), ('1209.7777777777778', 'Sarlota'), ('121.82273948075202', 'Tamarine'), ('121.9579326923077', 'Jill'), ('1210.2571428571428', 'Se Hyun'), ('1211.0', 'Phenomena'), ('1211.2333333333333', 'Elodie'), ('1212.9166666666667', 'Justina'), ('1213.1666666666667', 'Adrienn'), ('1213.2142857142858', 'Mercedes'), ('1214.1142857142856', 'Vincenza'), ('1214.7692307692307', 'Hazal'), ('1214.857142857143', 'Ege'), ('1215.0', 'Marijana'), ('1217.469387755102', 'Madeline'), ('1218.5652173913043', 'Esen'), ('1219.0', 'Himari'), ('122.19587628865979', 'Agnieszka'), ('1220.0', 'Loudmilla'), ('1221.3333333333333', 'Sophia'), ('1221.5', 'Zinovia'), ('1221.7931034482758', 'Elaine'), ('1221.8333333333333', 'Blessing'), ('1221.904761904762', 'Milica'), ('1222.24', 'Yosr'), ('1223.4', 'Mihaela Lorena'), ('1224.0', 'Arina Gabriela'), ('1224.0', 'Judith'), ('1225.388888888889', 'Sneha'), ('1225.75', 'Ya'), ('1226.076923076923', 'Laylo'), ('1226.3333333333333', 'Ange Oby'), ('1226.5', 'Giorgie'), ('1226.5454545454545', 'Daphne'), ('1227.0', 'Muazzez'), ('1227.344827586207', 'Zaineb'), ('1227.7777777777778', 'Yasmina'), ('1227.8', 'Joanne'), ('1228.3235294117646', 'Shangqing'), ('1228.388888888889', 'Anke'), ('1228.75', 'Abir'), ('1228.9285714285713', 'Michela'), ('1229.5714285714287', 'Betina'), ('1229.5714285714287', 'Zeynep  Sena'), ('1229.7333333333333', 'En Pei'), ('1229.8', 'Sunae'), ('1230.2', 'Talya'), ('1230.2', 'Yuval'), ('1230.6', 'Jiakang'), ('1230.6', 'Mananchaya'), ('1231.2727272727273', 'Lorenza'), ('1231.5', 'Agne'), ('1232.0', 'Emilia'), ('1232.032258064516', 'Jiatian'), ('1232.2', 'Idia'), ('1232.8', 'Chaoyi'), ('1234.2857142857142', 'Milagros'), ('1234.6176470588234', 'Doga Selen'), ('1235.1960784313726', 'Sarvinoz'), ('1236.0', 'Victoria Ariadna'), ('1236.5333333333333', 'Viktoriia'), ('1236.6153846153845', 'Gulnaz'), ('1236.7627118644068', 'Shakhnoza'), ('1236.7777777777778', 'Carlota'), ('1237.6363636363637', 'Anne Marie'), ('1237.9', 'Zhou'), ('1238.0625', 'Minami'), ('1239.6666666666667', 'Yu Tong'), ('1240.92', 'Sean'), ('1241.1379310344828', 'Siyu'), ('1242.0', 'Damini'), ('1243.0', 'Vilma Y'), ('1243.4', 'Moulika'), ('1243.4285714285713', 'Ana Luisa'), ('1243.875', 'Jaimy Gayle'), ('1243.904761904762', 'Jule'), ('1244.3333333333333', 'Frederikke'), ('1245.3333333333333', 'Constanze'), ('1245.75', 'Anastasiia'), ('1247.3333333333333', 'Jamilya'), ('1247.3636363636363', 'Marcelina'), ('1247.909090909091', 'Nataliya'), ('1248.2', 'Dilara'), ('1248.72', 'Ahlam'), ('1249.3333333333333', 'Warona'), ('1251.1333333333334', 'Hortencia'), ('1252.0', 'Anne Sophie'), ('1252.9130434782608', 'Vicky'), ('1253.4', 'Beatriz Magdalena'), ('1254.6341463414635', 'Boba'), ('1255.3333333333333', 'Adva'), ('1258.5', 'Mouna'), ('1261.8181818181818', 'Yasmyn'), ('1262.5416666666667', 'Janja'), ('1263.7666666666667', 'Yoo Ri'), ('1267.0', 'Jin'), ('127.06775067750678', 'Kaia'), ('1275.8235294117646', 'Andra Maria'), ('1281.8461538461538', 'Arthi'), ('1281.8461538461538', 'Chanikarn'), ('131.02074074074073', 'Tsvetana'), ('132.12638580931264', 'Paola'), ('1332.0737704918033', 'Micaela'), ('134.21917808219177', 'Catherine Cartan'), ('135.88910505836577', 'Tamira'), ('1382.1538461538462', 'Beauty'), ('1397.5', 'Olawaseun'), ('14.654294803817603', 'Serena'), ('143.48235294117646', 'Mallory'), ('144.3264367816092', 'Anabel'), ('146.59709379128137', 'Bethanie'), ('149.46360759493672', 'Jarmila'), ('1493.0', 'Damilola'), ('150.96681415929203', 'Roberta'), ('159.62397820163488', 'Kveta'), ('162.3505747126437', 'Sesil'), ('165.96132596685084', 'Kurumi'), ('166.41358024691357', 'Shahar'), ('166.6586270871985', 'Yung Jan'), ('167.50632911392404', 'Heather'), ('167.90740740740742', 'Shuai'), ('169.13578500707214', 'Melinda'), ('171.71134020618555', 'Dominika'), ('177.22695035460993', 'Sania'), ('182.02426160337552', 'Timea'), ('185.3469387755102', 'Michaella'), ('185.75', 'Vania'), ('186.76587795765877', 'Mirjana'), ('188.06095041322314', 'Lourdes'), ('194.2392065344224', 'Maria Elena'), ('195.66923570969814', 'Vera'), ('200.97080291970804', 'Aravane'), ('201.87700534759358', 'Anna Lena'), ('203.5871080139373', 'Sabine'), ('205.17590361445784', 'Lesia'), ('208.95263157894738', 'Misaki'), ('210.0846394984326', 'Monica'), ('211.01377118644066', 'Brenda'), ('211.41240310077518', 'Yaroslava'), ('211.67325428194994', 'Edina'), ('213.75043630017453', 'Sorana'), ('215.25185185185185', 'Akgul'), ('215.6615811373093', 'Chanelle'), ('217.2493188010899', 'Su Wei'), ('217.85922330097088', 'Alla'), ('218.4701086956522', 'Severine'), ('221.66153846153847', 'Anastasija'), ('222.81428571428572', 'Zarina'), ('223.50900900900902', 'Donna'), ('229.35687022900763', 'Urszula'), ('229.3774193548387', 'Garbine'), ('235.31431431431432', 'Klara'), ('236.07412398921832', 'Cara'), ('240.0448979591837', 'Vesna'), ('240.5306603773585', 'Janette'), ('246.19871794871796', 'Richel'), ('247.7449768160742', 'Tatjana'), ('248.74237737516572', 'Anne'), ('249.5244140625', 'Eleni'), ('252.11485774499474', 'Alize'), ('252.6093155893536', 'Barbora'), ('259.63589743589745', 'Sloane'), ('262.30884808013354', 'Junri'), ('265.79487179487177', 'Annika'), ('267.03227571115974', 'Svetlana'), ('268.05945945945945', 'Dinah'), ('270.5896860986547', 'Coco'), ('272.08855291576674', 'Kai Chen'), ('273.57517899761336', 'Mona'), ('274.85317919075146', 'Renata'), ('275.6055900621118', 'Lindsay'), ('279.16438356164383', 'Dalma'), ('279.23336006415394', 'Arantxa'), ('279.78655282817505', 'Marion'), ('280.79959100204496', 'Michelle'), ('281.871335504886', 'Mariya'), ('283.63246554364474', 'Romina'), ('284.22813688212926', 'Luksika'), ('284.8326771653543', 'Liezel'), ('284.8724727838258', 'Aiko'), ('285.84388185654007', 'Irina Camelia'), ('287.71625344352617', 'Kiki'), ('288.74423480083857', 'Irena'), ('289.60283687943263', 'Regina'), ('290.0614657210402', 'Rika'), ('290.64452214452217', 'Madison'), ('291.4792817679558', 'Kathrin'), ('293.76942355889724', 'Catalina'), ('294.33209990749305', 'Kateryna'), ('296.2025641025641', 'Vitalia'), ('296.5792682926829', 'Sharon'), ('296.8219584569733', 'Greta'), ('297.39032258064515', 'Saisai'), ('298.1861898890259', 'Pauline'), ('300.3974358974359', 'Magda'), ('300.56296296296296', 'Marie Eve'), ('302.83268482490274', 'Danka'), ('302.84831460674155', 'Ajla'), ('304.4619771863118', 'Raluca'), ('305.19563522992985', 'Galina'), ('306.1794310722101', 'Maria Jose'), ('308.56833824975416', 'Angelique'), ('308.64912280701753', 'Kirsten'), ('309.35767790262173', 'Xinyun'), ('310.3405299313052', 'Johanna'), ('311.87854251012146', 'Cagla'), ('312.54158964879855', 'Stanislava'), ('312.7584269662921', 'Kelly S'), ('313.45625', 'Nao'), ('318.2867132867133', 'Yvonne'), ('318.69978858350953', 'Carly'), ('32.984862819299906', 'Venus'), ('321.23595505617976', 'Eri'), ('322.17758620689654', 'Yurika'), ('322.62611607142856', 'Lucie'), ('323.1388101983003', 'Reka Luca'), ('323.86176470588236', 'Maryna'), ('324.3720930232558', 'Elena'), ('324.63613231552165', 'Madalina'), ('325.5912596401028', 'Margalita'), ('325.6162790697674', 'Yafan'), ('331.3681818181818', 'Ashleigh'), ('331.93949394939494', 'Katalin'), ('334.7118644067797', 'Elise'), ('337.5292682926829', 'Mervana'), ('340.2890442890443', 'Sacha'), ('342.40130505709624', 'Caroline'), ('343.0985324947589', 'Tadeja'), ('343.22432701894314', 'Alberta'), ('343.25546975546973', 'Kristina'), ('343.2835365853659', 'Chanel'), ('345.51020408163265', 'Anna Karolina'), ('347.34943639291464', 'Estrella'), ('348.19338235294117', 'Jelena'), ('348.54794520547944', 'Kyoka'), ('348.6364892881825', 'Daniela'), ('349.54794520547944', 'Aryna'), ('353.44444444444446', 'Marketa'), ('355.7223168654174', 'Masa'), ('355.88102893890675', 'Virginie'), ('356.0105210420842', 'Lisa'), ('356.8219696969697', 'Corinna'), ('359.3764705882353', 'Chia Jung'), ('359.81081081081084', 'Maria Teresa'), ('361.0', 'Mandy'), ('365.50280484204313', 'Petra'), ('367.2274678111588', 'Anett'), ('368.14331210191085', 'Valentyna'), ('368.26881720430106', 'Sachie'), ('369.1620469083156', 'Jing Jing'), ('372.32502965599053', 'Melanie'), ('372.89398280802294', 'Shelby'), ('374.93926247288505', 'Noppawan'), ('376.47888446215137', 'Flavia'), ('376.7356115107914', 'Mihaela'), ('376.7617554858934', 'Nigina'), ('378.0163727959698', 'Casey'), ('380.5308641975309', 'Louisa'), ('380.609375', 'Danica'), ('381.2581602373887', 'Yanina'), ('381.5512572533849', 'Yi Fan'), ('382.6888217522659', 'Varvara'), ('382.82479784366575', 'Lyudmyla'), ('383.4714587737844', 'Qiang'), ('383.6413199426112', 'Claudine'), ('383.7832512315271', 'Dia'), ('383.9921465968586', 'Alexa'), ('384.87776983559684', 'Yuliya'), ('385.2651515151515', 'Chin Wei'), ('385.8135593220339', 'Patty'), ('386.7025316455696', 'Tamaryn'), ('387.5662100456621', 'Taylor'), ('387.66706161137444', 'Abigail'), ('387.73412112259973', 'Stefanie'), ('387.87113402061857', 'Liana Gabriela'), ('390.0', 'Conny'), ('390.2361111111111', 'Tessah'), ('391.3003629764065', 'Agnes'), ('391.4656290531777', 'Zi'), ('392.44444444444446', 'Elena Gabriela'), ('392.7313829787234', 'Bojana'), ('395.6680227827502', 'Nuria'), ('396.225', 'Georgina'), ('396.2893280632411', 'Ana'), ('397.83561643835617', 'Ayla'), ('398.3106546854942', 'Vanessa'), ('398.83478260869566', 'Tetyana'), ('400.8093385214008', 'Sachia'), ('401.0998263888889', 'Katarina'), ('402.36756756756756', 'Jamie'), ('402.49931972789113', 'Romana'), ('403.48784576697403', 'Alison'), ('403.8775981524249', 'Ying Ying'), ('403.935', 'Patricia Maria'), ('406.21702404158543', 'Samantha'), ('406.5511363636364', 'Cory Ann'), ('406.6258503401361', 'Jana'), ('406.9281767955801', 'Fangzhou'), ('407.029702970297', 'Mayo'), ('407.5463976945245', 'Nadia'), ('410.8463541666667', 'Mailen'), ('411.5068493150685', 'Usue Maitane'), ('411.70779777206513', 'Carla'), ('412.74466019417474', 'Ayumi'), ('414.4332292750607', 'Andrea'), ('414.66339869281046', 'Evgenia'), ('415.7', 'Kathinka'), ('415.9078341013825', 'Amra'), ('416.3666666666667', 'Carina'), ('417.44323483670297', 'Heidi'), ('417.8053097345133', 'Susanne'), ('418.2566137566138', 'Yi Miao'), ('418.39748953974896', 'Elitsa'), ('418.81925343811395', 'Ling'), ('419.1633466135458', 'Denisa'), ('419.32988047808766', 'Marta'), ('421.44179894179894', 'Shuko'), ('421.6573033707865', 'Elina'), ('424.64521739130436', 'Andreja'), ('425.82394366197184', 'Tina'), ('426.3886462882096', 'Su Jeong'), ('426.6002565198803', 'Maria'), ('427.0', 'Ronit'), ('428.5496828752643', 'Anna Giulia'), ('430.0872542522642', 'Anastasia'), ('431.19607843137254', 'Robin'), ('431.3144424131627', 'Ye Ra'), ('432.6511627906977', 'Olga'), ('432.6949152542373', 'Anhelina'), ('434.68', 'Danielle Rose'), ('435.1470588235294', 'Ons'), ('436.66881028938906', 'Nudnida'), ('436.84339509862525', 'Irina'), ('437.05298013245033', 'Francoise'), ('437.11396648044695', 'Mathilde'), ('437.4119658119658', 'Tetiana'), ('437.73858921161826', 'Chiaki'), ('437.86915887850466', 'Jasmine'), ('438.4245810055866', 'Maiko'), ('439.5747863247863', 'Cristina Andreea'), ('439.81414868105514', 'Ivana'), ('439.87772357723577', 'Stephanie'), ('440.35214446952597', 'Wen Hsin'), ('441.9846743295019', 'Aliaksandra'), ('442.0344827586207', 'Evgeniya'), ('443.0228531855956', 'Maria Fernanda'), ('443.45754716981133', 'Claire'), ('443.6296006264683', 'Magdalena'), ('443.76148409893995', 'Kyra'), ('443.8467908902692', 'Kristyna'), ('444.96190476190475', 'Yue Yue'), ('444.9760935910478', 'Victoria'), ('445.18918918918916', 'Kristie'), ('446.7231833910035', 'Olivia'), ('447.93283582089555', 'Miyabi'), ('450.22998544395927', 'Aleksandra'), ('450.4642082429501', 'Varatchaya'), ('451.33577981651376', 'Lenka'), ('451.5810397553517', 'Florencia'), ('451.8657487091222', 'Sheng Nan'), ('451.92875448487956', 'Zuzana'), ('452.625', 'Ilona'), ('453.01556420233464', 'Alisa'), ('453.43392070484583', 'Asia'), ('454.06233062330625', 'Grace'), ('454.9920529801324', 'Christina'), ('457.4050279329609', 'Beatriz'), ('458.86633663366337', 'Ysaline'), ('459.29286608260327', 'Katarzyna'), ('460.8932038834951', 'An Sophie'), ('461.06702898550725', 'Teliana'), ('462.4270462633452', 'Monique'), ('464.1367781155015', 'Chi Chi'), ('464.95631067961165', 'Darija'), ('465.24962852897477', 'Pemra'), ('467.24657534246575', 'Xiaodi'), ('471.5439093484419', 'Evelyn'), ('471.8367290748899', 'Ekaterina'), ('472.338003502627', 'Karin'), ('475.2979683972912', 'Tara'), ('477.62886597938143', 'Eugenie'), ('478.30369515011546', 'Polona'), ('479.51738241308794', 'Roxane'), ('479.5530612244898', 'Ayu Fani'), ('479.8914728682171', 'Valentini'), ('480.646017699115', 'Xinyu'), ('481.3229166666667', 'Leticia'), ('482.26169844020797', 'Anais'), ('482.36648501362396', 'Ksenia'), ('482.43243243243245', 'Ioana Diana'), ('483.77464788732397', 'Destanee'), ('483.97225572979494', 'Naomi'), ('484.9442231075697', 'Lauren'), ('485.35135135135135', 'Yulia'), ('485.40168539325845', 'Myrtille'), ('485.46875', 'Nicoleta Catalina'), ('485.9559748427673', 'Indy'), ('486.6092544987147', 'Maria Joao'), ('487.6268656716418', 'Raveena'), ('488.76107382550333', 'Kumiko'), ('488.7671232876712', 'Xu Liu'), ('489.27513227513225', 'Teodora'), ('489.5294964028777', 'Iryna'), ('489.5307517084282', 'Elizaveta'), ('489.65909090909093', 'Risa'), ('490.4144736842105', 'Aranza'), ('491.8507295173962', 'Katerina'), ('492.6608695652174', 'Katy'), ('492.8915187376726', 'Jin A'), ('493.98205383848455', 'Akiko'), ('494.6111111111111', 'Remi'), ('495.22641509433964', 'Riko'), ('496.7156398104265', 'Ana Sofia'), ('496.9431818181818', 'Alyona'), ('497.42124542124543', 'Lin'), ('499.4127634660422', 'Nicole'), ('500.29483037156706', 'Eva'), ('500.688679245283', 'Shiho'), ('501.0619469026549', 'Jil Belen'), ('501.44444444444446', 'Olesya'), ('501.5860215053763', 'Jesika'), ('504.4145867098865', 'Laura'), ('506.39344262295083', 'Ulrikke'), ('507.4', 'Viktorija'), ('508.340206185567', 'Ellie'), ('508.4679802955665', 'Paula Cristina'), ('509.80945757997216', 'Sara'), ('512.1515151515151', 'Haruna'), ('512.3787128712871', 'Julie'), ('514.1732026143791', 'So Jung'), ('514.586319218241', 'Peangtarn'), ('514.7174515235457', 'Lesley'), ('515.3191489361702', 'Nicha'), ('516.1982942430703', 'Laura Ioana'), ('516.6615384615385', 'Makoto'), ('520.9397993311037', 'Doroteja'), ('521.5358361774744', 'Justine'), ('522.6561403508772', 'Kai Lin'), ('522.984693877551', 'Krista'), ('523.2788844621514', 'Miharu'), ('524.7444668008048', 'Chen'), ('524.9192825112108', 'Ana Clara'), ('525.9552572706936', 'Dalila'), ('526.2644836272041', 'Gail'), ('526.3535641547861', 'Sofia'), ('526.3698630136986', 'Mari'), ('528.8673050615595', 'Nina'), ('529.583908045977', 'Sally'), ('529.7777777777778', 'Jia Qi'), ('531.1829405162739', 'Darya'), ('532.6881807180315', 'Marina'), ('533.433770014556', 'Kyung Mi'), ('533.5940594059406', 'Georgia'), ('533.9586374695864', 'Chieh Yu'), ('533.9652351738241', 'Oksana'), ('534.890243902439', 'Hiroko'), ('537.577922077922', 'Nungnadda'), ('539.6164383561644', 'Raluca Georgiana'), ('539.7944621938232', 'Camila'), ('541.1570881226054', 'Sofiya'), ('541.273631840796', 'Bernarda'), ('541.952380952381', 'Montserrat'), ('542.2382851445662', 'Simona'), ('542.7168141592921', 'Nanuli'), ('543.031185031185', 'Nathalia'), ('543.968253968254', 'Hanyu'), ('544.1627906976744', 'Freya'), ('544.2636655948553', 'Marija'), ('544.5041866028708', 'Erika'), ('545.449074074074', 'Yuxuan'), ('546.5551763367463', 'Sarah'), ('547.277108433735', 'Greetje'), ('547.7037037037037', 'Natsumi'), ('550.1941544885177', 'Bibiane'), ('550.9545454545455', 'Dea'), ('551.5304659498208', 'Deniz'), ('551.5557158312297', 'Anna'), ('552.4653465346535', 'Ayaka'), ('553.9434782608696', 'Ekaterine'), ('554.3953934740883', 'Mi'), ('554.5290322580645', 'Nastassja'), ('554.5376344086021', 'Cristiana'), ('555.3384615384615', 'Bunyawi'), ('555.6572164948453', 'Vojislava'), ('556.0428051001821', 'Mariana'), ('556.2303370786517', 'Azra'), ('556.7936681222708', 'Jennifer'), ('557.241418764302', 'Tereza'), ('557.9232456140351', 'Allie'), ('558.0162601626016', 'Paula'), ('560.6778190830236', 'Arina'), ('562.8450704225352', 'Jaimee'), ('563.964505613908', 'Sandra'), ('564.1434426229508', 'Carol'), ('565.8211508553654', 'Silvia'), ('566.4943396226415', 'Natela'), ('566.7873931623932', 'Isabella'), ('566.9148936170212', 'Viktoria'), ('567.0507399577167', 'Korina'), ('567.8518518518518', 'Gioia'), ('567.9464544138929', 'Liga'), ('568.2547169811321', 'Kamila'), ('568.3374316939891', 'Rebecca'), ('569.1904761904761', 'Fanny'), ('569.2647632558965', 'Alexandra'), ('570.2723004694835', 'Constance'), ('570.534951862704', 'Francesca'), ('572.2654545454545', 'So Ra'), ('572.8059701492538', 'Patricia'), ('573.5197368421053', 'Na Ri'), ('573.6708333333333', 'Storm'), ('573.8729603729604', 'Rushmi'), ('574.8723404255319', 'Harmony'), ('574.9808362369338', 'Lina'), ('575.4626436781609', 'Chang'), ('576.4307692307692', 'Dayana'), ('576.9', 'Klaartje'), ('576.9173467252564', 'Julia'), ('577.9677419354839', 'Natalie'), ('578.07962529274', 'Aleksandrina'), ('578.1381578947369', 'Irina Maria'), ('578.5', 'Jiaxi'), ('579.2153846153847', 'Irene'), ('579.437984496124', 'Vanesa'), ('579.5214723926381', 'Elixane'), ('583.1686746987951', 'Kayla'), ('583.530303030303', 'Ching Wen'), ('583.9347826086956', 'Annalisa'), ('584.359375', 'Giuliana'), ('585.093851132686', 'Emily'), ('585.2589641434263', 'Wing Yau Venise'), ('585.8517745302714', 'Justyna'), ('586.2250489236791', 'Miki'), ('586.865', 'Ya Hsuan'), ('586.9412296564195', 'Karolina'), ('589.1298076923077', 'Antonia'), ('591.2544731610338', 'Audrey'), ('591.3809523809524', 'Ivonne'), ('592.5990783410139', 'Jan'), ('593.1506849315068', 'Mizuno'), ('593.1772853185596', 'Nastja'), ('593.9759036144578', 'Chayenne'), ('594.9036697247707', 'Miyu'), ('594.9436936936937', 'Lena'), ('595.3291666666667', 'Vlada'), ('597.6981132075472', 'Ayano'), ('598.2655172413793', 'Ran'), ('600.6881091617934', 'Sophie'), ('601.906914893617', 'Tammi'), ('601.9846625766871', 'Jovana'), ('604.15', 'Alexis'), ('606.1467576791808', 'Kinnie'), ('606.7211740041929', 'Ganna'), ('607.2810218978102', 'Vivien'), ('607.3360995850622', 'Macall'), ('608.1309090909091', 'Yuuki'), ('608.7791798107255', 'Na Lae'), ('609.90625', 'Chantal'), ('611.0757575757576', 'Sunam'), ('611.35', 'Aliona'), ('611.4060995184591', 'Margarita'), ('612.0185185185185', 'Fang Ying'), ('612.736', 'Lavinia'), ('613.195652173913', 'Aminat'), ('613.5330490405117', 'Vasilisa'), ('614.0434782608696', 'Tamara'), ('614.9346733668342', 'Tena'), ('615.1506849315068', 'Dhruthi'), ('615.2230215827338', 'Chinami'), ('617.0379241516966', 'Misa'), ('617.3333333333334', 'Ao'), ('617.4615384615385', 'Nathaly'), ('617.4935251798561', 'Estelle'), ('618.4714285714285', 'Ankita'), ('618.6923076923077', 'Kimberly'), ('619.4154929577464', 'Pernilla'), ('619.6814159292036', 'Adriana'), ('619.9064748201439', 'Mayya'), ('620.4120171673819', 'Clothilde'), ('620.6746411483253', 'Eugeniya'), ('620.9404580152672', 'Katie'), ('622.7673469387755', 'Manon'), ('624.6089494163424', 'Jacqueline'), ('625.013698630137', 'Berfu'), ('626.441935483871', 'Milana'), ('627.12', 'Adrijana'), ('627.7027027027027', 'Indire'), ('627.7777777777778', 'Zhanlan'), ('628.075', 'Miriam Bianca'), ('629.0081967213115', 'Zhaoxuan'), ('629.6443987667009', 'Daria'), ('630.7953529937444', 'Polina'), ('631.8181818181819', 'Nadja'), ('632.2824427480916', 'Shilin'), ('632.3150684931506', 'Snehadevi S'), ('633.027027027027', 'Jasmin'), ('633.5454545454545', 'Kaja'), ('633.9770491803279', 'Quirine'), ('634.3620689655172', 'Natalija'), ('634.7950310559006', 'Melis'), ('635.346516007533', 'Kanae'), ('635.7449168207024', 'Sung Hee'), ('637.4607407407408', 'Nadiya'), ('638.6666666666666', 'Rianna'), ('638.88', 'Ashley'), ('640.8727272727273', 'Sofya'), ('641.046992481203', 'Emma'), ('642.1811989100818', 'Jasmina'), ('642.9487179487179', 'Ylona Georgiana'), ('643.422641509434', 'Keren'), ('643.616049382716', 'Cristina'), ('643.6939163498099', 'Lara'), ('643.9216101694915', 'Daniella'), ('645.2279792746114', 'Carolin'), ('646.0441176470588', 'Ioana Loredana'), ('647.5205479452055', 'Britt'), ('647.922077922078', 'Fernanda'), ('648.2984054669704', 'Fatma'), ('649.5154639175257', 'Sherazad'), ('650.1206896551724', 'Theo'), ('650.1367521367522', 'Chalena'), ('650.6240276577355', 'Amanda'), ('651.4246575342465', 'Riya'), ('652.1984732824427', 'Elyne'), ('652.917808219178', 'Karman'), ('653.2805383022775', 'Bianca'), ('653.5070422535211', 'Prarthana G'), ('654.3773657782928', 'Diana'), ('655.7464059804486', 'Jessica'), ('655.7828348504552', 'Ipek'), ('656.2851711026616', 'Eduarda'), ('656.2932551319648', 'Basak'), ('656.8787276341948', 'Yi Jing'), ('657.0171919770773', 'Marcella'), ('657.3816155988858', 'Patrycja'), ('657.8934169278997', 'Lena Marie'), ('658.5074074074074', 'Arabela'), ('659.2103004291846', 'Vivienne'), ('659.3055555555555', 'Cindy'), ('660.8924731182796', 'Ola'), ('661.2222222222222', 'Xenia'), ('661.3972602739726', 'Ying'), ('661.8474576271186', 'Valeria'), ('661.9589041095891', 'Kajsa'), ('662.1182795698925', 'Mariam'), ('665.686684073107', 'Despina'), ('665.8219178082192', 'Sadafmoh'), ('666.1496062992126', 'Lizette'), ('666.2853403141361', 'Natasa'), ('668.2581196581197', 'Piia'), ('669.2982456140351', 'Dijana'), ('669.448275862069', 'Ria'), ('669.8542372881356', 'Romana Caroline'), ('670.9108527131783', 'Vivian'), ('671.2584369449378', 'Anastasiya'), ('672.2258064516129', 'Raluca Elena'), ('672.730407523511', 'Emelyn'), ('673.6507936507936', 'Lisanne'), ('673.6635071090047', 'Hilda'), ('673.7509157509157', 'Fatima'), ('673.9809523809524', 'Pei Chi'), ('674.9672514619883', 'Karen'), ('675.2445414847161', 'Chloe'), ('675.4124293785311', 'Priscilla'), ('676.1090909090909', 'Rebeka'), ('676.90589198036', 'Michaela'), ('677.4458598726114', 'Laetitia'), ('680.1050228310502', 'Hao Chen'), ('680.1724137931035', 'Lou'), ('680.677700348432', 'Katharina'), ('681.7736842105263', 'Belinda'), ('681.9417582417583', 'Tatiana'), ('682.0972222222222', 'Emina'), ('682.2005532503458', 'Sabina'), ('682.961038961039', 'Jia Jing'), ('683.1081081081081', 'Panna'), ('684.4892086330935', 'Josephine'), ('684.8497652582159', 'Agustina'), ('686.2234432234433', 'Angelica'), ('686.3047619047619', 'Oana Georgeta'), ('686.6470588235294', 'Elena Teodora'), ('687.0229885057471', 'Ines'), ('687.25', 'Mai'), ('687.3120567375887', 'Kim'), ('689.891129032258', 'Mana'), ('691.9934640522875', 'Sviatlana'), ('692.1515151515151', 'Macarena'), ('692.390625', 'Chun Mei'), ('693.6215943491422', 'Giulia'), ('694.0659898477157', 'Agnese'), ('694.2', 'Shanshan'), ('694.341935483871', 'Harriet'), ('694.4808743169399', 'Xin'), ('695.574074074074', 'Marie'), ('696.2878787878788', 'Tess'), ('696.4126984126984', 'Vanda'), ('696.4752475247525', 'Helene'), ('696.7697332607512', 'Gabriela'), ('696.952380952381', 'Bianka'), ('696.9606060606061', 'Karina Ildor'), ('698.7567567567568', 'Suzy'), ('698.8285714285714', 'Yuki Kristina'), ('699.7864583333334', 'Janina'), ('700.7644444444444', 'Raquel'), ('701.4009009009009', 'Wan Ting'), ('702.1784386617101', 'Yasmin'), ('703.1372549019608', 'Sanaz'), ('704.9618138424821', 'Akari'), ('705.4688346883469', 'Benedetta'), ('705.4716981132076', 'Emilie'), ('705.5625', 'Iga'), ('705.8493150684932', 'Qiu Yu'), ('707.1467889908257', 'Julieta Lara'), ('708.618398637138', 'Celine'), ('709.4247787610619', 'Caitlin'), ('709.625', 'Zarah'), ('710.3822682786414', 'Alice'), ('710.3972602739726', 'Petia'), ('710.9617224880383', 'Aki'), ('712.2780373831775', 'Ximena'), ('714.8653846153846', 'Xi Yao'), ('716.3150684931506', 'Gozal'), ('717.7932330827068', 'Bermet'), ('718.047619047619', 'Michika'), ('718.5202702702703', 'Alexia'), ('718.725321888412', 'Carolina'), ('719.3061224489796', 'Chelsey'), ('720.132932166302', 'Natalia'), ('720.1431870669746', 'Ani'), ('720.6428571428571', 'Cristina Madalina'), ('720.7490039840637', 'Daiana'), ('721.14', 'Jillian'), ('721.1643835616438', 'Mirabelle'), ('722.5087719298245', 'Lilla'), ('722.6986301369863', 'Dasha'), ('722.7286493034525', 'Federica'), ('723.484076433121', 'Nikola'), ('724.5', 'Sofie'), ('724.8712871287129', 'Yevgeniya'), ('724.9178743961353', 'Isabel'), ('725.3893333333333', 'Anja'), ('725.5322195704057', 'Yuliana'), ('726.1737089201878', 'Hua Chen'), ('726.1852387843704', 'Veronica'), ('726.2657657657658', 'Andreea Roxana'), ('728.5', 'Ahsha'), ('728.7443609022556', 'Sina'), ('728.7630208333334', 'Oceane'), ('729.0117647058823', 'Vendula'), ('729.0671936758894', 'Hyun Hui'), ('729.1047904191616', 'Poojashree'), ('730.3831168831168', 'Marianna'), ('732.1666666666666', 'Julyette Maria Josephine'), ('732.4260679079956', 'Maya'), ('732.7386018237082', 'Iva'), ('733.1351351351351', 'Erina'), ('734.0', 'Magali'), ('734.6018957345972', 'Veronika'), ('736.1650485436893', 'Di'), ('736.2288557213931', 'Viktoriya'), ('736.4809523809524', 'Megan'), ('736.9747747747748', 'Elizabeth'), ('737.7547169811321', 'Xiaoxi'), ('737.862676056338', 'Pia'), ('739.04802259887', 'Jade'), ('739.7727272727273', 'Ting Fei'), ('740.0214504596527', 'Yana'), ('740.5361842105264', 'Prerna'), ('740.5879828326181', 'Pilar'), ('743.1953125', 'Tjasa'), ('743.6062176165804', 'Sarah Rebecca'), ('744.0', 'Caty'), ('744.7453250222618', 'Danielle'), ('745.421052631579', 'Neda'), ('745.433962264151', 'Maia'), ('746.0962962962963', 'Despoina'), ('746.4803493449782', 'Yurina'), ('747.3172413793103', 'Tayisiya'), ('747.3695652173913', 'Saska'), ('747.4375', 'Amandine'), ('748.0', 'Maddison'), ('748.6622691292876', 'Ingrid Esperanza'), ('748.7238095238096', 'Jaqueline Adina'), ('748.8250591016548', 'Yuka'), ('749.3582089552239', 'Chiraz'), ('750.3207810320781', 'Angelina'), ('750.9460093896714', 'Ellen'), ('751.2668918918919', 'Valentine'), ('751.8679119412942', 'Martina'), ('753.2253164556962', 'Nicola'), ('753.8346456692914', 'Margot'), ('755.4649681528663', 'Cecilia'), ('755.5813953488372', 'Peggy'), ('756.2549019607843', 'Kaitlyn'), ('756.3141592920354', 'Lucy'), ('757.2253521126761', 'Cornelia'), ('758.06', 'Lisa Maria'), ('758.1714285714286', 'Romy'), ('758.5342960288808', 'Dejana'), ('759.2894995093228', 'Stefania'), ('759.5352697095435', 'Gaia'), ('760.4920634920635', 'Jaeda'), ('760.639175257732', 'Anna Arina'), ('762.1578947368421', 'Nidhi'), ('762.4081632653061', 'Kim Alice'), ('762.7606382978723', 'Anne Liz'), ('763.1014492753624', 'Georgia Andreea'), ('763.888198757764', 'Amy'), ('763.8900651465798', 'Barbara'), ('764.6785714285714', 'Deborah'), ('765.1395348837209', 'Kamonwan'), ('765.3777777777777', 'Zoe'), ('766.2549019607843', 'Ingrid'), ('766.4794520547945', 'Charlene'), ('767.4963503649635', 'Naiktha'), ('767.7730496453901', 'Jeannine'), ('768.560975609756', 'Yan'), ('770.8472222222222', 'Emi'), ('772.2402912621359', 'Kazusa'), ('772.2857142857143', 'Genevieve'), ('772.3186813186813', 'Szabina'), ('772.6981132075472', 'Momoko'), ('772.8571428571429', 'Akilah'), ('773.5666666666667', 'Leolia'), ('774.5654761904761', 'Marine'), ('774.64', 'Marcela'), ('774.6837606837607', 'Haruka'), ('775.2734375', 'Albina'), ('775.7269624573379', 'Rishika'), ('778.1648648648649', 'Nicolette'), ('780.7905027932961', 'Klaudia'), ('781.3218390804598', 'Etsuko'), ('781.6993464052288', 'Isabelle'), ('783.1711711711712', 'Marrit'), ('783.8288043478261', 'Gracia'), ('784.0465949820789', 'Seung Yeon'), ('784.8009049773756', 'Makiho'), ('785.0707482993197', 'Beatrice'), ('787.0', 'Maegan'), ('787.5416666666666', 'Ludmilla'), ('787.7645348837209', 'Sylwia'), ('788.0384615384615', 'Erica'), ('788.2622950819672', 'Mira'), ('789.2857142857143', 'Chengyiyi'), ('789.6113989637306', 'Ting Jr'), ('790.1538461538462', 'Adeliya'), ('790.46875', 'Asiya'), ('791.0756207674943', 'Yi'), ('791.1240506329113', 'Syna'), ('791.2352941176471', 'Zeel'), ('792.1927710843373', 'Sri Vaishnavi'), ('792.5', 'Gabriella'), ('794.4931506849315', 'Jiahui'), ('794.5416666666666', 'Zuzanna'), ('794.7118644067797', 'Gloria'), ('795.4736842105264', 'Pranjala'), ('795.6201232032854', 'Rocio'), ('797.2128378378378', 'Lidziya'), ('797.383606557377', 'Guadalupe'), ('798.3181818181819', 'Kylie'), ('799.0552486187845', 'Ionela Andreea'), ('799.0650406504066', 'Carolina Meligeni Rodrigues'), ('799.1332586786115', 'Yumi'), ('799.1875', 'Matilda'), ('799.8668224299065', 'Valeriya'), ('799.9940828402367', 'Kanami'), ('801.6712328767123', 'Yixuan'), ('801.6850649350649', 'Camilla'), ('801.6933333333334', 'Dalia'), ('801.84375', 'Andreea Amalia'), ('802.7222222222222', 'Thai Sa Grana'), ('803.3904761904762', 'Ashvarya'), ('803.7139479905437', 'Camelia Elena'), ('803.8666666666667', 'Domenica'), ('803.9764705882353', 'Amina'), ('804.6277056277056', 'Brooke'), ('804.873831775701', 'Kelly'), ('805.7028985507246', 'Dana'), ('806.2648401826484', 'Valerie'), ('807.616', 'Karla'), ('807.7222222222222', 'Kennedy'), ('808.4545454545455', 'Abbie'), ('808.5096774193548', 'Rutuja'), ('809.697247706422', 'Dianne'), ('810.6666666666666', 'Tinatin'), ('812.4581005586592', 'Sun Jung'), ('812.6', 'Ju Eun'), ('812.85', 'Meiling'), ('813.1351351351351', 'Giada'), ('813.1357142857142', 'Sowjanya'), ('814.4171122994652', 'Xiao'), ('818.2043795620438', 'Jessika'), ('819.3400503778338', 'Ema'), ('819.8425531914894', 'Min Hwa'), ('82.13112391930835', 'Na'), ('820.4563492063492', 'Alena'), ('820.59375', 'Luisa Marie'), ('822.3459915611814', 'Alix'), ('823.0909090909091', 'Ashling'), ('823.6306306306307', 'Clelia'), ('823.8770833333333', 'Vladimira'), ('823.9789029535865', 'Ji Hee'), ('824.3936170212766', 'Yukun'), ('825.039603960396', 'Malin'), ('825.7291666666666', 'Nazari'), ('825.972972972973', 'Leonie'), ('826.0238095238095', 'Komola'), ('826.1388888888889', 'Qianhui'), ('826.2619047619048', 'Claudia'), ('826.6486486486486', 'Phillis'), ('828.0675675675676', 'Nagi'), ('829.5625', 'Astra'), ('832.7818181818182', 'Corina'), ('832.9585365853659', 'Sakiko'), ('833.5061082024433', 'Ji Young'), ('834.1005025125628', 'Bernice'), ('834.2066115702479', 'Borislava'), ('835.1132075471698', 'Constanza'), ('836.6804511278195', 'Katherine'), ('837.7730496453901', 'Kristy'), ('838.1780821917808', 'Manca'), ('838.8065217391304', 'Tomoko'), ('839.4923664122138', 'Ofri'), ('840.0776699029126', 'Saray'), ('841.0514705882352', 'Nives'), ('841.4051724137931', 'Christine'), ('841.7167381974249', 'Tori'), ('841.8387096774194', 'Stamatia'), ('842.1553398058253', 'Carmen Raluca'), ('842.7045454545455', 'Eetee'), ('842.8446601941747', 'Ana Bianca'), ('843.6428571428571', 'Mirjam'), ('843.7260273972603', 'Alba'), ('843.9007633587786', 'Nicky'), ('844.0692307692308', 'Ulyana'), ('844.203007518797', 'Svenja'), ('844.3856812933026', 'Hae Sung'), ('844.7460317460317', 'Kotomi'), ('844.9310344827586', 'Yoon Young'), ('845.375', 'Imane Maelle'), ('845.740638002774', 'Lucia'), ('845.986301369863', 'Lucrezia'), ('846.2727272727273', 'Ludmila'), ('846.9154228855722', 'Kimberley'), ('847.0941176470589', 'Ilze'), ('848.4418604651163', 'Xiaorong'), ('848.9908952959029', 'Chihiro'), ('850.9791666666666', 'Anhzelika'), ('851.1224489795918', 'Marta Huqi'), ('851.5633802816901', 'Sharmada'), ('853.3908045977012', 'Fiona'), ('854.3170731707318', 'Brianna'), ('855.813627254509', 'Alicja'), ('856.0782608695653', 'Vladyslava'), ('857.1692307692308', 'Yukina'), ('857.9508196721312', 'Sang Hee'), ('858.4107142857143', 'Lea'), ('858.9173789173789', 'Seo Kyung'), ('859.2706766917294', 'Rachael'), ('859.3059701492538', 'Anamika'), ('859.8103448275862', 'Vaszilisza'), ('859.8644067796611', 'Luca'), ('860.8104265402843', 'Hirono'), ('861.5050505050505', 'Maria Constanza De Las Mercedes'), ('861.5102040816327', 'Janneke'), ('863.3225806451613', 'Joana'), ('863.5507246376811', 'Patcharin'), ('863.7826086956521', 'Desirae'), ('864.1538461538462', 'Shuo'), ('866.0454545454545', 'Oyku'), ('866.0693069306931', 'Min'), ('866.1075949367089', 'Iris'), ('867.5288461538462', 'Zalina'), ('868.2191780821918', 'Ilka'), ('868.6521739130435', 'Nadezda'), ('868.7624113475177', 'Paula Catalina'), ('868.8904109589041', 'Karine'), ('869.1666666666666', 'Mary'), ('869.1702127659574', 'Sylvia'), ('869.3571428571429', 'Ingrid Alexandra'), ('870.9007633587786', 'Liz Tatiane'), ('871.0790513833992', 'Kaori'), ('871.109375', 'Ivania'), ('871.6926829268293', 'Alona'), ('872.0', 'Ivone'), ('872.0930232558139', 'Breaunna'), ('873.6229508196722', 'Karoline'), ('874.8181818181819', 'Chisa'), ('875.0', 'Mahak'), ('875.9277108433735', 'Sarah Beth'), ('875.9772727272727', 'Clemence'), ('876.1730769230769', 'Eliessa'), ('876.7428571428571', 'Yuki'), ('878.0138888888889', 'Bhuvana'), ('878.1666666666666', 'Tornado Alicia'), ('878.3939393939394', 'Andrea Renee'), ('878.4606741573034', 'Ziyue'), ('878.6666666666666', 'Nam Yeon'), ('880.6527777777778', 'Morgane'), ('882.1071428571429', 'Katharine'), ('883.0777142857143', 'Natasha'), ('883.2352941176471', 'Quinn'), ('883.6090909090909', 'Karina'), ('883.7787610619469', 'Noelle'), ('885.0976744186047', 'Sonja'), ('885.7495107632094', 'Luciana'), ('886.1407407407407', 'Whitney'), ('887.2875', 'Liubov'), ('887.4545454545455', 'Lesedi Sheya'), ('887.502487562189', 'Kyle'), ('888.0055096418732', 'Hulya'), ('888.2213114754098', 'Elisabeth'), ('888.7272727272727', 'Satsuki'), ('889.8028169014085', 'Seone'), ('890.4455445544554', 'Nan Nan'), ('890.6351351351351', 'Carmen'), ('890.8728448275862', 'Ai'), ('891.2340425531914', 'Yuanyi'), ('891.6309523809524', 'Mayar'), ('892.3561643835617', 'Ylena'), ('894.3846153846154', 'Varunya'), ('896.7413793103449', 'Maja'), ('897.0974358974358', 'Manisha'), ('897.4873949579832', 'Yelena'), ('897.6951219512196', 'Shweta'), ('899.9150326797386', 'Libby'), ('900.75', 'Merel'), ('901.3333333333334', 'Kaitlin'), ('901.8717948717949', 'Ayan'), ('902.1470588235294', 'Jenny'), ('903.1666666666666', 'Francisca'), ('903.4289156626506', 'Oleksandra'), ('903.5769230769231', 'Karyn'), ('904.6538461538462', 'Blanca'), ('905.6324786324786', 'Sabrina'), ('907.3557312252965', 'Lu'), ('907.4', 'Ann'), ('908.156862745098', 'Lee'), ('908.3962264150944', 'Mara'), ('909.2', 'Jada'), ('910.396694214876', 'Katherine Gabriela'), ('910.5714285714286', 'Laura D'), ('911.7241379310345', 'Eudice Wong'), ('911.7619047619048', 'Suellen'), ('912.1077844311377', 'Tatsiana'), ('912.120218579235', 'Miriam'), ('912.1523178807947', 'Ai Wen'), ('912.71875', 'Blair'), ('913.4380165289256', 'Nika'), ('913.7272727272727', 'Draginja'), ('914.5321100917431', 'Hayley'), ('914.8607594936709', 'Hongrui'), ('915.5892857142857', 'Pavla'), ('915.5932203389831', 'Aymet'), ('916.559633027523', 'Zsofia'), ('916.7115384615385', 'Anna Katalina'), ('917.0', 'Brienne'), ('918.0769230769231', 'Maria Lourdes'), ('919.6147540983607', 'Ineke'), ('920.1276595744681', 'Dabin'), ('921.3333333333334', 'Valentina'), ('921.6216216216217', 'Nora'), ('922.2255639097745', 'Anaeve'), ('924.2782608695652', 'Kana'), ('924.8818897637796', 'Shakhlo'), ('924.9325842696629', 'Josepha'), ('925.0028776978418', 'Alina'), ('925.4230769230769', 'Jodie Anna'), ('925.9865771812081', 'Ho Ching'), ('927.0350877192982', 'Kassandra'), ('927.7647058823529', 'Charlotte'), ('928.3333333333334', 'Karola Patricia'), ('929.0599369085173', 'Dunja'), ('929.4388489208633', 'Napatsakorn'), ('929.4398496240601', 'Linda'), ('929.6928104575163', 'Natia'), ('930.7027027027027', 'Naima'), ('931.025641025641', 'Joanna'), ('932.8940397350993', 'Samira'), ('935.081081081081', 'Zoe Gwen'), ('935.2322946175638', 'Shivika'), ('936.3392857142857', 'Nozomi'), ('937.7878787878788', 'Wushuang'), ('937.7945205479452', 'Plobrung'), ('939.746835443038', 'Steffi'), ('940.2125603864735', 'Agni'), ('941.4724409448819', 'Catherine'), ('942.7969696969697', 'Erin'), ('943.421052631579', 'Qianqian'), ('943.5432098765432', 'Vladica'), ('943.7397959183673', 'Ainhoa'), ('943.7716535433071', 'Emmanuelle'), ('944.2432432432432', 'Sultan'), ('945.625', 'Alexandria'), ('946.8846153846154', 'Michele Alexandra'), ('946.8934426229508', 'Marlies'), ('947.3333333333334', 'Malou'), ('947.472972972973', 'Anita'), ('949.1239316239316', 'Denise'), ('949.6575342465753', 'Franziska'), ('949.7916666666666', 'Sirui'), ('949.7944444444445', 'Csilla'), ('949.8059701492538', 'Tamachan'), ('95.03465982028241', 'Kimiko'), ('950.0277777777778', 'Eleonora'), ('950.6263736263736', 'Miriana'), ('950.8813559322034', 'Chia Hsien'), ('950.9090909090909', 'Ester'), ('951.0075757575758', 'Veronica M'), ('951.4146341463414', 'Ariadna'), ('951.9764150943396', 'Alice Andrada'), ('952.4411764705883', 'Lynn'), ('952.5619834710744', 'Brynn'), ('954.046875', 'India'), ('954.6', 'Xiyu'), ('955.7833333333333', 'Radina'), ('956.0333333333333', 'Andreea'), ('956.5754716981132', 'Anastasia Evgenyevna'), ('957.2', 'Hanna'), ('957.9512195121952', 'Guiomar'), ('958.0955414012739', 'Madrie'), ('958.1327800829876', 'Verena'), ('959.6981132075472', 'Linnea'), ('960.4941860465116', 'Giorgia'), ('960.6770186335403', 'Agata'), ('961.2631578947369', 'Ana Victoria'), ('961.876923076923', 'Yuenu'), ('962.0188679245283', 'Natella'), ('962.5', 'Ida'), ('962.8536585365854', 'Kanika'), ('963.5', 'Terri'), ('964.1224489795918', 'Clementina Eugenia'), ('965.0', 'Rosa'), ('965.5343511450382', 'Noel'), ('966.0540540540541', 'Estela'), ('966.0588235294117', 'Shuyue'), ('966.4671052631579', 'Viktoryia'), ('967.2978723404256', 'Claudia Antonia'), ('967.6708860759494', 'Jessy'), ('967.9034090909091', 'Shao Yuan'), ('969.5882352941177', 'Anouk'), ('969.6588235294117', 'Taisiya'), ('969.8181818181819', 'Anette'), ('970.3620689655172', 'Andie K'), ('970.9846153846154', 'Brandy'), ('971.2865853658536', 'Beatriz Maria'), ('972.75', 'Lorraine M'), ('973.8617021276596', 'Yeong Won'), ('973.8717948717949', 'Maxine'), ('974.2702702702703', 'Lusine'), ('974.8', 'Simran Kaur'), ('975.3484848484849', 'Sinead'), ('975.6271186440678', 'Ksenija'), ('977.4539007092199', 'Daneika'), ('977.9640591966173', 'Chiara'), ('978.0229885057471', 'Khristina'), ('978.2708333333334', 'Eliza'), ('978.7321428571429', 'Ornella'), ('980.2232142857143', 'Ioana'), ('980.3333333333334', 'Ena'), ('980.575', 'Monika'), ('980.6666666666666', 'Suzuho'), ('980.9076923076923', 'Siqi'), ('981.7517730496454', 'Luisa'), ('981.9814814814815', 'Elizaveta Anna'), ('982.6666666666666', 'Lyann'), ('982.7222222222222', 'Suzan'), ('982.7397260273973', 'Sabastiani'), ('983.0410958904109', 'Yasmine'), ('983.1290322580645', 'Jazzamay'), ('983.359649122807', 'Yue'), ('983.4174757281553', 'Demi'), ('984.1714285714286', 'Rosie'), ('985.7211538461538', 'Gabrielle Faith'), ('986.3944099378882', 'Chun Yan'), ('986.82', 'Lindsey'), ('987.504761904762', 'Mia Nicole'), ('987.6739130434783', 'Margarida'), ('988.7425149700599', 'Li'), ('989.1904761904761', 'Pamela'), ('989.75', 'Zhuoma'), ('990.5210084033613', 'Brittany'), ('990.6', 'Kseniia'), ('992.4222222222222', 'Boyan'), ('992.4870588235294', 'Tyra'), ('992.7225433526012', 'Mi Rae'), ('993.1351351351351', 'Melisa'), ('993.175925925926', 'Marianne'), ('993.2105263157895', 'Josie'), ('993.4255319148937', 'Stefana'), ('994.0612244897959', 'Gabriela Nicole'), ('994.4769230769231', 'Dan Ni'), ('995.4074074074074', 'Guzal'), ('996.0408163265306', 'Lisa Marie'), ('996.2574257425742', 'Claudia Gianina'), ('996.8148148148148', 'Laili'), ('998.5238095238095', 'Sai Samhitha'), ('998.7722772277227', 'Cynthia'), ('999.0215053763441', 'Voni'), ('999.15625', 'Malene'), ('999.2', 'Frances'), ('999.375', 'Mi Zhuoma')] != [('Aastha', '1199.8235294117646'), ('Abbi', '1110.0434782608695'), ('Abbie', '808.4545454545455'), ('Abigail', '387.66706161137444'), ('Abiodun', '1039.6744186046512'), ('Abir', '1228.75'), ('Adeliya', '790.1538461538462'), ('Adnya', '1122.4423076923076'), ('Adriana', '619.6814159292036'), ('Adrienn', '1213.1666666666667'), ('Adrijana', '627.12'), ('Adva', '1255.3333333333333'), ('Afroditi', '1155.0392156862745'), ('Agata', '960.6770186335403'), ('Agata Jadwiga', '1082.3548387096773'), ('Agne', '1231.5'), ('Agnes', '391.3003629764065'), ('Agnese', '694.0659898477157'), ('Agni', '940.2125603864735'), ('Agnieszka', '122.19587628865979'), ('Agustina', '684.8497652582159'), ('Agustina Elena', '1154.25'), ('Ah', '1156.340425531915'), ('Ahlam', '1248.72'), ('Ahsha', '728.5'), ('Ai', '890.8728448275862'), ('Ai Wen', '912.1523178807947'), ('Aida', '1110.3333333333333'), ('Aiko', '284.8724727838258'), ('Ailen', '1034.5833333333333'), ('Aimee', '1200.2'), ('Aina', '1164.95'), ('Ainhoa', '943.7397959183673'), ('Aishwarya', '1024.625'), ('Ajla', '302.84831460674155'), ('Akari', '704.9618138424821'), ('Akgul', '215.25185185185185'), ('Aki', '710.9617224880383'), ('Akiho', '1145.8235294117646'), ('Akiko', '493.98205383848455'), ('Akilah', '772.8571428571429'), ('Akvile', '1038.35'), ('Alana', '1119.1639344262296'), ('Alba', '843.7260273972603'), ('Alberta', '343.22432701894314'), ('Albina', '775.2734375'), ('Aldana', '1185.7142857142858'), ('Alejandra', '1067.019801980198'), ('Aleksandra', '450.22998544395927'), ('Aleksandrina', '578.07962529274'), ('Alena', '820.4563492063492'), ('Alessandra', '1123.4864864864865'), ('Alessia', '1057.628205128205'), ('Alessondra', '1145.1641791044776'), ('Alexa', '383.9921465968586'), ('Alexandra', '569.2647632558965'), ('Alexandria', '945.625'), ('Alexia', '718.5202702702703'), ('Alexis', '604.15'), ('Aliaksandra', '441.9846743295019'), ('Alice', '710.3822682786414'), ('Alice Andrada', '951.9764150943396'), ('Alicia', '1105.1298701298701'), ('Alicja', '855.813627254509'), ('Alina', '925.0028776978418'), ('Aliona', '611.35'), ('Alisa', '453.01556420233464'), ('Alison', '403.48784576697403'), ('Alix', '822.3459915611814'), ('Alize', '252.11485774499474'), ('Alla', '217.85922330097088'), ('Allie', '557.9232456140351'), ('Almudena', '1157.8'), ('Alona', '871.6926829268293'), ('Alory Regina Elorriaga', '1181.6078431372548'), ('Alyona', '496.9431818181818'), ('Amanda', '650.6240276577355'), ('Amandine', '747.4375'), ('Amelie', '1011.3666666666667'), ('Amina', '803.9764705882353'), ('Aminat', '613.195652173913'), ('Amira', '1075.8260869565217'), ('Amra', '415.9078341013825'), ('Amrita', '1209.4'), ('Amy', '763.888198757764'), ('An Sophie', '460.8932038834951'), ('Ana', '396.2893280632411'), ('Ana Bianca', '842.8446601941747'), ('Ana Clara', '524.9192825112108'), ('Ana Gabriela', '1084.7916666666667'), ('Ana Luisa', '1243.4285714285713'), ('Ana Paula', '1031.228855721393'), ('Ana Sofia', '496.7156398104265'), ('Ana Victoria', '961.2631578947369'), ('Anabel', '144.3264367816092'), ('Anaeve', '922.2255639097745'), ('Anais', '482.26169844020797'), ('Anamika', '859.3059701492538'), ('Anastasia', '430.0872542522642'), ('Anastasia Evgenyevna', '956.5754716981132'), ('Anastasiia', '1245.75'), ('Anastasija', '221.66153846153847'), ('Anastasiya', '671.2584369449378'), ('Anca', '1127.7368421052631'), ('Anda', '1150.0'), ('Andie K', '970.3620689655172'), ('Andjela', '1063.4736842105262'), ('Andra Maria', '1275.8235294117646'), ('Andrea', '414.4332292750607'), ('Andrea Renee', '878.3939393939394'), ('Andreea', '956.0333333333333'), ('Andreea Amalia', '801.84375'), ('Andreea Roxana', '726.2657657657658'), ('Andreja', '424.64521739130436'), ('Andressa Cristina', '1184.0416666666667'), ('Andrina', '1045.6666666666667'), ('Aneta', '1152.0857142857142'), ('Anett', '367.2274678111588'), ('Anette', '969.8181818181819'), ('Ange Oby', '1226.3333333333333'), ('Angela', '1128.7272727272727'), ('Angelica', '686.2234432234433'), ('Angeliki', '1089.1603773584907'), ('Angelina', '750.3207810320781'), ('Angelique', '308.56833824975416'), ('Anhelina', '432.6949152542373'), ('Anhzelika', '850.9791666666666'), ('Ani', '720.1431870669746'), ('Anita', '947.472972972973'), ('Anja', '725.3893333333333'), ('Anke', '1228.388888888889'), ('Ankita', '618.4714285714285'), ('Ann', '907.4'), ('Anna', '551.5557158312297'), ('Anna Arina', '760.639175257732'), ('Anna Giulia', '428.5496828752643'), ('Anna Karolina', '345.51020408163265'), ('Anna Katalina', '916.7115384615385'), ('Anna Lena', '201.87700534759358'), ('Anna Maria', '1070.3967391304348'), ('Annalisa', '583.9347826086956'), ('Anne', '248.74237737516572'), ('Anne Liz', '762.7606382978723'), ('Anne Marie', '1237.6363636363637'), ('Anne Sophie', '1252.0'), ('Annie', '1042.037037037037'), ('Annika', '265.79487179487177'), ('Anouk', '969.5882352941177'), ('Antonela', '1051.7096774193549'), ('Antonia', '589.1298076923077'), ('Antonina', '1049.4655172413793'), ('Anushka', '1037.0833333333333'), ('Ao', '617.3333333333334'), ('Apichaya', '1016.5714285714286'), ('Arabela', '658.5074074074074'), ('Arantxa', '279.23336006415394'), ('Aranza', '490.4144736842105'), ('Aravane', '200.97080291970804'), ('Ariadna', '951.4146341463414'), ('Arina', '560.6778190830236'), ('Arina Gabriela', '1224.0'), ('Arlinda', '1074.3333333333333'), ('Arthi', '1281.8461538461538'), ('Aryna', '349.54794520547944'), ('Aselya', '1181.27868852459'), ('Asha', '1151.95'), ('Ashleigh', '331.3681818181818'), ('Ashley', '638.88'), ('Ashling', '823.0909090909091'), ('Ashmitha', '1018.6637931034483'), ('Ashvarya', '803.3904761904762'), ('Asia', '453.43392070484583'), ('Asiya', '790.46875'), ('Assia', '1172.5531914893618'), ('Astra', '829.5625'), ('Astrid Wanja', '1086.45'), ('Audrey', '591.2544731610338'), ('Avgusta', '1208.4285714285713'), ('Axana', '1064.0'), ('Ayaka', '552.4653465346535'), ('Ayan', '901.8717948717949'), ('Ayano', '597.6981132075472'), ('Ayla', '397.83561643835617'), ('Aymet', '915.5932203389831'), ('Ayu Fani', '479.5530612244898'), ('Ayumi', '412.74466019417474'), ('Azra', '556.2303370786517'), ('Barbara', '763.8900651465798'), ('Barbora', '252.6093155893536'), ('Basak', '656.2932551319648'), ('Beatrice', '785.0707482993197'), ('Beatriz', '457.4050279329609'), ('Beatriz Magdalena', '1253.4'), ('Beatriz Maria', '971.2865853658536'), ('Beauty', '1382.1538461538462'), ('Belen', '1167.3368421052633'), ('Belinda', '681.7736842105263'), ('Benedetta', '705.4688346883469'), ('Berfu', '625.013698630137'), ('Bermet', '717.7932330827068'), ('Bernarda', '541.273631840796'), ('Bernice', '834.1005025125628'), ('Berta', '1005.75'), ('Bethanie', '146.59709379128137'), ('Betina', '1229.5714285714287'), ('Bhuvana', '878.0138888888889'), ('Bianca', '653.2805383022775'), ('Bianka', '696.952380952381'), ('Bibiane', '550.1941544885177'), ('Blair', '912.71875'), ('Blanca', '904.6538461538462'), ('Blessing', '1221.8333333333333'), ('Boba', '1254.6341463414635'), ('Bojana', '392.7313829787234'), ('Borislava', '834.2066115702479'), ('Boyan', '992.4222222222222'), ('Brandy', '970.9846153846154'), ('Breaunna', '872.0930232558139'), ('Brenda', '211.01377118644066'), ('Brianna', '854.3170731707318'), ('Brienne', '917.0'), ('Brindtha', '1126.3333333333333'), ('Britt', '647.5205479452055'), ('Brittany', '990.5210084033613'), ('Brooke', '804.6277056277056'), ('Brynn', '952.5619834710744'), ('Bunyawi', '555.3384615384615'), ('Busra', '1140.981981981982'), ('Cagla', '311.87854251012146'), ('Caitlin', '709.4247787610619'), ('Camelia Elena', '803.7139479905437'), ('Cameron', '1192.1818181818182'), ('Camila', '539.7944621938232'), ('Camila Vital', '1192.3783783783783'), ('Camilla', '801.6850649350649'), ('Camille', '1112.9450549450548'), ('Cara', '236.07412398921832'), ('Carina', '416.3666666666667'), ('Carla', '411.70779777206513'), ('Carlota', '1236.7777777777778'), ('Carlotta', '1127.9338842975208'), ('Carly', '318.69978858350953'), ('Carmen', '890.6351351351351'), ('Carmen Raluca', '842.1553398058253'), ('Carol', '564.1434426229508'), ('Carolin', '645.2279792746114'), ('Carolina', '718.725321888412'), ('Carolina Meligeni Rodrigues', '799.0650406504066'), ('Caroline', '342.40130505709624'), ('Caroline B', '1161.5675675675675'), ('Carolyn', '1197.578947368421'), ('Carson', '1020.6'), ('Casey', '378.0163727959698'), ('Catalina', '293.76942355889724'), ('Catherine', '941.4724409448819'), ('Catherine Cartan', '134.21917808219177'), ('Caty', '744.0'), ('Cecilia', '755.4649681528663'), ('Cecilie Lundgaard', '1141.842105263158'), ('Celine', '708.618398637138'), ('Cemre', '1123.3855421686746'), ('Chalena', '650.1367521367522'), ('Chanel', '343.2835365853659'), ('Chanelle', '215.6615811373093'), ('Chang', '575.4626436781609'), ('Chanikarn', '1281.8461538461538'), ('Chantal', '609.90625'), ('Chantelle', '1128.030303030303'), ('Chaoyi', '1232.8'), ('Charlene', '766.4794520547945'), ('Charlotte', '927.7647058823529'), ('Chayenne', '593.9759036144578'), ('Chelsea', '1132.0'), ('Chelsey', '719.3061224489796'), ('Chen', '524.7444668008048'), ('Chengyiyi', '789.2857142857143'), ('Chi Chi', '464.1367781155015'), ('Chi Fan', '1039.3902439024391'), ('Chia Hsien', '950.8813559322034'), ('Chia Jung', '359.3764705882353'), ('Chiaki', '437.73858921161826'), ('Chiara', '977.9640591966173'), ('Chieh Yu', '533.9586374695864'), ('Chihiro', '848.9908952959029'), ('Chin Wei', '385.2651515151515'), ('Chinami', '615.2230215827338'), ('Ching Wen', '583.530303030303'), ('Chiraz', '749.3582089552239'), ('Chisa', '874.8181818181819'), ('Chloe', '675.2445414847161'), ('Chompoothip', '1112.1458333333333'), ('Christie', '1112.875'), ('Christina', '454.9920529801324'), ('Christine', '841.4051724137931'), ('Chun Mei', '692.390625'), ('Chun Yan', '986.3944099378882'), ('Cindy', '659.3055555555555'), ('Claire', '443.45754716981133'), ('Clara', '1190.7307692307693'), ('Claudia', '826.2619047619048'), ('Claudia Antonia', '967.2978723404256'), ('Claudia Gianina', '996.2574257425742'), ('Claudine', '383.6413199426112'), ('Clelia', '823.6306306306307'), ('Clemence', '875.9772727272727'), ('Clementina Eugenia', '964.1224489795918'), ('Clothilde', '620.4120171673819'), ('Coco', '270.5896860986547'), ('Colomba', '1165.093023255814'), ('Conny', '390.0'), ('Constance', '570.2723004694835'), ('Constanza', '835.1132075471698'), ('Constanze', '1245.3333333333333'), ('Corina', '832.7818181818182'), ('Corinna', '356.8219696969697'), ('Cornelia', '757.2253521126761'), ('Cory Ann', '406.5511363636364'), ('Costanza', '1049.0'), ('Cristiana', '554.5376344086021'), ('Cristina', '643.616049382716'), ('Cristina Andreea', '439.5747863247863'), ('Cristina Madalina', '720.6428571428571'), ('Csilla', '949.7944444444445'), ('Cynthia', '998.7722772277227'), ('Da Hye', '1010.3333333333334'), ('Dabin', '920.1276595744681'), ('Dagmara', '1159.1818181818182'), ('Daiana', '720.7490039840637'), ('Dajana', '1181.4736842105262'), ('Dalia', '801.6933333333334'), ('Dalila', '525.9552572706936'), ('Dalma', '279.16438356164383'), ('Damilola', '1493.0'), ('Damini', '1242.0'), ('Damira', '1198.3333333333333'), ('Dan Ni', '994.4769230769231'), ('Dana', '805.7028985507246'), ('Daneika', '977.4539007092199'), ('Danica', '380.609375'), ('Daniela', '348.6364892881825'), ('Daniella', '643.9216101694915'), ('Danielle', '744.7453250222618'), ('Danielle Rose', '434.68'), ('Danijela', '1107.0919540229886'), ('Danka', '302.83268482490274'), ('Daphne', '1226.5454545454545'), ('Daria', '629.6443987667009'), ('Darija', '464.95631067961165'), ('Dariya', '1132.1744186046512'), ('Darya', '531.1829405162739'), ('Dasha', '722.6986301369863'), ('Dayana', '576.4307692307692'), ('Dea', '550.9545454545455'), ('Deborah', '764.6785714285714'), ('Deeon', '1115.0851063829787'), ('Dejana', '758.5342960288808'), ('Demi', '983.4174757281553'), ('Denisa', '419.1633466135458'), ('Denise', '949.1239316239316'), ('Denise Antonela', '1160.3125'), ('Deniz', '551.5304659498208'), ('Deria', '1123.6486486486488'), ('Desirae', '863.7826086956521'), ('Desiree', '1032.2666666666667'), ('Despina', '665.686684073107'), ('Despoina', '746.0962962962963'), ('Destanee', '483.77464788732397'), ('Dewi', '1154.2857142857142'), ('Dhruthi', '615.1506849315068'), ('Di', '736.1650485436893'), ('Dia', '383.7832512315271'), ('Diana', '654.3773657782928'), ('Diana Maria', '1205.7692307692307'), ('Dianne', '809.697247706422'), ('Dijana', '669.2982456140351'), ('Dilara', '1248.2'), ('Dina', '1094.4583333333333'), ('Dinah', '268.05945945945945'), ('Doga Selen', '1234.6176470588234'), ('Domenica', '803.8666666666667'), ('Dominika', '171.71134020618555'), ('Dominique', '1042.7843137254902'), ('Donika', '1131.6333333333334'), ('Donna', '223.50900900900902'), ('Dorien', '1196.56'), ('Doroteja', '520.9397993311037'), ('Draginja', '913.7272727272727'), ('Dunja', '929.0599369085173'), ('Ebony', '1073.1752577319587'), ('Eden', '1029.6888888888889'), ('Edina', '211.67325428194994'), ('Eduarda', '656.2851711026616'), ('Eetee', '842.7045454545455'), ('Ege', '1214.857142857143'), ('Ekaterina', '471.8367290748899'), ('Ekaterine', '553.9434782608696'), ('Elaine', '1221.7931034482758'), ('Eleanor', '1066.5343511450383'), ('Elena', '324.3720930232558'), ('Elena Gabriela', '392.44444444444446'), ('Elena Teodora', '686.6470588235294'), ('Eleni', '249.5244140625'), ('Eleonora', '950.0277777777778'), ('Eleonore', '1087.372340425532'), ('Eliessa', '876.1730769230769'), ('Elina', '421.6573033707865'), ('Elisabeth', '888.2213114754098'), ('Elise', '334.7118644067797'), ('Elitsa', '418.39748953974896'), ('Elixane', '579.5214723926381'), ('Eliza', '978.2708333333334'), ('Elizabeta', '1154.2714285714285'), ('Elizabeth', '736.9747747747748'), ('Elizabeth Anita Alexandria', '1006.2982456140351'), ('Elizaveta', '489.5307517084282'), ('Elizaveta Anna', '981.9814814814815'), ('Elke', '1011.9433962264151'), ('Ella', '1168.7967479674796'), ('Ellen', '750.9460093896714'), ('Ellie', '508.340206185567'), ('Elodie', '1211.2333333333333'), ('Elyne', '652.1984732824427'), ('Ema', '819.3400503778338'), ('Emelyn', '672.730407523511'), ('Emi', '770.8472222222222'), ('Emilia', '1232.0'), ('Emiliana', '1022.9174311926605'), ('Emilie', '705.4716981132076'), ('Emilija', '1209.625'), ('Emiliya', '1092.2771084337348'), ('Emily', '585.093851132686'), ('Emily J', '1041.948717948718'), ('Emina', '682.0972222222222'), ('Emma', '641.046992481203'), ('Emma Christine', '1193.3529411764705'), ('Emmanuelle', '943.7716535433071'), ('En Pei', '1229.7333333333333'), ('Ena', '980.3333333333334'), ('Eri', '321.23595505617976'), ('Erica', '788.0384615384615'), ('Erika', '544.5041866028708'), ('Erin', '942.7969696969697'), ('Erina', '733.1351351351351'), ('Esen', '1218.5652173913043'), ('Estela', '966.0540540540541'), ('Estelle', '617.4935251798561'), ('Ester', '950.9090909090909'), ('Estrella', '347.34943639291464'), ('Etsuko', '781.3218390804598'), ('Eudice Wong', '911.7241379310345'), ('Eugenia', '1157.5'), ('Eugenie', '477.62886597938143'), ('Eugeniya', '620.6746411483253'), ('Eva', '500.29483037156706'), ('Eva Marie', '1083.8333333333333'), ('Eveliina', '1023.8690476190476'), ('Evelyn', '471.5439093484419'), ('Evgenia', '414.66339869281046'), ('Evgeniya', '442.0344827586207'), ('Fang Ying', '612.0185185185185'), ('Fangzhou', '406.9281767955801'), ('Fanny', '569.1904761904761'), ('Farah', '1106.3076923076924'), ('Fatima', '673.7509157509157'), ('Fatimah', '1070.9463414634147'), ('Fatma', '648.2984054669704'), ('Fatyha', '1015.5'), ('Federica', '722.7286493034525'), ('Federica Joe', '1204.7272727272727'), ('Fernanda', '647.922077922078'), ('Ferny', '1187.0384615384614'), ('Fiona', '853.3908045977012'), ('Flavia', '376.47888446215137'), ('Florencia', '451.5810397553517'), ('Frances', '999.2'), ('Francesca', '570.534951862704'), ('Francisca', '903.1666666666666'), ('Francoise', '437.05298013245033'), ('Franziska', '949.6575342465753'), ('Frederikke', '1244.3333333333333'), ('Freya', '544.1627906976744'), ('Gabriela', '696.7697332607512'), ('Gabriela Nicole', '994.0612244897959'), ('Gabriella', '792.5'), ('Gabrielle Faith', '985.7211538461538'), ('Gaelle', '1052.8314606741574'), ('Gaia', '759.5352697095435'), ('Gail', '526.2644836272041'), ('Galina', '305.19563522992985'), ('Ganna', '606.7211740041929'), ('Garbine', '229.3774193548387'), ('Gebriela', '1152.142857142857'), ('Genevieve', '772.2857142857143'), ('Georgia', '533.5940594059406'), ('Georgia Andreea', '763.1014492753624'), ('Georgiana', '1153.9166666666667'), ('Georgina', '396.225'), ('Ghislaine', '1150.6607142857142'), ('Giada', '813.1351351351351'), ('Gioia', '567.8518518518518'), ('Giorgia', '960.4941860465116'), ('Giorgie', '1226.5'), ('Giovanna', '1197.0'), ('Giulia', '693.6215943491422'), ('Giuliana', '584.359375'), ('Gloria', '794.7118644067797'), ('Gozal', '716.3150684931506'), ('Grace', '454.06233062330625'), ('Gracia', '783.8288043478261'), ('Greetje', '547.277108433735'), ('Greta', '296.8219584569733'), ('Guadalupe', '797.383606557377'), ('Guillermina', '1027.0'), ('Guiomar', '957.9512195121952'), ('Gulben', '1168.3396226415093'), ('Gulchekhra', '1196.0'), ('Gulnaz', '1236.6153846153845'), ('Guzal', '995.4074074074074'), ('Gyulnara', '1087.6216216216217'), ('Habiba', '1051.623188405797'), ('Hae Sung', '844.3856812933026'), ('Haine', '1179.4153846153847'), ('Hana', '1110.5376344086021'), ('Hanna', '957.2'), ('Hanyu', '543.968253968254'), ('Hao Chen', '680.1050228310502'), ('Hao Ching', '1153.936507936508'), ('Harmony', '574.8723404255319'), ('Harriet', '694.341935483871'), ('Haruka', '774.6837606837607'), ('Haruna', '512.1515151515151'), ('Hayley', '914.5321100917431'), ('Hazal', '1214.7692307692307'), ('Heather', '167.50632911392404'), ('Heidi', '417.44323483670297'), ('Helen', '1019.4107142857143'), ('Helene', '696.4752475247525'), ('Hikari', '1095.1176470588234'), ('Hilda', '673.6635071090047'), ('Himari', '1219.0'), ('Hiroko', '534.890243902439'), ('Hirono', '860.8104265402843'), ('Ho Ching', '925.9865771812081'), ('Hollie', '1185.75'), ('Hongrui', '914.8607594936709'), ('Hortencia', '1251.1333333333334'), ('Hsin Yuan', '1107.7142857142858'), ('Hua Chen', '726.1737089201878'), ('Huijie', '1118.904761904762'), ('Hulya', '888.0055096418732'), ('Hye Min', '1020.28125'), ('Hyojung', '1069.3208955223881'), ('Hyun Hui', '729.0671936758894'), ('I Hsuan', '1038.6911764705883'), ('Iana', '1085.581818181818'), ('Ida', '962.5'), ('Idia', '1232.2'), ('Iga', '705.5625'), ('Ilay', '1135.5'), ('Ilka', '868.2191780821918'), ('Ilona', '452.625'), ('Ilze', '847.0941176470589'), ('Imane Maelle', '845.375'), ('Ina', '1165.5573770491803'), ('Inci', '1069.0925925925926'), ('India', '954.046875'), ('Indire', '627.7027027027027'), ('Indy', '485.9559748427673'), ('Ineke', '919.6147540983607'), ('Ines', '687.0229885057471'), ('Inger', '1039.0'), ('Ingrid', '766.2549019607843'), ('Ingrid Alexandra', '869.3571428571429'), ('Ingrid Esperanza', '748.6622691292876'), ('Intissar', '1192.5454545454545'), ('Ioana', '980.2232142857143'), ('Ioana Diana', '482.43243243243245'), ('Ioana Loredana', '646.0441176470588'), ('Ionela Andreea', '799.0552486187845'), ('Ipek', '655.7828348504552'), ('Irena', '288.74423480083857'), ('Irene', '579.2153846153847'), ('Irina', '436.84339509862525'), ('Irina Camelia', '285.84388185654007'), ('Irina Maria', '578.1381578947369'), ('Iris', '866.1075949367089'), ('Iryna', '489.5294964028777'), ('Isabel', '724.9178743961353'), ('Isabela', '1114.99375'), ('Isabella', '566.7873931623932'), ('Isabelle', '781.6993464052288'), ('Iulia Maria', '1170.9411764705883'), ('Iva', '732.7386018237082'), ('Ivana', '439.81414868105514'), ('Ivania', '871.109375'), ('Ivanka', '1079.05'), ('Iveta', '117.95684523809524'), ('Ivette', '1136.8535031847134'), ('Ivone', '872.0'), ('Ivonne', '591.3809523809524'), ('Jacqueline', '624.6089494163424'), ('Jada', '909.2'), ('Jade', '739.04802259887'), ('Jaeda', '760.4920634920635'), ('Jaimee', '562.8450704225352'), ('Jaimy Gayle', '1243.875'), ('Jainy', '1037.5274725274726'), ('Jamie', '402.36756756756756'), ('Jamilya', '1247.3333333333333'), ('Jan', '592.5990783410139'), ('Jana', '406.6258503401361'), ('Janette', '240.5306603773585'), ('Janina', '699.7864583333334'), ('Janja', '1262.5416666666667'), ('Janneke', '861.5102040816327'), ('Jaqueline Adina', '748.7238095238096'), ('Jara', '1121.767857142857'), ('Jarmila', '149.46360759493672'), ('Jasmin', '633.027027027027'), ('Jasmina', '642.1811989100818'), ('Jasmine', '437.86915887850466'), ('Jasmine Amber', '1117.64'), ('Jawairiah', '1070.5648854961833'), ('Jazmin', '1035.46'), ('Jazzamay', '983.1290322580645'), ('Jeannine', '767.7730496453901'), ('Jelena', '348.19338235294117'), ('Jennifer', '556.7936681222708'), ('Jenny', '902.1470588235294'), ('Jesika', '501.5860215053763'), ('Jessica', '655.7464059804486'), ('Jessika', '818.2043795620438'), ('Jessy', '967.6708860759494'), ('Ji Hee', '823.9789029535865'), ('Ji Young', '833.5061082024433'), ('Jia', '1169.6923076923076'), ('Jia Jing', '682.961038961039'), ('Jia Qi', '529.7777777777778'), ('Jiahui', '794.4931506849315'), ('Jiakang', '1230.6'), ('Jiatian', '1232.032258064516'), ('Jiaxi', '578.5'), ('Jiaxue', '1161.0'), ('Jie', '114.05571428571429'), ('Jil Belen', '501.0619469026549'), ('Jil Nora', '1116.4190476190477'), ('Jill', '121.9579326923077'), ('Jillian', '721.14'), ('Jin', '1267.0'), ('Jin A', '492.8915187376726'), ('Jin Ju', '1035.6470588235295'), ('Jing Jing', '369.1620469083156'), ('Joana', '863.3225806451613'), ('Joanna', '931.025641025641'), ('Joanne', '1227.8'), ('Jodie Anna', '925.4230769230769'), ('Johana', '1111.8333333333333'), ('Johanna', '310.3405299313052'), ('Jordana', '1022.6198347107438'), ('Josepha', '924.9325842696629'), ('Josephine', '684.4892086330935'), ('Josie', '993.2105263157895'), ('Jovana', '601.9846625766871'), ('Ju Eun', '812.6'), ('Judith', '1224.0'), ('Jule', '1243.904761904762'), ('Julia', '576.9173467252564'), ('Julia Mansano', '1024.6666666666667'), ('Juliana', '1110.0816326530612'), ('Juliana Rocha', '1175.7666666666667'), ('Julie', '512.3787128712871'), ('Julieta Lara', '707.1467889908257'), ('Julita', '1019.9411764705883'), ('Julyette Maria Josephine', '732.1666666666666'), ('June', '1189.0'), ('Junri', '262.30884808013354'), ('Justina', '1212.9166666666667'), ('Justine', '521.5358361774744'), ('Justyna', '585.8517745302714'), ('Kady', '1055.020202020202'), ('Kai Chen', '272.08855291576674'), ('Kai Lin', '522.6561403508772'), ('Kaia', '127.06775067750678'), ('Kaitlin', '901.3333333333334'), ('Kaitlyn', '756.2549019607843'), ('Kaja', '633.5454545454545'), ('Kajsa', '661.9589041095891'), ('Kamila', '568.2547169811321'), ('Kamilla', '1162.8301886792453'), ('Kamonwan', '765.1395348837209'), ('Kana', '924.2782608695652'), ('Kanae', '635.346516007533'), ('Kanako', '1105.3125'), ('Kanami', '799.9940828402367'), ('Kanika', '962.8536585365854'), ('Kaori', '871.0790513833992'), ('Karen', '674.9672514619883'), ('Kariann', '1068.9166666666667'), ('Karin', '472.338003502627'), ('Karina', '883.6090909090909'), ('Karina Ildor', '696.9606060606061'), ('Karina Kristina', '1062.795918367347'), ('Karine', '868.8904109589041'), ('Karis', '1001.0679611650486'), ('Karla', '807.616'), ('Karman', '652.917808219178'), ('Karola Patricia', '928.3333333333334'), ('Karolayne', '1077.8095238095239'), ('Karolina', '586.9412296564195'), ('Karoline', '873.6229508196722'), ('Karyn', '903.5769230769231'), ('Kassandra', '927.0350877192982'), ('Katalin', '331.93949394939494'), ('Katarina', '401.0998263888889'), ('Katarzyna', '459.29286608260327'), ('Kate', '1117.7142857142858'), ('Katerina', '491.8507295173962'), ('Kateryna', '294.33209990749305'), ('Katharina', '680.677700348432'), ('Katharine', '882.1071428571429'), ('Katherine', '836.6804511278195'), ('Katherine Gabriela', '910.396694214876'), ('Kathinka', '415.7'), ('Kathrin', '291.4792817679558'), ('Katie', '620.9404580152672'), ('Katrine Isabel', '1111.08'), ('Katy', '492.6608695652174'), ('Katya', '1050.7'), ('Katyarina', '1010.1818181818181'), ('Kayla', '583.1686746987951'), ('Kaylah', '1163.3478260869565'), ('Kazusa', '772.2402912621359'), ('Kei', '1003.1212121212121'), ('Kelia', '1114.9433962264152'), ('Kelly', '804.873831775701'), ('Kelly S', '312.7584269662921'), ('Kelsey', '1012.325'), ('Kennedy', '807.7222222222222'), ('Keren', '643.422641509434'), ('Keri', '1018.6534653465346'), ('Kerstin', '1020.4271844660194'), ('Khristina', '978.0229885057471'), ('Ki Ryang', '1164.090909090909'), ('Kiki', '287.71625344352617'), ('Kim', '687.3120567375887'), ('Kim Alice', '762.4081632653061'), ('Kimberley', '846.9154228855722'), ('Kimberly', '618.6923076923077'), ('Kimika', '1097.219512195122'), ('Kimiko', '95.03465982028241'), ('Kinnie', '606.1467576791808'), ('Kirsten', '308.64912280701753'), ('Kirsten Andrea', '1035.0384615384614'), ('Klaartje', '576.9'), ('Klara', '235.31431431431432'), ('Klaudia', '780.7905027932961'), ('Komola', '826.0238095238095'), ('Korina', '567.0507399577167'), ('Kotomi', '844.7460317460317'), ('Krista', '522.984693877551'), ('Kristie', '445.18918918918916'), ('Kristina', '343.25546975546973'), ('Kristina N', '1060.5633802816901'), ('Kristy', '837.7730496453901'), ('Kristyna', '443.8467908902692'), ('Ksenia', '482.36648501362396'), ('Kseniia', '990.6'), ('Ksenija', '975.6271186440678'), ('Kumiko', '488.76107382550333'), ('Kurumi', '165.96132596685084'), ('Kveta', '159.62397820163488'), ('Kwan Yau', '1070.0377358490566'), ('Kyle', '887.502487562189'), ('Kylie', '798.3181818181819'), ('Kyoka', '348.54794520547944'), ('Kyra', '443.76148409893995'), ('Kyung Mi', '533.433770014556'), ('Laetitia', '677.4458598726114'), ('Laili', '996.8148148148148'), ('Lamis', '1062.3666666666666'), ('Lara', '643.6939163498099'), ('Larikah', '1054.9019607843138'), ('Laura', '504.4145867098865'), ('Laura D', '910.5714285714286'), ('Laura Ioana', '516.1982942430703'), ('Laura Sofia', '1198.1538461538462'), ('Lauren', '484.9442231075697'), ('Lauryn', '1107.0882352941176'), ('Lavinia', '612.736'), ('Laylo', '1226.076923076923'), ('Layne', '1184.0'), ('Lea', '858.4107142857143'), ('Leah', '1179.6216216216217'), ('Lee', '908.156862745098'), ('Lena', '594.9436936936937'), ('Lena Marie', '657.8934169278997'), ('Lenka', '451.33577981651376'), ('Leolia', '773.5666666666667'), ('Leonie', '825.972972972973'), ('Lesedi Sheya', '887.4545454545455'), ('Lesia', '205.17590361445784'), ('Lesley', '514.7174515235457'), ('Leslie', '1180.5454545454545'), ('Leticia', '481.3229166666667'), ('Leticia Garcia', '1072.4'), ('Leylah Annie', '1030.5'), ('Li', '988.7425149700599'), ('Liana Gabriela', '387.87113402061857'), ('Libby', '899.9150326797386'), ('Libi', '1035.327868852459'), ('Lidia', '1147.8529411764705'), ('Lidziya', '797.2128378378378'), ('Liezel', '284.8326771653543'), ('Liga', '567.9464544138929'), ('Lilla', '722.5087719298245'), ('Lin', '497.42124542124543'), ('Lina', '574.9808362369338'), ('Linda', '929.4398496240601'), ('Lindsay', '275.6055900621118'), ('Lindsey', '986.82'), ('Ling', '418.81925343811395'), ('Liniques', '1184.7222222222222'), ('Linnea', '959.6981132075472'), ('Lisa', '356.0105210420842'), ('Lisa Maria', '758.06'), ('Lisa Marie', '996.0408163265306'), ('Lisanne', '673.6507936507936'), ('Liubov', '887.2875'), ('Livia', '1179.875'), ('Liz Tatiane', '870.9007633587786'), ('Lizaveta', '1120.5652173913043'), ('Lizette', '666.1496062992126'), ('Lorenza', '1231.2727272727273'), ('Lorraine M', '972.75'), ('Lou', '680.1724137931035'), ('Loudmilla', '1220.0'), ('Louisa', '380.5308641975309'), ('Louise', '1070.1025641025642'), ('Lourdes', '188.06095041322314'), ('Lu', '907.3557312252965'), ('Luca', '859.8644067796611'), ('Lucia', '845.740638002774'), ('Luciana', '885.7495107632094'), ('Lucie', '322.62611607142856'), ('Lucrezia', '845.986301369863'), ('Lucy', '756.3141592920354'), ('Ludmila', '846.2727272727273'), ('Ludmilla', '787.5416666666666'), ('Luisa', '981.7517730496454'), ('Luisa Marie', '820.59375'), ('Luksika', '284.22813688212926'), ('Lulu', '1098.2888888888888'), ('Luna', '1139.0'), ('Lusine', '974.2702702702703'), ('Lutfiye', '1190.0629921259842'), ('Lyann', '982.6666666666666'), ('Lynn', '952.4411764705883'), ('Lyudmyla', '382.82479784366575'), ('Macall', '607.3360995850622'), ('Macarena', '692.1515151515151'), ('Madalina', '324.63613231552165'), ('Maddison', '748.0'), ('Madeleine', '1028.0365853658536'), ('Madeline', '1217.469387755102'), ('Madina', '1203.5'), ('Madison', '290.64452214452217'), ('Madrie', '958.0955414012739'), ('Maegan', '787.0'), ('Mafalda', '1139.7'), ('Maftuna', '1173.75'), ('Magali', '734.0'), ('Magalie', '1036.1214953271028'), ('Magda', '300.3974358974359'), ('Magdalena', '443.6296006264683'), ('Magy', '1092.7621951219512'), ('Mahak', '875.0'), ('Mahitha', '1007.15'), ('Mai', '687.25'), ('Maia', '745.433962264151'), ('Maia A', '1206.6666666666667'), ('Maiko', '438.4245810055866'), ('Maileen', '1152.888888888889'), ('Mailen', '410.8463541666667'), ('Maja', '896.7413793103449'), ('Makiho', '784.8009049773756'), ('Makoto', '516.6615384615385'), ('Malene', '999.15625'), ('Malika', '1004.7428571428571'), ('Malin', '825.039603960396'), ('Mallaurie', '1031.5342465753424'), ('Mallory', '143.48235294117646'), ('Malou', '947.3333333333334'), ('Mami', '1153.590909090909'), ('Man Ying Maggie', '1202.2692307692307'), ('Mana', '689.891129032258'), ('Mananchaya', '1230.6'), ('Manca', '838.1780821917808'), ('Mandy', '361.0'), ('Manisha', '897.0974358974358'), ('Manon', '622.7673469387755'), ('Manya', '1181.3548387096773'), ('Mara', '908.3962264150944'), ('Marcela', '774.64'), ('Marcela Guimaraes', '1143.7957746478874'), ('Marcelina', '1247.3636363636363'), ('Marcella', '657.0171919770773'), ('Margalita', '325.5912596401028'), ('Margarida', '987.6739130434783'), ('Margarita', '611.4060995184591'), ('Margaux', '1051.1224489795918'), ('Margot', '753.8346456692914'), ('Mari', '526.3698630136986'), ('Maria', '426.6002565198803'), ('Maria Agustina', '1190.0833333333333'), ('Maria Andrea', '1072.9591836734694'), ('Maria Camila', '1188.5277777777778'), ('Maria Constanza De Las Mercedes', '861.5050505050505'), ('Maria Del Rosario', '1119.4897959183672'), ('Maria Elena', '194.2392065344224'), ('Maria Fernanda', '443.0228531855956'), ('Maria Jesus', '1170.1830985915492'), ('Maria Joao', '486.6092544987147'), ('Maria Jose', '306.1794310722101'), ('Maria Lourdes', '918.0769230769231'), ('Maria Paulina', '1047.98224852071'), ('Maria Teresa', '359.81081081081084'), ('Mariam', '662.1182795698925'), ('Mariana', '556.0428051001821'), ('Marianna', '730.3831168831168'), ('Marianne', '993.175925925926'), ('Mariaryeni', '1085.4242424242425'), ('Marie', '695.574074074074'), ('Marie Eve', '300.56296296296296'), ('Mariia', '1148.9166666666667'), ('Marija', '544.2636655948553'), ('Marijana', '1215.0'), ('Marina', '532.6881807180315'), ('Marine', '774.5654761904761'), ('Marion', '279.78655282817505'), ('Mariona', '1163.0'), ('Marisa', '1067.3413173652696'), ('Mariya', '281.871335504886'), ('Marketa', '353.44444444444446'), ('Marlies', '946.8934426229508'), ('Marrit', '783.1711711711712'), ('Marta', '419.32988047808766'), ('Marta Huqi', '851.1224489795918'), ('Martha', '1056.0588235294117'), ('Martina', '751.8679119412942'), ('Mary', '869.1666666666666'), ('Mary Ann', '1188.7096774193549'), ('Maryna', '323.86176470588236'), ('Masa', '355.7223168654174'), ('Mathilde', '437.11396648044695'), ('Matilda', '799.1875'), ('Maud', '1013.4761904761905'), ('Maureen', '1070.21875'), ('Maurien', '1121.0869565217392'), ('Maxine', '973.8717948717949'), ('May', '1084.0294117647059'), ('Maya', '732.4260679079956'), ('Mayar', '891.6309523809524'), ('Mayo', '407.029702970297'), ('Mayya', '619.9064748201439'), ('Megan', '736.4809523809524'), ('Megumi', '1025.0'), ('Mei Xu', '1031.6'), ('Meiling', '812.85'), ('Meiqi', '1029.1666666666667'), ('Melanie', '372.32502965599053'), ('Melany Solange', '1039.8333333333333'), ('Melina', '1017.2560553633218'), ('Melinda', '169.13578500707214'), ('Melis', '634.7950310559006'), ('Melisa', '993.1351351351351'), ('Melissa', '1154.093023255814'), ('Melissa Ishuan', '1104.357142857143'), ('Meng Ning', '1035.95'), ('Mercedes', '1213.2142857142858'), ('Merel', '900.75'), ('Meritxell', '1182.9107142857142'), ('Mervana', '337.5292682926829'), ('Mi', '554.3953934740883'), ('Mi Jeong', '1071.3076923076924'), ('Mi Rae', '992.7225433526012'), ('Mi Zhuoma', '999.375'), ('Mia Nicole', '987.504761904762'), ('Micaela', '1332.0737704918033'), ('Michaela', '676.90589198036'), ('Michaella', '185.3469387755102'), ('Michela', '1228.9285714285713'), ('Michele Alexandra', '946.8846153846154'), ('Michelle', '280.79959100204496'), ('Michika', '718.047619047619'), ('Mihaela', '376.7356115107914'), ('Mihaela Lorena', '1223.4'), ('Miharu', '523.2788844621514'), ('Mihika', '1064.142857142857'), ('Mihoki', '1110.4411764705883'), ('Miki', '586.2250489236791'), ('Mila', '1201.16'), ('Milagros', '1234.2857142857142'), ('Milana', '626.441935483871'), ('Milena', '1114.4074074074074'), ('Milica', '1221.904761904762'), ('Min', '866.0693069306931'), ('Min Hwa', '819.8425531914894'), ('Minami', '1238.0625'), ('Mira', '788.2622950819672'), ('Mirabelle', '721.1643835616438'), ('Miranda', '1169.4864864864865'), ('Miriam', '912.120218579235'), ('Miriam Bianca', '628.075'), ('Miriana', '950.6263736263736'), ('Mirjam', '843.6428571428571'), ('Mirjana', '186.76587795765877'), ('Misa', '617.0379241516966'), ('Misaki', '208.95263157894738'), ('Mitsumi', '1121.04'), ('Miyabi', '447.93283582089555'), ('Miyu', '594.9036697247707'), ('Mizuno', '593.1506849315068'), ('Molly', '1029.0'), ('Momoko', '772.6981132075472'), ('Mona', '273.57517899761336'), ('Monica', '210.0846394984326'), ('Monika', '980.575'), ('Monique', '462.4270462633452'), ('Montserrat', '541.952380952381'), ('Morgane', '880.6527777777778'), ('Moulika', '1243.4'), ('Mouna', '1258.5'), ('Moyuka', '1198.25'), ('Muazzez', '1227.0'), ('Muge', '1186.9444444444443'), ('Myrtille', '485.40168539325845'), ('Na', '82.13112391930835'), ('Na Lae', '608.7791798107255'), ('Na Ri', '573.5197368421053'), ('Nadezda', '868.6521739130435'), ('Nadia', '407.5463976945245'), ('Nadiya', '637.4607407407408'), ('Nadja', '631.8181818181819'), ('Nagi', '828.0675675675676'), ('Naiktha', '767.4963503649635'), ('Naima', '930.7027027027027'), ('Nam Yeon', '878.6666666666666'), ('Nan Nan', '890.4455445544554'), ('Nanuli', '542.7168141592921'), ('Nao', '313.45625'), ('Naoko', '1180.3828125'), ('Naomi', '483.97225572979494'), ('Napatsakorn', '929.4388489208633'), ('Nastassia', '1138.9166666666667'), ('Nastassja', '554.5290322580645'), ('Nastja', '593.1772853185596'), ('Natalia', '720.132932166302'), ('Natalie', '577.9677419354839'), ('Natalija', '634.3620689655172'), ('Nataliya', '1247.909090909091'), ('Natasa', '666.2853403141361'), ('Natasha', '883.0777142857143'), ('Natela', '566.4943396226415'), ('Natella', '962.0188679245283'), ('Nathalia', '543.031185031185'), ('Nathaly', '617.4615384615385'), ('Natia', '929.6928104575163'), ('Natsumi', '547.7037037037037'), ('Nattawadee', '1177.622641509434'), ('Naz', '1087.3823529411766'), ('Nazari', '825.7291666666666'), ('Neda', '745.421052631579'), ('Nelise', '1164.107142857143'), ('Nermeen', '1069.15'), ('Nevena', '1031.0'), ('Nicha', '515.3191489361702'), ('Nicky', '843.9007633587786'), ('Nicola', '753.2253164556962'), ('Nicole', '499.4127634660422'), ('Nicoleta Catalina', '485.46875'), ('Nicolette', '778.1648648648649'), ('Nidhi', '762.1578947368421'), ('Nigina', '376.7617554858934'), ('Nika', '913.4380165289256'), ('Nikita', '1174.0'), ('Nikki', '1017.3134328358209'), ('Nikol', '1054.0813953488373'), ('Nikola', '723.484076433121'), ('Nina', '528.8673050615595'), ('Nina Isabella', '1124.1666666666667'), ('Nives', '841.0514705882352'), ('Noel', '965.5343511450382'), ('Noelia', '1049.834745762712'), ('Noelle', '883.7787610619469'), ('Nonna', '1167.2758620689656'), ('Noppawan', '374.93926247288505'), ('Nora', '921.6216216216217'), ('Nour', '1096.1140350877192'), ('Nozomi', '936.3392857142857'), ('Nudnida', '436.66881028938906'), ('Nungnadda', '537.577922077922'), ('Nuria', '395.6680227827502'), ('Oana', '1027.1382978723404'), ('Oana Georgeta', '686.3047619047619'), ('Oceane', '728.7630208333334'), ('Ofri', '839.4923664122138'), ('Oksana', '533.9652351738241'), ('Ola', '660.8924731182796'), ('Olawaseun', '1397.5'), ('Olaya', '1112.75'), ('Oleksandra', '903.4289156626506'), ('Olena', '1179.1555555555556'), ('Olesya', '501.44444444444446'), ('Olga', '432.6511627906977'), ('Olivia', '446.7231833910035'), ('Oliwia', '1006.5128205128206'), ('Ons', '435.1470588235294'), ('Ornella', '978.7321428571429'), ('Oyku', '866.0454545454545'), ('Paige Mary', '1156.28125'), ('Pamela', '989.1904761904761'), ('Panna', '683.1081081081081'), ('Paola', '132.12638580931264'), ('Parris', '1099.625'), ('Patcharin', '863.5507246376811'), ('Patricia', '572.8059701492538'), ('Patricia Maria', '403.935'), ('Patrycja', '657.3816155988858'), ('Patty', '385.8135593220339'), ('Paula', '558.0162601626016'), ('Paula Andrea', '1175.909090909091'), ('Paula Catalina', '868.7624113475177'), ('Paula Cristina', '508.4679802955665'), ('Paulina', '1035.7780678851175'), ('Pauline', '298.1861898890259'), ('Pavla', '915.5892857142857'), ('Peangtarn', '514.586319218241'), ('Peggy', '755.5813953488372'), ('Pei Chi', '673.9809523809524'), ('Pei Hsuan', '1106.5'), ('Pei Ju', '1061.3076923076924'), ('Pemra', '465.24962852897477'), ('Pernilla', '619.4154929577464'), ('Petia', '710.3972602739726'), ('Petra', '365.50280484204313'), ('Phenomena', '1211.0'), ('Phillis', '826.6486486486486'), ('Pia', '737.862676056338'), ('Piia', '668.2581196581197'), ('Pilar', '740.5879828326181'), ('Pippa', '1041.0740740740741'), ('Plobrung', '937.7945205479452'), ('Polina', '630.7953529937444'), ('Polona', '478.30369515011546'), ('Poojashree', '729.1047904191616'), ('Pranjala', '795.4736842105264'), ('Prarthana G', '653.5070422535211'), ('Prerna', '740.5361842105264'), ('Priscila', '1137.19'), ('Priscilla', '675.4124293785311'), ('Qiang', '383.4714587737844'), ('Qianhui', '826.1388888888889'), ('Qianqian', '943.421052631579'), ('Qiu Yu', '705.8493150684932'), ('Quinn', '883.2352941176471'), ('Quirine', '633.9770491803279'), ('Rachael', '859.2706766917294'), ('Rachel', '1147.8526315789475'), ('Radina', '955.7833333333333'), ('Rafaela', '1121.2432432432433'), ('Ralina', '1176.5'), ('Raluca', '304.4619771863118'), ('Raluca Elena', '672.2258064516129'), ('Raluca Georgiana', '539.6164383561644'), ('Ramu', '1010.4545454545455'), ('Ramya', '1121.8846153846155'), ('Ran', '598.2655172413793'), ('Rana', '1117.6666666666667'), ('Raquel', '700.7644444444444'), ('Rashmi', '1089.2100840336134'), ('Ratnika', '1021.6504854368932'), ('Raveena', '487.6268656716418'), ('Rebeca', '1145.4333333333334'), ('Rebecca', '568.3374316939891'), ('Rebeka', '676.1090909090909'), ('Regina', '289.60283687943263'), ('Reina', '1019.0'), ('Reka Luca', '323.1388101983003'), ('Remi', '494.6111111111111'), ('Renata', '274.85317919075146'), ('Ria', '669.448275862069'), ('Rianna', '638.6666666666666'), ('Richel', '246.19871794871796'), ('Rika', '290.0614657210402'), ('Riko', '495.22641509433964'), ('Rio', '1125.0363636363636'), ('Risa', '489.65909090909093'), ('Rishika', '775.7269624573379'), ('Rita', '1051.7349397590363'), ('Riya', '651.4246575342465'), ('Roberta', '150.96681415929203'), ('Robin', '431.19607843137254'), ('Robyn', '1054.606896551724'), ('Rocio', '795.6201232032854'), ('Romana', '402.49931972789113'), ('Romana Caroline', '669.8542372881356'), ('Romina', '283.63246554364474'), ('Romy', '758.1714285714286'), ('Rona', '1125.5471698113208'), ('Ronit', '427.0'), ('Ronke', '1072.857142857143'), ('Roosh', '1168.2857142857142'), ('Rosa', '965.0'), ('Rosalia', '1059.73'), ('Rosalie', '1066.5887096774193'), ('Rosie', '984.1714285714286'), ('Roxane', '479.51738241308794'), ('Rui', '1209.625'), ('Rushmi', '573.8729603729604'), ('Rutuja', '808.5096774193548'), ('Ryann', '1069.0379746835442'), ('Saana', '1117.88'), ('Sabastiani', '982.7397260273973'), ('Sabina', '682.2005532503458'), ('Sabina Elena', '1184.6666666666667'), ('Sabine', '203.5871080139373'), ('Sabrina', '905.6324786324786'), ('Sacha', '340.2890442890443'), ('Sachia', '400.8093385214008'), ('Sachie', '368.26881720430106'), ('Sadafmoh', '665.8219178082192'), ('Sai Samhitha', '998.5238095238095'), ('Saisai', '297.39032258064515'), ('Sakiko', '832.9585365853659'), ('Sally', '529.583908045977'), ('Salma', '1204.6666666666667'), ('Samantha', '406.21702404158543'), ('Samira', '932.8940397350993'), ('Sanae', '1105.171875'), ('Sanaz', '703.1372549019608'), ('Sandra', '563.964505613908'), ('Sandy', '1028.9565217391305'), ('Sang Hee', '857.9508196721312'), ('Sania', '177.22695035460993'), ('Sara', '509.80945757997216'), ('Sarah', '546.5551763367463'), ('Sarah Beth', '875.9277108433735'), ('Sarah Rebecca', '743.6062176165804'), ('Sarahi', '1139.2340425531916'), ('Sarai Delfina', '1191.6470588235295'), ('Saray', '840.0776699029126'), ('Sari', '1081.1666666666667'), ('Sarlota', '1209.7777777777778'), ('Sarvinoz', '1235.1960784313726'), ('Sasa', '1033.027027027027'), ('Saska', '747.3695652173913'), ('Satsuki', '888.7272727272727'), ('Savannah', '1142.9285714285713'), ('Schena', '1188.2941176470588'), ('Se Hyun', '1210.2571428571428'), ('Se Jin', '1122.4545454545455'), ('Sean', '1240.92'), ('Seda', '1003.5367647058823'), ('Seira', '1115.72'), ('Selin', '1168.6571428571428'), ('Seo Kyung', '858.9173789173789'), ('Seone', '889.8028169014085'), ('Serena', '14.654294803817603'), ('Sesil', '162.3505747126437'), ('Seung Yeon', '784.0465949820789'), ('Severine', '218.4701086956522'), ('Shahar', '166.41358024691357'), ('Shakhlo', '924.8818897637796'), ('Shakhnoza', '1236.7627118644068'), ('Shangqing', '1228.3235294117646'), ('Shanshan', '694.2'), ('Shao Yuan', '967.9034090909091'), ('Sharmada', '851.5633802816901'), ('Sharon', '296.5792682926829'), ('Sharon Sanchana', '1097.0'), ('Shelby', '372.89398280802294'), ('Shelly', '1171.0'), ('Sheng Nan', '451.8657487091222'), ('Sherazad', '649.5154639175257'), ('Sherry', '1024.0116279069769'), ('Shiho', '500.688679245283'), ('Shilin', '632.2824427480916'), ('Shiori', '1070.6666666666667'), ('Shir', '1154.4166666666667'), ('Shiran', '1187.9245283018868'), ('Shivika', '935.2322946175638'), ('Shou Na', '1120.388888888889'), ('Shreya', '1148.0'), ('Shu Ying', '1042.6802325581396'), ('Shuai', '167.90740740740742'), ('Shuko', '421.44179894179894'), ('Shuo', '864.1538461538462'), ('Shuyue', '966.0588235294117'), ('Shweta', '897.6951219512196'), ('Si Qi', '1047.7575757575758'), ('Silvia', '565.8211508553654'), ('Simona', '542.2382851445662'), ('Simone', '1070.3417721518988'), ('Simran Kaur', '974.8'), ('Sina', '728.7443609022556'), ('Sinead', '975.3484848484849'), ('Sing Le', '1141.842105263158'), ('Siqi', '980.9076923076923'), ('Sirui', '949.7916666666666'), ('Siyu', '1241.1379310344828'), ('Sloane', '259.63589743589745'), ('Smriti', '1184.8260869565217'), ('Sneha', '1225.388888888889'), ('Snehadevi S', '632.3150684931506'), ('So Jung', '514.1732026143791'), ('So Ra', '572.2654545454545'), ('Sofia', '526.3535641547861'), ('Sofico', '1084.107142857143'), ('Sofie', '724.5'), ('Sofiya', '541.1570881226054'), ('Sofya', '640.8727272727273'), ('Sohyun', '1004.6666666666666'), ('Sonia', '1029.0980392156862'), ('Sonja', '885.0976744186047'), ('Sophia', '1221.3333333333333'), ('Sophie', '600.6881091617934'), ('Sorana', '213.75043630017453'), ('Sowjanya', '813.1357142857142'), ('Spurti', '1149.3125'), ('Sri Vaishnavi', '792.1927710843373'), ('Stamatia', '841.8387096774194'), ('Stanislava', '312.54158964879855'), ('Stefana', '993.4255319148937'), ('Stefani', '1167.3333333333333'), ('Stefania', '759.2894995093228'), ('Stefanie', '387.73412112259973'), ('Steffi', '939.746835443038'), ('Stephanie', '439.87772357723577'), ('Stephanie Mariel', '1035.5548387096774'), ('Storm', '573.6708333333333'), ('Su Jeong', '426.3886462882096'), ('Su Wei', '217.2493188010899'), ('Suellen', '911.7619047619048'), ('Sultan', '944.2432432432432'), ('Sun Jung', '812.4581005586592'), ('Sunae', '1229.8'), ('Sunam', '611.0757575757576'), ('Sung Hee', '635.7449168207024'), ('Susan', '1015.6792452830189'), ('Susanne', '417.8053097345133'), ('Suzan', '982.7222222222222'), ('Suzuho', '980.6666666666666'), ('Suzy', '698.7567567567568'), ('Svenja', '844.203007518797'), ('Svetlana', '267.03227571115974'), ('Sviatlana', '691.9934640522875'), ('Sybille', '1002.6792452830189'), ('Sylvia', '869.1702127659574'), ('Sylwia', '787.7645348837209'), ('Syna', '791.1240506329113'), ('Szabina', '772.3186813186813'), ('Tadeja', '343.0985324947589'), ('Taisiya', '969.6588235294117'), ('Talya', '1230.2'), ('Tamachan', '949.8059701492538'), ('Tamar', '1118.4166666666667'), ('Tamara', '614.0434782608696'), ('Tamari', '1146.3934426229507'), ('Tamarine', '121.82273948075202'), ('Tamaryn', '386.7025316455696'), ('Tamira', '135.88910505836577'), ('Tammi', '601.906914893617'), ('Tanaporn', '1113.2325581395348'), ('Tanya', '1023.089430894309'), ('Tara', '475.2979683972912'), ('Tatia', '1075.0'), ('Tatiana', '681.9417582417583'), ('Tatjana', '247.7449768160742'), ('Tatsiana', '912.1077844311377'), ('Tayisiya', '747.3172413793103'), ('Taylor', '387.5662100456621'), ('Tea', '1068.7457627118645'), ('Teliana', '461.06702898550725'), ('Tena', '614.9346733668342'), ('Teodora', '489.27513227513225'), ('Tereza', '557.241418764302'), ('Terri', '963.5'), ('Tess', '696.2878787878788'), ('Tessah', '390.2361111111111'), ('Tetiana', '437.4119658119658'), ('Tetyana', '398.83478260869566'), ('Thai Sa Grana', '802.7222222222222'), ('Theo', '650.1206896551724'), ('Theresa', '1159.5632183908046'), ('Tijana', '1017.7777777777778'), ('Timea', '182.02426160337552'), ('Tina', '425.82394366197184'), ('Tinatin', '810.6666666666666'), ('Ting Fei', '739.7727272727273'), ('Ting Jr', '789.6113989637306'), ('Tingting', '1015.2352941176471'), ('Tjasa', '743.1953125'), ('Tomoko', '838.8065217391304'), ('Tori', '841.7167381974249'), ('Tornado Alicia', '878.1666666666666'), ('Trang', '1029.3196721311476'), ('Treta', '1009.8666666666667'), ('Tsvetana', '131.02074074074073'), ('Tyra', '992.4870588235294'), ('Ulrikke', '506.39344262295083'), ('Ulyana', '844.0692307692308'), ('Urszula', '229.35687022900763'), ('Ushna', '1132.4109589041095'), ('Usue Maitane', '411.5068493150685'), ('Valentina', '921.3333333333334'), ('Valentine', '751.2668918918919'), ('Valentini', '479.8914728682171'), ('Valentyna', '368.14331210191085'), ('Valeria', '661.8474576271186'), ('Valerie', '806.2648401826484'), ('Valeriya', '799.8668224299065'), ('Vanda', '696.4126984126984'), ('Vanesa', '579.437984496124'), ('Vanessa', '398.3106546854942'), ('Vania', '185.75'), ('Vaniya', '1130.6037735849056'), ('Vanja', '1089.7111111111112'), ('Varatchaya', '450.4642082429501'), ('Varunya', '894.3846153846154'), ('Varvara', '382.6888217522659'), ('Vasilisa', '613.5330490405117'), ('Vaszilisza', '859.8103448275862'), ('Vendula', '729.0117647058823'), ('Venus', '32.984862819299906'), ('Vera', '195.66923570969814'), ('Verena', '958.1327800829876'), ('Veronica', '726.1852387843704'), ('Veronica M', '951.0075757575758'), ('Veronika', '734.6018957345972'), ('Vesna', '240.0448979591837'), ('Vicky', '1252.9130434782608'), ('Victoire', '1138.8490566037735'), ('Victoria', '444.9760935910478'), ('Victoria Ariadna', '1236.0'), ('Viktoria', '566.9148936170212'), ('Viktoriia', '1236.5333333333333'), ('Viktorija', '507.4'), ('Viktoriya', '736.2288557213931'), ('Viktoryia', '966.4671052631579'), ('Vilma Y', '1243.0'), ('Vincenza', '1214.1142857142856'), ('Vinciane', '1150.0'), ('Violetta', '1170.840579710145'), ('Virginie', '355.88102893890675'), ('Vishesh', '1208.952380952381'), ('Vita', '1201.25'), ('Vitalia', '296.2025641025641'), ('Vivian', '670.9108527131783'), ('Vivien', '607.2810218978102'), ('Vivienne', '659.2103004291846'), ('Vlada', '595.3291666666667'), ('Vladica', '943.5432098765432'), ('Vladimira', '823.8770833333333'), ('Vladislava', '1006.1769911504425'), ('Vladyslava', '856.0782608695653'), ('Vojislava', '555.6572164948453'), ('Voni', '999.0215053763441'), ('Wan Ting', '701.4009009009009'), ('Wan Yi', '1081.142857142857'), ('Warona', '1249.3333333333333'), ('Wen Hsin', '440.35214446952597'), ('Wen Ling', '1117.55'), ('Wendy Qi Wen', '1011.469696969697'), ('Weronika Jasmina', '1152.7837837837837'), ('Whitney', '886.1407407407407'), ('Wiktoria', '1083.1454545454546'), ('Wing Yau Venise', '585.2589641434263'), ('Wushuang', '937.7878787878788'), ('Xenia', '661.2222222222222'), ('Xi Yao', '714.8653846153846'), ('Xiao', '814.4171122994652'), ('Xiaodi', '467.24657534246575'), ('Xiaorong', '848.4418604651163'), ('Xiaoxi', '737.7547169811321'), ('Ximena', '712.2780373831775'), ('Xin', '694.4808743169399'), ('Xin Yu', '1022.3333333333334'), ('Xinyu', '480.646017699115'), ('Xinyun', '309.35767790262173'), ('Xiyu', '954.6'), ('Xu Liu', '488.7671232876712'), ('Ya', '1225.75'), ('Ya Hsuan', '586.865'), ('Yafan', '325.6162790697674'), ('Yan', '768.560975609756'), ('Yana', '740.0214504596527'), ('Yang', '1177.8823529411766'), ('Yanina', '381.2581602373887'), ('Yanni', '1059.2702702702702'), ('Yarden', '1166.875'), ('Yaroslava', '211.41240310077518'), ('Yasmin', '702.1784386617101'), ('Yasmina', '1227.7777777777778'), ('Yasmine', '983.0410958904109'), ('Yasmyn', '1261.8181818181818'), ('Yawna', '1110.4594594594594'), ('Yayuk', '114.78806907378336'), ('Ye Ra', '431.3144424131627'), ('Ye Xin', '1048.081081081081'), ('Yekaterina', '1155.8191489361702'), ('Yelena', '897.4873949579832'), ('Yeong Won', '973.8617021276596'), ('Yevgeniya', '724.8712871287129'), ('Yi', '791.0756207674943'), ('Yi Fan', '381.5512572533849'), ('Yi Jing', '656.8787276341948'), ('Yi Miao', '418.2566137566138'), ('Yidi', '1185.030303030303'), ('Yihong', '1209.625'), ('Yijia', '1063.9411764705883'), ('Ying', '661.3972602739726'), ('Ying Ying', '403.8775981524249'), ('Yixuan', '801.6712328767123'), ('Ylena', '892.3561643835617'), ('Ylona Georgiana', '642.9487179487179'), ('Yoko', '1128.901098901099'), ('Yolande', '1068.4619883040937'), ('Yoo Ri', '1263.7666666666667'), ('Yoon Young', '844.9310344827586'), ('Yoshimi', '1096.9130434782608'), ('Yosr', '1222.24'), ('You Na', '1170.3461538461538'), ('Ysaline', '458.86633663366337'), ('Yu Jin', '1098.357142857143'), ('Yu Tong', '1239.6666666666667'), ('Yuan', '1054.0'), ('Yuanyi', '891.2340425531914'), ('Yue', '983.359649122807'), ('Yue Yue', '444.96190476190475'), ('Yuenu', '961.876923076923'), ('Yujia', '1034.1304347826087'), ('Yuka', '748.8250591016548'), ('Yukako', '1071.5833333333333'), ('Yuki', '876.7428571428571'), ('Yuki Kristina', '698.8285714285714'), ('Yukina', '857.1692307692308'), ('Yukun', '824.3936170212766'), ('Yulia', '485.35135135135135'), ('Yuliana', '725.5322195704057'), ('Yuliya', '384.87776983559684'), ('Yumi', '799.1332586786115'), ('Yung Jan', '166.6586270871985'), ('Yuqi', '1047.3529411764705'), ('Yurika', '322.17758620689654'), ('Yuriko', '1041.5367231638418'), ('Yurina', '746.4803493449782'), ('Yuuki', '608.1309090909091'), ('Yuval', '1230.2'), ('Yuxuan', '545.449074074074'), ('Yvonne', '318.2867132867133'), ('Zaineb', '1227.344827586207'), ('Zalina', '867.5288461538462'), ('Zarah', '709.625'), ('Zarina', '222.81428571428572'), ('Zeel', '791.2352941176471'), ('Zeynep  Sena', '1229.5714285714287'), ('Zhanlan', '627.7777777777778'), ('Zhaoxuan', '629.0081967213115'), ('Zhibek', '1058.0'), ('Zhima', '1144.45'), ('Zhou', '1237.9'), ('Zhuoma', '989.75'), ('Zi', '391.4656290531777'), ('Zinovia', '1221.5'), ('Ziyue', '878.4606741573034'), ('Zoe', '765.3777777777777'), ('Zoe Gwen', '935.081081081081'), ('Zsofia', '916.559633027523'), ('Zuzana', '451.92875448487956'), ('Zuzanna', '794.5416666666666')]",False
471,Find the total ranking points for each player and their first name.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT sum(T1.ranking_points) , T2.first_name FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name",,True
472,"What are the first names of all players, and their total ranking points?",medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , sum(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('0', 'Damilola'), ('100', 'Jiatian'), ('1000', 'Gaelle'), ('1002', 'Corina'), ('1002', 'Jenny'), ('1003', 'Karis'), ('1005319', 'Ekaterina'), ('100848', 'Ivana'), ('10087', 'Vanda'), ('101', 'Anca'), ('101', 'Merel'), ('10107', 'Kazusa'), ('1011058', 'Flavia'), ('1013', 'Luca'), ('10133', 'Ingrid Esperanza'), ('1016', 'Peggy'), ('10167', 'Lou'), ('1017069', 'Anna'), ('10178', 'Marianna'), ('101816', 'Yurika'), ('10191', 'Hilda'), ('102', 'Man Ying Maggie'), ('102', 'Mary Ann'), ('102022', 'Kyra'), ('102140', 'Shelby'), ('102260', 'Corinna'), ('1026', 'Marisa'), ('102623', 'Gabriela'), ('102693', 'Mervana'), ('103', 'Elaine'), ('10322', 'Iva'), ('1034', 'Cynthia'), ('1034', 'Sai Samhitha'), ('1036', 'Voni'), ('10360', 'Sina'), ('103659', 'Magda'), ('1039', 'Helen'), ('105', 'Shou Na'), ('105', 'Vincenza'), ('1050', 'Taisiya'), ('10507', 'Albina'), ('10539', 'Sofie'), ('1054', 'Suzy'), ('106', 'Victoria Ariadna'), ('10616', 'Amy'), ('1063', 'Hongrui'), ('10630', 'Tori'), ('106375', 'Maria Teresa'), ('106520', 'Giulia'), ('1067', 'Maja'), ('106762', 'Claudine'), ('106927', 'Vitalia'), ('107', 'Adrienn'), ('107', 'Mila'), ('10705', 'Xinyu'), ('10751', 'Ai'), ('107595', 'Ying Ying'), ('1077', 'Carmen Raluca'), ('107880', 'Anna Karolina'), ('108', 'Sohyun'), ('1082', 'Nora'), ('1083', 'Astra'), ('10859', 'Pia'), ('10865', 'Fatima'), ('109', 'Dorien'), ('1090', 'Marianne'), ('109192', 'Martina'), ('1092', 'Jordana'), ('109256', 'Xinyun'), ('1093', 'Gabrielle Faith'), ('10947', 'Jan'), ('1096', 'Oana'), ('1098', 'Mia Nicole'), ('110', 'Agne'), ('110290', 'Zi'), ('1103', 'Elizabeth Anita Alexandria'), ('1103', 'Robyn'), ('11032', 'Benedetta'), ('1108372', 'Lucie'), ('111', 'Caroline B'), ('111', 'Rosa'), ('111', 'Shangqing'), ('1119', 'Brittany'), ('11201', 'Sviatlana'), ('11216', 'Eduarda'), ('11218', 'Ema'), ('11251', 'Yasmin'), ('112562', 'Katalin'), ('112570', 'Teliana'), ('11260', 'Fanny'), ('11320', 'Maiko'), ('1132514', 'Angelique'), ('113359', 'Saisai'), ('11393', 'Alina'), ('114', 'June'), ('114098', 'Donna'), ('114104', 'Monique'), ('1142', 'Ilka'), ('114687', 'Marie Eve'), ('1149', 'Simone'), ('115', 'Nina Isabella'), ('1152', 'Bhuvana'), ('115293', 'Abigail'), ('11569', 'Georgina'), ('11572', 'Katy'), ('11596', 'Anja'), ('116', 'Clara'), ('11608', 'Arabela'), ('11623', 'Lizette'), ('1165205', 'Daniela'), ('11653', 'Wan Ting'), ('116548', 'Ajla'), ('116857', 'Qiang'), ('11694', 'Wing Yau Venise'), ('117', 'Doga Selen'), ('117', 'Shir'), ('11714', 'Camilla'), ('11721', 'Azra'), ('117472', 'Masa'), ('1176', 'Kaja'), ('117825', 'Sharon'), ('118', 'Huijie'), ('1180', 'Miriana'), ('1187', 'Ludmilla'), ('11873', 'Akari'), ('1188', 'Patcharin'), ('1192', 'Demi'), ('119279', 'Diana'), ('11954', 'Cecilia'), ('119756', 'Olivia'), ('119797', 'Cagla'), ('12', 'Anastasiia'), ('12', 'Brienne'), ('12', 'Damini'), ('12', 'Maia A'), ('12', 'Mouna'), ('120', 'Abiodun'), ('120', 'Hsin Yuan'), ('120', 'Wen Ling'), ('120995', 'Natalie'), ('121', 'Zhuoma'), ('1213', 'Bianka'), ('1214', 'Pranjala'), ('122', 'Hikari'), ('1222', 'Hye Min'), ('122331', 'Regina'), ('1225', 'Erina'), ('1225', 'Ioana'), ('1227', 'Claudia Antonia'), ('1229', 'Tanya'), ('12295', 'Robin'), ('123', 'Boba'), ('12304', 'Clothilde'), ('123243', 'Zarina'), ('1235', 'Anastasia Evgenyevna'), ('1235', 'Maia'), ('1236', 'Costanza'), ('1236', 'Kylie'), ('12379', 'Macall'), ('12388', 'Kim Alice'), ('1240', 'Monika'), ('12402', 'Tena'), ('12474', 'Yuka'), ('1247887', 'Elena'), ('12519', 'Chun Mei'), ('12525', 'Janina'), ('1254', 'Vladislava'), ('12554', 'Elyne'), ('1258', 'Emiliana'), ('1259', 'Yue'), ('126', 'Apichaya'), ('126', 'Stefani'), ('1261', 'Dabin'), ('12633', 'Indire'), ('126811', 'Estrella'), ('12693', 'Yurina'), ('1270', 'Sarah Beth'), ('12708', 'Aminat'), ('1272285', 'Marion'), ('12727', 'Andreea Roxana'), ('12728', 'Emelyn'), ('1277', 'Sang Hee'), ('128', 'Livia'), ('128183', 'Junri'), ('12829', 'Alexia'), ('128509', 'Yayuk'), ('1289', 'Tatsiana'), ('129', 'Colomba'), ('129', 'Juliana Rocha'), ('12906', 'Kamila'), ('1297', 'Gloria'), ('13', 'Giorgie'), ('13006', 'Poojashree'), ('13010', 'Ivonne'), ('13037', 'Marcella'), ('13041', 'Vivien'), ('1306087', 'Francesca'), ('13064', 'Sarah Rebecca'), ('1312', 'Seone'), ('13141', 'Chinami'), ('13241', 'Nathaly'), ('13254', 'Megan'), ('1333', 'Nozomi'), ('13389', 'Alexis'), ('1339', 'Marrit'), ('134', 'Dewi'), ('134', 'Nonna'), ('134', 'Sneha'), ('1344', 'Brynn'), ('135', 'Lizaveta'), ('1352', 'Xiaoxi'), ('1358', 'Ineke'), ('1358928', 'Na'), ('136', 'Camila Vital'), ('136', 'Yidi'), ('1363', 'Shao Yuan'), ('13643', 'Angelica'), ('1365', 'Andreea Amalia'), ('1367', 'Ana Victoria'), ('13686', 'Natalija'), ('13697', 'Kayla'), ('13717', 'Agnese'), ('137327', 'Belinda'), ('1375', 'Jaeda'), ('13761', 'Ellen'), ('138', 'Maurien'), ('1380', 'Yixuan'), ('1381', 'Yolande'), ('13843', 'Irina Maria'), ('138782', 'Alexa'), ('1388', 'Maria Paulina'), ('1397', 'Stephanie Mariel'), ('13978', 'Jil Belen'), ('1401', 'Rita'), ('140108', 'Aiko'), ('1401125', 'Nadia'), ('141', 'Ah'), ('141', 'Assia'), ('141', 'Deeon'), ('14123', 'Milana'), ('141257', 'Maria Fernanda'), ('141257', 'Rika'), ('141281', 'Kathrin'), ('14129', 'Makoto'), ('1417', 'Da Hye'), ('141876', 'Claire'), ('142', 'Jasmine Amber'), ('142', 'Nelise'), ('142', 'Shelly'), ('1420', 'Ziyue'), ('14212', 'Natasa'), ('14213', 'Carol'), ('1424', 'Alba'), ('142454', 'Lindsay'), ('1427', 'Anna Maria'), ('14277', 'Guadalupe'), ('143', 'Gebriela'), ('143', 'Se Hyun'), ('1433335', 'Anastasia'), ('143422', 'Janette'), ('1437656', 'Samantha'), ('144', 'Seira'), ('1440', 'Emilie'), ('1445', 'Xi Yao'), ('1446', 'Julyette Maria Josephine'), ('1446', 'Panna'), ('1453', 'Ylona Georgiana'), ('14578', 'Xenia'), ('1458', 'Miriam Bianca'), ('14608', 'Manon'), ('1465', 'Boyan'), ('1469', 'Seda'), ('147', 'Madeline'), ('147', 'Paige Mary'), ('14709', 'Ran'), ('148', 'Maria Camila'), ('148', 'Sarai Delfina'), ('148', 'Schena'), ('1483', 'Shu Ying'), ('14838', 'Aki'), ('1484', 'Andreea'), ('14865', 'Jasmine'), ('148701', 'Raluca'), ('148728', 'Kristyna'), ('149', 'Dina'), ('14942', 'Lena Marie'), ('15', 'Chaoyi'), ('15', 'Jiakang'), ('15', 'Jin'), ('15', 'Joanne'), ('15', 'Luna'), ('15', 'Mananchaya'), ('15', 'Mihaela Lorena'), ('15', 'Moulika'), ('15', 'Sunae'), ('150', 'Dajana'), ('15001', 'Chantal'), ('1501', 'Zsofia'), ('15071', 'Yuuki'), ('151', 'Tingting'), ('15102', 'Kinnie'), ('15190', 'Chloe'), ('15198', 'Valentini'), ('152', 'Leah'), ('15218', 'Caitlin'), ('15248', 'Yuliana'), ('1527', 'Ilze'), ('153', 'Martha'), ('1535', 'Nagi'), ('1536', 'Kana'), ('15365', 'Natasha'), ('154', 'Arlinda'), ('154', 'Mahak'), ('15401', 'Chihiro'), ('1544', 'Sultan'), ('154484', 'Mariya'), ('154599', 'Jessica'), ('1546', 'Ylena'), ('155', 'Alory Regina Elorriaga'), ('155143', 'Yulia'), ('1553', 'Jiahui'), ('1558', 'Noel'), ('156', 'Afroditi'), ('156', 'Maria Lourdes'), ('156531', 'Julie'), ('157', 'Amira'), ('157', 'Francisca'), ('1578', 'Alejandra'), ('158', 'Agustina Elena'), ('1583', 'Lisa Marie'), ('1589', 'Lucrezia'), ('1589674', 'Ana'), ('159', 'Amrita'), ('159', 'Andrina'), ('159', 'Spurti'), ('159155', 'Valeria'), ('15935', 'Dalma'), ('15955', 'Ana Sofia'), ('15970', 'Kathinka'), ('160', 'Anda'), ('160', 'Dagmara'), ('160164', 'Michelle'), ('1607', 'Daneika'), ('1609', 'Emmanuelle'), ('160945', 'Katerina'), ('161', 'Ramya'), ('1614', 'Domenica'), ('162', 'Muge'), ('1622', 'Clemence'), ('1624', 'Marlies'), ('1626', 'Mira'), ('1626', 'Sylvia'), ('16276', 'Susanne'), ('163', 'Mafalda'), ('16303', 'Natela'), ('163036', 'Darya'), ('163239', 'Naomi'), ('1633', 'Louise'), ('164', 'Donika'), ('164900', 'Lenka'), ('16494', 'Nanuli'), ('165013', 'Rebecca'), ('165477', 'Erika'), ('1657', 'Anette'), ('16621', 'Valeriya'), ('16663', 'Daniella'), ('166760', 'Brenda'), ('167', 'Farah'), ('1671', 'Luisa'), ('1676', 'Imane Maelle'), ('1678', 'Veronica M'), ('1679', 'Hayley'), ('16790', 'Marcela'), ('168', 'Denise Antonela'), ('168', 'Rebeca'), ('16886', 'Rocio'), ('169', 'Lidia'), ('169', 'Selin'), ('169371', 'Annika'), ('169500', 'Vesna'), ('1696', 'Li'), ('170', 'Nevena'), ('17020', 'Romana Caroline'), ('170617', 'Daria'), ('17078', 'Ya Hsuan'), ('171', 'Melissa Ishuan'), ('17185', 'Lucia'), ('172', 'Annie'), ('172004', 'Kai Chen'), ('172431', 'Paula'), ('1726', 'Chiraz'), ('1728', 'Yuriko'), ('173', 'Leslie'), ('17382', 'Indy'), ('1744', 'Sri Vaishnavi'), ('1748', 'Yasmine'), ('17514', 'Patrycja'), ('17577', 'Krista'), ('17587', 'Fernanda'), ('17597', 'Danica'), ('176', 'Mi Jeong'), ('177170', 'Kurumi'), ('177458', 'Lara'), ('178', 'Sarvinoz'), ('17819', 'Jesika'), ('1788', 'Mayar'), ('179', 'Weronika Jasmina'), ('1795', 'Noelle'), ('17967', 'Anhelina'), ('17975', 'Sanaz'), ('18', 'Constanze'), ('18', 'Gulchekhra'), ('18', 'Jamilya'), ('18', 'Shiori'), ('18', 'Terri'), ('180', 'Miranda'), ('1801033', 'Agnieszka'), ('181', 'Pei Ju'), ('182', 'Yoo Ri'), ('18210', 'So Ra'), ('18211', 'Elixane'), ('18219', 'Fiona'), ('1822', 'Luisa Marie'), ('1828', 'Yukun'), ('18286', 'Marketa'), ('1832', 'Petia'), ('18371', 'Sofiya'), ('184', 'Yujia'), ('1848', 'Georgia Andreea'), ('185', 'Maria Agustina'), ('1856', 'Yelena'), ('1858', 'Mi Rae'), ('1864', 'Tornado Alicia'), ('187', 'Chantelle'), ('187', 'Xin Yu'), ('1873', 'Haruna'), ('18781', 'Vojislava'), ('18824', 'Celine'), ('1884', 'Min'), ('1884', 'Trang'), ('1892', 'Maria Constanza De Las Mercedes'), ('1894', 'Katherine Gabriela'), ('1899', 'Kristy'), ('1901', 'Agata'), ('19048', 'Angelina'), ('19065', 'Despina'), ('1906587', 'Svetlana'), ('19092', 'Bernarda'), ('190997', 'Jamie'), ('191', 'Alexandria'), ('1917', 'Magali'), ('19173', 'Mai'), ('1920', 'Beatriz Maria'), ('19223', 'Na Ri'), ('192296', 'Severine'), ('1923', 'Dasha'), ('1929137', 'Vera'), ('193362', 'Tereza'), ('1936', 'Karine'), ('193767', 'Mandy'), ('19446', 'Aryna'), ('1945', 'Napatsakorn'), ('19495', 'Ximena'), ('195', 'Saana'), ('1955', 'Joana'), ('1958404', 'Petra'), ('1960', 'Lilla'), ('1962', 'Anaeve'), ('1977', 'Mirabelle'), ('1978', 'Eden'), ('197904', 'Patricia'), ('198', 'Shakhnoza'), ('1987', 'Viktoryia'), ('1990', 'Amina'), ('1991', 'Jillian'), ('1997', 'Margarida'), ('19989', 'Yi'), ('2', 'Olawaseun'), ('200', 'Melissa'), ('201', 'Mihoki'), ('201173', 'Nina'), ('201258', 'Mariana'), ('20132', 'Chayenne'), ('20142', 'Kanae'), ('201856', 'Renata'), ('20196', 'Melis'), ('202', 'Aneta'), ('2020', 'Samira'), ('202172', 'Camila'), ('20236', 'Zhaoxuan'), ('2025', 'Noelia'), ('20269', 'Yumi'), ('202697', 'Casey'), ('202780', 'Heather'), ('2034', 'Qiu Yu'), ('20368', 'Elizabeth'), ('203782', 'Misaki'), ('204801', 'Eugenie'), ('20481', 'Marija'), ('2052', 'Zalina'), ('206', 'Almudena'), ('206', 'Mariia'), ('2061', 'Momoko'), ('2061', 'Saray'), ('206375', 'Yuliya'), ('206981', 'Evgeniya'), ('207', 'Lauryn'), ('2070', 'Manca'), ('2076949', 'Caroline'), ('208108', 'Sesil'), ('20869', 'Cory Ann'), ('209', 'Parris'), ('2094', 'Ivania'), ('20989', 'Eugeniya'), ('21', 'Ana Luisa'), ('21', 'Avgusta'), ('21', 'Betina'), ('21', 'Julia Mansano'), ('21', 'Zeynep  Sena'), ('210', 'Maud'), ('210101', 'Kveta'), ('21152', 'Storm'), ('21205', 'Miharu'), ('2122', 'Shakhlo'), ('21261', 'Fatma'), ('2127', 'Szabina'), ('2127', 'Tea'), ('2133', 'Macarena'), ('2133', 'Ornella'), ('21340', 'Piia'), ('21360', 'Yue Yue'), ('2141', 'Ana Paula'), ('214121', 'Kiki'), ('21417', 'Korina'), ('2142854', 'Victoria'), ('215', 'Deria'), ('21599', 'Ankita'), ('21624', 'Antonia'), ('2166', 'Zhanlan'), ('21685', 'Francoise'), ('21728', 'Agustina'), ('2177', 'Anita'), ('219', 'Adnya'), ('219', 'Agata Jadwiga'), ('219', 'Maureen'), ('2191', 'Yuki Kristina'), ('22', 'Caty'), ('22', 'Layne'), ('22', 'Nikita'), ('221', 'Inger'), ('2216', 'Liz Tatiane'), ('221695', 'Silvia'), ('2217', 'Ai Wen'), ('2221', 'Clelia'), ('2221', 'Vendula'), ('224', 'Hao Ching'), ('224', 'Nattawadee'), ('224', 'Sandy'), ('22443', 'Yi Jing'), ('2249', 'Theo'), ('225', 'May'), ('22578', 'Vlada'), ('2258', 'Zuzanna'), ('225987', 'Lesia'), ('226', 'Aimee'), ('226', 'Mariaryeni'), ('2266', 'Madrie'), ('2275', 'Sadafmoh'), ('228', 'Andjela'), ('228', 'Rafaela'), ('2280', 'Kajsa'), ('22840', 'Miyabi'), ('228538', 'Akgul'), ('2287', 'Eleanor'), ('229', 'Kanako'), ('229391', 'Yung Jan'), ('22977', 'Sherazad'), ('22978', 'Quirine'), ('230', 'Micaela'), ('230262', 'Tatjana'), ('23195', 'Riko'), ('2321', 'Ashvarya'), ('2338', 'Anamika'), ('23411', 'Liga'), ('235', 'Alessandra'), ('23564', 'Montserrat'), ('235721', 'Coco'), ('2358', 'Alice Andrada'), ('236', 'Shiran'), ('2362', 'Libby'), ('23620', 'Deniz'), ('23668', 'Maya'), ('2369', 'Aliona'), ('237', 'Kaylah'), ('2371', 'Ho Ching'), ('2378', 'Shanshan'), ('238', 'Aselya'), ('238', 'Gyulnara'), ('238803', 'Alberta'), ('23897', 'Lavinia'), ('23968', 'Miyu'), ('23976', 'Doroteja'), ('24', 'Christie'), ('24', 'Emilija'), ('24', 'Hollie'), ('24', 'Jaimy Gayle'), ('24', 'Pei Hsuan'), ('24', 'Rui'), ('24', 'Ya'), ('24', 'Yihong'), ('2400', 'Ulyana'), ('240195', 'Greta'), ('2403', 'Ioana Diana'), ('24062', 'Keren'), ('240762', 'Cara'), ('241', 'Pamela'), ('24184', 'Aranza'), ('242', 'You Na'), ('2421', 'Ana Bianca'), ('242619', 'Michaella'), ('24279', 'Yuxuan'), ('243', 'Pippa'), ('2433', 'Ainhoa'), ('2434', 'Maddison'), ('2438', 'Christine'), ('2446', 'Eetee'), ('244807', 'Lauren'), ('245', 'Angela'), ('245139', 'Mathilde'), ('24523', 'Nungnadda'), ('24542', 'Miki'), ('24569', 'Mi'), ('24595', 'Katharina'), ('247237', 'Stefanie'), ('2484', 'Giorgia'), ('2487', 'Britt'), ('2489', 'Malin'), ('24897', 'Stefania'), ('249', 'Kamilla'), ('249446', 'Edina'), ('250056', 'Catalina'), ('251', 'Naz'), ('2515436', 'Jelena'), ('25166', 'Constance'), ('25183', 'Alyona'), ('2524', 'Alessia'), ('2526', 'Natia'), ('253', 'Ivone'), ('2531', 'Nicky'), ('253320', 'Alla'), ('253471', 'Romina'), ('254491', 'Yvonne'), ('254520', 'Karin'), ('25496', 'Marie'), ('255', 'Larikah'), ('255', 'Vaniya'), ('2570', 'Vladyslava'), ('259', 'Nam Yeon'), ('259116', 'Nuria'), ('2592', 'Rachael'), ('26', 'Beauty'), ('26059', 'Kyung Mi'), ('26077', 'Tammi'), ('2609', 'Melina'), ('26185', 'Na Lae'), ('26209', 'Jade'), ('26226', 'Viktoriya'), ('26280', 'Peangtarn'), ('2634', 'Riya'), ('2641', 'Saska'), ('265', 'Alessondra'), ('26585', 'Chang'), ('2661', 'Nadja'), ('266197', 'Sandra'), ('2662', 'Liubov'), ('26624', 'Basak'), ('266251', 'Zuzana'), ('267679', 'Marta'), ('26779', 'Chen'), ('268277', 'Anastasija'), ('268372', 'Jana'), ('26897', 'Ekaterine'), ('269', 'Astrid Wanja'), ('269', 'Paula Andrea'), ('26950', 'Ilona'), ('27', 'Carlota'), ('27', 'Sabina Elena'), ('27', 'Sarlota'), ('27', 'Vilma Y'), ('27', 'Yasmina'), ('270102', 'Kimiko'), ('27011', 'Evelyn'), ('2706', 'Nives'), ('27061', 'Beatrice'), ('2710', 'Josepha'), ('27118', 'Ulrikke'), ('272', 'Kimika'), ('272', 'Mirjam'), ('272889', 'Sania'), ('2738', 'Dhruthi'), ('27452', 'Rushmi'), ('27462', 'Jacqueline'), ('274936', 'Su Wei'), ('275', 'Yanni'), ('275255', 'Urszula'), ('275364', 'Chanelle'), ('27580', 'Hiroko'), ('276', 'Chompoothip'), ('276', 'Sirui'), ('277', 'Chengyiyi'), ('2772', 'Zoe'), ('27804', 'Ysaline'), ('2782', 'Hanna'), ('279', 'Milena'), ('279', 'Nermeen'), ('27997', 'Lena'), ('28', 'Roosh'), ('280', 'Antonela'), ('28045', 'Adriana'), ('28098', 'Nathalia'), ('281', 'Laura D'), ('281', 'Ye Xin'), ('281', 'Yuan'), ('2820', 'Snehadevi S'), ('282445', 'Mona'), ('283166', 'Bojana'), ('284', 'Meritxell'), ('285', 'Yoko'), ('2850', 'Berfu'), ('286', 'Julita'), ('286', 'Lesedi Sheya'), ('2864', 'Gozal'), ('2875425', 'Venus'), ('2877', 'Zoe Gwen'), ('288', 'Ailen'), ('288', 'Ana Gabriela'), ('289', 'Carson'), ('289', 'Giovanna'), ('290', 'Ghislaine'), ('290299', 'Melinda'), ('291', 'Ivanka'), ('291', 'Vanja'), ('292', 'Ina'), ('29214', 'Romana'), ('2922', 'Brianna'), ('29250', 'Nastja'), ('2927', 'Mizuno'), ('2929', 'Agni'), ('293366', 'Irina Camelia'), ('2935', 'Giuliana'), ('294', 'Haine'), ('294', 'Kei'), ('294', 'Maria Jesus'), ('29442', 'Annalisa'), ('296', 'Maria Del Rosario'), ('2961', 'Sowjanya'), ('296736', 'Maria Elena'), ('298', 'Kseniia'), ('298', 'Violetta'), ('29852', 'Sung Hee'), ('299530', 'Vania'), ('299698', 'Irina'), ('3', 'Arina Gabriela'), ('3', 'Himari'), ('3', 'Judith'), ('3', 'Marijana'), ('3', 'Phenomena'), ('30', 'Brindtha'), ('30', 'Damira'), ('30', 'Lyann'), ('30', 'Zhou'), ('3002', 'Jiaxi'), ('30035', 'Katie'), ('30136', 'Ganna'), ('3018', 'Verena'), ('30191', 'Viktoria'), ('3029', 'Emina'), ('302957', 'Galina'), ('30304', 'Justyna'), ('304', 'Abbi'), ('304', 'Lulu'), ('304', 'Tamari'), ('30401', 'Raquel'), ('30669', 'Vanesa'), ('3073', 'Malou'), ('308', 'Katrine Isabel'), ('308', 'Rona'), ('3085', 'Steffi'), ('309', 'Mitsumi'), ('3094', 'Nan Nan'), ('30972', 'Nicha'), ('309990', 'Ayumi'), ('310215', 'Christina'), ('3112', 'Manisha'), ('312', 'Blanca'), ('3121', 'Dana'), ('3127', 'Karla'), ('313187', 'Pauline'), ('3133', 'Irene'), ('314747', 'Elina'), ('315', 'Xiyu'), ('316', 'Malene'), ('316', 'Sasa'), ('31620', 'Cindy'), ('3165', 'Ronit'), ('317', 'Cristina Madalina'), ('31741', 'Gioia'), ('3187', 'Bunyawi'), ('3193', 'Karman'), ('32', 'Moyuka'), ('32', 'Yarden'), ('320', 'Suellen'), ('3200', 'Kyle'), ('320083', 'Eva'), ('3208', 'Paulina'), ('32169', 'Karen'), ('322202', 'Tamira'), ('323', 'Malika'), ('323', 'Maria Andrea'), ('323527', 'Alison'), ('324', 'Kelia'), ('324', 'Suzuho'), ('32445', 'Mayo'), ('325216', 'Polona'), ('3255', 'Shweta'), ('32581', 'Claudia'), ('3298', 'Denise'), ('33', 'Anne Sophie'), ('33', 'Daphne'), ('33', 'Intissar'), ('33', 'Lorenza'), ('33', 'Marcelina'), ('33', 'Nataliya'), ('330', 'Karyn'), ('33054', 'Allie'), ('331434', 'Mirjana'), ('333', 'Tijana'), ('33301', 'Chia Jung'), ('333150', 'Jarmila'), ('33388', 'Fangzhou'), ('33550', 'Nicola'), ('336', 'Rosie'), ('336', 'Shuyue'), ('336', 'Sofico'), ('3361', 'Tjasa'), ('33624', 'Audrey'), ('33672', 'Su Jeong'), ('3374', 'Chun Yan'), ('338', 'Valentina'), ('33822', 'Laura Ioana'), ('34', 'Kate'), ('340', 'Melisa'), ('3426', 'Jeannine'), ('344', 'Suzan'), ('3445', 'Lu'), ('34453', 'Jasmin'), ('3453', 'Ju Eun'), ('34570', 'Eri'), ('34647', 'Kristie'), ('3466', 'Matilda'), ('3470', 'Borislava'), ('3471', 'Ingrid'), ('34795', 'Tatiana'), ('34796', 'Chieh Yu'), ('3497', 'Ola'), ('351', 'Belen'), ('352458', 'Sloane'), ('354', 'Desirae'), ('354', 'Sanae'), ('355', 'Jodie Anna'), ('358', 'Chisa'), ('359', 'Frances'), ('359013', 'Jill'), ('3592', 'Yoon Young'), ('359374', 'Anna Lena'), ('3594', 'Sunam'), ('35957', 'Aleksandrina'), ('36', 'Ange Oby'), ('36', 'Eugenia'), ('36', 'Justina'), ('3613355', 'Maria'), ('3621', 'Anouk'), ('3623', 'Varunya'), ('362372', 'Marina'), ('3627', 'Carolina Meligeni Rodrigues'), ('363', 'Katharine'), ('363', 'Oliwia'), ('363', 'Wiktoria'), ('3633', 'Haruka'), ('3642', 'Rutuja'), ('3657', 'Michika'), ('366', 'Yijia'), ('36696', 'Ana Clara'), ('36714', 'Vivian'), ('36889', 'Carolina'), ('369810', 'Alisa'), ('37', 'Vinciane'), ('371035', 'Lourdes'), ('371140', 'Ksenia'), ('3714', 'Paula Catalina'), ('371662', 'Bethanie'), ('3724', 'Kanami'), ('37384', 'Paula Cristina'), ('3748', 'Khristina'), ('376', 'Estela'), ('376', 'Yekaterina'), ('3763', 'Vaszilisza'), ('377', 'Lusine'), ('377', 'Theresa'), ('37817', 'Kai Lin'), ('3783', 'Ying'), ('37981', 'Natsumi'), ('38', 'Cameron'), ('38086', 'Mari'), ('3809', 'Zarah'), ('3811', 'Olesya'), ('38116', 'Remi'), ('382', 'Oyku'), ('3825', 'Miriam'), ('383077', 'Kirsten'), ('383495', 'Aravane'), ('385', 'Alana'), ('38501', 'Ayu Fani'), ('385636', 'Melanie'), ('38651', 'Gail'), ('38793', 'Roxane'), ('3880', 'Emi'), ('38850', 'Taylor'), ('3894', 'Bernice'), ('39', 'Arthi'), ('39', 'Chanikarn'), ('39', 'Gulnaz'), ('39', 'Laylo'), ('390', 'Maxine'), ('390148', 'Agnes'), ('3905', 'Kaitlyn'), ('3908', 'Ester'), ('39102', 'Yana'), ('392', 'Draginja'), ('39270', 'Jovana'), ('3928', 'Helene'), ('39307', 'Sophie'), ('39352', 'Ipek'), ('39418', 'Justine'), ('3942', 'Despoina'), ('395', 'Iana'), ('395', 'Mahitha'), ('39523', 'Mailen'), ('39687', 'Yafan'), ('39782', 'Liezel'), ('39960', 'Shiho'), ('39989', 'Estelle'), ('4', 'Mariona'), ('40', 'Johana'), ('40', 'Lorraine M'), ('40', 'Mei Xu'), ('40', 'Olaya'), ('40', 'Ralina'), ('40060', 'Tamaryn'), ('401409', 'Varvara'), ('401857', 'Magdalena'), ('403', 'Kwan Yau'), ('403127', 'Paola'), ('40341', 'Lin'), ('40410', 'Ines'), ('404915', 'Yaroslava'), ('405', 'Eleonora'), ('4052', 'Alona'), ('4053', 'Cornelia'), ('406', 'Inci'), ('4060', 'Mariam'), ('40633', 'Wen Hsin'), ('407', 'Megumi'), ('40823', 'Danielle'), ('4093', 'Julieta Lara'), ('41', 'Eva Marie'), ('410', 'Gulben'), ('410', 'Karina Kristina'), ('410', 'Kelsey'), ('4106', 'Sharmada'), ('4122', 'Jessika'), ('4128', 'Pavla'), ('412872', 'Garbine'), ('413', 'Hana'), ('413', 'Ushna'), ('413759', 'Maria Jose'), ('414', 'Jin Ju'), ('414', 'Juliana'), ('41575', 'Amandine'), ('416', 'Kaitlin'), ('417', 'Meiling'), ('41792', 'Teodora'), ('41925', 'Darija'), ('4196', 'Yan'), ('4197', 'Lea'), ('42', 'Milagros'), ('42', 'Tatia'), ('42', 'Wan Yi'), ('4216', 'Linda'), ('4232828', 'Serena'), ('42527', 'Vasilisa'), ('4258', 'Raluca Georgiana'), ('42676', 'Sachie'), ('427', 'Mihika'), ('42773', 'Chiaki'), ('42925', 'Lesley'), ('4294', 'Oana Georgeta'), ('43', 'Emilia'), ('43020', 'Tetyana'), ('4314', 'Marine'), ('434692', 'Arantxa'), ('435038', 'Kateryna'), ('43550', 'Myrtille'), ('4356', 'Charlotte'), ('4368', 'Hirono'), ('43755', 'Patricia Maria'), ('43779', 'Elise'), ('4380', 'Naiktha'), ('43862', 'Jasmina'), ('439179', 'Eleni'), ('44', 'Federica Joe'), ('440', 'Genevieve'), ('440', 'Naima'), ('443', 'Ramu'), ('443695', 'Iveta'), ('444303', 'Katarina'), ('44497', 'Mallory'), ('447434', 'Nicole'), ('4499', 'Sonja'), ('45', 'Idia'), ('45', 'Talya'), ('45', 'Yuval'), ('45115', 'Leticia'), ('451414', 'Aleksandra'), ('452', 'Yu Jin'), ('4535', 'Xu Liu'), ('454', 'Victoire'), ('4543', 'Tyra'), ('455', 'Dominique'), ('456', 'Lamis'), ('456422', 'Tsvetana'), ('457043', 'Sorana'), ('4580', 'Kim'), ('45884', 'Catherine Cartan'), ('461', 'Sarahi'), ('4611', 'Shivika'), ('4612', 'Jia Qi'), ('46124', 'Shuko'), ('4619', 'Adrijana'), ('462', 'Kirsten Andrea'), ('46355', 'Jin A'), ('464', 'Andrea Renee'), ('464', 'Jara'), ('464', 'Sari'), ('4643', 'Hanyu'), ('465', 'Karolayne'), ('467', 'Ida'), ('467', 'Kady'), ('467', 'Simran Kaur'), ('468', 'Gabriela Nicole'), ('469', 'Rachel'), ('46908', 'Anais'), ('4703', 'Dunja'), ('4705', 'Kelly'), ('4709', 'Elisabeth'), ('472', 'Erica'), ('472', 'Joanna'), ('47282', 'So Jung'), ('4743', 'Iris'), ('476', 'Tinatin'), ('47651', 'Nigina'), ('4766', 'Ingrid Alexandra'), ('476768', 'Madison'), ('4777', 'Isabelle'), ('47854', 'Valentyna'), ('47867', 'Ye Ra'), ('4787', 'Margot'), ('4789', 'Xiao'), ('48', 'Georgiana'), ('48', 'Leylah Annie'), ('48', 'Mercedes'), ('480', 'Anushka'), ('480', 'Eliza'), ('480', 'Sonia'), ('4809', 'Klaudia'), ('48117', 'Jia Jing'), ('4831', 'Kimberly'), ('484', 'Antonina'), ('484', 'Olena'), ('484140', 'Sofia'), ('48788', 'Asia'), ('48811', 'Ani'), ('48857', 'Dalila'), ('49', 'Ronke'), ('490', 'Adeliya'), ('491', 'Nikol'), ('49122', 'Chi Chi'), ('4914', 'Chalena'), ('49207', 'Anna Giulia'), ('4941', 'Ao'), ('49412', 'Stanislava'), ('4962', 'Kotomi'), ('497', 'Stefana'), ('49767', 'Sachia'), ('49784', 'Sabina'), ('4980', 'Josephine'), ('4987', 'Catherine'), ('49980', 'Ashley'), ('5', 'Chelsea'), ('50', 'Ege'), ('500', 'Lindsey'), ('5007', 'Jaimee'), ('50184', 'Bibiane'), ('502', 'Susan'), ('5027', 'Nadezda'), ('505', 'Yuki'), ('5051', 'Tayisiya'), ('5057', 'Xiaodi'), ('50700', 'Louisa'), ('51', 'Andra Maria'), ('510', 'Priscila'), ('511', 'I Hsuan'), ('511', 'Magalie'), ('512490', 'Karolina'), ('515', 'Katya'), ('5155', 'Ashling'), ('515957', 'Barbora'), ('5173', 'Ayano'), ('51803', 'An Sophie'), ('519208', 'Virginie'), ('52', 'Ahsha'), ('52', 'En Pei'), ('52', 'Ilay'), ('52', 'Jia'), ('5214', 'Abbie'), ('5216', 'Alicja'), ('522', 'Libi'), ('522', 'Sharon Sanchana'), ('52274', 'Conny'), ('525', 'Maegan'), ('526', 'Ella'), ('5269', 'Anne Liz'), ('52889', 'Emily'), ('531', 'Si Qi'), ('53401', 'Barbara'), ('53480', 'Sally'), ('5356', 'Erin'), ('536', 'Elizabeta'), ('53610', 'Sheng Nan'), ('537', 'Busra'), ('5372', 'Ofri'), ('538', 'Clementina Eugenia'), ('5387', 'Raveena'), ('5393', 'Kimberley'), ('54', 'Anke'), ('54', 'Maftuna'), ('541', 'Emiliya'), ('54140', 'Tamara'), ('5416', 'Jaqueline Adina'), ('54172', 'Lyudmyla'), ('542', 'Meng Ning'), ('5422', 'Alix'), ('5425', 'Ioana Loredana'), ('5425', 'Nidhi'), ('543', 'Ivette'), ('54340', 'Varatchaya'), ('545', 'Danijela'), ('54798', 'Tara'), ('5493', 'Karina Ildor'), ('553107', 'Johanna'), ('555', 'Kristina N'), ('556', 'Rio'), ('5566', 'Ria'), ('559', 'Yuqi'), ('5592', 'Makiho'), ('55981', 'Misa'), ('5604', 'Whitney'), ('5619', 'Dayana'), ('562', 'Carlotta'), ('56212', 'Kumiko'), ('56242', 'Ons'), ('565', 'Molly'), ('56596', 'Nadiya'), ('567', 'Eleonore'), ('56817', 'Federica'), ('568191', 'Klara'), ('5683', 'Charlene'), ('56853', 'Oceane'), ('5687', 'Prarthana G'), ('571', 'Ayan'), ('574', 'Camille'), ('57585', 'Tina'), ('576', 'Guillermina'), ('57745', 'Alice'), ('578964', 'Laura'), ('5803', 'Rebeka'), ('581', 'Sybille'), ('5818', 'Klaartje'), ('58279', 'Oksana'), ('5866', 'Kamonwan'), ('587309', 'Monica'), ('58741', 'Ashleigh'), ('5880', 'Kelly S'), ('590911', 'Sabine'), ('59412', 'Cristina'), ('594217', 'Lisa'), ('594281', 'Tamarine'), ('5944', 'Harmony'), ('595', 'Laili'), ('596', 'Michele Alexandra'), ('59671', 'Nao'), ('596901', 'Alize'), ('597', 'Ryann'), ('597', 'Shuo'), ('59775', 'Evgenia'), ('59997', 'Liana Gabriela'), ('6', 'Loudmilla'), ('6', 'Madina'), ('6', 'Muazzez'), ('6', 'Shreya'), ('60', 'Tamar'), ('601693', 'Kristina'), ('602453', 'Yanina'), ('605', 'Andie K'), ('60646', 'Yi Fan'), ('60702', 'Amra'), ('6078', 'Laetitia'), ('608309', 'Stephanie'), ('60908', 'Pemra'), ('610820', 'Jie'), ('611', 'Jil Nora'), ('61196', 'Aliaksandra'), ('612072', 'Timea'), ('613', 'Wendy Qi Wen'), ('614', 'Nikki'), ('6146', 'Valerie'), ('6159', 'Chiara'), ('6168', 'Greetje'), ('6179', 'Gabriella'), ('61839', 'Yi Miao'), ('62', 'Ann'), ('62252', 'Risa'), ('625', 'Ksenija'), ('6256', 'Csilla'), ('625836', 'Kaia'), ('628', 'Jazzamay'), ('62861', 'Chanel'), ('6288', 'Yevgeniya'), ('62938', 'Madalina'), ('62977', 'Elizaveta'), ('63', 'Jule'), ('63', 'Milica'), ('63013', 'Nudnida'), ('6341', 'Svenja'), ('636', 'Elizaveta Anna'), ('6369', 'Dianne'), ('639', 'Dan Ni'), ('63998', 'Bianca'), ('64', 'Jada'), ('64', 'Reina'), ('64', 'Vita'), ('640', 'Akvile'), ('6404', 'Pilar'), ('641', 'Qianqian'), ('645', 'Ludmila'), ('64525', 'Ling'), ('646', 'Quinn'), ('6470', 'Vladimira'), ('647811', 'Anne'), ('648', 'Ashmitha'), ('648', 'Yawna'), ('649', 'Natella'), ('65', 'Emma Christine'), ('65152', 'Nastassja'), ('6525', 'Freya'), ('653', 'Kennedy'), ('653', 'Mary'), ('6542', 'Lucy'), ('6547', 'Elena Teodora'), ('65522', 'Denisa'), ('6564', 'Seo Kyung'), ('6573', 'Pernilla'), ('6591', 'Sun Jung'), ('66', 'Salma'), ('662', 'Blessing'), ('66271', 'Reka Luca'), ('662926', 'Shahar'), ('664', 'Phillis'), ('6650', 'Anna Arina'), ('6650', 'Seung Yeon'), ('667', 'Chi Fan'), ('6688', 'Isabel'), ('669546', 'Carla'), ('67017', 'Dinah'), ('672', 'Leonie'), ('67459', 'Carly'), ('676', 'Breaunna'), ('677', 'Angeliki'), ('677', 'Giada'), ('677', 'Yoshimi'), ('6777', 'Chelsey'), ('678793', 'Anabel'), ('679', 'Chia Hsien'), ('68', 'Aastha'), ('6809', 'Lidziya'), ('681', 'Se Jin'), ('6810', 'Sabrina'), ('682', 'Yuenu'), ('68207', 'Amanda'), ('683', 'Marcela Guimaraes'), ('683', 'Qianhui'), ('687', 'Guiomar'), ('688', 'Mallaurie'), ('688', 'Sinead'), ('68925', 'Jing Jing'), ('69', 'Esen'), ('6906', 'Morgane'), ('69242', 'Mihaela'), ('6948', 'Ionela Andreea'), ('697', 'Linnea'), ('699', 'Radina'), ('7', 'Axana'), ('7', 'Zhibek'), ('70', 'Savannah'), ('701', 'Komola'), ('702', 'Mara'), ('702', 'Zeel'), ('7027', 'Dea'), ('703', 'Aida'), ('704', 'Kassandra'), ('70504', 'Chin Wei'), ('706', 'Thai Sa Grana'), ('70613', 'Grace'), ('7062', 'Brooke'), ('709', 'Desiree'), ('71', 'Aldana'), ('71', 'Vishesh'), ('71', 'Yasmyn'), ('71072', 'Anett'), ('713', 'Ebony'), ('714', 'Isabela'), ('7147', 'Etsuko'), ('715', 'Madeleine'), ('716', 'Siqi'), ('71645', 'Vanessa'), ('7165', 'Tess'), ('717', 'Xiaorong'), ('7179', 'Ji Hee'), ('72', 'Abir'), ('72', 'Andressa Cristina'), ('72', 'Carolyn'), ('72', 'Janja'), ('72', 'Liniques'), ('72', 'Mi Zhuoma'), ('72', 'Nastassia'), ('724638', 'Simona'), ('725', 'Brandy'), ('72682', 'Maria Joao'), ('73', 'Yang'), ('73192', 'Veronika'), ('7323', 'Patty'), ('733', 'Lee'), ('7353', 'Dijana'), ('73589', 'Noppawan'), ('736', 'Treta'), ('7367', 'Hua Chen'), ('74', 'Iulia Maria'), ('74', 'Zinovia'), ('741', 'Rashmi'), ('742', 'Akilah'), ('7431', 'Tomoko'), ('744', 'Eveliina'), ('7444', 'Ayla'), ('74453', 'Andreja'), ('7486', 'Cristiana'), ('75', 'Beatriz Magdalena'), ('75', 'Sean'), ('75', 'Yosr'), ('750', 'Leolia'), ('75337', 'Tetiana'), ('75414', 'Cristina Andreea'), ('756', 'Magy'), ('75850', 'Anastasiya'), ('760', 'Nour'), ('7605', 'Deborah'), ('761', 'Jainy'), ('762', 'India'), ('764', 'Tanaporn'), ('76586', 'Michaela'), ('76747', 'Polina'), ('77', 'Vicky'), ('772', 'Yuanyi'), ('773929', 'Olga'), ('775', 'Guzal'), ('77519', 'Luksika'), ('7755', 'Fang Ying'), ('776', 'Karola Patricia'), ('7772', 'Elena Gabriela'), ('778', 'Marta Huqi'), ('7797', 'Hulya'), ('78', 'Ferny'), ('78', 'Hazal'), ('780', 'Sabastiani'), ('78204', 'Sacha'), ('78265', 'Margarita'), ('7843', 'Katherine'), ('78461', 'Sarah'), ('78513', 'Nikola'), ('7874', 'Usue Maitane'), ('7898', 'Lisa Maria'), ('791', 'Aymet'), ('79511', 'Viktorija'), ('7975', 'Ching Wen'), ('79958', 'Dia'), ('7996', 'Ayaka'), ('7998', 'Gaia'), ('7999', 'Gracia'), ('80', 'Fatyha'), ('801', 'Sherry'), ('802', 'Asiya'), ('803', 'Rosalia'), ('804', 'Josie'), ('8072', 'Stamatia'), ('8079', 'Ellie'), ('809611', 'Roberta'), ('811', 'Habiba'), ('81222', 'Jennifer'), ('814', 'Berta'), ('8145', 'Ting Fei'), ('8146', 'Nicoleta Catalina'), ('8174', 'Carmen'), ('8180', 'Hae Sung'), ('8203', 'Priscilla'), ('822', 'Jawairiah'), ('823', 'Ena'), ('8268', 'Sylwia'), ('8284', 'Lisanne'), ('83', 'Akiho'), ('83', 'Maileen'), ('8301', 'Hyun Hui'), ('8305', 'Luciana'), ('83476', 'Isabella'), ('836', 'Anhzelika'), ('83659', 'Tadeja'), ('837', 'Lynn'), ('84', 'Yukako'), ('8406', 'Kaori'), ('84184', 'Richel'), ('843', 'Tamachan'), ('8441', 'Bermet'), ('84446', 'Akiko'), ('8448', 'Rishika'), ('84543', 'Veronica'), ('85', 'Ahlam'), ('85', 'Dilara'), ('85', 'Kariann'), ('85022', 'Emma'), ('8507', 'Danielle Rose'), ('85425', 'Maryna'), ('857', 'Dariya'), ('857', 'Naoko'), ('8589', 'Daiana'), ('8592', 'Ji Young'), ('86', 'Ki Ryang'), ('8608', 'Harriet'), ('861', 'Janneke'), ('8676', 'Ting Jr'), ('87', 'Leticia Garcia'), ('87', 'Siyu'), ('87', 'Zaineb'), ('870', 'Hyojung'), ('8700', 'Oleksandra'), ('87263', 'Elitsa'), ('8744', 'Xin'), ('876', 'Lutfiye'), ('87844', 'Iryna'), ('879', 'Wushuang'), ('87958', 'Danka'), ('880', 'Rosalie'), ('882', 'Eliessa'), ('8832', 'Alena'), ('88369', 'Irena'), ('88542', 'Heidi'), ('887', 'Amelie'), ('8900', 'Pei Chi'), ('891796', 'Julia'), ('8918', 'Vivienne'), ('89361', 'Florencia'), ('8939', 'Dalia'), ('894', 'Keri'), ('898', 'Fatimah'), ('9', 'Adva'), ('9', 'Frederikke'), ('9', 'Rana'), ('9', 'Warona'), ('9', 'Yu Tong'), ('90', 'Elodie'), ('90', 'Michela'), ('90', 'Viktoriia'), ('9001', 'Syna'), ('9036', 'Kyoka'), ('90451', 'Carina'), ('905', 'Blair'), ('905', 'Margaux'), ('906', 'Satsuki'), ('9064', 'Mayya'), ('907', 'Anna Katalina'), ('907', 'Constanza'), ('908', 'Jazmin'), ('9093', 'Carolin'), ('910', 'Karoline'), ('911', 'Romy'), ('91117', 'Lina'), ('9116', 'Tessah'), ('9120', 'Nika'), ('913829', 'Shuai'), ('9147', 'Camelia Elena'), ('914981', 'Sara'), ('916', 'Iga'), ('9180', 'Sofya'), ('918746', 'Dominika'), ('919', 'Kanika'), ('92', 'Aina'), ('9202', 'Raluca Elena'), ('920433', 'Andrea'), ('9227', 'Destanee'), ('923', 'Jessy'), ('93', 'Manya'), ('9318', 'Prerna'), ('9338', 'Sakiko'), ('934', 'Claudia Gianina'), ('934', 'Plobrung'), ('9355', 'Karina'), ('93730', 'Katarzyna'), ('942', 'Kerstin'), ('95', 'Cecilie Lundgaard'), ('95', 'Sing Le'), ('9536', 'Neda'), ('955267', 'Alexandra'), ('957', 'Ratnika'), ('958', 'Cemre'), ('9593', 'Mana'), ('96', 'Aishwarya'), ('96', 'Jiaxue'), ('96', 'Mami'), ('96', 'Meiqi'), ('96', 'Minami'), ('96', 'Smriti'), ('96', 'Sophia'), ('960', 'Elke'), ('9600', 'Georgia'), ('9627', 'Nicolette'), ('9631', 'Hao Chen'), ('9634', 'Shilin'), ('964', 'Emily J'), ('966', 'Yeong Won'), ('96852', 'Arina'), ('97', 'Katyarina'), ('97', 'Laura Sofia'), ('97', 'Melany Solange'), ('97400', 'Natalia'), ('976', 'Eudice Wong'), ('9780', 'Di'), ('98', 'Hortencia'), ('980', 'Ariadna'), ('980', 'Nazari'), ('984', 'Rianna'), ('9846', 'Dejana'), ('98798', 'Beatriz'), ('99', 'Anne Marie'), ('99', 'Asha'), ('99', 'Diana Maria'), ('99', 'Zhima'), ('9926', 'Valentine'), ('993', 'Alicia'), ('9938', 'Min Hwa'), ('994', 'Franziska'), ('997', 'Vladica'), ('998', 'Yukina'), ('99836', 'Margalita')] != [('Aastha', '68'), ('Abbi', '304'), ('Abbie', '5214'), ('Abigail', '115293'), ('Abiodun', '120'), ('Abir', '72'), ('Adeliya', '490'), ('Adnya', '219'), ('Adriana', '28045'), ('Adrienn', '107'), ('Adrijana', '4619'), ('Adva', '9'), ('Afroditi', '156'), ('Agata', '1901'), ('Agata Jadwiga', '219'), ('Agne', '110'), ('Agnes', '390148'), ('Agnese', '13717'), ('Agni', '2929'), ('Agnieszka', '1801033'), ('Agustina', '21728'), ('Agustina Elena', '158'), ('Ah', '141'), ('Ahlam', '85'), ('Ahsha', '52'), ('Ai', '10751'), ('Ai Wen', '2217'), ('Aida', '703'), ('Aiko', '140108'), ('Ailen', '288'), ('Aimee', '226'), ('Aina', '92'), ('Ainhoa', '2433'), ('Aishwarya', '96'), ('Ajla', '116548'), ('Akari', '11873'), ('Akgul', '228538'), ('Aki', '14838'), ('Akiho', '83'), ('Akiko', '84446'), ('Akilah', '742'), ('Akvile', '640'), ('Alana', '385'), ('Alba', '1424'), ('Alberta', '238803'), ('Albina', '10507'), ('Aldana', '71'), ('Alejandra', '1578'), ('Aleksandra', '451414'), ('Aleksandrina', '35957'), ('Alena', '8832'), ('Alessandra', '235'), ('Alessia', '2524'), ('Alessondra', '265'), ('Alexa', '138782'), ('Alexandra', '955267'), ('Alexandria', '191'), ('Alexia', '12829'), ('Alexis', '13389'), ('Aliaksandra', '61196'), ('Alice', '57745'), ('Alice Andrada', '2358'), ('Alicia', '993'), ('Alicja', '5216'), ('Alina', '11393'), ('Aliona', '2369'), ('Alisa', '369810'), ('Alison', '323527'), ('Alix', '5422'), ('Alize', '596901'), ('Alla', '253320'), ('Allie', '33054'), ('Almudena', '206'), ('Alona', '4052'), ('Alory Regina Elorriaga', '155'), ('Alyona', '25183'), ('Amanda', '68207'), ('Amandine', '41575'), ('Amelie', '887'), ('Amina', '1990'), ('Aminat', '12708'), ('Amira', '157'), ('Amra', '60702'), ('Amrita', '159'), ('Amy', '10616'), ('An Sophie', '51803'), ('Ana', '1589674'), ('Ana Bianca', '2421'), ('Ana Clara', '36696'), ('Ana Gabriela', '288'), ('Ana Luisa', '21'), ('Ana Paula', '2141'), ('Ana Sofia', '15955'), ('Ana Victoria', '1367'), ('Anabel', '678793'), ('Anaeve', '1962'), ('Anais', '46908'), ('Anamika', '2338'), ('Anastasia', '1433335'), ('Anastasia Evgenyevna', '1235'), ('Anastasiia', '12'), ('Anastasija', '268277'), ('Anastasiya', '75850'), ('Anca', '101'), ('Anda', '160'), ('Andie K', '605'), ('Andjela', '228'), ('Andra Maria', '51'), ('Andrea', '920433'), ('Andrea Renee', '464'), ('Andreea', '1484'), ('Andreea Amalia', '1365'), ('Andreea Roxana', '12727'), ('Andreja', '74453'), ('Andressa Cristina', '72'), ('Andrina', '159'), ('Aneta', '202'), ('Anett', '71072'), ('Anette', '1657'), ('Ange Oby', '36'), ('Angela', '245'), ('Angelica', '13643'), ('Angeliki', '677'), ('Angelina', '19048'), ('Angelique', '1132514'), ('Anhelina', '17967'), ('Anhzelika', '836'), ('Ani', '48811'), ('Anita', '2177'), ('Anja', '11596'), ('Anke', '54'), ('Ankita', '21599'), ('Ann', '62'), ('Anna', '1017069'), ('Anna Arina', '6650'), ('Anna Giulia', '49207'), ('Anna Karolina', '107880'), ('Anna Katalina', '907'), ('Anna Lena', '359374'), ('Anna Maria', '1427'), ('Annalisa', '29442'), ('Anne', '647811'), ('Anne Liz', '5269'), ('Anne Marie', '99'), ('Anne Sophie', '33'), ('Annie', '172'), ('Annika', '169371'), ('Anouk', '3621'), ('Antonela', '280'), ('Antonia', '21624'), ('Antonina', '484'), ('Anushka', '480'), ('Ao', '4941'), ('Apichaya', '126'), ('Arabela', '11608'), ('Arantxa', '434692'), ('Aranza', '24184'), ('Aravane', '383495'), ('Ariadna', '980'), ('Arina', '96852'), ('Arina Gabriela', '3'), ('Arlinda', '154'), ('Arthi', '39'), ('Aryna', '19446'), ('Aselya', '238'), ('Asha', '99'), ('Ashleigh', '58741'), ('Ashley', '49980'), ('Ashling', '5155'), ('Ashmitha', '648'), ('Ashvarya', '2321'), ('Asia', '48788'), ('Asiya', '802'), ('Assia', '141'), ('Astra', '1083'), ('Astrid Wanja', '269'), ('Audrey', '33624'), ('Avgusta', '21'), ('Axana', '7'), ('Ayaka', '7996'), ('Ayan', '571'), ('Ayano', '5173'), ('Ayla', '7444'), ('Aymet', '791'), ('Ayu Fani', '38501'), ('Ayumi', '309990'), ('Azra', '11721'), ('Barbara', '53401'), ('Barbora', '515957'), ('Basak', '26624'), ('Beatrice', '27061'), ('Beatriz', '98798'), ('Beatriz Magdalena', '75'), ('Beatriz Maria', '1920'), ('Beauty', '26'), ('Belen', '351'), ('Belinda', '137327'), ('Benedetta', '11032'), ('Berfu', '2850'), ('Bermet', '8441'), ('Bernarda', '19092'), ('Bernice', '3894'), ('Berta', '814'), ('Bethanie', '371662'), ('Betina', '21'), ('Bhuvana', '1152'), ('Bianca', '63998'), ('Bianka', '1213'), ('Bibiane', '50184'), ('Blair', '905'), ('Blanca', '312'), ('Blessing', '662'), ('Boba', '123'), ('Bojana', '283166'), ('Borislava', '3470'), ('Boyan', '1465'), ('Brandy', '725'), ('Breaunna', '676'), ('Brenda', '166760'), ('Brianna', '2922'), ('Brienne', '12'), ('Brindtha', '30'), ('Britt', '2487'), ('Brittany', '1119'), ('Brooke', '7062'), ('Brynn', '1344'), ('Bunyawi', '3187'), ('Busra', '537'), ('Cagla', '119797'), ('Caitlin', '15218'), ('Camelia Elena', '9147'), ('Cameron', '38'), ('Camila', '202172'), ('Camila Vital', '136'), ('Camilla', '11714'), ('Camille', '574'), ('Cara', '240762'), ('Carina', '90451'), ('Carla', '669546'), ('Carlota', '27'), ('Carlotta', '562'), ('Carly', '67459'), ('Carmen', '8174'), ('Carmen Raluca', '1077'), ('Carol', '14213'), ('Carolin', '9093'), ('Carolina', '36889'), ('Carolina Meligeni Rodrigues', '3627'), ('Caroline', '2076949'), ('Caroline B', '111'), ('Carolyn', '72'), ('Carson', '289'), ('Casey', '202697'), ('Catalina', '250056'), ('Catherine', '4987'), ('Catherine Cartan', '45884'), ('Caty', '22'), ('Cecilia', '11954'), ('Cecilie Lundgaard', '95'), ('Celine', '18824'), ('Cemre', '958'), ('Chalena', '4914'), ('Chanel', '62861'), ('Chanelle', '275364'), ('Chang', '26585'), ('Chanikarn', '39'), ('Chantal', '15001'), ('Chantelle', '187'), ('Chaoyi', '15'), ('Charlene', '5683'), ('Charlotte', '4356'), ('Chayenne', '20132'), ('Chelsea', '5'), ('Chelsey', '6777'), ('Chen', '26779'), ('Chengyiyi', '277'), ('Chi Chi', '49122'), ('Chi Fan', '667'), ('Chia Hsien', '679'), ('Chia Jung', '33301'), ('Chiaki', '42773'), ('Chiara', '6159'), ('Chieh Yu', '34796'), ('Chihiro', '15401'), ('Chin Wei', '70504'), ('Chinami', '13141'), ('Ching Wen', '7975'), ('Chiraz', '1726'), ('Chisa', '358'), ('Chloe', '15190'), ('Chompoothip', '276'), ('Christie', '24'), ('Christina', '310215'), ('Christine', '2438'), ('Chun Mei', '12519'), ('Chun Yan', '3374'), ('Cindy', '31620'), ('Claire', '141876'), ('Clara', '116'), ('Claudia', '32581'), ('Claudia Antonia', '1227'), ('Claudia Gianina', '934'), ('Claudine', '106762'), ('Clelia', '2221'), ('Clemence', '1622'), ('Clementina Eugenia', '538'), ('Clothilde', '12304'), ('Coco', '235721'), ('Colomba', '129'), ('Conny', '52274'), ('Constance', '25166'), ('Constanza', '907'), ('Constanze', '18'), ('Corina', '1002'), ('Corinna', '102260'), ('Cornelia', '4053'), ('Cory Ann', '20869'), ('Costanza', '1236'), ('Cristiana', '7486'), ('Cristina', '59412'), ('Cristina Andreea', '75414'), ('Cristina Madalina', '317'), ('Csilla', '6256'), ('Cynthia', '1034'), ('Da Hye', '1417'), ('Dabin', '1261'), ('Dagmara', '160'), ('Daiana', '8589'), ('Dajana', '150'), ('Dalia', '8939'), ('Dalila', '48857'), ('Dalma', '15935'), ('Damilola', '0'), ('Damini', '12'), ('Damira', '30'), ('Dan Ni', '639'), ('Dana', '3121'), ('Daneika', '1607'), ('Danica', '17597'), ('Daniela', '1165205'), ('Daniella', '16663'), ('Danielle', '40823'), ('Danielle Rose', '8507'), ('Danijela', '545'), ('Danka', '87958'), ('Daphne', '33'), ('Daria', '170617'), ('Darija', '41925'), ('Dariya', '857'), ('Darya', '163036'), ('Dasha', '1923'), ('Dayana', '5619'), ('Dea', '7027'), ('Deborah', '7605'), ('Deeon', '141'), ('Dejana', '9846'), ('Demi', '1192'), ('Denisa', '65522'), ('Denise', '3298'), ('Denise Antonela', '168'), ('Deniz', '23620'), ('Deria', '215'), ('Desirae', '354'), ('Desiree', '709'), ('Despina', '19065'), ('Despoina', '3942'), ('Destanee', '9227'), ('Dewi', '134'), ('Dhruthi', '2738'), ('Di', '9780'), ('Dia', '79958'), ('Diana', '119279'), ('Diana Maria', '99'), ('Dianne', '6369'), ('Dijana', '7353'), ('Dilara', '85'), ('Dina', '149'), ('Dinah', '67017'), ('Doga Selen', '117'), ('Domenica', '1614'), ('Dominika', '918746'), ('Dominique', '455'), ('Donika', '164'), ('Donna', '114098'), ('Dorien', '109'), ('Doroteja', '23976'), ('Draginja', '392'), ('Dunja', '4703'), ('Ebony', '713'), ('Eden', '1978'), ('Edina', '249446'), ('Eduarda', '11216'), ('Eetee', '2446'), ('Ege', '50'), ('Ekaterina', '1005319'), ('Ekaterine', '26897'), ('Elaine', '103'), ('Eleanor', '2287'), ('Elena', '1247887'), ('Elena Gabriela', '7772'), ('Elena Teodora', '6547'), ('Eleni', '439179'), ('Eleonora', '405'), ('Eleonore', '567'), ('Eliessa', '882'), ('Elina', '314747'), ('Elisabeth', '4709'), ('Elise', '43779'), ('Elitsa', '87263'), ('Elixane', '18211'), ('Eliza', '480'), ('Elizabeta', '536'), ('Elizabeth', '20368'), ('Elizabeth Anita Alexandria', '1103'), ('Elizaveta', '62977'), ('Elizaveta Anna', '636'), ('Elke', '960'), ('Ella', '526'), ('Ellen', '13761'), ('Ellie', '8079'), ('Elodie', '90'), ('Elyne', '12554'), ('Ema', '11218'), ('Emelyn', '12728'), ('Emi', '3880'), ('Emilia', '43'), ('Emiliana', '1258'), ('Emilie', '1440'), ('Emilija', '24'), ('Emiliya', '541'), ('Emily', '52889'), ('Emily J', '964'), ('Emina', '3029'), ('Emma', '85022'), ('Emma Christine', '65'), ('Emmanuelle', '1609'), ('En Pei', '52'), ('Ena', '823'), ('Eri', '34570'), ('Erica', '472'), ('Erika', '165477'), ('Erin', '5356'), ('Erina', '1225'), ('Esen', '69'), ('Estela', '376'), ('Estelle', '39989'), ('Ester', '3908'), ('Estrella', '126811'), ('Etsuko', '7147'), ('Eudice Wong', '976'), ('Eugenia', '36'), ('Eugenie', '204801'), ('Eugeniya', '20989'), ('Eva', '320083'), ('Eva Marie', '41'), ('Eveliina', '744'), ('Evelyn', '27011'), ('Evgenia', '59775'), ('Evgeniya', '206981'), ('Fang Ying', '7755'), ('Fangzhou', '33388'), ('Fanny', '11260'), ('Farah', '167'), ('Fatima', '10865'), ('Fatimah', '898'), ('Fatma', '21261'), ('Fatyha', '80'), ('Federica', '56817'), ('Federica Joe', '44'), ('Fernanda', '17587'), ('Ferny', '78'), ('Fiona', '18219'), ('Flavia', '1011058'), ('Florencia', '89361'), ('Frances', '359'), ('Francesca', '1306087'), ('Francisca', '157'), ('Francoise', '21685'), ('Franziska', '994'), ('Frederikke', '9'), ('Freya', '6525'), ('Gabriela', '102623'), ('Gabriela Nicole', '468'), ('Gabriella', '6179'), ('Gabrielle Faith', '1093'), ('Gaelle', '1000'), ('Gaia', '7998'), ('Gail', '38651'), ('Galina', '302957'), ('Ganna', '30136'), ('Garbine', '412872'), ('Gebriela', '143'), ('Genevieve', '440'), ('Georgia', '9600'), ('Georgia Andreea', '1848'), ('Georgiana', '48'), ('Georgina', '11569'), ('Ghislaine', '290'), ('Giada', '677'), ('Gioia', '31741'), ('Giorgia', '2484'), ('Giorgie', '13'), ('Giovanna', '289'), ('Giulia', '106520'), ('Giuliana', '2935'), ('Gloria', '1297'), ('Gozal', '2864'), ('Grace', '70613'), ('Gracia', '7999'), ('Greetje', '6168'), ('Greta', '240195'), ('Guadalupe', '14277'), ('Guillermina', '576'), ('Guiomar', '687'), ('Gulben', '410'), ('Gulchekhra', '18'), ('Gulnaz', '39'), ('Guzal', '775'), ('Gyulnara', '238'), ('Habiba', '811'), ('Hae Sung', '8180'), ('Haine', '294'), ('Hana', '413'), ('Hanna', '2782'), ('Hanyu', '4643'), ('Hao Chen', '9631'), ('Hao Ching', '224'), ('Harmony', '5944'), ('Harriet', '8608'), ('Haruka', '3633'), ('Haruna', '1873'), ('Hayley', '1679'), ('Hazal', '78'), ('Heather', '202780'), ('Heidi', '88542'), ('Helen', '1039'), ('Helene', '3928'), ('Hikari', '122'), ('Hilda', '10191'), ('Himari', '3'), ('Hiroko', '27580'), ('Hirono', '4368'), ('Ho Ching', '2371'), ('Hollie', '24'), ('Hongrui', '1063'), ('Hortencia', '98'), ('Hsin Yuan', '120'), ('Hua Chen', '7367'), ('Huijie', '118'), ('Hulya', '7797'), ('Hye Min', '1222'), ('Hyojung', '870'), ('Hyun Hui', '8301'), ('I Hsuan', '511'), ('Iana', '395'), ('Ida', '467'), ('Idia', '45'), ('Iga', '916'), ('Ilay', '52'), ('Ilka', '1142'), ('Ilona', '26950'), ('Ilze', '1527'), ('Imane Maelle', '1676'), ('Ina', '292'), ('Inci', '406'), ('India', '762'), ('Indire', '12633'), ('Indy', '17382'), ('Ineke', '1358'), ('Ines', '40410'), ('Inger', '221'), ('Ingrid', '3471'), ('Ingrid Alexandra', '4766'), ('Ingrid Esperanza', '10133'), ('Intissar', '33'), ('Ioana', '1225'), ('Ioana Diana', '2403'), ('Ioana Loredana', '5425'), ('Ionela Andreea', '6948'), ('Ipek', '39352'), ('Irena', '88369'), ('Irene', '3133'), ('Irina', '299698'), ('Irina Camelia', '293366'), ('Irina Maria', '13843'), ('Iris', '4743'), ('Iryna', '87844'), ('Isabel', '6688'), ('Isabela', '714'), ('Isabella', '83476'), ('Isabelle', '4777'), ('Iulia Maria', '74'), ('Iva', '10322'), ('Ivana', '100848'), ('Ivania', '2094'), ('Ivanka', '291'), ('Iveta', '443695'), ('Ivette', '543'), ('Ivone', '253'), ('Ivonne', '13010'), ('Jacqueline', '27462'), ('Jada', '64'), ('Jade', '26209'), ('Jaeda', '1375'), ('Jaimee', '5007'), ('Jaimy Gayle', '24'), ('Jainy', '761'), ('Jamie', '190997'), ('Jamilya', '18'), ('Jan', '10947'), ('Jana', '268372'), ('Janette', '143422'), ('Janina', '12525'), ('Janja', '72'), ('Janneke', '861'), ('Jaqueline Adina', '5416'), ('Jara', '464'), ('Jarmila', '333150'), ('Jasmin', '34453'), ('Jasmina', '43862'), ('Jasmine', '14865'), ('Jasmine Amber', '142'), ('Jawairiah', '822'), ('Jazmin', '908'), ('Jazzamay', '628'), ('Jeannine', '3426'), ('Jelena', '2515436'), ('Jennifer', '81222'), ('Jenny', '1002'), ('Jesika', '17819'), ('Jessica', '154599'), ('Jessika', '4122'), ('Jessy', '923'), ('Ji Hee', '7179'), ('Ji Young', '8592'), ('Jia', '52'), ('Jia Jing', '48117'), ('Jia Qi', '4612'), ('Jiahui', '1553'), ('Jiakang', '15'), ('Jiatian', '100'), ('Jiaxi', '3002'), ('Jiaxue', '96'), ('Jie', '610820'), ('Jil Belen', '13978'), ('Jil Nora', '611'), ('Jill', '359013'), ('Jillian', '1991'), ('Jin', '15'), ('Jin A', '46355'), ('Jin Ju', '414'), ('Jing Jing', '68925'), ('Joana', '1955'), ('Joanna', '472'), ('Joanne', '15'), ('Jodie Anna', '355'), ('Johana', '40'), ('Johanna', '553107'), ('Jordana', '1092'), ('Josepha', '2710'), ('Josephine', '4980'), ('Josie', '804'), ('Jovana', '39270'), ('Ju Eun', '3453'), ('Judith', '3'), ('Jule', '63'), ('Julia', '891796'), ('Julia Mansano', '21'), ('Juliana', '414'), ('Juliana Rocha', '129'), ('Julie', '156531'), ('Julieta Lara', '4093'), ('Julita', '286'), ('Julyette Maria Josephine', '1446'), ('June', '114'), ('Junri', '128183'), ('Justina', '36'), ('Justine', '39418'), ('Justyna', '30304'), ('Kady', '467'), ('Kai Chen', '172004'), ('Kai Lin', '37817'), ('Kaia', '625836'), ('Kaitlin', '416'), ('Kaitlyn', '3905'), ('Kaja', '1176'), ('Kajsa', '2280'), ('Kamila', '12906'), ('Kamilla', '249'), ('Kamonwan', '5866'), ('Kana', '1536'), ('Kanae', '20142'), ('Kanako', '229'), ('Kanami', '3724'), ('Kanika', '919'), ('Kaori', '8406'), ('Karen', '32169'), ('Kariann', '85'), ('Karin', '254520'), ('Karina', '9355'), ('Karina Ildor', '5493'), ('Karina Kristina', '410'), ('Karine', '1936'), ('Karis', '1003'), ('Karla', '3127'), ('Karman', '3193'), ('Karola Patricia', '776'), ('Karolayne', '465'), ('Karolina', '512490'), ('Karoline', '910'), ('Karyn', '330'), ('Kassandra', '704'), ('Katalin', '112562'), ('Katarina', '444303'), ('Katarzyna', '93730'), ('Kate', '34'), ('Katerina', '160945'), ('Kateryna', '435038'), ('Katharina', '24595'), ('Katharine', '363'), ('Katherine', '7843'), ('Katherine Gabriela', '1894'), ('Kathinka', '15970'), ('Kathrin', '141281'), ('Katie', '30035'), ('Katrine Isabel', '308'), ('Katy', '11572'), ('Katya', '515'), ('Katyarina', '97'), ('Kayla', '13697'), ('Kaylah', '237'), ('Kazusa', '10107'), ('Kei', '294'), ('Kelia', '324'), ('Kelly', '4705'), ('Kelly S', '5880'), ('Kelsey', '410'), ('Kennedy', '653'), ('Keren', '24062'), ('Keri', '894'), ('Kerstin', '942'), ('Khristina', '3748'), ('Ki Ryang', '86'), ('Kiki', '214121'), ('Kim', '4580'), ('Kim Alice', '12388'), ('Kimberley', '5393'), ('Kimberly', '4831'), ('Kimika', '272'), ('Kimiko', '270102'), ('Kinnie', '15102'), ('Kirsten', '383077'), ('Kirsten Andrea', '462'), ('Klaartje', '5818'), ('Klara', '568191'), ('Klaudia', '4809'), ('Komola', '701'), ('Korina', '21417'), ('Kotomi', '4962'), ('Krista', '17577'), ('Kristie', '34647'), ('Kristina', '601693'), ('Kristina N', '555'), ('Kristy', '1899'), ('Kristyna', '148728'), ('Ksenia', '371140'), ('Kseniia', '298'), ('Ksenija', '625'), ('Kumiko', '56212'), ('Kurumi', '177170'), ('Kveta', '210101'), ('Kwan Yau', '403'), ('Kyle', '3200'), ('Kylie', '1236'), ('Kyoka', '9036'), ('Kyra', '102022'), ('Kyung Mi', '26059'), ('Laetitia', '6078'), ('Laili', '595'), ('Lamis', '456'), ('Lara', '177458'), ('Larikah', '255'), ('Laura', '578964'), ('Laura D', '281'), ('Laura Ioana', '33822'), ('Laura Sofia', '97'), ('Lauren', '244807'), ('Lauryn', '207'), ('Lavinia', '23897'), ('Laylo', '39'), ('Layne', '22'), ('Lea', '4197'), ('Leah', '152'), ('Lee', '733'), ('Lena', '27997'), ('Lena Marie', '14942'), ('Lenka', '164900'), ('Leolia', '750'), ('Leonie', '672'), ('Lesedi Sheya', '286'), ('Lesia', '225987'), ('Lesley', '42925'), ('Leslie', '173'), ('Leticia', '45115'), ('Leticia Garcia', '87'), ('Leylah Annie', '48'), ('Li', '1696'), ('Liana Gabriela', '59997'), ('Libby', '2362'), ('Libi', '522'), ('Lidia', '169'), ('Lidziya', '6809'), ('Liezel', '39782'), ('Liga', '23411'), ('Lilla', '1960'), ('Lin', '40341'), ('Lina', '91117'), ('Linda', '4216'), ('Lindsay', '142454'), ('Lindsey', '500'), ('Ling', '64525'), ('Liniques', '72'), ('Linnea', '697'), ('Lisa', '594217'), ('Lisa Maria', '7898'), ('Lisa Marie', '1583'), ('Lisanne', '8284'), ('Liubov', '2662'), ('Livia', '128'), ('Liz Tatiane', '2216'), ('Lizaveta', '135'), ('Lizette', '11623'), ('Lorenza', '33'), ('Lorraine M', '40'), ('Lou', '10167'), ('Loudmilla', '6'), ('Louisa', '50700'), ('Louise', '1633'), ('Lourdes', '371035'), ('Lu', '3445'), ('Luca', '1013'), ('Lucia', '17185'), ('Luciana', '8305'), ('Lucie', '1108372'), ('Lucrezia', '1589'), ('Lucy', '6542'), ('Ludmila', '645'), ('Ludmilla', '1187'), ('Luisa', '1671'), ('Luisa Marie', '1822'), ('Luksika', '77519'), ('Lulu', '304'), ('Luna', '15'), ('Lusine', '377'), ('Lutfiye', '876'), ('Lyann', '30'), ('Lynn', '837'), ('Lyudmyla', '54172'), ('Macall', '12379'), ('Macarena', '2133'), ('Madalina', '62938'), ('Maddison', '2434'), ('Madeleine', '715'), ('Madeline', '147'), ('Madina', '6'), ('Madison', '476768'), ('Madrie', '2266'), ('Maegan', '525'), ('Mafalda', '163'), ('Maftuna', '54'), ('Magali', '1917'), ('Magalie', '511'), ('Magda', '103659'), ('Magdalena', '401857'), ('Magy', '756'), ('Mahak', '154'), ('Mahitha', '395'), ('Mai', '19173'), ('Maia', '1235'), ('Maia A', '12'), ('Maiko', '11320'), ('Maileen', '83'), ('Mailen', '39523'), ('Maja', '1067'), ('Makiho', '5592'), ('Makoto', '14129'), ('Malene', '316'), ('Malika', '323'), ('Malin', '2489'), ('Mallaurie', '688'), ('Mallory', '44497'), ('Malou', '3073'), ('Mami', '96'), ('Man Ying Maggie', '102'), ('Mana', '9593'), ('Mananchaya', '15'), ('Manca', '2070'), ('Mandy', '193767'), ('Manisha', '3112'), ('Manon', '14608'), ('Manya', '93'), ('Mara', '702'), ('Marcela', '16790'), ('Marcela Guimaraes', '683'), ('Marcelina', '33'), ('Marcella', '13037'), ('Margalita', '99836'), ('Margarida', '1997'), ('Margarita', '78265'), ('Margaux', '905'), ('Margot', '4787'), ('Mari', '38086'), ('Maria', '3613355'), ('Maria Agustina', '185'), ('Maria Andrea', '323'), ('Maria Camila', '148'), ('Maria Constanza De Las Mercedes', '1892'), ('Maria Del Rosario', '296'), ('Maria Elena', '296736'), ('Maria Fernanda', '141257'), ('Maria Jesus', '294'), ('Maria Joao', '72682'), ('Maria Jose', '413759'), ('Maria Lourdes', '156'), ('Maria Paulina', '1388'), ('Maria Teresa', '106375'), ('Mariam', '4060'), ('Mariana', '201258'), ('Marianna', '10178'), ('Marianne', '1090'), ('Mariaryeni', '226'), ('Marie', '25496'), ('Marie Eve', '114687'), ('Mariia', '206'), ('Marija', '20481'), ('Marijana', '3'), ('Marina', '362372'), ('Marine', '4314'), ('Marion', '1272285'), ('Mariona', '4'), ('Marisa', '1026'), ('Mariya', '154484'), ('Marketa', '18286'), ('Marlies', '1624'), ('Marrit', '1339'), ('Marta', '267679'), ('Marta Huqi', '778'), ('Martha', '153'), ('Martina', '109192'), ('Mary', '653'), ('Mary Ann', '102'), ('Maryna', '85425'), ('Masa', '117472'), ('Mathilde', '245139'), ('Matilda', '3466'), ('Maud', '210'), ('Maureen', '219'), ('Maurien', '138'), ('Maxine', '390'), ('May', '225'), ('Maya', '23668'), ('Mayar', '1788'), ('Mayo', '32445'), ('Mayya', '9064'), ('Megan', '13254'), ('Megumi', '407'), ('Mei Xu', '40'), ('Meiling', '417'), ('Meiqi', '96'), ('Melanie', '385636'), ('Melany Solange', '97'), ('Melina', '2609'), ('Melinda', '290299'), ('Melis', '20196'), ('Melisa', '340'), ('Melissa', '200'), ('Melissa Ishuan', '171'), ('Meng Ning', '542'), ('Mercedes', '48'), ('Merel', '101'), ('Meritxell', '284'), ('Mervana', '102693'), ('Mi', '24569'), ('Mi Jeong', '176'), ('Mi Rae', '1858'), ('Mi Zhuoma', '72'), ('Mia Nicole', '1098'), ('Micaela', '230'), ('Michaela', '76586'), ('Michaella', '242619'), ('Michela', '90'), ('Michele Alexandra', '596'), ('Michelle', '160164'), ('Michika', '3657'), ('Mihaela', '69242'), ('Mihaela Lorena', '15'), ('Miharu', '21205'), ('Mihika', '427'), ('Mihoki', '201'), ('Miki', '24542'), ('Mila', '107'), ('Milagros', '42'), ('Milana', '14123'), ('Milena', '279'), ('Milica', '63'), ('Min', '1884'), ('Min Hwa', '9938'), ('Minami', '96'), ('Mira', '1626'), ('Mirabelle', '1977'), ('Miranda', '180'), ('Miriam', '3825'), ('Miriam Bianca', '1458'), ('Miriana', '1180'), ('Mirjam', '272'), ('Mirjana', '331434'), ('Misa', '55981'), ('Misaki', '203782'), ('Mitsumi', '309'), ('Miyabi', '22840'), ('Miyu', '23968'), ('Mizuno', '2927'), ('Molly', '565'), ('Momoko', '2061'), ('Mona', '282445'), ('Monica', '587309'), ('Monika', '1240'), ('Monique', '114104'), ('Montserrat', '23564'), ('Morgane', '6906'), ('Moulika', '15'), ('Mouna', '12'), ('Moyuka', '32'), ('Muazzez', '6'), ('Muge', '162'), ('Myrtille', '43550'), ('Na', '1358928'), ('Na Lae', '26185'), ('Na Ri', '19223'), ('Nadezda', '5027'), ('Nadia', '1401125'), ('Nadiya', '56596'), ('Nadja', '2661'), ('Nagi', '1535'), ('Naiktha', '4380'), ('Naima', '440'), ('Nam Yeon', '259'), ('Nan Nan', '3094'), ('Nanuli', '16494'), ('Nao', '59671'), ('Naoko', '857'), ('Naomi', '163239'), ('Napatsakorn', '1945'), ('Nastassia', '72'), ('Nastassja', '65152'), ('Nastja', '29250'), ('Natalia', '97400'), ('Natalie', '120995'), ('Natalija', '13686'), ('Nataliya', '33'), ('Natasa', '14212'), ('Natasha', '15365'), ('Natela', '16303'), ('Natella', '649'), ('Nathalia', '28098'), ('Nathaly', '13241'), ('Natia', '2526'), ('Natsumi', '37981'), ('Nattawadee', '224'), ('Naz', '251'), ('Nazari', '980'), ('Neda', '9536'), ('Nelise', '142'), ('Nermeen', '279'), ('Nevena', '170'), ('Nicha', '30972'), ('Nicky', '2531'), ('Nicola', '33550'), ('Nicole', '447434'), ('Nicoleta Catalina', '8146'), ('Nicolette', '9627'), ('Nidhi', '5425'), ('Nigina', '47651'), ('Nika', '9120'), ('Nikita', '22'), ('Nikki', '614'), ('Nikol', '491'), ('Nikola', '78513'), ('Nina', '201173'), ('Nina Isabella', '115'), ('Nives', '2706'), ('Noel', '1558'), ('Noelia', '2025'), ('Noelle', '1795'), ('Nonna', '134'), ('Noppawan', '73589'), ('Nora', '1082'), ('Nour', '760'), ('Nozomi', '1333'), ('Nudnida', '63013'), ('Nungnadda', '24523'), ('Nuria', '259116'), ('Oana', '1096'), ('Oana Georgeta', '4294'), ('Oceane', '56853'), ('Ofri', '5372'), ('Oksana', '58279'), ('Ola', '3497'), ('Olawaseun', '2'), ('Olaya', '40'), ('Oleksandra', '8700'), ('Olena', '484'), ('Olesya', '3811'), ('Olga', '773929'), ('Olivia', '119756'), ('Oliwia', '363'), ('Ons', '56242'), ('Ornella', '2133'), ('Oyku', '382'), ('Paige Mary', '147'), ('Pamela', '241'), ('Panna', '1446'), ('Paola', '403127'), ('Parris', '209'), ('Patcharin', '1188'), ('Patricia', '197904'), ('Patricia Maria', '43755'), ('Patrycja', '17514'), ('Patty', '7323'), ('Paula', '172431'), ('Paula Andrea', '269'), ('Paula Catalina', '3714'), ('Paula Cristina', '37384'), ('Paulina', '3208'), ('Pauline', '313187'), ('Pavla', '4128'), ('Peangtarn', '26280'), ('Peggy', '1016'), ('Pei Chi', '8900'), ('Pei Hsuan', '24'), ('Pei Ju', '181'), ('Pemra', '60908'), ('Pernilla', '6573'), ('Petia', '1832'), ('Petra', '1958404'), ('Phenomena', '3'), ('Phillis', '664'), ('Pia', '10859'), ('Piia', '21340'), ('Pilar', '6404'), ('Pippa', '243'), ('Plobrung', '934'), ('Polina', '76747'), ('Polona', '325216'), ('Poojashree', '13006'), ('Pranjala', '1214'), ('Prarthana G', '5687'), ('Prerna', '9318'), ('Priscila', '510'), ('Priscilla', '8203'), ('Qiang', '116857'), ('Qianhui', '683'), ('Qianqian', '641'), ('Qiu Yu', '2034'), ('Quinn', '646'), ('Quirine', '22978'), ('Rachael', '2592'), ('Rachel', '469'), ('Radina', '699'), ('Rafaela', '228'), ('Ralina', '40'), ('Raluca', '148701'), ('Raluca Elena', '9202'), ('Raluca Georgiana', '4258'), ('Ramu', '443'), ('Ramya', '161'), ('Ran', '14709'), ('Rana', '9'), ('Raquel', '30401'), ('Rashmi', '741'), ('Ratnika', '957'), ('Raveena', '5387'), ('Rebeca', '168'), ('Rebecca', '165013'), ('Rebeka', '5803'), ('Regina', '122331'), ('Reina', '64'), ('Reka Luca', '66271'), ('Remi', '38116'), ('Renata', '201856'), ('Ria', '5566'), ('Rianna', '984'), ('Richel', '84184'), ('Rika', '141257'), ('Riko', '23195'), ('Rio', '556'), ('Risa', '62252'), ('Rishika', '8448'), ('Rita', '1401'), ('Riya', '2634'), ('Roberta', '809611'), ('Robin', '12295'), ('Robyn', '1103'), ('Rocio', '16886'), ('Romana', '29214'), ('Romana Caroline', '17020'), ('Romina', '253471'), ('Romy', '911'), ('Rona', '308'), ('Ronit', '3165'), ('Ronke', '49'), ('Roosh', '28'), ('Rosa', '111'), ('Rosalia', '803'), ('Rosalie', '880'), ('Rosie', '336'), ('Roxane', '38793'), ('Rui', '24'), ('Rushmi', '27452'), ('Rutuja', '3642'), ('Ryann', '597'), ('Saana', '195'), ('Sabastiani', '780'), ('Sabina', '49784'), ('Sabina Elena', '27'), ('Sabine', '590911'), ('Sabrina', '6810'), ('Sacha', '78204'), ('Sachia', '49767'), ('Sachie', '42676'), ('Sadafmoh', '2275'), ('Sai Samhitha', '1034'), ('Saisai', '113359'), ('Sakiko', '9338'), ('Sally', '53480'), ('Salma', '66'), ('Samantha', '1437656'), ('Samira', '2020'), ('Sanae', '354'), ('Sanaz', '17975'), ('Sandra', '266197'), ('Sandy', '224'), ('Sang Hee', '1277'), ('Sania', '272889'), ('Sara', '914981'), ('Sarah', '78461'), ('Sarah Beth', '1270'), ('Sarah Rebecca', '13064'), ('Sarahi', '461'), ('Sarai Delfina', '148'), ('Saray', '2061'), ('Sari', '464'), ('Sarlota', '27'), ('Sarvinoz', '178'), ('Sasa', '316'), ('Saska', '2641'), ('Satsuki', '906'), ('Savannah', '70'), ('Schena', '148'), ('Se Hyun', '143'), ('Se Jin', '681'), ('Sean', '75'), ('Seda', '1469'), ('Seira', '144'), ('Selin', '169'), ('Seo Kyung', '6564'), ('Seone', '1312'), ('Serena', '4232828'), ('Sesil', '208108'), ('Seung Yeon', '6650'), ('Severine', '192296'), ('Shahar', '662926'), ('Shakhlo', '2122'), ('Shakhnoza', '198'), ('Shangqing', '111'), ('Shanshan', '2378'), ('Shao Yuan', '1363'), ('Sharmada', '4106'), ('Sharon', '117825'), ('Sharon Sanchana', '522'), ('Shelby', '102140'), ('Shelly', '142'), ('Sheng Nan', '53610'), ('Sherazad', '22977'), ('Sherry', '801'), ('Shiho', '39960'), ('Shilin', '9634'), ('Shiori', '18'), ('Shir', '117'), ('Shiran', '236'), ('Shivika', '4611'), ('Shou Na', '105'), ('Shreya', '6'), ('Shu Ying', '1483'), ('Shuai', '913829'), ('Shuko', '46124'), ('Shuo', '597'), ('Shuyue', '336'), ('Shweta', '3255'), ('Si Qi', '531'), ('Silvia', '221695'), ('Simona', '724638'), ('Simone', '1149'), ('Simran Kaur', '467'), ('Sina', '10360'), ('Sinead', '688'), ('Sing Le', '95'), ('Siqi', '716'), ('Sirui', '276'), ('Siyu', '87'), ('Sloane', '352458'), ('Smriti', '96'), ('Sneha', '134'), ('Snehadevi S', '2820'), ('So Jung', '47282'), ('So Ra', '18210'), ('Sofia', '484140'), ('Sofico', '336'), ('Sofie', '10539'), ('Sofiya', '18371'), ('Sofya', '9180'), ('Sohyun', '108'), ('Sonia', '480'), ('Sonja', '4499'), ('Sophia', '96'), ('Sophie', '39307'), ('Sorana', '457043'), ('Sowjanya', '2961'), ('Spurti', '159'), ('Sri Vaishnavi', '1744'), ('Stamatia', '8072'), ('Stanislava', '49412'), ('Stefana', '497'), ('Stefani', '126'), ('Stefania', '24897'), ('Stefanie', '247237'), ('Steffi', '3085'), ('Stephanie', '608309'), ('Stephanie Mariel', '1397'), ('Storm', '21152'), ('Su Jeong', '33672'), ('Su Wei', '274936'), ('Suellen', '320'), ('Sultan', '1544'), ('Sun Jung', '6591'), ('Sunae', '15'), ('Sunam', '3594'), ('Sung Hee', '29852'), ('Susan', '502'), ('Susanne', '16276'), ('Suzan', '344'), ('Suzuho', '324'), ('Suzy', '1054'), ('Svenja', '6341'), ('Svetlana', '1906587'), ('Sviatlana', '11201'), ('Sybille', '581'), ('Sylvia', '1626'), ('Sylwia', '8268'), ('Syna', '9001'), ('Szabina', '2127'), ('Tadeja', '83659'), ('Taisiya', '1050'), ('Talya', '45'), ('Tamachan', '843'), ('Tamar', '60'), ('Tamara', '54140'), ('Tamari', '304'), ('Tamarine', '594281'), ('Tamaryn', '40060'), ('Tamira', '322202'), ('Tammi', '26077'), ('Tanaporn', '764'), ('Tanya', '1229'), ('Tara', '54798'), ('Tatia', '42'), ('Tatiana', '34795'), ('Tatjana', '230262'), ('Tatsiana', '1289'), ('Tayisiya', '5051'), ('Taylor', '38850'), ('Tea', '2127'), ('Teliana', '112570'), ('Tena', '12402'), ('Teodora', '41792'), ('Tereza', '193362'), ('Terri', '18'), ('Tess', '7165'), ('Tessah', '9116'), ('Tetiana', '75337'), ('Tetyana', '43020'), ('Thai Sa Grana', '706'), ('Theo', '2249'), ('Theresa', '377'), ('Tijana', '333'), ('Timea', '612072'), ('Tina', '57585'), ('Tinatin', '476'), ('Ting Fei', '8145'), ('Ting Jr', '8676'), ('Tingting', '151'), ('Tjasa', '3361'), ('Tomoko', '7431'), ('Tori', '10630'), ('Tornado Alicia', '1864'), ('Trang', '1884'), ('Treta', '736'), ('Tsvetana', '456422'), ('Tyra', '4543'), ('Ulrikke', '27118'), ('Ulyana', '2400'), ('Urszula', '275255'), ('Ushna', '413'), ('Usue Maitane', '7874'), ('Valentina', '338'), ('Valentine', '9926'), ('Valentini', '15198'), ('Valentyna', '47854'), ('Valeria', '159155'), ('Valerie', '6146'), ('Valeriya', '16621'), ('Vanda', '10087'), ('Vanesa', '30669'), ('Vanessa', '71645'), ('Vania', '299530'), ('Vaniya', '255'), ('Vanja', '291'), ('Varatchaya', '54340'), ('Varunya', '3623'), ('Varvara', '401409'), ('Vasilisa', '42527'), ('Vaszilisza', '3763'), ('Vendula', '2221'), ('Venus', '2875425'), ('Vera', '1929137'), ('Verena', '3018'), ('Veronica', '84543'), ('Veronica M', '1678'), ('Veronika', '73192'), ('Vesna', '169500'), ('Vicky', '77'), ('Victoire', '454'), ('Victoria', '2142854'), ('Victoria Ariadna', '106'), ('Viktoria', '30191'), ('Viktoriia', '90'), ('Viktorija', '79511'), ('Viktoriya', '26226'), ('Viktoryia', '1987'), ('Vilma Y', '27'), ('Vincenza', '105'), ('Vinciane', '37'), ('Violetta', '298'), ('Virginie', '519208'), ('Vishesh', '71'), ('Vita', '64'), ('Vitalia', '106927'), ('Vivian', '36714'), ('Vivien', '13041'), ('Vivienne', '8918'), ('Vlada', '22578'), ('Vladica', '997'), ('Vladimira', '6470'), ('Vladislava', '1254'), ('Vladyslava', '2570'), ('Vojislava', '18781'), ('Voni', '1036'), ('Wan Ting', '11653'), ('Wan Yi', '42'), ('Warona', '9'), ('Wen Hsin', '40633'), ('Wen Ling', '120'), ('Wendy Qi Wen', '613'), ('Weronika Jasmina', '179'), ('Whitney', '5604'), ('Wiktoria', '363'), ('Wing Yau Venise', '11694'), ('Wushuang', '879'), ('Xenia', '14578'), ('Xi Yao', '1445'), ('Xiao', '4789'), ('Xiaodi', '5057'), ('Xiaorong', '717'), ('Xiaoxi', '1352'), ('Ximena', '19495'), ('Xin', '8744'), ('Xin Yu', '187'), ('Xinyu', '10705'), ('Xinyun', '109256'), ('Xiyu', '315'), ('Xu Liu', '4535'), ('Ya', '24'), ('Ya Hsuan', '17078'), ('Yafan', '39687'), ('Yan', '4196'), ('Yana', '39102'), ('Yang', '73'), ('Yanina', '602453'), ('Yanni', '275'), ('Yarden', '32'), ('Yaroslava', '404915'), ('Yasmin', '11251'), ('Yasmina', '27'), ('Yasmine', '1748'), ('Yasmyn', '71'), ('Yawna', '648'), ('Yayuk', '128509'), ('Ye Ra', '47867'), ('Ye Xin', '281'), ('Yekaterina', '376'), ('Yelena', '1856'), ('Yeong Won', '966'), ('Yevgeniya', '6288'), ('Yi', '19989'), ('Yi Fan', '60646'), ('Yi Jing', '22443'), ('Yi Miao', '61839'), ('Yidi', '136'), ('Yihong', '24'), ('Yijia', '366'), ('Ying', '3783'), ('Ying Ying', '107595'), ('Yixuan', '1380'), ('Ylena', '1546'), ('Ylona Georgiana', '1453'), ('Yoko', '285'), ('Yolande', '1381'), ('Yoo Ri', '182'), ('Yoon Young', '3592'), ('Yoshimi', '677'), ('Yosr', '75'), ('You Na', '242'), ('Ysaline', '27804'), ('Yu Jin', '452'), ('Yu Tong', '9'), ('Yuan', '281'), ('Yuanyi', '772'), ('Yue', '1259'), ('Yue Yue', '21360'), ('Yuenu', '682'), ('Yujia', '184'), ('Yuka', '12474'), ('Yukako', '84'), ('Yuki', '505'), ('Yuki Kristina', '2191'), ('Yukina', '998'), ('Yukun', '1828'), ('Yulia', '155143'), ('Yuliana', '15248'), ('Yuliya', '206375'), ('Yumi', '20269'), ('Yung Jan', '229391'), ('Yuqi', '559'), ('Yurika', '101816'), ('Yuriko', '1728'), ('Yurina', '12693'), ('Yuuki', '15071'), ('Yuval', '45'), ('Yuxuan', '24279'), ('Yvonne', '254491'), ('Zaineb', '87'), ('Zalina', '2052'), ('Zarah', '3809'), ('Zarina', '123243'), ('Zeel', '702'), ('Zeynep  Sena', '21'), ('Zhanlan', '2166'), ('Zhaoxuan', '20236'), ('Zhibek', '7'), ('Zhima', '99'), ('Zhou', '30'), ('Zhuoma', '121'), ('Zi', '110290'), ('Zinovia', '74'), ('Ziyue', '1420'), ('Zoe', '2772'), ('Zoe Gwen', '2877'), ('Zsofia', '1501'), ('Zuzana', '266251'), ('Zuzanna', '2258')]",False
473,find the number of players for each country.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT count(*) , country_code FROM players GROUP BY country_code",,True
474,How many players are from each country?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT count(*) , country_code FROM players GROUP BY country_code",,True
475,find the code of the country where has the greatest number of players.,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1,,True
476,What is the code of the country with the most players?,hard,spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1,,True
477,Find the codes of countries that have more than 50 players.,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50,,True
478,What are the codes of countries with more than 50 players?,easy,spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50,,True
479,Find the total number of tours for each ranking date.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
480,How many total tours were there for each ranking date?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",,True
481,Find the number of matches happened in each year.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT count(*) , YEAR FROM matches GROUP BY YEAR",,True
482,How many matches were played in each year?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT count(*) , YEAR FROM matches GROUP BY YEAR",,True
483,Find the name and rank of the 3 youngest winners across all matches.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",,True
484,What are the names and ranks of the three youngest winners across all matches?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",,True
485,How many different winners both participated in the WTA Championships and were left handed?,medium,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',,True
486,Find the number of left handed winners who participated in the WTA Championships.,medium,spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',,True
487,"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",,True
488,"What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",hard,spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",,True
489,Find the number of players for each hand type.,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , count(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
490,How many players are there for each hand type?,medium,spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand , COUNT(*) FROM players GROUP BY hand","Not match: [('14193', 'U'), ('487', 'L'), ('5028', 'R'), ('954', '')] != [('', '954'), ('L', '487'), ('R', '5028'), ('U', '14193')]",False
491,How many ships ended up being 'Captured'?,easy,spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured',,True
492,List the name and tonnage ordered by in descending alphaetical order for the names.,medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  tonnage FROM ship ORDER BY name DESC","SELECT name , tonnage FROM ship ORDER BY name DESC",,True
493,"List the name, date and result of each battle.",medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  date FROM battle","SELECT name , date , RESULT FROM battle","Not match: [('Battle of Adrianople', '14 April 1205'), ('Battle of Boruy', 'June 1205'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Philippopolis', '31 June 1208'), ('Battle of Rodosto', 'February 1206'), ('Battle of Rusion', '31 January 1206'), ('Battle of Serres', 'June 1205'), ('Siege of Constantinople', '1235')] != [('Battle of Adrianople', '14 April 1205', 'Bulgarian victory'), ('Battle of Boruy', 'June 1205', 'Bulgarian victory'), ('Battle of Messinopolis', '4 September 1207', 'Bulgarian victory'), ('Battle of Philippopolis', '31 June 1208', 'Latin victory'), ('Battle of Rodosto', 'February 1206', 'Bulgarian victory'), ('Battle of Rusion', '31 January 1206', 'Bulgarian victory'), ('Battle of Serres', 'June 1205', 'Bulgarian victory'), ('Siege of Constantinople', '1235', 'Two Year Truce')]",False
494,What is maximum and minimum death toll caused each time?,medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT max(killed) ,  min(killed) FROM death","SELECT max(killed) , min(killed) FROM death",,True
495,What is the average number of injuries caused each time?,easy,spider_data/database/battle_death/battle_death.sqlite,SELECT avg(injured) FROM death,SELECT avg(injured) FROM death,,True
496,What are the death and injury situations caused by the ship with tonnage 't'?,medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","SELECT T1.killed , T1.injured FROM death AS T1 INNER JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",,True
497,What are the name and results of the battles when the bulgarian commander is not 'Boril',medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name , RESULT FROM battle WHERE bulgarian_commander != 'Boril'",,True
498,What are the different ids and names of the battles that lost any 'Brig' type shipes?,medium,spider_data/database/battle_death/battle_death.sqlite,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","SELECT DISTINCT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'",,True
499,What are the ids and names of the battles that led to more than 10 people killed in total.,hard,spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10",,True
500,What is the ship id and name that caused most total injuries?,extra,spider_data/database/battle_death/battle_death.sqlite,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id , T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",,True
501,What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,medium,spider_data/database/battle_death/battle_death.sqlite,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I',,True
502,How many different results are there for the battles?,easy,spider_data/database/battle_death/battle_death.sqlite,SELECT count(DISTINCT RESULT) FROM battle,SELECT count(DISTINCT result) FROM battle,,True
503,How many battles did not lose any ship with tonnage '225'?,extra,spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = 225 ),,True
504,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',extra,spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT T1.name , T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name , T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'",,True
505,"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",extra,spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name , RESULT , bulgarian_commander FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE location = 'English Channel' )",,True
506,What are the notes of the death events which has substring 'East'?,medium,spider_data/database/battle_death/battle_death.sqlite,SELECT note FROM death WHERE note LIKE '%East%',SELECT note FROM death WHERE note LIKE '%East%',,True
507,what are all the addresses including line 1 and line 2?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1 , line_2 FROM addresses",,True
508,What is the first and second line for all addresses?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1 , line_2 FROM addresses",,True
509,How many courses in total are listed?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM Courses,,True
510,How many courses are there?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT count(*) FROM Courses,,True
511,How is the math course described?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name = 'math',,True
512,What are the descriptions for all the math courses?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name LIKE '%math%',,True
513,What is the zip code of the address in the city Port Chelsea?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"SELECT zip_postcode FROM addresses WHERE city = ""Port Chelsea""",,True
514,What is the zip code for Port Chelsea?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"SELECT zip_postcode FROM addresses WHERE city = ""Port Chelsea""",,True
515,Which department offers the most number of degrees? List department name and id.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.department_name , T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",,True
516,What is the name and id of the department with the most number of degrees ?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT T1.department_name , T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",,True
517,How many departments offer any degree?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) FROM Degree_Programs,,True
518,How many different departments offer degrees?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) FROM Degree_Programs,,True
519,How many different degree names are offered?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,,True
520,How many different degrees are offered?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,,True
521,How many degrees does the engineering department offer?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'Engineering',,True
522,How many degrees does the engineering department have?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'Engineering',,True
523,What are the names and descriptions of all the sections?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , section_description FROM Sections",,True
524,What are the names and descriptions for all the sections?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name , section_description FROM Sections",,True
525,What are the names and id of courses having at most 2 sections?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) <= 2",,True
526,What are the names and ids of every course with less than 2 sections?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) < 2","Not match: [('cal', '7'), ('db', '12'), ('dl', '9'), ('ds', '1'), ('en', '4'), ('fr', '5'), ('la', '6'), ('math', '2'), ('ml', '10'), ('nlp', '8'), ('pl', '14')] != [('cal', '7'), ('db', '12'), ('dl', '9'), ('en', '4'), ('la', '6'), ('math', '2'), ('ml', '10')]",False
527,List the section_name in reversed lexicographical order.,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
528,What are the names of the sections in reverse alphabetical order?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
529,What is the semester which most student registered in? Show both the name and the id.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",,True
530,"For each semester, what is the name and id of the one with the most students registered?",extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",,True
531,What is the description of the department whose name has the substring the computer?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
532,What is the department description for the one whose name has the word computer?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
533,"Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",,True
534,"What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",,True
535,"Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name LIKE '%Bachelor%'",,True
536,"What are the first, middle, and last names for everybody enrolled in a Bachelors program?",hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'","Not match: [('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')] != []",False
537,Find the kind of program which most number of students are enrolled in?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,,True
538,What is the degree summary name that has the most number of students enrolled?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,,True
539,Find the program which most number of students are enrolled in. List both the id and the summary.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id , T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",,True
540,What is the program id and the summary of the degree that has the most students enrolled?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id , T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",,True
541,"Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",,True
542,"What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) AS num FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY num DESC LIMIT 1","Not match: [('7', 'Frida', 'Aisha', 'Huel', '3', '7')] != [('7', 'Frida', 'Aisha', 'Huel', '3')]",False
543,Which semesters do not have any student enrolled? List the semester name.,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment),,True
544,What is the name of the semester with no students enrolled?,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),,True
545,What are all the course names of the courses which ever have students enrolled in?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,,True
546,What are the names of all courses that have some students enrolled?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,,True
547,What's the name of the course with most number of enrollments?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1,"Not match: [('rs',)] != [('pl',)]",False
548,What is the name of the course with the most students enrolled?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1,,True
549,Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 INNER JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,,True
550,What are the last name of the students who live in North Carolina but have not registered in any degree programs?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 INNER JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,,True
551,Show the date and id of the transcript with at least 2 course results.,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2",,True
552,What is the date and id of the transcript with at least 2 courses listed?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2",,True
553,What is the phone number of the man with the first name Timmothy and the last name Ward?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',"SELECT cell_mobile_number FROM Students WHERE first_name = ""Timmothy"" AND last_name = ""Ward""",,True
554,What is the mobile phone number of the student named Timmothy Ward ?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',"SELECT cell_mobile_number FROM Students WHERE first_name = ""Timmothy"" AND last_name = ""Ward""","Not match: [] != [('(096)889-8954x524',)]",False
555,"Who is the first student to register? List the first name, middle name and last name.",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",,True
556,"What is the first, middle, and last name of the first student to register?",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",,True
557,"Who is the earliest graduate of the school? List the first name, middle name and last name.",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1",,True
558,"What is the first, middle, and last name of the earliest school graduate?",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1",,True
559,Whose permanent address is different from his or her current address? List his or her first name.,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,,True
560,What is the first name of the student whose permanent address is different from his or her current one?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,,True
561,Which address holds the most number of students currently? List the address id and all lines.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id , T1.line_1 , T1.line_2 , T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","Not match: [('9', '0643 Muller Vista', 'Suite 383')] != [('9', '0643 Muller Vista', 'Suite 383', '')]",False
562,"What is the id, line 1, and line 2 of the address with the most students?",extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",,True
563,"On average, when were the transcripts printed?",easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,,True
564,What is the average transcript date?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,,True
565,When is the first transcript released? List the date and details.,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",,True
566,"What is the earliest date of a transcript release, and what details can you tell me?",medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",,True
567,How many transcripts are released?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,,True
568,How many transcripts are listed?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,,True
569,What is the last transcript release date?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,,True
570,When was the last transcript released?,medium,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,,True
571,How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",,True
572,What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",,True
573,"Show the date of the transcript which shows the least number of results, also list the id.",extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1",,True
574,What is the date and id of the transcript with the least number of results?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1",,True
575,Find the semester when both Master students and Bachelor students got enrolled in.,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Master' INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Bachelor',,True
576,What is the id of the semester that had both Masters and Bachelors students enrolled?,extra,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Masters' INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name = 'Bachelors',"Not match: [('13',)] != []",False
577,How many different addresses do the students currently live?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) FROM Students,,True
578,What are the different addresses that have students living there?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) FROM Students,,True
579,List all the student details in reversed lexicographical order.,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,,True
580,What other details can you tell me about students in reverse alphabetical order?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,,True
581,Describe the section h.,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM Sections WHERE section_name = 'h',,True
582,What is the description for the section named h?,easy,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',"SELECT section_description FROM Sections WHERE section_name = ""h""",,True
583,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = ""Haiti"" OR T1.cell_mobile_number = ""09700166582""","Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
584,What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?,hard,spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = ""Haiti"" OR T1.cell_mobile_number = ""09700166582""","Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
585,List the title of all cartoons in alphabetical order.,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title ASC,,True
586,What are the titles of the cartoons sorted alphabetically?,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY title ASC,,True
587,"List all cartoon directed by ""Ben Jones"".",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""",,True
588,What are the names of all cartoons directed by Ben Jones?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""",,True
589,"How many cartoons were written by ""Joseph Kuhr""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
590,What is the number of cartoones written by Joseph Kuhr?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr""",,True
591,list all cartoon titles and their directors ordered by their air date,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",,True
592,What is the name and directors of all the cartoons that are ordered by air date?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",,True
593,"List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"".",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""",,True
594,What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""",,True
595,Which country has the most of TV Channels? List the country and number of TV Channels it has.,hard,spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1",,True
596,What is the country with the most number of TV Channels and how many does it have?,hard,spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",,True
597,List the number of different series names and contents in the TV Channel table.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT COUNT(DISTINCT series_name) , COUNT(DISTINCT Content) FROM TV_Channel",,True
598,How many different series and contents are listed in the TV Channel table?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel",,True
599,"What is the content of TV Channel with serial name ""Sky Radio""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
600,What is the content of the series Sky Radio?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
601,"What is the Package Option of TV Channel with serial name ""Sky Radio""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
602,What are the Package Options of the TV Channels whose series names are Sky Radio?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",,True
603,How many TV Channel using language English?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English',,True
604,How many TV Channels use the English language?,easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";","SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English""",,True
605,List the language used least number of TV Channel. List language and number of TV Channel.,hard,spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",,True
606,What are the languages used by the least number of TV Channels and how many channels use it?,hard,spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(LANGUAGE) ASC LIMIT 1",,True
607,List each language and the number of TV Channels using it.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
608,"For each language, list the number of TV Channels that use it.",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",,True
609,"What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name.",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!',,True
610,"What is the series name of the TV Channel that shows the cartoon ""The Rise of the Blue Beetle""?",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle',"Not match: [('Sky Radio',)] != []",False
611,"List the title of all  Cartoons showed on TV Channel with series name ""Sky Radio"".",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio',,True
612,"What is the title of all the cartools that are on the TV Channel with the series name ""Sky Radio""?",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio',,True
613,List the Episode of all TV series sorted by rating.,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating DESC,,True
614,What are all of the episodes ordered by ratings?,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating DESC,,True
615,List top 3 highest Rating  TV series. List the TV series's Episode and Rating.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",,True
616,What are 3 most highly rated episodes in the TV series table and what were those ratings?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",,True
617,What is minimum and maximum share of TV series?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(SHARE) , max(SHARE) FROM TV_series","Not match: [('9.0', '5.0')] != [('5.0', '9.0')]",False
618,What is the maximum and minimum share for the TV series?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(SHARE) , min(SHARE) FROM TV_series",,True
619,"What is the air date of TV series with Episode ""A Love of a Lifetime""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
620,"When did the episode ""A Love of a Lifetime"" air?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
621,"What is Weekly Rank of TV series with Episode ""A Love of a Lifetime""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
622,"What is the weekly rank for the episode ""A Love of a Lifetime""?",easy,spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
623,"What is the TV Channel of TV series with Episode ""A Love of a Lifetime""? List the TV Channel's series name.",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime',,True
624,"What is the name of the series that has the episode ""A Love of a Lifetime""?",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime',,True
625,"List the Episode of all  TV series showed on TV Channel with series name ""Sky Radio"".",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio',,True
626,"What is the episode for the TV series named ""Sky Radio""?",medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio',,True
627,Find the number of cartoons directed by each of the listed directors.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by , COUNT(*) FROM Cartoon GROUP BY Directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
628,How many cartoons did each director create?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by , COUNT(*) FROM Cartoon GROUP BY Directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
629,Find the production code and channel of the most recently aired cartoon .,medium,spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","select T1.production_code , T1.Channel from Cartoon AS T1 join TV_Channel AS T2 on T1.Channel = T2.id order by T1.Original_air_date desc limit 1",,True
630,What is the produdction code and channel of the most recent cartoon ?,medium,spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","select production_code , channel from Cartoon order by original_air_date desc limit 1",,True
631,Find the package choice and series name of the TV channel that has high definition TV.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option , series_name FROM TV_Channel WHERE Hight_definition_TV = ""Yes""","Not match: [('Sky Famiglia + Sky HD', 'MTV Live HD')] != []",False
632,What are the package options and the name of the series for the TV Channel that supports high definition TV?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option , series_name FROM TV_Channel WHERE Hight_definition_TV = ""yes""",,True
633,which countries' tv channels are playing some cartoon written by Todd Casey?,medium,spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey',,True
634,What are the countries that have cartoons on TV that were written by Todd Casey?,medium,spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey',,True
635,which countries' tv channels are not playing any cartoon written by Todd Casey?,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',,True
636,What are the countries that are not playing cartoons written by Todd Casey?,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',,True
637,Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?,extra,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'",,True
638,What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?,extra,spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'",,True
639,find the pixel aspect ratio and nation of the tv channels that do not use English.,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR , country FROM TV_Channel WHERE LANGUAGE != 'English'",,True
640,What is the pixel aspect ratio and country of origin for all TV channels that do not use English?,medium,spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR , Country FROM TV_Channel WHERE LANGUAGE != 'English'",,True
641,find id of the tv channels that from the countries where have more than two tv channels.,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel WHERE country IN ( SELECT country FROM TV_Channel GROUP BY country HAVING count(id) > 2 ),"Not match: [('700',)] != [('700',), ('701',), ('703',), ('704',), ('705',), ('708',), ('713',), ('714',), ('715',), ('717',), ('719',), ('728',)]",False
642,What are the ids of all tv channels that have more than 2 TV channels?,easy,spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY series_name HAVING COUNT(*) > 2,"Not match: [('700',)] != []",False
643,find the id of tv channels that do not play any cartoon directed by Ben Jones.,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',,True
644,What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',,True
645,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),"SELECT package_option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = ""Ben Jones"" )",,True
646,What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,hard,spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT package_option FROM TV_Channel EXCEPT SELECT T1.package_option FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones',"Not match: [('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia + Sky HD',), ('no ( FTV )',), ('no ( FTV )',)] != [('Sky Famiglia + Sky HD',), ('no ( FTV )',)]",False
647,How many poker players are there?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
648,Count the number of poker players.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,,True
649,List the earnings of poker players in descending order.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
650,"What are the earnings of poker players, ordered descending by value?",easy,spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
651,List the final tables made and the best finishes of poker players.,medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
652,What are the final tables made and best finishes for all poker players?,medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",,True
653,What is the average earnings of poker players?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
654,Return the average earnings across all poker players.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,,True
655,What is the money rank of the poker player with the highest earnings?,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
656,Return the money rank of the player with the greatest earnings.,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,,True
657,What is the maximum number of final tables made among poker players with earnings less than 200000?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
658,Return the maximum final tables made across all poker players who have earnings below 200000.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
659,What are the names of poker players?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,,True
660,Return the names of all the poker players.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,,True
661,What are the names of poker players whose earnings is higher than 300000?,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,,True
662,Give the names of poker players who have earnings above 300000.,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,,True
663,List the names of poker players ordered by the final tables made in ascending order.,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC,,True
664,"What are the names of poker players, ordered ascending by the number of final tables they have made?",medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC,,True
665,What is the birth date of the poker player with the lowest earnings?,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,,True
666,Return the birth date of the poker player with the lowest earnings.,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,,True
667,What is the money rank of the tallest poker player?,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,,True
668,Return the money rank of the poker player with the greatest height.,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,,True
669,What is the average earnings of poker players with height higher than 200?,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200,,True
670,Give average earnings of poker players who are taller than 200.,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200,,True
671,What are the names of poker players in descending order of earnings?,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,,True
672,Return the names of poker players sorted by their earnings descending.,medium,spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,,True
673,What are different nationalities of people and the corresponding number of people from each nation?,medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",,True
674,How many people are there of each nationality?,medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",,True
675,What is the most common nationality of people?,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
676,Give the nationality that is most common across all people.,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
677,What are the nationalities that are shared by at least two people?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,,True
678,Return the nationalities for which there are two or more people.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,,True
679,List the names and birth dates of people in ascending alphabetical order of name.,medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM people ORDER BY Name ASC",,True
680,"What are the names and birth dates of people, ordered by their names in alphabetical order?",medium,spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name , Birth_Date FROM people ORDER BY Name ASC",,True
681,"Show names of people whose nationality is not ""Russia"".",easy,spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",,True
682,What are the names of people who are not from Russia?,easy,spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",,True
683,List the names of people that are not poker players.,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),,True
684,What are the names of people who do not play poker?,hard,spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),,True
685,How many distinct nationalities are there?,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM people,,True
686,Count the number of different nationalities.,easy,spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT Nationality) FROM people,,True
687,How many states are there?,easy,spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM area_code_state,SELECT count(*) FROM AREA_CODE_STATE,,True
688,"List the contestant numbers and names, ordered by contestant name descending.",medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC",,True
689,"List the vote ids, phone numbers and states of all votes.",medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id , phone_number , state FROM votes",,True
690,What are the maximum and minimum values of area codes?,medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT max(area_code) , min(area_code) FROM area_code_state",,True
691,What is last date created of votes from the state 'CA'?,easy,spider_data/database/voter_1/voter_1.sqlite,SELECT max(created) FROM votes WHERE state  =  'CA',SELECT max(created) FROM votes WHERE state = 'CA',,True
692,What are the names of the contestants whose names are not 'Jessie Alloway',easy,spider_data/database/voter_1/voter_1.sqlite,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',,True
693,What are the distinct states and create time of all votes?,medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT DISTINCT state ,  created FROM votes","SELECT DISTINCT state , created FROM votes",,True
694,What are the contestant numbers and names of the contestants who had at least two votes?,medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",,True
695,"Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",extra,spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 INNER JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",,True
696,What are the number of votes from state 'NY' or 'CA'?,medium,spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA',,True
697,How many contestants did not get voted?,extra,spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),,True
698,What is the area code in which the most voters voted?,extra,spider_data/database/voter_1/voter_1.sqlite,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.area_code FROM area_code_state AS T1 INNER JOIN votes AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1,,True
699,"What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",medium,spider_data/database/voter_1/voter_1.sqlite,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT T1.created , T1.state , T1.phone_number FROM VOTES AS T1 INNER JOIN CONTTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'",OperationalError('no such table: CONTTESTANTS'),False
700,List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.,extra,spider_data/database/voter_1/voter_1.sqlite,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state INNER JOIN CONTTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state INNER JOIN CONTTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Kelly Clauss',OperationalError('no such table: CONTTESTANTS'),False
701,Return the names of the contestants whose names contain the substring 'Al' .,medium,spider_data/database/voter_1/voter_1.sqlite,"select contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%',,True
702,What are the names of all the countries that became independent after 1950?,easy,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950,,True
703,Give the names of the nations that were founded after 1950.,easy,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950,,True
704,How many countries have a republic as their form of government?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",,True
705,How many countries have governments that are republics?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",,True
706,What is the total surface area of the countries in the Caribbean region?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
707,How much surface area do the countires in the Carribean cover together?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",,True
708,Which continent is Anguilla in?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
709,What is the continent name which Anguilla belongs to?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","SELECT Continent FROM country WHERE Name = ""Anguilla""",,True
710,Which region is the city Kabul located in?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
711,What region is Kabul in?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
712,Which language is the most popular in Aruba?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY T2.Percentage DESC LIMIT 1,,True
713,What language is predominantly spoken in Aruba?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY T2.Percentage DESC LIMIT 1,,True
714,What are the population and life expectancies in Brazil?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
715,Give me Brazil’s population and life expectancies.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",,True
716,What are the region and population of Angola?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Population , Region FROM country WHERE Name = ""Angola""",,True
717,What region does Angola belong to and what is its population?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Population , Region FROM country WHERE Name = ""Angola""",,True
718,What is the average expected life expectancy for countries in the region of Central Africa?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",,True
719,How long is the people’s average life expectancy in Central Africa?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Central America""","Not match: [('50.31111111111111',)] != [('',)]",False
720,What is the name of country that has the shortest life expectancy in Asia?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",,True
721,Give the name of the country in Asia with the lowest life expectancy.,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",,True
722,What is the total population and maximum GNP in Asia?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
723,"How many people live in Asia, and what is the largest GNP among them?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",,True
724,What is the average life expectancy in African countries that are republics?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
725,Give the average life expectancy for countries in Africa which are republics?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",,True
726,What is the total surface area of the continents Asia and Europe?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
727,Give the total surface area covered by countries in Asia or Europe.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",,True
728,How many people live in Gelderland district?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
729,What is the total population of Gelderland district?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","SELECT sum(Population) FROM city WHERE District = ""Gelderland""",,True
730,What is the average GNP and total population in all nations whose government is US territory?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""",,True
731,Give the mean GNP and total population of nations which are considered US territory.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) , sum(population) FROM country WHERE Continent = ""US Territory""","Not match: [('510.3333333333333', '329000')] != [('', '')]",False
732,How many unique languages are spoken in the world?,easy,spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,,True
733,What is the number of distinct languages used around the world?,easy,spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,,True
734,How many type of governments are in Africa?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",,True
735,How many different forms of governments are there in Africa?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",,True
736,What is the total number of languages used in Aruba?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba',,True
737,How many languages are spoken in Aruba?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba',,True
738,How many official languages does Afghanistan have?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan' AND T2.IsOfficial = 'T',,True
739,How many official languages are spoken in Afghanistan?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan' AND T2.IsOfficial = 'T',,True
740,What is name of the country that speaks the largest number of languages?,extra,spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
741,Give the name of the nation that uses the greatest amount of languages.,extra,spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT (T2.Language) DESC LIMIT 1,,True
742,Which continent has the most diverse languages?,extra,spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
743,Which continent speaks the most languages?,extra,spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(T2.Language) DESC LIMIT 1,,True
744,How many countries speak both English and Dutch?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(*) FROM ( SELECT T1.CountryCode FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch' ) T3,,True
745,What is the number of nations that use English and Dutch?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch',"Not match: [('3',)] != []",False
746,What are the names of nations speak both English and French?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French',,True
747,Give the names of nations that speak both English and French.,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French',,True
748,What are the names of nations where both English and French are official languages?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T',,True
749,Give the names of countries with English and French as official languages.,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T',,True
750,What is the number of distinct continents where Chinese is spoken?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese',,True
751,How many continents speak Chinese?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese',,True
752,What are the regions that use English or Dutch?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch',,True
753,Which regions speak Dutch or English?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' OR T2.Language = 'English',,True
754,What are the countries where either English or Dutch is the official language ?,extra,spider_data/database/world_1/world_1.sqlite,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' UNION SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' AND T2.IsOfficial = 'T',"Not match: [] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
755,Which countries have either English or Dutch as an official language?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""",SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' UNION SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' AND T2.IsOfficial = 'T',"Not match: [('ABW', 'Aruba', 'North America', 'Caribbean', '193.0', '', '103000', '78.4', '828.0', '793.0', 'Aruba', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '129', 'AW', 'ABW', 'Dutch', 'T', '5.3'), ('AIA', 'Anguilla', 'North America', 'Caribbean', '96.0', '', '8000', '76.1', '63.2', '', 'Anguilla', 'Dependent Territory of the UK', 'Elisabeth II', '62', 'AI', 'AIA', 'English', 'T', '0.0'), ('ANT', 'Netherlands Antilles', 'North America', 'Caribbean', '800.0', '', '217000', '74.7', '1941.0', '', 'Nederlandse Antillen', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '33', 'AN', 'ANT', 'Dutch', 'T', '0.0'), ('ASM', 'American Samoa', 'Oceania', 'Polynesia', '199.0', '', '68000', '75.1', '334.0', '', 'Amerika Samoa', 'US Territory', 'George W. Bush', '54', 'AS', 'ASM', 'English', 'T', '3.1'), ('ATG', 'Antigua and Barbuda', 'North America', 'Caribbean', '442.0', '1981', '68000', '70.5', '612.0', '584.0', 'Antigua and Barbuda', 'Constitutional Monarchy', 'Elisabeth II', '63', 'AG', 'ATG', 'English', 'T', '0.0'), ('AUS', 'Australia', 'Oceania', 'Australia and New Zealand', '7741220.0', '1901', '18886000', '79.8', '351182.0', '392911.0', 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', '135', 'AU', 'AUS', 'English', 'T', '81.2'), ('BEL', 'Belgium', 'Europe', 'Western Europe', '30518.0', '1830', '10239000', '77.8', '249704.0', '243948.0', 'België/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', '179', 'BE', 'BEL', 'Dutch', 'T', '59.2'), ('BLZ', 'Belize', 'North America', 'Central America', '22696.0', '1981', '241000', '70.9', '630.0', '616.0', 'Belize', 'Constitutional Monarchy', 'Elisabeth II', '185', 'BZ', 'BLZ', 'English', 'T', '50.8'), ('BMU', 'Bermuda', 'North America', 'North America', '53.0', '', '65000', '76.9', '2328.0', '2190.0', 'Bermuda', 'Dependent Territory of the UK', 'Elisabeth II', '191', 'BM', 'BMU', 'English', 'T', '100.0'), ('BRB', 'Barbados', 'North America', 'Caribbean', '430.0', '1966', '270000', '73.0', '2223.0', '2186.0', 'Barbados', 'Constitutional Monarchy', 'Elisabeth II', '174', 'BB', 'BRB', 'English', 'T', '0.0'), ('CAN', 'Canada', 'North America', 'North America', '9970610.0', '1867', '31147000', '79.4', '598862.0', '625626.0', 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', '1822', 'CA', 'CAN', 'English', 'T', '60.4'), ('CCK', 'Cocos (Keeling) Islands', 'Oceania', 'Australia and New Zealand', '14.0', '', '600', '', '0.0', '', 'Cocos (Keeling) Islands', 'Territory of Australia', 'Elisabeth II', '2317', 'CC', 'CCK', 'English', 'T', '0.0'), ('CXR', 'Christmas Island', 'Oceania', 'Australia and New Zealand', '135.0', '', '2500', '', '0.0', '', 'Christmas Island', 'Territory of Australia', 'Elisabeth II', '1791', 'CX', 'CXR', 'English', 'T', '0.0'), ('CYM', 'Cayman Islands', 'North America', 'Caribbean', '264.0', '', '38000', '78.9', '1263.0', '1186.0', 'Cayman Islands', 'Dependent Territory of the UK', 'Elisabeth II', '553', 'KY', 'CYM', 'English', 'T', '0.0'), ('FLK', 'Falkland Islands', 'South America', 'South America', '12173.0', '', '2000', '', '0.0', '', 'Falkland Islands', 'Dependent Territory of the UK', 'Elisabeth II', '763', 'FK', 'FLK', 'English', 'T', '0.0'), ('GBR', 'United Kingdom', 'Europe', 'British Islands', '242900.0', '1066', '59623400', '77.7', '1378330.0', '1296830.0', 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', '456', 'GB', 'GBR', 'English', 'T', '97.3'), ('GIB', 'Gibraltar', 'Europe', 'Southern Europe', '6.0', '', '25000', '79.0', '258.0', '', 'Gibraltar', 'Dependent Territory of the UK', 'Elisabeth II', '915', 'GI', 'GIB', 'English', 'T', '88.9'), ('GUM', 'Guam', 'Oceania', 'Micronesia', '549.0', '', '168000', '77.8', '1197.0', '1136.0', 'Guam', 'US Territory', 'George W. Bush', '921', 'GU', 'GUM', 'English', 'T', '37.5'), ('HKG', 'Hong Kong', 'Asia', 'Eastern Asia', '1075.0', '', '6782000', '79.5', '166448.0', '173610.0', 'Xianggang/Hong Kong', 'Special Administrative Region of China', 'Jiang Zemin', '937', 'HK', 'HKG', 'English', 'T', '2.2'), ('IRL', 'Ireland', 'Europe', 'British Islands', '70273.0', '1921', '3775100', '76.8', '75921.0', '73132.0', 'Ireland/Éire', 'Republic', 'Mary McAleese', '1447', 'IE', 'IRL', 'English', 'T', '98.4'), ('KNA', 'Saint Kitts and Nevis', 'North America', 'Caribbean', '261.0', '1983', '38000', '70.7', '299.0', '', 'Saint Kitts and Nevis', 'Constitutional Monarchy', 'Elisabeth II', '3064', 'KN', 'KNA', 'English', 'T', '0.0'), ('LCA', 'Saint Lucia', 'North America', 'Caribbean', '622.0', '1979', '154000', '72.3', '571.0', '', 'Saint Lucia', 'Constitutional Monarchy', 'Elisabeth II', '3065', 'LC', 'LCA', 'English', 'T', '20.0'), ('LSO', 'Lesotho', 'Africa', 'Southern Africa', '30355.0', '1966', '2153000', '50.8', '1061.0', '1161.0', 'Lesotho', 'Constitutional Monarchy', 'Letsie III', '2437', 'LS', 'LSO', 'English', 'T', '0.0'), ('MHL', 'Marshall Islands', 'Oceania', 'Micronesia', '181.0', '1990', '64000', '65.5', '97.0', '', 'Marshall Islands/Majol', 'Republic', 'Kessai Note', '2507', 'MH', 'MHL', 'English', 'T', '0.0'), ('MLT', 'Malta', 'Europe', 'Southern Europe', '316.0', '1964', '380200', '77.9', '3512.0', '3338.0', 'Malta', 'Republic', 'Guido de Marco', '2484', 'MT', 'MLT', 'English', 'T', '2.1'), ('MNP', 'Northern Mariana Islands', 'Oceania', 'Micronesia', '464.0', '', '78000', '75.5', '0.0', '', 'Northern Mariana Islands', 'Commonwealth of the US', 'George W. Bush', '2913', 'MP', 'MNP', 'English', 'T', '4.8'), ('MSR', 'Montserrat', 'North America', 'Caribbean', '102.0', '', '11000', '78.0', '109.0', '', 'Montserrat', 'Dependent Territory of the UK', 'Elisabeth II', '2697', 'MS', 'MSR', 'English', 'T', '0.0'), ('NFK', 'Norfolk Island', 'Oceania', 'Australia and New Zealand', '36.0', '', '2000', '', '0.0', '', 'Norfolk Island', 'Territory of Australia', 'Elisabeth II', '2806', 'NF', 'NFK', 'English', 'T', '0.0'), ('NIU', 'Niue', 'Oceania', 'Polynesia', '260.0', '', '2000', '', '0.0', '', 'Niue', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '2805', 'NU', 'NIU', 'English', 'T', '0.0'), ('NLD', 'Netherlands', 'Europe', 'Western Europe', '41526.0', '1581', '15864000', '78.3', '371362.0', '360478.0', 'Nederland', 'Constitutional Monarchy', 'Beatrix', '5', 'NL', 'NLD', 'Dutch', 'T', '95.6'), ('NRU', 'Nauru', 'Oceania', 'Micronesia', '21.0', '1968', '12000', '60.8', '197.0', '', 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', '2728', 'NR', 'NRU', 'English', 'T', '7.5'), ('NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', '270534.0', '1907', '3862000', '77.8', '54669.0', '64960.0', 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', '3499', 'NZ', 'NZL', 'English', 'T', '87.0'), ('PLW', 'Palau', 'Oceania', 'Micronesia', '459.0', '1994', '19000', '68.6', '105.0', '', 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', '2881', 'PW', 'PLW', 'English', 'T', '3.2'), ('SHN', 'Saint Helena', 'Africa', 'Western Africa', '314.0', '', '6000', '76.8', '0.0', '', 'Saint Helena', 'Dependent Territory of the UK', 'Elisabeth II', '3063', 'SH', 'SHN', 'English', 'T', '0.0'), ('SYC', 'Seychelles', 'Africa', 'Eastern Africa', '455.0', '1976', '77000', '70.4', '536.0', '539.0', 'Sesel/Seychelles', 'Republic', 'France-Albert René', '3206', 'SC', 'SYC', 'English', 'T', '3.8'), ('TCA', 'Turks and Caicos Islands', 'North America', 'Caribbean', '430.0', '', '17000', '73.3', '96.0', '', 'The Turks and Caicos Islands', 'Dependent Territory of the UK', 'Elisabeth II', '3423', 'TC', 'TCA', 'English', 'T', '0.0'), ('TKL', 'Tokelau', 'Oceania', 'Polynesia', '12.0', '', '2000', '', '0.0', '', 'Tokelau', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '3333', 'TK', 'TKL', 'English', 'T', '0.0'), ('TON', 'Tonga', 'Oceania', 'Polynesia', '650.0', '1970', '99000', '67.9', '146.0', '170.0', 'Tonga', 'Monarchy', ""Taufa'ahau Tupou IV"", '3334', 'TO', 'TON', 'English', 'T', '0.0'), ('TUV', 'Tuvalu', 'Oceania', 'Polynesia', '26.0', '1978', '12000', '66.3', '6.0', '', 'Tuvalu', 'Constitutional Monarchy', 'Elisabeth II', '3424', 'TV', 'TUV', 'English', 'T', '0.0'), ('UMI', 'United States Minor Outlying Islands', 'Oceania', 'Micronesia/Caribbean', '16.0', '', '0', '', '0.0', '', 'United States Minor Outlying Islands', 'Dependent Territory of the US', 'George W. Bush', '', 'UM', 'UMI', 'English', 'T', '0.0'), ('USA', 'United States', 'North America', 'North America', '9363520.0', '1776', '278357000', '77.1', '8510700.0', '8110900.0', 'United States', 'Federal Republic', 'George W. Bush', '3813', 'US', 'USA', 'English', 'T', '86.2'), ('VCT', 'Saint Vincent and the Grenadines', 'North America', 'Caribbean', '388.0', '1979', '114000', '72.3', '285.0', '', 'Saint Vincent and the Grenadines', 'Constitutional Monarchy', 'Elisabeth II', '3066', 'VC', 'VCT', 'English', 'T', '0.0'), ('VGB', 'Virgin Islands, British', 'North America', 'Caribbean', '151.0', '', '21000', '75.4', '612.0', '573.0', 'British Virgin Islands', 'Dependent Territory of the UK', 'Elisabeth II', '537', 'VG', 'VGB', 'English', 'T', '0.0'), ('VIR', 'Virgin Islands, U.S.', 'North America', 'Caribbean', '347.0', '', '93000', '78.1', '0.0', '', 'Virgin Islands of the United States', 'US Territory', 'George W. Bush', '4067', 'VI', 'VIR', 'English', 'T', '81.7'), ('VUT', 'Vanuatu', 'Oceania', 'Melanesia', '12189.0', '1980', '190000', '60.6', '261.0', '246.0', 'Vanuatu', 'Republic', 'John Bani', '3537', 'VU', 'VUT', 'English', 'T', '28.3'), ('WSM', 'Samoa', 'Oceania', 'Polynesia', '2831.0', '1962', '180000', '69.2', '141.0', '157.0', 'Samoa', 'Parlementary Monarchy', 'Malietoa Tanumafili II', '3169', 'WS', 'WSM', 'English', 'T', '0.6'), ('ZAF', 'South Africa', 'Africa', 'Southern Africa', '1221037.0', '1910', '40377000', '51.1', '116729.0', '129092.0', 'South Africa', 'Republic', 'Thabo Mbeki', '716', 'ZA', 'ZAF', 'English', 'T', '8.5'), ('ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', '390757.0', '1980', '11669000', '37.8', '5951.0', '8670.0', 'Zimbabwe', 'Republic', 'Robert G. Mugabe', '4068', 'ZW', 'ZWE', 'English', 'T', '2.2')] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
756,Which language is the most popular on the Asian continent?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1,,True
757,What is the language that is used by the largest number of Asian nations?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1,,True
758,Which languages are spoken by only one country in republic governments?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T1.Name) = 1,,True
759,What languages are only used by a single country with a republic government?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T1.Name) = 1,,True
760,Find the city with the largest population that uses English.,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1","SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1","Not match: [('New York', '8008278')] != [('New York',)]",False
761,What is the most populace city that speaks English?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1,"Not match: [('New York', '8008278')] != [('New York',)]",False
762,"Find the name, population and expected life length of asian country with the largest area?",hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",,True
763,"What are the name, population, and life expectancy of the largest Asian country by land?",hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",,True
764,What is average life expectancy in the countries where English is not the official language?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")","SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")",,True
765,Give the mean life expectancy of countries in which English is not the official language.,extra,spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")","SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")",,True
766,What is the total number of people living in the nations that do not use English?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")","SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"")",,True
767,How many people live in countries that do not speak English?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")","SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = ""English"")",,True
768,What is the official language spoken in the country whose head of state is Beatrix?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',,True
769,What is the official language used in the country the name of whose head of state is Beatrix.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T',,True
770,What is the total number of unique official languages spoken in the countries that are founded before 1930?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT( DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T',,True
771,"For the countries founded before 1930, what is the total number of distinct official languages?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = 'T',,True
772,What are the countries that have greater surface area than any country in Europe?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",,True
773,Which countries have greater area than that of any country in Europe?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",,True
774,What are the African countries that have a  population less than any country in Asia?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")","SELECT Name FROM country WHERE Continent = ""Africa"" AND Population < (SELECT max(Population) FROM country WHERE Continent = ""Asia"")",,True
775,Which African countries have a smaller population than that of any country in Asia?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")","SELECT Name FROM country WHERE Continent = ""Africa"" AND Population < (SELECT max(Population) FROM country WHERE Continent = ""Asia"")","Not match: [('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',), ('Sao Tome and Principe',), ('Seychelles',)] != [('Algeria',), ('Angola',), ('Benin',), ('Botswana',), ('British Indian Ocean Territory',), ('Burkina Faso',), ('Burundi',), ('Cameroon',), ('Cape Verde',), ('Central African Republic',), ('Chad',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Côte d’Ivoire',), ('Djibouti',), ('Egypt',), ('Equatorial Guinea',), ('Eritrea',), ('Ethiopia',), ('Gabon',), ('Gambia',), ('Ghana',), ('Guinea',), ('Guinea-Bissau',), ('Kenya',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Madagascar',), ('Malawi',), ('Mali',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Morocco',), ('Mozambique',), ('Namibia',), ('Niger',), ('Nigeria',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Sao Tome and Principe',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Somalia',), ('South Africa',), ('Sudan',), ('Swaziland',), ('Tanzania',), ('Togo',), ('Tunisia',), ('Uganda',), ('Western Sahara',), ('Zambia',), ('Zimbabwe',)]",False
776,Which Asian countries have a population that is larger than any country in Africa?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")","SELECT Name FROM country WHERE Continent = ""Asia"" AND Population > (SELECT min(Population) FROM country WHERE Continent = ""Africa"")","Not match: [('Bangladesh',), ('China',), ('India',), ('Indonesia',), ('Japan',), ('Pakistan',)] != [('Afghanistan',), ('Armenia',), ('Azerbaijan',), ('Bahrain',), ('Bangladesh',), ('Bhutan',), ('Brunei',), ('Cambodia',), ('China',), ('Cyprus',), ('East Timor',), ('Georgia',), ('Hong Kong',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Israel',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kuwait',), ('Kyrgyzstan',), ('Laos',), ('Lebanon',), ('Macao',), ('Malaysia',), ('Maldives',), ('Mongolia',), ('Myanmar',), ('Nepal',), ('North Korea',), ('Oman',), ('Pakistan',), ('Palestine',), ('Philippines',), ('Qatar',), ('Saudi Arabia',), ('Singapore',), ('South Korea',), ('Sri Lanka',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Thailand',), ('Turkey',), ('Turkmenistan',), ('United Arab Emirates',), ('Uzbekistan',), ('Vietnam',), ('Yemen',)]",False
777,What are the Asian countries which have a population larger than that of any country in Africa?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")","SELECT Name FROM country WHERE Continent = ""Asia"" AND Population > (SELECT min(Population) FROM country WHERE Continent = ""Africa"")",,True
778,What are the country codes for countries that do not speak English?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
779,Return the country codes for countries that do not speak English.,hard,spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
780,What are the country codes of countries where people use languages other than English?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",,True
781,Give the country codes for countries in which people speak langauges that are not English.,easy,spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",,True
782,What are the codes of the countries that do not speak English and whose government forms are not Republic?,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",,True
783,Return the codes of countries that do not speak English and do not have Republics for governments.,hard,spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",,True
784,Which cities are in European countries where English is not the official language?,extra,spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code LEFT JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = ""Europe"" AND T3.Language != ""English"" OR T3.IsOfficial != 'T'","Not match: [('A Coruña (La Coruña)',), ('Aachen',), ('Aalborg',), ('Abakan',), ('Aix-en-Provence',), ('Albacete',), ('Alcalá de Henares',), ('Alcorcón',), ('Alessandria',), ('Algeciras',), ('Alicante [Alacant]',), ('Alkmaar',), ('Almere',), ('Almería',), ('Almetjevsk',), ('Altševsk',), ('Amadora',), ('Amersfoort',), ('Amiens',), ('Amsterdam',), ('Ancona',), ('Andorra la Vella',), ('Andria',), ('Angarsk',), ('Angers',), ('Antwerpen',), ('Anzero-Sudzensk',), ('Apeldoorn',), ('Arad',), ('Arezzo',), ('Argenteuil',), ('Arkangeli',), ('Armavir',), ('Arnhem',), ('Arzamas',), ('Astrahan',), ('Athenai',), ('Atšinsk',), ('Augsburg',), ('Bacau',), ('Badajoz',), ('Badalona',), ('Baia Mare',), ('Balakovo',), ('Balašiha',), ('Balašov',), ('Balti',), ('Banja Luka',), ('Barakaldo',), ('Baranovitši',), ('Barcelona',), ('Bari',), ('Barletta',), ('Barnaul',), ('Basel',), ('Bataisk',), ('Belgorod',), ('Bender (Tîghina)',), ('Beograd',), ('Berdjansk',), ('Berdytšiv',), ('Berezniki',), ('Bergamo',), ('Bergen',), ('Bergisch Gladbach',), ('Berlin',), ('Bern',), ('Besançon',), ('Bialystok',), ('Bielefeld',), ('Bielsko-Biala',), ('Bijsk',), ('Bila Tserkva',), ('Bilbao',), ('Blagoveštšensk',), ('Bobruisk',), ('Bochum',), ('Bologna',), ('Bolzano',), ('Bonn',), ('Bordeaux',), ('Borisov',), ('Borås',), ('Botosani',), ('Bottrop',), ('Boulogne-Billancourt',), ('Braga',), ('Braila',), ('Brasov',), ('Bratislava',), ('Bratsk',), ('Braunschweig',), ('Breda',), ('Bremen',), ('Bremerhaven',), ('Brescia',), ('Brest',), ('Brindisi',), ('Brjansk',), ('Brno',), ('Brovary',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bucuresti',), ('Budapest',), ('Bugulma',), ('Burgas',), ('Burgos',), ('Buzau',), ('Bydgoszcz',), ('Bytom',), ('Bærum',), ('Caen',), ('Cagliari',), ('Cartagena',), ('Castellón de la Plana [Castell',), ('Catania',), ('Catanzaro',), ('Cesena',), ('Ceské Budejovice',), ('Charleroi',), ('Chemnitz',), ('Chisinau',), ('Chorzów',), ('Città del Vaticano',), ('Clermont-Ferrand',), ('Cluj-Napoca',), ('Constanta',), ('Cottbus',), ('Coímbra',), ('Craiova',), ('Czestochowa',), ('Cádiz',), ('Córdoba',), ('Dabrowa Górnicza',), ('Darmstadt',), ('Daugavpils',), ('Debrecen',), ('Delft',), ('Derbent',), ('Dijon',), ('Dimitrovgrad',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dobric',), ('Donetsk',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dortmund',), ('Dos Hermanas',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Duisburg',), ('Dzerzinsk',), ('Düren',), ('Düsseldorf',), ('Ede',), ('Eindhoven',), ('Elblag',), ('Elche [Elx]',), ('Elektrostal',), ('Elista',), ('Emmen',), ('Engels',), ('Enschede',), ('Erfurt',), ('Erlangen',), ('Espoo',), ('Essen',), ('Esslingen am Neckar',), ('Ferrara',), ('Firenze',), ('Focsani',), ('Foggia',), ('Forlì',), ('Frankfurt am Main',), ('Frederiksberg',), ('Freiburg im Breisgau',), ('Fuenlabrada',), ('Fürth',), ('Galati',), ('Gdansk',), ('Gdynia',), ('Gelsenkirchen',), ('Geneve',), ('Genova',), ('Gent',), ('Gera',), ('Getafe',), ('Gijón',), ('Giugliano in Campania',), ('Glazov',), ('Gliwice',), ('Gomel',), ('Gorlivka',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Granada',), ('Graz',), ('Grenoble',), ('Grodno',), ('Groningen',), ('Grozny',), ('Grudziadz',), ('Györ',), ('Gävle',), ('Göttingen',), ('Gütersloh',), ('Haag',), ('Haarlem',), ('Haarlemmermeer',), ('Habarovsk',), ('Hagen',), ('Halle/Saale',), ('Hamburg',), ('Hamm',), ('Hannover',), ('Harkova [Harkiv]',), ('Heerlen',), ('Heidelberg',), ('Heilbronn',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Herakleion',), ('Herne',), ('Herson',), ('Hildesheim',), ('Himki',), ('Hmelnytskyi',), ('Hradec Králové',), ('Huelva',), ('Iasi',), ('Ingolstadt',), ('Innsbruck',), ('Irkutsk',), ('Iserlohn',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Izevsk',), ('Izmajil',), ('Jakutsk',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jaén',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelets',), ('Jena',), ('Jenakijeve',), ('Jerez de la Frontera',), ('Jessentuki',), ('Jevpatorija',), ('Joškar-Ola',), ('Juzno-Sahalinsk',), ('Jönköping',), ('Kaiserslautern',), ('Kaliningrad',), ('Kalisz',), ('Kallithea',), ('Kaluga',), ('Kamensk-Uralski',), ('Kamjanets-Podilskyi',), ('Kamyšin',), ('Kansk',), ('Karlsruhe',), ('Kassel',), ('Katowice',), ('Kaunas',), ('Kazan',), ('Kecskemét',), ('Kemerovo',), ('Kertš',), ('Kiel',), ('Kielce',), ('Kinešma',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kiseljovsk',), ('Kislovodsk',), ('Klagenfurt',), ('Klaipeda',), ('Klin',), ('Koblenz',), ('Kolomna',), ('Kolpino',), ('Komsomolsk-na-Amure',), ('Konotop',), ('Korolev',), ('Kostjantynivka',), ('Kostroma',), ('Koszalin',), ('Kovrov',), ('Košice',), ('Kragujevac',), ('Kraków',), ('Kramatorsk',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krefeld',), ('Krementšuk',), ('Kryvyi Rig',), ('Kurgan',), ('Kursk',), ('Kuznetsk',), ('Kyiv',), ('Kyzyl',), ('Köln',), ('København',), ('La Spezia',), ('Lahti',), ('Larisa',), ('Las Palmas de Gran Canaria',), ('Latina',), ('Lausanne',), ('Le Havre',), ('Le Mans',), ('Lecce',), ('Leganés',), ('Legnica',), ('Leiden',), ('Leipzig',), ('Leninsk-Kuznetski',), ('Leverkusen',), ('León',), ('Liberec',), ('Lida',), ('Liepaja',), ('Lille',), ('Limoges',), ('Linköping',), ('Linz',), ('Lipetsk',), ('Lisboa',), ('Livorno',), ('Liège',), ('Ljubertsy',), ('Ljubljana',), ('Lleida (Lérida)',), ('Logroño',), ('Longyearbyen',), ('Lublin',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lund',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Lviv',), ('Lyon',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('Lódz',), ('Lübeck',), ('Lünen',), ('Maastricht',), ('Madrid',), ('Magadan',), ('Magdeburg',), ('Magnitogorsk',), ('Mahatškala',), ('Maikop',), ('Mainz',), ('Makijivka',), ('Malmö',), ('Mannheim',), ('Marbella',), ('Maribor',), ('Mariupol',), ('Marl',), ('Marseille',), ('Mataró',), ('Melitopol',), ('Messina',), ('Metz',), ('Mezduretšensk',), ('Miass',), ('Milano',), ('Minsk',), ('Miskolc',), ('Mitšurinsk',), ('Modena',), ('Moers',), ('Mogiljov',), ('Molodetšno',), ('Monaco-Ville',), ('Mons',), ('Monte-Carlo',), ('Montpellier',), ('Montreuil',), ('Monza',), ('Moscow',), ('Mozyr',), ('Mukatševe',), ('Mulhouse',), ('Munich [München]',), ('Murcia',), ('Murmansk',), ('Murom',), ('Mykolajiv',), ('Mytištši',), ('Málaga',), ('Móstoles',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Münster',), ('Nabereznyje Tšelny',), ('Nahodka',), ('Naltšik',), ('Namur',), ('Nancy',), ('Nantes',), ('Napoli',), ('Neftejugansk',), ('Neftekamsk',), ('Neuss',), ('Nevinnomyssk',), ('Nice',), ('Nijmegen',), ('Nikopol',), ('Niznekamsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Niš',), ('Noginsk',), ('Nojabrsk',), ('Norilsk',), ('Norrköping',), ('Novara',), ('Novi Sad',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novouralsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Nyiregyháza',), ('Nîmes',), ('Nürnberg',), ('Oberhausen',), ('Obninsk',), ('Odense',), ('Odesa',), ('Odintsovo',), ('Offenbach am Main',), ('Oktjabrski',), ('Oldenburg',), ('Oleksandrija',), ('Olomouc',), ('Olsztyn',), ('Omsk',), ('Opole',), ('Oradea',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orjol',), ('Orléans',), ('Orsk',), ('Orša',), ('Osijek',), ('Oslo',), ('Osnabrück',), ('Ostrava',), ('Oulu',), ('Ourense (Orense)',), ('Oviedo',), ('Paderborn',), ('Padova',), ('Palermo',), ('Palma de Mallorca',), ('Pamplona [Iruña]',), ('Panevezys',), ('Pardubice',), ('Paris',), ('Parma',), ('Patras',), ('Pavlograd',), ('Penza',), ('Peristerion',), ('Perm',), ('Perpignan',), ('Perugia',), ('Pervouralsk',), ('Pesaro',), ('Pescara',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Pforzheim',), ('Piacenza',), ('Piatra Neamt',), ('Pihkova',), ('Pinsk',), ('Pireus',), ('Pisa',), ('Pitesti',), ('Pjatigorsk',), ('Pleven',), ('Plock',), ('Ploiesti',), ('Plovdiv',), ('Plzen',), ('Podgorica',), ('Podolsk',), ('Porto',), ('Potsdam',), ('Poznan',), ('Praha',), ('Prato',), ('Prešov',), ('Prizren',), ('Priština',), ('Prokopjevsk',), ('Pultava [Poltava]',), ('Puškin',), ('Pécs',), ('Radom',), ('Ratingen',), ('Ravenna',), ('Recklinghausen',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reims',), ('Remscheid',), ('Rennes',), ('Resita',), ('Reutlingen',), ('Reykjavík',), ('Riga',), ('Rijeka',), ('Rimini',), ('Rivne',), ('Rjazan',), ('Roma',), ('Rostock',), ('Rostov-na-Donu',), ('Rotterdam',), ('Roubaix',), ('Rouen',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruse',), ('Rybinsk',), ('Rybnik',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Saarbrücken',), ('Sabadell',), ('Salamanca',), ('Salavat',), ('Salerno',), ('Salzburg',), ('Salzgitter',), ('Samara',), ('San Marino',), ('Santa Coloma de Gramenet',), ('Santa Cruz de Tenerife',), ('Santander',), ('Santiago de Compostela',), ('Sarajevo',), ('Saransk',), ('Sarapul',), ('Saratov',), ('Sassari',), ('Satu Mare',), ('Schaan',), ('Schaerbeek',), ('Schwerin',), ('Sergijev Posad',), ('Serov',), ('Serpuhov',), ('Serravalle',), ('Sevastopol',), ('Severodvinsk',), ('Seversk',), ('Sevilla',), ('Sibiu',), ('Siegen',), ('Simferopol',), ('Sjeverodonetsk',), ('Skopje',), ('Sliven',), ('Slovjansk',), ('Slupsk',), ('Smolensk',), ('Sofija',), ('Soligorsk',), ('Solikamsk',), ('Solingen',), ('Sosnowiec',), ('Sotši',), ('Split',), ('St Petersburg',), ('St-Étienne',), ('Stahanov',), ('Stara Zagora',), ('Staryi Oskol',), ('Stavanger',), ('Stavropol',), ('Sterlitamak',), ('Stockholm',), ('Strasbourg',), ('Stuttgart',), ('Subotica',), ('Suceava',), ('Sumy',), ('Sundsvall',), ('Surgut',), ('Syktyvkar',), ('Syrakusa',), ('Syzran',), ('Szczecin',), ('Szeged',), ('Székesfehérvár',), ('Taganrog',), ('Tallinn',), ('Tambov',), ('Tampere',), ('Taranto',), ('Tarnów',), ('Tarragona',), ('Tartu',), ('Terni',), ('Ternopil',), ('Terrassa',), ('Thessaloniki',), ('Tilburg',), ('Timisoara',), ('Tirana',), ('Tiraspol',), ('Tjumen',), ('Tobolsk',), ('Toljatti',), ('Tomsk',), ('Torino',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torun',), ('Toulon',), ('Toulouse',), ('Tourcoing',), ('Tours',), ('Trento',), ('Trier',), ('Trieste',), ('Trondheim',), ('Tula',), ('Tulcea',), ('Turku [Åbo]',), ('Tver',), ('Tychy',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Mures',), ('Tórshavn',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšita',), ('Udine',), ('Ufa',), ('Uhta',), ('Ulan-Ude',), ('Uljanovsk',), ('Ulm',), ('Uman',), ('Umeå',), ('Uppsala',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Uzgorod',), ('Vaduz',), ('Valencia',), ('Valladolid',), ('Vantaa',), ('Varna',), ('Velbert',), ('Veliki Novgorod',), ('Velikije Luki',), ('Venezia',), ('Verona',), ('Vicenza',), ('Vigo',), ('Villeurbanne',), ('Vilnius',), ('Vinnytsja',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vladikavkaz',), ('Vladimir',), ('Vladivostok',), ('Volgodonsk',), ('Volgograd',), ('Vologda',), ('Volzski',), ('Vorkuta',), ('Voronez',), ('Votkinsk',), ('Västerås',), ('Walbrzych',), ('Warszawa',), ('Wien',), ('Wiesbaden',), ('Witten',), ('Wloclawek',), ('Wolfsburg',), ('Wroclaw',), ('Wuppertal',), ('Würzburg',), ('Zaanstad',), ('Zabrze',), ('Zagreb',), ('Zaporizzja',), ('Zaragoza',), ('Zelenodolsk',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zenica',), ('Zielona Góra',), ('Zlatoust',), ('Zoetermeer',), ('Zukovski',), ('Zwickau',), ('Zwolle',), ('Zytomyr',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('´s-Hertogenbosch',), ('Århus',), ('Örebro',), ('Ústí nad Labem',), ('Šahty',), ('Šiauliai',), ('Šostka',), ('Štšolkovo',), ('Šumen',)] != [('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abaetetuba',), ('Abaetetuba',), ('Abaetetuba',), ('Abaetetuba',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Aberdeen',), ('Aberdeen',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abu Dhabi',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acarigua',), ('Acarigua',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Adamstown',), ('Adana',), ('Adana',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Aden',), ('Adiyaman',), ('Adiyaman',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Afyon',), ('Afyon',), ('Agadir',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agaña',), ('Agaña',), ('Agaña',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Ageo',), ('Ageo',), ('Ageo',), ('Ageo',), ('Ageo',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Ajman',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akita',), ('Akita',), ('Akita',), ('Akita',), ('Akita',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Aksaray',), ('Aksaray',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Alagoinhas',), ('Alagoinhas',), ('Alagoinhas',), ('Alagoinhas',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alanya',), ('Alanya',), ('Albacete',), ('Albacete',), ('Albacete',), ('Albacete',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcorcón',), ('Alcorcón',), ('Alcorcón',), ('Alcorcón',), ('Aleppo',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Algeciras',), ('Algeciras',), ('Algeciras',), ('Algeciras',), ('Alger',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Alkmaar',), ('Alkmaar',), ('Alkmaar',), ('Alkmaar',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allende',), ('Allende',), ('Allende',), ('Allende',), ('Allende',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almere',), ('Almere',), ('Almere',), ('Almere',), ('Almería',), ('Almería',), ('Almería',), ('Almería',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almirante Brown',), ('Almirante Brown',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Alofi',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Alvorada',), ('Alvorada',), ('Alvorada',), ('Alvorada',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Amadora',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambato',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Americana',), ('Americana',), ('Americana',), ('Americana',), ('Amersfoort',), ('Amersfoort',), ('Amersfoort',), ('Amersfoort',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amman',), ('Amman',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amsterdam',), ('Amsterdam',), ('Amsterdam',), ('Amsterdam',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Ananindeua',), ('Ananindeua',), ('Ananindeua',), ('Ananindeua',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andong',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angren',), ('Angren',), ('Angren',), ('Angren',), ('Angren',), ('Anjo',), ('Anjo',), ('Anjo',), ('Anjo',), ('Anjo',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankara',), ('Ankara',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Annaba',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Ansan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Antalya',), ('Antalya',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antofagasta',), ('Antofagasta',), ('Antofagasta',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anápolis',), ('Anápolis',), ('Anápolis',), ('Anápolis',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apeldoorn',), ('Apeldoorn',), ('Apeldoorn',), ('Apeldoorn',), ('Apia',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apopa',), ('Apucarana',), ('Apucarana',), ('Apucarana',), ('Apucarana',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aracaju',), ('Aracaju',), ('Aracaju',), ('Aracaju',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Araguari',), ('Araguari',), ('Araguari',), ('Araguari',), ('Araguaína',), ('Araguaína',), ('Araguaína',), ('Araguaína',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arapiraca',), ('Arapiraca',), ('Arapiraca',), ('Arapiraca',), ('Araraquara',), ('Araraquara',), ('Araraquara',), ('Araraquara',), ('Araras',), ('Araras',), ('Araras',), ('Araras',), ('Araure',), ('Araure',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Araçatuba',), ('Araçatuba',), ('Araçatuba',), ('Araçatuba',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arecibo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Ariana',), ('Ariana',), ('Arica',), ('Arica',), ('Arica',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armenia',), ('Armenia',), ('Armenia',), ('Armenia',), ('Arnhem',), ('Arnhem',), ('Arnhem',), ('Arnhem',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asan',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Ashdod',), ('Ashgabat',), ('Ashgabat',), ('Ashgabat',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashqelon',), ('Asmara',), ('Asmara',), ('Asmara',), ('Asmara',), ('Asmara',), ('Assuan',), ('Astana',), ('Astana',), ('Astana',), ('Astana',), ('Astana',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Asunción',), ('Asunción',), ('Asyut',), ('Athenai',), ('Athenai',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Atibaia',), ('Atibaia',), ('Atibaia',), ('Atibaia',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Auckland',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avarua',), ('Avellaneda',), ('Avellaneda',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Aydin',), ('Aydin',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Bacabal',), ('Bacabal',), ('Bacabal',), ('Bacabal',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Badajoz',), ('Badajoz',), ('Badajoz',), ('Badajoz',), ('Badalona',), ('Badalona',), ('Badalona',), ('Badalona',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Baghdad',), ('Baghdad',), ('Baghdad',), ('Baghdad',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Bagé',), ('Bagé',), ('Bagé',), ('Bagé',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahtim',), ('Bahía Blanca',), ('Bahía Blanca',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Bairiki',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Baku',), ('Baku',), ('Baku',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balikesir',), ('Balikesir',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Balti',), ('Balti',), ('Balti',), ('Balti',), ('Balti',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Seri Begawan',), ('Bandar Seri Begawan',), ('Bandar Seri Begawan',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandirma',), ('Bandirma',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Banha',), ('Bani Suwayf',), ('Banja Luka',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjul',), ('Banjul',), ('Banjul',), ('Banjul',), ('Banjul',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bantam',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baquba',), ('Baquba',), ('Baquba',), ('Baquba',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barakaldo',), ('Barakaldo',), ('Barakaldo',), ('Barakaldo',), ('Baranovitši',), ('Baranovitši',), ('Baranovitši',), ('Baranovitši',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barbacena',), ('Barbacena',), ('Barbacena',), ('Barbacena',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Barinas',), ('Barinas',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barquisimeto',), ('Barquisimeto',), ('Barra Mansa',), ('Barra Mansa',), ('Barra Mansa',), ('Barra Mansa',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barranquilla',), ('Barranquilla',), ('Barranquilla',), ('Barranquilla',), ('Barreiras',), ('Barreiras',), ('Barreiras',), ('Barreiras',), ('Barretos',), ('Barretos',), ('Barretos',), ('Barretos',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barueri',), ('Barueri',), ('Barueri',), ('Barueri',), ('Baruta',), ('Baruta',), ('Basel',), ('Basel',), ('Basel',), ('Basel',), ('Basildon',), ('Basildon',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basra',), ('Basra',), ('Basra',), ('Basra',), ('Basse-Terre',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Basseterre',), ('Bat Yam',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batman',), ('Batman',), ('Batna',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Battambang',), ('Battambang',), ('Battambang',), ('Batumi',), ('Batumi',), ('Batumi',), ('Batumi',), ('Batumi',), ('Bauru',), ('Bauru',), ('Bauru',), ('Bauru',), ('Bawshar',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayamón',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beerseba',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beirut',), ('Beirut',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Belfast',), ('Belfast',), ('Belford Roxo',), ('Belford Roxo',), ('Belford Roxo',), ('Belford Roxo',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belize City',), ('Belize City',), ('Belize City',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bello',), ('Bello',), ('Bello',), ('Bello',), ('Belmopan',), ('Belmopan',), ('Belmopan',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belém',), ('Belém',), ('Belém',), ('Belém',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bene Beraq',), ('Bengasi',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Beni-Mellal',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beppu',), ('Beppu',), ('Beppu',), ('Beppu',), ('Beppu',), ('Berazategui',), ('Berazategui',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Bern',), ('Bern',), ('Bern',), ('Bern',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Betim',), ('Betim',), ('Betim',), ('Betim',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bialystok',), ('Bialystok',), ('Bialystok',), ('Bialystok',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikenibeu',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilbao',), ('Bilbao',), ('Bilbao',), ('Bilbao',), ('Bilbays',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birigui',), ('Birigui',), ('Birigui',), ('Birigui',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birkenhead',), ('Birkenhead',), ('Birkirkara',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Biserta',), ('Biserta',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Biskra',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bismil',), ('Bismil',), ('Bissau',), ('Bissau',), ('Bissau',), ('Bissau',), ('Bissau',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Blackburn',), ('Blackburn',), ('Blackpool',), ('Blackpool',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blantyre',), ('Blantyre',), ('Blantyre',), ('Blida (el-Boulaida)',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Blumenau',), ('Blumenau',), ('Blumenau',), ('Blumenau',), ('Boa Vista',), ('Boa Vista',), ('Boa Vista',), ('Boa Vista',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobruisk',), ('Bobruisk',), ('Bobruisk',), ('Bobruisk',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bolton',), ('Bolton',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Borisov',), ('Borisov',), ('Borisov',), ('Borisov',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Botucatu',), ('Botucatu',), ('Botucatu',), ('Botucatu',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Bournemouth',), ('Bournemouth',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bradford',), ('Bradford',), ('Braga',), ('Bragança Paulista',), ('Bragança Paulista',), ('Bragança Paulista',), ('Bragança Paulista',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasília',), ('Brasília',), ('Brasília',), ('Brasília',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Breda',), ('Breda',), ('Breda',), ('Breda',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgetown',), ('Brighton',), ('Brighton',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Bristol',), ('Bristol',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bucaramanga',), ('Bucaramanga',), ('Bucaramanga',), ('Bucaramanga',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Buenaventura',), ('Buenaventura',), ('Buenaventura',), ('Buenaventura',), ('Buenos Aires',), ('Buenos Aires',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buga',), ('Buga',), ('Buga',), ('Buga',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Bujumbura',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulaq al-Dakrur',), ('Bulawayo',), ('Bulawayo',), ('Bulawayo',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burgas',), ('Burgas',), ('Burgas',), ('Burgas',), ('Burgos',), ('Burgos',), ('Burgos',), ('Burgos',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Bursa',), ('Bursa',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bytom',), ('Bytom',), ('Bytom',), ('Bytom',), ('Bærum',), ('Bærum',), ('Bærum',), ('Bærum',), ('Bærum',), ('Béchar',), ('Béjaïa',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabimas',), ('Cabimas',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Caguas',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairo',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabozo',), ('Calabozo',), ('Calama',), ('Calama',), ('Calama',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Cali',), ('Cali',), ('Cali',), ('Cali',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Camaragibe',), ('Camaragibe',), ('Camaragibe',), ('Camaragibe',), ('Camaçari',), ('Camaçari',), ('Camaçari',), ('Camaçari',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cametá',), ('Cametá',), ('Cametá',), ('Cametá',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campina Grande',), ('Campina Grande',), ('Campina Grande',), ('Campina Grande',), ('Campinas',), ('Campinas',), ('Campinas',), ('Campinas',), ('Campo Grande',), ('Campo Grande',), ('Campo Grande',), ('Campo Grande',), ('Campo Largo',), ('Campo Largo',), ('Campo Largo',), ('Campo Largo',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Canoas',), ('Canoas',), ('Canoas',), ('Canoas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Caracas',), ('Caracas',), ('Carapicuíba',), ('Carapicuíba',), ('Carapicuíba',), ('Carapicuíba',), ('Cardiff',), ('Cardiff',), ('Cariacica',), ('Cariacica',), ('Cariacica',), ('Cariacica',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carolina',), ('Carrefour',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartago',), ('Cartago',), ('Cartago',), ('Cartago',), ('Caruaru',), ('Caruaru',), ('Caruaru',), ('Caruaru',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Carúpano',), ('Carúpano',), ('Casablanca',), ('Cascavel',), ('Cascavel',), ('Cascavel',), ('Cascavel',), ('Castanhal',), ('Castanhal',), ('Castanhal',), ('Castanhal',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castries',), ('Catanduva',), ('Catanduva',), ('Catanduva',), ('Catanduva',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catia La Mar',), ('Catia La Mar',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Caucaia',), ('Caucaia',), ('Caucaia',), ('Caucaia',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Caxias',), ('Caxias',), ('Caxias',), ('Caxias',), ('Caxias do Sul',), ('Caxias do Sul',), ('Caxias do Sul',), ('Caxias do Sul',), ('Cayenne',), ('Cayenne',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Celaya',), ('Celaya',), ('Celaya',), ('Celaya',), ('Celaya',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceyhan',), ('Ceyhan',), ('Chaguanas',), ('Chaguanas',), ('Chaguanas',), ('Chalco',), ('Chalco',), ('Chalco',), ('Chalco',), ('Chalco',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chang-won',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chapecó',), ('Chapecó',), ('Chapecó',), ('Chapecó',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte Amalie',), ('Charlotte Amalie',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chechon',), ('Cheju',), ('Chelmsford',), ('Chelmsford',), ('Cheltenham',), ('Cheltenham',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chillán',), ('Chillán',), ('Chillán',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chinandega',), ('Chinandega',), ('Chinandega',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chinhae',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chinju',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chitungwiza',), ('Chitungwiza',), ('Chitungwiza',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chonan',), ('Chong-up',), ('Chongjin',), ('Chongju',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chonju',), ('Chorzów',), ('Chorzów',), ('Chorzów',), ('Chorzów',), ('Christchurch',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chunchon',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungju',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chärjew',), ('Chärjew',), ('Chärjew',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Circik',), ('Circik',), ('Circik',), ('Circik',), ('Circik',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Città del Vaticano',), ('Ciudad Bolívar',), ('Ciudad Bolívar',), ('Ciudad Guayana',), ('Ciudad Guayana',), ('Ciudad Losada',), ('Ciudad Losada',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Ojeda',), ('Ciudad Ojeda',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad del Este',), ('Ciudad del Este',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cizah',), ('Cizah',), ('Cizah',), ('Cizah',), ('Cizah',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Cochabamba',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Codó',), ('Codó',), ('Codó',), ('Codó',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Colatina',), ('Colatina',), ('Colatina',), ('Colatina',), ('Colchester',), ('Colchester',), ('Colima',), ('Colima',), ('Colima',), ('Colima',), ('Colima',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comodoro Rivadavia',), ('Comodoro Rivadavia',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepción',), ('Concepción',), ('Concepción',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concordia',), ('Concordia',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constantine',), ('Contagem',), ('Contagem',), ('Contagem',), ('Contagem',), ('Copiapó',), ('Copiapó',), ('Copiapó',), ('Coquimbo',), ('Coquimbo',), ('Coquimbo',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Cork',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Coronel',), ('Coronel',), ('Coronel',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corrientes',), ('Corrientes',), ('Corumbá',), ('Corumbá',), ('Corumbá',), ('Corumbá',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotia',), ('Cotia',), ('Cotia',), ('Cotia',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Coventry',), ('Coventry',), ('Coímbra',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Crato',), ('Crato',), ('Crato',), ('Crato',), ('Crawley',), ('Crawley',), ('Criciúma',), ('Criciúma',), ('Criciúma',), ('Criciúma',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cubatão',), ('Cubatão',), ('Cubatão',), ('Cubatão',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuenca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuiabá',), ('Cuiabá',), ('Cuiabá',), ('Cuiabá',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Cumaná',), ('Cumaná',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Curicó',), ('Curicó',), ('Curicó',), ('Curitiba',), ('Curitiba',), ('Curitiba',), ('Curitiba',), ('Czestochowa',), ('Czestochowa',), ('Czestochowa',), ('Czestochowa',), ('Cádiz',), ('Cádiz',), ('Cádiz',), ('Cádiz',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Cúcuta',), ('Cúcuta',), ('Cúcuta',), ('Cúcuta',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Daito',), ('Daito',), ('Daito',), ('Daito',), ('Daito',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Damanhur',), ('Damascus',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Dashhowuz',), ('Dashhowuz',), ('Dashhowuz',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Dayr al-Zawr',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Dehiwala',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Delft',), ('Delft',), ('Delft',), ('Delft',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delmas',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Denizli',), ('Denizli',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derby',), ('Derby',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Diadema',), ('Diadema',), ('Diadema',), ('Diadema',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dili',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Disuq',), ('Divinópolis',), ('Divinópolis',), ('Divinópolis',), ('Divinópolis',), ('Diyarbakir',), ('Diyarbakir',), ('Djibouti',), ('Djibouti',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dobric',), ('Dobric',), ('Dobric',), ('Dobric',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Doha',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dordrecht',), ('Dordrecht',), ('Dordrecht',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douglas',), ('Douglas',), ('Dourados',), ('Dourados',), ('Dourados',), ('Dourados',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Dubai',), ('Dublin',), ('Dudley',), ('Dudley',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Duma',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dundee',), ('Dundee',), ('Dunedin',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duran [Eloy Alfaro]',), ('Durango',), ('Durango',), ('Durango',), ('Durango',), ('Durango',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Dushanbe',), ('Dushanbe',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('Eastbourne',), ('Eastbourne',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ech-Chleff (el-Asnam)',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Edinburgh',), ('Edinburgh',), ('Edirne',), ('Edirne',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Eindhoven',), ('Eindhoven',), ('Eindhoven',), ('Eindhoven',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('El Alto',), ('El Araich',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Jadida',), ('El Limón',), ('El Limón',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Tigre',), ('El Tigre',), ('Elblag',), ('Elblag',), ('Elblag',), ('Elblag',), ('Elche [Elx]',), ('Elche [Elx]',), ('Elche [Elx]',), ('Elche [Elx]',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Elâzig',), ('Elâzig',), ('Embu',), ('Embu',), ('Embu',), ('Embu',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emmen',), ('Emmen',), ('Emmen',), ('Emmen',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Enschede',), ('Enschede',), ('Enschede',), ('Enschede',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Envigado',), ('Envigado',), ('Envigado',), ('Envigado',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erzincan',), ('Erzincan',), ('Erzurum',), ('Erzurum',), ('Escobar',), ('Escobar',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Eskisehir',), ('Eskisehir',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Esmeraldas',), ('Espoo',), ('Espoo',), ('Espoo',), ('Espoo',), ('Espoo',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esteban Echeverría',), ('Esteban Echeverría',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Ettadhamen',), ('Ettadhamen',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eunápolis',), ('Eunápolis',), ('Eunápolis',), ('Eunápolis',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Exeter',), ('Exeter',), ('Ezeiza',), ('Ezeiza',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Faaa',), ('Faaa',), ('Fagatogo',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Fakaofo',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fargona',), ('Fargona',), ('Fargona',), ('Fargona',), ('Fargona',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Feira de Santana',), ('Feira de Santana',), ('Feira de Santana',), ('Feira de Santana',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fernando de la Mora',), ('Fernando de la Mora',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Florencia',), ('Florencia',), ('Florencia',), ('Florencia',), ('Florencio Varela',), ('Florencio Varela',), ('Florianópolis',), ('Florianópolis',), ('Florianópolis',), ('Florianópolis',), ('Floridablanca',), ('Floridablanca',), ('Floridablanca',), ('Floridablanca',), ('Flying Fish Cove',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Formosa',), ('Formosa',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort-de-France',), ('Fortaleza',), ('Fortaleza',), ('Fortaleza',), ('Fortaleza',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Franca',), ('Franca',), ('Franca',), ('Franca',), ('Francisco Morato',), ('Francisco Morato',), ('Francisco Morato',), ('Francisco Morato',), ('Francistown',), ('Francistown',), ('Francistown',), ('Francistown',), ('Francistown',), ('Franco da Rocha',), ('Franco da Rocha',), ('Franco da Rocha',), ('Franco da Rocha',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funafuti',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fès',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gabès',), ('Gabès',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Garanhuns',), ('Garanhuns',), ('Garanhuns',), ('Garanhuns',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaza',), ('Gaza',), ('Gaziantep',), ('Gaziantep',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gdansk',), ('Gdansk',), ('Gdansk',), ('Gdansk',), ('Gdynia',), ('Gdynia',), ('Gdynia',), ('Gdynia',), ('Gebze',), ('Gebze',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General San Martín',), ('General San Martín',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('Geneve',), ('Geneve',), ('Geneve',), ('Geneve',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('George',), ('George',), ('George',), ('George',), ('George',), ('George',), ('George',), ('Georgetown',), ('Georgetown',), ('Georgetown',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Getafe',), ('Getafe',), ('Getafe',), ('Getafe',), ('Ghardaïa',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Gibraltar',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gijón',), ('Gijón',), ('Gijón',), ('Gijón',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gillingham',), ('Gillingham',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Girardot',), ('Girardot',), ('Girardot',), ('Girardot',), ('Giron',), ('Giron',), ('Giron',), ('Giron',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giza',), ('Gjumri',), ('Glasgow',), ('Glasgow',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Gliwice',), ('Gliwice',), ('Gliwice',), ('Gliwice',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godoy Cruz',), ('Godoy Cruz',), ('Goiânia',), ('Goiânia',), ('Goiânia',), ('Goiânia',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gomel',), ('Gomel',), ('Gomel',), ('Gomel',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Governador Valadares',), ('Governador Valadares',), ('Governador Valadares',), ('Governador Valadares',), ('Granada',), ('Granada',), ('Granada',), ('Granada',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Gravataí',), ('Gravataí',), ('Gravataí',), ('Gravataí',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grimsby',), ('Grimsby',), ('Grodno',), ('Grodno',), ('Grodno',), ('Grodno',), ('Groningen',), ('Groningen',), ('Groningen',), ('Groningen',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grudziadz',), ('Grudziadz',), ('Grudziadz',), ('Grudziadz',), ('Guacara',), ('Guacara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanare',), ('Guanare',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guarapuava',), ('Guarapuava',), ('Guarapuava',), ('Guarapuava',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guarenas',), ('Guarenas',), ('Guarujá',), ('Guarujá',), ('Guarujá',), ('Guarujá',), ('Guarulhos',), ('Guarulhos',), ('Guarulhos',), ('Guarulhos',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guatire',), ('Guatire',), ('Guayaquil',), ('Guaymallén',), ('Guaymallén',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaynabo',), ('Guaíba',), ('Guaíba',), ('Guaíba',), ('Guaíba',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gweru',), ('Gweru',), ('Gweru',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Gäncä',), ('Gäncä',), ('Gäncä',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Haag',), ('Haag',), ('Haag',), ('Haag',), ('Haarlem',), ('Haarlem',), ('Haarlem',), ('Haarlem',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hadano',), ('Hadano',), ('Hadano',), ('Hadano',), ('Hadano',), ('Haeju',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haifa',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Hama',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamhung',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hanam',), ('Handa',), ('Handa',), ('Handa',), ('Handa',), ('Handa',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Harare',), ('Harare',), ('Harare',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartlepool',), ('Hartlepool',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hatay (Antakya)',), ('Hatay (Antakya)',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebron',), ('Hebron',), ('Heerlen',), ('Heerlen',), ('Heerlen',), ('Heerlen',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Herakleion',), ('Herakleion',), ('Herat',), ('Herat',), ('Herat',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Hims',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hino',), ('Hino',), ('Hino',), ('Hino',), ('Hino',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hodeida',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Holon',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Honiara',), ('Honiara',), ('Honiara',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Hortolândia',), ('Hortolândia',), ('Hortolândia',), ('Hortolândia',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Hualien',), ('Hualien',), ('Hualien',), ('Hualien',), ('Hualien',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Huddersfield',), ('Huddersfield',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huelva',), ('Huelva',), ('Huelva',), ('Huelva',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Hurlingham',), ('Hurlingham',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyesan',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibagué',), ('Ibagué',), ('Ibagué',), ('Ibagué',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibarra',), ('Ibb',), ('Ibirité',), ('Ibirité',), ('Ibirité',), ('Ibirité',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichon',), ('Idfu',), ('Idlib',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iida',), ('Iida',), ('Iida',), ('Iida',), ('Iida',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Iksan',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilhéus',), ('Ilhéus',), ('Ilhéus',), ('Ilhéus',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imperatriz',), ('Imperatriz',), ('Imperatriz',), ('Imperatriz',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inchon',), ('Indaiatuba',), ('Indaiatuba',), ('Indaiatuba',), ('Indaiatuba',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Inegöl',), ('Inegöl',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Ipatinga',), ('Ipatinga',), ('Ipatinga',), ('Ipatinga',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipswich',), ('Ipswich',), ('Iquique',), ('Iquique',), ('Iquique',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irbid',), ('Irbid',), ('Irbil',), ('Irbil',), ('Irbil',), ('Irbil',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Iruma',), ('Iruma',), ('Iruma',), ('Iruma',), ('Iruma',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Ise',), ('Ise',), ('Ise',), ('Ise',), ('Ise',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Isehara',), ('Isehara',), ('Isehara',), ('Isehara',), ('Isehara',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Iskenderun',), ('Iskenderun',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Ismailia',), ('Isparta',), ('Isparta',), ('Istanbul',), ('Istanbul',), ('Itabira',), ('Itabira',), ('Itabira',), ('Itabira',), ('Itaboraí',), ('Itaboraí',), ('Itaboraí',), ('Itaboraí',), ('Itabuna',), ('Itabuna',), ('Itabuna',), ('Itabuna',), ('Itagüí',), ('Itagüí',), ('Itagüí',), ('Itagüí',), ('Itaituba',), ('Itaituba',), ('Itaituba',), ('Itaituba',), ('Itajaí',), ('Itajaí',), ('Itajaí',), ('Itajaí',), ('Itami',), ('Itami',), ('Itami',), ('Itami',), ('Itami',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapetininga',), ('Itapetininga',), ('Itapetininga',), ('Itapetininga',), ('Itapevi',), ('Itapevi',), ('Itapevi',), ('Itapevi',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itu',), ('Itu',), ('Itu',), ('Itu',), ('Ituiutaba',), ('Ituiutaba',), ('Ituiutaba',), ('Ituiutaba',), ('Ituzaingó',), ('Ituzaingó',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmir',), ('Izmir',), ('Izmit (Kocaeli)',), ('Izmit (Kocaeli)',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Jabaliya',), ('Jabaliya',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jacareí',), ('Jacareí',), ('Jacareí',), ('Jacareí',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobina',), ('Jacobina',), ('Jacobina',), ('Jacobina',), ('Jaffna',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalib al-Shuyukh',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaramana',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaworzno',), ('Jaworzno',), ('Jaworzno',), ('Jaworzno',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaén',), ('Jaén',), ('Jaén',), ('Jaén',), ('Jaú',), ('Jaú',), ('Jaú',), ('Jaú',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jequié',), ('Jequié',), ('Jequié',), ('Jequié',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jerusalem',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Ji-Paraná',), ('Ji-Paraná',), ('Ji-Paraná',), ('Ji-Paraná',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jirja',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Joinville',), ('Joinville',), ('Joinville',), ('Joinville',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José C. Paz',), ('José C. Paz',), ('João Pessoa',), ('João Pessoa',), ('João Pessoa',), ('João Pessoa',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juiz de Fora',), ('Juiz de Fora',), ('Juiz de Fora',), ('Juiz de Fora',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Jundíaí',), ('Jundíaí',), ('Jundíaí',), ('Jundíaí',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juárez',), ('Juárez',), ('Juárez',), ('Juárez',), ('Juárez',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabul',), ('Kabul',), ('Kabul',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaesong',), ('Kafr al-Dawwar',), ('Kafr al-Shaykh',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kahramanmaras',), ('Kahramanmaras',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kairouan',), ('Kairouan',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kalisz',), ('Kalisz',), ('Kalisz',), ('Kalisz',), ('Kallithea',), ('Kallithea',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kandy',), ('Kanggye',), ('Kangnung',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Karabük',), ('Karabük',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaman',), ('Karaman',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karbala',), ('Karbala',), ('Karbala',), ('Karbala',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Kariya',), ('Kariya',), ('Kariya',), ('Kariya',), ('Kariya',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Kars',), ('Kars',), ('Karsi',), ('Karsi',), ('Karsi',), ('Karsi',), ('Karsi',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katowice',), ('Katowice',), ('Katowice',), ('Katowice',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kayseri',), ('Kayseri',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khan Yunis',), ('Khan Yunis',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khouribga',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khujand',), ('Khujand',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kielce',), ('Kielce',), ('Kielce',), ('Kielce',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kilis',), ('Kilis',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimchaek',), ('Kimchon',), ('Kimhae',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimje',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kingston',), ('Kingston',), ('Kingston upon Hull',), ('Kingston upon Hull',), ('Kingstown',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kirikkale',), ('Kirikkale',), ('Kirkuk',), ('Kirkuk',), ('Kirkuk',), ('Kirkuk',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kiziltepe',), ('Kiziltepe',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Kobe',), ('Kobe',), ('Kobe',), ('Kobe',), ('Kobe',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kofu',), ('Kofu',), ('Kofu',), ('Kofu',), ('Kofu',), ('Koganei',), ('Koganei',), ('Koganei',), ('Koganei',), ('Koganei',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Koje',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Konan',), ('Konan',), ('Konan',), ('Konan',), ('Konan',), ('Kongju',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konya',), ('Konya',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koror',), ('Koror',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Koszalin',), ('Koszalin',), ('Koszalin',), ('Koszalin',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Koyang',), ('Košice',), ('Košice',), ('Košice',), ('Košice',), ('Košice',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kraków',), ('Kraków',), ('Kraków',), ('Kraków',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Ksar el Kebir',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumi',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunpo',), ('Kunsan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kure',), ('Kure',), ('Kure',), ('Kure',), ('Kure',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kuri',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kuwait',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kwang-yang',), ('Kwangju',), ('Kwangmyong',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyongju',), ('Kyongsan',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kénitra',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('København',), ('København',), ('København',), ('København',), ('København',), ('København',), ('København',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kütahya',), ('Kütahya',), ('La Ceiba',), ('La Ceiba',), ('La Ceiba',), ('La Matanza',), ('La Matanza',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Plata',), ('La Plata',), ('La Rioja',), ('La Rioja',), ('La Romana',), ('La Serena',), ('La Serena',), ('La Serena',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lages',), ('Lages',), ('Lages',), ('Lages',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahti',), ('Lahti',), ('Lahti',), ('Lahti',), ('Lahti',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lambaré',), ('Lambaré',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanús',), ('Lanús',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Larisa',), ('Larisa',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Las Heras',), ('Las Heras',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Latakia',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lausanne',), ('Lausanne',), ('Lausanne',), ('Lausanne',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le-Cap-Haïtien',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Leeds',), ('Leeds',), ('Leganés',), ('Leganés',), ('Leganés',), ('Leganés',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legnica',), ('Legnica',), ('Legnica',), ('Legnica',), ('Leicester',), ('Leicester',), ('Leiden',), ('Leiden',), ('Leiden',), ('Leiden',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerma',), ('Lerma',), ('Lerma',), ('Lerma',), ('Lerma',), ('Les Abymes',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Libreville',), ('Libreville',), ('Libreville',), ('Libreville',), ('Lida',), ('Lida',), ('Lida',), ('Lida',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lilongwe',), ('Lilongwe',), ('Lilongwe',), ('Limeira',), ('Limeira',), ('Limeira',), ('Limeira',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhares',), ('Linhares',), ('Linhares',), ('Linhares',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lisboa',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liverpool',), ('Liverpool',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubljana',), ('Ljubljana',), ('Ljubljana',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Logroño',), ('Logroño',), ('Logroño',), ('Logroño',), ('Loja',), ('Lomas de Zamora',), ('Lomas de Zamora',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('Londrina',), ('Londrina',), ('Londrina',), ('Londrina',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyearbyen',), ('Longyearbyen',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Teques',), ('Los Teques',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lower Hutt',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lublin',), ('Lublin',), ('Lublin',), ('Lublin',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Luchou',), ('Luchou',), ('Luchou',), ('Luchou',), ('Luchou',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Luton',), ('Luton',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxor',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luziânia',), ('Luziânia',), ('Luziânia',), ('Luziânia',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lódz',), ('Lódz',), ('Lódz',), ('Lódz',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Maastricht',), ('Maastricht',), ('Maastricht',), ('Maastricht',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Macao',), ('Macao',), ('Macao',), ('Macapá',), ('Macapá',), ('Macapá',), ('Macapá',), ('Macaé',), ('Macaé',), ('Macaé',), ('Macaé',), ('Maceió',), ('Maceió',), ('Maceió',), ('Maceió',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machala',), ('Machida',), ('Machida',), ('Machida',), ('Machida',), ('Machida',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madrid',), ('Madrid',), ('Madrid',), ('Madrid',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magé',), ('Magé',), ('Magé',), ('Magé',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Maicao',), ('Maicao',), ('Maicao',), ('Maicao',), ('Maidstone',), ('Maidstone',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Malabo',), ('Malabo',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malatya',), ('Malatya',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Male',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Mallawi',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malvinas Argentinas',), ('Malvinas Argentinas',), ('Mamoutzou',), ('Mamoutzou',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Managua',), ('Managua',), ('Managua',), ('Manaus',), ('Manaus',), ('Manaus',), ('Manaus',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manisa',), ('Manisa',), ('Manizales',), ('Manizales',), ('Manizales',), ('Manizales',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Manta',), ('Manukau',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Mar del Plata',), ('Mar del Plata',), ('Marabá',), ('Marabá',), ('Marabá',), ('Marabá',), ('Maracanaú',), ('Maracanaú',), ('Maracanaú',), ('Maracanaú',), ('Maracay',), ('Maracay',), ('Maracaíbo',), ('Maracaíbo',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marbella',), ('Marbella',), ('Marbella',), ('Marbella',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Margilon',), ('Margilon',), ('Margilon',), ('Margilon',), ('Margilon',), ('Maribor',), ('Maribor',), ('Maribor',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Maringá',), ('Maringá',), ('Maringá',), ('Maringá',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Marrakech',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Mary',), ('Mary',), ('Mary',), ('Marília',), ('Marília',), ('Marília',), ('Marília',), ('Masan',), ('Masaya',), ('Masaya',), ('Masaya',), ('Maseru',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masqat',), ('Mata-Utu',), ('Mata-Utu',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataró',), ('Mataró',), ('Mataró',), ('Mataró',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Maturín',), ('Maturín',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Mauá',), ('Mauá',), ('Mauá',), ('Mauá',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Mayagüez',), ('Mazar-e-Sharif',), ('Mazar-e-Sharif',), ('Mazar-e-Sharif',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Mbabane',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medellín',), ('Medellín',), ('Medellín',), ('Medellín',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Mejicanos',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Meknès',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melipilla',), ('Melipilla',), ('Melipilla',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Mendoza',), ('Mendoza',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Merlo',), ('Merlo',), ('Mersin (Içel)',), ('Mersin (Içel)',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Middlesbrough',), ('Middlesbrough',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Milagro',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingäçevir',), ('Mingäçevir',), ('Mingäçevir',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minsk',), ('Minsk',), ('Minsk',), ('Minsk',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Miryang',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Misato',), ('Misato',), ('Misato',), ('Misato',), ('Misato',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishima',), ('Mishima',), ('Mishima',), ('Mishima',), ('Mishima',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Misrata',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mit Ghamr',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mito',), ('Mito',), ('Mito',), ('Mito',), ('Mito',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mixco',), ('Mixco',), ('Mixco',), ('Mixco',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Mogiljov',), ('Mogiljov',), ('Mogiljov',), ('Mogiljov',), ('Mohammedia',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mokpo',), ('Molodetšno',), ('Molodetšno',), ('Molodetšno',), ('Molodetšno',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Montería',), ('Montería',), ('Montería',), ('Montería',), ('Montes Claros',), ('Montes Claros',), ('Montes Claros',), ('Montes Claros',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moratuwa',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Moreno',), ('Moreno',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Moroni',), ('Moroni',), ('Moroni',), ('Moroni',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morón',), ('Morón',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Mossoró',), ('Mossoró',), ('Mossoró',), ('Mossoró',), ('Mostaganem',), ('Mosul',), ('Mosul',), ('Mosul',), ('Mosul',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Mount Darwin',), ('Mount Darwin',), ('Mount Darwin',), ('Mozyr',), ('Mozyr',), ('Mozyr',), ('Mozyr',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mun-gyong',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Murcia',), ('Murcia',), ('Murcia',), ('Murcia',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Muroran',), ('Muroran',), ('Muroran',), ('Muroran',), ('Muroran',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Musashino',), ('Musashino',), ('Musashino',), ('Musashino',), ('Musashino',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mutare',), ('Mutare',), ('Mutare',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Málaga',), ('Málaga',), ('Málaga',), ('Málaga',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Móstoles',), ('Móstoles',), ('Móstoles',), ('Móstoles',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nablus',), ('Nablus',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nador',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Naha',), ('Naha',), ('Naha',), ('Naha',), ('Naha',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Naju',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Nampo',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namwon',), ('Namyangju',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Nara',), ('Nara',), ('Nara',), ('Nara',), ('Nara',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narita',), ('Narita',), ('Narita',), ('Narita',), ('Narita',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nassau',), ('Nassau',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Natal',), ('Natal',), ('Natal',), ('Natal',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nazilli',), ('Nazilli',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Negombo',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neiva',), ('Neiva',), ('Neiva',), ('Neiva',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Netanya',), ('Neuquén',), ('Neuquén',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle upon Tyne',), ('Newcastle upon Tyne',), ('Newport',), ('Newport',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Niamey',), ('Niamey',), ('Niamey',), ('Niamey',), ('Niamey',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niiza',), ('Niiza',), ('Niiza',), ('Niiza',), ('Niiza',), ('Nijmegen',), ('Nijmegen',), ('Nijmegen',), ('Nijmegen',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nilópolis',), ('Nilópolis',), ('Nilópolis',), ('Nilópolis',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishio',), ('Nishio',), ('Nishio',), ('Nishio',), ('Nishio',), ('Niterói',), ('Niterói',), ('Niterói',), ('Niterói',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Noda',), ('Noda',), ('Noda',), ('Noda',), ('Noda',), ('Nogales',), ('Nogales',), ('Nogales',), ('Nogales',), ('Nogales',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nonsan',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Shore',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('Northampton',), ('Northampton',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwich',), ('Norwich',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nottingham',), ('Nottingham',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouméa',), ('Nouméa',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nueva San Salvador',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nukus',), ('Nukus',), ('Nukus',), ('Nukus',), ('Nukus',), ('Numazu',), ('Numazu',), ('Numazu',), ('Numazu',), ('Numazu',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocumare del Tuy',), ('Ocumare del Tuy',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Oita',), ('Oita',), ('Oita',), ('Oita',), ('Oita',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oldbury/Smethwick (Warley)',), ('Oldbury/Smethwick (Warley)',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldham',), ('Oldham',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Olinda',), ('Olinda',), ('Olinda',), ('Olinda',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olsztyn',), ('Olsztyn',), ('Olsztyn',), ('Olsztyn',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Ome',), ('Ome',), ('Ome',), ('Ome',), ('Ome',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omuta',), ('Omuta',), ('Omuta',), ('Omuta',), ('Omuta',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Opole',), ('Opole',), ('Opole',), ('Opole',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Oral',), ('Oral',), ('Oral',), ('Oral',), ('Oral',), ('Oran',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Oranjestad',), ('Oranjestad',), ('Oranjestad',), ('Ordu',), ('Ordu',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Oruro',), ('Orša',), ('Orša',), ('Orša',), ('Orša',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osasco',), ('Osasco',), ('Osasco',), ('Osasco',), ('Osh',), ('Osh',), ('Osh',), ('Osh',), ('Osh',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Osijek',), ('Osijek',), ('Oslo',), ('Oslo',), ('Oslo',), ('Oslo',), ('Oslo',), ('Osmaniye',), ('Osmaniye',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osorno',), ('Osorno',), ('Osorno',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ota',), ('Ota',), ('Ota',), ('Ota',), ('Ota',), ('Otaru',), ('Otaru',), ('Otaru',), ('Otaru',), ('Otaru',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Otsu',), ('Otsu',), ('Otsu',), ('Otsu',), ('Otsu',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Oujda',), ('Oulu',), ('Oulu',), ('Oulu',), ('Oulu',), ('Oulu',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourinhos',), ('Ourinhos',), ('Ourinhos',), ('Ourinhos',), ('Ovalle',), ('Ovalle',), ('Ovalle',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Oviedo',), ('Oviedo',), ('Oviedo',), ('Oviedo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Oxford',), ('Oxford',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Paju',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palhoça',), ('Palhoça',), ('Palhoça',), ('Palhoça',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palmas',), ('Palmas',), ('Palmas',), ('Palmas',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmira',), ('Palmira',), ('Palmira',), ('Palmira',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papeete',), ('Papeete',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Paramaribo',), ('Paramaribo',), ('Paranaguá',), ('Paranaguá',), ('Paranaguá',), ('Paranaguá',), ('Paraná',), ('Paraná',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parnamirim',), ('Parnamirim',), ('Parnamirim',), ('Parnamirim',), ('Parnaíba',), ('Parnaíba',), ('Parnaíba',), ('Parnaíba',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Passo Fundo',), ('Passo Fundo',), ('Passo Fundo',), ('Passo Fundo',), ('Passos',), ('Passos',), ('Passos',), ('Passos',), ('Pasto',), ('Pasto',), ('Pasto',), ('Pasto',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Pate',), ('Pate',), ('Pate',), ('Pate',), ('Pate',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patos',), ('Patos',), ('Patos',), ('Patos',), ('Patos de Minas',), ('Patos de Minas',), ('Patos de Minas',), ('Patos de Minas',), ('Patras',), ('Patras',), ('Paulista',), ('Paulista',), ('Paulista',), ('Paulista',), ('Paulo Afonso',), ('Paulo Afonso',), ('Paulo Afonso',), ('Paulo Afonso',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Pelotas',), ('Pelotas',), ('Pelotas',), ('Pelotas',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Pereira',), ('Pereira',), ('Pereira',), ('Pereira',), ('Peristerion',), ('Peristerion',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Petah Tiqwa',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petare',), ('Petare',), ('Peterborough',), ('Peterborough',), ('Petrolina',), ('Petrolina',), ('Petrolina',), ('Petrolina',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petrópolis',), ('Petrópolis',), ('Petrópolis',), ('Petrópolis',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Phnom Penh',), ('Phnom Penh',), ('Phnom Penh',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phyongsong',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pilar',), ('Pilar',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pinhais',), ('Pinhais',), ('Pinhais',), ('Pinhais',), ('Pinsk',), ('Pinsk',), ('Pinsk',), ('Pinsk',), ('Piracicaba',), ('Piracicaba',), ('Piracicaba',), ('Piracicaba',), ('Pireus',), ('Pireus',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Pleven',), ('Pleven',), ('Pleven',), ('Pleven',), ('Plock',), ('Plock',), ('Plock',), ('Plock',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Plovdiv',), ('Plovdiv',), ('Plovdiv',), ('Plovdiv',), ('Plymouth',), ('Plymouth',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Pohang',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Ponce',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Ponta Grossa',), ('Ponta Grossa',), ('Ponta Grossa',), ('Ponta Grossa',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Poole',), ('Poole',), ('Popayán',), ('Popayán',), ('Popayán',), ('Popayán',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Moresby',), ('Port Moresby',), ('Port Said',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-au-Prince',), ('Port-of-Spain',), ('Port-of-Spain',), ('Port-of-Spain',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portmore',), ('Portmore',), ('Porto',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Velho',), ('Porto Velho',), ('Porto Velho',), ('Porto Velho',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Portoviejo',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Poryong',), ('Posadas',), ('Posadas',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potosí',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Pouso Alegre',), ('Pouso Alegre',), ('Pouso Alegre',), ('Pouso Alegre',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poznan',), ('Poznan',), ('Poznan',), ('Poznan',), ('Pozuelos',), ('Pozuelos',), ('Poá',), ('Poá',), ('Poá',), ('Poá',), ('Poços de Caldas',), ('Poços de Caldas',), ('Poços de Caldas',), ('Poços de Caldas',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praia',), ('Praia Grande',), ('Praia Grande',), ('Praia Grande',), ('Praia Grande',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Presidente Prudente',), ('Presidente Prudente',), ('Presidente Prudente',), ('Presidente Prudente',), ('Preston',), ('Preston',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Puchon',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Puebla',), ('Puebla',), ('Puebla',), ('Puebla',), ('Puebla',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Puente Alto',), ('Puente Alto',), ('Puente Alto',), ('Puerto Cabello',), ('Puerto Cabello',), ('Puerto La Cruz',), ('Puerto La Cruz',), ('Puerto Montt',), ('Puerto Montt',), ('Puerto Montt',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Punta Arenas',), ('Punta Arenas',), ('Punta Arenas',), ('Punto Fijo',), ('Punto Fijo',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Pusan',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Pyongtaek',), ('Pyongyang',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qalyub',), ('Qandahar',), ('Qandahar',), ('Qandahar',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qina',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Queimados',), ('Queimados',), ('Queimados',), ('Queimados',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quevedo',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quilmes',), ('Quilmes',), ('Quilpué',), ('Quilpué',), ('Quilpué',), ('Quito',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Rabat',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Radom',), ('Radom',), ('Radom',), ('Radom',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rafah',), ('Rafah',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramat Gan',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rancagua',), ('Rancagua',), ('Rancagua',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Reading',), ('Reading',), ('Recife',), ('Recife',), ('Recife',), ('Recife',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Rehovot',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Resende',), ('Resende',), ('Resende',), ('Resende',), ('Resistencia',), ('Resistencia',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Reykjavík',), ('Reykjavík',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Rijeka',), ('Rijeka',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rio Branco',), ('Rio Branco',), ('Rio Branco',), ('Rio Branco',), ('Rio Claro',), ('Rio Claro',), ('Rio Claro',), ('Rio Claro',), ('Rio Grande',), ('Rio Grande',), ('Rio Grande',), ('Rio Grande',), ('Rio Verde',), ('Rio Verde',), ('Rio Verde',), ('Rio Verde',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rishon Le Ziyyon',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Rochdale',), ('Rochdale',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Rondonópolis',), ('Rondonópolis',), ('Rondonópolis',), ('Rondonópolis',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Rosario',), ('Rosario',), ('Roseau',), ('Roseau',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rotherham',), ('Rotherham',), ('Rotterdam',), ('Rotterdam',), ('Rotterdam',), ('Rotterdam',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruda Slaska',), ('Ruda Slaska',), ('Ruda Slaska',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Ruse',), ('Ruse',), ('Ruse',), ('Ruse',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybnik',), ('Rybnik',), ('Rybnik',), ('Rybnik',), ('Rzeszów',), ('Rzeszów',), ('Rzeszów',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Cuarto',), ('Río Cuarto',), ('Ríobamba',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Sabadell',), ('Sabadell',), ('Sabadell',), ('Sabadell',), ('Sabará',), ('Sabará',), ('Sabará',), ('Sabará',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sachon',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Safi',), ('Saga',), ('Saga',), ('Saga',), ('Saga',), ('Saga',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint George´s',), ('Saint Helens',), ('Saint Helens',), ('Saint Helier',), ('Saint Helier',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakarya (Adapazari)',), ('Sakarya (Adapazari)',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakura',), ('Sakura',), ('Sakura',), ('Sakura',), ('Sakura',), ('Salala',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salta',), ('Salta',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Salto',), ('Salto',), ('Salto',), ('Salto',), ('Salvador',), ('Salvador',), ('Salvador',), ('Salvador',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salé',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Samsun',), ('Samsun',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardo',), ('San Bernardo',), ('San Bernardo',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Cristóbal',), ('San Cristóbal',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe de Puerto Plata',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando de Apure',), ('San Fernando de Apure',), ('San Fernando del Valle de Cata',), ('San Fernando del Valle de Cata',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco de Macorís',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Isidro',), ('San Isidro',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San José',), ('San José',), ('San José',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San Juan',), ('San Juan',), ('San Juan',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Lorenzo',), ('San Lorenzo',), ('San Luis',), ('San Luis',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Marino',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel de Tucumán',), ('San Miguel de Tucumán',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Nicolás de los Arroyos',), ('San Nicolás de los Arroyos',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Sula',), ('San Pedro Sula',), ('San Pedro Sula',), ('San Pedro de Macorís',), ('San Pedro de la Paz',), ('San Pedro de la Paz',), ('San Pedro de la Paz',), ('San Rafael',), ('San Rafael',), ('San Salvador',), ('San Salvador de Jujuy',), ('San Salvador de Jujuy',), ('Sanaa',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sangju',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sanliurfa',), ('Sanliurfa',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana de Coro',), ('Santa Ana de Coro',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de la Sierra',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Fé',), ('Santa Fé',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Marta',), ('Santa Marta',), ('Santa Marta',), ('Santa Marta',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Rita',), ('Santa Rita',), ('Santa Rita',), ('Santa Rita',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santander',), ('Santander',), ('Santander',), ('Santander',), ('Santarém',), ('Santarém',), ('Santarém',), ('Santarém',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago de Chile',), ('Santiago de Chile',), ('Santiago de Chile',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de los Caballeros',), ('Santiago del Estero',), ('Santiago del Estero',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santo André',), ('Santo André',), ('Santo André',), ('Santo André',), ('Santo Domingo de Guzmán',), ('Santo Domingo de los Colorados',), ('Santos',), ('Santos',), ('Santos',), ('Santos',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Sarajevo',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariwon',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannakhet',), ('Savannakhet',), ('Savannakhet',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawhaj',), ('Sayama',), ('Sayama',), ('Sayama',), ('Sayama',), ('Sayama',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Schaan',), ('Schaan',), ('Schaan',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semey',), ('Semey',), ('Semey',), ('Semey',), ('Semey',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Sendai',), ('Sendai',), ('Sendai',), ('Sendai',), ('Sendai',), ('Seoul',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Seremban',), ('Seremban',), ('Seremban',), ('Seremban',), ('Seremban',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serra',), ('Serra',), ('Serra',), ('Serra',), ('Serravalle',), ('Sertãozinho',), ('Sertãozinho',), ('Sertãozinho',), ('Sertãozinho',), ('Sete Lagoas',), ('Sete Lagoas',), ('Sete Lagoas',), ('Sete Lagoas',), ('Seto',), ('Seto',), ('Seto',), ('Seto',), ('Seto',), ('Settat',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Sevilla',), ('Sevilla',), ('Sevilla',), ('Sevilla',), ('Sfax',), ('Sfax',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Sharja',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Sheffield',), ('Sheffield',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shibin al-Kawm',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihung',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shubra al-Khayma',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sidi Bel Abbès',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siem Reap',), ('Siem Reap',), ('Siem Reap',), ('Siirt',), ('Siirt',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silao',), ('Silao',), ('Silao',), ('Silao',), ('Silao',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Sincelejo',), ('Sincelejo',), ('Sincelejo',), ('Sincelejo',), ('Sinuiju',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sivas',), ('Sivas',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Skikda',), ('Skopje',), ('Skopje',), ('Skopje',), ('Skopje',), ('Skopje',), ('Sliven',), ('Sliven',), ('Sliven',), ('Sliven',), ('Slough',), ('Slough',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slupsk',), ('Slupsk',), ('Slupsk',), ('Slupsk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Soacha',), ('Soacha',), ('Soacha',), ('Soacha',), ('Sobral',), ('Sobral',), ('Sobral',), ('Sobral',), ('Sofija',), ('Sofija',), ('Sofija',), ('Sofija',), ('Sogamoso',), ('Sogamoso',), ('Sogamoso',), ('Sogamoso',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Soka',), ('Soka',), ('Soka',), ('Soka',), ('Soka',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Soledad',), ('Soledad',), ('Soledad',), ('Soledad',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soligorsk',), ('Soligorsk',), ('Soligorsk',), ('Soligorsk',), ('Solihull',), ('Solihull',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songnam',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sorocaba',), ('Sorocaba',), ('Sorocaba',), ('Sorocaba',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sosan',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Sosnowiec',), ('Sosnowiec',), ('Sosnowiec',), ('Sosnowiec',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sousse',), ('Sousse',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('Southampton',), ('Southampton',), ('Southend-on-Sea',), ('Southend-on-Sea',), ('Southport',), ('Southport',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soyapango',), ('Spanish Town',), ('Spanish Town',), ('Split',), ('Split',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Sri Jayawardenepura Kotte',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stara Zagora',), ('Stara Zagora',), ('Stara Zagora',), ('Stara Zagora',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockport',), ('Stockport',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stoke-on-Trent',), ('Stoke-on-Trent',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Sucre',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Suez',), ('Suhar',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suita',), ('Suita',), ('Suita',), ('Suita',), ('Suita',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultanbeyli',), ('Sultanbeyli',), ('Sumaré',), ('Sumaré',), ('Sumaré',), ('Sumaré',), ('Sumqayit',), ('Sumqayit',), ('Sumqayit',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sunchon',), ('Sunderland',), ('Sunderland',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Sutton Coldfield',), ('Sutton Coldfield',), ('Suva',), ('Suwon',), ('Suzano',), ('Suzano',), ('Suzano',), ('Suzano',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Swansea',), ('Swansea',), ('Swindon',), ('Swindon',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Szczecin',), ('Szczecin',), ('Szczecin',), ('Szczecin',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Carlos',), ('São Carlos',), ('São Carlos',), ('São Carlos',), ('São Gonçalo',), ('São Gonçalo',), ('São Gonçalo',), ('São Gonçalo',), ('São José',), ('São José',), ('São José',), ('São José',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São João de Meriti',), ('São João de Meriti',), ('São João de Meriti',), ('São João de Meriti',), ('São Leopoldo',), ('São Leopoldo',), ('São Leopoldo',), ('São Leopoldo',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Luís',), ('São Luís',), ('São Luís',), ('São Luís',), ('São Paulo',), ('São Paulo',), ('São Paulo',), ('São Paulo',), ('São Tomé',), ('São Tomé',), ('São Vicente',), ('São Vicente',), ('São Vicente',), ('São Vicente',), ('Sétif',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Taboão da Serra',), ('Taboão da Serra',), ('Taboão da Serra',), ('Taboão da Serra',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Taegu',), ('Taejon',), ('Tafuna',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Taichung',), ('Taichung',), ('Taichung',), ('Taichung',), ('Taichung',), ('Tainan',), ('Tainan',), ('Tainan',), ('Tainan',), ('Tainan',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizz',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talca',), ('Talca',), ('Talca',), ('Talcahuano',), ('Talcahuano',), ('Talcahuano',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Tali',), ('Tali',), ('Tali',), ('Tali',), ('Tali',), ('Taliao',), ('Taliao',), ('Taliao',), ('Taliao',), ('Taliao',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talkha',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tama',), ('Tama',), ('Tama',), ('Tama',), ('Tama',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tamuning',), ('Tamuning',), ('Tamuning',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tandil',), ('Tandil',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tanger',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanta',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taraz',), ('Taraz',), ('Taraz',), ('Taraz',), ('Taraz',), ('Tarija',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarnów',), ('Tarnów',), ('Tarnów',), ('Tarnów',), ('Tarragona',), ('Tarragona',), ('Tarragona',), ('Tarragona',), ('Tarsus',), ('Tarsus',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tatuí',), ('Tatuí',), ('Tatuí',), ('Tatuí',), ('Taubaté',), ('Taubaté',), ('Taubaté',), ('Taubaté',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taza',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegucigalpa',), ('Tegucigalpa',), ('Tegucigalpa',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tekirdag',), ('Tekirdag',), ('Tel Aviv-Jaffa',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temixco',), ('Temixco',), ('Temixco',), ('Temixco',), ('Temixco',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Temuco',), ('Temuco',), ('Temuco',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepic',), ('Tepic',), ('Tepic',), ('Tepic',), ('Tepic',), ('Teresina',), ('Teresina',), ('Teresina',), ('Teresina',), ('Teresópolis',), ('Teresópolis',), ('Teresópolis',), ('Teresópolis',), ('Termiz',), ('Termiz',), ('Termiz',), ('Termiz',), ('Termiz',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Terrassa',), ('Terrassa',), ('Terrassa',), ('Terrassa',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thessaloniki',), ('Thessaloniki',), ('Thimphu',), ('Thimphu',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tiaret',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tigre',), ('Tigre',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tilburg',), ('Tilburg',), ('Tilburg',), ('Tilburg',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timon',), ('Timon',), ('Timon',), ('Timon',), ('Tirana',), ('Tirana',), ('Tirana',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlemcen (Tilimsen)',), ('Toa Baja',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Toda',), ('Toda',), ('Toda',), ('Toda',), ('Toda',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokat',), ('Tokat',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toluca',), ('Toluca',), ('Toluca',), ('Toluca',), ('Toluca',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong-yong',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tonghae',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torun',), ('Torun',), ('Torun',), ('Torun',), ('Toskent',), ('Toskent',), ('Toskent',), ('Toskent',), ('Toskent',), ('Tottori',), ('Tottori',), ('Tottori',), ('Tottori',), ('Tottori',), ('Touliu',), ('Touliu',), ('Touliu',), ('Touliu',), ('Touliu',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyota',), ('Toyota',), ('Toyota',), ('Toyota',), ('Toyota',), ('Trabzon',), ('Trabzon',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Tres de Febrero',), ('Tres de Febrero',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Tripoli',), ('Tripoli',), ('Tripoli',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tuluá',), ('Tuluá',), ('Tuluá',), ('Tuluá',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tunis',), ('Tunis',), ('Tunja',), ('Tunja',), ('Tunja',), ('Tunja',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turmero',), ('Turmero',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tychy',), ('Tychy',), ('Tychy',), ('Tychy',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Tébessa',), ('Témara',), ('Tétouan',), ('Tórshavn',), ('Tórshavn',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Ube',), ('Ube',), ('Ube',), ('Ube',), ('Ube',), ('Uberaba',), ('Uberaba',), ('Uberaba',), ('Uberaba',), ('Uberlândia',), ('Uberlândia',), ('Uberlândia',), ('Uberlândia',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uijongbu',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uiwang',), ('Uji',), ('Uji',), ('Uji',), ('Uji',), ('Uji',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulsan',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruguaiana',), ('Uruguaiana',), ('Uruguaiana',), ('Uruguaiana',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Usak',), ('Usak',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Utrecht',), ('Utrecht',), ('Utrecht',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vaduz',), ('Vaduz',), ('Vaduz',), ('Valdivia',), ('Valdivia',), ('Valdivia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valera',), ('Valera',), ('Valladolid',), ('Valladolid',), ('Valladolid',), ('Valladolid',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de la Pascua',), ('Valle de la Pascua',), ('Valledupar',), ('Valledupar',), ('Valledupar',), ('Valledupar',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Valletta',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparaíso',), ('Valparaíso',), ('Valparaíso',), ('Van',), ('Van',), ('Vanadzor',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varginha',), ('Varginha',), ('Varginha',), ('Varginha',), ('Varna',), ('Varna',), ('Varna',), ('Varna',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Viamão',), ('Viamão',), ('Viamão',), ('Viamão',), ('Vicente López',), ('Vicente López',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vientiane',), ('Vientiane',), ('Vientiane',), ('Vigo',), ('Vigo',), ('Vigo',), ('Vigo',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vila Velha',), ('Vila Velha',), ('Vila Velha',), ('Vila Velha',), ('Villa Nueva',), ('Villa Nueva',), ('Villa Nueva',), ('Villa Nueva',), ('Villavicencio',), ('Villavicencio',), ('Villavicencio',), ('Villavicencio',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Viransehir',), ('Viransehir',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vitebsk',), ('Vitebsk',), ('Vitebsk',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitória',), ('Vitória',), ('Vitória',), ('Vitória',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Viña del Mar',), ('Viña del Mar',), ('Viña del Mar',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Volta Redonda',), ('Volta Redonda',), ('Volta Redonda',), ('Volta Redonda',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votorantim',), ('Votorantim',), ('Votorantim',), ('Votorantim',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Várzea Grande',), ('Várzea Grande',), ('Várzea Grande',), ('Várzea Grande',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wadi al-Sir',), ('Wadi al-Sir',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Waitakere',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Walbrzych',), ('Walbrzych',), ('Walbrzych',), ('Walbrzych',), ('Walsall',), ('Walsall',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Warraq al-Arab',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warszawa',), ('Warszawa',), ('Warszawa',), ('Warszawa',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Watford',), ('Watford',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Wellington',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('West Bromwich',), ('West Bromwich',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Island',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Willemstad',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Wloclawek',), ('Wloclawek',), ('Wloclawek',), ('Wloclawek',), ('Woking/Byfleet',), ('Woking/Byfleet',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wolverhampton',), ('Wolverhampton',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonju',), ('Wonsan',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worthing',), ('Worthing',), ('Wroclaw',), ('Wroclaw',), ('Wroclaw',), ('Wroclaw',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangor',), ('Yangor',), ('Yangor',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangsan',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yao',), ('Yao',), ('Yao',), ('Yao',), ('Yao',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaren',), ('Yaren',), ('Yaren',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yerevan',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yong-in',), ('Yongchon',), ('Yongju',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('Yosu',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Zaanstad',), ('Zaanstad',), ('Zaanstad',), ('Zaanstad',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabrze',), ('Zabrze',), ('Zabrze',), ('Zabrze',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zagazig',), ('Zagreb',), ('Zagreb',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zama',), ('Zama',), ('Zama',), ('Zama',), ('Zama',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaragoza',), ('Zaragoza',), ('Zaragoza',), ('Zaragoza',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zenica',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zielona Góra',), ('Zielona Góra',), ('Zielona Góra',), ('Zielona Góra',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zoetermeer',), ('Zoetermeer',), ('Zoetermeer',), ('Zoetermeer',), ('Zonguldak',), ('Zonguldak',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwolle',), ('Zwolle',), ('Zwolle',), ('Zwolle',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zürich',), ('Zürich',), ('Zürich',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('al-Amara',), ('al-Amara',), ('al-Amara',), ('al-Amara',), ('al-Arish',), ('al-Ayn',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Faiyum',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Hawamidiya',), ('al-Hilla',), ('al-Hilla',), ('al-Hilla',), ('al-Hilla',), ('al-Kut',), ('al-Kut',), ('al-Kut',), ('al-Kut',), ('al-Mahallat al-Kubra',), ('al-Manama',), ('al-Mansura',), ('al-Minya',), ('al-Mukalla',), ('al-Najaf',), ('al-Najaf',), ('al-Najaf',), ('al-Najaf',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qamishliya',), ('al-Ramadi',), ('al-Ramadi',), ('al-Ramadi',), ('al-Ramadi',), ('al-Raqqa',), ('al-Rusayfa',), ('al-Rusayfa',), ('al-Salimiya',), ('al-Sib',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Zarqa',), ('al-Zarqa',), ('al-Zawiya',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Çorlu',), ('Çorlu',), ('Çorum',), ('Çorum',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Šumen',), ('Šumen',), ('Šumen',), ('Šumen',)]",False
785,What are the names of cities in Europe for which English is not the official language?,extra,spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code LEFT JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = ""Europe"" AND T3.Language != ""English"" OR T3.IsOfficial != ""T""","Not match: [('A Coruña (La Coruña)',), ('Aachen',), ('Aalborg',), ('Abakan',), ('Aix-en-Provence',), ('Albacete',), ('Alcalá de Henares',), ('Alcorcón',), ('Alessandria',), ('Algeciras',), ('Alicante [Alacant]',), ('Alkmaar',), ('Almere',), ('Almería',), ('Almetjevsk',), ('Altševsk',), ('Amadora',), ('Amersfoort',), ('Amiens',), ('Amsterdam',), ('Ancona',), ('Andorra la Vella',), ('Andria',), ('Angarsk',), ('Angers',), ('Antwerpen',), ('Anzero-Sudzensk',), ('Apeldoorn',), ('Arad',), ('Arezzo',), ('Argenteuil',), ('Arkangeli',), ('Armavir',), ('Arnhem',), ('Arzamas',), ('Astrahan',), ('Athenai',), ('Atšinsk',), ('Augsburg',), ('Bacau',), ('Badajoz',), ('Badalona',), ('Baia Mare',), ('Balakovo',), ('Balašiha',), ('Balašov',), ('Balti',), ('Banja Luka',), ('Barakaldo',), ('Baranovitši',), ('Barcelona',), ('Bari',), ('Barletta',), ('Barnaul',), ('Basel',), ('Bataisk',), ('Belgorod',), ('Bender (Tîghina)',), ('Beograd',), ('Berdjansk',), ('Berdytšiv',), ('Berezniki',), ('Bergamo',), ('Bergen',), ('Bergisch Gladbach',), ('Berlin',), ('Bern',), ('Besançon',), ('Bialystok',), ('Bielefeld',), ('Bielsko-Biala',), ('Bijsk',), ('Bila Tserkva',), ('Bilbao',), ('Blagoveštšensk',), ('Bobruisk',), ('Bochum',), ('Bologna',), ('Bolzano',), ('Bonn',), ('Bordeaux',), ('Borisov',), ('Borås',), ('Botosani',), ('Bottrop',), ('Boulogne-Billancourt',), ('Braga',), ('Braila',), ('Brasov',), ('Bratislava',), ('Bratsk',), ('Braunschweig',), ('Breda',), ('Bremen',), ('Bremerhaven',), ('Brescia',), ('Brest',), ('Brindisi',), ('Brjansk',), ('Brno',), ('Brovary',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bucuresti',), ('Budapest',), ('Bugulma',), ('Burgas',), ('Burgos',), ('Buzau',), ('Bydgoszcz',), ('Bytom',), ('Bærum',), ('Caen',), ('Cagliari',), ('Cartagena',), ('Castellón de la Plana [Castell',), ('Catania',), ('Catanzaro',), ('Cesena',), ('Ceské Budejovice',), ('Charleroi',), ('Chemnitz',), ('Chisinau',), ('Chorzów',), ('Città del Vaticano',), ('Clermont-Ferrand',), ('Cluj-Napoca',), ('Constanta',), ('Cottbus',), ('Coímbra',), ('Craiova',), ('Czestochowa',), ('Cádiz',), ('Córdoba',), ('Dabrowa Górnicza',), ('Darmstadt',), ('Daugavpils',), ('Debrecen',), ('Delft',), ('Derbent',), ('Dijon',), ('Dimitrovgrad',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dobric',), ('Donetsk',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dortmund',), ('Dos Hermanas',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Duisburg',), ('Dzerzinsk',), ('Düren',), ('Düsseldorf',), ('Ede',), ('Eindhoven',), ('Elblag',), ('Elche [Elx]',), ('Elektrostal',), ('Elista',), ('Emmen',), ('Engels',), ('Enschede',), ('Erfurt',), ('Erlangen',), ('Espoo',), ('Essen',), ('Esslingen am Neckar',), ('Ferrara',), ('Firenze',), ('Focsani',), ('Foggia',), ('Forlì',), ('Frankfurt am Main',), ('Frederiksberg',), ('Freiburg im Breisgau',), ('Fuenlabrada',), ('Fürth',), ('Galati',), ('Gdansk',), ('Gdynia',), ('Gelsenkirchen',), ('Geneve',), ('Genova',), ('Gent',), ('Gera',), ('Getafe',), ('Gijón',), ('Giugliano in Campania',), ('Glazov',), ('Gliwice',), ('Gomel',), ('Gorlivka',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Granada',), ('Graz',), ('Grenoble',), ('Grodno',), ('Groningen',), ('Grozny',), ('Grudziadz',), ('Györ',), ('Gävle',), ('Göttingen',), ('Gütersloh',), ('Haag',), ('Haarlem',), ('Haarlemmermeer',), ('Habarovsk',), ('Hagen',), ('Halle/Saale',), ('Hamburg',), ('Hamm',), ('Hannover',), ('Harkova [Harkiv]',), ('Heerlen',), ('Heidelberg',), ('Heilbronn',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Herakleion',), ('Herne',), ('Herson',), ('Hildesheim',), ('Himki',), ('Hmelnytskyi',), ('Hradec Králové',), ('Huelva',), ('Iasi',), ('Ingolstadt',), ('Innsbruck',), ('Irkutsk',), ('Iserlohn',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Izevsk',), ('Izmajil',), ('Jakutsk',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jaén',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelets',), ('Jena',), ('Jenakijeve',), ('Jerez de la Frontera',), ('Jessentuki',), ('Jevpatorija',), ('Joškar-Ola',), ('Juzno-Sahalinsk',), ('Jönköping',), ('Kaiserslautern',), ('Kaliningrad',), ('Kalisz',), ('Kallithea',), ('Kaluga',), ('Kamensk-Uralski',), ('Kamjanets-Podilskyi',), ('Kamyšin',), ('Kansk',), ('Karlsruhe',), ('Kassel',), ('Katowice',), ('Kaunas',), ('Kazan',), ('Kecskemét',), ('Kemerovo',), ('Kertš',), ('Kiel',), ('Kielce',), ('Kinešma',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kiseljovsk',), ('Kislovodsk',), ('Klagenfurt',), ('Klaipeda',), ('Klin',), ('Koblenz',), ('Kolomna',), ('Kolpino',), ('Komsomolsk-na-Amure',), ('Konotop',), ('Korolev',), ('Kostjantynivka',), ('Kostroma',), ('Koszalin',), ('Kovrov',), ('Košice',), ('Kragujevac',), ('Kraków',), ('Kramatorsk',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krefeld',), ('Krementšuk',), ('Kryvyi Rig',), ('Kurgan',), ('Kursk',), ('Kuznetsk',), ('Kyiv',), ('Kyzyl',), ('Köln',), ('København',), ('La Spezia',), ('Lahti',), ('Larisa',), ('Las Palmas de Gran Canaria',), ('Latina',), ('Lausanne',), ('Le Havre',), ('Le Mans',), ('Lecce',), ('Leganés',), ('Legnica',), ('Leiden',), ('Leipzig',), ('Leninsk-Kuznetski',), ('Leverkusen',), ('León',), ('Liberec',), ('Lida',), ('Liepaja',), ('Lille',), ('Limoges',), ('Linköping',), ('Linz',), ('Lipetsk',), ('Lisboa',), ('Livorno',), ('Liège',), ('Ljubertsy',), ('Ljubljana',), ('Lleida (Lérida)',), ('Logroño',), ('Longyearbyen',), ('Lublin',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lund',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Lviv',), ('Lyon',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('Lódz',), ('Lübeck',), ('Lünen',), ('Maastricht',), ('Madrid',), ('Magadan',), ('Magdeburg',), ('Magnitogorsk',), ('Mahatškala',), ('Maikop',), ('Mainz',), ('Makijivka',), ('Malmö',), ('Mannheim',), ('Marbella',), ('Maribor',), ('Mariupol',), ('Marl',), ('Marseille',), ('Mataró',), ('Melitopol',), ('Messina',), ('Metz',), ('Mezduretšensk',), ('Miass',), ('Milano',), ('Minsk',), ('Miskolc',), ('Mitšurinsk',), ('Modena',), ('Moers',), ('Mogiljov',), ('Molodetšno',), ('Monaco-Ville',), ('Mons',), ('Monte-Carlo',), ('Montpellier',), ('Montreuil',), ('Monza',), ('Moscow',), ('Mozyr',), ('Mukatševe',), ('Mulhouse',), ('Munich [München]',), ('Murcia',), ('Murmansk',), ('Murom',), ('Mykolajiv',), ('Mytištši',), ('Málaga',), ('Móstoles',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Münster',), ('Nabereznyje Tšelny',), ('Nahodka',), ('Naltšik',), ('Namur',), ('Nancy',), ('Nantes',), ('Napoli',), ('Neftejugansk',), ('Neftekamsk',), ('Neuss',), ('Nevinnomyssk',), ('Nice',), ('Nijmegen',), ('Nikopol',), ('Niznekamsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Niš',), ('Noginsk',), ('Nojabrsk',), ('Norilsk',), ('Norrköping',), ('Novara',), ('Novi Sad',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novouralsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Nyiregyháza',), ('Nîmes',), ('Nürnberg',), ('Oberhausen',), ('Obninsk',), ('Odense',), ('Odesa',), ('Odintsovo',), ('Offenbach am Main',), ('Oktjabrski',), ('Oldenburg',), ('Oleksandrija',), ('Olomouc',), ('Olsztyn',), ('Omsk',), ('Opole',), ('Oradea',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orjol',), ('Orléans',), ('Orsk',), ('Orša',), ('Osijek',), ('Oslo',), ('Osnabrück',), ('Ostrava',), ('Oulu',), ('Ourense (Orense)',), ('Oviedo',), ('Paderborn',), ('Padova',), ('Palermo',), ('Palma de Mallorca',), ('Pamplona [Iruña]',), ('Panevezys',), ('Pardubice',), ('Paris',), ('Parma',), ('Patras',), ('Pavlograd',), ('Penza',), ('Peristerion',), ('Perm',), ('Perpignan',), ('Perugia',), ('Pervouralsk',), ('Pesaro',), ('Pescara',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Pforzheim',), ('Piacenza',), ('Piatra Neamt',), ('Pihkova',), ('Pinsk',), ('Pireus',), ('Pisa',), ('Pitesti',), ('Pjatigorsk',), ('Pleven',), ('Plock',), ('Ploiesti',), ('Plovdiv',), ('Plzen',), ('Podgorica',), ('Podolsk',), ('Porto',), ('Potsdam',), ('Poznan',), ('Praha',), ('Prato',), ('Prešov',), ('Prizren',), ('Priština',), ('Prokopjevsk',), ('Pultava [Poltava]',), ('Puškin',), ('Pécs',), ('Radom',), ('Ratingen',), ('Ravenna',), ('Recklinghausen',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reims',), ('Remscheid',), ('Rennes',), ('Resita',), ('Reutlingen',), ('Reykjavík',), ('Riga',), ('Rijeka',), ('Rimini',), ('Rivne',), ('Rjazan',), ('Roma',), ('Rostock',), ('Rostov-na-Donu',), ('Rotterdam',), ('Roubaix',), ('Rouen',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruse',), ('Rybinsk',), ('Rybnik',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Saarbrücken',), ('Sabadell',), ('Salamanca',), ('Salavat',), ('Salerno',), ('Salzburg',), ('Salzgitter',), ('Samara',), ('San Marino',), ('Santa Coloma de Gramenet',), ('Santa Cruz de Tenerife',), ('Santander',), ('Santiago de Compostela',), ('Sarajevo',), ('Saransk',), ('Sarapul',), ('Saratov',), ('Sassari',), ('Satu Mare',), ('Schaan',), ('Schaerbeek',), ('Schwerin',), ('Sergijev Posad',), ('Serov',), ('Serpuhov',), ('Serravalle',), ('Sevastopol',), ('Severodvinsk',), ('Seversk',), ('Sevilla',), ('Sibiu',), ('Siegen',), ('Simferopol',), ('Sjeverodonetsk',), ('Skopje',), ('Sliven',), ('Slovjansk',), ('Slupsk',), ('Smolensk',), ('Sofija',), ('Soligorsk',), ('Solikamsk',), ('Solingen',), ('Sosnowiec',), ('Sotši',), ('Split',), ('St Petersburg',), ('St-Étienne',), ('Stahanov',), ('Stara Zagora',), ('Staryi Oskol',), ('Stavanger',), ('Stavropol',), ('Sterlitamak',), ('Stockholm',), ('Strasbourg',), ('Stuttgart',), ('Subotica',), ('Suceava',), ('Sumy',), ('Sundsvall',), ('Surgut',), ('Syktyvkar',), ('Syrakusa',), ('Syzran',), ('Szczecin',), ('Szeged',), ('Székesfehérvár',), ('Taganrog',), ('Tallinn',), ('Tambov',), ('Tampere',), ('Taranto',), ('Tarnów',), ('Tarragona',), ('Tartu',), ('Terni',), ('Ternopil',), ('Terrassa',), ('Thessaloniki',), ('Tilburg',), ('Timisoara',), ('Tirana',), ('Tiraspol',), ('Tjumen',), ('Tobolsk',), ('Toljatti',), ('Tomsk',), ('Torino',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torun',), ('Toulon',), ('Toulouse',), ('Tourcoing',), ('Tours',), ('Trento',), ('Trier',), ('Trieste',), ('Trondheim',), ('Tula',), ('Tulcea',), ('Turku [Åbo]',), ('Tver',), ('Tychy',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Mures',), ('Tórshavn',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšita',), ('Udine',), ('Ufa',), ('Uhta',), ('Ulan-Ude',), ('Uljanovsk',), ('Ulm',), ('Uman',), ('Umeå',), ('Uppsala',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Uzgorod',), ('Vaduz',), ('Valencia',), ('Valladolid',), ('Vantaa',), ('Varna',), ('Velbert',), ('Veliki Novgorod',), ('Velikije Luki',), ('Venezia',), ('Verona',), ('Vicenza',), ('Vigo',), ('Villeurbanne',), ('Vilnius',), ('Vinnytsja',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vladikavkaz',), ('Vladimir',), ('Vladivostok',), ('Volgodonsk',), ('Volgograd',), ('Vologda',), ('Volzski',), ('Vorkuta',), ('Voronez',), ('Votkinsk',), ('Västerås',), ('Walbrzych',), ('Warszawa',), ('Wien',), ('Wiesbaden',), ('Witten',), ('Wloclawek',), ('Wolfsburg',), ('Wroclaw',), ('Wuppertal',), ('Würzburg',), ('Zaanstad',), ('Zabrze',), ('Zagreb',), ('Zaporizzja',), ('Zaragoza',), ('Zelenodolsk',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zenica',), ('Zielona Góra',), ('Zlatoust',), ('Zoetermeer',), ('Zukovski',), ('Zwickau',), ('Zwolle',), ('Zytomyr',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('´s-Hertogenbosch',), ('Århus',), ('Örebro',), ('Ústí nad Labem',), ('Šahty',), ('Šiauliai',), ('Šostka',), ('Štšolkovo',), ('Šumen',)] != [('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('A Coruña (La Coruña)',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aachen',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aalborg',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Aba',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abadan',), ('Abaetetuba',), ('Abaetetuba',), ('Abaetetuba',), ('Abaetetuba',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abakan',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abbotsford',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Abeokuta',), ('Aberdeen',), ('Aberdeen',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abidjan',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abiko',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abilene',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abohar',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abottabad',), ('Abu Dhabi',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Abuja',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acapulco de Juárez',), ('Acarigua',), ('Acarigua',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Accra',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Achalpur',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acheng',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acuña',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Acámbaro',), ('Adamstown',), ('Adana',), ('Adana',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Addis Abeba',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Adelaide',), ('Aden',), ('Adiyaman',), ('Adiyaman',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Ado-Ekiti',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Adoni',), ('Afyon',), ('Afyon',), ('Agadir',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agartala',), ('Agaña',), ('Agaña',), ('Agaña',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Agege',), ('Ageo',), ('Ageo',), ('Ageo',), ('Ageo',), ('Ageo',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Agra',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Aguascalientes',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadnagar',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmadpur East',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahmedabad',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahome',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Ahvaz',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aix-en-Provence',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizawl',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Aizuwakamatsu',), ('Ajman',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Ajmer',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akashi',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akishima',), ('Akita',), ('Akita',), ('Akita',), ('Akita',), ('Akita',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akola',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Akron',), ('Aksaray',), ('Aksaray',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Akure',), ('Alagoinhas',), ('Alagoinhas',), ('Alagoinhas',), ('Alagoinhas',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alandur',), ('Alanya',), ('Alanya',), ('Albacete',), ('Albacete',), ('Albacete',), ('Albacete',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Albany',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Alberton',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Albuquerque',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcalá de Henares',), ('Alcorcón',), ('Alcorcón',), ('Alcorcón',), ('Alcorcón',), ('Aleppo',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alessandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Alexandria',), ('Algeciras',), ('Algeciras',), ('Algeciras',), ('Algeciras',), ('Alger',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Alicante [Alacant]',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Aligarh',), ('Alkmaar',), ('Alkmaar',), ('Alkmaar',), ('Alkmaar',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allahabad',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allappuzha (Alleppey)',), ('Allende',), ('Allende',), ('Allende',), ('Allende',), ('Allende',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Allentown',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almaty',), ('Almere',), ('Almere',), ('Almere',), ('Almere',), ('Almería',), ('Almería',), ('Almería',), ('Almería',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almetjevsk',), ('Almirante Brown',), ('Almirante Brown',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Almoloya de Juárez',), ('Alofi',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Alor Setar',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altamira',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Altševsk',), ('Alvorada',), ('Alvorada',), ('Alvorada',), ('Alvorada',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Alwar',), ('Amadora',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amagasaki',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Amarillo',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambala Sadar',), ('Ambato',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambattur',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Ambon',), ('Americana',), ('Americana',), ('Americana',), ('Americana',), ('Amersfoort',), ('Amersfoort',), ('Amersfoort',), ('Amersfoort',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amiens',), ('Amman',), ('Amman',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amol',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amoy [Xiamen]',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amravati',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amritsar',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amroha',), ('Amsterdam',), ('Amsterdam',), ('Amsterdam',), ('Amsterdam',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anaheim',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Anand',), ('Ananindeua',), ('Ananindeua',), ('Ananindeua',), ('Ananindeua',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anantapur',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Anchorage',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Ancona',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Anda',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andijon',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andimeshk',), ('Andong',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andorra la Vella',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Andria',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angarsk',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angeles',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angers',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angra dos Reis',), ('Angren',), ('Angren',), ('Angren',), ('Angren',), ('Angren',), ('Anjo',), ('Anjo',), ('Anjo',), ('Anjo',), ('Anjo',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankang',), ('Ankara',), ('Ankara',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Ann Arbor',), ('Annaba',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Anqing',), ('Ansan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshan',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Anshun',), ('Antalya',), ('Antalya',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antipolo',), ('Antofagasta',), ('Antofagasta',), ('Antofagasta',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Antwerpen',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anyang',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anzero-Sudzensk',), ('Anápolis',), ('Anápolis',), ('Anápolis',), ('Anápolis',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aomori',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Aparecida de Goiânia',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apatzingán',), ('Apeldoorn',), ('Apeldoorn',), ('Apeldoorn',), ('Apeldoorn',), ('Apia',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apodaca',), ('Apopa',), ('Apucarana',), ('Apucarana',), ('Apucarana',), ('Apucarana',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqsu',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtau',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aqtöbe',), ('Aracaju',), ('Aracaju',), ('Aracaju',), ('Aracaju',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Arad',), ('Araguari',), ('Araguari',), ('Araguari',), ('Araguari',), ('Araguaína',), ('Araguaína',), ('Araguaína',), ('Araguaína',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arak',), ('Arapiraca',), ('Arapiraca',), ('Arapiraca',), ('Arapiraca',), ('Araraquara',), ('Araraquara',), ('Araraquara',), ('Araraquara',), ('Araras',), ('Araras',), ('Araras',), ('Araras',), ('Araure',), ('Araure',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Arayat',), ('Araçatuba',), ('Araçatuba',), ('Araçatuba',), ('Araçatuba',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Ardebil',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arden-Arcade',), ('Arecibo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Arezzo',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Argenteuil',), ('Ariana',), ('Ariana',), ('Arica',), ('Arica',), ('Arica',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arkangeli',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Arlington',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armavir',), ('Armenia',), ('Armenia',), ('Armenia',), ('Armenia',), ('Arnhem',), ('Arnhem',), ('Arnhem',), ('Arnhem',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arrah (Ara)',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arusha',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arvada',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Arzamas',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asahikawa',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asaka',), ('Asan',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Asansol',), ('Ashdod',), ('Ashgabat',), ('Ashgabat',), ('Ashgabat',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashikaga',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashoknagar-Kalyangarh',), ('Ashqelon',), ('Asmara',), ('Asmara',), ('Asmara',), ('Asmara',), ('Asmara',), ('Assuan',), ('Astana',), ('Astana',), ('Astana',), ('Astana',), ('Astana',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Astrahan',), ('Asunción',), ('Asunción',), ('Asyut',), ('Athenai',), ('Athenai',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Athens-Clarke County',), ('Atibaia',), ('Atibaia',), ('Atibaia',), ('Atibaia',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atizapán de Zaragoza',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlanta',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atlixco',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atsugi',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atyrau',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Atšinsk',), ('Auckland',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augsburg',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Augusta-Richmond County',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Aurora',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Austin',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avadi',), ('Avarua',), ('Avellaneda',), ('Avellaneda',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Awka',), ('Aydin',), ('Aydin',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Babol',), ('Bacabal',), ('Bacabal',), ('Bacabal',), ('Bacabal',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacau',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacolod',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Bacoor',), ('Badajoz',), ('Badajoz',), ('Badajoz',), ('Badajoz',), ('Badalona',), ('Badalona',), ('Badalona',), ('Badalona',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Bafoussam',), ('Baghdad',), ('Baghdad',), ('Baghdad',), ('Baghdad',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Bago',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Baguio',), ('Bagé',), ('Bagé',), ('Bagé',), ('Bagé',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalnagar',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahawalpur',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahir Dar',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahraich',), ('Bahtim',), ('Bahía Blanca',), ('Bahía Blanca',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baia Mare',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baicheng',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Baidyabati',), ('Bairiki',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Baiyin',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Bakersfield',), ('Baku',), ('Baku',), ('Baku',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balakovo',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašiha',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balašov',), ('Balikesir',), ('Balikesir',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Balikpapan',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Baliuag',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Bally',), ('Balti',), ('Balti',), ('Balti',), ('Balti',), ('Balti',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Baltimore',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Balurghat',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamako',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Bamenda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Banda Aceh',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Lampung',), ('Bandar Seri Begawan',), ('Bandar Seri Begawan',), ('Bandar Seri Begawan',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e Anzali',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandar-e-Abbas',), ('Bandirma',), ('Bandirma',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bandung',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangalore',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangkok',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Bangui',), ('Banha',), ('Bani Suwayf',), ('Banja Luka',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjarmasin',), ('Banjul',), ('Banjul',), ('Banjul',), ('Banjul',), ('Banjul',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bankura',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bansberia',), ('Bantam',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Banyuwangi',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoding',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baoji',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baotou',), ('Baquba',), ('Baquba',), ('Baquba',), ('Baquba',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barahanagar (Baranagar)',), ('Barakaldo',), ('Barakaldo',), ('Barakaldo',), ('Barakaldo',), ('Baranovitši',), ('Baranovitši',), ('Baranovitši',), ('Baranovitši',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barasat',), ('Barbacena',), ('Barbacena',), ('Barbacena',), ('Barbacena',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barcelona',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Barddhaman (Burdwan)',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bareilly',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Bari',), ('Barinas',), ('Barinas',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barisal',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barletta',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barnaul',), ('Barquisimeto',), ('Barquisimeto',), ('Barra Mansa',), ('Barra Mansa',), ('Barra Mansa',), ('Barra Mansa',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barra do Piraí',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrackpur',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barrancabermeja',), ('Barranquilla',), ('Barranquilla',), ('Barranquilla',), ('Barranquilla',), ('Barreiras',), ('Barreiras',), ('Barreiras',), ('Barreiras',), ('Barretos',), ('Barretos',), ('Barretos',), ('Barretos',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barrie',), ('Barueri',), ('Barueri',), ('Barueri',), ('Barueri',), ('Baruta',), ('Baruta',), ('Basel',), ('Basel',), ('Basel',), ('Basel',), ('Basildon',), ('Basildon',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basirhat',), ('Basra',), ('Basra',), ('Basra',), ('Basra',), ('Basse-Terre',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Bassein (Pathein)',), ('Basseterre',), ('Bat Yam',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Bataisk',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batam',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batangas',), ('Batman',), ('Batman',), ('Batna',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Baton Rouge',), ('Battambang',), ('Battambang',), ('Battambang',), ('Batumi',), ('Batumi',), ('Batumi',), ('Batumi',), ('Batumi',), ('Bauru',), ('Bauru',), ('Bauru',), ('Bauru',), ('Bawshar',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayambang',), ('Bayamón',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Bayawan (Tulong)',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Baybay',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Bayugan',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beau Bassin-Rose Hill',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beaumont',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beawar',), ('Beerseba',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beihai',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beipiao',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beira',), ('Beirut',), ('Beirut',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bei´an',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Bekasi',), ('Belfast',), ('Belfast',), ('Belford Roxo',), ('Belford Roxo',), ('Belford Roxo',), ('Belford Roxo',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgaum',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belgorod',), ('Belize City',), ('Belize City',), ('Belize City',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellary',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bellevue',), ('Bello',), ('Bello',), ('Bello',), ('Bello',), ('Belmopan',), ('Belmopan',), ('Belmopan',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belo Horizonte',), ('Belém',), ('Belém',), ('Belém',), ('Belém',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bender (Tîghina)',), ('Bene Beraq',), ('Bengasi',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengbu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Bengkulu',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Benguela',), ('Beni-Mellal',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benin City',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benito Juárez',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Benoni',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Bento Gonçalves',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Benxi',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beograd',), ('Beppu',), ('Beppu',), ('Beppu',), ('Beppu',), ('Beppu',), ('Berazategui',), ('Berazategui',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdjansk',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berdytšiv',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Berezniki',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergamo',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergen',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Bergisch Gladbach',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berhampore (Baharampur)',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berkeley',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Berlin',), ('Bern',), ('Bern',), ('Bern',), ('Bern',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Besançon',), ('Betim',), ('Betim',), ('Betim',), ('Betim',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bettiah',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bhagalpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharatpur',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bharuch (Broach)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatinda (Bathinda)',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhatpara',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhavnagar',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilai',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhilwara',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhimavaram',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhind',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhir (Bid)',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwandi',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhiwani',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhopal',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhubaneswar',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhuj',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bhusawal',), ('Bialystok',), ('Bialystok',), ('Bialystok',), ('Bialystok',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bida',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bidar',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielefeld',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bielsko-Biala',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bihar Sharif',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijapur',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bijsk',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikaner',), ('Bikenibeu',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bila Tserkva',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilaspur',), ('Bilbao',), ('Bilbao',), ('Bilbao',), ('Bilbao',), ('Bilbays',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Billings',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binangonan',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binjai',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Binzhou',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Biratnagar',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birgunj',), ('Birigui',), ('Birigui',), ('Birigui',), ('Birigui',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birjand',), ('Birkenhead',), ('Birkenhead',), ('Birkirkara',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Birmingham',), ('Biserta',), ('Biserta',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Bishkek',), ('Biskra',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bislig',), ('Bismil',), ('Bismil',), ('Bissau',), ('Bissau',), ('Bissau',), ('Bissau',), ('Bissau',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biên Hoa',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Biñan',), ('Blackburn',), ('Blackburn',), ('Blackpool',), ('Blackpool',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blagoveštšensk',), ('Blantyre',), ('Blantyre',), ('Blantyre',), ('Blida (el-Boulaida)',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Blitar',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Bloemfontein',), ('Blumenau',), ('Blumenau',), ('Blumenau',), ('Blumenau',), ('Boa Vista',), ('Boa Vista',), ('Boa Vista',), ('Boa Vista',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobo-Dioulasso',), ('Bobruisk',), ('Bobruisk',), ('Bobruisk',), ('Bobruisk',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Boca del Río',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bochum',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogor',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Bogra',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Boise City',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bojnurd',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Bokaro Steel City',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Boksburg',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bologna',), ('Bolton',), ('Bolton',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Bolzano',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Boma',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bonn',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Bordeaux',), ('Borisov',), ('Borisov',), ('Borisov',), ('Borisov',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borujerd',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Borås',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Bose',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Boston',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botosani',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Botshabelo',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Bottrop',), ('Botucatu',), ('Botucatu',), ('Botucatu',), ('Botucatu',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Bouaké',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulder',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Boulogne-Billancourt',), ('Bournemouth',), ('Bournemouth',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bozhou',), ('Bradford',), ('Bradford',), ('Braga',), ('Bragança Paulista',), ('Bragança Paulista',), ('Bragança Paulista',), ('Bragança Paulista',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmanbaria',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Brahmapur',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Braila',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brakpan',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brampton',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasov',), ('Brasília',), ('Brasília',), ('Brasília',), ('Brasília',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratislava',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Bratsk',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Braunschweig',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Brazzaville',), ('Breda',), ('Breda',), ('Breda',), ('Breda',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremen',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Bremerhaven',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brescia',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Brest',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgeport',), ('Bridgetown',), ('Brighton',), ('Brighton',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brindisi',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Brisbane',), ('Bristol',), ('Bristol',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brjansk',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brno',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brockton',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brovary',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brownsville',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Brugge',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bruxelles [Brussel]',), ('Bucaramanga',), ('Bucaramanga',), ('Bucaramanga',), ('Bucaramanga',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Bucuresti',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budapest',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Budaun',), ('Buenaventura',), ('Buenaventura',), ('Buenaventura',), ('Buenaventura',), ('Buenos Aires',), ('Buenos Aires',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buffalo',), ('Buga',), ('Buga',), ('Buga',), ('Buga',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Bugulma',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Buhoro',), ('Bujumbura',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukan',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bukavu',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulandshahr',), ('Bulaq al-Dakrur',), ('Bulawayo',), ('Bulawayo',), ('Bulawayo',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Buon Ma Thuot',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burbank',), ('Burgas',), ('Burgas',), ('Burgas',), ('Burgas',), ('Burgos',), ('Burgos',), ('Burgos',), ('Burgos',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burhanpur',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burlington',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnaby',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Burnpur',), ('Bursa',), ('Bursa',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Bushehr',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butembo',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Butuan',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Buzau',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bydgoszcz',), ('Bytom',), ('Bytom',), ('Bytom',), ('Bytom',), ('Bærum',), ('Bærum',), ('Bærum',), ('Bærum',), ('Bærum',), ('Béchar',), ('Béjaïa',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabanatuan',), ('Cabimas',), ('Cabimas',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo Frio',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabo de Santo Agostinho',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cabuyao',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeirinha',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cachoeiro de Itapemirim',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Cadiz',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Caen',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagayan de Oro',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Cagliari',), ('Caguas',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cainta',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairns',), ('Cairo',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Cajeme',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabar',), ('Calabozo',), ('Calabozo',), ('Calama',), ('Calama',), ('Calama',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calamba',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calapan',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calbayog',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calcutta [Kolkata]',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Calgary',), ('Cali',), ('Cali',), ('Cali',), ('Cali',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Calicut (Kozhikode)',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Pha',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Cam Ranh',), ('Camaragibe',), ('Camaragibe',), ('Camaragibe',), ('Camaragibe',), ('Camaçari',), ('Camaçari',), ('Camaçari',), ('Camaçari',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cambridge',), ('Cametá',), ('Cametá',), ('Cametá',), ('Cametá',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campeche',), ('Campina Grande',), ('Campina Grande',), ('Campina Grande',), ('Campina Grande',), ('Campinas',), ('Campinas',), ('Campinas',), ('Campinas',), ('Campo Grande',), ('Campo Grande',), ('Campo Grande',), ('Campo Grande',), ('Campo Largo',), ('Campo Largo',), ('Campo Largo',), ('Campo Largo',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Campos dos Goytacazes',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Can Tho',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Canberra',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Candelaria',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Cangzhou',), ('Canoas',), ('Canoas',), ('Canoas',), ('Canoas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Capas',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Breton',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Coral',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Cape Town',), ('Caracas',), ('Caracas',), ('Carapicuíba',), ('Carapicuíba',), ('Carapicuíba',), ('Carapicuíba',), ('Cardiff',), ('Cardiff',), ('Cariacica',), ('Cariacica',), ('Cariacica',), ('Cariacica',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carmen',), ('Carolina',), ('Carrefour',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carrollton',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Carson',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartagena',), ('Cartago',), ('Cartago',), ('Cartago',), ('Cartago',), ('Caruaru',), ('Caruaru',), ('Caruaru',), ('Caruaru',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Cary',), ('Carúpano',), ('Carúpano',), ('Casablanca',), ('Cascavel',), ('Cascavel',), ('Cascavel',), ('Cascavel',), ('Castanhal',), ('Castanhal',), ('Castanhal',), ('Castanhal',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castellón de la Plana [Castell',), ('Castries',), ('Catanduva',), ('Catanduva',), ('Catanduva',), ('Catanduva',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catania',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catanzaro',), ('Catia La Mar',), ('Catia La Mar',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Cauayan',), ('Caucaia',), ('Caucaia',), ('Caucaia',), ('Caucaia',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Cavite',), ('Caxias',), ('Caxias',), ('Caxias',), ('Caxias',), ('Caxias do Sul',), ('Caxias do Sul',), ('Caxias do Sul',), ('Caxias do Sul',), ('Cayenne',), ('Cayenne',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cebu',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Cedar Rapids',), ('Celaya',), ('Celaya',), ('Celaya',), ('Celaya',), ('Celaya',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Central Coast',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Centro (Villahermosa)',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Cesena',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceské Budejovice',), ('Ceyhan',), ('Ceyhan',), ('Chaguanas',), ('Chaguanas',), ('Chaguanas',), ('Chalco',), ('Chalco',), ('Chalco',), ('Chalco',), ('Chalco',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Champdani',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandannagar',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandigarh',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandler',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chandrapur',), ('Chang-won',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changchun',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changde',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changhwa',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changji',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changsha',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changshu',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhi',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Changzhou',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaohu',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaoyang',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chaozhou',), ('Chapecó',), ('Chapecó',), ('Chapecó',), ('Chapecó',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Chapra',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleroi',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charleston',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte',), ('Charlotte Amalie',), ('Charlotte Amalie',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chatsworth',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chattanooga',), ('Chechon',), ('Cheju',), ('Chelmsford',), ('Chelmsford',), ('Cheltenham',), ('Cheltenham',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chemnitz',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengde',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chengdu',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chennai (Madras)',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chenzhou',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chesapeake',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chhindwara',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiang Mai',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiayi',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chiba',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chicago',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chifeng',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chigasaki',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chihuahua',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chilapa de Alvarez',), ('Chillán',), ('Chillán',), ('Chillán',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chilpancingo de los Bravo',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimalhuacán',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chimoio',), ('Chinandega',), ('Chinandega',), ('Chinandega',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chingola',), ('Chinhae',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chiniot',), ('Chinju',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chishtian Mandi',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chisinau',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittagong',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chittoor',), ('Chitungwiza',), ('Chitungwiza',), ('Chitungwiza',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chofu',), ('Chonan',), ('Chong-up',), ('Chongjin',), ('Chongju',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chongqing',), ('Chonju',), ('Chorzów',), ('Chorzów',), ('Chorzów',), ('Chorzów',), ('Christchurch',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chula Vista',), ('Chunchon',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungho',), ('Chungju',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chungli',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chuzhou',), ('Chärjew',), ('Chärjew',), ('Chärjew',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cianjur',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cibinong',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilacap',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cilegon',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimahi',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cimanggis',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Cincinnati',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciomas',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciparay',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Ciputat',), ('Circik',), ('Circik',), ('Circik',), ('Circik',), ('Circik',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Cirebon',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citeureup',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Citrus Heights',), ('Città del Vaticano',), ('Ciudad Bolívar',), ('Ciudad Bolívar',), ('Ciudad Guayana',), ('Ciudad Guayana',), ('Ciudad Losada',), ('Ciudad Losada',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Madero',), ('Ciudad Ojeda',), ('Ciudad Ojeda',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad Valles',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de Guatemala',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de México',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad de Panamá',), ('Ciudad del Este',), ('Ciudad del Este',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cixi',), ('Cizah',), ('Cizah',), ('Cizah',), ('Cizah',), ('Cizah',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clarksville',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clearwater',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Clermont-Ferrand',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cleveland',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Cluj-Napoca',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coacalco de Berriozábal',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Coatzacoalcos',), ('Cochabamba',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Cochin (Kochi)',), ('Codó',), ('Codó',), ('Codó',), ('Codó',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Coimbatore',), ('Colatina',), ('Colatina',), ('Colatina',), ('Colatina',), ('Colchester',), ('Colchester',), ('Colima',), ('Colima',), ('Colima',), ('Colima',), ('Colima',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colombo',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Colorado Springs',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbia',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Columbus',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comalcalco',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comilla',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comitán de Domínguez',), ('Comodoro Rivadavia',), ('Comodoro Rivadavia',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Compton',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Conakry',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepcion',), ('Concepción',), ('Concepción',), ('Concepción',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concord',), ('Concordia',), ('Concordia',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Conselheiro Lafaiete',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constanta',), ('Constantine',), ('Contagem',), ('Contagem',), ('Contagem',), ('Contagem',), ('Copiapó',), ('Copiapó',), ('Copiapó',), ('Coquimbo',), ('Coquimbo',), ('Coquimbo',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coquitlam',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Coral Springs',), ('Cork',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Corona',), ('Coronel',), ('Coronel',), ('Coronel',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Coronel Fabriciano',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corpus Christi',), ('Corrientes',), ('Corrientes',), ('Corumbá',), ('Corumbá',), ('Corumbá',), ('Corumbá',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Cosoleacaque',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Costa Mesa',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotabato',), ('Cotia',), ('Cotia',), ('Cotia',), ('Cotia',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cotonou',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Cottbus',), ('Coventry',), ('Coventry',), ('Coímbra',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Craiova',), ('Crato',), ('Crato',), ('Crato',), ('Crato',), ('Crawley',), ('Crawley',), ('Criciúma',), ('Criciúma',), ('Criciúma',), ('Criciúma',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuauhtémoc',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautitlán Izcalli',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cuautla',), ('Cubatão',), ('Cubatão',), ('Cubatão',), ('Cubatão',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddalore',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuddapah',), ('Cuenca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuernavaca',), ('Cuiabá',), ('Cuiabá',), ('Cuiabá',), ('Cuiabá',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Culiacán',), ('Cumaná',), ('Cumaná',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Cunduacán',), ('Curicó',), ('Curicó',), ('Curicó',), ('Curitiba',), ('Curitiba',), ('Curitiba',), ('Curitiba',), ('Czestochowa',), ('Czestochowa',), ('Czestochowa',), ('Czestochowa',), ('Cádiz',), ('Cádiz',), ('Cádiz',), ('Cádiz',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Cárdenas',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Córdoba',), ('Cúcuta',), ('Cúcuta',), ('Cúcuta',), ('Cúcuta',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Lat',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Da Nang',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabgram',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dabrowa Górnicza',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dadu',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Dagupan',), ('Daito',), ('Daito',), ('Daito',), ('Daito',), ('Daito',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dakar',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dali',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dalian',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Dallas',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daloa',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Daly City',), ('Damanhur',), ('Damascus',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Damoh',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Danao',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Dandong',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danjiangkou',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Danyang',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Daqing',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Dar es Salaam',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Daraga (Locsin)',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darbhanga',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Darmstadt',), ('Dashhowuz',), ('Dashhowuz',), ('Dashhowuz',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Daska',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Dasmariñas',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Datong',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Daugavpils',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davangere',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davao',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Davenport',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Daxian',), ('Dayr al-Zawr',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Dayton',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Da´an',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Deba Habe',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Debrecen',), ('Dehiwala',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehra Dun',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Dehri',), ('Delft',), ('Delft',), ('Delft',), ('Delft',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delhi Cantonment',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delicias',), ('Delmas',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Delta',), ('Denizli',), ('Denizli',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denpasar',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Denver',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Depok',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ghazi Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Dera Ismail Khan',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derbent',), ('Derby',), ('Derby',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Des Moines',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Dese',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Detroit',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Dewas',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Deyang',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezful',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dezhou',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhaka',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhanbad',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Dhule (Dhulia)',), ('Diadema',), ('Diadema',), ('Diadema',), ('Diadema',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Dibrugarh',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Digos',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dijon',), ('Dili',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dimitrovgrad',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dinajpur',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Dindigul',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Diourbel',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dipolog',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Dire Dawa',), ('Disuq',), ('Divinópolis',), ('Divinópolis',), ('Divinópolis',), ('Divinópolis',), ('Diyarbakir',), ('Diyarbakir',), ('Djibouti',), ('Djibouti',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Djougou',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dniprodzerzynsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dnipropetrovsk',), ('Dobric',), ('Dobric',), ('Dobric',), ('Dobric',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Dodoma',), ('Doha',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Dolores Hidalgo',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Donetsk',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongtai',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongwan',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Dongying',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Donostia-San Sebastián',), ('Dordrecht',), ('Dordrecht',), ('Dordrecht',), ('Dordrecht',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dortmund',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Hermanas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Dos Quebradas',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douala',), ('Douglas',), ('Douglas',), ('Dourados',), ('Dourados',), ('Dourados',), ('Dourados',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Downey',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Dresden',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Drobeta-Turnu Severin',), ('Dubai',), ('Dublin',), ('Dudley',), ('Dudley',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Duisburg',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Dujiangyan',), ('Duma',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dumaguete',), ('Dundee',), ('Dundee',), ('Dunedin',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Dunhua',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duque de Caxias',), ('Duran [Eloy Alfaro]',), ('Durango',), ('Durango',), ('Durango',), ('Durango',), ('Durango',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durban',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durg',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durgapur',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Durham',), ('Dushanbe',), ('Dushanbe',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Duyun',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Dzerzinsk',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düren',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('Düsseldorf',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East London',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East Los Angeles',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('East York',), ('Eastbourne',), ('Eastbourne',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebetsu',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ebina',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ecatepec de Morelos',), ('Ech-Chleff (el-Asnam)',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Ede',), ('Edinburgh',), ('Edinburgh',), ('Edirne',), ('Edirne',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Edmonton',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Effon-Alaiye',), ('Eindhoven',), ('Eindhoven',), ('Eindhoven',), ('Eindhoven',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ejigbo',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('Ekibastuz',), ('El Alto',), ('El Araich',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Cajon',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Fuerte',), ('El Jadida',), ('El Limón',), ('El Limón',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Mante',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Monte',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Paso',), ('El Tigre',), ('El Tigre',), ('Elblag',), ('Elblag',), ('Elblag',), ('Elblag',), ('Elche [Elx]',), ('Elche [Elx]',), ('Elche [Elx]',), ('Elche [Elx]',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Eldoret',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elektrostal',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elgin',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elista',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Elizabeth',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Eluru',), ('Elâzig',), ('Elâzig',), ('Embu',), ('Embu',), ('Embu',), ('Embu',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emeishan',), ('Emmen',), ('Emmen',), ('Emmen',), ('Emmen',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Engels',), ('Enschede',), ('Enschede',), ('Enschede',), ('Enschede',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Ensenada',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enshi',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Enugu',), ('Envigado',), ('Envigado',), ('Envigado',), ('Envigado',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Epe',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erfurt',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erie',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erlangen',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erode',), ('Erzincan',), ('Erzincan',), ('Erzurum',), ('Erzurum',), ('Escobar',), ('Escobar',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Escondido',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Esfahan',), ('Eskisehir',), ('Eskisehir',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Eslamshahr',), ('Esmeraldas',), ('Espoo',), ('Espoo',), ('Espoo',), ('Espoo',), ('Espoo',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Essen',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esslingen am Neckar',), ('Esteban Echeverría',), ('Esteban Echeverría',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etawah',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Etobicoke',), ('Ettadhamen',), ('Ettadhamen',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eugene',), ('Eunápolis',), ('Eunápolis',), ('Eunápolis',), ('Eunápolis',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Evansville',), ('Exeter',), ('Exeter',), ('Ezeiza',), ('Ezeiza',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Ezhou',), ('Faaa',), ('Faaa',), ('Fagatogo',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Fairfield',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faisalabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Faizabad',), ('Fakaofo',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fall River',), ('Fargona',), ('Fargona',), ('Fargona',), ('Fargona',), ('Fargona',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Faridabad',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Farrukhabad-cum-Fatehgarh',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fatehpur',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Fayetteville',), ('Feira de Santana',), ('Feira de Santana',), ('Feira de Santana',), ('Feira de Santana',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengcheng',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengshan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fengyuan',), ('Fernando de la Mora',), ('Fernando de la Mora',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferrara',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Ferraz de Vasconcelos',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firenze',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Firozabad',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Flint',), ('Florencia',), ('Florencia',), ('Florencia',), ('Florencia',), ('Florencio Varela',), ('Florencio Varela',), ('Florianópolis',), ('Florianópolis',), ('Florianópolis',), ('Florianópolis',), ('Floridablanca',), ('Floridablanca',), ('Floridablanca',), ('Floridablanca',), ('Flying Fish Cove',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Focsani',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Foggia',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Fontana',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Forlì',), ('Formosa',), ('Formosa',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Collins',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Lauderdale',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Wayne',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort Worth',), ('Fort-de-France',), ('Fortaleza',), ('Fortaleza',), ('Fortaleza',), ('Fortaleza',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foshan',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Foz do Iguaçu',), ('Franca',), ('Franca',), ('Franca',), ('Franca',), ('Francisco Morato',), ('Francisco Morato',), ('Francisco Morato',), ('Francisco Morato',), ('Francistown',), ('Francistown',), ('Francistown',), ('Francistown',), ('Francistown',), ('Franco da Rocha',), ('Franco da Rocha',), ('Franco da Rocha',), ('Franco da Rocha',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frankfurt am Main',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Frederiksberg',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freetown',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Freiburg im Breisgau',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fremont',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresnillo',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fresno',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuchu',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuenlabrada',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fuji',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujieda',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujimi',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujin',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujinomiya',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fujisawa',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukaya',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukui',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukuoka',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukushima',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fukuyama',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fuling',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Fullerton',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funabashi',), ('Funafuti',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fuqing',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fushun',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuxin',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyang',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuyu',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fuzhou',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fu´an',), ('Fès',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Fürth',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gaborone',), ('Gabès',), ('Gabès',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gadag Betigeri',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Gainesville',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Galati',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhidham',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Gandhinagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganganagar',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Ganzhou',), ('Garanhuns',), ('Garanhuns',), ('Garanhuns',), ('Garanhuns',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garapan',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garden Grove',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garland',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garoua',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Garut',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gary',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gatineau',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaya',), ('Gaza',), ('Gaza',), ('Gaziantep',), ('Gaziantep',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gazipur',), ('Gdansk',), ('Gdansk',), ('Gdansk',), ('Gdansk',), ('Gdynia',), ('Gdynia',), ('Gdynia',), ('Gdynia',), ('Gebze',), ('Gebze',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Geelong',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gejiu',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('Gelsenkirchen',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Escobedo',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General Mariano Alvarez',), ('General San Martín',), ('General San Martín',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Santos',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('General Trias',), ('Geneve',), ('Geneve',), ('Geneve',), ('Geneve',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Genova',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('Gent',), ('George',), ('George',), ('George',), ('George',), ('George',), ('George',), ('George',), ('Georgetown',), ('Georgetown',), ('Georgetown',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Gera',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Germiston',), ('Getafe',), ('Getafe',), ('Getafe',), ('Getafe',), ('Ghardaïa',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghaziabad',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Ghulja',), ('Gibraltar',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gifu',), ('Gijón',), ('Gijón',), ('Gijón',), ('Gijón',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gilbert',), ('Gillingham',), ('Gillingham',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Gingoog',), ('Girardot',), ('Girardot',), ('Girardot',), ('Girardot',), ('Giron',), ('Giron',), ('Giron',), ('Giron',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giugliano in Campania',), ('Giza',), ('Gjumri',), ('Glasgow',), ('Glasgow',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glazov',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Glendale',), ('Gliwice',), ('Gliwice',), ('Gliwice',), ('Gliwice',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Gloucester',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godhra',), ('Godoy Cruz',), ('Godoy Cruz',), ('Goiânia',), ('Goiânia',), ('Goiânia',), ('Goiânia',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gojra',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Gold Coast',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Goma',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gombe',), ('Gomel',), ('Gomel',), ('Gomel',), ('Gomel',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonbad-e Qabus',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonda',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gonder',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gondiya',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gongziling',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorakhpur',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorgan',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorlivka',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorontalo',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gorzów Wielkopolski',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Gothenburg [Göteborg]',), ('Governador Valadares',), ('Governador Valadares',), ('Governador Valadares',), ('Governador Valadares',), ('Granada',), ('Granada',), ('Granada',), ('Granada',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Prairie',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Grand Rapids',), ('Gravataí',), ('Gravataí',), ('Gravataí',), ('Gravataí',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Graz',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Green Bay',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Greensboro',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grenoble',), ('Grimsby',), ('Grimsby',), ('Grodno',), ('Grodno',), ('Grodno',), ('Grodno',), ('Groningen',), ('Groningen',), ('Groningen',), ('Groningen',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grozny',), ('Grudziadz',), ('Grudziadz',), ('Grudziadz',), ('Grudziadz',), ('Guacara',), ('Guacara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalajara',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guadalupe',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guagua',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanajuato',), ('Guanare',), ('Guanare',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangshui',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guangyuan',), ('Guarapuava',), ('Guarapuava',), ('Guarapuava',), ('Guarapuava',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guaratinguetá',), ('Guarenas',), ('Guarenas',), ('Guarujá',), ('Guarujá',), ('Guarujá',), ('Guarujá',), ('Guarulhos',), ('Guarulhos',), ('Guarulhos',), ('Guarulhos',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guasave',), ('Guatire',), ('Guatire',), ('Guayaquil',), ('Guaymallén',), ('Guaymallén',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaymas',), ('Guaynabo',), ('Guaíba',), ('Guaíba',), ('Guaíba',), ('Guaíba',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Gudivada',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guelph',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guigang',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guilin',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Guiyang',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujranwala',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gujrat',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Gulbarga',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guna',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntakal',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Guntur',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurgaon',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gurue',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Gusau',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Guwahati (Gauhati)',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gwalior',), ('Gweru',), ('Gweru',), ('Gweru',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Györ',), ('Gäncä',), ('Gäncä',), ('Gäncä',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gävle',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Gómez Palacio',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Göttingen',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Gütersloh',), ('Haag',), ('Haag',), ('Haag',), ('Haag',), ('Haarlem',), ('Haarlem',), ('Haarlem',), ('Haarlem',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Haarlemmermeer',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habarovsk',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habikino',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Habra',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachinohe',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hachioji',), ('Hadano',), ('Hadano',), ('Hadano',), ('Hadano',), ('Hadano',), ('Haeju',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hafizabad',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagen',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Hagonoy',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haicheng',), ('Haifa',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Haikou',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailar',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Hailun',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haining',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Haiphong',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Hakodate',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldia',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Haldwani-cum-Kathgodam',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halifax',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halisahar',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Halle/Saale',), ('Hama',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamadan',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamamatsu',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamburg',), ('Hamhung',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hami',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamilton',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hamm',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hampton',), ('Hanam',), ('Handa',), ('Handa',), ('Handa',), ('Handa',), ('Handa',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Handan',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hangzhou',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hannover',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanoi',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Hanzhong',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Haora (Howrah)',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Hapur',), ('Harare',), ('Harare',), ('Harare',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Harbin',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Hardwar (Haridwar)',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Harkova [Harkiv]',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartford',), ('Hartlepool',), ('Hartlepool',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hassan',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hat Yai',), ('Hatay (Antakya)',), ('Hatay (Antakya)',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hathras',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hayward',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hazaribag',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebi',), ('Hebron',), ('Hebron',), ('Heerlen',), ('Heerlen',), ('Heerlen',), ('Heerlen',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hefei',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Hegang',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heidelberg',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Heilbronn',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsingborg',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Helsinki [Helsingfors]',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Henderson',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengshui',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Hengyang',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Henzada (Hinthada)',), ('Herakleion',), ('Herakleion',), ('Herat',), ('Herat',), ('Herat',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Hermosillo',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herne',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Herson',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heyuan',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Heze',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hialeah',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Hidalgo del Parral',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashihiroshima',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashikurume',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimatsuyama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashimurayama',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Higashiosaka',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hikone',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Hildesheim',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himeji',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Himki',), ('Hims',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hindupur',), ('Hino',), ('Hino',), ('Hino',), ('Hino',), ('Hino',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hirakata',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hiratsuka',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hirosaki',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hiroshima',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hisar (Hissar)',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachi',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hitachinaka',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Hmelnytskyi',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Ho Chi Minh City',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hobart',), ('Hodeida',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hofu',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hohhot',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Hollywood',), ('Holon',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Hong Gai',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Honghu',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Hongjiang',), ('Honiara',), ('Honiara',), ('Honiara',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Honolulu',), ('Hortolândia',), ('Hortolândia',), ('Hortolândia',), ('Hortolândia',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hoshiarpur',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Hospet',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Houston',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hoya',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hradec Králové',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsichuh',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchu',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsinchuang',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Hsintien',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huadian',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaibei',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huaihua',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huainan',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huaiyin',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Huai´an',), ('Hualien',), ('Hualien',), ('Hualien',), ('Hualien',), ('Hualien',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huambo',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshan',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangshi',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huangyan',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Huaying',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Hubli-Dharwad',), ('Huddersfield',), ('Huddersfield',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Hue',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huejutla de Reyes',), ('Huelva',), ('Huelva',), ('Huelva',), ('Huelva',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Hugli-Chinsurah',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huimanguillo',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huixquilucan',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Huizhou',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Hunjiang',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntington Beach',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Huntsville',), ('Hurlingham',), ('Hurlingham',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Huzhou',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyderabad',), ('Hyesan',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Iasi',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibadan',), ('Ibagué',), ('Ibagué',), ('Ibagué',), ('Ibagué',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibaraki',), ('Ibarra',), ('Ibb',), ('Ibirité',), ('Ibirité',), ('Ibirité',), ('Ibirité',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichalkaranji',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichihara',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichikawa',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichinomiya',), ('Ichon',), ('Idfu',), ('Idlib',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Ife',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Igboho',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iguala de la Independencia',), ('Iida',), ('Iida',), ('Iida',), ('Iida',), ('Iida',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ijebu-Ode',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikare',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikeda',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikerre',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikire',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikirun',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikoma',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Ikorodu',), ('Iksan',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ila',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilagan',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilam',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilan',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilawe-Ekiti',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilesha',), ('Ilhéus',), ('Ilhéus',), ('Ilhéus',), ('Ilhéus',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Iligan',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Ilobu',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Iloilo',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Ilorin',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imabari',), ('Imperatriz',), ('Imperatriz',), ('Imperatriz',), ('Imperatriz',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imphal',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Imus',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inanda',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inazawa',), ('Inchon',), ('Indaiatuba',), ('Indaiatuba',), ('Indaiatuba',), ('Indaiatuba',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Independence',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indianapolis',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Indore',), ('Inegöl',), ('Inegöl',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Inglewood',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingolstadt',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Ingraj Bazar (English Bazar)',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Inisa',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Innsbruck',), ('Ipatinga',), ('Ipatinga',), ('Ipatinga',), ('Ipatinga',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipoh',), ('Ipswich',), ('Ipswich',), ('Iquique',), ('Iquique',), ('Iquique',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irapuato',), ('Irbid',), ('Irbid',), ('Irbil',), ('Irbil',), ('Irbil',), ('Irbil',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Irkutsk',), ('Iruma',), ('Iruma',), ('Iruma',), ('Iruma',), ('Iruma',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irvine',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Irving',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Isahaya',), ('Ise',), ('Ise',), ('Ise',), ('Ise',), ('Ise',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Ise-Ekiti',), ('Isehara',), ('Isehara',), ('Isehara',), ('Isehara',), ('Isehara',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Iserlohn',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Isesaki',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Iseyin',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Ishinomaki',), ('Iskenderun',), ('Iskenderun',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Islamabad',), ('Ismailia',), ('Isparta',), ('Isparta',), ('Istanbul',), ('Istanbul',), ('Itabira',), ('Itabira',), ('Itabira',), ('Itabira',), ('Itaboraí',), ('Itaboraí',), ('Itaboraí',), ('Itaboraí',), ('Itabuna',), ('Itabuna',), ('Itabuna',), ('Itabuna',), ('Itagüí',), ('Itagüí',), ('Itagüí',), ('Itagüí',), ('Itaituba',), ('Itaituba',), ('Itaituba',), ('Itaituba',), ('Itajaí',), ('Itajaí',), ('Itajaí',), ('Itajaí',), ('Itami',), ('Itami',), ('Itami',), ('Itami',), ('Itami',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapecerica da Serra',), ('Itapetininga',), ('Itapetininga',), ('Itapetininga',), ('Itapetininga',), ('Itapevi',), ('Itapevi',), ('Itapevi',), ('Itapevi',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itaquaquecetuba',), ('Itu',), ('Itu',), ('Itu',), ('Itu',), ('Ituiutaba',), ('Ituiutaba',), ('Ituiutaba',), ('Ituiutaba',), ('Ituzaingó',), ('Ituzaingó',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivano-Frankivsk',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Ivanovo',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwaki',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwakuni',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwatsuki',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Iwo',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtapaluca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Ixtlahuaca',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izevsk',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmajil',), ('Izmir',), ('Izmir',), ('Izmit (Kocaeli)',), ('Izmit (Kocaeli)',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumi',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Izumisano',), ('Jabaliya',), ('Jabaliya',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jabalpur',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jaboatão dos Guararapes',), ('Jacareí',), ('Jacareí',), ('Jacareí',), ('Jacareí',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jackson',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacksonville',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobabad',), ('Jacobina',), ('Jacobina',), ('Jacobina',), ('Jacobina',), ('Jaffna',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jahrom',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jaipur',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakarta',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jakutsk',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalandhar (Jullundur)',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalgaon',), ('Jalib al-Shuyukh',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jalna',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jamalpur',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jambi',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jammu',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamnagar',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jamshedpur',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaraguá do Sul',), ('Jaramana',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaranwala',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jaroslavl',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jastrzebie-Zdrój',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaunpur',), ('Jaworzno',), ('Jaworzno',), ('Jaworzno',), ('Jaworzno',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaya Pura',), ('Jaén',), ('Jaén',), ('Jaén',), ('Jaén',), ('Jaú',), ('Jaú',), ('Jaú',), ('Jaú',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jekaterinburg',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelenia Góra',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jelets',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jember',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jena',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jenakijeve',), ('Jequié',), ('Jequié',), ('Jequié',), ('Jequié',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jerez de la Frontera',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jersey City',), ('Jerusalem',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessentuki',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jessore',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jevpatorija',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhang',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhansi',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Jhelum',), ('Ji-Paraná',), ('Ji-Paraná',), ('Ji-Paraná',), ('Ji-Paraná',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiamusi',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangmen',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyin',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiangyou',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaohe',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaozuo',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jiaxing',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jieyang',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jilin',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinan',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jinchang',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jincheng',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jingdezhen',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jinhua',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jining',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinmen',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinxi',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jinzhou',), ('Jirja',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiujiang',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutai',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jiutepec',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Jixi',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Ji´an',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Jodhpur',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Joetsu',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johannesburg',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Johor Baharu',), ('Joinville',), ('Joinville',), ('Joinville',), ('Joinville',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Jokohama [Yokohama]',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Joliet',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jombang',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('Jos',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José Azueta',), ('José C. Paz',), ('José C. Paz',), ('João Pessoa',), ('João Pessoa',), ('João Pessoa',), ('João Pessoa',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Joškar-Ola',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juazeiro do Norte',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juba',), ('Juiz de Fora',), ('Juiz de Fora',), ('Juiz de Fora',), ('Juiz de Fora',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junagadh',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Junan',), ('Jundíaí',), ('Jundíaí',), ('Jundíaí',), ('Jundíaí',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juzno-Sahalinsk',), ('Juárez',), ('Juárez',), ('Juárez',), ('Juárez',), ('Juárez',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Jönköping',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabankalan',), ('Kabul',), ('Kabul',), ('Kabul',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kabwe',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kadoma',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaduna',), ('Kaesong',), ('Kafr al-Dawwar',), ('Kafr al-Shaykh',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kagoshima',), ('Kahramanmaras',), ('Kahramanmaras',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaifeng',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kaili',), ('Kairouan',), ('Kairouan',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiserslautern',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kaiyuan',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakamigahara',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakinada',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kakogawa',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kalemie',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kaliningrad',), ('Kalisz',), ('Kalisz',), ('Kalisz',), ('Kalisz',), ('Kallithea',), ('Kallithea',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kalookan',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kaluga',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kalyan',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamagaya',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamakura',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamalia',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamarhati',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kamensk-Uralski',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kameoka',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamjanets-Podilskyi',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kamoke',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kampala',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kamyšin',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kananga',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanazawa',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchipuram',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kanchrapara',), ('Kandy',), ('Kanggye',), ('Kangnung',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kangshan',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kano',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kanpur Cantonment',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansas City',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kansk',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanton [Guangzhou]',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kanuma',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaohsiung',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Kaolack',), ('Karabük',), ('Karabük',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karachi',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaj',), ('Karaman',), ('Karaman',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karawang',), ('Karbala',), ('Karbala',), ('Karbala',), ('Karbala',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Karimnagar',), ('Kariya',), ('Kariya',), ('Kariya',), ('Kariya',), ('Kariya',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karlsruhe',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Karnal',), ('Kars',), ('Kars',), ('Karsi',), ('Karsi',), ('Karsi',), ('Karsi',), ('Karsi',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashan',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashihara',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwa',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kashiwazaki',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassala',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kassel',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasuga',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasugai',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasukabe',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kasur',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kataka (Cuttack)',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Kathmandu',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katihar',), ('Katowice',), ('Katowice',), ('Katowice',), ('Katowice',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Katsina',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kaunas',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawachinagano',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawagoe',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawaguchi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawanishi',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kawasaki',), ('Kayseri',), ('Kayseri',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kazan',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kecskemét',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Kediri',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Keelung (Chilung)',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelang',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kelowna',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kemerovo',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kempton Park',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kendari',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kenosha',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kerman',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kermanshah',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Kertš',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khairpur',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khammam',), ('Khan Yunis',), ('Khan Yunis',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khandwa',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanewal',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Khanpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Kharagpur',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khartum',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khomeynishahr',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khon Kaen',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramabad',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khorramshahr',), ('Khouribga',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khoy',), ('Khujand',), ('Khujand',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khulna',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Khuzdar',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kidapawan',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kiel',), ('Kielce',), ('Kielce',), ('Kielce',), ('Kielce',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kikwit',), ('Kilis',), ('Kilis',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimberley',), ('Kimchaek',), ('Kimchon',), ('Kimhae',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimitsu',), ('Kimje',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kinešma',), ('Kingston',), ('Kingston',), ('Kingston upon Hull',), ('Kingston upon Hull',), ('Kingstown',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kinshasa',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kioto',), ('Kirikkale',), ('Kirikkale',), ('Kirkuk',), ('Kirkuk',), ('Kirkuk',), ('Kirkuk',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirov',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovo-Tšepetsk',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kirovograd',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kiryu',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisangani',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kisarazu',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kiseljovsk',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kishiwada',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kislovodsk',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kisumu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitakyushu',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitami',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitchener',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kitwe',), ('Kiziltepe',), ('Kiziltepe',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klagenfurt',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaipeda',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klaten',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klerksdorp',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Klin',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Knoxville',), ('Kobe',), ('Kobe',), ('Kobe',), ('Kobe',), ('Kobe',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Koblenz',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kochi',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kodaira',), ('Kofu',), ('Kofu',), ('Kofu',), ('Kofu',), ('Kofu',), ('Koganei',), ('Koganei',), ('Koganei',), ('Koganei',), ('Koganei',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Kohat',), ('Koje',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kokubunji',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kolhapur',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kollam (Quilon)',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolomna',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolpino',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Kolwezi',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komaki',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komatsu',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Komsomolsk-na-Amure',), ('Konan',), ('Konan',), ('Konan',), ('Konan',), ('Konan',), ('Kongju',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konotop',), ('Konya',), ('Konya',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korba',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Korhogo',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Koriyama',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korla',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Korolev',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koronadal',), ('Koror',), ('Koror',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Koshigaya',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostjantynivka',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Kostroma',), ('Koszalin',), ('Koszalin',), ('Koszalin',), ('Koszalin',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Kota Bharu',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Koudougou',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kovrov',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Kowloon and New Kowloon',), ('Koyang',), ('Košice',), ('Košice',), ('Košice',), ('Košice',), ('Košice',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kragujevac',), ('Kraków',), ('Kraków',), ('Kraków',), ('Kraków',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Kramatorsk',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnodar',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnogorsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnojarsk',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krasnyi Lutš',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krefeld',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krementšuk',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krishnanagar',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Krugersdorp',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Kryvyi Rig',), ('Ksar el Kebir',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Lumpur',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuala Terengganu',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuantan',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kuching',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kudus',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kueishan',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kukatpalle',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kulti-Barakar',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumagaya',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumamoto',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumasi',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumbakonam',), ('Kumi',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kumo',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunming',), ('Kunpo',), ('Kunsan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kunshan',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kupang',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kurashiki',), ('Kure',), ('Kure',), ('Kure',), ('Kure',), ('Kure',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kurgan',), ('Kuri',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kurnool',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kursk',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kurume',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kusatsu',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kushiro',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kusti',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kutaisi',), ('Kuwait',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuwana',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuytun',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kuznetsk',), ('Kwang-yang',), ('Kwangju',), ('Kwangmyong',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyiv',), ('Kyongju',), ('Kyongsan',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kyzyl',), ('Kénitra',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Kökshetau',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('Köln',), ('København',), ('København',), ('København',), ('København',), ('København',), ('København',), ('København',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kükon',), ('Kütahya',), ('Kütahya',), ('La Ceiba',), ('La Ceiba',), ('La Ceiba',), ('La Matanza',), ('La Matanza',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Paz',), ('La Plata',), ('La Plata',), ('La Rioja',), ('La Rioja',), ('La Romana',), ('La Serena',), ('La Serena',), ('La Serena',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('La Spezia',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Ladysmith',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafayette',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lafia',), ('Lages',), ('Lages',), ('Lages',), ('Lages',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lagos de Moreno',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahore',), ('Lahti',), ('Lahti',), ('Lahti',), ('Lahti',), ('Lahti',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiwu',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laiyang',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Laizhou',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lakewood',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalbahadur Nagar',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lalitapur',), ('Lambaré',), ('Lambaré',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Lancaster',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Langfang',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lansing',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanzhou',), ('Lanús',), ('Lanús',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laoag',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Laohekou',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Lapu-Lapu',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Laredo',), ('Larisa',), ('Larisa',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Larkana',), ('Las Heras',), ('Las Heras',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Margaritas',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Palmas de Gran Canaria',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Piñas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Las Vegas',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Lashio (Lasho)',), ('Latakia',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latina',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Latur',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lauro de Freitas',), ('Lausanne',), ('Lausanne',), ('Lausanne',), ('Lausanne',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Laval',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Havre',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le Mans',), ('Le-Cap-Haïtien',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Lecce',), ('Leeds',), ('Leeds',), ('Leganés',), ('Leganés',), ('Leganés',), ('Leganés',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legazpi',), ('Legnica',), ('Legnica',), ('Legnica',), ('Legnica',), ('Leicester',), ('Leicester',), ('Leiden',), ('Leiden',), ('Leiden',), ('Leiden',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leipzig',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Leiyang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Lengshuijiang',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Leninsk-Kuznetski',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerdo',), ('Lerma',), ('Lerma',), ('Lerma',), ('Lerma',), ('Lerma',), ('Les Abymes',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leshan',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Leverkusen',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('Lexington-Fayette',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('León',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhasa',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Lhokseumawe',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Liangcheng',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyuan',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Lianyungang',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaocheng',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyang',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liaoyuan',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Liberec',), ('Libreville',), ('Libreville',), ('Libreville',), ('Libreville',), ('Lida',), ('Lida',), ('Lida',), ('Lida',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Liepaja',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Ligao',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Likasi',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Liling',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lille',), ('Lilongwe',), ('Lilongwe',), ('Lilongwe',), ('Limeira',), ('Limeira',), ('Limeira',), ('Limeira',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Limoges',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Linchuan',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Lincoln',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linfen',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhai',), ('Linhares',), ('Linhares',), ('Linhares',), ('Linhares',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linhe',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linköping',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linqing',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linyi',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Linz',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipa',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lipetsk',), ('Lisboa',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Little Rock',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liupanshui',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liuzhou',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liu´an',), ('Liverpool',), ('Liverpool',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livonia',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Livorno',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liyang',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Liège',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubertsy',), ('Ljubljana',), ('Ljubljana',), ('Ljubljana',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lleida (Lérida)',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Lobito',), ('Logroño',), ('Logroño',), ('Logroño',), ('Logroño',), ('Loja',), ('Lomas de Zamora',), ('Lomas de Zamora',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('Lomé',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('London',), ('Londrina',), ('Londrina',), ('Londrina',), ('Londrina',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Beach',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Long Xuyen',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longjing',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longkou',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longueuil',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyan',), ('Longyearbyen',), ('Longyearbyen',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Angeles',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Cabos',), ('Los Teques',), ('Los Teques',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Loudi',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Louisville',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lowell',), ('Lower Hutt',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanda',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Luanshya',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubao',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lubbock',), ('Lublin',), ('Lublin',), ('Lublin',), ('Lublin',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lubumbashi',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Lucena',), ('Luchou',), ('Luchou',), ('Luchou',), ('Luchou',), ('Luchou',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Lucknow',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludhiana',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Ludwigshafen am Rhein',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lugansk',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lund',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Lungtan',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luohe',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Luoyang',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Lusaka',), ('Luton',), ('Luton',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Luxor',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luzhou',), ('Luziânia',), ('Luziânia',), ('Luziânia',), ('Luziânia',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lviv',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lyon',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('Lysytšansk',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('L´Hospitalet de Llobregat',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lázaro Cárdenas',), ('Lódz',), ('Lódz',), ('Lódz',), ('Lódz',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lübeck',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Lünen',), ('Maastricht',), ('Maastricht',), ('Maastricht',), ('Maastricht',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Mabalacat',), ('Macao',), ('Macao',), ('Macao',), ('Macapá',), ('Macapá',), ('Macapá',), ('Macapá',), ('Macaé',), ('Macaé',), ('Macaé',), ('Macaé',), ('Maceió',), ('Maceió',), ('Maceió',), ('Maceió',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machakos',), ('Machala',), ('Machida',), ('Machida',), ('Machida',), ('Machida',), ('Machida',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Machilipatnam (Masulipatam)',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macon',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Macuspana',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madison',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madiun',), ('Madrid',), ('Madrid',), ('Madrid',), ('Madrid',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Madurai',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Maebashi',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magadan',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magdeburg',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magelang',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magnitogorsk',), ('Magé',), ('Magé',), ('Magé',), ('Magé',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahabad',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahatškala',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Mahbubnagar',), ('Maicao',), ('Maicao',), ('Maicao',), ('Maicao',), ('Maidstone',), ('Maidstone',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maiduguri',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Maikop',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Mainz',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Maizuru',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Majalaya',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makati',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makijivka',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Makurdi',), ('Malabo',), ('Malabo',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malabon',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malang',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malasiqui',), ('Malatya',), ('Malatya',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malaybalay',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Malayer',), ('Male',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malegaon',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malita',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Malkajgiri',), ('Mallawi',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malmö',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malolos',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malungon',), ('Malvinas Argentinas',), ('Malvinas Argentinas',), ('Mamoutzou',), ('Mamoutzou',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Manado',), ('Managua',), ('Managua',), ('Managua',), ('Manaus',), ('Manaus',), ('Manaus',), ('Manaus',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Manchester',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandalay',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandaluyong',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandasor',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandaue',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Bahauddin',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandi Burewala',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mandya',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mangalore',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Mango',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manila',), ('Manisa',), ('Manisa',), ('Manizales',), ('Manizales',), ('Manizales',), ('Manizales',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Mannheim',), ('Manta',), ('Manukau',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzanillo',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Manzhouli',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maoming',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Maputo',), ('Mar del Plata',), ('Mar del Plata',), ('Marabá',), ('Marabá',), ('Marabá',), ('Marabá',), ('Maracanaú',), ('Maracanaú',), ('Maracanaú',), ('Maracanaú',), ('Maracay',), ('Maracay',), ('Maracaíbo',), ('Maracaíbo',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maradi',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Maragheh',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marand',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marawi',), ('Marbella',), ('Marbella',), ('Marbella',), ('Marbella',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Mardan',), ('Margilon',), ('Margilon',), ('Margilon',), ('Margilon',), ('Margilon',), ('Maribor',), ('Maribor',), ('Maribor',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marikina',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Marilao',), ('Maringá',), ('Maringá',), ('Maringá',), ('Maringá',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Mariupol',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Markham',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Marl',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Maroua',), ('Marrakech',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Marseille',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Martínez de la Torre',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Marv Dasht',), ('Mary',), ('Mary',), ('Mary',), ('Marília',), ('Marília',), ('Marília',), ('Marília',), ('Masan',), ('Masaya',), ('Masaya',), ('Masaya',), ('Maseru',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Mashhad',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masjed-e-Soleyman',), ('Masqat',), ('Mata-Utu',), ('Mata-Utu',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matadi',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Matamoros',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataram',), ('Mataró',), ('Mataró',), ('Mataró',), ('Mataró',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mathura',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Mati',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matola',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsubara',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsudo',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsue',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsumoto',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsusaka',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Matsuyama',), ('Maturín',), ('Maturín',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Maunath Bhanjan',), ('Mauá',), ('Mauá',), ('Mauá',), ('Mauá',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Maxixe',), ('Mayagüez',), ('Mazar-e-Sharif',), ('Mazar-e-Sharif',), ('Mazar-e-Sharif',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Mazatlán',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Ma´anshan',), ('Mbabane',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbandaka',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbeya',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbour',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('Mbuji-Mayi',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('McAllen',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Mdantsane',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medan',), ('Medellín',), ('Medellín',), ('Medellín',), ('Medellín',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meerut Cantonment',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meihekou',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meikhtila',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Meixian',), ('Mejicanos',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Mekele',), ('Meknès',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melbourne',), ('Melipilla',), ('Melipilla',), ('Melipilla',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Melitopol',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Memphis',), ('Mendoza',), ('Mendoza',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Mergui (Myeik)',), ('Merlo',), ('Merlo',), ('Mersin (Içel)',), ('Mersin (Içel)',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Meru',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesa',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Mesquite',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Messina',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metairie',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metepec',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Metz',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexicali',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Mexico',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Meycauayan',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Mezduretšensk',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miami Beach',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Miandoab',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Mianyang',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miaoli',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Miass',), ('Middlesbrough',), ('Middlesbrough',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midland',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midnapore (Medinipur)',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Midsayap',), ('Milagro',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milano',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Milwaukee',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Minatitlán',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingora',), ('Mingäçevir',), ('Mingäçevir',), ('Mingäçevir',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minna',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minneapolis',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minoo',), ('Minsk',), ('Minsk',), ('Minsk',), ('Minsk',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Mira Bhayandar',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Miraj',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Mirpur Khas',), ('Miryang',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Mirzapur-cum-Vindhyachal',), ('Misato',), ('Misato',), ('Misato',), ('Misato',), ('Misato',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishan',), ('Mishima',), ('Mishima',), ('Mishima',), ('Mishima',), ('Mishima',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Miskolc',), ('Misrata',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mission Viejo',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mississauga',), ('Mit Ghamr',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mitaka',), ('Mito',), ('Mito',), ('Mito',), ('Mito',), ('Mito',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mitšurinsk',), ('Mixco',), ('Mixco',), ('Mixco',), ('Mixco',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyakonojo',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Miyazaki',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobara',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mobile',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Mocuba',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modena',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modesto',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Modinagar',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moers',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Moga',), ('Mogiljov',), ('Mogiljov',), ('Mogiljov',), ('Mogiljov',), ('Mohammedia',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji das Cruzes',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Moji-Guaçu',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mojokerto',), ('Mokpo',), ('Molodetšno',), ('Molodetšno',), ('Molodetšno',), ('Molodetšno',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Mombasa',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monaco-Ville',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monclova',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Monrovia',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Mons',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monte-Carlo',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Monterrey',), ('Montería',), ('Montería',), ('Montería',), ('Montería',), ('Montes Claros',), ('Montes Claros',), ('Montes Claros',), ('Montes Claros',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montgomery',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montpellier',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montreuil',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Montréal',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monywa',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Monza',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moradabad',), ('Moratuwa',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morelia',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Morena',), ('Moreno',), ('Moreno',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moreno Valley',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Moriguchi',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morioka',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Morogoro',), ('Moroni',), ('Moroni',), ('Moroni',), ('Moroni',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morvi',), ('Morón',), ('Morón',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moscow',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Moshi',), ('Mossoró',), ('Mossoró',), ('Mossoró',), ('Mossoró',), ('Mostaganem',), ('Mosul',), ('Mosul',), ('Mosul',), ('Mosul',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moulmein (Mawlamyine)',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Moundou',), ('Mount Darwin',), ('Mount Darwin',), ('Mount Darwin',), ('Mozyr',), ('Mozyr',), ('Mozyr',), ('Mozyr',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mudanjiang',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mufulira',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mukatševe',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Mulhouse',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Multan',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mumbai (Bombay)',), ('Mun-gyong',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munger (Monghyr)',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Munich [München]',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Muntinlupa',), ('Murcia',), ('Murcia',), ('Murcia',), ('Murcia',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Muridke',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murmansk',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Murom',), ('Muroran',), ('Muroran',), ('Muroran',), ('Muroran',), ('Muroran',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Murwara (Katni)',), ('Musashino',), ('Musashino',), ('Musashino',), ('Musashino',), ('Musashino',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mushin',), ('Mutare',), ('Mutare',), ('Mutare',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffargarh',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarnagar',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Muzaffarpur',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwanza',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('Mwene-Ditu',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('My Tho',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Myingyan',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mykolajiv',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mymensingh',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mysore',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Mytištši',), ('Málaga',), ('Málaga',), ('Málaga',), ('Málaga',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Mérida',), ('Móstoles',), ('Móstoles',), ('Móstoles',), ('Móstoles',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mönchengladbach',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Mülheim an der Ruhr',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Münster',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nabereznyje Tšelny',), ('Nablus',), ('Nablus',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nadiad',), ('Nador',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Naga',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagano',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaoka',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagaon',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagar Coil',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagareyama',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagasaki',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagoya',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Nagpur',), ('Naha',), ('Naha',), ('Naha',), ('Naha',), ('Naha',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Nahodka',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Naihati',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Nairobi',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Najafabad',), ('Naju',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Pathom',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Ratchasima',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakhon Sawan',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Nakuru',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Naltšik',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Nam Dinh',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namangan',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Namibe',), ('Nampo',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Nampula',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namur',), ('Namwon',), ('Namyangju',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchang',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nanchong',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nancy',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nanded (Nander)',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nandyal',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanning',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nanping',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantes',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantong',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nantou',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Nanyang',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naogaon',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Naperville',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Napoli',), ('Nara',), ('Nara',), ('Nara',), ('Nara',), ('Nara',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narashino',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narayanganj',), ('Narita',), ('Narita',), ('Narita',), ('Narita',), ('Narita',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Narsinghdi',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashik (Nasik)',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nashville-Davidson',), ('Nassau',), ('Nassau',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Nasugbu',), ('Natal',), ('Natal',), ('Natal',), ('Natal',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Naucalpan de Juárez',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navadwip',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navoi',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navojoa',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navolato',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navotas',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Navsari',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabganj',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nawabshah',), ('Nazilli',), ('Nazilli',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Nazret',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Naçala-Porto',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Ndola',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftejugansk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Neftekamsk',), ('Negombo',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neijiang',), ('Neiva',), ('Neiva',), ('Neiva',), ('Neiva',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nellore',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Nepean',), ('Netanya',), ('Neuquén',), ('Neuquén',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Neuss',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('Nevinnomyssk',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bedford',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Bombay',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Delhi',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Haven',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New Orleans',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('New York',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newark',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle',), ('Newcastle upon Tyne',), ('Newcastle upon Tyne',), ('Newport',), ('Newport',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Newport News',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyagawa',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyshabur',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Neyveli',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nezahualcóyotl',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Nha Trang',), ('Niamey',), ('Niamey',), ('Niamey',), ('Niamey',), ('Niamey',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nice',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nicolás Romero',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Nigel',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niigata',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niihama',), ('Niiza',), ('Niiza',), ('Niiza',), ('Niiza',), ('Niiza',), ('Nijmegen',), ('Nijmegen',), ('Nijmegen',), ('Nijmegen',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nikopol',), ('Nilópolis',), ('Nilópolis',), ('Nilópolis',), ('Nilópolis',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Ningbo',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishinomiya',), ('Nishio',), ('Nishio',), ('Nishio',), ('Nishio',), ('Nishio',), ('Niterói',), ('Niterói',), ('Niterói',), ('Niterói',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Nizamabad',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznekamsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Niznevartovsk',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Novgorod',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Nizni Tagil',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Niš',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nkongsamba',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Nobeoka',), ('Noda',), ('Noda',), ('Noda',), ('Noda',), ('Noda',), ('Nogales',), ('Nogales',), ('Nogales',), ('Nogales',), ('Nogales',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noginsk',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Noida',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nojabrsk',), ('Nonsan',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Nonthaburi',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norfolk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norilsk',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norman',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('Norrköping',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Barrackpur',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Dum Dum',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Las Vegas',), ('North Shore',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('North York',), ('Northampton',), ('Northampton',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwalk',), ('Norwich',), ('Norwich',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nossa Senhora do Socorro',), ('Nottingham',), ('Nottingham',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouakchott',), ('Nouméa',), ('Nouméa',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nouâdhibou',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Friburgo',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Nova Iguaçu',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novara',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novi Sad',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novo Hamburgo',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuibyševsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novokuznetsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novomoskovsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novopolotsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novorossijsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novosibirsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotroitsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšeboksarsk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novotšerkassk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novouralsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novošahtinsk',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Novyi Urengoi',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nowshera',), ('Nueva San Salvador',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nuevo Laredo',), ('Nukus',), ('Nukus',), ('Nukus',), ('Nukus',), ('Nukus',), ('Numazu',), ('Numazu',), ('Numazu',), ('Numazu',), ('Numazu',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyala',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyeri',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('Nyiregyháza',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('N´Djaména',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nîmes',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Nürnberg',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakland',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oakville',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Oaxaca de Juárez',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Obeid',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberhausen',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Oberholzer',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obihiro',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Obninsk',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Oceanside',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocosingo',), ('Ocumare del Tuy',), ('Ocumare del Tuy',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odawara',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odense',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odesa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odessa',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Odintsovo',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offa',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Offenbach am Main',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogaki',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Ogbomosho',), ('Oita',), ('Oita',), ('Oita',), ('Oita',), ('Oita',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Oka-Akoko',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okara',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okayama',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okazaki',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Okinawa',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oklahoma City',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oktjabrski',), ('Oldbury/Smethwick (Warley)',), ('Oldbury/Smethwick (Warley)',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldenburg',), ('Oldham',), ('Oldham',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Oleksandrija',), ('Olinda',), ('Olinda',), ('Olinda',), ('Olinda',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olmalik',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olomouc',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olongapo',), ('Olsztyn',), ('Olsztyn',), ('Olsztyn',), ('Olsztyn',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omaha',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Omdurman',), ('Ome',), ('Ome',), ('Ome',), ('Ome',), ('Ome',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omiya',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omsk',), ('Omuta',), ('Omuta',), ('Omuta',), ('Omuta',), ('Omuta',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ondo',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Ongole',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onitsha',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Onomichi',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Ontario',), ('Opole',), ('Opole',), ('Opole',), ('Opole',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Oradea',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Orai',), ('Oral',), ('Oral',), ('Oral',), ('Oral',), ('Oral',), ('Oran',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Orange',), ('Oranjestad',), ('Oranjestad',), ('Oranjestad',), ('Ordu',), ('Ordu',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orehovo-Zujevo',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orenburg',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orizaba',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orjol',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orlando',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Orléans',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Ormoc',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Orsk',), ('Oruro',), ('Orša',), ('Orša',), ('Orša',), ('Orša',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osaka',), ('Osasco',), ('Osasco',), ('Osasco',), ('Osasco',), ('Osh',), ('Osh',), ('Osh',), ('Osh',), ('Osh',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshawa',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Oshogbo',), ('Osijek',), ('Osijek',), ('Oslo',), ('Oslo',), ('Oslo',), ('Oslo',), ('Oslo',), ('Osmaniye',), ('Osmaniye',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osnabrück',), ('Osorno',), ('Osorno',), ('Osorno',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ostrava',), ('Ota',), ('Ota',), ('Ota',), ('Ota',), ('Ota',), ('Otaru',), ('Otaru',), ('Otaru',), ('Otaru',), ('Otaru',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Othón P. Blanco (Chetumal)',), ('Otsu',), ('Otsu',), ('Otsu',), ('Otsu',), ('Otsu',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ottawa',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Ouagadougou',), ('Oujda',), ('Oulu',), ('Oulu',), ('Oulu',), ('Oulu',), ('Oulu',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourense (Orense)',), ('Ourinhos',), ('Ourinhos',), ('Ourinhos',), ('Ourinhos',), ('Ovalle',), ('Ovalle',), ('Ovalle',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Overland Park',), ('Oviedo',), ('Oviedo',), ('Oviedo',), ('Oviedo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Owo',), ('Oxford',), ('Oxford',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oxnard',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyama',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Oyo',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Ozamis',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Paarl',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pabna',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Pachuca de Soto',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Padang Sidempuan',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Paderborn',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Padova',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagadian',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Pagakku (Pakokku)',), ('Paju',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Kret',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Pak Pattan',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palangka Raya',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palayankottai',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palembang',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palermo',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palghat (Palakkad)',), ('Palhoça',), ('Palhoça',), ('Palhoça',), ('Palhoça',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Pali',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Palikir',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Pallavaram',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palma de Mallorca',), ('Palmas',), ('Palmas',), ('Palmas',), ('Palmas',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmdale',), ('Palmira',), ('Palmira',), ('Palmira',), ('Palmira',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Palu',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Pamplona [Iruña]',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panabo',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panchiao',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Panevezys',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Pangkal Pinang',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panihati',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panipat',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panjin',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Panzhihua',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papantla',), ('Papeete',), ('Papeete',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Paradise',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Parakou',), ('Paramaribo',), ('Paramaribo',), ('Paranaguá',), ('Paranaguá',), ('Paranaguá',), ('Paranaguá',), ('Paraná',), ('Paraná',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parañaque',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Parbhani',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Pardubice',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Paris',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parma',), ('Parnamirim',), ('Parnamirim',), ('Parnamirim',), ('Parnamirim',), ('Parnaíba',), ('Parnaíba',), ('Parnaíba',), ('Parnaíba',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasadena',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasay',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Pasig',), ('Passo Fundo',), ('Passo Fundo',), ('Passo Fundo',), ('Passo Fundo',), ('Passos',), ('Passos',), ('Passos',), ('Passos',), ('Pasto',), ('Pasto',), ('Pasto',), ('Pasto',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Pasuruan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Patan',), ('Pate',), ('Pate',), ('Pate',), ('Pate',), ('Pate',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Paterson',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Pathankot',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patiala',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patna',), ('Patos',), ('Patos',), ('Patos',), ('Patos',), ('Patos de Minas',), ('Patos de Minas',), ('Patos de Minas',), ('Patos de Minas',), ('Patras',), ('Patras',), ('Paulista',), ('Paulista',), ('Paulista',), ('Paulista',), ('Paulo Afonso',), ('Paulo Afonso',), ('Paulo Afonso',), ('Paulo Afonso',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlodar',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pavlograd',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pegu (Bago)',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekalongan',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Pekan Baru',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Peking',), ('Pelotas',), ('Pelotas',), ('Pelotas',), ('Pelotas',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pemalang',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pematang Siantar',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Pembroke Pines',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Penza',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Peoria',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Percut Sei Tuan',), ('Pereira',), ('Pereira',), ('Pereira',), ('Pereira',), ('Peristerion',), ('Peristerion',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perm',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perpignan',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perth',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Perugia',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pervouralsk',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pesaro',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Pescara',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Peshawar',), ('Petah Tiqwa',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petaling Jaya',), ('Petare',), ('Petare',), ('Peterborough',), ('Peterborough',), ('Petrolina',), ('Petrolina',), ('Petrolina',), ('Petrolina',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavl',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petropavlovsk-Kamtšatski',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petroskoi',), ('Petrópolis',), ('Petrópolis',), ('Petrópolis',), ('Petrópolis',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Pforzheim',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Phan Thiêt',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Philadelphia',), ('Phnom Penh',), ('Phnom Penh',), ('Phnom Penh',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phoenix',), ('Phyongsong',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piacenza',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piatra Neamt',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Piedras Negras',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pietermaritzburg',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pihkova',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pikine',), ('Pilar',), ('Pilar',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pilibhit',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pimpri-Chinchwad',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pinang',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pindamonhangaba',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pinetown',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingchen',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdingshan',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingdu',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingliang',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingtung',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingxiang',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pingyi',), ('Pinhais',), ('Pinhais',), ('Pinhais',), ('Pinhais',), ('Pinsk',), ('Pinsk',), ('Pinsk',), ('Pinsk',), ('Piracicaba',), ('Piracicaba',), ('Piracicaba',), ('Piracicaba',), ('Pireus',), ('Pireus',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pisa',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pitesti',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pittsburgh',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Pjatigorsk',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Plano',), ('Pleven',), ('Pleven',), ('Pleven',), ('Pleven',), ('Plock',), ('Plock',), ('Plock',), ('Plock',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Ploiesti',), ('Plovdiv',), ('Plovdiv',), ('Plovdiv',), ('Plovdiv',), ('Plymouth',), ('Plymouth',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Plzen',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podgorica',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Podolsk',), ('Pohang',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pointe-Noire',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Pokhara',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Polomolok',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Pomona',), ('Ponce',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondicherry',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondok Aren',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Pondokgede',), ('Ponta Grossa',), ('Ponta Grossa',), ('Ponta Grossa',), ('Ponta Grossa',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Pontianak',), ('Poole',), ('Poole',), ('Popayán',), ('Popayán',), ('Popayán',), ('Popayán',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Porbandar',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Elizabeth',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Harcourt',), ('Port Moresby',), ('Port Moresby',), ('Port Said',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port Sudan',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-Louis',), ('Port-au-Prince',), ('Port-of-Spain',), ('Port-of-Spain',), ('Port-of-Spain',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portland',), ('Portmore',), ('Portmore',), ('Porto',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Alegre',), ('Porto Velho',), ('Porto Velho',), ('Porto Velho',), ('Porto Velho',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Porto-Novo',), ('Portoviejo',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Portsmouth',), ('Poryong',), ('Posadas',), ('Posadas',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potchefstroom',), ('Potosí',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Potsdam',), ('Pouso Alegre',), ('Pouso Alegre',), ('Pouso Alegre',), ('Pouso Alegre',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poza Rica de Hidalgo',), ('Poznan',), ('Poznan',), ('Poznan',), ('Poznan',), ('Pozuelos',), ('Pozuelos',), ('Poá',), ('Poá',), ('Poá',), ('Poá',), ('Poços de Caldas',), ('Poços de Caldas',), ('Poços de Caldas',), ('Poços de Caldas',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praha',), ('Praia',), ('Praia Grande',), ('Praia Grande',), ('Praia Grande',), ('Praia Grande',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Prato',), ('Presidente Prudente',), ('Presidente Prudente',), ('Presidente Prudente',), ('Presidente Prudente',), ('Preston',), ('Preston',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Pretoria',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prešov',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Prizren',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Priština',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Probolinggo',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Proddatur',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prokopjevsk',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Prome (Pyay)',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Providence',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Provo',), ('Puchon',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Pudukkottai',), ('Puebla',), ('Puebla',), ('Puebla',), ('Puebla',), ('Puebla',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Pueblo',), ('Puente Alto',), ('Puente Alto',), ('Puente Alto',), ('Puerto Cabello',), ('Puerto Cabello',), ('Puerto La Cruz',), ('Puerto La Cruz',), ('Puerto Montt',), ('Puerto Montt',), ('Puerto Montt',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Princesa',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Puerto Vallarta',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pultava [Poltava]',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Pune',), ('Punta Arenas',), ('Punta Arenas',), ('Punta Arenas',), ('Punto Fijo',), ('Punto Fijo',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puqi',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Puri',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purnea (Purnia)',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purulia',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwakarta',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Purwokerto',), ('Pusan',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Putian',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puyang',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Puškin',), ('Pyongtaek',), ('Pyongyang',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pánuco',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pécs',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Pénjamo',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qaemshahr',), ('Qalyub',), ('Qandahar',), ('Qandahar',), ('Qandahar',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaraghandy',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qaramay',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qarchak',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qashqar',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qazvin',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qianjiang',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qidong',), ('Qina',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingdao',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingyuan',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qingzhou',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinhuangdao',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qinzhou',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qiqihar',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qitaihe',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qods',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qom',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qomsheh',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Qostanay',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Quanzhou',), ('Queimados',), ('Queimados',), ('Queimados',), ('Queimados',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Quelimane',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Querétaro',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetta',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quetzaltenango',), ('Quevedo',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quezon',), ('Quilmes',), ('Quilmes',), ('Quilpué',), ('Quilpué',), ('Quilpué',), ('Quito',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qujing',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Qutubullapur',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quy Nhon',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Quzhou',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Québec',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Qyzylorda',), ('Rabat',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Rach Gia',), ('Radom',), ('Radom',), ('Radom',), ('Radom',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rae Bareli',), ('Rafah',), ('Rafah',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rafsanjan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Rahim Yar Khan',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raichur',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raiganj',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raigarh',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raipur',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Raj Nandgaon',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajahmundry',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajapalaiyam',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajkot',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Rajshahi',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Raleigh',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramagundam',), ('Ramat Gan',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rampur',), ('Rancagua',), ('Rancagua',), ('Rancagua',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Ranchi',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Rancho Cucamonga',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randburg',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Randfontein',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangoon (Yangon)',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rangpur',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Rasht',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratingen',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Ratlam',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Raurkela Civil Township',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Ravenna',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Rawalpindi',), ('Reading',), ('Reading',), ('Recife',), ('Recife',), ('Recife',), ('Recife',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Recklinghausen',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Regensburg',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio di Calabria',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Reggio nell´ Emilia',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Regina',), ('Rehovot',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Reims',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Remscheid',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Rennes',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Reno',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Renqiu',), ('Resende',), ('Resende',), ('Resende',), ('Resende',), ('Resistencia',), ('Resistencia',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Resita',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Reutlingen',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Rewa',), ('Reykjavík',), ('Reykjavík',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Reynosa',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Pires',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão Preto',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Ribeirão das Neves',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Richmond Hill',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Riga',), ('Rijeka',), ('Rijeka',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rimini',), ('Rio Branco',), ('Rio Branco',), ('Rio Branco',), ('Rio Branco',), ('Rio Claro',), ('Rio Claro',), ('Rio Claro',), ('Rio Claro',), ('Rio Grande',), ('Rio Grande',), ('Rio Grande',), ('Rio Grande',), ('Rio Verde',), ('Rio Verde',), ('Rio Verde',), ('Rio Verde',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rio de Janeiro',), ('Rishon Le Ziyyon',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Rishra',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Riverside',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rivne',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rizhao',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Rjazan',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Roanoke',), ('Rochdale',), ('Rochdale',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rochester',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rockford',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rodriguez (Montalban)',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Rohtak',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Roma',), ('Rondonópolis',), ('Rondonópolis',), ('Rondonópolis',), ('Rondonópolis',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Roodepoort',), ('Rosario',), ('Rosario',), ('Roseau',), ('Roseau',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostock',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rostov-na-Donu',), ('Rotherham',), ('Rotherham',), ('Rotterdam',), ('Rotterdam',), ('Rotterdam',), ('Rotterdam',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Roubaix',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Rouen',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Roxas',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Rubtsovsk',), ('Ruda Slaska',), ('Ruda Slaska',), ('Ruda Slaska',), ('Ruda Slaska',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rudnyy',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rufisque',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Rui´an',), ('Ruse',), ('Ruse',), ('Ruse',), ('Ruse',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustavi',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rustenburg',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybinsk',), ('Rybnik',), ('Rybnik',), ('Rybnik',), ('Rybnik',), ('Rzeszów',), ('Rzeszów',), ('Rzeszów',), ('Rzeszów',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Râmnicu Vâlcea',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Bravo',), ('Río Cuarto',), ('Río Cuarto',), ('Ríobamba',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saanich',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Saarbrücken',), ('Sabadell',), ('Sabadell',), ('Sabadell',), ('Sabadell',), ('Sabará',), ('Sabará',), ('Sabará',), ('Sabará',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sabzevar',), ('Sachon',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sacramento',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Sadiqabad',), ('Safi',), ('Saga',), ('Saga',), ('Saga',), ('Saga',), ('Saga',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagamihara',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagar',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Sagay',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Saharanpur',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Sahiwal',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saidpur',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint Catharines',), ('Saint George´s',), ('Saint Helens',), ('Saint Helens',), ('Saint Helier',), ('Saint Helier',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint John´s',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Louis',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Paul',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint Petersburg',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Denis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Saint-Louis',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakado',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakai',), ('Sakarya (Adapazari)',), ('Sakarya (Adapazari)',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakata',), ('Sakura',), ('Sakura',), ('Sakura',), ('Sakura',), ('Sakura',), ('Salala',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salamanca',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salatiga',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salavat',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salem',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salerno',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salinas',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salt Lake City',), ('Salta',), ('Salta',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Saltillo',), ('Salto',), ('Salto',), ('Salto',), ('Salto',), ('Salvador',), ('Salvador',), ('Salvador',), ('Salvador',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salvatierra',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzburg',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salzgitter',), ('Salé',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samara',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarinda',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Samarkand',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambalpur',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Sambhal',), ('Samsun',), ('Samsun',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Andrés Tuxtla',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Antonio',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardino',), ('San Bernardo',), ('San Bernardo',), ('San Bernardo',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Buenaventura',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Carlos',), ('San Cristóbal',), ('San Cristóbal',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Cristóbal de las Casas',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Diego',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe',), ('San Felipe de Puerto Plata',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Felipe del Progreso',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando',), ('San Fernando de Apure',), ('San Fernando de Apure',), ('San Fernando del Valle de Cata',), ('San Fernando del Valle de Cata',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco',), ('San Francisco de Macorís',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Francisco del Rincón',), ('San Isidro',), ('San Isidro',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San Jose',), ('San José',), ('San José',), ('San José',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San José del Monte',), ('San Juan',), ('San Juan',), ('San Juan',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan Bautista Tuxtepec',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Monte',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Juan del Río',), ('San Lorenzo',), ('San Lorenzo',), ('San Luis',), ('San Luis',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Potosí',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis Río Colorado',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Luis de la Paz',), ('San Marino',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Martín Texmelucan',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Mateo',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel',), ('San Miguel de Tucumán',), ('San Miguel de Tucumán',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Miguelito',), ('San Nicolás de los Arroyos',), ('San Nicolás de los Arroyos',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Nicolás de los Garza',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pablo',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Cholula',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Garza García',), ('San Pedro Sula',), ('San Pedro Sula',), ('San Pedro Sula',), ('San Pedro de Macorís',), ('San Pedro de la Paz',), ('San Pedro de la Paz',), ('San Pedro de la Paz',), ('San Rafael',), ('San Rafael',), ('San Salvador',), ('San Salvador de Jujuy',), ('San Salvador de Jujuy',), ('Sanaa',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanandaj',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanchung',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sanda',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandakan',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sandy',), ('Sangju',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sangli',), ('Sanliurfa',), ('Sanliurfa',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanmenxia',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Sanming',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana',), ('Santa Ana de Coro',), ('Santa Ana de Coro',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Bárbara d´Oeste',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Catarina',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clara',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Clarita',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Coloma de Gramenet',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de Tenerife',), ('Santa Cruz de la Sierra',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Cruz do Sul',), ('Santa Fé',), ('Santa Fé',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Luzia',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Maria',), ('Santa Marta',), ('Santa Marta',), ('Santa Marta',), ('Santa Marta',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Monica',), ('Santa Rita',), ('Santa Rita',), ('Santa Rita',), ('Santa Rita',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santa Rosa',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santafé de Bogotá',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santana do Livramento',), ('Santander',), ('Santander',), ('Santander',), ('Santander',), ('Santarém',), ('Santarém',), ('Santarém',), ('Santarém',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago Ixcuintla',), ('Santiago de Chile',), ('Santiago de Chile',), ('Santiago de Chile',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de Compostela',), ('Santiago de los Caballeros',), ('Santiago del Estero',), ('Santiago del Estero',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santipur',), ('Santo André',), ('Santo André',), ('Santo André',), ('Santo André',), ('Santo Domingo de Guzmán',), ('Santo Domingo de los Colorados',), ('Santos',), ('Santos',), ('Santos',), ('Santos',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sanya',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapele',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapporo',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Sapucaia do Sul',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Saqqez',), ('Sarajevo',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Saransk',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Sarapul',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Saratov',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sargodha',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sari',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariaya',), ('Sariwon',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasaram',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Sasebo',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Saskatoon',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Sassari',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satara',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satna',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Satu Mare',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannah',), ('Savannakhet',), ('Savannakhet',), ('Savannakhet',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Saveh',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawangan',), ('Sawhaj',), ('Sayama',), ('Sayama',), ('Sayama',), ('Sayama',), ('Sayama',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Scarborough',), ('Schaan',), ('Schaan',), ('Schaan',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schaerbeek',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Schwerin',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Scottsdale',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Seattle',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Secunderabad',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Sekondi-Takoradi',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Selayang Baru',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semarang',), ('Semey',), ('Semey',), ('Semey',), ('Semey',), ('Semey',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Semnan',), ('Sendai',), ('Sendai',), ('Sendai',), ('Sendai',), ('Sendai',), ('Seoul',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serampore',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serang',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Serekunda',), ('Seremban',), ('Seremban',), ('Seremban',), ('Seremban',), ('Seremban',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Sergijev Posad',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serpuhov',), ('Serra',), ('Serra',), ('Serra',), ('Serra',), ('Serravalle',), ('Sertãozinho',), ('Sertãozinho',), ('Sertãozinho',), ('Sertãozinho',), ('Sete Lagoas',), ('Sete Lagoas',), ('Sete Lagoas',), ('Sete Lagoas',), ('Seto',), ('Seto',), ('Seto',), ('Seto',), ('Seto',), ('Settat',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Sevastopol',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Severodvinsk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Seversk',), ('Sevilla',), ('Sevilla',), ('Sevilla',), ('Sevilla',), ('Sfax',), ('Sfax',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shagamu',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shah Alam',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahjahanpur',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahr-e Kord',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shahrud',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shaki',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shambajinagar (Aurangabad)',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shanghai',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangqiu',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangrao',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shangzi',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shantou',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shanwei',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaoguan',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaowu',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoxing',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Shaoyang',), ('Sharja',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Sharq al-Nil',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Shashi',), ('Sheffield',), ('Sheffield',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Sheikhupura',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenyang',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shenzhen',), ('Shibin al-Kawm',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihezi',), ('Shihung',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shijiazhuang',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shikarpur',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shillong',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimizu',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimoga',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shimonoseki',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shiraz',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shishou',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shivapuri',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shiyan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuishan',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shizuoka',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shomolu',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shreveport',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangcheng',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shuangyashan',), ('Shubra al-Khayma',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shulin',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Shymkent',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sialkot',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibiu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sibu',), ('Sidi Bel Abbès',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siegen',), ('Siem Reap',), ('Siem Reap',), ('Siem Reap',), ('Siirt',), ('Siirt',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Sikar',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silang',), ('Silao',), ('Silao',), ('Silao',), ('Silao',), ('Silao',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silay',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Silchar',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Siliguri (Shiliguri)',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simferopol',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Simi Valley',), ('Sincelejo',), ('Sincelejo',), ('Sincelejo',), ('Sincelejo',), ('Sinuiju',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Sioux Falls',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Siping',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirajganj',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirjan',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sirsa',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sitapur',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sittwe (Akyab)',), ('Sivas',), ('Sivas',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Sjeverodonetsk',), ('Skikda',), ('Skopje',), ('Skopje',), ('Skopje',), ('Skopje',), ('Skopje',), ('Sliven',), ('Sliven',), ('Sliven',), ('Sliven',), ('Slough',), ('Slough',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slovjansk',), ('Slupsk',), ('Slupsk',), ('Slupsk',), ('Slupsk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Smolensk',), ('Soacha',), ('Soacha',), ('Soacha',), ('Soacha',), ('Sobral',), ('Sobral',), ('Sobral',), ('Sobral',), ('Sofija',), ('Sofija',), ('Sofija',), ('Sofija',), ('Sogamoso',), ('Sogamoso',), ('Sogamoso',), ('Sogamoso',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Sohumi',), ('Soka',), ('Soka',), ('Soka',), ('Soka',), ('Soka',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Sokoto',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Solapur (Sholapur)',), ('Soledad',), ('Soledad',), ('Soledad',), ('Soledad',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soledad de Graciano Sánchez',), ('Soligorsk',), ('Soligorsk',), ('Soligorsk',), ('Soligorsk',), ('Solihull',), ('Solihull',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solikamsk',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Solingen',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songkhla',), ('Songnam',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sonipat (Sonepat)',), ('Sorocaba',), ('Sorocaba',), ('Sorocaba',), ('Sorocaba',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sorsogon',), ('Sosan',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Soshanguve',), ('Sosnowiec',), ('Sosnowiec',), ('Sosnowiec',), ('Sosnowiec',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sotši',), ('Sousse',), ('Sousse',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Bend',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('South Dum Dum',), ('Southampton',), ('Southampton',), ('Southend-on-Sea',), ('Southend-on-Sea',), ('Southport',), ('Southport',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soweto',), ('Soyapango',), ('Spanish Town',), ('Spanish Town',), ('Split',), ('Split',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Spokane',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springfield',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Springs',), ('Sri Jayawardenepura Kotte',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('Srinagar',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St Petersburg',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('St-Étienne',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stahanov',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stamford',), ('Stara Zagora',), ('Stara Zagora',), ('Stara Zagora',), ('Stara Zagora',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Staryi Oskol',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavanger',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Stavropol',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterling Heights',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Sterlitamak',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockholm',), ('Stockport',), ('Stockport',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stockton',), ('Stoke-on-Trent',), ('Stoke-on-Trent',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Strasbourg',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Stuttgart',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Subotica',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Suceava',), ('Sucre',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Sudbury',), ('Suez',), ('Suhar',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suihua',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suining',), ('Suita',), ('Suita',), ('Suita',), ('Suita',), ('Suita',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Suizhou',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukabumi',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sukkur',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultan Kudarat',), ('Sultanbeyli',), ('Sultanbeyli',), ('Sumaré',), ('Sumaré',), ('Sumaré',), ('Sumaré',), ('Sumqayit',), ('Sumqayit',), ('Sumqayit',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sumy',), ('Sunchon',), ('Sunderland',), ('Sunderland',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sundsvall',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sungai Petani',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunggal',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunnyvale',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Sunrise Manor',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Suqian',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surabaya',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surakarta',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surat',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surendranagar',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surgut',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surigao',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Surrey',), ('Sutton Coldfield',), ('Sutton Coldfield',), ('Suva',), ('Suwon',), ('Suzano',), ('Suzano',), ('Suzano',), ('Suzano',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzhou',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Suzuka',), ('Swansea',), ('Swansea',), ('Swindon',), ('Swindon',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Sydney',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Syktyvkar',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Sylhet',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syracuse',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syrakusa',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Syzran',), ('Szczecin',), ('Szczecin',), ('Szczecin',), ('Szczecin',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Szeged',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('Székesfehérvár',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Bernardo do Campo',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Caetano do Sul',), ('São Carlos',), ('São Carlos',), ('São Carlos',), ('São Carlos',), ('São Gonçalo',), ('São Gonçalo',), ('São Gonçalo',), ('São Gonçalo',), ('São José',), ('São José',), ('São José',), ('São José',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José de Ribamar',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José do Rio Preto',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Campos',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São José dos Pinhais',), ('São João de Meriti',), ('São João de Meriti',), ('São João de Meriti',), ('São João de Meriti',), ('São Leopoldo',), ('São Leopoldo',), ('São Leopoldo',), ('São Leopoldo',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Lourenço da Mata',), ('São Luís',), ('São Luís',), ('São Luís',), ('São Luís',), ('São Paulo',), ('São Paulo',), ('São Paulo',), ('São Paulo',), ('São Tomé',), ('São Tomé',), ('São Vicente',), ('São Vicente',), ('São Vicente',), ('São Vicente',), ('Sétif',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabaco',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Tabora',), ('Taboão da Serra',), ('Taboão da Serra',), ('Taboão da Serra',), ('Taboão da Serra',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tabriz',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tachikawa',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacloban',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Tacoma',), ('Taegu',), ('Taejon',), ('Tafuna',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taganrog',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Taguig',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Tagum',), ('Taichung',), ('Taichung',), ('Taichung',), ('Taichung',), ('Taichung',), ('Tainan',), ('Tainan',), ('Tainan',), ('Tainan',), ('Tainan',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taipei',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taiping',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taitung',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taiyuan',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizhou',), ('Taizz',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tai´an',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Tajimi',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takamatsu',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takaoka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takarazuka',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasago',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takasaki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Takatsuki',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talavera',), ('Talca',), ('Talca',), ('Talca',), ('Talcahuano',), ('Talcahuano',), ('Talcahuano',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Taldyqorghan',), ('Tali',), ('Tali',), ('Tali',), ('Tali',), ('Tali',), ('Taliao',), ('Taliao',), ('Taliao',), ('Taliao',), ('Taliao',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talisay',), ('Talkha',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallahassee',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tallinn',), ('Tama',), ('Tama',), ('Tama',), ('Tama',), ('Tama',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Tamale',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Taman',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambaram',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tambov',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampa',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampere',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tampico',), ('Tamuning',), ('Tamuning',), ('Tamuning',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tanauan',), ('Tandil',), ('Tandil',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tando Adam',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tanga',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tangail',), ('Tanger',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangerang',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tangshan',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanjung Pinang',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanshui',), ('Tanta',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tantoyuca',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Tanza',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taonan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Taoyuan',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Tapachula',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taranto',), ('Taraz',), ('Taraz',), ('Taraz',), ('Taraz',), ('Taraz',), ('Tarija',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarlac',), ('Tarnów',), ('Tarnów',), ('Tarnów',), ('Tarnów',), ('Tarragona',), ('Tarragona',), ('Tarragona',), ('Tarragona',), ('Tarsus',), ('Tarsus',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tartu',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tasikmalaya',), ('Tatuí',), ('Tatuí',), ('Tatuí',), ('Tatuí',), ('Taubaté',), ('Taubaté',), ('Taubaté',), ('Taubaté',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Taunggyi (Taunggye)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Tavoy (Dawei)',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taxco de Alarcón',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taytay',), ('Taza',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tbilisi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tebing Tinggi',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecomán',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tecámac',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegal',), ('Tegucigalpa',), ('Tegucigalpa',), ('Tegucigalpa',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Teheran',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Tehuacán',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Teixeira de Freitas',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tejupilco',), ('Tekirdag',), ('Tekirdag',), ('Tel Aviv-Jaffa',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tellicherry (Thalassery)',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Tema',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temapache',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temirtau',), ('Temixco',), ('Temixco',), ('Temixco',), ('Temixco',), ('Temixco',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Tempe',), ('Temuco',), ('Temuco',), ('Temuco',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tenali',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tengzhou',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepatitlán de Morelos',), ('Tepic',), ('Tepic',), ('Tepic',), ('Tepic',), ('Tepic',), ('Teresina',), ('Teresina',), ('Teresina',), ('Teresina',), ('Teresópolis',), ('Teresópolis',), ('Teresópolis',), ('Teresópolis',), ('Termiz',), ('Termiz',), ('Termiz',), ('Termiz',), ('Termiz',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Terni',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Ternopil',), ('Terrassa',), ('Terrassa',), ('Terrassa',), ('Terrassa',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Tete',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Texcoco',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Teófilo Otoni',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thai Nguyen',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thane (Thana)',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thanjavur',), ('Thessaloniki',), ('Thessaloniki',), ('Thimphu',), ('Thimphu',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiruvananthapuram (Trivandrum',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thiès',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thousand Oaks',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Thunder Bay',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianjin',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianmen',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tianshui',), ('Tiaret',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tiefa',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieli',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tieling',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tierra Blanca',), ('Tigre',), ('Tigre',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tijuana',), ('Tilburg',), ('Tilburg',), ('Tilburg',), ('Tilburg',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timisoara',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timkur',), ('Timon',), ('Timon',), ('Timon',), ('Timon',), ('Tirana',), ('Tirana',), ('Tirana',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiraspol',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tiruchirapalli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirunelveli',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tirupati',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruppur (Tirupper)',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvannamalai',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Tiruvottiyur',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Titagarh',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tjumen',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlajomulco de Zúñiga',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlalnepantla de Baz',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlaquepaque',), ('Tlemcen (Tilimsen)',), ('Toa Baja',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Tobolsk',), ('Toda',), ('Toda',), ('Toda',), ('Toda',), ('Toda',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokai',), ('Tokat',), ('Tokat',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokorozawa',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokushima',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokuyama',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Tokyo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toledo',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toljatti',), ('Toluca',), ('Toluca',), ('Toluca',), ('Toluca',), ('Toluca',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomakomai',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tomsk',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tonalá',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tondabayashi',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong Xian',), ('Tong-yong',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tongchuan',), ('Tonghae',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tonghua',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongliao',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tongling',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Tonk',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Topeka',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torbat-e Heydariyeh',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Torino',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Toronto',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torrance',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torre del Greco',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torrejón de Ardoz',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torreón',), ('Torun',), ('Torun',), ('Torun',), ('Torun',), ('Toskent',), ('Toskent',), ('Toskent',), ('Toskent',), ('Toskent',), ('Tottori',), ('Tottori',), ('Tottori',), ('Tottori',), ('Tottori',), ('Touliu',), ('Touliu',), ('Touliu',), ('Touliu',), ('Touliu',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulon',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Toulouse',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tourcoing',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Tours',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Townsville',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyama',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyohashi',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyokawa',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyonaka',), ('Toyota',), ('Toyota',), ('Toyota',), ('Toyota',), ('Toyota',), ('Trabzon',), ('Trabzon',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Trento',), ('Tres de Febrero',), ('Tres de Febrero',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trier',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Trieste',), ('Tripoli',), ('Tripoli',), ('Tripoli',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Trondheim',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tsaotun',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tshikapa',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsu',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsuchiura',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsukuba',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuruoka',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tsuyama',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucheng',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tucson',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tuguegarao',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tula',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulancingo de Bravo',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulcea',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tulsa',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultepec',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tultitlán',), ('Tuluá',), ('Tuluá',), ('Tuluá',), ('Tuluá',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tumen',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tungi',), ('Tunis',), ('Tunis',), ('Tunja',), ('Tunja',), ('Tunja',), ('Tunja',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turku [Åbo]',), ('Turmero',), ('Turmero',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuticorin',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tuxtla Gutiérrez',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tver',), ('Tychy',), ('Tychy',), ('Tychy',), ('Tychy',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgoviste',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Jiu',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Târgu Mures',), ('Tébessa',), ('Témara',), ('Tétouan',), ('Tórshavn',), ('Tórshavn',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Túxpam',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšaikovski',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeboksary',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšeljabinsk',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerepovets',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkasy',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšerkessk',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernigiv',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšernivtsi',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Tšita',), ('Ube',), ('Ube',), ('Ube',), ('Ube',), ('Ube',), ('Uberaba',), ('Uberaba',), ('Uberaba',), ('Uberaba',), ('Uberlândia',), ('Uberlândia',), ('Uberlândia',), ('Uberlândia',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Ubon Ratchathani',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udaipur',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udine',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Udon Thani',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ueda',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ufa',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Ugep',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uhta',), ('Uijongbu',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uitenhage',), ('Uiwang',), ('Uji',), ('Uji',), ('Uji',), ('Uji',), ('Uji',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujjain',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ujung Pandang',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan Bator',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulan-Ude',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulanhot',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Ulhasnagar',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Uljanovsk',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulm',), ('Ulsan',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uluberia',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Uman',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umeå',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Umlazi',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Unnao',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Uppsala',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urasoe',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urawa',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urayasu',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urdaneta',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Urmia',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruapan',), ('Uruguaiana',), ('Uruguaiana',), ('Uruguaiana',), ('Uruguaiana',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Urumtši [Ürümqi]',), ('Usak',), ('Usak',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Usolje-Sibirskoje',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ussurijsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Ust-Ilimsk',), ('Utrecht',), ('Utrecht',), ('Utrecht',), ('Utrecht',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Utsunomiya',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uttarpara-Kotrung',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uvira',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Uzgorod',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vacoas-Phoenix',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vadodara (Baroda)',), ('Vaduz',), ('Vaduz',), ('Vaduz',), ('Valdivia',), ('Valdivia',), ('Valdivia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valencia',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valenzuela',), ('Valera',), ('Valera',), ('Valladolid',), ('Valladolid',), ('Valladolid',), ('Valladolid',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Chalco Solidaridad',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de Santiago',), ('Valle de la Pascua',), ('Valle de la Pascua',), ('Valledupar',), ('Valledupar',), ('Valledupar',), ('Valledupar',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Vallejo',), ('Valletta',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparai',), ('Valparaíso',), ('Valparaíso',), ('Valparaíso',), ('Van',), ('Van',), ('Vanadzor',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vancouver',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vanderbijlpark',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Vantaa',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varamin',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varanasi (Benares)',), ('Varginha',), ('Varginha',), ('Varginha',), ('Varginha',), ('Varna',), ('Varna',), ('Varna',), ('Varna',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vaughan',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Vejalpur',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Velbert',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Veliki Novgorod',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Velikije Luki',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Vellore',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Venezia',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veracruz',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Veraval',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Vereeniging',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Verona',), ('Viamão',), ('Viamão',), ('Viamão',), ('Viamão',), ('Vicente López',), ('Vicente López',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Vicenza',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Victoria',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vidisha',), ('Vientiane',), ('Vientiane',), ('Vientiane',), ('Vigo',), ('Vigo',), ('Vigo',), ('Vigo',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vihari',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vijayawada',), ('Vila Velha',), ('Vila Velha',), ('Vila Velha',), ('Vila Velha',), ('Villa Nueva',), ('Villa Nueva',), ('Villa Nueva',), ('Villa Nueva',), ('Villavicencio',), ('Villavicencio',), ('Villavicencio',), ('Villavicencio',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Villeurbanne',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vilnius',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinh',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Vinnytsja',), ('Viransehir',), ('Viransehir',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Virginia Beach',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Visalia',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vishakhapatnam',), ('Vitebsk',), ('Vitebsk',), ('Vitebsk',), ('Vitebsk',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitoria-Gasteiz',), ('Vitória',), ('Vitória',), ('Vitória',), ('Vitória',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória da Conquista',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vitória de Santo Antão',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Vizianagaram',), ('Viña del Mar',), ('Viña del Mar',), ('Viña del Mar',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladikavkaz',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladimir',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Vladivostok',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgodonsk',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Volgograd',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Vologda',), ('Volta Redonda',), ('Volta Redonda',), ('Volta Redonda',), ('Volta Redonda',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Volzski',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Vorkuta',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Voronez',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votkinsk',), ('Votorantim',), ('Votorantim',), ('Votorantim',), ('Votorantim',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Vung Tau',), ('Várzea Grande',), ('Várzea Grande',), ('Várzea Grande',), ('Várzea Grande',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Västerås',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Waco',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wad Madani',), ('Wadi al-Sir',), ('Wadi al-Sir',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wafangdian',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Wah',), ('Waitakere',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Wakayama',), ('Walbrzych',), ('Walbrzych',), ('Walbrzych',), ('Walbrzych',), ('Walsall',), ('Walsall',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Wanxian',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Warangal',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Wardha',), ('Warraq al-Arab',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warren',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warri',), ('Warszawa',), ('Warszawa',), ('Warszawa',), ('Warszawa',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Waru',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Washington',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Waterbury',), ('Watford',), ('Watford',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Wazirabad',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weifang',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weihai',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Weinan',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Welkom',), ('Wellington',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Wendeng',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Weno',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('Wenzhou',), ('West Bromwich',), ('West Bromwich',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Covina',), ('West Island',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('West Valley City',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westminster',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Westonaria',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wichita Falls',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wien',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Wiesbaden',), ('Willemstad',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windhoek',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Windsor',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winnipeg',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Winston-Salem',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witbank',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Witten',), ('Wloclawek',), ('Wloclawek',), ('Wloclawek',), ('Wloclawek',), ('Woking/Byfleet',), ('Woking/Byfleet',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wolfsburg',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wollongong',), ('Wolverhampton',), ('Wolverhampton',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonderboom',), ('Wonju',), ('Wonsan',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worcester',), ('Worthing',), ('Worthing',), ('Wroclaw',), ('Wroclaw',), ('Wroclaw',), ('Wroclaw',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhai',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhan',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuhu',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuppertal',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuwei',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuxi',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Wuzhou',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Würzburg',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xai-Xai',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xalapa',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangfan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xiangtan',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xianning',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xiantao',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xianyang',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaogan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xiaoshan',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xichang',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xilin Hot',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xingcheng',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xinghua',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xingtai',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xining',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xintai',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinxiang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyang',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinyu',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xinzhou',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xi´an',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuangzhou',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuchang',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Xuzhou',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yachiyo',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yaizu',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yakeshi',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamagata',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamaguchi',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamato',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamatokoriyama',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamoussoukro',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yamuna Nagar',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yancheng',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangjiang',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangmei',), ('Yangor',), ('Yangor',), ('Yangor',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangquan',), ('Yangsan',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yangzhou',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yanji',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yantai',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yan´an',), ('Yao',), ('Yao',), ('Yao',), ('Yao',), ('Yao',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaoundé',), ('Yaren',), ('Yaren',), ('Yaren',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yatsushiro',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Yazd',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Ya´an',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yeotmal (Yavatmal)',), ('Yerevan',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yibin',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichang',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yichun',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yinchuan',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yingkou',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yixing',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yiyang',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yizheng',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yogyakarta',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokkaichi',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yokosuka',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonago',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yonezawa',), ('Yong-in',), ('Yongchon',), ('Yongju',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yong´an',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('Yonkers',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('York',), ('Yosu',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanjiang',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuanlin',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yuci',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yueyang',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yulin',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yumen',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yuncheng',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungho',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yungkang',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yushu',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuyao',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Yuzhou',), ('Zaanstad',), ('Zaanstad',), ('Zaanstad',), ('Zaanstad',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabol',), ('Zabrze',), ('Zabrze',), ('Zabrze',), ('Zabrze',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zacatecas',), ('Zagazig',), ('Zagreb',), ('Zagreb',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zahedan',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zalantun',), ('Zama',), ('Zama',), ('Zama',), ('Zama',), ('Zama',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamboanga',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zamora',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanjan',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zanzibar',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaoyang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zaozhuang',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zapopan',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaporizzja',), ('Zaragoza',), ('Zaragoza',), ('Zaragoza',), ('Zaragoza',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zaria',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenodolsk',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zelenograd',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznodoroznyi',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zeleznogorsk',), ('Zenica',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangjiang',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhangzhou',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaodong',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhaoqing',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhengzhou',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhenjiang',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhezqazghan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhongshan',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoukou',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhoushan',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhucheng',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhuhai',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhumadian',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zhuzhou',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zibo',), ('Zielona Góra',), ('Zielona Góra',), ('Zielona Góra',), ('Zielona Góra',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Zigong',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Ziguinchor',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinacantepec',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zinder',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zitácuaro',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zixing',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zlatoust',), ('Zoetermeer',), ('Zoetermeer',), ('Zoetermeer',), ('Zoetermeer',), ('Zonguldak',), ('Zonguldak',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zukovski',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zumpango',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zunyi',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwickau',), ('Zwolle',), ('Zwolle',), ('Zwolle',), ('Zwolle',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zytomyr',), ('Zürich',), ('Zürich',), ('Zürich',), ('Zürich',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('[San Cristóbal de] la Laguna',), ('al-Amara',), ('al-Amara',), ('al-Amara',), ('al-Amara',), ('al-Arish',), ('al-Ayn',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Diwaniya',), ('al-Faiyum',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Fashir',), ('al-Hawamidiya',), ('al-Hilla',), ('al-Hilla',), ('al-Hilla',), ('al-Hilla',), ('al-Kut',), ('al-Kut',), ('al-Kut',), ('al-Kut',), ('al-Mahallat al-Kubra',), ('al-Manama',), ('al-Mansura',), ('al-Minya',), ('al-Mukalla',), ('al-Najaf',), ('al-Najaf',), ('al-Najaf',), ('al-Najaf',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Nasiriya',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qadarif',), ('al-Qamishliya',), ('al-Ramadi',), ('al-Ramadi',), ('al-Ramadi',), ('al-Ramadi',), ('al-Raqqa',), ('al-Rusayfa',), ('al-Rusayfa',), ('al-Salimiya',), ('al-Sib',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Sulaymaniya',), ('al-Zarqa',), ('al-Zarqa',), ('al-Zawiya',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('´s-Hertogenbosch',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Águas Lindas de Goiás',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Århus',), ('Çorlu',), ('Çorlu',), ('Çorum',), ('Çorum',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Örebro',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Öskemen',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ústí nad Labem',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Ürgenc',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šahty',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šiauliai',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Šostka',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Štšolkovo',), ('Šumen',), ('Šumen',), ('Šumen',), ('Šumen',)]",False
786,Which unique cities are in Asian countries where Chinese is the official language ?,hard,spider_data/database/world_1/world_1.sqlite,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.IsOfficial = 'T' AND T3.Language = 'Chinese',"Not match: [] != [('Acheng',), ('Amoy [Xiamen]',), ('Anda',), ('Ankang',), ('Anqing',), ('Anshan',), ('Anshun',), ('Anyang',), ('Aqsu',), ('Baicheng',), ('Baiyin',), ('Baoding',), ('Baoji',), ('Baotou',), ('Beihai',), ('Beipiao',), ('Bei´an',), ('Bengbu',), ('Benxi',), ('Binzhou',), ('Bose',), ('Bozhou',), ('Cangzhou',), ('Changchun',), ('Changde',), ('Changji',), ('Changsha',), ('Changshu',), ('Changzhi',), ('Changzhou',), ('Chaohu',), ('Chaoyang',), ('Chaozhou',), ('Chengde',), ('Chengdu',), ('Chenzhou',), ('Chifeng',), ('Chongqing',), ('Chuzhou',), ('Cixi',), ('Dali',), ('Dalian',), ('Dandong',), ('Danjiangkou',), ('Danyang',), ('Daqing',), ('Datong',), ('Daxian',), ('Da´an',), ('Deyang',), ('Dezhou',), ('Dongtai',), ('Dongwan',), ('Dongying',), ('Dujiangyan',), ('Dunhua',), ('Duyun',), ('Emeishan',), ('Enshi',), ('Ezhou',), ('Fengcheng',), ('Foshan',), ('Fujin',), ('Fuling',), ('Fuqing',), ('Fushun',), ('Fuxin',), ('Fuyang',), ('Fuyu',), ('Fuzhou',), ('Fu´an',), ('Ganzhou',), ('Gejiu',), ('Ghulja',), ('Gongziling',), ('Guangshui',), ('Guangyuan',), ('Guigang',), ('Guilin',), ('Guiyang',), ('Haicheng',), ('Haikou',), ('Hailar',), ('Hailun',), ('Haining',), ('Hami',), ('Handan',), ('Hangzhou',), ('Hanzhong',), ('Harbin',), ('Hebi',), ('Hefei',), ('Hegang',), ('Hengshui',), ('Hengyang',), ('Heyuan',), ('Heze',), ('Hohhot',), ('Honghu',), ('Hongjiang',), ('Huadian',), ('Huaibei',), ('Huaihua',), ('Huainan',), ('Huaiyin',), ('Huai´an',), ('Huangshan',), ('Huangshi',), ('Huangyan',), ('Huaying',), ('Huizhou',), ('Hunjiang',), ('Huzhou',), ('Jiamusi',), ('Jiangmen',), ('Jiangyin',), ('Jiangyou',), ('Jiaohe',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaxing',), ('Jieyang',), ('Jilin',), ('Jinan',), ('Jinchang',), ('Jincheng',), ('Jingdezhen',), ('Jinhua',), ('Jining',), ('Jinmen',), ('Jinxi',), ('Jinzhou',), ('Jiujiang',), ('Jiutai',), ('Jixi',), ('Ji´an',), ('Junan',), ('Kaifeng',), ('Kaili',), ('Kaiyuan',), ('Kanton [Guangzhou]',), ('Korla',), ('Kunming',), ('Kunshan',), ('Kuytun',), ('Laiwu',), ('Laiyang',), ('Laizhou',), ('Langfang',), ('Lanzhou',), ('Laohekou',), ('Leiyang',), ('Lengshuijiang',), ('Leshan',), ('Lhasa',), ('Liangcheng',), ('Lianyuan',), ('Lianyungang',), ('Liaocheng',), ('Liaoyang',), ('Liaoyuan',), ('Liling',), ('Linchuan',), ('Linfen',), ('Linhai',), ('Linhe',), ('Linqing',), ('Linyi',), ('Liupanshui',), ('Liuzhou',), ('Liu´an',), ('Liyang',), ('Longjing',), ('Longkou',), ('Longyan',), ('Loudi',), ('Luohe',), ('Luoyang',), ('Luzhou',), ('Manzhouli',), ('Maoming',), ('Ma´anshan',), ('Meihekou',), ('Meixian',), ('Mianyang',), ('Mishan',), ('Mudanjiang',), ('Nanchang',), ('Nanchong',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanping',), ('Nantong',), ('Nanyang',), ('Neijiang',), ('Ningbo',), ('Panjin',), ('Panzhihua',), ('Peking',), ('Pingdingshan',), ('Pingdu',), ('Pingliang',), ('Pingxiang',), ('Pingyi',), ('Puqi',), ('Putian',), ('Puyang',), ('Qaramay',), ('Qashqar',), ('Qianjiang',), ('Qidong',), ('Qingdao',), ('Qingyuan',), ('Qingzhou',), ('Qinhuangdao',), ('Qinzhou',), ('Qiqihar',), ('Qitaihe',), ('Quanzhou',), ('Qujing',), ('Quzhou',), ('Renqiu',), ('Rizhao',), ('Rui´an',), ('Sanmenxia',), ('Sanming',), ('Sanya',), ('Shanghai',), ('Shangqiu',), ('Shangrao',), ('Shangzi',), ('Shantou',), ('Shanwei',), ('Shaoguan',), ('Shaowu',), ('Shaoxing',), ('Shaoyang',), ('Shashi',), ('Shenyang',), ('Shenzhen',), ('Shihezi',), ('Shijiazhuang',), ('Shishou',), ('Shiyan',), ('Shizuishan',), ('Shuangcheng',), ('Shuangyashan',), ('Singapore',), ('Siping',), ('Suihua',), ('Suining',), ('Suizhou',), ('Suqian',), ('Suzhou',), ('Taiyuan',), ('Taizhou',), ('Tai´an',), ('Tangshan',), ('Taonan',), ('Tengzhou',), ('Tianjin',), ('Tianmen',), ('Tianshui',), ('Tiefa',), ('Tieli',), ('Tieling',), ('Tong Xian',), ('Tongchuan',), ('Tonghua',), ('Tongliao',), ('Tongling',), ('Tumen',), ('Ulanhot',), ('Urumtši [Ürümqi]',), ('Wafangdian',), ('Wanxian',), ('Weifang',), ('Weihai',), ('Weinan',), ('Wendeng',), ('Wenzhou',), ('Wuhai',), ('Wuhan',), ('Wuhu',), ('Wuwei',), ('Wuxi',), ('Wuzhou',), ('Xiangfan',), ('Xiangtan',), ('Xianning',), ('Xiantao',), ('Xianyang',), ('Xiaogan',), ('Xiaoshan',), ('Xichang',), ('Xilin Hot',), ('Xingcheng',), ('Xinghua',), ('Xingtai',), ('Xining',), ('Xintai',), ('Xinxiang',), ('Xinyang',), ('Xinyu',), ('Xinzhou',), ('Xi´an',), ('Xuangzhou',), ('Xuchang',), ('Xuzhou',), ('Yakeshi',), ('Yancheng',), ('Yangjiang',), ('Yangquan',), ('Yangzhou',), ('Yanji',), ('Yantai',), ('Yan´an',), ('Ya´an',), ('Yibin',), ('Yichang',), ('Yichun',), ('Yinchuan',), ('Yingkou',), ('Yixing',), ('Yiyang',), ('Yizheng',), ('Yong´an',), ('Yuanjiang',), ('Yuci',), ('Yueyang',), ('Yulin',), ('Yumen',), ('Yuncheng',), ('Yushu',), ('Yuyao',), ('Yuzhou',), ('Zalantun',), ('Zaoyang',), ('Zaozhuang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangzhou',), ('Zhaodong',), ('Zhaoqing',), ('Zhengzhou',), ('Zhenjiang',), ('Zhongshan',), ('Zhoukou',), ('Zhoushan',), ('Zhucheng',), ('Zhuhai',), ('Zhumadian',), ('Zhuzhou',), ('Zibo',), ('Zigong',), ('Zixing',), ('Zunyi',)]",False
787,Return the different names of cities that are in Asia and for which Chinese is the official language.,hard,spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = ""Asia"" AND T3.IsOfficial = ""T"" AND T3.Language = ""Chinese""",,True
788,"What are the name, independence year, and surface area of the country with the smallest population?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1",,True
789,"Give the name, year of independence, and surface area of the country that has the lowest population.",medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1",,True
790,"What are the population, name and leader of the country with the largest area?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Population , Name , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","Not match: [('Russian Federation', '146934000', 'Vladimir Putin')] != [('146934000', 'Russian Federation', 'Vladimir Putin')]",False
791,"Give the name, population, and head of state for the country that has the largest area.",medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",,True
792,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name , COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
793,"What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name , COUNT(*) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
794,Find the number of cities in each district whose population is greater than the average population of cities?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
795,How many cities in each district have a population that is above the average population across all cities?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",,True
796,Find the government form name and total population for each government form whose average life expectancy is longer than 72.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
797,What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",,True
798,Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
799,"What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",,True
800,What are the names and areas of countries with the top 5 largest area?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
801,Return the names and surface areas of the 5 largest countries.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",,True
802,What are names of countries with the top 3 largest population?,medium,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
803,Return the names of the 3 most populated countries.,medium,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,,True
804,What are the names of the nations with the 3 lowest populations?,medium,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
805,Return the names of the 3 countries with the fewest people.,medium,spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,,True
806,how many countries are in Asia?,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE Continent = ""Asia""",,True
807,Count the number of countries in Asia.,easy,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","SELECT count(*) FROM country WHERE Continent = ""Asia""",,True
808,What are the names of the countries that are in the continent of Europe and have a population of 80000?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = ""80000""",,True
809,Give the names of countries that are in Europe and have a population equal to 80000.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = ""80000""",,True
810,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?,hard,spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
811,Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .,hard,spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
812,What are the cities whose population is between 160000 and 900000?,easy,spider_data/database/world_1/world_1.sqlite,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,,True
813,Return the names of cities that have a population between 160000 and 900000 .,easy,spider_data/database/world_1/world_1.sqlite,select name from city where population between 160000 and 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,,True
814,Which language is spoken by the largest number of countries?,hard,spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,,True
815,Give the language that is spoken in the most countries.,hard,spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,,True
816,What is the language spoken by the largest percentage of people in each country?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.Code AS CountryCode, T2.Language, MAX(T2.Percentage) AS MaxPercentage FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code ORDER BY MaxPercentage DESC LIMIT 1","Not match: [('Akan', 'CIV', '30.0'), ('Akan', 'GHA', '52.4'), ('Albaniana', 'ALB', '97.9'), ('Arabic', 'ARE', '42.0'), ('Arabic', 'BHR', '67.7'), ('Arabic', 'DZA', '86.0'), ('Arabic', 'EGY', '98.8'), ('Arabic', 'ESH', '100.0'), ('Arabic', 'IRQ', '77.2'), ('Arabic', 'JOR', '97.9'), ('Arabic', 'KWT', '78.1'), ('Arabic', 'LBN', '93.0'), ('Arabic', 'LBY', '96.0'), ('Arabic', 'MAR', '65.0'), ('Arabic', 'OMN', '76.7'), ('Arabic', 'PSE', '95.9'), ('Arabic', 'QAT', '40.7'), ('Arabic', 'SAU', '95.0'), ('Arabic', 'SDN', '49.4'), ('Arabic', 'SYR', '90.0'), ('Arabic', 'TUN', '69.9'), ('Arabic', 'YEM', '99.6'), ('Armenian', 'ARM', '93.4'), ('Azerbaijani', 'AZE', '89.0'), ('Bajan', 'BRB', '95.1'), ('Bambara', 'MLI', '31.8'), ('Belorussian', 'BLR', '65.6'), ('Bemba', 'ZMB', '29.7'), ('Bengali', 'BGD', '97.7'), ('Bislama', 'VUT', '56.6'), ('Bulgariana', 'BGR', '83.2'), ('Burmese', 'MMR', '69.0'), ('Canton Chinese', 'HKG', '88.7'), ('Canton Chinese', 'MAC', '85.6'), ('Chichewa', 'MWI', '58.3'), ('Chinese', 'CHN', '92.0'), ('Chinese', 'CXR', '0.0'), ('Chinese', 'SGP', '77.1'), ('Comorian', 'COM', '75.0'), ('Creole English', 'ATG', '95.7'), ('Creole English', 'BHS', '89.7'), ('Creole English', 'DMA', '100.0'), ('Creole English', 'GRD', '100.0'), ('Creole English', 'GUY', '96.4'), ('Creole English', 'JAM', '94.2'), ('Creole English', 'KNA', '100.0'), ('Creole English', 'VCT', '99.1'), ('Creole French', 'GLP', '95.0'), ('Creole French', 'GUF', '94.3'), ('Creole French', 'LCA', '80.0'), ('Creole French', 'MTQ', '96.6'), ('Creole French', 'MUS', '70.6'), ('Creole French', 'REU', '91.5'), ('Crioulo', 'CPV', '100.0'), ('Crioulo', 'GNB', '36.4'), ('Crioulo', 'STP', '86.3'), ('Czech', 'CZE', '81.2'), ('Danish', 'DNK', '93.5'), ('Dhivehi', 'MDV', '100.0'), ('Dutch', 'BEL', '59.2'), ('Dutch', 'NLD', '95.6'), ('Dzongkha', 'BTN', '50.0'), ('English', 'AIA', '0.0'), ('English', 'AUS', '81.2'), ('English', 'BLZ', '50.8'), ('English', 'BMU', '100.0'), ('English', 'CAN', '60.4'), ('English', 'CCK', '0.0'), ('English', 'COK', '0.0'), ('English', 'CYM', '0.0'), ('English', 'FLK', '0.0'), ('English', 'GBR', '97.3'), ('English', 'GIB', '88.9'), ('English', 'GUM', '37.5'), ('English', 'IRL', '98.4'), ('English', 'MSR', '0.0'), ('English', 'NFK', '0.0'), ('English', 'NIU', '0.0'), ('English', 'NZL', '87.0'), ('English', 'SHN', '0.0'), ('English', 'TCA', '0.0'), ('English', 'TKL', '0.0'), ('English', 'TTO', '93.5'), ('English', 'UMI', '0.0'), ('English', 'USA', '86.2'), ('English', 'VGB', '0.0'), ('English', 'VIR', '81.7'), ('Estonian', 'EST', '65.3'), ('Ewe', 'TGO', '23.2'), ('Fang', 'CMR', '19.7'), ('Fang', 'GAB', '35.8'), ('Fang', 'GNQ', '84.8'), ('Faroese', 'FRO', '100.0'), ('Fijian', 'FJI', '50.8'), ('Finnish', 'FIN', '92.7'), ('Fon', 'BEN', '39.8'), ('French', 'FRA', '93.6'), ('French', 'MCO', '41.9'), ('French', 'SPM', '0.0'), ('Ful', 'GIN', '38.6'), ('Futuna', 'WLF', '0.0'), ('Ganda', 'UGA', '18.1'), ('Gbaya', 'CAF', '23.8'), ('Georgiana', 'GEO', '71.7'), ('German', 'AUT', '92.0'), ('German', 'CHE', '63.6'), ('German', 'DEU', '91.3'), ('German', 'LIE', '89.0'), ('Greek', 'CYP', '74.1'), ('Greek', 'GRC', '98.5'), ('Greenlandic', 'GRL', '87.5'), ('Haiti Creole', 'HTI', '100.0'), ('Hassaniya', 'MRT', '81.7'), ('Hausa', 'NER', '53.1'), ('Hebrew', 'ISR', '63.1'), ('Hindi', 'IND', '39.9'), ('Hungarian', 'HUN', '98.5'), ('Icelandic', 'ISL', '95.7'), ('Italian', 'ITA', '94.1'), ('Italian', 'SMR', '100.0'), ('Italian', 'VAT', '0.0'), ('Japanese', 'JPN', '99.1'), ('Javanese', 'IDN', '39.4'), ('Joruba', 'NGA', '21.4'), ('Kazakh', 'KAZ', '46.0'), ('Khmer', 'KHM', '88.6'), ('Kikuyu', 'KEN', '20.9'), ('Kirgiz', 'KGZ', '59.7'), ('Kiribati', 'KIR', '98.9'), ('Kirundi', 'BDI', '98.1'), ('Kongo', 'COG', '51.5'), ('Korean', 'KOR', '99.9'), ('Korean', 'PRK', '99.9'), ('Kpelle', 'LBR', '19.5'), ('Lao', 'LAO', '67.2'), ('Latvian', 'LVA', '55.1'), ('Lithuanian', 'LTU', '81.6'), ('Luba', 'COD', '18.0'), ('Luxembourgish', 'LUX', '64.4'), ('Macedonian', 'MKD', '66.5'), ('Mahoré', 'MYT', '41.9'), ('Makua', 'MOZ', '27.8'), ('Malagasy', 'MDG', '98.9'), ('Malay', 'BRN', '45.5'), ('Malay', 'MYS', '58.4'), ('Malenasian Languages', 'NCL', '45.4'), ('Malenasian Languages', 'SLB', '85.6'), ('Malinke', 'GMB', '34.1'), ('Maltese', 'MLT', '95.8'), ('Marshallese', 'MHL', '96.8'), ('Mende', 'SLE', '34.8'), ('Min', 'TWN', '66.7'), ('Mongolian', 'MNG', '78.8'), ('Mossi', 'BFA', '50.2'), ('Nauru', 'NRU', '57.5'), ('Nepali', 'NPL', '50.4'), ('Norwegian', 'NOR', '96.6'), ('Norwegian', 'SJM', '0.0'), ('Nyamwesi', 'TZA', '21.1'), ('Oromo', 'ETH', '31.0'), ('Ovambo', 'NAM', '50.7'), ('Ovimbundu', 'AGO', '37.2'), ('Palau', 'PLW', '82.2'), ('Papiamento', 'ABW', '76.7'), ('Papiamento', 'ANT', '86.2'), ('Papuan Languages', 'PNG', '78.1'), ('Pashto', 'AFG', '52.4'), ('Persian', 'IRN', '45.7'), ('Philippene Languages', 'MNP', '34.1'), ('Pilipino', 'PHL', '29.3'), ('Pitcairnese', 'PCN', '0.0'), ('Polish', 'POL', '97.6'), ('Portuguese', 'BRA', '97.5'), ('Portuguese', 'PRT', '99.0'), ('Portuguese', 'TMP', '0.0'), ('Punjabi', 'PAK', '48.2'), ('Romanian', 'MDA', '61.9'), ('Romanian', 'ROM', '90.7'), ('Russian', 'RUS', '86.6'), ('Rwanda', 'RWA', '100.0'), ('Samoan', 'ASM', '90.6'), ('Samoan-English', 'WSM', '52.0'), ('Sara', 'TCD', '27.7'), ('Serbo-Croatian', 'BIH', '99.2'), ('Serbo-Croatian', 'HRV', '95.9'), ('Serbo-Croatian', 'YUG', '75.2'), ('Seselwa', 'SYC', '91.3'), ('Shona', 'ZWE', '72.1'), ('Singali', 'LKA', '60.3'), ('Slovak', 'SVK', '85.6'), ('Slovene', 'SVN', '87.9'), ('Somali', 'DJI', '43.9'), ('Somali', 'SOM', '98.3'), ('Sotho', 'LSO', '85.0'), ('Spanish', 'AND', '44.6'), ('Spanish', 'ARG', '96.8'), ('Spanish', 'BOL', '87.7'), ('Spanish', 'CHL', '89.7'), ('Spanish', 'COL', '99.0'), ('Spanish', 'CRI', '97.5'), ('Spanish', 'CUB', '100.0'), ('Spanish', 'DOM', '98.0'), ('Spanish', 'ECU', '93.0'), ('Spanish', 'ESP', '74.4'), ('Spanish', 'GTM', '64.7'), ('Spanish', 'HND', '97.2'), ('Spanish', 'MEX', '92.1'), ('Spanish', 'NIC', '97.6'), ('Spanish', 'PAN', '76.8'), ('Spanish', 'PER', '79.8'), ('Spanish', 'PRI', '51.3'), ('Spanish', 'PRY', '55.1'), ('Spanish', 'SLV', '100.0'), ('Spanish', 'URY', '95.7'), ('Spanish', 'VEN', '96.9'), ('Sranantonga', 'SUR', '81.0'), ('Swazi', 'SWZ', '89.9'), ('Swedish', 'SWE', '89.5'), ('Tadzhik', 'TJK', '62.2'), ('Tahitian', 'PYF', '46.4'), ('Thai', 'THA', '52.6'), ('Tigrinja', 'ERI', '49.1'), ('Tongan', 'TON', '98.3'), ('Trukese', 'FSM', '41.6'), ('Tswana', 'BWA', '75.5'), ('Turkish', 'TUR', '87.6'), ('Turkmenian', 'TKM', '76.7'), ('Tuvalu', 'TUV', '92.5'), ('Ukrainian', 'UKR', '64.7'), ('Uzbek', 'UZB', '72.6'), ('Vietnamese', 'VNM', '86.8'), ('Wolof', 'SEN', '48.1'), ('Zulu', 'ZAF', '22.7')] != [('BMU', 'English', '100.0')]",False
817,"What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",medium,spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT CountryCode , LANGUAGE FROM countrylanguage WHERE Percentage = (SELECT max(Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = CountryCode)","Not match: [('Akan', 'CIV', '30.0'), ('Akan', 'GHA', '52.4'), ('Albaniana', 'ALB', '97.9'), ('Arabic', 'ARE', '42.0'), ('Arabic', 'BHR', '67.7'), ('Arabic', 'DZA', '86.0'), ('Arabic', 'EGY', '98.8'), ('Arabic', 'ESH', '100.0'), ('Arabic', 'IRQ', '77.2'), ('Arabic', 'JOR', '97.9'), ('Arabic', 'KWT', '78.1'), ('Arabic', 'LBN', '93.0'), ('Arabic', 'LBY', '96.0'), ('Arabic', 'MAR', '65.0'), ('Arabic', 'OMN', '76.7'), ('Arabic', 'PSE', '95.9'), ('Arabic', 'QAT', '40.7'), ('Arabic', 'SAU', '95.0'), ('Arabic', 'SDN', '49.4'), ('Arabic', 'SYR', '90.0'), ('Arabic', 'TUN', '69.9'), ('Arabic', 'YEM', '99.6'), ('Armenian', 'ARM', '93.4'), ('Azerbaijani', 'AZE', '89.0'), ('Bajan', 'BRB', '95.1'), ('Bambara', 'MLI', '31.8'), ('Belorussian', 'BLR', '65.6'), ('Bemba', 'ZMB', '29.7'), ('Bengali', 'BGD', '97.7'), ('Bislama', 'VUT', '56.6'), ('Bulgariana', 'BGR', '83.2'), ('Burmese', 'MMR', '69.0'), ('Canton Chinese', 'HKG', '88.7'), ('Canton Chinese', 'MAC', '85.6'), ('Chichewa', 'MWI', '58.3'), ('Chinese', 'CHN', '92.0'), ('Chinese', 'CXR', '0.0'), ('Chinese', 'SGP', '77.1'), ('Comorian', 'COM', '75.0'), ('Creole English', 'ATG', '95.7'), ('Creole English', 'BHS', '89.7'), ('Creole English', 'DMA', '100.0'), ('Creole English', 'GRD', '100.0'), ('Creole English', 'GUY', '96.4'), ('Creole English', 'JAM', '94.2'), ('Creole English', 'KNA', '100.0'), ('Creole English', 'VCT', '99.1'), ('Creole French', 'GLP', '95.0'), ('Creole French', 'GUF', '94.3'), ('Creole French', 'LCA', '80.0'), ('Creole French', 'MTQ', '96.6'), ('Creole French', 'MUS', '70.6'), ('Creole French', 'REU', '91.5'), ('Crioulo', 'CPV', '100.0'), ('Crioulo', 'GNB', '36.4'), ('Crioulo', 'STP', '86.3'), ('Czech', 'CZE', '81.2'), ('Danish', 'DNK', '93.5'), ('Dhivehi', 'MDV', '100.0'), ('Dutch', 'BEL', '59.2'), ('Dutch', 'NLD', '95.6'), ('Dzongkha', 'BTN', '50.0'), ('English', 'AIA', '0.0'), ('English', 'AUS', '81.2'), ('English', 'BLZ', '50.8'), ('English', 'BMU', '100.0'), ('English', 'CAN', '60.4'), ('English', 'CCK', '0.0'), ('English', 'COK', '0.0'), ('English', 'CYM', '0.0'), ('English', 'FLK', '0.0'), ('English', 'GBR', '97.3'), ('English', 'GIB', '88.9'), ('English', 'GUM', '37.5'), ('English', 'IRL', '98.4'), ('English', 'MSR', '0.0'), ('English', 'NFK', '0.0'), ('English', 'NIU', '0.0'), ('English', 'NZL', '87.0'), ('English', 'SHN', '0.0'), ('English', 'TCA', '0.0'), ('English', 'TKL', '0.0'), ('English', 'TTO', '93.5'), ('English', 'UMI', '0.0'), ('English', 'USA', '86.2'), ('English', 'VGB', '0.0'), ('English', 'VIR', '81.7'), ('Estonian', 'EST', '65.3'), ('Ewe', 'TGO', '23.2'), ('Fang', 'CMR', '19.7'), ('Fang', 'GAB', '35.8'), ('Fang', 'GNQ', '84.8'), ('Faroese', 'FRO', '100.0'), ('Fijian', 'FJI', '50.8'), ('Finnish', 'FIN', '92.7'), ('Fon', 'BEN', '39.8'), ('French', 'FRA', '93.6'), ('French', 'MCO', '41.9'), ('French', 'SPM', '0.0'), ('Ful', 'GIN', '38.6'), ('Futuna', 'WLF', '0.0'), ('Ganda', 'UGA', '18.1'), ('Gbaya', 'CAF', '23.8'), ('Georgiana', 'GEO', '71.7'), ('German', 'AUT', '92.0'), ('German', 'CHE', '63.6'), ('German', 'DEU', '91.3'), ('German', 'LIE', '89.0'), ('Greek', 'CYP', '74.1'), ('Greek', 'GRC', '98.5'), ('Greenlandic', 'GRL', '87.5'), ('Haiti Creole', 'HTI', '100.0'), ('Hassaniya', 'MRT', '81.7'), ('Hausa', 'NER', '53.1'), ('Hebrew', 'ISR', '63.1'), ('Hindi', 'IND', '39.9'), ('Hungarian', 'HUN', '98.5'), ('Icelandic', 'ISL', '95.7'), ('Italian', 'ITA', '94.1'), ('Italian', 'SMR', '100.0'), ('Italian', 'VAT', '0.0'), ('Japanese', 'JPN', '99.1'), ('Javanese', 'IDN', '39.4'), ('Joruba', 'NGA', '21.4'), ('Kazakh', 'KAZ', '46.0'), ('Khmer', 'KHM', '88.6'), ('Kikuyu', 'KEN', '20.9'), ('Kirgiz', 'KGZ', '59.7'), ('Kiribati', 'KIR', '98.9'), ('Kirundi', 'BDI', '98.1'), ('Kongo', 'COG', '51.5'), ('Korean', 'KOR', '99.9'), ('Korean', 'PRK', '99.9'), ('Kpelle', 'LBR', '19.5'), ('Lao', 'LAO', '67.2'), ('Latvian', 'LVA', '55.1'), ('Lithuanian', 'LTU', '81.6'), ('Luba', 'COD', '18.0'), ('Luxembourgish', 'LUX', '64.4'), ('Macedonian', 'MKD', '66.5'), ('Mahoré', 'MYT', '41.9'), ('Makua', 'MOZ', '27.8'), ('Malagasy', 'MDG', '98.9'), ('Malay', 'BRN', '45.5'), ('Malay', 'MYS', '58.4'), ('Malenasian Languages', 'NCL', '45.4'), ('Malenasian Languages', 'SLB', '85.6'), ('Malinke', 'GMB', '34.1'), ('Maltese', 'MLT', '95.8'), ('Marshallese', 'MHL', '96.8'), ('Mende', 'SLE', '34.8'), ('Min', 'TWN', '66.7'), ('Mongolian', 'MNG', '78.8'), ('Mossi', 'BFA', '50.2'), ('Nauru', 'NRU', '57.5'), ('Nepali', 'NPL', '50.4'), ('Norwegian', 'NOR', '96.6'), ('Norwegian', 'SJM', '0.0'), ('Nyamwesi', 'TZA', '21.1'), ('Oromo', 'ETH', '31.0'), ('Ovambo', 'NAM', '50.7'), ('Ovimbundu', 'AGO', '37.2'), ('Palau', 'PLW', '82.2'), ('Papiamento', 'ABW', '76.7'), ('Papiamento', 'ANT', '86.2'), ('Papuan Languages', 'PNG', '78.1'), ('Pashto', 'AFG', '52.4'), ('Persian', 'IRN', '45.7'), ('Philippene Languages', 'MNP', '34.1'), ('Pilipino', 'PHL', '29.3'), ('Pitcairnese', 'PCN', '0.0'), ('Polish', 'POL', '97.6'), ('Portuguese', 'BRA', '97.5'), ('Portuguese', 'PRT', '99.0'), ('Portuguese', 'TMP', '0.0'), ('Punjabi', 'PAK', '48.2'), ('Romanian', 'MDA', '61.9'), ('Romanian', 'ROM', '90.7'), ('Russian', 'RUS', '86.6'), ('Rwanda', 'RWA', '100.0'), ('Samoan', 'ASM', '90.6'), ('Samoan-English', 'WSM', '52.0'), ('Sara', 'TCD', '27.7'), ('Serbo-Croatian', 'BIH', '99.2'), ('Serbo-Croatian', 'HRV', '95.9'), ('Serbo-Croatian', 'YUG', '75.2'), ('Seselwa', 'SYC', '91.3'), ('Shona', 'ZWE', '72.1'), ('Singali', 'LKA', '60.3'), ('Slovak', 'SVK', '85.6'), ('Slovene', 'SVN', '87.9'), ('Somali', 'DJI', '43.9'), ('Somali', 'SOM', '98.3'), ('Sotho', 'LSO', '85.0'), ('Spanish', 'AND', '44.6'), ('Spanish', 'ARG', '96.8'), ('Spanish', 'BOL', '87.7'), ('Spanish', 'CHL', '89.7'), ('Spanish', 'COL', '99.0'), ('Spanish', 'CRI', '97.5'), ('Spanish', 'CUB', '100.0'), ('Spanish', 'DOM', '98.0'), ('Spanish', 'ECU', '93.0'), ('Spanish', 'ESP', '74.4'), ('Spanish', 'GTM', '64.7'), ('Spanish', 'HND', '97.2'), ('Spanish', 'MEX', '92.1'), ('Spanish', 'NIC', '97.6'), ('Spanish', 'PAN', '76.8'), ('Spanish', 'PER', '79.8'), ('Spanish', 'PRI', '51.3'), ('Spanish', 'PRY', '55.1'), ('Spanish', 'SLV', '100.0'), ('Spanish', 'URY', '95.7'), ('Spanish', 'VEN', '96.9'), ('Sranantonga', 'SUR', '81.0'), ('Swazi', 'SWZ', '89.9'), ('Swedish', 'SWE', '89.5'), ('Tadzhik', 'TJK', '62.2'), ('Tahitian', 'PYF', '46.4'), ('Thai', 'THA', '52.6'), ('Tigrinja', 'ERI', '49.1'), ('Tongan', 'TON', '98.3'), ('Trukese', 'FSM', '41.6'), ('Tswana', 'BWA', '75.5'), ('Turkish', 'TUR', '87.6'), ('Turkmenian', 'TKM', '76.7'), ('Tuvalu', 'TUV', '92.5'), ('Ukrainian', 'UKR', '64.7'), ('Uzbek', 'UZB', '72.6'), ('Vietnamese', 'VNM', '86.8'), ('Wolof', 'SEN', '48.1'), ('Zulu', 'ZAF', '22.7')] != [('BMU', 'English'), ('CPV', 'Crioulo'), ('CUB', 'Spanish'), ('DMA', 'Creole English'), ('ESH', 'Arabic'), ('FRO', 'Faroese'), ('GRD', 'Creole English'), ('HTI', 'Haiti Creole'), ('KNA', 'Creole English'), ('MDV', 'Dhivehi'), ('RWA', 'Rwanda'), ('SLV', 'Spanish'), ('SMR', 'Italian')]",False
818,What is the total number of countries where Spanish is spoken by the largest percentage of people?,extra,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(*) FROM (SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'Spanish' ORDER BY Percentage DESC LIMIT 1),"Not match: [('1', '0.4'), ('1', '0.6'), ('1', '0.7'), ('1', '100.0'), ('1', '100.0'), ('1', '13.3'), ('1', '31.6'), ('1', '44.6'), ('1', '51.3'), ('1', '55.1'), ('1', '64.7'), ('1', '7.4'), ('1', '7.5'), ('1', '74.4'), ('1', '76.8'), ('1', '79.8'), ('1', '87.7'), ('1', '89.7'), ('1', '92.1'), ('1', '93.0'), ('1', '95.7'), ('1', '96.8'), ('1', '96.9'), ('1', '97.2'), ('1', '97.5'), ('1', '97.6'), ('1', '98.0'), ('1', '99.0')] != [('1',)]",False
819,Count the number of countries for which Spanish is the predominantly spoken language.,extra,spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT COUNT(*) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" AND Percentage = ( SELECT MAX(Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = countrylanguage.CountryCode )","Not match: [('1', '0.4'), ('1', '0.6'), ('1', '0.7'), ('1', '100.0'), ('1', '100.0'), ('1', '13.3'), ('1', '31.6'), ('1', '44.6'), ('1', '51.3'), ('1', '55.1'), ('1', '64.7'), ('1', '7.4'), ('1', '7.5'), ('1', '74.4'), ('1', '76.8'), ('1', '79.8'), ('1', '87.7'), ('1', '89.7'), ('1', '92.1'), ('1', '93.0'), ('1', '95.7'), ('1', '96.8'), ('1', '96.9'), ('1', '97.2'), ('1', '97.5'), ('1', '97.6'), ('1', '98.0'), ('1', '99.0')] != [('21',)]",False
820,What are the codes of countries where Spanish is spoken by the largest percentage of people?,medium,spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""Spanish"" ORDER BY Percentage DESC LIMIT 1","Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('CUB',)]",False
821,Return the codes of countries for which Spanish is the predominantly spoken language.,medium,spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""Spanish"" AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE CountryCode = ""COL"" AND LANGUAGE = ""Spanish"")","Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('COL',)]",False
822,How many conductors are there?,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
823,Count the number of conductors.,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,,True
824,List the names of conductors in ascending order of age.,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
825,"What are the names of conductors, ordered by age?",easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
826,"What are the names of conductors whose nationalities are not ""USA""?",easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
827,"Return the names of conductors that do not have the nationality ""USA"".",easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
828,What are the record companies of orchestras in descending order of years in which they were founded?,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
829,"Return the record companies of orchestras, sorted descending by the years in which they were founded.",easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
830,What is the average attendance of shows?,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
831,Return the average attendance across all shows.,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,,True
832,"What are the maximum and minimum share of performances whose type is not ""Live final"".",medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
833,"Return the maximum and minimum shares for performances that do not have the type ""Live final"".",medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""",,True
834,How many different nationalities do conductors have?,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT Nationality) FROM conductor,,True
835,Count the number of different nationalities of conductors.,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(DISTINCT Nationality) FROM conductor,,True
836,List names of conductors in descending order of years of work.,easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
837,"What are the names of conductors, sorted descending by the number of years they have worked?",easy,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
838,List the name of the conductor with the most years of work.,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
839,What is the name of the conductor who has worked the greatest number of years?,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
840,Show the names of conductors and the orchestras they have conducted.,medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
841,What are the names of conductors as well as the corresonding orchestras that they have conducted?,medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
842,Show the names of conductors that have conducted more than one orchestras.,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,,True
843,What are the names of conductors who have conducted at more than one orchestra?,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,,True
844,Show the name of the conductor that has conducted the most number of orchestras.,extra,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
845,What is the name of the conductor who has conducted the most orchestras?,extra,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,,True
846,Please show the name of the conductor that has conducted orchestras founded after 2008.,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,,True
847,What are the names of conductors who have conducted orchestras founded after the year 2008?,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,,True
848,Please show the different record companies and the corresponding number of orchestras.,medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
849,How many orchestras does each record company manage?,medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",,True
850,Please show the record formats of orchestras in ascending order of count.,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,,True
851,"What are the major record formats of orchestras, sorted by their frequency?",medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,,True
852,List the record company shared by the most number of orchestras.,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
853,What is the record company used by the greatest number of orchestras?,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
854,List the names of orchestras that have no performance.,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),,True
855,What are the orchestras that do not have any performances?,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),,True
856,Show the record companies shared by orchestras founded before 2003 and after 2003.,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,,True
857,What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?,hard,spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,,True
858,"Find the number of orchestras whose record format is ""CD"" or ""DVD"".",medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",,True
859,Count the number of orchestras that have CD or DVD as their record format.,medium,spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",,True
860,Show the years in which orchestras that have given more than one performance are founded.,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,,True
861,What are years of founding for orchestras that have had more than a single performance?,medium,spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,,True
862,How many high schoolers are there?,easy,spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,,True
863,Count the number of high schoolers.,easy,spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,,True
864,Show the names and grades of each high schooler.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM Highschooler",,True
865,What are the names and grades for each high schooler?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name , grade FROM Highschooler",,True
866,Show all the grades of the high schoolers.,easy,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
867,What is the grade of each high schooler?,easy,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
868,What grade is Kyle in?,easy,spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",,True
869,Return the grade for the high schooler named Kyle.,easy,spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",,True
870,Show the names of all high schoolers in grade 10.,easy,spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10,,True
871,What are the names of all high schoolers in grade 10?,easy,spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10,,True
872,Show the ID of the high schooler named Kyle.,easy,spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","SELECT ID FROM Highschooler WHERE name = ""Kyle""",,True
873,What is Kyle's id?,easy,spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","SELECT ID FROM Highschooler WHERE name = ""Kyle""",,True
874,How many high schoolers are there in grade 9 or 10?,medium,spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,,True
875,Count the number of high schoolers in grades 9 or 10.,medium,spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,,True
876,Show the number of high schoolers for each grade.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",,True
877,How many high schoolers are in each grade?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",,True
878,Which grade has the most high schoolers?,hard,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,,True
879,Return the grade that has the greatest number of high schoolers.,hard,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,,True
880,Show me all grades that have at least 4 students.,easy,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,,True
881,Which grades have 4 or more high schoolers?,easy,spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,,True
882,Show the student IDs and numbers of friends corresponding to each.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
883,How many friends does each student have?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",,True
884,Show the names of high school students and their corresponding number of friends.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",,True
885,What are the names of the high schoolers and how many friends does each have?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",,True
886,What is the name of the high schooler who has the greatest number of friends?,extra,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,,True
887,Return the name of the high school student with the most friends.,extra,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,,True
888,Show the names of high schoolers who have at least 3 friends.,medium,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,,True
889,What are the names of high schoolers who have 3 or more friends?,medium,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,,True
890,Show the names of all of the high schooler Kyle's friends.,hard,spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T3.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.id INNER JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""",,True
891,Return the names of friends of the high school student Kyle.,hard,spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.id JOIN Highschooler AS T3 ON T1.student_id = T3.id WHERE T3.name = ""Kyle""",,True
892,How many friends does the high school student Kyle have?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
893,Count the number of friends Kyle has.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
894,Show ids of all students who do not have any friends.,hard,spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,,True
895,What are the ids of high school students who do not have friends?,hard,spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,,True
896,Show names of all high school students who do not have any friends.,hard,spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler EXCEPT SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id,,True
897,What are the names of students who have no friends?,hard,spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,,True
898,Show the ids of high schoolers who have friends and are also liked by someone else.,hard,spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,,True
899,What are the ids of students who both have friends and are liked?,hard,spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,,True
900,Show name of all students who have some friends and also are liked by someone else.,hard,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,,True
901,What are the names of high schoolers who both have friends and are liked?,hard,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,,True
902,Count the number of likes for each student id.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
903,How many likes correspond to each student id?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT student_id , count(*) FROM Likes GROUP BY student_id",,True
904,"Show the names of high schoolers who have likes, and numbers of likes for each.",medium,spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id","Not match: [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '1'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')] != [('Alexis', '1'), ('Cassandra', '2'), ('Gabriel', '1'), ('Haley', '1'), ('Jessica', '1'), ('Jordan', '1'), ('Kris', '2'), ('Kyle', '1')]",False
905,"What are the names of high schoolers who have likes, and how many likes does each have?",medium,spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id","Not match: [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '1'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')] != [('Alexis', '1'), ('Cassandra', '2'), ('Gabriel', '1'), ('Haley', '1'), ('Jessica', '1'), ('Jordan', '1'), ('Kris', '2'), ('Kyle', '1')]",False
906,What is the name of the high schooler who has the greatest number of likes?,extra,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1,"Not match: [('John',)] != [('Cassandra',)]",False
907,Give the name of the student with the most likes.,extra,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1,"Not match: [('John',)] != [('Cassandra',)]",False
908,Show the names of students who have at least 2 likes.,medium,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2,,True
909,What are the names of students who have 2 or more likes?,medium,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2,,True
910,Show the names of students who have a grade higher than 5 and have at least 2 friends.,hard,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,,True
911,What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?,hard,spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,,True
912,How many likes does Kyle have?,medium,spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
913,Return the number of likes that the high schooler named Kyle has.,medium,spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",,True
914,Find the average grade of all students who have some friends.,hard,spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),,True
915,What is the average grade of students who have friends?,hard,spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),,True
916,Find the minimum grade of students who have no friends.,extra,spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend),,True
917,What is the lowest grade of students who do not have any friends?,extra,spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend),,True
918,Which states have both owners and professionals living there?,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,,True
919,Find the states where both owners and professionals live.,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,,True
920,What is the average age of the dogs who have gone through any treatments?,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),,True
921,Find the average age of the dogs who went through treatments.,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),,True
922,"Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T1.state = 'Indiana' OR T2.professional_id IS NOT NULL GROUP BY T1.professional_id HAVING count(*) > 2","Not match: [('1', 'Braun', '(275)939-2435x80863'), ('8', 'Hyatt', '328.842.3792'), ('9', 'Kshlerin', '962-983-8109x3509')] != [('9', 'Kshlerin', '962-983-8109x3509')]",False
923,"Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T1.state = 'Indiana' GROUP BY T1.professional_id HAVING count(*) > 2","Not match: [('1', 'Braun', '(275)939-2435x80863'), ('8', 'Hyatt', '328.842.3792'), ('9', 'Kshlerin', '962-983-8109x3509')] != []",False
924,Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 1000 ),,True
925,What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 1000 ),,True
926,Which first names are used for professionals or owners but are not used as dog names?,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,,True
927,Find the first names that are used for professionals or owners but are not used as dog names.,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,,True
928,"Which professional did not operate any treatment on dogs? List the professional's id, role and email.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",,True
929,"Give me the id, role and email of the professionals who did not perform any treatment on dogs.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",,True
930,"Which owner owns the most dogs? List the owner id, first name and last name.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",,True
931,"Return the owner id, first name and last name of the owner who has the most dogs.",extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(*) DESC LIMIT 1",,True
932,"Which professionals have done at least two treatments? List the professional's id, role, and first name.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",,True
933,"What are the id, role, and first name of the professionals who have performed two or more treatments?",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",,True
934,What is the name of the breed with the most dogs?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,,True
935,Which breed do the most dogs have? Give me the breed name.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,,True
936,Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",,True
937,Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1","Not match: [('14', 'Funk')] != [('3', 'Stoltenberg')]",False
938,What is the description of the treatment type that costs the least money in total?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1,,True
939,Give me the description of the treatment type whose total cost is the lowest.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1,,True
940,Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",,True
941,Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",,True
942,Which professionals have done at least two types of treatments? List the professional id and cell phone.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT (T2.treatment_type_code) >= 2",,True
943,Find the id and cell phone of the professionals who operate two or more types of treatments.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",,True
944,What are the first name and last name of the professionals who have done treatment with cost below average?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman')]",False
945,Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman')]",False
946,"List the date of each treatment, together with the first name of the professional who operated it.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
947,What are the date and the operating professional's first name of each treatment?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
948,List the cost of each treatment and the corresponding treatment type description.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
949,What are the cost and treatment type description of each treatment?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
950,"List each owner's first name, last name, and the size of his for her dog.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
951,"What are each owner's first name, last name, and the size of their dog?",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
952,List pairs of the owner's first name and the dogs's name.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
953,What are each owner's first name and their dogs's name?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
954,List the names of the dogs of the rarest breed and the treatment dates of them.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",,True
955,Which dogs are of the rarest breed? Show their names and treatment dates.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code IN ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",,True
956,Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'VA'","Not match: [('Melisa', 'Bessie')] != []",False
957,Find the first names of owners living in Virginia and the names of dogs they own.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'VA'","Not match: [('Melisa', 'Bessie')] != []",False
958,What are the arriving date and the departing date of the dogs who have gone through a treatment?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived , T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","Not match: [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')] != [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')]",False
959,Find the arriving date and the departing date of the dogs that received a treatment.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","Not match: [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')] != [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')]",False
960,List the last name of the owner owning the youngest dog.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),,True
961,Who owns the youngest dog? Give me his or her last name.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),,True
962,List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state = ""Hawaii"" OR state = ""Wisconsin""",,True
963,What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state = ""Hawaii"" OR state = ""Wisconsin""",,True
964,What are the arriving date and the departing date of all the dogs?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",,True
965,List the arrival date and the departure date for all the dogs.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",,True
966,How many dogs went through any treatments?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(DISTINCT dog_id) FROM Treatments,,True
967,Count the number of dogs that went through a treatment.,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(DISTINCT dog_id) FROM Treatments,,True
968,How many professionals have performed any treatment to dogs?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(DISTINCT professional_id) FROM Treatments,,True
969,Find the number of professionals who have ever treated dogs.,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(DISTINCT professional_id) FROM Treatments,,True
970,"Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role_code , street , city , state FROM Professionals WHERE city LIKE '%West%'",,True
971,"Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role_code , street , city , state FROM Professionals WHERE city LIKE '%West%'",,True
972,"Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",,True
973,"Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",,True
974,How many dogs have an age below the average?,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),,True
975,Count the number of dogs of an age below the average.,hard,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),,True
976,How much does the most recent treatment cost?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
977,Show me the cost of the most recently performed treatment.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
978,How many dogs have not gone through any treatment?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),,True
979,Tell me the number of dogs that have not received any treatment .,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),,True
980,How many owners temporarily do not have any dogs?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),,True
981,Find the number of owners who do not own any dogs at this moment.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),,True
982,How many professionals did not operate any treatment on dogs?,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),,True
983,Find the number of professionals who have not treated any dogs.,extra,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),,True
984,"List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = '1'",,True
985,"What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1",,True
986,What is the average age of all the dogs?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,,True
987,Compute the average age of all the dogs.,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,,True
988,What is the age of the oldest dog?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,,True
989,Tell me the age of the oldest dog.,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,,True
990,How much does each charge type costs? List both charge type and amount.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type , charge_amount FROM Charges",,True
991,List each charge type and its amount.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type , charge_amount FROM Charges",,True
992,How much does the most expensive charge type costs?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT max(charge_amount) FROM Charges,,True
993,What is the charge amount of the most expensive charge type?,easy,spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT max(charge_amount) FROM Charges,,True
994,"List the email, cell phone and home phone of all the professionals.",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_phone FROM professionals",,True
995,"What are the email, cell phone and home phone of each professional?",medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address , cell_number , home_phone FROM professionals",,True
996,What are all the possible breed type and size type combinations?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT T1.breed_code , T2.size_code FROM Breeds AS T1 INNER JOIN Sizes AS T2 ON T1.breed_code = T2.size_code","Not match: [('BUL', 'LGE'), ('BUL', 'MED'), ('ESK', 'LGE'), ('ESK', 'MED'), ('ESK', 'SML'), ('HUS', 'MED'), ('HUS', 'SML')] != []",False
997,Find the distinct breed type and size type combinations for dogs.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT breed_code , size_code FROM Dogs",,True
998,List the first name of all the professionals along with the description of the treatment they have done.,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",,True
999,What are each professional's first name and description of the treatment they have performed?,medium,spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name , T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code","Not match: [('Danny', 'Vaccination'), ('Domenica', 'Take for a Walk'), ('Domenica', 'Vaccination'), ('Karley', 'Vaccination'), ('Monte', 'Physical examination'), ('Monte', 'Take for a Walk'), ('Ruben', 'Physical examination'), ('Ruben', 'Take for a Walk'), ('Sigurd', 'Physical examination'), ('Sigurd', 'Vaccination'), ('Velva', 'Take for a Walk'), ('Vernice', 'Physical examination')] != [('Danny', 'Vaccination'), ('Domenica', 'Take for a Walk'), ('Domenica', 'Vaccination'), ('Karley', 'Vaccination'), ('Karley', 'Vaccination'), ('Monte', 'Physical examination'), ('Monte', 'Take for a Walk'), ('Monte', 'Take for a Walk'), ('Ruben', 'Physical examination'), ('Ruben', 'Take for a Walk'), ('Sigurd', 'Physical examination'), ('Sigurd', 'Vaccination'), ('Velva', 'Take for a Walk'), ('Vernice', 'Physical examination'), ('Vernice', 'Physical examination')]",False
1000,How many singers are there?,easy,spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
1001,What is the count of singers?,easy,spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT count(*) FROM singer,,True
1002,List the name of singers in ascending order of net worth.,easy,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
1003,What are the names of singers ordered by ascending net worth?,easy,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
1004,What are the birth year and citizenship of singers?,medium,spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
1005,What are the birth years and citizenships of the singers?,medium,spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",,True
1006,"List the name of singers whose citizenship is not ""France"".",easy,spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",,True
1007,What are the names of the singers who are not French citizens?,easy,spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""French""","Not match: [('Abigail Johnson',), ('Alice Walton',), ('Christy Walton',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Susanne Klatten',)] != [('Abigail Johnson',), ('Alice Walton',), ('Christy Walton',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Liliane Bettencourt',), ('Susanne Klatten',)]",False
1008,Show the name of singers whose birth year is either 1948 or 1949?,medium,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
1009,What are the names of the singers whose birth years are either 1948 or 1949?,medium,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
1010,What is the name of the singer with the largest net worth?,medium,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
1011,What is the name of the singer who is worth the most?,medium,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
1012,Show different citizenship of singers and the number of singers of each citizenship.,medium,spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
1013,"For each citizenship, how many singers are from that country?",medium,spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",,True
1014,Please show the most common citizenship of singers.,hard,spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
1015,What is the most common singer citizenship ?,hard,spider_data/database/singer/singer.sqlite,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,,True
1016,Show different citizenships and the maximum net worth of singers of each citizenship.,medium,spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
1017,"For each citizenship, what is the maximum net worth?",medium,spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
1018,Show titles of songs and names of singers.,medium,spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
1019,What are the song titles and singer names?,medium,spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
1020,Show distinct names of singers that have songs with sales more than 300000.,medium,spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,,True
1021,what are the different names of the singers that have sales more than 300000?,medium,spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,,True
1022,Show the names of singers that have more than one song.,medium,spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,,True
1023,What are the names of the singers that have more than one songs?,medium,spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,,True
1024,Show the names of singers and the total sales of their songs.,medium,spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
1025,"For each singer name, what is the total sales for their songs?",medium,spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
1026,List the name of singers that do not have any song.,hard,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),,True
1027,What is the sname of every sing that does not have any song?,hard,spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),,True
1028,Show the citizenship shared by singers with birth year before 1945 and after 1955.,hard,spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,,True
1029,What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?,hard,spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,,True
1030,How many available features are there in total?,easy,spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT count(*) FROM Other_Available_Features,SELECT count(*) FROM Other_Available_Features,,True
1031,What is the feature type name of feature AirCon?,medium,spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon',,True
1032,Show the property type descriptions of properties belonging to that code.,medium,spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code,,True
1033,What are the names of properties that are either houses or apartments with more than 1 room?,hard,spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT property_name FROM Properties WHERE property_type_code = ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code = ""Apartment"" AND room_count > 1",,True
