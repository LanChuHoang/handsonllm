db_path,solution,answer,error,is_match
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT COUNT(*) FROM singer;,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM singer,SELECT COUNT(*) FROM singer,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name, Country, Age FROM singer ORDER BY Age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name, Country, Age FROM singer ORDER BY Age DESC",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T1.Name, T1.`Song_release_year` FROM singer AS T1 INNER JOIN ( SELECT MIN(T2.Age) AS min_age FROM singer AS T2 ) AS T3 ON T1.Singer_ID = T3.min_age","Not match: [('Love', '2016')] != []",False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T1.Name, T1.`Song_release_year` FROM singer AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age = ( SELECT MIN(Age) FROM singer );","Not match: [('Love', '2016')] != [('Tribal King', '2016')]",False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20;,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20;,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country, COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country, COUNT(*) FROM singer GROUP BY Country",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer),,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer),,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select max(capacity), average from stadium","SELECT MAX(Capacity), AVG(Average) FROM stadium","Not match: [('52500', '730')] != [('52500', '917.8888888888889')]",False
spider_data/database/concert_singer/concert_singer.sqlite,"select avg(capacity) ,  max(capacity) from stadium","SELECT AVG(Capacity), MAX(Capacity) FROM stadium",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT Name, Capacity FROM stadium WHERE Average = ( SELECT MAX(Average) FROM stadium );",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT Name, Capacity FROM stadium WHERE Average = ( SELECT MAX(Average) FROM stadium );",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015';,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT(*) FROM concert WHERE YEAR = '2014' OR YEAR = '2015';,,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.Name, COUNT(T1.concert_Name) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Name",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",SELECT COUNT(T1.Stadium_ID) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID,"Not match: [('Balmoor', '1'), ('Glebe Park', '1'), ('Recreation Park', '1'), ('Somerset Park', '2'), (""Stark's Park"", '1')] != [('1',), ('1',), ('1',), ('1',), ('2',)]",False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Name, T2.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE STRFTIME('%Y', T2.Year) >= '2014' GROUP BY T2.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1",OperationalError('no such column: T2.Capacity'),False
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T1.Name, T2.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE STRFTIME('%Y', T2.Year) > '2013' GROUP BY T2.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1",OperationalError('no such column: T2.Capacity'),False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT T2.Name FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.concert_Name NOT LIKE '%Concert%',"Not match: [('Bayview Stadium',), ('Forthbank Stadium',), ('Gayfield Park',), ('Hampden Park',)] != [('Balmoor',), ('Glebe Park',), ('Recreation Park',), ('Somerset Park',), ('Somerset Park',), (""Stark's Park"",)]",False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT T2.Name FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.concert_Name IS NULL,"Not match: [('Bayview Stadium',), ('Forthbank Stadium',), ('Gayfield Park',), ('Hampden Park',)] != []",False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30,,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT T2.Name FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year != '2014',"Not match: [('Balmoor',), ('Bayview Stadium',), ('Forthbank Stadium',), ('Gayfield Park',), ('Hampden Park',), ('Recreation Park',)] != [('Balmoor',), ('Recreation Park',), ('Somerset Park',)]",False
spider_data/database/concert_singer/concert_singer.sqlite,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT T2.Name FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year != '2014',"Not match: [('Balmoor',), ('Bayview Stadium',), ('Forthbank Stadium',), ('Gayfield Park',), ('Hampden Park',), ('Recreation Park',)] != [('Balmoor',), ('Recreation Park',), ('Somerset Park',)]",False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID",,True
spider_data/database/concert_singer/concert_singer.sqlite,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.concert_Name ,  T1.Theme ,  COUNT(T2.Singer_ID) FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T2.Name FROM concert AS T1 INNER JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID INNER JOIN singer AS T2 ON T3.Singer_ID = T2.Singer_ID WHERE T1.Year = '2014',,True
spider_data/database/concert_singer/concert_singer.sqlite,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T2.Name FROM concert AS T1 INNER JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID INNER JOIN singer AS T2 ON T3.Singer_ID = T2.Singer_ID WHERE T1.Year = '2014',,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'",,True
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T2.Name, T2.Location FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year IN ('2014', '2015')","Not match: [('Somerset Park', 'Ayr United')] != [('Balmoor', 'Peterhead'), ('Glebe Park', 'Brechin City'), ('Recreation Park', 'Alloa Athletic'), ('Somerset Park', 'Ayr United'), ('Somerset Park', 'Ayr United'), (""Stark's Park"", 'Raith Rovers')]",False
spider_data/database/concert_singer/concert_singer.sqlite,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T2.Name, T2.Location FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year IN ('2014', '2015')","Not match: [('Somerset Park', 'Ayr United')] != [('Balmoor', 'Peterhead'), ('Glebe Park', 'Brechin City'), ('Recreation Park', 'Alloa Athletic'), ('Somerset Park', 'Ayr United'), ('Somerset Park', 'Ayr United'), (""Stark's Park"", 'Raith Rovers')]",False
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 ),,True
spider_data/database/concert_singer/concert_singer.sqlite,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 ),,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT COUNT(*) FROM Pets WHERE weight > 10;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM pets WHERE weight  >  10,SELECT COUNT(*) FROM Pets WHERE weight > 10;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT MIN(weight) FROM Pets,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT MIN(weight) FROM Pets WHERE PetType = 'dog',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT MAX(weight), PetType FROM Pets GROUP BY PetType",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT MAX(weight), PetType FROM Pets GROUP BY PetType",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Sex = 'F' AND T2.PetType = 'Dog';,OperationalError('no such column: T2.PetType'),False
spider_data/database/pets_1/pets_1.sqlite,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Sex = 'F',"Not match: [('2',)] != [('3',)]",False
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT COUNT(DISTINCT PetType) FROM Pets;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT count(DISTINCT pettype) FROM pets,SELECT COUNT(DISTINCT PetType) FROM Pets;,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT T2.Fname FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType IN ('cat', 'dog') );","Not match: [('Linda',), ('Tracy',)] != [('Linda',), ('Tracy',), ('Tracy',)]",False
spider_data/database/pets_1/pets_1.sqlite,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT T2.Fname FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'Cat' ) OR T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'Dog' );,"Not match: [('Linda',), ('Tracy',)] != []",False
spider_data/database/pets_1/pets_1.sqlite,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',SELECT T2.Fname FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'cat' ) AND T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'dog' );,,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',"SELECT T2.Fname FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType IN ('Cat', 'Dog') )",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.Major, T2.age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID NOT IN ( SELECT PetID FROM Pets );",OperationalError('no such column: T2.age'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T2.Major, T2.Age FROM Student AS T2 JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID WHERE T1.PetID IS NULL","Not match: [('100', '17'), ('50', '18'), ('50', '26'), ('520', '18'), ('520', '18'), ('520', '19'), ('520', '19'), ('520', '20'), ('520', '22'), ('540', '17'), ('540', '18'), ('550', '18'), ('550', '20'), ('550', '20'), ('550', '20'), ('550', '21'), ('600', '16'), ('600', '17'), ('600', '17'), ('600', '18'), ('600', '18'), ('600', '18'), ('600', '18'), ('600', '19'), ('600', '19'), ('600', '20'), ('600', '20'), ('600', '20'), ('600', '20'), ('600', '21'), ('600', '22'), ('600', '26'), ('600', '27')] != []",False
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pet );,"Not match: [('1002',), ('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)] != [('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)]",False
spider_data/database/pets_1/pets_1.sqlite,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pet );,"Not match: [('1002',), ('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)] != [('1003',), ('1004',), ('1005',), ('1006',), ('1007',), ('1008',), ('1009',), ('1010',), ('1011',), ('1012',), ('1014',), ('1015',), ('1016',), ('1017',), ('1018',), ('1019',), ('1020',), ('1021',), ('1022',), ('1023',), ('1024',), ('1025',), ('1026',), ('1027',), ('1028',), ('1029',), ('1030',), ('1031',), ('1032',), ('1033',), ('1034',), ('1035',)]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T2.Fname, T2.Age FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'Dog' EXCEPT SELECT PetID FROM Pets WHERE PetType = 'Cat' )","Not match: [('Tracy', '19'), ('Tracy', '19')] != []",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT T2.Fname FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN ( SELECT PetID FROM Pets WHERE PetType = 'Dog' EXCEPT SELECT PetID FROM Pets WHERE PetType = 'Cat' ),"Not match: [('Tracy', '19'), ('Tracy', '19')] != []",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, weight FROM Pets WHERE pet_age = ( SELECT MIN(pet_age) FROM Pets );",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, weight FROM Pets WHERE pet_age = ( SELECT MIN(pet_age) FROM Pets )",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT PetID, weight FROM Pets WHERE pet_age > 1;",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT id, weight FROM Pets WHERE pet_age > 1;",OperationalError('no such column: id'),False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType","Not match: [('1.5', '2', 'dog'), ('3.0', '3', 'cat')] != [('1.5', '2'), ('3.0', '3')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType","Not match: [('1.5', '2', 'dog'), ('3.0', '3', 'cat')] != [('1.5', '2'), ('3.0', '3')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",SELECT AVG(weight) FROM Pets GROUP BY PetType,"Not match: [('11.350000000000001', 'dog'), ('12.0', 'cat')] != [('11.350000000000001',), ('12.0',)]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",SELECT AVG(weight) FROM Pets GROUP BY PetType,"Not match: [('11.350000000000001', 'dog'), ('12.0', 'cat')] != [('11.350000000000001',), ('12.0',)]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT T2.Fname, T2.Age FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IS NOT NULL;","Not match: [('Linda', '18'), ('Tracy', '19')] != [('Linda', '18'), ('Tracy', '19'), ('Tracy', '19')]",False
spider_data/database/pets_1/pets_1.sqlite,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T2.Fname, T2.Age FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IS NOT NULL;",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT StuID FROM Has_Pet WHERE PetID IN ( SELECT PetID FROM Pets WHERE LName = 'Smith' ),OperationalError('no such column: LName'),False
spider_data/database/pets_1/pets_1.sqlite,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith',,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT COUNT(*) ,  StuID FROM Has_Pet GROUP BY StuID",,True
spider_data/database/pets_1/pets_1.sqlite,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT COUNT(*) ,  StuID FROM Has_Pet GROUP BY StuID",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1",,True
spider_data/database/pets_1/pets_1.sqlite,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1",,True
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T2.LName FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T1.pet_age = 3,OperationalError('no such column: T2.LName'),False
spider_data/database/pets_1/pets_1.sqlite,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT T2.LName FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID IN (SELECT PetID FROM Pets WHERE pet_age = 3),,True
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT AVG(T2.Age) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IS NULL,OperationalError('no such column: T2.Age'),False
spider_data/database/pets_1/pets_1.sqlite,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT AVG(T2.Age) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IS NULL,OperationalError('no such column: T2.Age'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT COUNT(*) FROM continents,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CONTINENTS;,SELECT COUNT(ContId) FROM continents,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT COUNT(CountryId) FROM countries,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM COUNTRIES;,SELECT COUNT(CountryId) FROM countries,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName, T2.ModelId, COUNT(T2.ModelId) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id","Not match: [('American Motor Company', '1', '1'), ('BMW', '3', '1'), ('Chrysler', '6', '4'), ('Citroen', '7', '1'), ('Daimler Benz', '13', '2'), ('Fiat', '9', '1'), ('Ford Motor Company', '5', '3'), ('General Motors', '4', '5'), ('Honda', '11', '1'), ('Hyundai', '23', '1'), ('Kia Motors', '22', '1'), ('Mazda', '12', '1'), ('Nissan Motors', '8', '2'), ('Opel', '14', '1'), ('Peugeaut', '15', '1'), ('Renault', '16', '1'), ('Saab', '17', '1'), ('Subaru', '18', '1'), ('Toyota', '19', '2'), ('Triumph', '20', '1'), ('Volkswagen', '2', '2'), ('Volvo', '21', '1')] != [('American Motor Company', '1', '1'), ('BMW', '3', '1'), ('Chrysler', '8', '4'), ('Citroen', '9', '1'), ('Daimler Benz', '17', '2'), ('Fiat', '12', '1'), ('Ford Motor Company', '6', '3'), ('General Motors', '4', '5'), ('Honda', '15', '1'), ('Hyundai', '34', '1'), ('Kia Motors', '33', '1'), ('Mazda', '16', '1'), ('Nissan Motors', '10', '2'), ('Opel', '22', '1'), ('Peugeaut', '23', '1'), ('Renault', '26', '1'), ('Saab', '27', '1'), ('Subaru', '28', '1'), ('Toyota', '29', '2'), ('Triumph', '30', '1'), ('Volkswagen', '2', '2'), ('Volvo', '32', '1')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.FullName, T2.Id, COUNT(T3.ModelId) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",OperationalError('no such column: T2.Id'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.Horsepower LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.Horsepower LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < ( SELECT AVG(Weight) FROM cars_data ),,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT T1.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < ( SELECT AVG(Weight) FROM cars_data ),OperationalError('no such column: T1.Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970;,OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970 GROUP BY T2.Maker,OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T2.Make, MIN(T1.Year) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T2.Make","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [(' mazda glc deluxe', '1979'), ('amc ambassador brougham', '1973'), ('amc ambassador dpl', '1970'), ('amc ambassador sst', '1972'), ('amc concord', '1978'), ('amc concord d/l', '1978'), ('amc concord dl', '1982'), ('amc concord dl 6', '1979'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc hornet sportabout (sw)', '1971'), ('amc matador', '1971'), ('amc matador (sw)', '1972'), ('amc pacer', '1975'), ('amc pacer d/l', '1976'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('amc spirit dl', '1979'), ('audi 100 ls', '1970'), ('audi 100ls', '1973'), ('audi 4000', '1980'), ('audi 5000', '1978'), ('audi 5000s (diesel)', '1980'), ('audi fox', '1974'), ('bmw 2002', '1970'), ('bmw 320i', '1977'), ('buick century', '1975'), ('buick century 350', '1973'), ('buick century limited', '1982'), ('buick century luxus (sw)', '1974'), ('buick century special', '1978'), ('buick electra 225 custom', '1973'), ('buick estate wagon (sw)', '1970'), ('buick lesabre custom', '1972'), ('buick opel isuzu deluxe', '1977'), ('buick regal sport coupe (turbo)', '1978'), ('buick skyhawk', '1975'), ('buick skylark', '1977'), ('buick skylark 320', '1970'), ('buick skylark limited', '1979'), ('cadillac eldorado', '1979'), ('cadillac seville', '1976'), ('capri ii', '1976'), ('chevrolet bel air', '1975'), ('chevrolet camaro', '1982'), ('chevrolet caprice classic', '1973'), ('chevrolet cavalier', '1982'), ('chevrolet cavalier 2-door', '1982'), ('chevrolet cavalier wagon', '1982'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet chevelle malibu classic', '1974'), ('chevrolet chevette', '1976'), ('chevrolet citation', '1979'), ('chevrolet concours', '1977'), ('chevrolet impala', '1970'), ('chevrolet malibu', '1973'), ('chevrolet malibu classic (sw)', '1979'), ('chevrolet monte carlo', '1970'), ('chevrolet monte carlo landau', '1977'), ('chevrolet monte carlo s', '1973'), ('chevrolet monza 2+2', '1975'), ('chevrolet nova', '1974'), ('chevrolet nova custom', '1973'), ('chevrolet vega', '1972'), ('chevrolet vega (sw)', '1971'), ('chevrolet vega 2300', '1971'), ('chevrolet woody', '1976'), ('chevy c10', '1976'), ('chevy c20', '1970'), ('chevy s-10', '1982'), ('chrysler cordoba', '1977'), ('chrysler lebaron medallion', '1982'), ('chrysler lebaron salon', '1981'), ('chrysler lebaron town @ country (sw)', '1979'), ('chrysler new yorker brougham', '1973'), ('chrysler newport royal', '1972'), ('citroen ds-21 pallas', '1970'), ('datsun 1200', '1971'), ('datsun 200-sx', '1978'), ('datsun 200sx', '1981'), ('datsun 210', '1979'), ('datsun 210 mpg', '1981'), ('datsun 280-zx', '1980'), ('datsun 310', '1980'), ('datsun 310 gx', '1982'), ('datsun 510', '1978'), ('datsun 510 (sw)', '1972'), ('datsun 510 hatchback', '1980'), ('datsun 610', '1973'), ('datsun 710', '1974'), ('datsun 810', '1977'), ('datsun 810 maxima', '1981'), ('datsun b-210', '1976'), ('datsun b210', '1974'), ('datsun b210 gx', '1978'), ('datsun f-10 hatchback', '1977'), ('datsun pl510', '1970'), ('dodge aries se', '1982'), ('dodge aries wagon (sw)', '1981'), ('dodge aspen', '1978'), ('dodge aspen 6', '1979'), ('dodge aspen se', '1976'), ('dodge challenger se', '1970'), ('dodge charger 2.2', '1982'), ('dodge colt', '1974'), ('dodge colt (sw)', '1972'), ('dodge colt hardtop', '1972'), ('dodge colt hatchback custom', '1979'), ('dodge colt m/m', '1977'), ('dodge coronet brougham', '1976'), ('dodge coronet custom', '1973'), ('dodge coronet custom (sw)', '1974'), ('dodge d100', '1976'), ('dodge d200', '1970'), ('dodge dart custom', '1973'), ('dodge diplomat', '1978'), ('dodge magnum xe', '1978'), ('dodge monaco (sw)', '1971'), ('dodge monaco brougham', '1977'), ('dodge omni', '1978'), ('dodge rampage', '1982'), ('dodge st. regis', '1979'), ('fiat 124 sport coupe', '1973'), ('fiat 124 tc', '1974'), ('fiat 124b', '1971'), ('fiat 128', '1973'), ('fiat 131', '1976'), ('fiat strada custom', '1979'), ('fiat x1.9', '1974'), ('ford country', '1973'), ('ford country squire (sw)', '1971'), ('ford escort 2h', '1981'), ('ford escort 4w', '1981'), ('ford f108', '1976'), ('ford f250', '1970'), ('ford fairmont', '1980'), ('ford fairmont (auto)', '1978'), ('ford fairmont (man)', '1978'), ('ford fairmont 4', '1979'), ('ford fairmont futura', '1982'), ('ford fiesta', '1978'), ('ford futura', '1978'), ('ford galaxie 500', '1970'), ('ford gran torino', '1973'), ('ford gran torino (sw)', '1972'), ('ford granada', '1977'), ('ford granada ghia', '1976'), ('ford granada gl', '1981'), ('ford granada l', '1982'), ('ford ltd', '1973'), ('ford ltd landau', '1979'), ('ford maverick', '1970'), ('ford mustang', '1971'), ('ford mustang boss 302', '1970'), ('ford mustang cobra', '1980'), ('ford mustang gl', '1982'), ('ford mustang ii', '1975'), ('ford mustang ii 2+2', '1977'), ('ford pinto', '1971'), ('ford pinto (sw)', '1972'), ('ford pinto runabout', '1972'), ('ford ranger', '1982'), ('ford thunderbird', '1977'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('ford torino 500', '1971'), ('hi 1200d', '1970'), ('honda accord', '1980'), ('honda accord cvcc', '1977'), ('honda accord lx', '1978'), ('honda civic', '1974'), ('honda civic (auto)', '1982'), ('honda civic 1300', '1981'), ('honda civic 1500 gl', '1980'), ('honda civic cvcc', '1975'), ('honda prelude', '1981'), ('mazda 626', '1980'), ('mazda glc', '1980'), ('mazda glc 4', '1981'), ('mazda glc custom', '1982'), ('mazda glc custom l', '1982'), ('mazda glc deluxe', '1978'), ('mazda rx-4', '1977'), ('mazda rx-7 gs', '1980'), ('mazda rx2 coupe', '1972'), ('mazda rx3', '1973'), ('mercedes benz 300d', '1979'), ('mercedes-benz 240d', '1980'), ('mercedes-benz 280s', '1976'), ('mercury capri 2000', '1971'), ('mercury capri v6', '1973'), ('mercury cougar brougham', '1977'), ('mercury grand marquis', '1979'), ('mercury lynx l', '1982'), ('mercury marquis', '1972'), ('mercury marquis brougham', '1973'), ('mercury monarch', '1975'), ('mercury monarch ghia', '1978'), ('mercury zephyr', '1978'), ('mercury zephyr 6', '1979'), ('nissan stanza xe', '1982'), ('oldsmobile cutlass ciera (diesel)', '1982'), ('oldsmobile cutlass ls', '1981'), ('oldsmobile cutlass salon brougham', '1978'), ('oldsmobile cutlass supreme', '1977'), ('oldsmobile delta 88 royale', '1972'), ('oldsmobile omega', '1973'), ('oldsmobile omega brougham', '1979'), ('oldsmobile starfire sx', '1978'), ('oldsmobile vista cruiser', '1973'), ('opel 1900', '1971'), ('opel manta', '1973'), ('peugeot 304', '1971'), ('peugeot 504', '1970'), ('peugeot 504 (sw)', '1972'), ('peugeot 505s turbo diesel', '1981'), ('peugeot 604sl', '1978'), ('plymouth arrow gs', '1977'), ('plymouth champ', '1981'), ('plymouth cricket', '1971'), ('plymouth cuda 340', '1970'), ('plymouth custom suburb', '1973'), ('plymouth duster', '1970'), ('plymouth fury', '1975'), ('plymouth fury gran sedan', '1973'), ('plymouth fury iii', '1970'), ('plymouth grand fury', '1975'), ('plymouth horizon', '1979'), ('plymouth horizon 4', '1981'), ('plymouth horizon miser', '1982'), ('plymouth horizon tc3', '1979'), ('plymouth reliant', '1981'), ('plymouth sapporo', '1978'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('plymouth satellite custom', '1971'), ('plymouth satellite custom (sw)', '1972'), ('plymouth satellite sebring', '1974'), ('plymouth valiant', '1973'), ('plymouth valiant custom', '1975'), ('plymouth volare', '1978'), ('plymouth volare custom', '1977'), ('plymouth volare premier v8', '1976'), ('pontiac astro', '1975'), ('pontiac catalina', '1970'), ('pontiac catalina brougham', '1971'), ('pontiac firebird', '1971'), ('pontiac grand prix', '1973'), ('pontiac grand prix lj', '1977'), ('pontiac j2000 se hatchback', '1982'), ('pontiac lemans v6', '1979'), ('pontiac phoenix', '1979'), ('pontiac phoenix lj', '1978'), ('pontiac safari (sw)', '1971'), ('pontiac sunbird coupe', '1977'), ('pontiac ventura sj', '1976'), ('renault 12 (sw)', '1972'), ('renault 12tl', '1976'), ('renault 18i', '1981'), ('renault 5 gtl', '1977'), ('renault lecar deluxe', '1980'), ('saab 900s', '1981'), ('saab 99e', '1970'), ('saab 99gle', '1978'), ('saab 99le', '1973'), ('subaru', '1974'), ('subaru dl', '1977'), ('toyota carina', '1973'), ('toyota celica gt', '1982'), ('toyota celica gt liftback', '1978'), ('toyota corolla', '1975'), ('toyota corolla 1200', '1971'), ('toyota corolla 1600 (sw)', '1972'), ('toyota corolla liftback', '1977'), ('toyota corolla tercel', '1980'), ('toyota corona', '1971'), ('toyota corona hardtop', '1972'), ('toyota corona liftback', '1980'), ('toyota corona mark ii', '1970'), ('toyota corona mark ii (sw)', '1972'), ('toyota cressida', '1981'), ('toyota mark ii', '1973'), ('toyota starlet', '1981'), ('toyota tercel', '1981'), ('triumph tr7 coupe', '1980'), ('volkswagen 1131 deluxe sedan', '1970'), ('volkswagen 411 (sw)', '1972'), ('volkswagen dasher', '1974'), ('volkswagen jetta', '1981'), ('volkswagen model 111', '1971'), ('volkswagen rabbit', '1975'), ('volkswagen rabbit custom', '1977'), ('volkswagen rabbit custom diesel', '1978'), ('volkswagen rabbit l', '1982'), ('volkswagen scirocco', '1978'), ('volkswagen super beetle', '1973'), ('volkswagen super beetle 117', '1971'), ('volkswagen type 3', '1972'), ('volvo 144ea', '1973'), ('volvo 145e (sw)', '1972'), ('volvo 244dl', '1975'), ('volvo 245', '1976'), ('volvo 264gl', '1978'), ('volvo diesel', '1981'), ('vw dasher (diesel)', '1980'), ('vw pickup', '1982'), ('vw rabbit', '1976'), ('vw rabbit c (diesel)', '1980'), ('vw rabbit custom', '1979')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T2.Make, MIN(T1.Year) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T2.Make","Not match: [('amc ambassador dpl', '1970'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('audi 100 ls', '1970'), ('bmw 2002', '1970'), ('buick estate wagon (sw)', '1970'), ('buick skylark 320', '1970'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet impala', '1970'), ('chevrolet monte carlo', '1970'), ('chevy c20', '1970'), ('citroen ds-21 pallas', '1970'), ('datsun pl510', '1970'), ('dodge challenger se', '1970'), ('dodge d200', '1970'), ('ford f250', '1970'), ('ford galaxie 500', '1970'), ('ford maverick', '1970'), ('ford mustang boss 302', '1970'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('hi 1200d', '1970'), ('peugeot 504', '1970'), ('plymouth cuda 340', '1970'), ('plymouth duster', '1970'), ('plymouth fury iii', '1970'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('pontiac catalina', '1970'), ('saab 99e', '1970'), ('toyota corona mark ii', '1970'), ('volkswagen 1131 deluxe sedan', '1970')] != [(' mazda glc deluxe', '1979'), ('amc ambassador brougham', '1973'), ('amc ambassador dpl', '1970'), ('amc ambassador sst', '1972'), ('amc concord', '1978'), ('amc concord d/l', '1978'), ('amc concord dl', '1982'), ('amc concord dl 6', '1979'), ('amc gremlin', '1970'), ('amc hornet', '1970'), ('amc hornet sportabout (sw)', '1971'), ('amc matador', '1971'), ('amc matador (sw)', '1972'), ('amc pacer', '1975'), ('amc pacer d/l', '1976'), ('amc rebel sst', '1970'), ('amc rebel sst (sw)', '1970'), ('amc spirit dl', '1979'), ('audi 100 ls', '1970'), ('audi 100ls', '1973'), ('audi 4000', '1980'), ('audi 5000', '1978'), ('audi 5000s (diesel)', '1980'), ('audi fox', '1974'), ('bmw 2002', '1970'), ('bmw 320i', '1977'), ('buick century', '1975'), ('buick century 350', '1973'), ('buick century limited', '1982'), ('buick century luxus (sw)', '1974'), ('buick century special', '1978'), ('buick electra 225 custom', '1973'), ('buick estate wagon (sw)', '1970'), ('buick lesabre custom', '1972'), ('buick opel isuzu deluxe', '1977'), ('buick regal sport coupe (turbo)', '1978'), ('buick skyhawk', '1975'), ('buick skylark', '1977'), ('buick skylark 320', '1970'), ('buick skylark limited', '1979'), ('cadillac eldorado', '1979'), ('cadillac seville', '1976'), ('capri ii', '1976'), ('chevrolet bel air', '1975'), ('chevrolet camaro', '1982'), ('chevrolet caprice classic', '1973'), ('chevrolet cavalier', '1982'), ('chevrolet cavalier 2-door', '1982'), ('chevrolet cavalier wagon', '1982'), ('chevrolet chevelle concours (sw)', '1970'), ('chevrolet chevelle malibu', '1970'), ('chevrolet chevelle malibu classic', '1974'), ('chevrolet chevette', '1976'), ('chevrolet citation', '1979'), ('chevrolet concours', '1977'), ('chevrolet impala', '1970'), ('chevrolet malibu', '1973'), ('chevrolet malibu classic (sw)', '1979'), ('chevrolet monte carlo', '1970'), ('chevrolet monte carlo landau', '1977'), ('chevrolet monte carlo s', '1973'), ('chevrolet monza 2+2', '1975'), ('chevrolet nova', '1974'), ('chevrolet nova custom', '1973'), ('chevrolet vega', '1972'), ('chevrolet vega (sw)', '1971'), ('chevrolet vega 2300', '1971'), ('chevrolet woody', '1976'), ('chevy c10', '1976'), ('chevy c20', '1970'), ('chevy s-10', '1982'), ('chrysler cordoba', '1977'), ('chrysler lebaron medallion', '1982'), ('chrysler lebaron salon', '1981'), ('chrysler lebaron town @ country (sw)', '1979'), ('chrysler new yorker brougham', '1973'), ('chrysler newport royal', '1972'), ('citroen ds-21 pallas', '1970'), ('datsun 1200', '1971'), ('datsun 200-sx', '1978'), ('datsun 200sx', '1981'), ('datsun 210', '1979'), ('datsun 210 mpg', '1981'), ('datsun 280-zx', '1980'), ('datsun 310', '1980'), ('datsun 310 gx', '1982'), ('datsun 510', '1978'), ('datsun 510 (sw)', '1972'), ('datsun 510 hatchback', '1980'), ('datsun 610', '1973'), ('datsun 710', '1974'), ('datsun 810', '1977'), ('datsun 810 maxima', '1981'), ('datsun b-210', '1976'), ('datsun b210', '1974'), ('datsun b210 gx', '1978'), ('datsun f-10 hatchback', '1977'), ('datsun pl510', '1970'), ('dodge aries se', '1982'), ('dodge aries wagon (sw)', '1981'), ('dodge aspen', '1978'), ('dodge aspen 6', '1979'), ('dodge aspen se', '1976'), ('dodge challenger se', '1970'), ('dodge charger 2.2', '1982'), ('dodge colt', '1974'), ('dodge colt (sw)', '1972'), ('dodge colt hardtop', '1972'), ('dodge colt hatchback custom', '1979'), ('dodge colt m/m', '1977'), ('dodge coronet brougham', '1976'), ('dodge coronet custom', '1973'), ('dodge coronet custom (sw)', '1974'), ('dodge d100', '1976'), ('dodge d200', '1970'), ('dodge dart custom', '1973'), ('dodge diplomat', '1978'), ('dodge magnum xe', '1978'), ('dodge monaco (sw)', '1971'), ('dodge monaco brougham', '1977'), ('dodge omni', '1978'), ('dodge rampage', '1982'), ('dodge st. regis', '1979'), ('fiat 124 sport coupe', '1973'), ('fiat 124 tc', '1974'), ('fiat 124b', '1971'), ('fiat 128', '1973'), ('fiat 131', '1976'), ('fiat strada custom', '1979'), ('fiat x1.9', '1974'), ('ford country', '1973'), ('ford country squire (sw)', '1971'), ('ford escort 2h', '1981'), ('ford escort 4w', '1981'), ('ford f108', '1976'), ('ford f250', '1970'), ('ford fairmont', '1980'), ('ford fairmont (auto)', '1978'), ('ford fairmont (man)', '1978'), ('ford fairmont 4', '1979'), ('ford fairmont futura', '1982'), ('ford fiesta', '1978'), ('ford futura', '1978'), ('ford galaxie 500', '1970'), ('ford gran torino', '1973'), ('ford gran torino (sw)', '1972'), ('ford granada', '1977'), ('ford granada ghia', '1976'), ('ford granada gl', '1981'), ('ford granada l', '1982'), ('ford ltd', '1973'), ('ford ltd landau', '1979'), ('ford maverick', '1970'), ('ford mustang', '1971'), ('ford mustang boss 302', '1970'), ('ford mustang cobra', '1980'), ('ford mustang gl', '1982'), ('ford mustang ii', '1975'), ('ford mustang ii 2+2', '1977'), ('ford pinto', '1971'), ('ford pinto (sw)', '1972'), ('ford pinto runabout', '1972'), ('ford ranger', '1982'), ('ford thunderbird', '1977'), ('ford torino', '1970'), ('ford torino (sw)', '1970'), ('ford torino 500', '1971'), ('hi 1200d', '1970'), ('honda accord', '1980'), ('honda accord cvcc', '1977'), ('honda accord lx', '1978'), ('honda civic', '1974'), ('honda civic (auto)', '1982'), ('honda civic 1300', '1981'), ('honda civic 1500 gl', '1980'), ('honda civic cvcc', '1975'), ('honda prelude', '1981'), ('mazda 626', '1980'), ('mazda glc', '1980'), ('mazda glc 4', '1981'), ('mazda glc custom', '1982'), ('mazda glc custom l', '1982'), ('mazda glc deluxe', '1978'), ('mazda rx-4', '1977'), ('mazda rx-7 gs', '1980'), ('mazda rx2 coupe', '1972'), ('mazda rx3', '1973'), ('mercedes benz 300d', '1979'), ('mercedes-benz 240d', '1980'), ('mercedes-benz 280s', '1976'), ('mercury capri 2000', '1971'), ('mercury capri v6', '1973'), ('mercury cougar brougham', '1977'), ('mercury grand marquis', '1979'), ('mercury lynx l', '1982'), ('mercury marquis', '1972'), ('mercury marquis brougham', '1973'), ('mercury monarch', '1975'), ('mercury monarch ghia', '1978'), ('mercury zephyr', '1978'), ('mercury zephyr 6', '1979'), ('nissan stanza xe', '1982'), ('oldsmobile cutlass ciera (diesel)', '1982'), ('oldsmobile cutlass ls', '1981'), ('oldsmobile cutlass salon brougham', '1978'), ('oldsmobile cutlass supreme', '1977'), ('oldsmobile delta 88 royale', '1972'), ('oldsmobile omega', '1973'), ('oldsmobile omega brougham', '1979'), ('oldsmobile starfire sx', '1978'), ('oldsmobile vista cruiser', '1973'), ('opel 1900', '1971'), ('opel manta', '1973'), ('peugeot 304', '1971'), ('peugeot 504', '1970'), ('peugeot 504 (sw)', '1972'), ('peugeot 505s turbo diesel', '1981'), ('peugeot 604sl', '1978'), ('plymouth arrow gs', '1977'), ('plymouth champ', '1981'), ('plymouth cricket', '1971'), ('plymouth cuda 340', '1970'), ('plymouth custom suburb', '1973'), ('plymouth duster', '1970'), ('plymouth fury', '1975'), ('plymouth fury gran sedan', '1973'), ('plymouth fury iii', '1970'), ('plymouth grand fury', '1975'), ('plymouth horizon', '1979'), ('plymouth horizon 4', '1981'), ('plymouth horizon miser', '1982'), ('plymouth horizon tc3', '1979'), ('plymouth reliant', '1981'), ('plymouth sapporo', '1978'), ('plymouth satellite', '1970'), ('plymouth satellite (sw)', '1970'), ('plymouth satellite custom', '1971'), ('plymouth satellite custom (sw)', '1972'), ('plymouth satellite sebring', '1974'), ('plymouth valiant', '1973'), ('plymouth valiant custom', '1975'), ('plymouth volare', '1978'), ('plymouth volare custom', '1977'), ('plymouth volare premier v8', '1976'), ('pontiac astro', '1975'), ('pontiac catalina', '1970'), ('pontiac catalina brougham', '1971'), ('pontiac firebird', '1971'), ('pontiac grand prix', '1973'), ('pontiac grand prix lj', '1977'), ('pontiac j2000 se hatchback', '1982'), ('pontiac lemans v6', '1979'), ('pontiac phoenix', '1979'), ('pontiac phoenix lj', '1978'), ('pontiac safari (sw)', '1971'), ('pontiac sunbird coupe', '1977'), ('pontiac ventura sj', '1976'), ('renault 12 (sw)', '1972'), ('renault 12tl', '1976'), ('renault 18i', '1981'), ('renault 5 gtl', '1977'), ('renault lecar deluxe', '1980'), ('saab 900s', '1981'), ('saab 99e', '1970'), ('saab 99gle', '1978'), ('saab 99le', '1973'), ('subaru', '1974'), ('subaru dl', '1977'), ('toyota carina', '1973'), ('toyota celica gt', '1982'), ('toyota celica gt liftback', '1978'), ('toyota corolla', '1975'), ('toyota corolla 1200', '1971'), ('toyota corolla 1600 (sw)', '1972'), ('toyota corolla liftback', '1977'), ('toyota corolla tercel', '1980'), ('toyota corona', '1971'), ('toyota corona hardtop', '1972'), ('toyota corona liftback', '1980'), ('toyota corona mark ii', '1970'), ('toyota corona mark ii (sw)', '1972'), ('toyota cressida', '1981'), ('toyota mark ii', '1973'), ('toyota starlet', '1981'), ('toyota tercel', '1981'), ('triumph tr7 coupe', '1980'), ('volkswagen 1131 deluxe sedan', '1970'), ('volkswagen 411 (sw)', '1972'), ('volkswagen dasher', '1974'), ('volkswagen jetta', '1981'), ('volkswagen model 111', '1971'), ('volkswagen rabbit', '1975'), ('volkswagen rabbit custom', '1977'), ('volkswagen rabbit custom diesel', '1978'), ('volkswagen rabbit l', '1982'), ('volkswagen scirocco', '1978'), ('volkswagen super beetle', '1973'), ('volkswagen super beetle 117', '1971'), ('volkswagen type 3', '1972'), ('volvo 144ea', '1973'), ('volvo 145e (sw)', '1972'), ('volvo 244dl', '1975'), ('volvo 245', '1976'), ('volvo 264gl', '1978'), ('volvo diesel', '1981'), ('vw dasher (diesel)', '1980'), ('vw pickup', '1982'), ('vw rabbit', '1976'), ('vw rabbit c (diesel)', '1980'), ('vw rabbit custom', '1979')]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T2.Continent, COUNT(T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Country GROUP BY T2.Continent",OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent, COUNT(T2.Id) FROM continents AS T1 INNER JOIN car_makers AS T2 ON T1.ContId = T2.Country GROUP BY T1.Continent","Not match: [('america', '4'), ('asia', '7'), ('europe', '11')] != [('africa', '5'), ('america', '4'), ('asia', '3'), ('australia', '1'), ('europe', '4')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country ORDER BY COUNT(T1.Maker) DESC LIMIT 1,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country ORDER BY COUNT(T1.Id) DESC LIMIT 1,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT COUNT(T1.ModelId), T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName",,True
spider_data/database/car_1/car_1.sqlite,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT COUNT(T1.ModelId), T2.Id, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.Id","Not match: [('1', 'American Motor Company', '1'), ('1', 'BMW', '3'), ('1', 'Citroen', '7'), ('1', 'Fiat', '9'), ('1', 'Honda', '11'), ('1', 'Hyundai', '23'), ('1', 'Kia Motors', '22'), ('1', 'Mazda', '12'), ('1', 'Opel', '14'), ('1', 'Peugeaut', '15'), ('1', 'Renault', '16'), ('1', 'Saab', '17'), ('1', 'Subaru', '18'), ('1', 'Triumph', '20'), ('1', 'Volvo', '21'), ('2', 'Daimler Benz', '13'), ('2', 'Nissan Motors', '8'), ('2', 'Toyota', '19'), ('2', 'Volkswagen', '2'), ('3', 'Ford Motor Company', '5'), ('4', 'Chrysler', '6'), ('5', 'General Motors', '4')] != [('1', '1', 'American Motor Company'), ('1', '11', 'Honda'), ('1', '12', 'Mazda'), ('1', '14', 'Opel'), ('1', '15', 'Peugeaut'), ('1', '16', 'Renault'), ('1', '17', 'Saab'), ('1', '18', 'Subaru'), ('1', '20', 'Triumph'), ('1', '21', 'Volvo'), ('1', '22', 'Kia Motors'), ('1', '23', 'Hyundai'), ('1', '3', 'BMW'), ('1', '7', 'Citroen'), ('1', '9', 'Fiat'), ('2', '13', 'Daimler Benz'), ('2', '19', 'Toyota'), ('2', '2', 'Volkswagen'), ('2', '8', 'Nissan Motors'), ('3', '5', 'Ford Motor Company'), ('4', '6', 'Chrysler'), ('5', '4', 'General Motors')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'AMC' AND T2.Model = 'Hornet Sportabout (SW)',"Not match: [('13.5',)] != []",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'AMC Hornet Sportabout (SW)',"Not match: [('13.5',)] != []",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(DISTINCT T1.Country) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.Continent = 1,"Not match: [('3',)] != [('1',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France',"Not match: [('3',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN countries AS T2 ON T1.Maker = T2.CountryId WHERE T2.Continent = 6,"Not match: [('13',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'United States';,"Not match: [('13',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;,,True
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT MIN Weight FROM cars_data WHERE Year = 1974 AND Cylinders = 8;,OperationalError('no such column: MIN'),False
spider_data/database/car_1/car_1.sqlite,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT MIN Weight FROM cars_data WHERE Year = 1974 AND Cylinders = 8;,OperationalError('no such column: MIN'),False
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT T1.Maker, T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id","Not match: [('1', 'amc'), ('10', 'hi'), ('11', 'honda'), ('12', 'mazda'), ('13', 'mercedes'), ('13', 'mercedes-benz'), ('14', 'opel'), ('15', 'peugeot'), ('16', 'renault'), ('17', 'saab'), ('18', 'subaru'), ('19', 'scion'), ('19', 'toyota'), ('2', 'audi'), ('2', 'volkswagen'), ('20', 'triumph'), ('21', 'volvo'), ('22', 'kia'), ('23', 'hyundai'), ('3', 'bmw'), ('4', 'buick'), ('4', 'cadillac'), ('4', 'chevrolet'), ('4', 'oldsmobile'), ('4', 'pontiac'), ('5', 'capri'), ('5', 'ford'), ('5', 'mercury'), ('6', 'chrysler'), ('6', 'dodge'), ('6', 'jeep'), ('6', 'plymouth'), ('7', 'citroen'), ('8', 'datsun'), ('8', 'nissan'), ('9', 'fiat')] != [('1', 'amc'), ('11', 'honda'), ('12', 'mazda'), ('13', 'mercedes'), ('13', 'mercedes-benz'), ('14', 'opel'), ('15', 'peugeot'), ('16', 'renault'), ('17', 'saab'), ('18', 'subaru'), ('19', 'scion'), ('19', 'toyota'), ('2', 'audi'), ('2', 'volkswagen'), ('20', 'triumph'), ('21', 'volvo'), ('22', 'kia'), ('23', 'hyundai'), ('3', 'bmw'), ('4', 'buick'), ('4', 'cadillac'), ('4', 'chevrolet'), ('4', 'oldsmobile'), ('4', 'pontiac'), ('5', 'capri'), ('5', 'ford'), ('5', 'mercury'), ('6', 'chrysler'), ('6', 'dodge'), ('6', 'jeep'), ('6', 'plymouth'), ('7', 'citroen'), ('8', 'datsun'), ('8', 'nissan'), ('9', 'fiat')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT T1.Maker, T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id","Not match: [('1', 'amc'), ('10', 'hi'), ('11', 'honda'), ('12', 'mazda'), ('13', 'mercedes'), ('13', 'mercedes-benz'), ('14', 'opel'), ('15', 'peugeot'), ('16', 'renault'), ('17', 'saab'), ('18', 'subaru'), ('19', 'scion'), ('19', 'toyota'), ('2', 'audi'), ('2', 'volkswagen'), ('20', 'triumph'), ('21', 'volvo'), ('22', 'kia'), ('23', 'hyundai'), ('3', 'bmw'), ('4', 'buick'), ('4', 'cadillac'), ('4', 'chevrolet'), ('4', 'oldsmobile'), ('4', 'pontiac'), ('5', 'capri'), ('5', 'ford'), ('5', 'mercury'), ('6', 'chrysler'), ('6', 'dodge'), ('6', 'jeep'), ('6', 'plymouth'), ('7', 'citroen'), ('8', 'datsun'), ('8', 'nissan'), ('9', 'fiat')] != [('1', 'amc'), ('11', 'honda'), ('12', 'mazda'), ('13', 'mercedes'), ('13', 'mercedes-benz'), ('14', 'opel'), ('15', 'peugeot'), ('16', 'renault'), ('17', 'saab'), ('18', 'subaru'), ('19', 'scion'), ('19', 'toyota'), ('2', 'audi'), ('2', 'volkswagen'), ('20', 'triumph'), ('21', 'volvo'), ('22', 'kia'), ('23', 'hyundai'), ('3', 'bmw'), ('4', 'buick'), ('4', 'cadillac'), ('4', 'chevrolet'), ('4', 'oldsmobile'), ('4', 'pontiac'), ('5', 'capri'), ('5', 'ford'), ('5', 'mercury'), ('6', 'chrysler'), ('6', 'dodge'), ('6', 'jeep'), ('6', 'plymouth'), ('7', 'citroen'), ('8', 'datsun'), ('8', 'nissan'), ('9', 'fiat')]",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.Country, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id IS NOT NULL",OperationalError('no such column: T1.Country'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT T1.CountryName, T2.Id FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country","Not match: [('france', '3'), ('germany', '2'), ('italy', '5'), ('japan', '4'), ('korea', '8'), ('sweden', '6'), ('uk', '7'), ('usa', '1')] != [('france', '15'), ('france', '16'), ('france', '7'), ('germany', '13'), ('germany', '14'), ('germany', '2'), ('germany', '3'), ('italy', '9'), ('japan', '11'), ('japan', '12'), ('japan', '18'), ('japan', '19'), ('japan', '8'), ('korea', '22'), ('korea', '23'), ('sweden', '17'), ('sweden', '21'), ('uk', '20'), ('usa', '1'), ('usa', '4'), ('usa', '5'), ('usa', '6')]",False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT COUNT(Id) FROM cars_data WHERE Horsepower > '150';,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT COUNT(Id) FROM cars_data WHERE Horsepower > '150';,,True
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",SELECT AVG(Weight) FROM cars_data GROUP BY Year,"Not match: [('2436.655172413793', '1980'), ('2453.548387096774', '1982'), ('2532.1666666666665', '1981'), ('2861.8055555555557', '1978'), ('2877.925925925926', '1974'), ('2960.344827586207', '1971'), ('2997.3571428571427', '1977'), ('3055.344827586207', '1979'), ('3078.735294117647', '1976'), ('3176.8', '1975'), ('3237.714285714286', '1972'), ('3419.025', '1973'), ('3441.3142857142857', '1970')] != [('2436.655172413793',), ('2453.548387096774',), ('2532.1666666666665',), ('2861.8055555555557',), ('2877.925925925926',), ('2960.344827586207',), ('2997.3571428571427',), ('3055.344827586207',), ('3078.735294117647',), ('3176.8',), ('3237.714285714286',), ('3419.025',), ('3441.3142857142857',)]",False
spider_data/database/car_1/car_1.sqlite,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT AVG(Weight), Year FROM cars_data GROUP BY Year",,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country HAVING COUNT(T2.CountryName) >= 3,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country HAVING COUNT(T1.Id) >= 3,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make","Not match: [('97', 'mazda rx2 coupe')] != [('mazda rx-4', '110'), ('mazda rx-7 gs', '100'), ('mazda rx2 coupe', '97'), ('mazda rx3', '90')]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT Model FROM cars_data WHERE MPG = ( SELECT MAX(MPG) FROM cars_data );,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1,OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,"SELECT AVG(CAST(REPLACE(Horsepower, ',', '') AS REAL)) FROM cars_data WHERE Year < 1980;",,True
spider_data/database/car_1/car_1.sqlite,select avg(horsepower) from cars_data where year  <  1980;,SELECT AVG(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year < 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(Edispl) FROM cars_data WHERE Model = 'volvo',OperationalError('no such column: Model'),False
spider_data/database/car_1/car_1.sqlite,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(T1.EDISPL) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'VOLVO',"Not match: [('133.5',)] != [('',)]",False
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT MAX(Accelerate) FROM cars_data GROUP BY Cylinders,"Not match: [('13.5', '3'), ('20.1', '5'), ('21.0', '6'), ('22.2', '8'), ('24.8', '4')] != [('13.5',), ('20.1',), ('21.0',), ('22.2',), ('24.8',)]",False
spider_data/database/car_1/car_1.sqlite,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT MAX(Accelerate) FROM cars_data,"Not match: [('13.5', '3'), ('20.1', '5'), ('21.0', '6'), ('22.2', '8'), ('24.8', '4')] != [('24.8',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Make FROM car_names GROUP BY Make ORDER BY COUNT(MakeId) DESC LIMIT 1,"Not match: [('ford',)] != [('ford pinto',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(ModelId) DESC LIMIT 1,OperationalError('no such column: ModelId'),False
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT COUNT(*) FROM cars_data WHERE Year = 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT COUNT(Id) FROM cars_data WHERE Year = 1980;,,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company',,True
spider_data/database/car_1/car_1.sqlite,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company',,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3",,True
spider_data/database/car_1/car_1.sqlite,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Maker, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3","Not match: [('Chrysler', '6'), ('General Motors', '4')] != [('chrysler', '6'), ('gm', '4')]",False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Maker IN ( SELECT Maker FROM car_makers WHERE FullName LIKE '%General Motors%' ) OR T1.Weight > 3500,OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Maker IN ( SELECT Maker FROM car_makers WHERE Maker = 'General Motors' ) OR T1.Weight > 3500,OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT YEAR FROM cars_data WHERE Weight BETWEEN 3000 AND 4000,,True
spider_data/database/car_1/car_1.sqlite,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data WHERE Accelerate = ( SELECT MAX(Accelerate) FROM cars_data ),,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT MIN(Cylinders) FROM cars_data WHERE Id = ( SELECT MakeId FROM car_names WHERE Model = 'Volvo' ),"Not match: [('6',)] != [('',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"SELECT MIN(Cylinders) FROM cars_data WHERE ""Accelerate"" = ( SELECT MIN(""Accelerate"") FROM cars_data );","Not match: [('6',)] != [('8',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE accelerate > ( SELECT MAX(accelerate) FROM cars_data ),"Not match: [('39',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE accelerate > ( SELECT MAX(accelerate) FROM cars_data ),"Not match: [('39',)] != [('0',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(DISTINCT T1.Country) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T1.Maker > 2,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('8',)]",False
spider_data/database/car_1/car_1.sqlite,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(DISTINCT T1.Country) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T1.Maker > 2,"Not match: [('3',), ('4',), ('4',), ('5',)] != [('8',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;,,True
spider_data/database/car_1/car_1.sqlite,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;,,True
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,"SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY CAST(REPLACE(T1.Horsepower, ',', '') AS REAL) DESC LIMIT 1","Not match: [('ford',)] != [('citroen',)]",False
spider_data/database/car_1/car_1.sqlite,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1,,True
spider_data/database/car_1/car_1.sqlite,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT T1.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > ( SELECT MIN(Horsepower) FROM cars_data ) AND T1.Cylinders <= 3",OperationalError('no such column: T1.MakeId'),False
spider_data/database/car_1/car_1.sqlite,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT MakeId, Make FROM car_names WHERE MakeId NOT IN ( SELECT Id FROM cars_data WHERE Horsepower = 'min' AND Cylinders < 4 )","Not match: [('119', 'mazda rx3'), ('251', 'mazda rx-4'), ('79', 'mazda rx2 coupe')] != [('1', 'chevrolet chevelle malibu'), ('10', 'amc ambassador dpl'), ('100', 'ford ltd'), ('101', 'plymouth fury gran sedan'), ('102', 'chrysler new yorker brougham'), ('103', 'buick electra 225 custom'), ('104', 'amc ambassador brougham'), ('105', 'plymouth valiant'), ('106', 'chevrolet nova custom'), ('107', 'amc hornet'), ('108', 'ford maverick'), ('109', 'plymouth duster'), ('11', 'citroen ds-21 pallas'), ('110', 'volkswagen super beetle'), ('111', 'chevrolet impala'), ('112', 'ford country'), ('113', 'plymouth custom suburb'), ('114', 'oldsmobile vista cruiser'), ('115', 'amc gremlin'), ('116', 'toyota carina'), ('117', 'chevrolet vega'), ('118', 'datsun 610'), ('119', 'mazda rx3'), ('12', 'chevrolet chevelle concours (sw)'), ('120', 'ford pinto'), ('121', 'mercury capri v6'), ('122', 'fiat 124 sport coupe'), ('123', 'chevrolet monte carlo s'), ('124', 'pontiac grand prix'), ('125', 'fiat 128'), ('126', 'opel manta'), ('127', 'audi 100ls'), ('128', 'volvo 144ea'), ('129', 'dodge dart custom'), ('13', 'ford torino (sw)'), ('130', 'saab 99le'), ('131', 'toyota mark ii'), ('132', 'oldsmobile omega'), ('133', 'plymouth duster'), ('134', 'ford maverick'), ('135', 'amc hornet'), ('136', 'chevrolet nova'), ('137', 'datsun b210'), ('138', 'ford pinto'), ('139', 'toyota corolla 1200'), ('14', 'plymouth satellite (sw)'), ('140', 'chevrolet vega'), ('141', 'chevrolet chevelle malibu classic'), ('142', 'amc matador'), ('143', 'plymouth satellite sebring'), ('144', 'ford gran torino'), ('145', 'buick century luxus (sw)'), ('146', 'dodge coronet custom (sw)'), ('147', 'ford gran torino (sw)'), ('148', 'amc matador (sw)'), ('149', 'audi fox'), ('15', 'amc rebel sst (sw)'), ('150', 'volkswagen dasher'), ('151', 'opel manta'), ('152', 'toyota corona'), ('153', 'datsun 710'), ('154', 'dodge colt'), ('155', 'fiat 128'), ('156', 'fiat 124 tc'), ('157', 'honda civic'), ('158', 'subaru'), ('159', 'fiat x1.9'), ('16', 'dodge challenger se'), ('160', 'plymouth valiant custom'), ('161', 'chevrolet nova'), ('162', 'mercury monarch'), ('163', 'ford maverick'), ('164', 'pontiac catalina'), ('165', 'chevrolet bel air'), ('166', 'plymouth grand fury'), ('167', 'ford ltd'), ('168', 'buick century'), ('169', 'chevrolet chevelle malibu'), ('17', 'plymouth cuda 340'), ('170', 'amc matador'), ('171', 'plymouth fury'), ('172', 'buick skyhawk'), ('173', 'chevrolet monza 2+2'), ('174', 'ford mustang ii'), ('175', 'toyota corolla'), ('176', 'ford pinto'), ('177', 'amc gremlin'), ('178', 'pontiac astro'), ('179', 'toyota corona'), ('18', 'ford mustang boss 302'), ('180', 'volkswagen dasher'), ('181', 'datsun 710'), ('182', 'ford pinto'), ('183', 'volkswagen rabbit'), ('184', 'amc pacer'), ('185', 'audi 100ls'), ('186', 'peugeot 504'), ('187', 'volvo 244dl'), ('188', 'saab 99le'), ('189', 'honda civic cvcc'), ('19', 'chevrolet monte carlo'), ('190', 'fiat 131'), ('191', 'opel 1900'), ('192', 'capri ii'), ('193', 'dodge colt'), ('194', 'renault 12tl'), ('195', 'chevrolet chevelle malibu classic'), ('196', 'dodge coronet brougham'), ('197', 'amc matador'), ('198', 'ford gran torino'), ('199', 'plymouth valiant'), ('2', 'buick skylark 320'), ('20', 'buick estate wagon (sw)'), ('200', 'chevrolet nova'), ('201', 'ford maverick'), ('202', 'amc hornet'), ('203', 'chevrolet chevette'), ('204', 'chevrolet woody'), ('205', 'vw rabbit'), ('206', 'honda civic'), ('207', 'dodge aspen se'), ('208', 'ford granada ghia'), ('209', 'pontiac ventura sj'), ('21', 'toyota corona mark ii'), ('210', 'amc pacer d/l'), ('211', 'volkswagen rabbit'), ('212', 'datsun b-210'), ('213', 'toyota corolla'), ('214', 'ford pinto'), ('215', 'volvo 245'), ('216', 'plymouth volare premier v8'), ('217', 'peugeot 504'), ('218', 'toyota mark ii'), ('219', 'mercedes-benz 280s'), ('22', 'plymouth duster'), ('220', 'cadillac seville'), ('221', 'chevy c10'), ('222', 'ford f108'), ('223', 'dodge d100'), ('224', 'honda accord cvcc'), ('225', 'buick opel isuzu deluxe'), ('226', 'renault 5 gtl'), ('227', 'plymouth arrow gs'), ('228', 'datsun f-10 hatchback'), ('229', 'chevrolet caprice classic'), ('23', 'amc hornet'), ('230', 'oldsmobile cutlass supreme'), ('231', 'dodge monaco brougham'), ('232', 'mercury cougar brougham'), ('233', 'chevrolet concours'), ('234', 'buick skylark'), ('235', 'plymouth volare custom'), ('236', 'ford granada'), ('237', 'pontiac grand prix lj'), ('238', 'chevrolet monte carlo landau'), ('239', 'chrysler cordoba'), ('24', 'ford maverick'), ('240', 'ford thunderbird'), ('241', 'volkswagen rabbit custom'), ('242', 'pontiac sunbird coupe'), ('243', 'toyota corolla liftback'), ('244', 'ford mustang ii 2+2'), ('245', 'chevrolet chevette'), ('246', 'dodge colt m/m'), ('247', 'subaru dl'), ('248', 'volkswagen dasher'), ('249', 'datsun 810'), ('25', 'datsun pl510'), ('250', 'bmw 320i'), ('251', 'mazda rx-4'), ('252', 'volkswagen rabbit custom diesel'), ('253', 'ford fiesta'), ('254', 'mazda glc deluxe'), ('255', 'datsun b210 gx'), ('256', 'honda civic cvcc'), ('257', 'oldsmobile cutlass salon brougham'), ('258', 'dodge diplomat'), ('259', 'mercury monarch ghia'), ('26', 'volkswagen 1131 deluxe sedan'), ('260', 'pontiac phoenix lj'), ('261', 'chevrolet malibu'), ('262', 'ford fairmont (auto)'), ('263', 'ford fairmont (man)'), ('264', 'plymouth volare'), ('265', 'amc concord'), ('266', 'buick century special'), ('267', 'mercury zephyr'), ('268', 'dodge aspen'), ('269', 'amc concord d/l'), ('27', 'peugeot 504'), ('270', 'chevrolet monte carlo landau'), ('271', 'buick regal sport coupe (turbo)'), ('272', 'ford futura'), ('273', 'dodge magnum xe'), ('274', 'chevrolet chevette'), ('275', 'toyota corona'), ('276', 'datsun 510'), ('277', 'dodge omni'), ('278', 'toyota celica gt liftback'), ('279', 'plymouth sapporo'), ('28', 'audi 100 ls'), ('280', 'oldsmobile starfire sx'), ('281', 'datsun 200-sx'), ('282', 'audi 5000'), ('283', 'volvo 264gl'), ('284', 'saab 99gle'), ('285', 'peugeot 604sl'), ('286', 'volkswagen scirocco'), ('287', 'honda accord lx'), ('288', 'pontiac lemans v6'), ('289', 'mercury zephyr 6'), ('29', 'saab 99e'), ('290', 'ford fairmont 4'), ('291', 'amc concord dl 6'), ('292', 'dodge aspen 6'), ('293', 'chevrolet caprice classic'), ('294', 'ford ltd landau'), ('295', 'mercury grand marquis'), ('296', 'dodge st. regis'), ('297', 'buick estate wagon (sw)'), ('298', 'ford country squire (sw)'), ('299', 'chevrolet malibu classic (sw)'), ('3', 'plymouth satellite'), ('30', 'bmw 2002'), ('300', 'chrysler lebaron town @ country (sw)'), ('301', 'vw rabbit custom'), ('302', ' mazda glc deluxe'), ('303', 'dodge colt hatchback custom'), ('304', 'amc spirit dl'), ('305', 'mercedes benz 300d'), ('306', 'cadillac eldorado'), ('307', 'peugeot 504'), ('308', 'oldsmobile cutlass salon brougham'), ('309', 'plymouth horizon'), ('31', 'amc gremlin'), ('310', 'plymouth horizon tc3'), ('311', 'datsun 210'), ('312', 'fiat strada custom'), ('313', 'buick skylark limited'), ('314', 'chevrolet citation'), ('315', 'oldsmobile omega brougham'), ('316', 'pontiac phoenix'), ('317', 'vw rabbit'), ('318', 'toyota corolla tercel'), ('319', 'chevrolet chevette'), ('32', 'ford f250'), ('320', 'datsun 310'), ('321', 'chevrolet citation'), ('322', 'ford fairmont'), ('323', 'amc concord'), ('324', 'dodge aspen'), ('325', 'audi 4000'), ('326', 'toyota corona liftback'), ('327', 'mazda 626'), ('328', 'datsun 510 hatchback'), ('329', 'toyota corolla'), ('33', 'chevy c20'), ('330', 'mazda glc'), ('331', 'dodge colt'), ('332', 'datsun 210'), ('333', 'vw rabbit c (diesel)'), ('334', 'vw dasher (diesel)'), ('335', 'audi 5000s (diesel)'), ('336', 'mercedes-benz 240d'), ('337', 'honda civic 1500 gl'), ('338', 'renault lecar deluxe'), ('339', 'subaru dl'), ('34', 'dodge d200'), ('340', 'volkswagen rabbit'), ('341', 'datsun 280-zx'), ('342', 'mazda rx-7 gs'), ('343', 'triumph tr7 coupe'), ('344', 'ford mustang cobra'), ('345', 'honda accord'), ('346', 'plymouth reliant'), ('347', 'buick skylark'), ('348', 'dodge aries wagon (sw)'), ('349', 'chevrolet citation'), ('35', 'hi 1200d'), ('350', 'plymouth reliant'), ('351', 'toyota starlet'), ('352', 'plymouth champ'), ('353', 'honda civic 1300'), ('354', 'subaru'), ('355', 'datsun 210 mpg'), ('356', 'toyota tercel'), ('357', 'mazda glc 4'), ('358', 'plymouth horizon 4'), ('359', 'ford escort 4w'), ('36', 'datsun pl510'), ('360', 'ford escort 2h'), ('361', 'volkswagen jetta'), ('362', 'renault 18i'), ('363', 'honda prelude'), ('364', 'toyota corolla'), ('365', 'datsun 200sx'), ('366', 'mazda 626'), ('367', 'peugeot 505s turbo diesel'), ('368', 'saab 900s'), ('369', 'volvo diesel'), ('37', 'chevrolet vega 2300'), ('370', 'toyota cressida'), ('371', 'datsun 810 maxima'), ('372', 'buick century'), ('373', 'oldsmobile cutlass ls'), ('374', 'ford granada gl'), ('375', 'chrysler lebaron salon'), ('376', 'chevrolet cavalier'), ('377', 'chevrolet cavalier wagon'), ('378', 'chevrolet cavalier 2-door'), ('379', 'pontiac j2000 se hatchback'), ('38', 'toyota corona'), ('380', 'dodge aries se'), ('381', 'pontiac phoenix'), ('382', 'ford fairmont futura'), ('383', 'amc concord dl'), ('384', 'volkswagen rabbit l'), ('385', 'mazda glc custom l'), ('386', 'mazda glc custom'), ('387', 'plymouth horizon miser'), ('388', 'mercury lynx l'), ('389', 'nissan stanza xe'), ('39', 'ford pinto'), ('390', 'honda accord'), ('391', 'toyota corolla'), ('392', 'honda civic'), ('393', 'honda civic (auto)'), ('394', 'datsun 310 gx'), ('395', 'buick century limited'), ('396', 'oldsmobile cutlass ciera (diesel)'), ('397', 'chrysler lebaron medallion'), ('398', 'ford granada l'), ('399', 'toyota celica gt'), ('4', 'amc rebel sst'), ('40', 'volkswagen super beetle 117'), ('400', 'dodge charger 2.2'), ('401', 'chevrolet camaro'), ('402', 'ford mustang gl'), ('403', 'vw pickup'), ('404', 'dodge rampage'), ('405', 'ford ranger'), ('406', 'chevy s-10'), ('41', 'amc gremlin'), ('42', 'plymouth satellite custom'), ('43', 'chevrolet chevelle malibu'), ('44', 'ford torino 500'), ('45', 'amc matador'), ('46', 'chevrolet impala'), ('47', 'pontiac catalina brougham'), ('48', 'ford galaxie 500'), ('49', 'plymouth fury iii'), ('5', 'ford torino'), ('50', 'dodge monaco (sw)'), ('51', 'ford country squire (sw)'), ('52', 'pontiac safari (sw)'), ('53', 'amc hornet sportabout (sw)'), ('54', 'chevrolet vega (sw)'), ('55', 'pontiac firebird'), ('56', 'ford mustang'), ('57', 'mercury capri 2000'), ('58', 'opel 1900'), ('59', 'peugeot 304'), ('6', 'ford galaxie 500'), ('60', 'fiat 124b'), ('61', 'toyota corolla 1200'), ('62', 'datsun 1200'), ('63', 'volkswagen model 111'), ('64', 'plymouth cricket'), ('65', 'toyota corona hardtop'), ('66', 'dodge colt hardtop'), ('67', 'volkswagen type 3'), ('68', 'chevrolet vega'), ('69', 'ford pinto runabout'), ('7', 'chevrolet impala'), ('70', 'chevrolet impala'), ('71', 'pontiac catalina'), ('72', 'plymouth fury iii'), ('73', 'ford galaxie 500'), ('74', 'amc ambassador sst'), ('75', 'mercury marquis'), ('76', 'buick lesabre custom'), ('77', 'oldsmobile delta 88 royale'), ('78', 'chrysler newport royal'), ('79', 'mazda rx2 coupe'), ('8', 'plymouth fury iii'), ('80', 'amc matador (sw)'), ('81', 'chevrolet chevelle concours (sw)'), ('82', 'ford gran torino (sw)'), ('83', 'plymouth satellite custom (sw)'), ('84', 'volvo 145e (sw)'), ('85', 'volkswagen 411 (sw)'), ('86', 'peugeot 504 (sw)'), ('87', 'renault 12 (sw)'), ('88', 'ford pinto (sw)'), ('89', 'datsun 510 (sw)'), ('9', 'pontiac catalina'), ('90', 'toyota corona mark ii (sw)'), ('91', 'dodge colt (sw)'), ('92', 'toyota corolla 1600 (sw)'), ('93', 'buick century 350'), ('94', 'amc matador'), ('95', 'chevrolet malibu'), ('96', 'ford gran torino'), ('97', 'dodge coronet custom'), ('98', 'mercury marquis brougham'), ('99', 'chevrolet caprice classic')]",False
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980,,True
spider_data/database/car_1/car_1.sqlite,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980,,True
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < 3500 AND T2.Maker NOT IN ( SELECT Maker FROM car_makers WHERE FullName = 'Ford Motor Company' ),OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < 3500 AND T2.Maker != ( SELECT Maker FROM car_makers WHERE Country = 'USA' ),OperationalError('no such column: T2.Maker'),False
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country HAVING COUNT(T1.Id) = 0,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT T2.Country FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T1.Maker IS NULL,OperationalError('no such column: T2.Country'),False
spider_data/database/car_1/car_1.sqlite,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT T1.Maker, T2.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T2.Maker HAVING COUNT(T2.Model) >= 2 AND COUNT(DISTINCT T1.Id) > 3",OperationalError('no such column: T2.Id'),False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Id, T2.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T2.Maker HAVING COUNT(T2.Model) >= 2 AND SUM(CASE WHEN T2.Model IN ( SELECT Model FROM model_list GROUP BY Model ORDER BY COUNT(Model) DESC LIMIT 3 ) THEN 1 ELSE 0 END) > 3","Not match: [('19', 'toyota'), ('2', 'volkswagen'), ('4', 'gm'), ('5', 'ford'), ('6', 'chrysler'), ('8', 'nissan')] != []",False
spider_data/database/car_1/car_1.sqlite,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","SELECT T1.Id, T1.Country FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Maker IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model) > 3 ) OR T2.Model = 'fiat'",OperationalError('no such column: T1.Id'),False
spider_data/database/car_1/car_1.sqlite,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Maker IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Maker) > 3 ) OR T2.Maker = 'Fiat'","Not match: [('1', 'usa'), ('2', 'germany'), ('4', 'japan'), ('5', 'italy')] != []",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';,"Not match: [('USA',)] != []",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';,"Not match: [('JetBlue',)] != []",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT COUNT(uid) FROM airlines,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRLINES,SELECT COUNT(uid) FROM airlines,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT COUNT(AirportCode) FROM airports;,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM AIRPORTS,SELECT COUNT(AirportCode) FROM airports;,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT COUNT(*) FROM flights;,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT count(*) FROM FLIGHTS,SELECT COUNT(*) FROM flights,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",SELECT COUNT(*) FROM airlines WHERE Country = 'USA';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",SELECT COUNT(*) FROM airlines WHERE Country = 'USA';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT Country, City FROM airports WHERE AirportCode = 'ALN'","Not match: [] != [('United States ', 'Alton ')]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City, Country FROM airports WHERE AirportCode = 'ALN'","Not match: [] != [('Alton ', 'United States ')]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City = 'Aberdeen';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",SELECT COUNT(Distinct DestAirport) FROM flights WHERE DestAirport = 'ATO';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights AS f JOIN airports AS a ON f.SourceAirport = a.AirportCode WHERE a.City = 'Aberdeen';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen'),,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen'),,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'ABZ';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'Ashley' AND SourceAirport = 'Aberdeen';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'Aberdeen' AND SourceAirport = 'Ashley';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways',"Not match: [('100',)] != [('0',)]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(DISTINCT T1.FlightNo) FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation = 'JY',"Not match: [('100',)] != [('0',)]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""",SELECT COUNT(*) FROM flights AS f JOIN airlines AS a ON f.Airline = a.uid WHERE f.DestAirport = 'ASY' AND a.Abbreviation = 'UA',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'ASY' AND Airline IN ( SELECT uid FROM airlines );,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'AHD' AND Airline = 'United Airlines';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT COUNT(*) FROM flights WHERE DestAirport = 'AHD' AND Airline IN ( SELECT uid FROM airlines );,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",SELECT COUNT(DISTINCT T1.FlightNo) FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation = 'UA' AND T1.DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' ),,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' ) AND Airline = 1;,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT City FROM flights GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1;,OperationalError('no such column: City'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(DestAirport) DESC LIMIT 1,"Not match: [] != [(' AXG',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT City FROM flights GROUP BY City ORDER BY COUNT(Distinct SourceAirport) DESC LIMIT 1,OperationalError('no such column: City'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(SourceAirport) DESC LIMIT 1,"Not match: [] != [(' AXG',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1,"Not match: [] != [(' AXG',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT T1.AirportCode FROM flights AS T1 INNER JOIN flights AS T2 ON T1.SourceAirport = T2.DestAirport GROUP BY T1.SourceAirport ORDER BY COUNT(T1.FlightNo) DESC LIMIT 1,OperationalError('no such column: T1.AirportCode'),False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(SourceAirport) LIMIT 1,"Not match: [] != [(' AID',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(DestAirport) LIMIT 1,"Not match: [] != [(' AID',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T1.Airline ORDER BY COUNT(T1.FlightNo) DESC LIMIT 1,"Not match: [('Virgin America',)] != [('1',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T1.Airline ORDER BY COUNT(T1.FlightNo) DESC LIMIT 1,"Not match: [('Virgin America',)] != [('1',)]",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE uid = ( SELECT MIN(uid) FROM flights );",OperationalError('misuse of aggregate: MIN()'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE Abbreviation = ( SELECT Abbreviation FROM flights GROUP BY Abbreviation ORDER BY COUNT(*) LIMIT 1 )",OperationalError('no such column: Abbreviation'),False
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'AHD',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = 'AHD',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.DestAirport = 'AHD',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.DestAirport = 'AHD',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",SELECT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'APG' AND T2.DestAirport = 'CVO',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","SELECT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport IN ('APG', 'CVO')",,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT DISTINCT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'CVO' EXCEPT SELECT DISTINCT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'APG',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT DISTINCT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = 'CVO' EXCEPT SELECT DISTINCT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.DestAirport = 'APG',,True
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(DISTINCT FlightNo) >= 10,"Not match: [('AirTran Airways',), ('Allegiant Air',), ('American Airlines',), ('Continental Airlines',), ('Delta Airlines',), ('Frontier Airlines',), ('JetBlue Airways',), ('Northwest Airlines',), ('Southwest Airlines',), ('US Airways',), ('United Airlines',), ('Virgin America',)] != [('1',), ('10',), ('11',), ('12',), ('2',), ('3',), ('4',), ('5',), ('6',), ('7',), ('8',), ('9',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT DISTINCT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T1.Airline HAVING COUNT(*) >= 10,"Not match: [('AirTran Airways',), ('Allegiant Air',), ('American Airlines',), ('Continental Airlines',), ('Delta Airlines',), ('Frontier Airlines',), ('JetBlue Airways',), ('Northwest Airlines',), ('Southwest Airlines',), ('US Airways',), ('United Airlines',), ('Virgin America',)] != [('1',), ('10',), ('11',), ('12',), ('2',), ('3',), ('4',), ('5',), ('6',), ('7',), ('8',), ('9',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) < 200,"Not match: [('AirTran Airways',), ('Allegiant Air',), ('American Airlines',), ('Continental Airlines',), ('Delta Airlines',), ('Frontier Airlines',), ('JetBlue Airways',), ('Northwest Airlines',), ('Southwest Airlines',), ('US Airways',), ('United Airlines',), ('Virgin America',)] != [('1',), ('10',), ('11',), ('12',), ('2',), ('3',), ('4',), ('5',), ('6',), ('7',), ('8',), ('9',)]",False
spider_data/database/flight_2/flight_2.sqlite,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT DISTINCT T1.Airline FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo < 200,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT T2.FlightNo FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = 'United Airlines',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT DISTINCT T1.FlightNo FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation = 'UA',"Not match: [('1000',), ('1001',), ('1026',), ('1027',), ('1062',), ('1063',), ('1068',), ('1069',), ('108',), ('109',), ('1100',), ('1101',), ('1144',), ('1145',), ('1166',), ('1167',), ('1168',), ('1169',), ('1192',), ('1193',), ('1208',), ('1209',), ('1216',), ('1217',), ('1250',), ('1251',), ('1274',), ('1275',), ('1284',), ('1285',), ('1328',), ('1329',), ('142',), ('143',), ('148',), ('149',), ('198',), ('199',), ('226',), ('227',), ('276',), ('277',), ('28',), ('29',), ('308',), ('309',), ('326',), ('327',), ('370',), ('371',), ('414',), ('415',), ('424',), ('425',), ('44',), ('45',), ('470',), ('471',), ('520',), ('521',), ('54',), ('55',), ('556',), ('557',), ('560',), ('561',), ('604',), ('605',), ('608',), ('609',), ('626',), ('627',), ('658',), ('659',), ('708',), ('709',), ('744',), ('745',), ('754',), ('755',), ('786',), ('787',), ('810',), ('811',), ('828',), ('829',), ('878',), ('879',), ('888',), ('889',), ('90',), ('900',), ('901',), ('91',), ('924',), ('925',), ('946',), ('947',), ('996',), ('997',)] != []",False
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE SourceAirport = 'APG',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE SourceAirport = 'APG',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG';,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT T1.FlightNo FROM flights AS T1 INNER JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT T2.FlightNo FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT T2.FlightNo FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT T2.FlightNo FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.City = 'Aberdeen',,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') OR DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Abilene');,,True
spider_data/database/flight_2/flight_2.sqlite,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') OR DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Abilene');,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE AirportCode NOT IN ( SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights );,,True
spider_data/database/flight_2/flight_2.sqlite,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT DISTINCT SourceAirport FROM flights WHERE DestAirport NOT IN ( SELECT AirportCode FROM flights ),OperationalError('no such column: AirportCode'),False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT COUNT(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(*) FROM employee,SELECT COUNT(*) FROM employee,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC;,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT COUNT(""City""), ""City"" FROM employee GROUP BY ""City"";",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City","Not match: [('1', 'Leicester'), ('1', 'Sale'), ('2', 'Wasps'), ('3', 'Bath'), ('3', 'Bristol')] != [('Bath', '3'), ('Bristol', '3'), ('Leicester', '1'), ('Sale', '1'), ('Wasps', '2')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT COUNT(""Location""), ""Location"" FROM shop GROUP BY ""Location"";",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, COUNT(*) FROM shop GROUP BY Location","Not match: [('1', 'Espoo'), ('1', 'Helsinki'), ('1', 'Jakobstad'), ('1', 'Kotka'), ('1', 'Kuopio'), ('1', 'Lahti'), ('1', 'Mariehamn'), ('1', 'Turku'), ('1', 'Valkeakoski')] != [('Espoo', '1'), ('Helsinki', '1'), ('Jakobstad', '1'), ('Kotka', '1'), ('Kuopio', '1'), ('Lahti', '1'), ('Mariehamn', '1'), ('Turku', '1'), ('Valkeakoski', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name, District FROM shop WHERE Number_products = ( SELECT MAX(Number_products) FROM shop );",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name, District FROM shop WHERE Number_products = ( SELECT MAX(Number_products) FROM shop )",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT MIN(Number_products) , MAX(Number_products) FROM shop",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT MIN(Number_products) , MAX(Number_products) FROM shop",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT Name, Location, District FROM shop ORDER BY Number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT Name, Location, District FROM shop ORDER BY Number_products DESC",,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop),,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1;,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT Name FROM employee WHERE Employee_ID NOT IN ( SELECT Employee_ID FROM evaluation );,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT Name FROM employee WHERE Employee_ID NOT IN ( SELECT Employee_ID FROM evaluation );,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1;,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Is_full_time = False,"Not match: [('FC Honka',), ('IFK Mariehamn',), ('KuPS',)] != []",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT T1.Name, COUNT(T2.Shop_ID) FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name","Not match: [('1', 'FC Inter'), ('1', 'FC KooTeePee'), ('1', 'FC Lahti'), ('1', 'FF Jaro'), ('1', 'HJK'), ('2', 'FC Haka')] != [('FC Haka', '2'), ('FC Inter', '1'), ('FC KooTeePee', '1'), ('FC Lahti', '1'), ('FF Jaro', '1'), ('HJK', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID","Not match: [('1', 'FC Inter'), ('1', 'FC KooTeePee'), ('1', 'FC Lahti'), ('1', 'FF Jaro'), ('1', 'HJK'), ('2', 'FC Haka')] != [('FC Haka', '2'), ('FC Inter', '1'), ('FC KooTeePee', '1'), ('FC Lahti', '1'), ('FF Jaro', '1'), ('HJK', '1')]",False
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT SUM(Bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT sum(bonus) FROM evaluation,SELECT SUM(Bonus) FROM evaluation,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring;,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT * FROM hiring,SELECT * FROM hiring;,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,SELECT COUNT(DISTINCT Location) FROM shop,,True
spider_data/database/employee_hire_evaluation/employee_hire_evaluation.sqlite,SELECT count(DISTINCT LOCATION) FROM shop,"SELECT COUNT(DISTINCT ""Location"") FROM shop",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT COUNT(*) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents,SELECT COUNT(*) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID, Document_Name, Document_Description FROM Documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID, Document_Name, Document_Description FROM Documents",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT COUNT(DISTINCT Template_ID) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(DISTINCT template_id) FROM Documents,SELECT COUNT(DISTINCT Template_ID) FROM Documents,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT COUNT(DISTINCT T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT COUNT(DISTINCT T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT Template_ID, COUNT(Document_ID) FROM Documents GROUP BY Template_ID",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Template_ID, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1",OperationalError('no such column: T2.Template_Type_Code'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT COUNT(Template_ID) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Templates,SELECT COUNT(*) FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT Template_Type_Code FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT Template_Type_Code FROM Templates,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT COUNT(Template_ID) FROM Templates WHERE Template_Type_Code = 'CV',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT COUNT(Template_ID) FROM Templates WHERE Template_Type_Code = 'CV',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Templates WHERE Template_ID IN ( SELECT Template_ID FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3 ),,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_Type_Code) < 3,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT MIN(Version_Number), Template_Type_Code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT MIN(Version_Number), Template_Type_Code FROM Templates",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""",SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""",SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT Document_Name FROM Documents WHERE Template_ID IN ( SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK' ),,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT T2.Document_Name FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Template_Type_Code = 'BK',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code","Not match: [('AD', '3'), ('BK', '5'), ('PP', '4'), ('PPT', '3')] != [('AD', '3'), ('BK', '6'), ('CV', '2'), ('PP', '6'), ('PPT', '3')]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(DISTINCT Document_ID) FROM Documents GROUP BY Template_Type_Code",OperationalError('no such column: Template_Type_Code'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Document_ID) DESC LIMIT 1,OperationalError('no such column: Document_ID'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates WHERE Template_Type_Code = ( SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Document_ID) DESC LIMIT 1 ),OperationalError('no such column: Document_ID'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT Template_Type_Code FROM Templates WHERE Template_Type_Code NOT IN ( SELECT Template_Type_Code FROM Documents ),"Not match: [('CV',)] != []",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT Template_Type_Code FROM Templates WHERE Template_Type_Code NOT IN ( SELECT Template_ID FROM Documents ),"Not match: [('CV',)] != [('AD',), ('AD',), ('AD',), ('BK',), ('BK',), ('BK',), ('BK',), ('BK',), ('BK',), ('CV',), ('CV',), ('PP',), ('PP',), ('PP',), ('PP',), ('PP',), ('PP',), ('PPT',), ('PPT',), ('PPT',)]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""",SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""",SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID,OperationalError('no such column: T2.Template_Type_Description'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID,OperationalError('no such column: T2.Template_Type_Description'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation',OperationalError('no such column: Template_Type_Description'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation',OperationalError('no such column: Template_Type_Description'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT COUNT(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs,SELECT COUNT(*) FROM Paragraphs,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show'),,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show');,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea ';,"Not match: [('',), ('',)] != []",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,select other_details from paragraphs where paragraph_text like 'korea',"SELECT T1.Paragraph_Text, T2.Other_Details FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text LIKE '%Korea %'","Not match: [('',), ('',)] != []",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT T1.Document_ID, T2.Paragraph_Text FROM Paragraphs AS T2 INNER JOIN Documents AS T1 ON T2.Document_ID = T1.Document_ID WHERE T1.Document_Name = 'Welcome to NY'","Not match: [('16615', 'Japan'), ('608931827', 'Micronesia')] != [('80', 'Japan'), ('80', 'Micronesia')]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Customer reviews'),,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Customer reviews',,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID;",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Distinct Paragraph_ID) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID, Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) DESC LIMIT 1",OperationalError('ambiguous column name: Document_ID'),False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID, Document_Name FROM Documents WHERE Document_ID = ( SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) DESC LIMIT 1 )",,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Document_ID) LIMIT 1,,True
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT T2.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE LENGTH(T1.Paragraph_Text) BETWEEN 1 AND 2,"Not match: [('16514113',), ('3',), ('33930',), ('3540024',), ('3830',), ('385906526',), ('50123',), ('651512',), ('80',)] != [('33930',)]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text LIKE '%%' AND LENGTH(T1.Paragraph_Text) BETWEEN 1 AND 2,"Not match: [('16514113',), ('3',), ('33930',), ('3540024',), ('3830',), ('385906526',), ('50123',), ('651512',), ('80',)] != [('33930',)]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',"SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')","Not match: [('16514113',)] != [('16514113',), ('16514113',)]",False
spider_data/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text LIKE '%Brazil%Ireland%',"Not match: [('16514113',)] != []",False
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT COUNT(*) FROM teacher;,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT count(*) FROM teacher,SELECT COUNT(*) FROM teacher;,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age, Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Age ,  Hometown FROM teacher","SELECT Age, Hometown FROM teacher",,True
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',"Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
spider_data/database/course_teach/course_teach.sqlite,"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',"Not match: [('Anne Walker',), ('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)] != [('Gustaaf Deloor',), ('John Deloor',), ('Joseph Huts',), ('Kearsley Brown',), ('Lucy Wong',), ('Vicente Carretero',)]",False
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = '32' OR Age = '33',,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age = '32' OR Age = '33',,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher WHERE Age = ( SELECT MIN(Age) FROM teacher );,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher WHERE Age = ( SELECT MIN(Age) FROM teacher );,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",SELECT COUNT(T1.Teacher_ID) FROM teacher AS T1 INNER JOIN teacher AS T2 ON T1.Hometown = T2.Hometown GROUP BY T1.Hometown,"Not match: [('Blackrod Urban District', '1'), ('Bolton County Borough', '1'), ('Farnworth Municipal Borough', '1'), ('Horwich Urban District', '1'), ('Kearsley Urban District', '1'), ('Little Lever Urban District', '1'), ('Turton Urban District', '1')] != [('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('1',)]",False
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT T1.Hometown FROM teacher AS T1 INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Hometown = T2.Hometown AND T1.Teacher_ID < T2.Teacher_ID,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT T1.Hometown FROM teacher AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) > 1,,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID",OperationalError('no such column: T2.Course'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T1.Name ASC;",OperationalError('no such column: T2.Course'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T1.Name ASC",OperationalError('no such column: T2.Course'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T1.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T1.Course = 'Math',OperationalError('no such column: T1.Name'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T1.Name FROM course_arrange AS T1 INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Course_ID IN ( SELECT Course_ID FROM course WHERE Course = 'Math' );,OperationalError('no such column: T1.Name'),False
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name, COUNT(*) FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name",,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Teacher_ID) >= 2,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN ( SELECT Teacher_ID FROM course_arrange );,,True
spider_data/database/course_teach/course_teach.sqlite,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID IS NULL,"Not match: [('John Deloor',), ('Joseph Huts',)] != []",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE age  <  30,SELECT COUNT(*) FROM visitor WHERE Age < 30;,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC",,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = ( SELECT MAX(Num_of_Staff) FROM museum )",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,SELECT AVG(T2.Num_of_Staff) FROM museum AS T1 INNER JOIN ( SELECT Museum_ID FROM museum WHERE Open_Year < '2009' ) AS T2 ON T1.Museum_ID = T2.Museum_ID,OperationalError('no such column: T2.Num_of_Staff'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'","Not match: [('62', '2000')] != [('2000', '62')]",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010'),,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","SELECT T1.id, T2.name, T2.age FROM visitor AS T2 INNER JOIN visit AS T1 ON T2.id = T1.visitor_id GROUP BY T1.visitor_id HAVING COUNT(T1.museum_id) > 1",OperationalError('no such column: T1.id'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T1.id, T2.name, T1.Total_spent FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID ORDER BY T1.Total_spent DESC LIMIT 1",OperationalError('no such column: T1.id'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT T1.Museum_ID, T1.Name FROM museum AS T1 INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(T2.Museum_ID) DESC LIMIT 1",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT Name FROM museum WHERE Museum_ID NOT IN ( SELECT Museum_ID FROM visit );,,True
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT T1.Name, T2.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY SUM(T2.Num_of_Ticket) DESC LIMIT 1",OperationalError('no such column: T2.Age'),False
spider_data/database/museum_visit/museum_visit.sqlite,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","SELECT AVG(Num_of_Ticket) ,  MAX(Num_of_Ticket) FROM visit",,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT SUM(T2.Total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1,,True
spider_data/database/museum_visit/museum_visit.sqlite,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT T2.Name FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T1.Museum_ID IN ( SELECT Museum_ID FROM museum WHERE Open_Year < '2009' ) AND T1.Museum_ID IN ( SELECT Museum_ID FROM museum WHERE Open_Year > '2011' );,"Not match: [('Fernando Gago',)] != []",False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),SELECT COUNT(*) FROM visitor v LEFT JOIN visit vi ON v.ID = vi.visitor_ID WHERE vi.Museum_ID IS NULL AND Open_Year < '2011',OperationalError('no such column: Open_Year'),False
spider_data/database/museum_visit/museum_visit.sqlite,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT COUNT(player_id) FROM players;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM players,SELECT COUNT(*) FROM players;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT COUNT(*) FROM matches;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches,SELECT COUNT(*) FROM matches;,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name, birth_date FROM players WHERE country_code = 'USA'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name, birth_date FROM players WHERE country_code = 'USA'",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches",SELECT AVG(CASE WHEN winner_name = 'Winner' THEN winner_age ELSE loser_age END) FROM matches,"Not match: [('27.311213862584534', '27.062177773183812')] != [('27.311213862584534',)]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT AVG(loser_age), AVG(winner_age) FROM matches",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT AVG(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT avg(winner_rank) FROM matches,SELECT AVG(winner_rank) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT MAX(loser_rank) FROM matches,"Not match: [('1',)] != [('112',)]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT min(loser_rank) FROM matches,SELECT MIN loser_rank FROM matches,OperationalError('no such column: MIN'),False
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT COUNT(DISTINCT country_code) FROM players;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT country_code) FROM players,SELECT COUNT(DISTINCT country_code) FROM players;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT COUNT(DISTINCT loser_name) FROM matches,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT loser_name) FROM matches,SELECT COUNT(DISTINCT loser_name) FROM matches;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT T1.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.year IN (2013, 2016) GROUP BY T1.winner_name HAVING COUNT(T1.winner_id) > 1","Not match: [('Angelique Kerber',), ('Petra Kvitova',), ('Sara Errani',), ('Serena Williams',), ('Victoria Azarenka',)] != [('Agnieszka Radwanska',), ('Alize Cornet',), ('Anastasia Pavlyuchenkova',), ('Angelique Kerber',), ('Carla Suarez Navarro',), ('Coco Vandeweghe',), ('Dominika Cibulkova',), ('Ekaterina Makarova',), ('Elina Svitolina',), ('Garbine Muguruza',), ('Karolina Pliskova',), ('Lucie Safarova',), ('Madison Keys',), ('Na Li',), ('Petra Kvitova',), ('Roberta Vinci',), ('Samantha Stosur',), ('Sara Errani',), ('Serena Williams',), ('Simona Halep',), ('Sloane Stephens',), ('Svetlana Kuznetsova',), ('Venus Williams',), ('Victoria Azarenka',), ('Yanina Wickmayer',)]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT T1.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.year IN (2013, 2016)","Not match: [('Angelique Kerber',), ('Petra Kvitova',), ('Sara Errani',), ('Serena Williams',), ('Victoria Azarenka',)] != [('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Agnieszka Radwanska',), ('Alize Cornet',), ('Alize Cornet',), ('Anastasia Pavlyuchenkova',), ('Anastasia Pavlyuchenkova',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Angelique Kerber',), ('Camila Giorgi',), ('Carla Suarez Navarro',), ('Carla Suarez Navarro',), ('Carla Suarez Navarro',), ('Carla Suarez Navarro',), ('Carla Suarez Navarro',), ('Caroline Wozniacki',), ('Coco Vandeweghe',), ('Coco Vandeweghe',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Dominika Cibulkova',), ('Ekaterina Makarova',), ('Ekaterina Makarova',), ('Ekaterina Makarova',), ('Elena Vesnina',), ('Elina Svitolina',), ('Elina Svitolina',), ('Elina Svitolina',), ('Elina Svitolina',), ('Elina Svitolina',), ('Garbine Muguruza',), ('Garbine Muguruza',), ('Garbine Muguruza',), ('Garbine Muguruza',), ('Garbine Muguruza',), ('Irina Camelia Begu',), ('Jelena Jankovic',), ('Johanna Larsson',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Karolina Pliskova',), ('Lucie Safarova',), ('Lucie Safarova',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Madison Keys',), ('Misaki Doi',), ('Na Li',), ('Na Li',), ('Na Li',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Petra Kvitova',), ('Roberta Vinci',), ('Roberta Vinci',), ('Samantha Stosur',), ('Samantha Stosur',), ('Samantha Stosur',), ('Samantha Stosur',), ('Sara Errani',), ('Sara Errani',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Serena Williams',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Simona Halep',), ('Sloane Stephens',), ('Sloane Stephens',), ('Sloane Stephens',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Svetlana Kuznetsova',), ('Venus Williams',), ('Venus Williams',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Victoria Azarenka',), ('Yanina Wickmayer',), ('Yanina Wickmayer',)]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,"SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,"SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016)",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.country_code, T2.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')",OperationalError('no such column: T2.first_name'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.first_name, T2.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')",OperationalError('no such column: T2.country_code'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date;",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date","Not match: [('Aayushi', 'Chouhan'), ('Agustina Sol', 'Eskenazi'), ('Ai Qi', 'Chen'), ('Ainhoa', 'Atucha Gomez'), ('Alejandra', 'Barragan'), ('Alejandra', 'Obregon'), ('Alejandra', 'Tamayo Gomez'), ('Aleksandra', 'Vukadinovic'), ('Alena', 'Gerasimova'), ('Alessandra', 'Caprara'), ('Alexandra', 'Avirvarei'), ('Alexandra', 'Kazanova'), ('Alexandra', 'Martinez'), ('Alexandria', 'Liles'), ('Alexia', 'Quartetto'), ('Alicia', 'Doms Golobart'), ('Allison', 'Baker'), ('Amanda', 'Augustus'), ('Amanda', 'Grahame'), ('Amanda', 'Keen'), ('Amanda', 'Rodgers'), ('Amanda', 'Schneider'), ('Amandine', 'Cazeaux'), ('Amelie', 'Castera'), ('Amelie', 'Cocheteux'), ('Amina', 'El Sahn'), ('Amy', 'Hoburn'), ('Ana', 'Beltran Trigueros'), ('Ana', 'Veselinovic'), ('Ana Lorena', 'Garcia Navas'), ('Ana Lucia', 'Migliarini De Leon'), ('Ana Maria', 'Chavez Franco'), ('Ana Maria', 'Crisan'), ('Ana Paula', 'Leal'), ('Ana Sofia', 'Sanchez'), ('Anastasia', 'Kontratevidi'), ('Anastasia', 'Prokopenko'), ('Anastasiya', 'Komardina'), ('Anastasiya', 'Vasylyeva'), ('Anca', 'Barna'), ('Andra Maria', 'Nitescu'), ('Andrea', 'Arratia Fernandez'), ('Andreea', 'Ehritt Vanc'), ('Andreea', 'Istrate'), ('Andreea', 'Novaceanu'), ('Andreea', 'Stanescu'), ('Andressa', 'Garcia'), ('Angela', 'Haynes'), ('Angelique', 'Kerber'), ('Ann', 'Jones'), ('Anna', 'Montserrat Sanchez'), ('Anna', 'Slovakova'), ('Annabel', 'Blow'), ('Anne Gaelle', 'Sidot'), ('Annie', 'Sullivan'), ('Ansley', 'Cargill'), ('Arantxa', 'Rus'), ('Arantxa', 'Sanchez'), ('Ariela', 'Perez'), ('Ashley', 'Kratzer'), ('Ashley', 'Krysiak'), ('Aurelie', 'Vedy'), ('Avel Romaly', 'Coronado'), ('Aya', 'El Akkad'), ('Barbara', 'Schwartz'), ('Barbora', 'Bozkova'), ('Barbora', 'Trestikova'), ('Beatrix', 'Csordas'), ('Beatriz', 'Haddad Maia'), ('Bernarda', 'Pera'), ('Betina', 'Tokac'), ('Bianca', 'Botto'), ('Bianca Ioana', 'Bonifate'), ('Birgit', 'Burk'), ('Bit Na', 'Lee'), ('Brandy', 'Mina'), ('Briar', 'Preston'), ('Busra', 'Kayrun'), ('Cagla', 'Urcu'), ('Camila', 'Belassi'), ('Carla', 'Tiene'), ('Carla', 'Zabaleta'), ('Carmen', 'Blasco Robaina'), ('Carol', 'Augustine Benito'), ('Carolina', 'Escamilla'), ('Carolina', 'Orsi'), ('Casey', 'Dellacqua'), ('Catherine', 'Grotz'), ('Catia', 'Rodrigues'), ('Cecile', 'Baijot'), ('Chane', 'Hines'), ('Chanel', 'Simmonds'), ('Chang', 'Xu'), ('Charitomeni', 'Matoula'), ('Charlotte', 'Robillard Millette'), ('Chiara', 'Lommer'), ('Chieh Yu', 'Hsu'), ('Chinami', 'Ogi'), ('Chrissie', 'Seredni'), ('Christina', 'Madenoglou'), ('Chun Yan', 'He'), ('Cindy', 'Chala'), ('Claire', 'De Gubernatis'), ('Claire', 'Feuerstein'), ('Clarisa', 'Fernandez'), ('Claudia', 'Mercado'), ('Constanze', 'Lotz'), ('Cristina', 'Greco Naccarato'), ('Cristina Bianca', 'Danaila'), ('Dagmar', 'Zdrubecka'), ('Daniela', 'Morales Beckmann'), ('Daniella', 'Patton'), ('Danielle', 'Harmsen'), ('Danielle', 'Mills'), ('Daria', 'Kruzhkova'), ('Dejana', 'Raickovic'), ('Denisa', 'Chereches'), ('Dessislava', 'Mladenova'), ('Diana', 'Arutyunova'), ('Diana', 'Valverde'), ('Diana Andreea', 'Gae'), ('Dimana', 'Krastevitch'), ('Dipti', 'Srivastava'), ('Do Hee', 'Bae'), ('Doroteja', 'Eric'), ('Dunja', 'Antunovic'), ('Dzina', 'Milovanovic'), ('Ecaterina', 'Ivasco'), ('Ecaterina', 'Oproiu'), ('Ekaterina', 'Abaeva'), ('Ekaterina', 'Davletova'), ('Ekaterina', 'Kamendova'), ('Ekaterina', 'Makarova'), ('Ekaterine', 'Gorgodze'), ('Elena', 'Bogdan'), ('Elena', 'Petrucciano'), ('Elena', 'Tatarkova'), ('Elena Teodora', 'Cadar'), ('Eleonore', 'Barrere'), ('Elise', 'Tamaela'), ('Elixane', 'Lechemia'), ('Elizabeth', 'Bondi'), ('Ellen', 'Ashley'), ('Eloisa Maria', 'Compostizo De Andres'), ('Elpida', 'Papanelopoulou'), ('Emerald', 'Able'), ('Emilia', 'Yorio'), ('Emilie', 'Loit'), ('Emily', 'Applegate'), ('Emily', 'Quin'), ('Emma', 'Laine'), ('Erica', 'Biro'), ('Erika', 'Pineider'), ('Erika', 'Venere'), ('Eugenia', 'Chialvo'), ('Fatima', 'El Allami'), ('Fernanda', 'Oliveira Da Silva'), ('Fiorella', 'Jerardino'), ('Flavia', 'Borges'), ('Florencia', 'Labat'), ('Francesca', 'Campigotto'), ('Francesca', 'Di Lorenzo'), ('Francesca', 'Lubiani'), ('Francisca', 'Matos'), ('Gabriela', 'Ce'), ('Gabriela', 'Roux'), ('Gabriele', 'Bertasiute'), ('Gabriella', 'Boboc'), ('Gabrielle', 'Moxey'), ('Gaelle', 'Widmer'), ('Gala', 'Leon Garcia'), ('Galina', 'Fokina'), ('Ganna', 'Lukianchykova'), ('Gemma', 'Praditngam'), ('Georgina', 'Fedosenkova'), ('Geraldine', 'Roma'), ('Giulia', 'Bruzzone'), ('Giulia', 'Della Cioppa'), ('Giulia', 'Morlet'), ('Grace', 'Leake'), ('Guadalupe', 'Moreno'), ('Hannah', 'Grady'), ('Hannah', 'King'), ('Hannah', 'Kuervers'), ('Hedda', 'Odegaard'), ('Helen', 'Fritche'), ('Hendrike Lea', 'Heitmann'), ('Hikari', 'Yamamoto'), ('Ia', 'Jikia'), ('Iga', 'Odrzywolek'), ('Ilayda', 'Yondem'), ('Ines Miren', 'De Pablo'), ('Ioana Alexandra', 'Oprea'), ('Ioana Diana', 'Pietroiu'), ('Irina', 'Cantos Siemers'), ('Irina', 'Khromacheva'), ('Irina', 'Smirnova'), ('Irys', 'Ekani'), ('Isabella', 'Nunez'), ('Isabella', 'Tcherkes Zade'), ('Isabelle', 'Wallace'), ('Isha', 'Lakhani'), ('Ivana', 'Belejova'), ('Iveta', 'Benesova'), ('Ivon', 'Mihaleva'), ('Ivona', 'Cudina'), ('Jasmine', 'Boyd'), ('Jayci', 'Goldsmith'), ('Jelena', 'Kostanic Tosic'), ('Jennifer', 'Zerbone'), ('Jenny Thuy', 'Le'), ('Jessica', 'Sweeting'), ('Jiaying', 'He'), ('Jil Belen', 'Teichmann'), ('Jin A', 'Lee'), ('Jitka', 'Gavdunova'), ('Jitka', 'Kleisnerova'), ('Joana', 'Cortez'), ('Joanna', 'Bougon'), ('Judit', 'Vives Joan'), ('Julia', 'Gavenko'), ('Julia', 'Kimmelmann'), ('Julia', 'Smith'), ('Julia', 'Stamatova'), ('Julia', 'Vulpio'), ('Julia', 'Wachaczyk'), ('Julie', 'Ditty'), ('Julie', 'Gonzalez Rodriguez'), ('Julie', 'Pullin'), ('Kamila', 'Pavelkova'), ('Kanako', 'Osafune'), ('Karen', 'Castiblanco'), ('Karen', 'Cross'), ('Karina', 'Gurgenyan'), ('Karina', 'Porushkevich'), ('Karina', 'Rovira'), ('Karly', 'Olson'), ('Karolina', 'Soor'), ('Katarzyna', 'Kossowska'), ('Kate', 'Vialle'), ('Katelyn', 'Jackson'), ('Katerina', 'Bohmova'), ('Katerina', 'Bohmova'), ('Katerina', 'Vankova'), ('Katharina', 'Herpertz'), ('Katharine', 'Baker'), ('Kathrin', 'Hegel'), ('Katia', 'Sabate Orera'), ('Kayla', 'Day'), ('Kelly', 'Williford'), ('Kim', 'Kilsdonk'), ('Kobkanok', 'Upapong'), ('Kotomi', 'Takahata'), ('Kristina', 'Chasovskikh'), ('Kristy', 'Frilling'), ('Kristyna', 'Hancarova'), ('Kristyna', 'Pliskova'), ('Krushmi', 'Chheda'), ('Ksenia', 'Pervak'), ('Lara', 'Biter'), ('Lara', 'Meccico'), ('Laura', 'Illanes'), ('Laura', 'Robson'), ('Laura', 'Rocchi'), ('Laura', 'Sadria'), ('Lauren', 'Jones'), ('Lauren', 'Lui'), ('Lea', 'Tholey'), ('Leanne', 'Baker'), ('Leticia', 'Costas'), ('Liege', 'Vieira'), ('Lina', 'Shokry'), ('Lindsay', 'Cox'), ('Lisa', 'Fritz'), ('Lise', 'Gregory'), ('Liset', 'Brito Herrera'), ('Lizaan', 'Du Plessis'), ('Ljubica', 'Avramovic'), ('Lucie', 'Safarova'), ('Lucie', 'Sipkova'), ('Lucy', 'Fletcher'), ('Ludmilla', 'Varmuza'), ('Luisa Fernanda', 'Echeverry Rodriguez'), ('Magui', 'Serna'), ('Mai', 'Iwasaki'), ('Maite', 'Cano'), ('Maja', 'Matevzic'), ('Maja', 'Mladenovic'), ('Majdouline', 'Akrate'), ('Manca', 'Pislak'), ('Mara', 'Vidal'), ('Marcela', 'Vojtiskova'), ('Margarita', 'Lazareva'), ('Maria', 'Patrascu'), ('Maria', 'Prishlyak'), ('Maria Camila', 'Trujillo Hoyos'), ('Maria Elizabeth', 'Lopez'), ('Maria Eugenia', 'Roca Recarey'), ('Maria Fernanda', 'Alves'), ('Maria Fernanda', 'Herazo Gonzalez'), ('Maria Jose', 'Martinez Sanchez'), ('Maria Sol', 'Carrasco'), ('Mariam', 'Bolkvadze'), ('Mariana Pires', 'Junqueira'), ('Marianna', 'Natali'), ('Marie', 'Benoit'), ('Marine', 'Nizri Spiegel'), ('Marketa', 'Vondrousova'), ('Marta', 'Del Pino Maturano'), ('Martina', 'Balogova'), ('Martina', 'Capurro Taborda'), ('Martina', 'Navratilova'), ('Martina', 'Trevisan'), ('Martina', 'Zerbola'), ('Mary', 'Carillo'), ('Mashaal', 'Hameed'), ('Matilde', 'Mariani'), ('Mayuka', 'Aikawa'), ('Meghha', 'Vakaria'), ('Megumi', 'Fukui'), ('Melinda', 'Czink'), ('Melisa', 'Cabrera Handt'), ('Mia Nicole', 'Eklund'), ('Micaela', 'Acosta'), ('Michaela', 'Jasenakova'), ('Micheline', 'Aubuchon'), ('Michelle', 'Russ'), ('Mihaela', 'Buzarnescu'), ('Mila', 'Mejic'), ('Mirabelle', 'Njoze'), ('Misaki', 'Doi'), ('Momoka', 'Chimura'), ('Monica', 'Seles'), ('Monica', 'Turewicz'), ('Monika', 'Lalewicz'), ('Monika', 'Musilova'), ('Monika', 'Tumova'), ('Montserrat', 'Alonso'), ('Na Lae', 'Han'), ('Nadege', 'Jorda'), ('Najah', 'Dawson'), ('Nancy', 'Loeffler Caro'), ('Naomi', 'Cavaday'), ('Naomi', 'Totka'), ('Natali', 'Coronel'), ('Natalia', 'Bogdanova'), ('Natalia', 'Nikolopoulou'), ('Natalie', 'Novakova'), ('Nathalia', 'Rossi'), ('Natsuho', 'Arakawa'), ('Nelise', 'Verster'), ('Nicole', 'Arendt'), ('Nicole', 'Bunea'), ('Nicole', 'Frenkel'), ('Nicole', 'Grunwald'), ('Nicole', 'Riner'), ('Nina', 'Holanova'), ('Nina', 'Mujezinovic'), ('Nina', 'Munch Soegaard'), ('Noa', 'Krznaric'), ('Oana', 'Irimescu'), ('Oceane', 'Mialon'), ('Oksana', 'Kalashnikova'), ('Olga', 'Danilovic'), ('Olga', 'Doroshina'), ('Olga', 'Fridman'), ('Olga', 'Pasichnichenko'), ('Ornella', 'Gentile'), ('Patty', 'Schnyder'), ('Paula', 'Mocete Talamantes'), ('Paulina', 'Jorquera'), ('Petra', 'Delhees Jauch'), ('Petra', 'Kvitova'), ('Petra', 'Vogel'), ('Polina', 'Bezsmertnaya'), ('Polina', 'Novoselova'), ('Punam', 'Reddy'), ('Quirine', 'Lemoine'), ('Rachel', 'Girard'), ('Rana', 'Tharwat Hafez'), ('Raquel', 'Montalvo'), ('Rebecca', 'Andrade'), ('Rebecca', 'Smaller'), ('Renata', 'Bakieva'), ('Rene', 'Collins'), ('Ria', 'Vaidya'), ('Rie', 'Imai'), ('Rita', 'Gouveia'), ('Rita', 'Kuti Kis'), ('Rita', 'Vilaca'), ('Rona', 'Berisha'), ('Rosalie', 'Van Der Hoek'), ('Roxane', 'Vaisemberg'), ('Ruxandra', 'Ababii'), ('Ruxandra', 'Schech'), ('Sabine', 'Appelmans'), ('Sabrina', 'Dos Reis'), ('Salome', 'Llaguno'), ('Samira', 'Radjaa'), ('Sanaa', 'Bhambri'), ('Sanaz', 'Marand'), ('Sandra', 'Garriga Catala'), ('Sandra', 'Klemenschits'), ('Sandra', 'Roma'), ('Sandra', 'Sasidharan'), ('Sanne', 'Bakker'), ('Saori', 'Obata'), ('Sarah Beth', 'Askew'), ('Sarah Rebecca', 'Sekulic'), ('Sarahi', 'Garcia Carrera'), ('Saumya', 'Vig'), ('Seheno', 'Razafindramaso'), ('Seul Ki', 'Chin'), ('Shadisha', 'Robinson'), ('Shakhlo', 'Saidova'), ('Shana', 'Claes'), ('Shaozhuo', 'Liu'), ('Sheng Nan', 'Sun'), ('Sherazad', 'Benamar'), ('Sherazad', 'Reix'), ('Shiraz', 'Bronstein'), ('Shraddha', 'Lodha'), ('Simonetta', 'Miori'), ('Snigdha', 'Padamata'), ('So Ra', 'Lee'), ('Sofia', 'Medina'), ('Sonia', 'Iacovacci'), ('Sonya', 'Dayal'), ('Sophie', 'Blom'), ('Sowjanya', 'Bavisetti'), ('Stefania', 'Hristov'), ('Stella', 'Papaspyrou'), ('Stephani', 'Rodriguez'), ('Stephanie', 'Kovacic'), ('Stephanie', 'Theiler'), ('Storm', 'Sanders'), ('Stuti', 'Singh Tomar'), ('Sybille', 'Bammer'), ('Sylvia', 'Krywacz'), ('Tamara', 'Tomic'), ('Tapiwa', 'Marobela'), ('Tatiana', 'Bua'), ('Tayisiya', 'Morderger'), ('Taylor', 'Johnson'), ('Taylor', 'Townsend'), ('Teodora Adina', 'Ardeleanu'), ('Tereza', 'Budilova'), ('Tereza', 'Jankovska'), ('Tereza', 'Koplova'), ('Theresa', 'Logar'), ('Tina', 'Rupert'), ('Valentina', 'Tizzano'), ('Valeria', 'Casillo'), ('Vanessa', 'Webb'), ('Varvara', 'Lepchenko'), ('Vasanti', 'Shinde'), ('Vasilisa', 'Davydova'), ('Verena', 'Gantschnig'), ('Veronica', 'Miroshnichenko'), ('Veronika', 'Domagala'), ('Veronika', 'Zavodska'), ('Viktoryia', 'Kisialeva'), ('Violette', 'Huck'), ('Vorranavaporn', 'Vorrarattanamongkol'), ('Watsachol', 'Sawasdee'), ('Wendy', 'Gilchrist'), ('Xenia', 'Knoll'), ('Xenia', 'Samoilova'), ('Xinyun', 'Han'), ('Xiyu', 'Wang'), ('Ya Hsin', 'Lee'), ('Yang', 'Lee'), ('Yasmina', 'Karimjanova'), ('Yasmine', 'Rashad'), ('Yasmine', 'Xantos'), ('Yi Fan', 'Xu'), ('Ysabel', 'Gonzalez Rico'), ('Ysaline', 'Bonaventure'), ('Yui', 'Nagasawa'), ('Yuliya', 'Lysa'), ('Yurika', 'Sema'), ('Yuuki', 'Tanaka'), ('Zanmarie', 'Pienaar'), ('Zerene', 'Reyes'), ('Zora', 'Vlckova'), ('Zsuzsanna', 'Babos'), ('Zuzanna', 'Maciejewska')] != [('', 'Brown'), ('', 'Gratton'), ('', 'Marine'), ('', 'Mckinney'), ('', 'Munsell'), ('', 'Raimo'), ('', 'Stafford'), ('', 'Yoivera'), ('A', 'Belladonna'), ('A', 'Schroeder'), ('A Ram', 'Sim'), ('Aafje', 'Evers'), ('Aanandita', 'Gupta'), ('Aandrita', 'Deb'), ('Aanu', 'Ayegbusi'), ('Aareyalee Amrutsinh', 'Chavan'), ('Aarthi', 'Venkatesan'), ('Aashima', 'Garg'), ('Aastha', 'Dargude'), ('Aayushi', 'Chouhan'), ('Abbi', 'Melrose'), ('Abbie', 'Myers'), ('Abbie', 'Pahz'), ('Abbie', 'Probert'), ('Abby', 'Hedges'), ('Abhilasha', 'Ahuja'), ('Abhilasha', 'Vishwanath'), ('Abi', 'Claydon'), ('Abigail', 'Cazarez Gonzalez'), ('Abigail', 'Desiatnikov'), ('Abigail', 'Forbes'), ('Abigail', 'Greif'), ('Abigail', 'Guthrie'), ('Abigail', 'Olivier'), ('Abigail', 'Royston'), ('Abigail', 'Spears'), ('Abigail', 'Tere Apisah'), ('Abigail', 'Tordoff'), ('Abimbola', 'Showole'), ('Abinikka', 'Renganathan'), ('Abiodun', 'Bamigbade'), ('Abiodun', 'Oyegoke'), ('Abir', 'El Fahimi'), ('Abla', 'Chadli'), ('Abla', 'El Kadri'), ('Achiraya', 'Sriprome'), ('Ada', 'Bakker'), ('Adas', 'Luiza Ferrari'), ('Addison', 'Brown'), ('Adel', 'Musina'), ('Adela', 'Heinova'), ('Adela', 'Jarosova'), ('Adela', 'Joldic'), ('Adelaida', 'Allakhverdiyeva'), ('Adelaide', 'Maesfranckx'), ('Adelaide', 'Wood'), ('Adele Diana', 'Biba'), ('Adelina', 'Baravi'), ('Adelina', 'Doguzova'), ('Adelina Georgiana', 'Lipan'), ('Adeline', 'Chiang'), ('Adeline', 'Goncalves'), ('Adeline', 'Lardinois'), ('Adeliya', 'Zabirova'), ('Adeyinka Elisabeth', 'Thompson'), ('Adi', 'Ella'), ('Adi', 'Gavish'), ('Adi', 'Milstein'), ('Adi', 'Spiegelman'), ('Adilya', 'Isabekova'), ('Adina', 'Neustein'), ('Adina Alexandra', 'Marinescu'), ('Adina Maria', 'Gabor'), ('Adisa', 'Salibasic'), ('Adithya', 'Karunaratne'), ('Aditi', 'Karanjkar'), ('Adla', 'Mahic'), ('Adna', 'Sofradzija'), ('Adnya', 'Naik'), ('Adreanna', 'Christopoulou'), ('Adria', 'Engel'), ('Adria', 'Raines'), ('Adriana', 'Alvarez Tostado'), ('Adriana', 'Barna'), ('Adriana', 'Basaric'), ('Adriana', 'Bedoya'), ('Adriana', 'Burz'), ('Adriana', 'Chavez'), ('Adriana', 'Fernandez'), ('Adriana', 'Florido'), ('Adriana', 'Fonseca Villarroel'), ('Adriana', 'Garuolis'), ('Adriana', 'Gergelyova'), ('Adriana', 'Gersi'), ('Adriana', 'Gonzalez'), ('Adriana', 'Gonzalez Penas'), ('Adriana', 'Guzman'), ('Adriana', 'Herran Giraldo'), ('Adriana', 'Isaza'), ('Adriana', 'Jaskova'), ('Adriana', 'Jerabek'), ('Adriana', 'Lavoretti'), ('Adriana', 'Lopez'), ('Adriana', 'Marikova'), ('Adriana', 'Mingireanu'), ('Adriana', 'Moedano'), ('Adriana', 'Pereira'), ('Adriana', 'Perez'), ('Adriana', 'Quezada'), ('Adriana', 'Radic'), ('Adriana', 'Rajkovic'), ('Adriana', 'Rodriguez'), ('Adriana', 'Ruiz'), ('Adriana', 'Sandoval'), ('Adriana', 'Senkarova'), ('Adriana', 'Serra Zanetti'), ('Adriana', 'Silva'), ('Adriana', 'Solarova'), ('Adriana', 'Sosnovschi'), ('Adriana', 'Szili'), ('Adriana', 'Thaggard'), ('Adriana', 'Velcheva'), ('Adriana', 'Villagran Reami'), ('Adrianna', 'Daszkiewicz'), ('Adrianna', 'Gallo'), ('Adrianna', 'Sosnowska'), ('Adrianna', 'Zorawska'), ('Adrienn', 'Hegedus'), ('Adrienn', 'Hidvegi'), ('Adrienn', 'Horvath'), ('Adrienn', 'Nagy'), ('Adrienn', 'Zsitvay'), ('Adrienne', 'Avis'), ('Adrienne', 'Green'), ('Adrija', 'Runcha'), ('Adrijana', 'Lekaj'), ('Adva', 'Dabah'), ('Advaitas', 'Saravanan'), ('Aeriel', 'Ellis'), ('Afreen', 'Jahan'), ('Afroditi', 'Latinopoulou'), ('Afroditi', 'Tzanopoulou'), ('Agata', 'Bachanek'), ('Agata', 'Baranska'), ('Agata', 'Borgman'), ('Agata', 'Cioroch'), ('Agata', 'Komorowska'), ('Agata', 'Kurowska'), ('Agata', 'Odachowska'), ('Agata', 'Werblinska'), ('Agata Jadwiga', 'Bienkowska'), ('Agatha', 'Zmijak'), ('Agathe', 'Belibi'), ('Agathe', 'Macarez'), ('Agathe', 'Timsit'), ('Aggeliki', 'Kokkota'), ('Aggeliki', 'Prezani'), ('Aglaya', 'Kokurina'), ('Agne', 'Cepelyte'), ('Agnes', 'Anwar'), ('Agnes', 'Bukta'), ('Agnes', 'Buronyi'), ('Agnes', 'Figueras'), ('Agnes', 'Gee'), ('Agnes', 'Graczol'), ('Agnes', 'Lempereur'), ('Agnes', 'Liepina'), ('Agnes', 'Paischer'), ('Agnes', 'Palvolgyi'), ('Agnes', 'Romand'), ('Agnes', 'Szatmari'), ('Agnes', 'Szavay'), ('Agnes', 'Wiski'), ('Agnes', 'Zugasti'), ('Agnes Ornella', 'Biba'), ('Agnese', 'Gustmane'), ('Agnese', 'Rella'), ('Agnese', 'Zucchini'), ('Agni', 'Patsourakou'), ('Agni', 'Stefanou'), ('Agnieszka', 'Abram'), ('Agnieszka', 'Radwanska'), ('Agnieszka', 'Zak'), ('Agostina', 'Zamprogno'), ('Agustina', 'Arechavaleta'), ('Agustina', 'Chlpac'), ('Agustina', 'Lepore'), ('Agustina', 'Llaver'), ('Agustina', 'Rimoldi Godoy'), ('Agustina', 'Saenz'), ('Agustina', 'Santamaria Teixeira'), ('Agustina', 'Serio'), ('Agustina', 'Valenzuela'), ('Agustina', 'Wibisono'), ('Agustina Belen', 'Diaz'), ('Agustina Elena', 'Otegui'), ('Agustina Sol', 'Eskenazi'), ('Agustine', 'Limanto'), ('Agustine Pangestu', 'Palupi'), ('Ah', 'Song'), ('Ah Ren', 'Han'), ('Ahinara', 'Ramos'), ('Ahlam', 'Shawkat'), ('Ahsha', 'Rolle'), ('Ai', 'Haigo'), ('Ai', 'Iida'), ('Ai', 'Kamiyoshihara'), ('Ai', 'Koga'), ('Ai', 'Ozawa'), ('Ai', 'Sugiyama'), ('Ai', 'Taira'), ('Ai', 'Yamamoto'), ('Ai Qi', 'Chen'), ('Ai Wen', 'Zhu'), ('Aibika', 'Kalsarieva'), ('Aicha', 'Ferjani'), ('Aida', 'Arafa'), ('Aida', 'Garcia Mendez'), ('Aida', 'Golman'), ('Aida', 'Kalimullina'), ('Aida', 'Khalatian'), ('Aida', 'Khalatyan'), ('Aida', 'Martinez Sanjuan'), ('Aida', 'Zukic'), ('Aika', 'Nonaka'), ('Aika', 'Osawa'), ('Aikaterini', 'Stavroulaki'), ('Aiko', 'Matsuda'), ('Aiko', 'Nakamura'), ('Aiko', 'Suzuki'), ('Aiko', 'Yamada'), ('Aiko', 'Yoshitomi'), ('Aila', 'Winkler'), ('Aileen', 'Rogan'), ('Ailen', 'Crespo Azconzabal'), ('Aimee', 'Gibson'), ('Aimee', 'Jarratt'), ('Aimee', 'Smith'), ('Aimee', 'Tarun'), ('Aimi', 'Koga'), ('Aina', 'Hernandez Soler'), ('Aina', 'Morey Juan'), ('Aina', 'Rafolomanantsiatosika'), ('Aina', 'Schaffner Riera'), ('Aine', 'Leonard'), ('Ainhoa', 'Atucha Gomez'), ('Ainhoa', 'Goni Blanco'), ('Ainhoa', 'Ramos'), ('Ainhoa', 'Rico Martin'), ('Ainhoa', 'Torrens'), ('Ainhoa', 'Zamora Rubio'), ('Aino', 'Alkio'), ('Ainsley', 'Fairhead'), ('Ainur', 'Suleimenova'), ('Airi', 'Hagimoto'), ('Aisha', 'Kukushkina'), ('Aishwarya', 'Agrawal'), ('Aishwarya', 'Jadhav'), ('Aislinn', 'Oneill'), ('Aissa', 'Muamba'), ('Aitana', 'Minambres'), ('Ajda', 'Brumen'), ('Ajda', 'Bukovec'), ('Ajda', 'Klevisar'), ('Ajda', 'Kolmancic'), ('Ajeng', 'Aquinia'), ('Ajla', 'Behram'), ('Ajla', 'Tomljanovic'), ('Akane', 'Yasui'), ('Akanksha A', 'Bhan'), ('Akari', 'Inoue'), ('Akari', 'Kakizawa'), ('Akemi', 'Hasegawa'), ('Akemi', 'Nishiya'), ('Akemi', 'Sato'), ('Akgul', 'Amanmuradova'), ('Aki', 'Fujii'), ('Aki', 'Yamasoto'), ('Akiho', 'Kakuya'), ('Akiko', 'Gooden'), ('Akiko', 'Gunji'), ('Akiko', 'Kato'), ('Akiko', 'Kazama'), ('Akiko', 'Kijimuta'), ('Akiko', 'Kinebuchi'), ('Akiko', 'Morigami'), ('Akiko', 'Okuda'), ('Akiko', 'Omae'), ('Akiko', 'Ueda'), ('Akiko', 'Yonemura'), ('Akiko', 'Yoshizawa'), ('Akila', 'Bouchabou'), ('Akilah', 'James'), ('Akshara', 'Iska'), ('Akshitha', 'Basavaraju'), ('Aksiniya', 'Miakota'), ('Akvile', 'Parazinskaite'), ('Al', 'Sasaki'), ('Alaa', 'A A Ali'), ('Alaina', 'Miller'), ('Alaknanda', 'Jadhav'), ('Alana', 'Lolaeva'), ('Alana', 'Parnaby'), ('Alana', 'Tuayeva'), ('Alana', 'Van Der Vort'), ('Alanna', 'Broderick'), ('Alanna', 'Rodgers'), ('Alanna', 'Wolff'), ('Alannah', 'Griffin'), ('Alara', 'Sener'), ('Alba', 'Berdala Grive'), ('Alba', 'Carrillo Marin'), ('Alba', 'Conejero Gutierrez'), ('Alba', 'Cortina Pou'), ('Alba', 'Escalona Perny'), ('Alba', 'Esteve Blanch'), ('Alba', 'Ramos Segarra'), ('Alberta', 'Brianti'), ('Alberta', 'Detogni'), ('Albertina', 'Gandara'), ('Albertina', 'Giacomino'), ('Albina', 'Khabibulina'), ('Albina', 'Yanko'), ('Alcira', 'Acevedo'), ('Aldana', 'Caroleo'), ('Aldana', 'Ciccarelli'), ('Aldea', 'Rinciari'), ('Aldila', 'Sutjiadi'), ('Ale', 'Rojas'), ('Aleah', 'Marrow'), ('Aleida', 'Spex'), ('Alejandra', 'Aguilar'), ('Alejandra', 'Alvarez'), ('Alejandra', 'Barragan'), ('Alejandra', 'Cisneros'), ('Alejandra', 'Del Rey Guardiola'), ('Alejandra', 'Diaz Mares'), ('Alejandra', 'Franco'), ('Alejandra', 'Gamboa'), ('Alejandra', 'Garcia'), ('Alejandra', 'Garmendia'), ('Alejandra', 'Gil'), ('Alejandra', 'Gomez'), ('Alejandra', 'Granillo'), ('Alejandra', 'Guerra'), ('Alejandra', 'Gutierrez'), ('Alejandra', 'Hernandez Medel'), ('Alejandra', 'Hernandez Quiroz'), ('Alejandra', 'Lopez'), ('Alejandra', 'Lozano'), ('Alejandra', 'Medrano'), ('Alejandra', 'Meza Cuadra'), ('Alejandra', 'Morales'), ('Alejandra', 'Obando'), ('Alejandra', 'Obregon'), ('Alejandra', 'Perez Jimenez'), ('Alejandra', 'Renda Bouzada'), ('Alejandra', 'Reyes Menacho'), ('Alejandra', 'Ripoll'), ('Alejandra', 'Rivero'), ('Alejandra', 'Saavedra'), ('Alejandra', 'Sala Juste'), ('Alejandra', 'Starkova'), ('Alejandra', 'Tamayo Gomez'), ('Alejandra', 'Vallejo'), ('Alejandra Josefina', 'Benavides Lopez'), ('Alejandra Maria', 'Marma Gutierrez'), ('Aleke', 'Tsoubanos'), ('Aleksa', 'Costa'), ('Aleksa', 'Cveticanin'), ('Aleksandra', 'Buczynska'), ('Aleksandra', 'Cekic'), ('Aleksandra', 'Djokic'), ('Aleksandra', 'Draganova'), ('Aleksandra', 'Durska'), ('Aleksandra', 'Efremova'), ('Aleksandra', 'Emelianova'), ('Aleksandra', 'Filipovski'), ('Aleksandra', 'Grela'), ('Aleksandra', 'Ivanova'), ('Aleksandra', 'Jecmenica'), ('Aleksandra', 'Josifoska'), ('Aleksandra', 'Karamanoleva'), ('Aleksandra', 'Kasatkina'), ('Aleksandra', 'Kecman'), ('Aleksandra', 'Kostikova'), ('Aleksandra', 'Krunic'), ('Aleksandra', 'Krupina'), ('Aleksandra', 'Kujawska'), ('Aleksandra', 'Kulesza'), ('Aleksandra', 'Kulik'), ('Aleksandra', 'Kulikova'), ('Aleksandra', 'Kuznetsova'), ('Aleksandra', 'Ludvig'), ('Aleksandra', 'Lukic'), ('Aleksandra', 'Madzik'), ('Aleksandra', 'Mally'), ('Aleksandra', 'Malovic'), ('Aleksandra', 'Malyarchikova'), ('Aleksandra', 'Marjanovic'), ('Aleksandra', 'Markovic'), ('Aleksandra', 'Nionova'), ('Aleksandra', 'Olsza'), ('Aleksandra', 'Pitak'), ('Aleksandra', 'Pospelova'), ('Aleksandra', 'Radosavljevic'), ('Aleksandra', 'Razumova'), ('Aleksandra', 'Reljic'), ('Aleksandra', 'Rojek'), ('Aleksandra', 'Rosolska'), ('Aleksandra', 'Srndovic'), ('Aleksandra', 'Stakhanova'), ('Aleksandra', 'Stankovic'), ('Aleksandra', 'Stosic'), ('Aleksandra', 'Treskunova'), ('Aleksandra', 'Trifunovic'), ('Aleksandra', 'Tucakov'), ('Aleksandra', 'Vostrikova'), ('Aleksandra', 'Vucenovic'), ('Aleksandra', 'Vukadinovic'), ('Aleksandra', 'Wozniak'), ('Aleksandra', 'Zakrzynska'), ('Aleksandra', 'Zawadzka'), ('Aleksandra', 'Zdeb'), ('Aleksandra', 'Zenovka'), ('Aleksandrina', 'Naydenova'), ('Alena', 'Bayarchyk'), ('Alena', 'Bencova'), ('Alena', 'Dvornikova'), ('Alena', 'Gerasimova'), ('Alena', 'Gizdic'), ('Alena', 'Gulyaeva'), ('Alena', 'Havrlikova'), ('Alena', 'Jecminkova'), ('Alena', 'Karpova'), ('Alena', 'Kovaleva'), ('Alena', 'Luef'), ('Alena', 'Macharova'), ('Alena', 'Mashtakova'), ('Alena', 'Mayevskaya'), ('Alena', 'Mitackova'), ('Alena', 'Nesticka'), ('Alena', 'Nogolova'), ('Alena', 'Palmeova West'), ('Alena', 'Panfilova'), ('Alena', 'Paulenkova'), ('Alena', 'Poletinova'), ('Alena', 'Scharfschwert'), ('Alena', 'Shichkova'), ('Alena', 'Tarasova'), ('Alena', 'Vasilyeva'), ('Alena', 'Weiss'), ('Alena', 'Yurchenko'), ('Alenka', 'Hubacek'), ('Alenka', 'Kacunko'), ('Alenka', 'Ovin'), ('Alenka', 'Pipan'), ('Alesa', 'Bagola'), ('Alessa', 'Waibel'), ('Alessandra', 'Amodeo'), ('Alessandra', 'Bonte'), ('Alessandra', 'Caprara'), ('Alessandra', 'Carta'), ('Alessandra', 'Dellaversana'), ('Alessandra', 'Di Batte'), ('Alessandra', 'Esposito'), ('Alessandra', 'Ferrazzi'), ('Alessandra', 'Gandossi'), ('Alessandra', 'Gisonna'), ('Alessandra', 'Jordan'), ('Alessandra', 'Kaul'), ('Alessandra', 'Lucchetta'), ('Alessandra', 'Maya Thompson'), ('Alessandra', 'Mazzola'), ('Alessandra', 'Mecchi De Oliveira Silva'), ('Alessandra', 'Pennesi'), ('Alessandra', 'Polese'), ('Alessandra', 'Simonelli'), ('Alessandra', 'Traub'), ('Alessandra', 'Vacca'), ('Alessandra', 'Vargas'), ('Alessaundra', 'De Perini'), ('Alessia', 'Baracchini'), ('Alessia', 'Bertoia'), ('Alessia', 'Bianchi'), ('Alessia', 'Biffi'), ('Alessia', 'Camplone'), ('Alessia', 'Carrozzo'), ('Alessia', 'Cecchini'), ('Alessia', 'Dario'), ('Alessia', 'Dauria'), ('Alessia', 'Di Pietro'), ('Alessia', 'Ignatieva'), ('Alessia', 'La Monaca'), ('Alessia', 'Lombardi'), ('Alessia', 'Nikolaeva'), ('Alessia', 'Piran'), ('Alessia', 'Risuleo'), ('Alessia', 'Rossetti'), ('Alessia', 'Sciarpelletti'), ('Alessia', 'Tagliente'), ('Alessia', 'Vesuvio'), ('Alessia', 'Zinga'), ('Alessia Beatrice', 'Ciuca'), ('Alessondra', 'Parra'), ('Alesya', 'Yakubovich'), ('Alet', 'Boonzaaier'), ('Aleta', 'Sungkono'), ('Alex', 'Cowie'), ('Alex', 'Geremia'), ('Alex', 'Graebe'), ('Alex', 'Martin'), ('Alex', 'Napier'), ('Alex', 'Rotas'), ('Alexa', 'Bortles'), ('Alexa', 'De Bont'), ('Alexa', 'Geldenhuys'), ('Alexa', 'Glatch'), ('Alexa', 'Graham'), ('Alexa', 'Guarachi'), ('Alexa', 'Noel'), ('Alexa', 'Pirok'), ('Alexa', 'Ryngler'), ('Alexa', 'Wimes'), ('Alexandera', 'Inozemtseva'), ('Alexandra', 'Aiello'), ('Alexandra', 'Alegre Ferre'), ('Alexandra', 'Aleksieva'), ('Alexandra', 'Almborg'), ('Alexandra', 'Anghelescu'), ('Alexandra', 'Anttila'), ('Alexandra', 'Apostu'), ('Alexandra', 'Artamonova'), ('Alexandra', 'Avirvarei'), ('Alexandra', 'Ban'), ('Alexandra', 'Belaya'), ('Alexandra', 'Bezmenova'), ('Alexandra', 'Borg'), ('Alexandra', 'Borovina'), ('Alexandra', 'Boutellier'), ('Alexandra', 'Bozovic'), ('Alexandra', 'Bykova'), ('Alexandra', 'Cadantu'), ('Alexandra', 'Cannizzaro'), ('Alexandra', 'Cercone'), ('Alexandra', 'Champion'), ('Alexandra', 'Charles'), ('Alexandra', 'Chong'), ('Alexandra', 'Clark'), ('Alexandra', 'Clay'), ('Alexandra', 'Dachos'), ('Alexandra', 'Damaschin'), ('Alexandra', 'Demidova'), ('Alexandra', 'Derungs'), ('Alexandra', 'Dubrovina'), ('Alexandra', 'Dulgheru'), ('Alexandra', 'Facey'), ('Alexandra', 'Ferreira Da Silva'), ('Alexandra', 'Filip'), ('Alexandra', 'Fusai'), ('Alexandra', 'Glebova'), ('Alexandra', 'Glushenko'), ('Alexandra', 'Goncharova'), ('Alexandra', 'Gracova'), ('Alexandra', 'Greabu'), ('Alexandra', 'Grinchishina'), ('Alexandra', 'Guzman'), ('Alexandra', 'Gwizdowski'), ('Alexandra', 'Heczey'), ('Alexandra', 'Henningsson'), ('Alexandra', 'Hernandez Vallant'), ('Alexandra', 'Hietaniemi'), ('Alexandra', 'Hirsch'), ('Alexandra', 'Hunter'), ('Alexandra', 'Ion'), ('Alexandra', 'Karavaeva'), ('Alexandra', 'Kazanova'), ('Alexandra', 'Kelleher'), ('Alexandra', 'Kelly'), ('Alexandra', 'Kichoutkin'), ('Alexandra', 'Kiesl'), ('Alexandra', 'Kiick'), ('Alexandra', 'Kleffel'), ('Alexandra', 'Kolesnichenko'), ('Alexandra', 'Korotkevich'), ('Alexandra', 'Kovacs'), ('Alexandra', 'Kravets'), ('Alexandra', 'Kudryavtseva'), ('Alexandra', 'Lazarova'), ('Alexandra', 'Leatu'), ('Alexandra', 'Levianska'), ('Alexandra', 'Marina'), ('Alexandra', 'Martin Sanchez'), ('Alexandra', 'Martinez'), ('Alexandra', 'Mayrat'), ('Alexandra', 'Mcgoodwin'), ('Alexandra', 'Mikhailova'), ('Alexandra', 'Mitrovska'), ('Alexandra', 'Moreno Kaste'), ('Alexandra', 'Morozova'), ('Alexandra', 'Mueller'), ('Alexandra', 'Nancarrow'), ('Alexandra', 'Neamtu'), ('Alexandra', 'Niepel'), ('Alexandra', 'Nieto'), ('Alexandra', 'Odell Michels'), ('Alexandra', 'Orasanu'), ('Alexandra', 'Osborne'), ('Alexandra', 'Panova'), ('Alexandra', 'Parra'), ('Alexandra', 'Perper'), ('Alexandra', 'Petrzalkova'), ('Alexandra', 'Pisareva'), ('Alexandra', 'Podkolzina'), ('Alexandra', 'Poorta'), ('Alexandra', 'Popa'), ('Alexandra', 'Ramirez'), ('Alexandra', 'Reboul'), ('Alexandra', 'Recio Linares'), ('Alexandra', 'Rentzoula'), ('Alexandra', 'Rey'), ('Alexandra', 'Riley'), ('Alexandra', 'Romanova'), ('Alexandra', 'Sakalaridi'), ('Alexandra', 'Sanford'), ('Alexandra', 'Scheider'), ('Alexandra', 'Schmitt'), ('Alexandra', 'Schneider'), ('Alexandra', 'Scholer'), ('Alexandra', 'Shchipakina'), ('Alexandra', 'Sigouin'), ('Alexandra', 'Silna'), ('Alexandra', 'Skripkina'), ('Alexandra', 'Smith'), ('Alexandra', 'Stevenson'), ('Alexandra', 'Stuparu'), ('Alexandra', 'Tsereteli'), ('Alexandra', 'Tufa'), ('Alexandra', 'Tutecky'), ('Alexandra', 'Ulbrichtova'), ('Alexandra', 'Vagramov'), ('Alexandra', 'Valarezo'), ('Alexandra', 'Valenstein'), ('Alexandra', 'Vecic'), ('Alexandra', 'Viktorovitch'), ('Alexandra', 'Vukota'), ('Alexandra', 'Walker'), ('Alexandra', 'Walters'), ('Alexandra', 'Wetterstrom'), ('Alexandra', 'Whitehead'), ('Alexandra', 'Zachem'), ('Alexandra', 'Zadoryn'), ('Alexandra', 'Zaicenco'), ('Alexandra', 'Zaniewski'), ('Alexandra', 'Zerkalova'), ('Alexandra', 'Zotta'), ('Alexandra Alina', 'Petcu'), ('Alexandra Alina', 'Tincu'), ('Alexandra Andreea', 'Oancea'), ('Alexandra Daniela', 'Nicoara'), ('Alexandra Diana', 'Braga'), ('Alexandra Iulia', 'Iacob'), ('Alexandra M', 'Haney'), ('Alexandra M', 'Sheeran'), ('Alexandra Maria', 'Staiculescu'), ('Alexandria', 'Liles'), ('Alexandria', 'Stiteler'), ('Alexandria', 'Walters'), ('Alexia', 'Alvarez Gerochristodoulou'), ('Alexia', 'Carlone'), ('Alexia', 'Coutino Castillo'), ('Alexia', 'Dechaume Balleret'), ('Alexia', 'Ferrand'), ('Alexia', 'Gera'), ('Alexia', 'Malbran'), ('Alexia', 'Quartetto'), ('Alexia', 'Rycroft'), ('Alexia', 'Virgili'), ('Alexia', 'Witthaus Vine'), ('Alexia Llysel', 'Marquez'), ('Alexiina', 'Ahonkivi'), ('Alexis', 'Casati'), ('Alexis', 'Dorr'), ('Alexis', 'Jones'), ('Alexis', 'King'), ('Alexis', 'Nelson'), ('Alexis', 'Panton'), ('Alexis', 'Prokopuik'), ('Alexis', 'Prousis'), ('Alexis', 'Tensfeldt'), ('Alexis', 'Thoma'), ('Alexsandra', 'Zhazhelo'), ('Alexus', 'Jones'), ('Aleyna', 'Buyun'), ('Ali', 'Collins'), ('Ali', 'Van Horne'), ('Alia', 'Nour'), ('Aliaa', 'Fakhry'), ('Aliaa', 'Kamal'), ('Aliaksandra', 'Sasnovich'), ('Alica', 'Herda'), ('Alica', 'Rusova'), ('Alice', 'Alexandri'), ('Alice', 'Amendola'), ('Alice', 'Bacquie'), ('Alice', 'Balducci'), ('Alice', 'Barnes'), ('Alice', 'Bellicha'), ('Alice', 'Botto'), ('Alice', 'Canepa'), ('Alice', 'Covatta'), ('Alice', 'Danila'), ('Alice', 'Di Matteo'), ('Alice', 'Garcia'), ('Alice', 'Gillan'), ('Alice', 'Grilli'), ('Alice', 'Gubertini'), ('Alice', 'Hall'), ('Alice', 'Izomor'), ('Alice', 'Joy'), ('Alice', 'Keddie'), ('Alice', 'Lamaro'), ('Alice', 'Lamport'), ('Alice', 'Mackenzie'), ('Alice', 'Matteucci'), ('Alice', 'Moroni'), ('Alice', 'Nohacova'), ('Alice', 'Patch'), ('Alice', 'Pirsu'), ('Alice', 'Rame'), ('Alice', 'Rangsithienchai'), ('Alice', 'Robbe'), ('Alice', 'Savoretti'), ('Alice', 'Tisset'), ('Alice', 'Tubello'), ('Alice', 'Tym'), ('Alice', 'Viglianisi'), ('Alice', 'Watter'), ('Alice', 'Wavre'), ('Alice', 'Wenner'), ('Alice', 'Zapolla'), ('Alice Alexandra', 'Banica'), ('Alice Andrada', 'Radu'), ('Alice Maria', 'Tunaru'), ('Alicia', 'Alegre'), ('Alicia', 'Barnett'), ('Alicia', 'De La Capilla'), ('Alicia', 'Doms Golobart'), ('Alicia', 'Espinoza'), ('Alicia', 'Fernandez Galvez'), ('Alicia', 'Herrero Linana'), ('Alicia', 'Melosch'), ('Alicia', 'Meraz'), ('Alicia', 'Molik'), ('Alicia', 'Ortuno'), ('Alicia', 'Perez Gonzalez'), ('Alicia', 'Pillay'), ('Alicia', 'Robinson'), ('Alicia', 'Serrano'), ('Alicia', 'Smith'), ('Alicia Andrea', 'Rodriguez Castillo'), ('Alicia Liliana', 'Rahem'), ('Alicja', 'Rosolska'), ('Alicja', 'Zduniak'), ('Alida', 'Gallovits'), ('Alienor', 'Tricerri'), ('Alija', 'Merdeeva'), ('Alika', 'Ismailova'), ('Aliki', 'Kapella'), ('Alima', 'Mohamed'), ('Alina', 'Abdurakhimova'), ('Alina', 'Ageichik'), ('Alina', 'Baraldi'), ('Alina', 'Baronova'), ('Alina', 'Bileca'), ('Alina', 'Gazizova'), ('Alina', 'Gershman'), ('Alina', 'Hoelzel'), ('Alina', 'Jane'), ('Alina', 'Jerjomina'), ('Alina', 'Jidkova'), ('Alina', 'Karazhova'), ('Alina', 'Kislitskaya'), ('Alina', 'Kuzmenkova'), ('Alina', 'Lazareva'), ('Alina', 'Mekhtieva'), ('Alina', 'Mikheeva'), ('Alina', 'Orcholska'), ('Alina', 'Pakharenko'), ('Alina', 'Petras'), ('Alina', 'Povidalo'), ('Alina', 'Robok'), ('Alina', 'Saracin'), ('Alina', 'Savchuk'), ('Alina', 'Shazhko'), ('Alina', 'Silich'), ('Alina', 'Soltanici'), ('Alina', 'Stanila'), ('Alina', 'Stroiu'), ('Alina', 'Sufiarova'), ('Alina', 'Sullivan'), ('Alina', 'Tecsor'), ('Alina', 'Tseplukhova'), ('Alina', 'Wessel'), ('Alina', 'Wyganowska'), ('Alina', 'Yanovskaya'), ('Alina', 'Zolotareva'), ('Alina', 'Zubkova'), ('Alina Iuliana', 'Virsa'), ('Alina Silvana', 'Moise'), ('Aline', 'Berkenbrock'), ('Aline', 'Laurioux'), ('Aline', 'Nenot'), ('Aline', 'Pinheiro'), ('Aline', 'Quintal'), ('Aline', 'Thommen'), ('Aliona', 'Bolsova'), ('Aliona', 'Ladutska'), ('Alisa', 'Axyanova'), ('Alisa', 'Buslayeva'), ('Alisa', 'Danilova'), ('Alisa', 'Deen'), ('Alisa', 'Grachova'), ('Alisa', 'Kagukina'), ('Alisa', 'Kleybanova'), ('Alisa', 'Kniazeva'), ('Alisa', 'Martinov'), ('Alisa', 'Ogorodova'), ('Alisa', 'Rudenko'), ('Alisa', 'Savina'), ('Alisa', 'Solovieva'), ('Alisa', 'Tymofeyeva'), ('Alisa', 'Yakimakho'), ('Alisa Juliana', 'Caluseriu'), ('Alise', 'Cernecka'), ('Alise', 'Vaidere'), ('Alisee', 'Hirt'), ('Alisha', 'Haas'), ('Alisha', 'Reayer'), ('Alisia Stephanie', 'Manolescu'), ('Alisiya', 'Soto'), ('Alison', 'Bai'), ('Alison', 'Bell'), ('Alison', 'Cohen'), ('Alison', 'De Vries'), ('Alison', 'Fleming'), ('Alison', 'Hill'), ('Alison', 'Mckenzie'), ('Alison', 'Mcmillan'), ('Alison', 'Moverley'), ('Alison', 'Nash'), ('Alison', 'Ojeda'), ('Alison', 'Ramos'), ('Alison', 'Reid'), ('Alison', 'Riske'), ('Alison', 'Scott'), ('Alison', 'Shemon'), ('Alison', 'Silverio'), ('Alison', 'Smith'), ('Alison', 'Van Uytvanck'), ('Alison', 'Vaughan'), ('Alison Brigette', 'Sanders'), ('Alissa', 'Finerman'), ('Alissa', 'Selivenko'), ('Alissa', 'Velts'), ('Alissia', 'Gleixner'), ('Alita', 'Rumsey'), ('Alix', 'Collombon'), ('Alix', 'Creek'), ('Alix', 'La Celarie'), ('Alix', 'Theodossiou'), ('Aliya', 'Tarpischeva'), ('Alize', 'Boccard'), ('Alize', 'Cornet'), ('Alize', 'Lim'), ('Alizee', 'Michaud'), ('Alizee', 'Paradis'), ('Alja', 'Zec Peskiric'), ('Alla', 'Aleksandrova'), ('Alla', 'Goncharenko'), ('Alla', 'Ivanova'), ('Alla', 'Kudryavtseva'), ('Alla', 'Safolova'), ('Allegra', 'Cesare'), ('Allegra', 'Milholland'), ('Alli', 'Hodges'), ('Allie', 'Kiick'), ('Allie', 'Will'), ('Allison', 'Baker'), ('Allison', 'Bojczuk'), ('Allison', 'Bradshaw'), ('Allison', 'Cooper'), ('Allison', 'Kinsey'), ('Allison', 'Quammen'), ('Allison', 'Tolson'), ('Allyson', 'Ingram'), ('Alma', 'Garcia Valle'), ('Alma', 'Thell Lenntorp'), ('Alma Michelle', 'Espinosa Rodriguez'), ('Almira', 'Hallyeva'), ('Almudena', 'Sanz Llaneza Fernandez'), ('Almut', 'Sturm'), ('Aloise', 'Dorey'), ('Alona', 'Bondarenko'), ('Alona', 'Fomina'), ('Alona', 'Kruglov'), ('Alona', 'Nakamura'), ('Alona', 'Puskkarevsky'), ('Alona', 'Shubina'), ('Alory Regina Elorriaga', 'Pereira'), ('Alpha', 'Ambaye'), ('Alrissa', 'Tobe'), ('Altea', 'Ricci'), ('Althea', 'Gibson'), ('Altie', 'Barnard'), ('Alvina', 'Lai'), ('Alycia', 'Moulton'), ('Alycia', 'Parks'), ('Alyona', 'Sotnikova'), ('Alysia', 'May'), ('Alyssa', 'Boey'), ('Alyssa', 'Cohen'), ('Alyssa', 'Fuentes'), ('Alyssa', 'Hibberd'), ('Alyssa', 'Mayo'), ('Alyssa', 'Rodriguez'), ('Alyssa Ann', 'Labay'), ('Alyssa Grace', 'Smith'), ('Alyvia', 'Jones'), ('Alyza', 'Benotto'), ('Alzbeta', 'Houbova'), ('Alzbeta', 'Veverkova'), ('Amaia', 'Ormazabal Oregui'), ('Amal', 'Basha'), ('Amala', 'Amol Warrick'), ('Amalia', 'Beksi'), ('Amalia', 'Mitropoulou'), ('Amanat', 'Thind'), ('Amanda', 'Andrade Silva'), ('Amanda', 'Anisimova'), ('Amanda', 'Augustus'), ('Amanda', 'Avedissian'), ('Amanda', 'Basica'), ('Amanda', 'Belgini Franchi'), ('Amanda', 'Bertani'), ('Amanda', 'Bran'), ('Amanda', 'Brown'), ('Amanda', 'Browne'), ('Amanda', 'Carreras'), ('Amanda', 'Carrillo Galera'), ('Amanda', 'Castillo'), ('Amanda', 'Cerda Miranda'), ('Amanda', 'Citre'), ('Amanda', 'Coetzer'), ('Amanda', 'Craddock'), ('Amanda', 'Cunningham'), ('Amanda', 'Dundas'), ('Amanda', 'Elliott'), ('Amanda', 'Fink'), ('Amanda', 'Fish'), ('Amanda', 'Gesualdi'), ('Amanda', 'Gilson'), ('Amanda', 'Grahame'), ('Amanda', 'Granson'), ('Amanda', 'Gregory'), ('Amanda', 'Grunfeld'), ('Amanda', 'Hellberg'), ('Amanda', 'Hopmans'), ('Amanda', 'Jasso'), ('Amanda', 'Johnson'), ('Amanda', 'Keen'), ('Amanda', 'Mang'), ('Amanda', 'Mankovits'), ('Amanda', 'Marrow'), ('Amanda', 'Mcdowell'), ('Amanda', 'Melgarejo'), ('Amanda', 'Meyer'), ('Amanda', 'Parson Siegel'), ('Amanda', 'Peros'), ('Amanda', 'Pratzel'), ('Amanda', 'Pryor'), ('Amanda', 'Rales'), ('Amanda', 'Rebol'), ('Amanda', 'Reyes'), ('Amanda', 'Rodgers'), ('Amanda', 'Saiontz'), ('Amanda', 'Sanches'), ('Amanda', 'Schneider'), ('Amanda', 'Spindola Veiga'), ('Amanda', 'Tate'), ('Amanda', 'Tobin Dingwall'), ('Amanda', 'Trail'), ('Amanda', 'Wainwright'), ('Amanda', 'Weinhold'), ('Amanda', 'Zapata'), ('Amanda Marie', 'Taylor'), ('Amanda Miguel', 'Perez Franco'), ('Amandine', 'Cazeaux'), ('Amandine', 'Clio'), ('Amandine', 'Dulon'), ('Amandine', 'Hesse'), ('Amandine', 'Singla'), ('Amangul', 'Mollayeva'), ('Amani', 'Khalifa'), ('Amanpreet', 'Kaur'), ('Amaranta', 'Spinelli'), ('Amber', 'Brightly'), ('Amber', 'Liu'), ('Amber', 'Walker'), ('Ambika', 'Pande'), ('Ambre', 'Boccard'), ('Ambre', 'Feder'), ('Ambreen', 'Rana'), ('Amel', 'Benhaj'), ('Amel', 'Ouahab'), ('Amelia', 'Frendo'), ('Amelia', 'Harris'), ('Amelia', 'Herring'), ('Amelia', 'Lincaru'), ('Amelia', 'Stuart'), ('Amelie', 'Boy'), ('Amelie', 'Castera'), ('Amelie', 'Cocheteux'), ('Amelie', 'Detriviere'), ('Amelie', 'Intert'), ('Amelie', 'Mauresmo'), ('Amelie', 'Philippe'), ('Amelie Carolin', 'Kurpiers'), ('Ami', 'Fujiwara'), ('Ami', 'Nakano'), ('Amie', 'Garcia'), ('Amie', 'Shyu'), ('Amina', 'Anshba'), ('Amina', 'Berdieva'), ('Amina', 'Choqri'), ('Amina', 'El Khattabi'), ('Amina', 'El Sahn'), ('Amina', 'Lasheen'), ('Amina', 'Mrad'), ('Amina', 'Mukhametshina'), ('Amina', 'Rakhim'), ('Amina', 'St Hill'), ('Aminat', 'Balogun'), ('Aminat', 'Kushkhova'), ('Aminat', 'Quadri'), ('Aminat', 'Taiwo'), ('Amine', 'Dik'), ('Amira', 'Benaissa'), ('Amira', 'El Borolossy'), ('Amira', 'Handous'), ('Amira', 'Pirovani'), ('Amira', 'Samara'), ('Amira', 'Segaoula'), ('Amiru', 'Shimoguchi'), ('Amit', 'Berkovitz'), ('Amit', 'Gavrieli'), ('Amit', 'Lev Ari'), ('Amit', 'Miran'), ('Amitha', 'Arudpragasam'), ('Amonica', 'Arcos'), ('Amoolya', 'Raghunath'), ('Amparo', 'Botella Boix'), ('Amparo', 'Iglesias'), ('Amparo Del Pino', 'Hernandez Alonso'), ('Amra', 'Sadikovic'), ('Amreen', 'Chaudhary'), ('Amreen', 'Naaz'), ('Amreeta', 'Ahluwalia'), ('Amreetha', 'Muttiah'), ('Amrita', 'Mukherjee'), ('Amy', 'Alcini'), ('Amy', 'Anstey'), ('Amy', 'Askew'), ('Amy', 'Berthe'), ('Amy', 'Bowtell'), ('Amy', 'Burson'), ('Amy', 'Chiminello'), ('Amy', 'De Lone'), ('Amy', 'Dillingham'), ('Amy', 'Frazier'), ('Amy', 'Goldfarb'), ('Amy', 'He'), ('Amy', 'Hoburn'), ('Amy', 'Holton'), ('Amy', 'Jensen'), ('Amy', 'Jonsson Raaholt'), ('Amy', 'Mascotti'), ('Amy', 'Newman'), ('Amy', 'Olivier'), ('Amy', 'Robinson'), ('Amy', 'Sargeant'), ('Amy', 'Schwartz'), ('Amy', 'Sneath'), ('Amy', 'Toth'), ('Amy', 'Van Buuren'), ('Amy', 'Wachenheim'), ('Amy', 'Yang'), ('Amy', 'Zhu'), ('An Na', 'Lee'), ('An Qi', 'Ge'), ('An Sophie', 'Mestach'), ('Ana', 'Abad'), ('Ana', 'Abramovic'), ('Ana', 'Akhalkatsi'), ('Ana', 'Alcazar'), ('Ana', 'Almansa'), ('Ana', 'Aubone'), ('Ana', 'Baran'), ('Ana', 'Batiri'), ('Ana', 'Beltran Trigueros'), ('Ana', 'Belzunce Crompin'), ('Ana', 'Bezjak'), ('Ana', 'Biskic'), ('Ana', 'Bogdan'), ('Ana', 'Brandusan'), ('Ana', 'Buraku'), ('Ana', 'Carotini'), ('Ana', 'Castillo'), ('Ana', 'Cavadini'), ('Ana', 'Cetnik'), ('Ana', 'Claro'), ('Ana', 'Corbett'), ('Ana', 'Curto'), ('Ana', 'Fernandez Villa'), ('Ana', 'Friganovic'), ('Ana', 'Gaspar'), ('Ana', 'Gasparyan'), ('Ana', 'Geller'), ('Ana', 'Giraldi Requena'), ('Ana', 'Glumac'), ('Ana', 'Gomez Aleman'), ('Ana', 'Gonzalez Andrade'), ('Ana', 'Gonzalez Herreros'), ('Ana', 'Grindeanu'), ('Ana', 'Higer'), ('Ana', 'Ivanovic'), ('Ana', 'Jagerfeld Juric'), ('Ana', 'Jerman'), ('Ana', 'Jikia'), ('Ana', 'Jovanovic'), ('Ana', 'Katanic'), ('Ana', 'Knezovic'), ('Ana', 'Konjuh'), ('Ana', 'Kovacevic'), ('Ana', 'Lantigua De La Nuez'), ('Ana', 'Larrakoetxea'), ('Ana', 'Laso'), ('Ana', 'Lipartia'), ('Ana', 'Lopez Camarero'), ('Ana', 'Madcur'), ('Ana', 'Makatsaria'), ('Ana', 'Martin Ramirez'), ('Ana', 'Martinez Bencomo'), ('Ana', 'Maslesa'), ('Ana', 'Miguel Ivern'), ('Ana', 'Milosavljevic'), ('Ana', 'Mise'), ('Ana', 'Oparenovic'), ('Ana', 'Perez'), ('Ana', 'Perlain'), ('Ana', 'Puerto Jaimez'), ('Ana', 'Quevedo'), ('Ana', 'Radak Trampetic'), ('Ana', 'Radeljevic'), ('Ana', 'Rojas'), ('Ana', 'Roman Dominguez'), ('Ana', 'Royo Marco'), ('Ana', 'Ruiz'), ('Ana', 'Ruiz Fernandez'), ('Ana', 'Salas Lozano'), ('Ana', 'Sans'), ('Ana', 'Santelises'), ('Ana', 'Sanz Castro'), ('Ana', 'Savic'), ('Ana', 'Serrot Geminelli'), ('Ana', 'Shanidze'), ('Ana', 'Sirovina'), ('Ana', 'Sismondini'), ('Ana', 'Skafar'), ('Ana', 'Stefanovic'), ('Ana', 'Stiglic'), ('Ana', 'Stojacic'), ('Ana', 'Timotic'), ('Ana', 'Tomasevic'), ('Ana', 'Veselinovic'), ('Ana', 'Viglione'), ('Ana', 'Vrljic'), ('Ana', 'Yrazusta Acosta'), ('Ana Beatriz', 'Balderas'), ('Ana Belen', 'Quintana'), ('Ana Bianca', 'Mihaila'), ('Ana Carola', 'Guzman'), ('Ana Carolina', 'Martinez'), ('Ana Carolina', 'Pancia'), ('Ana Carolina', 'Santoro'), ('Ana Carolina', 'Sigaki'), ('Ana Carolina Caiuby', 'Mattos'), ('Ana Catalina', 'Guerrero'), ('Ana Catarina', 'Nogueira'), ('Ana Cecilia', 'Olivos'), ('Ana Cecilia', 'Trevino'), ('Ana Clara', 'Duarte'), ('Ana Claudia', 'Carbajal Espinosa'), ('Ana Cristina', 'Moreno'), ('Ana Cristina', 'Reyes'), ('Ana Elizabeth', 'Jimenez Garcia'), ('Ana Fernanda', 'Loaiza Esquivias'), ('Ana Filipa', 'Santos'), ('Ana Gabriela', 'Gerbasi'), ('Ana Gabriela', 'Llera'), ('Ana Gabriela', 'Meis'), ('Ana Gloria', 'Osorio Pena'), ('Ana Helena', 'De Moraes Pinto'), ('Ana Izabela', 'Oliveira'), ('Ana Karina', 'Saldivar'), ('Ana Laura', 'Gutierrez'), ('Ana Laura', 'Ochoa Magana'), ('Ana Lena', 'Toto'), ('Ana Lilia', 'Salas'), ('Ana Lilyan', 'Guzman'), ('Ana Lorena', 'Belmar'), ('Ana Lorena', 'Garcia Navas'), ('Ana Lucia', 'Carneiro Revoredo'), ('Ana Lucia', 'Migliarini De Leon'), ('Ana Lucia', 'Pereyra'), ('Ana Luisa', 'Perez Lopez'), ('Ana Luisa', 'Torres'), ('Ana Luiza', 'Alencar'), ('Ana Luiza', 'Cruz'), ('Ana Luiza', 'Farinha'), ('Ana Luiza', 'Ferreira'), ('Ana Luna', 'Gonzalez Munoz'), ('Ana M', 'Becerra'), ('Ana M', 'Sanchez'), ('Ana Marcela', 'Rengifo Caracas'), ('Ana Maria', 'Arias'), ('Ana Maria', 'Ayala Villacorta'), ('Ana Maria', 'Bocio'), ('Ana Maria', 'Carrion Rodriguez'), ('Ana Maria', 'Chavez Franco'), ('Ana Maria', 'Constantinescu'), ('Ana Maria', 'Crisan'), ('Ana Maria', 'Estalella Manso'), ('Ana Maria', 'Franco Lopez'), ('Ana Maria', 'Gavrilovici'), ('Ana Maria', 'Gherman'), ('Ana Maria', 'Gilca'), ('Ana Maria', 'Gonzalez Leon'), ('Ana Maria', 'Gonzalez Ruiz'), ('Ana Maria', 'Hartweg'), ('Ana Maria', 'Henriquez'), ('Ana Maria', 'Mora'), ('Ana Maria', 'Moura'), ('Ana Maria', 'Nedelcu'), ('Ana Maria', 'Segura Perez'), ('Ana Maria', 'Simanca'), ('Ana Maria', 'Stroe'), ('Ana Maria', 'Szilagyi'), ('Ana Maria', 'Viera Teixtera'), ('Ana Maria', 'Ycaza'), ('Ana Maria', 'Zamfir'), ('Ana Maria', 'Zarta'), ('Ana Maria', 'Zuleta'), ('Ana Maria Andreea', 'Ileana'), ('Ana Marija', 'Banic'), ('Ana Mihaela', 'Vladutu'), ('Ana Milena', 'Ramirez'), ('Ana Paola', 'Gonzalez Diaz'), ('Ana Paula', 'Antelo'), ('Ana Paula', 'De La Pena'), ('Ana Paula', 'Folch'), ('Ana Paula', 'Leal'), ('Ana Paula', 'Melilo'), ('Ana Paula', 'Menezes Simoes'), ('Ana Paula', 'Molero'), ('Ana Paula', 'Mores'), ('Ana Paula', 'Neffa De Los Rios'), ('Ana Paula', 'Novaes'), ('Ana Paula', 'Saviole'), ('Ana Paula', 'Zannoni'), ('Ana Regina', 'Buenviaje'), ('Ana Rosa', 'Cabeza Candela'), ('Ana Sofia', 'Camberos'), ('Ana Sofia', 'Cordero'), ('Ana Sofia', 'Sanchez'), ('Ana Valeria', 'Rolon'), ('Ana Victoria', 'Gobbi Monllau'), ('Ana Victoria', 'Pimienta'), ('Anabel', 'Aran Torrente'), ('Anabel', 'Carbo Estruch'), ('Anabel', 'Luna De Infante'), ('Anabel', 'Martinovic'), ('Anabel', 'Medina Garrigues'), ('Anabel', 'Ossombi'), ('Anabel', 'Pollan'), ('Anabela', 'Plasencia'), ('Anabella', 'Duque'), ('Anabella', 'Radics'), ('Anabella', 'Sansostri'), ('Anabelle', 'Espinosa Rodriguez'), ('Anaeve', 'Pain'), ('Anahi', 'Navarro Ruano'), ('Anahita', 'Jagtiani'), ('Anais', 'Dallara'), ('Anais', 'Defossez'), ('Anais', 'Deville'), ('Anais', 'Emelie'), ('Anais', 'Gomar Isart'), ('Anais', 'Laurendon'), ('Anais', 'Van Cauter'), ('Anais Marie', 'Moreno'), ('Analia', 'Baca'), ('Analia', 'Hermida'), ('Analia', 'Longoni'), ('Analisa', 'Miro'), ('Anamaria', 'Candanoza'), ('Anamaria', 'Kiszner Luca'), ('Anamaria', 'Vladescu'), ('Anamaria Alexandra', 'Sere'), ('Anamarija', 'Spoljaric'), ('Anamarija', 'Stevanovic'), ('Anamarija', 'Zokic'), ('Anamika', 'Bhargava'), ('Anand Dharana', 'Mudaliar'), ('Ananya', 'Jha'), ('Ananya', 'Sarkar'), ('Anastacia', 'Simons'), ('Anastasia', 'Abramyan'), ('Anastasia', 'Aleshcheva'), ('Anastasia', 'Antoniadou'), ('Anastasia', 'Artemova'), ('Anastasia', 'Balafouta'), ('Anastasia', 'Balyuk'), ('Anastasia', 'Belova'), ('Anastasia', 'Blyukhterova'), ('Anastasia', 'Bovolskaya'), ('Anastasia', 'Bukhanko'), ('Anastasia', 'Burmistrova'), ('Anastasia', 'Bursa'), ('Anastasia', 'Butcovscaia'), ('Anastasia', 'Cherkashin'), ('Anastasia', 'Chikalkina'), ('Anastasia', 'Detiuc'), ('Anastasia', 'Dvornikova'), ('Anastasia', 'Erofeeva'), ('Anastasia', 'Etkin'), ('Anastasia', 'Frolova'), ('Anastasia', 'Gasanova'), ('Anastasia', 'Gavryukova'), ('Anastasia', 'Golovatch'), ('Anastasia', 'Golubeva'), ('Anastasia', 'Goncharova'), ('Anastasia', 'Grosheva'), ('Anastasia', 'Grymalska'), ('Anastasia', 'Iamachkine'), ('Anastasia', 'Ivanina'), ('Anastasia', 'Kharchenko'), ('Anastasia', 'Kharitonova'), ('Anastasia', 'Khlestova'), ('Anastasia', 'Klyueva'), ('Anastasia', 'Konstantinova'), ('Anastasia', 'Kontratevidi'), ('Anastasia', 'Koroliova'), ('Anastasia', 'Koveshnikova'), ('Anastasia', 'Kriz'), ('Anastasia', 'Kulikova'), ('Anastasia', 'Kuprina'), ('Anastasia', 'Malhotra'), ('Anastasia', 'Matyukhina'), ('Anastasia', 'Meglinskaya'), ('Anastasia', 'Michail'), ('Anastasia', 'Mikheeva'), ('Anastasia', 'Mukhametova'), ('Anastasia', 'Myskina'), ('Anastasia', 'Nebojanko'), ('Anastasia', 'Nikolaou'), ('Anastasia', 'Pavlyuchenkova'), ('Anastasia', 'Petrova'), ('Anastasia', 'Petukhova'), ('Anastasia', 'Pivovarova'), ('Anastasia', 'Pogorelskaya'), ('Anastasia', 'Poliakova'), ('Anastasia', 'Poltoratskaya'), ('Anastasia', 'Ponomarenko'), ('Anastasia', 'Potapova'), ('Anastasia', 'Pozdnyakova'), ('Anastasia', 'Pribylova'), ('Anastasia', 'Prokopenko'), ('Anastasia', 'Putilina'), ('Anastasia', 'Reimchen'), ('Anastasia', 'Rentouli'), ('Anastasia', 'Reshetnikova'), ('Anastasia', 'Revzina'), ('Anastasia', 'Rodionova'), ('Anastasia', 'Rudakova'), ('Anastasia', 'Savkina'), ('Anastasia', 'Shaulskaya'), ('Anastasia', 'Shchilinskaya'), ('Anastasia', 'Shevchenko'), ('Anastasia', 'Smirnova'), ('Anastasia', 'Solomko'), ('Anastasia', 'Sourkova'), ('Anastasia', 'Stepu'), ('Anastasia', 'Sukhotina'), ('Anastasia', 'Tokareva'), ('Anastasia', 'Trubich'), ('Anastasia', 'Trunina'), ('Anastasia', 'Tsyganova'), ('Anastasia', 'Ulikhina'), ('Anastasia', 'Ushakova'), ('Anastasia', 'Usova'), ('Anastasia', 'Vasileiou'), ('Anastasia', 'Vdovenco'), ('Anastasia', 'Veselova'), ('Anastasia', 'Vivdenko'), ('Anastasia', 'Vovk'), ('Anastasia', 'Wagner'), ('Anastasia', 'Yakimova'), ('Anastasia', 'Zakharova'), ('Anastasia', 'Zarytska'), ('Anastasia', 'Zhovtiuk'), ('Anastasia', 'Zvereva'), ('Anastasia Evgenyevna', 'Nefedova'), ('Anastasiia', 'Chesnokova'), ('Anastasiia', 'Gevel'), ('Anastasiia', 'Zviahintseva'), ('Anastasija', 'Cobanovic'), ('Anastasija', 'Filipovic'), ('Anastasija', 'Homutova'), ('Anastasija', 'Sevastova'), ('Anastasiya', 'Belogrivceva'), ('Anastasiya', 'Fedoryshyn'), ('Anastasiya', 'Galickaya'), ('Anastasiya', 'Gorbacheva'), ('Anastasiya', 'Halaburda'), ('Anastasiya', 'Joyner'), ('Anastasiya', 'Khrustaleva'), ('Anastasiya', 'Klymenko'), ('Anastasiya', 'Komardina'), ('Anastasiya', 'Kyrylova'), ('Anastasiya', 'Lytovchenko'), ('Anastasiya', 'Mulder Syrovatskaia'), ('Anastasiya', 'Poplavska'), ('Anastasiya', 'Prenko'), ('Anastasiya', 'Rychagova'), ('Anastasiya', 'Saitova'), ('Anastasiya', 'Shcherbakova'), ('Anastasiya', 'Shestakova'), ('Anastasiya', 'Shleptsova'), ('Anastasiya', 'Shoshyna'), ('Anastasiya', 'Slyusarchyk'), ('Anastasiya', 'Smirnova'), ('Anastasiya', 'Sukhorukova'), ('Anastasiya', 'Tripolskaya'), ('Anastasiya', 'Vasylyeva'), ('Anastasiya', 'Yepisheva'), ('Anastasiya', 'Zablotskaya'), ('Anastasiya', 'Zaharova'), ('Anastasiya', 'Zubkova'), ('Anastassia', 'Pantelic'), ('Anastassiya', 'Bessarab'), ('Anastassiya', 'Sharapova'), ('Anastassiya', 'Zherdeva'), ('Anastazja', 'Rosnowska'), ('Anasztazia', 'Fouraev'), ('Anat', 'Ashtamkar'), ('Anat', 'Katz'), ('Anat', 'Varon'), ('Anca', 'Anastasiu'), ('Anca', 'Barna'), ('Anca', 'Craciun'), ('Anca', 'Dumitrescu'), ('Anca', 'Dumitru'), ('Anca', 'Vasiloaica'), ('Anca', 'Vladean'), ('Ancia', 'Ifill'), ('Ancuta', 'Gadalean'), ('Anda', 'Ghinga'), ('Anda', 'Karanusic'), ('Anda', 'Perianu'), ('Ande', 'Tulp'), ('Andei', 'Fukushige'), ('Andela', 'Brguljan'), ('Andie K', 'Daniell'), ('Andiyo', 'Inwang'), ('Andjela', 'Kankaras'), ('Andjela', 'Nemcevic'), ('Andjela', 'Novcic'), ('Andjela', 'Reljic'), ('Andjela', 'Sebrek'), ('Andjela', 'Skrobonja'), ('Andjela', 'Stojkovic'), ('Andra', 'Cornea'), ('Andra', 'Gavril'), ('Andra', 'Stanculescu'), ('Andra Edith', 'Marinescu'), ('Andra Elena', 'Voinea'), ('Andra Iulia', 'Savu'), ('Andra Maria', 'Nitescu'), ('Andra Mihaela', 'Coprean'), ('Andrada', 'Hai'), ('Andrada Ioana', 'Surdeanu'), ('Andrada Lacramioara', 'Dinu'), ('Andre', 'Polasek'), ('Andrea', 'Arratia Fernandez'), ('Andrea', 'Behalova'), ('Andrea', 'Beneroso Lacaba'), ('Andrea', 'Benitez'), ('Andrea', 'Berger'), ('Andrea', 'Berkova'), ('Andrea', 'Berzal Albaladejo'), ('Andrea', 'Betzner'), ('Andrea', 'Bilic'), ('Andrea', 'Blazevic'), ('Andrea', 'Bonilla'), ('Andrea', 'Brenes'), ('Andrea', 'Caamano'), ('Andrea', 'Castillo Gutierrez'), ('Andrea', 'Cetkovic'), ('Andrea', 'Cooper'), ('Andrea', 'Crespo De La Concepcion'), ('Andrea', 'Davidova'), ('Andrea', 'Di Leo'), ('Andrea', 'Dikosavljevic'), ('Andrea', 'Duva'), ('Andrea', 'Eskauriatza Ruiz'), ('Andrea', 'Espinosa'), ('Andrea', 'Farley'), ('Andrea', 'Ferrari'), ('Andrea', 'Galloway'), ('Andrea', 'Gamiz'), ('Andrea', 'Garcia Fernandez'), ('Andrea', 'Gerhardt'), ('Andrea', 'Giraldo'), ('Andrea', 'Glass'), ('Andrea', 'Gomez Carus'), ('Andrea', 'Hardegger'), ('Andrea', 'Hernandez'), ('Andrea', 'Hernando Gutierrez'), ('Andrea', 'Herrera'), ('Andrea', 'Hlavackova'), ('Andrea', 'Ho'), ('Andrea', 'Hoch'), ('Andrea', 'Hofinger'), ('Andrea', 'Holikova'), ('Andrea', 'Ivanovic'), ('Andrea', 'Jaeger'), ('Andrea', 'Ka'), ('Andrea', 'Koch Benvenuto'), ('Andrea', 'Kohrt'), ('Andrea', 'Konjuh'), ('Andrea', 'Kulova'), ('Andrea', 'Kwong'), ('Andrea', 'Lazaro Garcia'), ('Andrea', 'Leand'), ('Andrea', 'Liniger'), ('Andrea', 'Lipovska'), ('Andrea', 'Lippe'), ('Andrea', 'Lopez Seco'), ('Andrea', 'Martinelli'), ('Andrea', 'Martinez'), ('Andrea', 'Martinovska'), ('Andrea', 'Masarykova'), ('Andrea', 'Medina Tomas'), ('Andrea', 'Mekel'), ('Andrea', 'Menezes'), ('Andrea', 'Montoya'), ('Andrea', 'Morgado'), ('Andrea', 'Muller'), ('Andrea', 'Munch Hermansen'), ('Andrea', 'Murillo'), ('Andrea', 'Nathan'), ('Andrea', 'Nickel'), ('Andrea', 'Nikic'), ('Andrea', 'Norlander'), ('Andrea', 'Noszaly'), ('Andrea', 'Oates'), ('Andrea', 'Paredes'), ('Andrea', 'Pavlovic'), ('Andrea', 'Pazmino'), ('Andrea', 'Pera'), ('Andrea', 'Perez Lopez'), ('Andrea', 'Pesak'), ('Andrea', 'Peterman'), ('Andrea', 'Petkovic'), ('Andrea', 'Piski'), ('Andrea', 'Plackova'), ('Andrea', 'Popluharova'), ('Andrea', 'Popovic'), ('Andrea', 'Portillo'), ('Andrea', 'Prisco'), ('Andrea', 'Quintana'), ('Andrea', 'Raaholdt'), ('Andrea', 'Rebrova'), ('Andrea', 'Remynse'), ('Andrea', 'Retolaza Andrade'), ('Andrea', 'Riedlmajerova'), ('Andrea', 'Ritecz'), ('Andrea', 'Rivera'), ('Andrea', 'Rodriguez Company'), ('Andrea', 'Rose'), ('Andrea', 'Ryan'), ('Andrea', 'Sanchez Sainz'), ('Andrea', 'Sauco Roque'), ('Andrea', 'Schwarz'), ('Andrea', 'Sebova'), ('Andrea', 'Sieveke'), ('Andrea', 'Solano Jimenez'), ('Andrea', 'Strasakova'), ('Andrea', 'Strnadova'), ('Andrea', 'Tabachnik'), ('Andrea', 'Temesvari'), ('Andrea', 'Ternera'), ('Andrea', 'Tiezzi'), ('Andrea', 'Tomassone'), ('Andrea', 'Tunko'), ('Andrea', 'Van Den Hurk'), ('Andrea', 'Vargas'), ('Andrea', 'Vieira'), ('Andrea', 'Vopat'), ('Andrea', 'Vosecka'), ('Andrea', 'Whitmore'), ('Andrea', 'Winkler'), ('Andrea', 'Yacaman'), ('Andrea Agostina', 'Farulla Di Palma'), ('Andrea Fernanda', 'Flores'), ('Andrea Natalia', 'Martin'), ('Andrea Renee', 'Villarreal'), ('Andree', 'Martin'), ('Andree', 'Sime'), ('Andreea', 'Badileanu'), ('Andreea', 'Craciun'), ('Andreea', 'Cula'), ('Andreea', 'Ehritt Vanc'), ('Andreea', 'Fusea'), ('Andreea', 'Ghitescu'), ('Andreea', 'Gradinaru Fometescu'), ('Andreea', 'Horobeanu'), ('Andreea', 'Istrate'), ('Andreea', 'Mihai'), ('Andreea', 'Nitescu'), ('Andreea', 'Novaceanu'), ('Andreea', 'Petrisor'), ('Andreea', 'Prisacariu'), ('Andreea', 'Seserman'), ('Andreea', 'Stanescu'), ('Andreea', 'Velcea'), ('Andreea', 'Zabrac'), ('Andreea Amalia', 'Rosca'), ('Andreea Ana', 'Buiculescu'), ('Andreea Daniela', 'Georgescu'), ('Andreea Elena', 'Iordachi'), ('Andreea Giorgiana', 'Tupan'), ('Andreea Laura', 'Niculescu'), ('Andreea Maria', 'Trocan'), ('Andreea Mihaela', 'Matei'), ('Andreea Patricia', 'Braica'), ('Andreea Roxana', 'Vaideanu'), ('Andreia', 'Beberechi'), ('Andreia', 'Pires'), ('Andreia', 'Ribeiro'), ('Andreina', 'Pino'), ('Andreja', 'Klepac'), ('Andressa', 'Bornschein'), ('Andressa', 'Garcia'), ('Andressa Cristina', 'Souza'), ('Andria', 'Hadjioannou'), ('Andria', 'Tsaggaridou'), ('Andrijana', 'Stoilkovic'), ('Andrina', 'Laegerler'), ('Andrina', 'Peer'), ('Andromachi', 'Bakagianni'), ('Anel', 'Luus'), ('Anelisse', 'Torrico'), ('Aneliya', 'Kairlenova'), ('Aneta', 'Dvorakova'), ('Aneta', 'Kladivova'), ('Aneta', 'Laboutkova'), ('Aneta', 'Miksovska'), ('Aneta', 'Soukup'), ('Aneta', 'Turaj'), ('Anete', 'Bandere'), ('Anete', 'Rozkalne'), ('Anett', 'Ferenczi Bako'), ('Anett', 'Kaasik'), ('Anett', 'Kontaveit'), ('Anett', 'Schutting'), ('Anette', 'Munozova'), ('Anezka', 'Bartosova'), ('Anezka', 'Makovickova'), ('Ange Oby', 'Kajuru'), ('Angel', 'Cobbs'), ('Angel', 'Macleod'), ('Angel', 'Saleh'), ('Angela', 'Ahtemenciuc'), ('Angela', 'Arean'), ('Angela', 'Assal'), ('Angela', 'Barrett'), ('Angela', 'Bernal'), ('Angela', 'Buergis'), ('Angela', 'Cardoso'), ('Angela', 'Charles Alfred'), ('Angela', 'Dahnous'), ('Angela', 'Diez Plagaro'), ('Angela', 'Dishkova'), ('Angela', 'Farley Wilson'), ('Angela', 'Fita Boluda'), ('Angela', 'Garcia Mosquera'), ('Angela', 'Geib'), ('Angela', 'Haynes'), ('Angela', 'Juarez Blanco'), ('Angela', 'Kerek'), ('Angela', 'Kulikov'), ('Angela', 'Lettiere'), ('Angela', 'Leweurs'), ('Angela', 'Longo'), ('Angela', 'Lorenzo Garrido'), ('Angela', 'Piedrahita'), ('Angela', 'Rinaldi'), ('Angela', 'Roesler'), ('Angela', 'Ruchin'), ('Angela', 'Sokovnikova'), ('Angela', 'Szymanowski'), ('Angela', 'Tejedor Espinosa'), ('Angela', 'Walker'), ('Angela', 'Werschel'), ('Angeles', 'De Los Rios'), ('Angeles', 'Montolio'), ('Angeles', 'Moreno Barranquero'), ('Angelica', 'Chavez'), ('Angelica', 'Gavaldon'), ('Angelica', 'Moratelli'), ('Angelica', 'Raggi'), ('Angelica', 'Sepulveda'), ('Angelica', 'Torres'), ('Angelica E', 'Karlsson Hantzis'), ('Angelica Maria', 'Ochoa Martinez'), ('Angelica Maria', 'Torres'), ('Angelica Maria', 'Vargas Saavedra'), ('Angelika', 'Aliev'), ('Angelika', 'Bachmann'), ('Angelika', 'Jogasuria'), ('Angelika', 'Kanellopoulou'), ('Angelika', 'Roesch'), ('Angelika', 'Schadler'), ('Angelika', 'Sobiecka'), ('Angeliki', 'Kairi'), ('Angelina', 'Colquitt'), ('Angelina', 'Fedorova'), ('Angelina', 'Gabueva'), ('Angelina', 'Gordienko'), ('Angelina', 'Jogasuria'), ('Angelina', 'Kholikulova'), ('Angelina', 'Klimova'), ('Angelina', 'Ledovskaya'), ('Angelina', 'Melki'), ('Angelina', 'Minova'), ('Angelina', 'Salihbaeva'), ('Angelina', 'Shakhraychuk'), ('Angelina', 'Skidanova'), ('Angelina', 'Wirges'), ('Angelina', 'Zdorovitskaia'), ('Angelina', 'Zhuravleva'), ('Angeline Devi', 'Devanthiran'), ('Angelique', 'Kerber'), ('Angelique', 'Olivier'), ('Angelique', 'Svinos'), ('Angelique', 'Van Der Meet'), ('Angelique', 'Widjaja'), ('Angelita', 'Detudamo'), ('Angella', 'Raman'), ('Anggrenny', 'Oky Suconong'), ('Angie', 'Ealy'), ('Angie', 'Guillette'), ('Angie', 'Laporal'), ('Angie', 'Marik'), ('Angie', 'Solorzano'), ('Angie', 'Torres'), ('Angie', 'Wilkinson'), ('Angie', 'Woolcock'), ('Angie Carolina', 'Yepes Medina'), ('Anhelina', 'Kalinina'), ('Anhelina', 'Kalita'), ('Anhzelika', 'Isaeva'), ('Ani', 'Amiraghyan'), ('Ani', 'Gogvadze'), ('Ani', 'Mijacika'), ('Ani', 'Nazari'), ('Ani', 'Safaryan'), ('Ani', 'Vangelova'), ('Ania', 'Hertel'), ('Ania', 'Mazor'), ('Anica', 'Wuensche'), ('Aniek', 'Van Rossum'), ('Aniela', 'Mojzis'), ('Anik', 'Cepeda'), ('Anika', 'Yarlagadda'), ('Aniko', 'Kapros'), ('Aniko', 'Kiss'), ('Anine Cornelius', 'Lovdal'), ('Anique', 'Snijders'), ('Anisoara', 'Popescu'), ('Anissa', 'Groves'), ('Anita', 'Aggarwal'), ('Anita', 'Buggins'), ('Anita', 'Csendes'), ('Anita', 'Husaric'), ('Anita', 'Hutellier'), ('Anita', 'Ivancevic'), ('Anita', 'Jordan'), ('Anita', 'Kurimay'), ('Anita', 'Loyola'), ('Anita', 'Paliiska'), ('Anita', 'Perez Flor'), ('Anita', 'Safronenka'), ('Anita', 'Van Deventer'), ('Anita Ance', 'Detlava'), ('Anja', 'Bebic'), ('Anja', 'Dokic'), ('Anja', 'Draskovic'), ('Anja', 'Elsen'), ('Anja', 'Franken'), ('Anja', 'Gal'), ('Anja', 'Koell'), ('Anja', 'Kostecki'), ('Anja', 'Margetic'), ('Anja', 'Nowak'), ('Anja', 'Poglajen'), ('Anja', 'Prislan'), ('Anja', 'Tragardh'), ('Anja', 'Vreg'), ('Anja Vanessa', 'Peter'), ('Anjali', 'Thakur'), ('Anjana', 'Kompally'), ('Anjana', 'Suresh'), ('Anjani', 'Tandon'), ('Anje', 'Lauber'), ('Anjelika', 'Vlasenkova'), ('Anjuri', 'Nagalia'), ('Anjy', 'Fahmy'), ('Anjyu', 'Kanda'), ('Anke', 'Huber'), ('Anke', 'Marchl'), ('Anke', 'Poncelet'), ('Anke', 'Roos'), ('Ankita', 'Bhambri'), ('Ankita', 'Bhatia'), ('Ankita', 'Raina'), ('Ann', 'Barclay'), ('Ann', 'Devries'), ('Ann', 'Ehrmann'), ('Ann', 'Etheredge'), ('Ann', 'Flint'), ('Ann', 'Gabriel'), ('Ann', 'Garbay'), ('Ann', 'Gorneva Krulevitz'), ('Ann', 'Henricksson'), ('Ann', 'Hulbert'), ('Ann', 'Jenkins'), ('Ann', 'Jones'), ('Ann', 'Kiyomura Hayashi'), ('Ann', 'Lebedeff'), ('Ann', 'Li'), ('Ann', 'Moore'), ('Ann', 'Okoro'), ('Ann', 'Phillips Moore'), ('Ann', 'Simons'), ('Ann', 'Stephenson'), ('Ann', 'Wunderlich'), ('Ann Cathrin', 'Hummel'), ('Ann Christin', 'Nilsson'), ('Ann Kathrin', 'Gerk'), ('Ann Kathrin', 'Schmitz'), ('Ann Kathrin', 'Wind'), ('Ann Marie', 'Modric'), ('Ann Sophie', 'Porry'), ('Ann Sophie', 'Rufyikiri'), ('Anna', 'Abadias Morales'), ('Anna', 'Abualhaj'), ('Anna', 'Agamennone'), ('Anna', 'Aggelopoulou'), ('Anna', 'Alexeeva'), ('Anna', 'Amato'), ('Anna', 'Anastasiou'), ('Anna', 'Andersson'), ('Anna', 'Anikanova'), ('Anna', 'Anoufrieva'), ('Anna', 'Arustamyan'), ('Anna', 'Baranovski'), ('Anna', 'Barinova'), ('Anna', 'Bartenstein'), ('Anna', 'Bastrikova'), ('Anna', 'Bentzer'), ('Anna', 'Benzon'), ('Anna', 'Berezka'), ('Anna', 'Berlin'), ('Anna', 'Bielen Zarska'), ('Anna', 'Bini'), ('Anna', 'Blagodarova'), ('Anna', 'Bleszynski'), ('Anna', 'Blinkova'), ('Anna', 'Boada Plade Llorens'), ('Anna', 'Bogoslavets'), ('Anna', 'Boixader Martinez'), ('Anna', 'Bondar'), ('Anna', 'Bowtell'), ('Anna', 'Brazhnikova'), ('Anna', 'Bright'), ('Anna', 'Brogan'), ('Anna', 'Bryukhova'), ('Anna', 'Chachua'), ('Anna', 'Chakvetadze'), ('Anna', 'Collins'), ('Anna', 'Cowan'), ('Anna', 'Danilina'), ('Anna', 'Davydova'), ('Anna', 'De Bruyn'), ('Anna', 'Depenau'), ('Anna', 'Dmitrieva'), ('Anna', 'Dolinska'), ('Anna', 'Dollar'), ('Anna', 'Egorova'), ('Anna', 'Eriksson'), ('Anna', 'Fajnorova'), ('Anna', 'Fischer'), ('Anna', 'Fitzpatrick'), ('Anna', 'Floris'), ('Anna', 'Foldenyi Dicker'), ('Anna', 'Font Estrada'), ('Anna', 'Gabric'), ('Anna', 'Geissler'), ('Anna', 'Gerasimou'), ('Anna', 'Gil Mares'), ('Anna', 'Gorunovich'), ('Anna', 'Grigoryan'), ('Anna', 'Hawkins'), ('Anna', 'Hermann'), ('Anna', 'Iakovleva'), ('Anna', 'Ioannou'), ('Anna', 'Iuale'), ('Anna', 'Ivan'), ('Anna', 'Jaen Seire'), ('Anna', 'Jeczmionka'), ('Anna', 'Jugeli'), ('Anna', 'Kadagidze'), ('Anna', 'Kalabukhova'), ('Anna', 'Kalinskaya'), ('Anna', 'Karavayeva'), ('Anna', 'Kazakevitch'), ('Anna', 'Kechko'), ('Anna', 'Khudoley'), ('Anna', 'Khvedelidze'), ('Anna', 'Klasen'), ('Anna', 'Klebleeva'), ('Anna', 'Klim'), ('Anna', 'Komarova'), ('Anna', 'Korotkova'), ('Anna', 'Korzeniak'), ('Anna', 'Koumantou'), ('Anna', 'Kournikova'), ('Anna', 'Koval'), ('Anna', 'Kraus'), ('Anna', 'Kubareva'), ('Anna', 'Laguza'), ('Anna', 'Lapushchenkova'), ('Anna', 'Larkina'), ('Anna', 'Linkova'), ('Anna', 'Livadaru'), ('Anna', 'Loughlan'), ('Anna', 'Lubinsky'), ('Anna', 'Lukashevich'), ('Anna', 'Macia'), ('Anna', 'Makarova'), ('Anna', 'Makhorkina'), ('Anna', 'Makuha'), ('Anna', 'Mamalat'), ('Anna', 'Mangano'), ('Anna', 'Markovich'), ('Anna', 'Mirza'), ('Anna', 'Mitina'), ('Anna', 'Mogilnicka'), ('Anna', 'Moll'), ('Anna', 'Momot'), ('Anna', 'Montserrat Sanchez'), ('Anna', 'Morgina'), ('Anna', 'Movsisyan'), ('Anna', 'Mydlowska'), ('Anna', 'Naumova'), ('Anna', 'Nefedova'), ('Anna', 'Nemeth'), ('Anna', 'Niemiec'), ('Anna', 'Nordell'), ('Anna', 'Novikova'), ('Anna', 'Novo'), ('Anna', 'Oehme'), ('Anna', 'Orlik'), ('Anna', 'Ozerova'), ('Anna', 'Pavlova'), ('Anna', 'Peregudova'), ('Anna', 'Persson'), ('Anna', 'Pogosova'), ('Anna', 'Popescu'), ('Anna', 'Powaska'), ('Anna', 'Pribylova'), ('Anna', 'Radova'), ('Anna', 'Ramos Vinolas'), ('Anna', 'Rapoport'), ('Anna', 'Rynarzewska'), ('Anna', 'Saito'), ('Anna', 'Saltanova'), ('Anna', 'Sanford'), ('Anna', 'Savchenko'), ('Anna', 'Savitskaya'), ('Anna', 'Schubries'), ('Anna', 'Sedinkina'), ('Anna', 'Segarra Rius'), ('Anna', 'Sharp'), ('Anna', 'Shchupak'), ('Anna', 'Shepita'), ('Anna', 'Shkudun'), ('Anna', 'Sholuh'), ('Anna', 'Sidorovitch'), ('Anna', 'Simkova'), ('Anna', 'Siskova'), ('Anna', 'Skabelka'), ('Anna', 'Slovakova'), ('Anna', 'Smashnova'), ('Anna', 'Smirnova'), ('Anna', 'Smith'), ('Anna', 'Smolina'), ('Anna', 'Sokiran'), ('Anna', 'Solovyeva'), ('Anna', 'Speri'), ('Anna', 'Spivakovski'), ('Anna', 'Stefani'), ('Anna', 'Sviripa'), ('Anna', 'Sydorska'), ('Anna', 'TSELYKOVSKAYA'), ('Anna', 'Tajima'), ('Anna', 'Tatishvili'), ('Anna', 'Titova'), ('Anna', 'Tonoyan'), ('Anna', 'Turati'), ('Anna', 'Turco'), ('Anna', 'Tyshing'), ('Anna', 'Tyulpa'), ('Anna', 'Ukolova'), ('Anna', 'Ulyashchenko'), ('Anna', 'Ureke'), ('Anna', 'Ustinoff'), ('Anna', 'Vasilyeva'), ('Anna', 'Veleva'), ('Anna', 'Velica'), ('Anna', 'Vidgof'), ('Anna', 'Vines Milian'), ('Anna', 'Vitosinskaya'), ('Anna', 'Voronkova'), ('Anna', 'Vrbenska'), ('Anna', 'White'), ('Anna', 'Wilander'), ('Anna', 'Wishink'), ('Anna', 'Woosley'), ('Anna', 'Yenyk'), ('Anna', 'Zaja'), ('Anna', 'Zaporozhanova'), ('Anna', 'Zhang'), ('Anna', 'Zhylchuk'), ('Anna Arina', 'Marenko'), ('Anna Benita', 'Fuchs'), ('Anna Christine', 'Patrimonio'), ('Anna Clarice', 'Patrimonio'), ('Anna Giulia', 'Remondina'), ('Anna Karin', 'Olsson'), ('Anna Karin', 'Svensson'), ('Anna Karolina', 'Schmiedlova'), ('Anna Katalina', 'Alzate Esmurzaeva'), ('Anna Kate', 'Anderson'), ('Anna Laura', 'Baraldi'), ('Anna Lee', 'Bryant'), ('Anna Lena', 'Friedsam'), ('Anna Lena', 'Groenefeld'), ('Anna Lena', 'Hansen'), ('Anna Lena', 'Linden'), ('Anna Lena', 'Neuwirth'), ('Anna Maria', 'Battista'), ('Anna Maria', 'Doan'), ('Anna Maria', 'Fernandez'), ('Anna Maria', 'Heil'), ('Anna Maria', 'Hollo'), ('Anna Maria', 'Jovanovic'), ('Anna Maria', 'Kalavska'), ('Anna Maria', 'Levers'), ('Anna Maria', 'Miller'), ('Anna Maria', 'Procacci'), ('Anna Maria', 'Zubori'), ('Anna Marie', 'Atelj'), ('Anna Marija', 'Bukina'), ('Anna Patricia', 'Santos'), ('Anna Sabrina', 'Ferrari'), ('Anna Signe', 'Rasmussen'), ('Anna Soffia', 'Gronholm'), ('Anna Viktoria', 'Lind'), ('Annabel', 'Bann'), ('Annabel', 'Blow'), ('Annabel', 'Croft'), ('Annabel', 'Ellwood'), ('Annabel', 'Kelynack'), ('Annabel', 'Youthed'), ('Annabella', 'Weigert'), ('Annabelle', 'Andrinopoulos'), ('Annabelle', 'Hageman'), ('Annaelle', 'Bejar'), ('Annalia', 'Dellorso'), ('Annalisa', 'Bona'), ('Annalisa', 'Molino'), ('Annalisa', 'Pesce'), ('Annalisa', 'Salvatelli'), ('Annat', 'El Azari'), ('Anne', 'Aallonen'), ('Anne', 'Bannfy'), ('Anne', 'Blawatt'), ('Anne', 'Carmans'), ('Anne', 'Chevalier'), ('Anne', 'Coleman'), ('Anne', 'Degioanni'), ('Anne', 'Dickhardt'), ('Anne', 'Fritz'), ('Anne', 'Grousbeck'), ('Anne', 'Gylling'), ('Anne', 'Happonen'), ('Anne', 'Hobbs'), ('Anne', 'Jamers'), ('Anne', 'Keothavong'), ('Anne', 'Knuettel'), ('Anne', 'Kremer'), ('Anne', 'Larsen'), ('Anne', 'Le Gall'), ('Anne', 'Lucas'), ('Anne', 'Luijpen'), ('Anne', 'Mall'), ('Anne', 'Meredith'), ('Anne', 'Meritel'), ('Anne', 'Miller'), ('Anne', 'Minter'), ('Anne', 'Moller'), ('Anne', 'Nguyen'), ('Anne', 'Ollevier'), ('Anne', 'Plessinger'), ('Anne', 'Puissant'), ('Anne', 'Redfern'), ('Anne', 'Schaefer'), ('Anne', 'Smith'), ('Anne', 'Stueckle'), ('Anne', 'Valle'), ('Anne', 'Walrick'), ('Anne', 'White'), ('Anne', 'Yelsey'), ('Anne Christine', 'Voicu'), ('Anne Gaelle', 'Sidot'), ('Anne Kathrin', 'Hierl'), ('Anne Laure', 'Brochard'), ('Anne Laure', 'Dorseuil'), ('Anne Laure', 'Heitz'), ('Anne Laure', 'Le Guennec'), ('Anne Laurence', 'Bilenne'), ('Anne Linn', 'Perez'), ('Anne Liz', 'Jeukeng'), ('Anne Marie', 'Brodeur Fontaine'), ('Anne Marie', 'Casado'), ('Anne Marie', 'Cassaigne'), ('Anne Marie', 'Hogan'), ('Anne Marie', 'Medcalf'), ('Anne Marie', 'Mikkers'), ('Anne Marie', 'Rouchon'), ('Anne Marie', 'Ruegg'), ('Anne Marie', 'Simonsen'), ('Anne Marie', 'Studer'), ('Anne Marie', 'Walson'), ('Anne Mette', 'Sorensen'), ('Anne Priska', 'Schaefer'), ('Anne Sophie', 'Bittighoffer'), ('Anne Sophie', 'Bruner'), ('Anne Sophie', 'Courteau'), ('Anne Sophie', 'Forget'), ('Anne Sophie', 'Vidal'), ('Anne Valerie', 'Evain'), ('Anneka', 'Watts'), ('Anneli', 'Bjork'), ('Anneli', 'Ornstedt'), ('Annelie', 'Bjork'), ('Anneliese', 'Rose'), ('Anneliese', 'Tepper'), ('Annelise', 'Fernandez'), ('Anneloes', 'Schothurst'), ('Annelou', 'Nab'), ('Annely', 'Pokras'), ('Annette', 'Aksdal'), ('Annette', 'Coe'), ('Annette', 'Du Plooy'), ('Annette', 'Falkenberg'), ('Annette', 'Gerber'), ('Annette', 'Gulley'), ('Annette', 'Kolb'), ('Annette', 'Oosters'), ('Annette', 'Patchen'), ('Annette', 'Pohjalainen'), ('Annette', 'Singer'), ('Annette', 'Smith'), ('Annette', 'Tronning'), ('Annette', 'Zweck'), ('Annica', 'Cooper'), ('Annica', 'Lindstedt'), ('Annick', 'Melgers'), ('Annick', 'Verhaar'), ('Annie', 'Donaldson'), ('Annie', 'Goransson'), ('Annie', 'Mulholland'), ('Annie', 'Sullivan'), ('Annie', 'Trepanier'), ('Annie', 'Wise'), ('Annika', 'Beck'), ('Annika', 'Bengtsson'), ('Annika', 'Hepp'), ('Annika', 'Karlsson'), ('Annika', 'Narbe'), ('Annika', 'Schneider'), ('Annika', 'Sillanpaa'), ('Annika', 'Weisse'), ('Annina', 'Von Planta'), ('Annita', 'Stylianidou'), ('Anori', 'Fukuda'), ('Anouk', 'Delefortrie'), ('Anouk', 'Sinnige'), ('Anouk', 'Sterk'), ('Anouk', 'Tigu'), ('Anouschka', 'Boralessa'), ('Anouschka', 'Popp'), ('Anousjka', 'Van Exel'), ('Anouska', 'Van Exel'), ('Anri', 'Nagata'), ('Ansley', 'Cargill'), ('Antea', 'Dedic'), ('Anthea', 'Murfet'), ('Anthea', 'Stewart'), ('Anthonia', 'Onwochie'), ('Antia', 'Ghiorghiu'), ('Antigoni', 'Kleftouri'), ('Antje', 'Rubbrecht'), ('Antoaneta', 'Neykova'), ('Antoaneta', 'Pandjerova'), ('Antoaneta', 'Tzarvulkova'), ('Antoinette', 'Mmoh'), ('Antonela', 'Marincic'), ('Antonela', 'Susak'), ('Antonela', 'Voina Timmerbeil'), ('Antonella', 'Altamirano'), ('Antonella', 'Bramato'), ('Antonella', 'Canapi'), ('Antonella', 'Galeano'), ('Antonella', 'La Viola'), ('Antonella', 'Martinetti'), ('Antonella', 'Murialdo'), ('Antonella', 'Pozzi'), ('Antonella', 'Rosa'), ('Antonella', 'Serra Zanetti'), ('Antonia', 'Aposteanu'), ('Antonia', 'Balzert'), ('Antonia', 'Berse'), ('Antonia', 'Conze'), ('Antonia', 'Fohse'), ('Antonia', 'Homolya'), ('Antonia', 'Kolovou'), ('Antonia', 'Kontozoudaki'), ('Antonia', 'Lottner'), ('Antonia', 'Markuskova'), ('Antonia', 'Matic'), ('Antonia', 'Nugent'), ('Antonia', 'Prado'), ('Antonia', 'Sakic'), ('Antonia', 'Schmidt'), ('Antonia', 'Smallbone'), ('Antonia', 'Steinmetz'), ('Antonia', 'Toth'), ('Antonia Xenia', 'Tout'), ('Antonie', 'Steinmetz'), ('Antonina', 'Grib'), ('Antonina', 'Lysakova'), ('Antonina', 'Rafikova'), ('Anu', 'Varpula'), ('Anuja', 'Rithi'), ('Anujapathy', 'Pasupathy'), ('Anukriti', 'Prasad'), ('Anuli', 'Okafor'), ('Anum', 'Saeed'), ('Anupama', 'Rajur'), ('Anupreet', 'Bedi'), ('Anuradha', 'Gurung'), ('Anusha', 'Kondaveeti'), ('Anushka', 'Bhargava'), ('Anushka', 'Rajiyah'), ('Anushree', 'Thammanna'), ('Anya', 'Kochoff'), ('Anya', 'Loncaric'), ('Anya', 'Moyston'), ('Anya', 'Villanueva'), ('Anzela', 'Zguna'), ('Anzhelika', 'Adzhamyan'), ('Anzhelika', 'Balyuk'), ('Ao', 'Gai'), ('Aodhnait', 'Lombard'), ('Aoi', 'Hatanaka'), ('Aoi', 'Ishino'), ('Aoife', 'ONeill'), ('Aparna', 'Kondaveeti'), ('Aparna', 'Singh'), ('Apichaya', 'Runglerdkriangkrai'), ('Apolline', 'Rassat'), ('Appollonia', 'Melzani'), ('April', 'Albertini'), ('April', 'Bisharat'), ('April', 'Gabler'), ('April', 'Pfannestiel'), ('April', 'Van Gennip'), ('Apurvika', 'Shukla'), ('Ara', 'Micayabas'), ('Arabela', 'Fernandez Rabener'), ('Arabella', 'Koller'), ('Araceli', 'Borbolla'), ('Araceli', 'Montero'), ('Aradhana', 'Reddy'), ('Aradhana', 'Sarohia'), ('Arancha', 'Recio Linares'), ('Aranka', 'Huyberts'), ('Arantxa', 'Andrady'), ('Arantxa', 'Garcia Millan'), ('Arantxa', 'Parra Santonja'), ('Arantxa', 'Rus'), ('Arantxa', 'Sanchez'), ('Arantxa', 'Sanchez Vicario'), ('Aranxta', 'Portugal'), ('Aranza', 'Salut'), ('Aranzazu', 'Gallardo'), ('Arati', 'Ponnappa'), ('Aravane', 'Rezai'), ('Archana', 'Reddy'), ('Archana', 'Venkataraman'), ('Areej', 'Fareh'), ('Areeporn', 'Wanichayapanich'), ('Arely Estefania', 'Vilchis Sanchez'), ('Ares', 'Llobera Irun'), ('Ares', 'Teixido Garcia'), ('Arevik', 'Tumanyan'), ('Arezo', 'Ghannadan'), ('Arezou', 'Youlghouni'), ('Argyro', 'Christofi'), ('Argyro', 'Zika'), ('Ari', 'Matsumoto'), ('Ariadna', 'Berdala Grive'), ('Ariadna', 'Junyent'), ('Ariadna', 'Marti Riembau'), ('Ariadne', 'Katsouli'), ('Ariana', 'Arseneault'), ('Ariana', 'Chan Baratau'), ('Ariana', 'Marshall'), ('Ariana', 'Rahmanparast'), ('Ariana', 'Rodriguez'), ('Ariana', 'Rojas'), ('Ariana', 'Saki'), ('Ariane', 'Maack'), ('Ariane', 'Masschelein'), ('Arianna', 'Capogrosso'), ('Arianna', 'Colffer'), ('Arianna', 'Di Gennaro'), ('Arianna', 'Fardanesh'), ('Arianna', 'Magagnoli'), ('Arianna', 'Paules Aldrey'), ('Arianna', 'Tricarico'), ('Arianna Maria', 'Stagni Lailla'), ('Arianne', 'De Winter'), ('Arianne', 'Gajasan'), ('Arianne', 'Hartono'), ('Ariel', 'Sulimany'), ('Ariela', 'Perez'), ('Ariela', 'Primo'), ('Arielle', 'Nealy'), ('Arijana', 'Begovic'), ('Arina', 'Alilueva'), ('Arina', 'Amaning'), ('Arina', 'Beliaeva'), ('Arina', 'Folts'), ('Arina', 'Karbolina'), ('Arina', 'Kuznetsova'), ('Arina', 'Nozdracheva'), ('Arina', 'Petrova'), ('Arina', 'Rodionova'), ('Arina', 'Solomatina'), ('Arina', 'Taluenko'), ('Arina', 'Umanskaya'), ('Arina', 'Uratani'), ('Arina Gabriela', 'Vasilescu'), ('Arisa', 'Abe'), ('Arisa', 'Murakami'), ('Arisha', 'Ladhani'), ('Arithzi', 'Vanzzini'), ('Arletis', 'Fernandez'), ('Arlinda', 'Herforth'), ('Arlinda', 'Rushiti'), ('Arney', 'Johanessdottir'), ('Arpi', 'Kojian'), ('Arrum', 'Damarsari'), ('Arthi', 'Duraisamy'), ('Arthi', 'M'), ('Arthi', 'Venkataraman'), ('Arthi', 'Venkatesan'), ('Artijeta', 'Goxhuli'), ('Arushi', 'Bhasin'), ('Arushi', 'Gupta'), ('Arushi', 'Jain'), ('Arushi', 'Sharma'), ('Aryna', 'Sabalenka'), ('Asa', 'Flodin'), ('Asa', 'Svensson'), ('Asako', 'Sato'), ('Asami', 'Nishio'), ('Asami', 'Saeki'), ('Asami', 'Satozaki'), ('Asami', 'Suzuki'), ('Asami', 'Tsuda'), ('Aschara', 'Moranon'), ('Asel', 'Espolova'), ('Aselya', 'Arginbayeva'), ('Asha', 'Burns'), ('Asha', 'Jaja'), ('Asha', 'Nanda Kumar'), ('Asha Saravana', 'Mohan'), ('Ashel', 'Dimi'), ('Ashlee', 'Brown'), ('Ashlee', 'Callahan'), ('Ashlee', 'Davis'), ('Ashleigh', 'Barty'), ('Ashleigh', 'De Wet'), ('Ashleigh', 'Dolman'), ('Ashleigh', 'Richardson'), ('Ashlesha', 'Lokhande'), ('Ashley', 'Anderson'), ('Ashley', 'Barron'), ('Ashley', 'Brooks'), ('Ashley', 'Harkleroad'), ('Ashley', 'Joelson'), ('Ashley', 'Keir'), ('Ashley', 'Kratzer'), ('Ashley', 'Kroh'), ('Ashley', 'Krysiak'), ('Ashley', 'Lahey'), ('Ashley', 'Mackey'), ('Ashley', 'Miller'), ('Ashley', 'Murdock'), ('Ashley', 'Nations Raju'), ('Ashley', 'Neumann'), ('Ashley', 'Robards'), ('Ashley', 'Silva'), ('Ashley', 'Sims'), ('Ashley', 'Spicer'), ('Ashley', 'Weinhold'), ('Ashley M', 'Kitchen'), ('Ashling', 'Sumner'), ('Ashmitha', 'Easwaramurthi'), ('Ashvarya', 'Shrivastava'), ('Asia', 'Muhammed'), ('Asimina', 'Kaplani'), ('Asiya', 'Dair'), ('Asja', 'Tankic'), ('Askin', 'Arslan'), ('Asli', 'Kocaoemer'), ('Asli', 'Semizoglu'), ('Asli', 'Turksoy'), ('Asli', 'Yucebilgin'), ('Aslina', 'Chua'), ('Asmaa', 'Salah Hassan'), ('Asmae', 'Benzit'), ('Aspasia', 'Avgeri'), ('Aspasia', 'Sotiriadou'), ('Asri Nursanti', 'Ebo'), ('Assa', 'Berthe'), ('Assel', 'Jumamukhambetova'), ('Assel', 'Tuzelbekova'), ('Assem', 'Myssyr'), ('Assia', 'Halo'), ('Assmae', 'Jabri'), ('Astra', 'Sharma'), ('Astri', 'Purnawati'), ('Astrid', 'Besser'), ('Astrid', 'Leclere'), ('Astrid', 'Parlachy'), ('Astrid', 'Quintero'), ('Astrid', 'Ruhr'), ('Astrid', 'Sunde'), ('Astrid', 'Suurbeck'), ('Astrid', 'Thomsen'), ('Astrid', 'Tixier'), ('Astrid', 'Waernes Garcia'), ('Astrid Maria', 'Gehre Boettner'), ('Astrid Wanja', 'Brune Olsen'), ('Asya', 'Latifoglu'), ('Athalis Dimitra', 'Kratouni'), ('Athena', 'Nathalia'), ('Athina', 'Briegel'), ('Atlanta ', 'Patsali'), ('Atsuko', 'Shima'), ('Atsuko', 'Shintani'), ('Atsumi', 'Dohi'), ('Atsumi', 'Koga'), ('Atsumi', 'Mitsumine'), ('Aude', 'Vermoezen'), ('Audra', 'Brannon'), ('Audra', 'Cohen'), ('Audra', 'Falk'), ('Audra', 'Keller'), ('Audrey', 'Albie'), ('Audrey', 'Banada'), ('Audrey', 'Bergot'), ('Audrey', 'Bois'), ('Audrey', 'Capouet'), ('Audrey', 'Cocuaud'), ('Audrey', 'Dujardin'), ('Audrey', 'Hernandez'), ('Audrey', 'Jumel'), ('Audrey', 'Laib'), ('Audrey', 'Leitz'), ('Audrey', 'Ludwig'), ('Audrey', 'Marquard'), ('Audrey', 'Moronval'), ('Audrey', 'Pierrich'), ('Audrey', 'Robert Bordeleau'), ('Audrey', 'Sidot'), ('Audrey', 'Van Wolde'), ('Audrey', 'Wahl'), ('Audrey', 'Wilmart'), ('Augustina', 'Wibisono'), ('Aulia', 'Nur Srikandhi'), ('Aunchisa', 'Chanta'), ('Aura', 'Gheorge'), ('Aurandrea', 'Narvaez'), ('Aurea', 'Castella'), ('Aurelia', 'Gheorghe'), ('Aurelia', 'Janeczek'), ('Aurelie', 'Bejar'), ('Aurelie', 'Caffa'), ('Aurelie', 'Freysz'), ('Aurelie', 'Vedy'), ('Aurelija', 'Miseviciute'), ('Aurora', 'Ciavarelli'), ('Aurora', 'Davis'), ('Aurora', 'Gima'), ('Aurora', 'Urso'), ('Aurora', 'Zantedeschi'), ('Aurore', 'Desert'), ('Aurore', 'Esteve'), ('Austin', 'Smith'), ('Avel Romaly', 'Coronado'), ('Avelina', 'Sayfetdinova'), ('Avgusta', 'Tsybysheva'), ('Avika', 'Sagwal'), ('Avital', 'Kandelis'), ('Avital', 'Vaysbuch'), ('Avital', 'Vulf'), ('Avni', 'Jain'), ('Avril', 'Look'), ('Avril', 'Martinez'), ('Axana', 'Mareen'), ('Axelle', 'Alquier'), ('Axelle', 'Thomas'), ('Aya', 'Bara'), ('Aya', 'El Akkad'), ('Aya', 'Minokoshi'), ('Aya', 'Oasa'), ('Aya', 'Sato'), ('Aya', 'Tanaka'), ('Ayaka', 'Ito'), ('Ayaka', 'Kanai'), ('Ayaka', 'Maekawa'), ('Ayaka', 'Narita'), ('Ayaka', 'Okuno'), ('Ayaka', 'Ozeki'), ('Ayaka', 'Santo'), ('Ayaka', 'Terashi'), ('Ayako', 'Hayashi'), ('Ayako', 'Hirose'), ('Ayako', 'Isogai'), ('Ayako', 'Noda'), ('Ayako', 'Suzuki'), ('Ayami', 'Akiyama'), ('Ayami', 'Takase'), ('Ayan', 'Broomfield'), ('Ayana', 'Noguchi'), ('Ayana', 'Tajima'), ('Ayane', 'Iwai'), ('Ayane', 'Tachibana'), ('Ayano', 'Honda'), ('Ayano', 'Minami'), ('Ayano', 'Nakamura'), ('Ayano', 'Oishi'), ('Ayano', 'Shimizu'), ('Ayano', 'Sonoda'), ('Ayano', 'Takeuchi'), ('Ayca', 'Gumuscu'), ('Ayelen', 'Quinteros'), ('Ayi', 'Sutarno'), ('Ayla', 'Aksu'), ('Aylen', 'Hubeaut'), ('Aylin', 'Abdioglu'), ('Aymet', 'Uzcategui'), ('Ayna', 'Ereshova'), ('Aynur Cemre', 'Aka'), ('Ayoola', 'Odiah'), ('Ayoola', 'Shelle'), ('Ayram', 'Edery'), ('Ayse Ece', 'Yavuz'), ('Aysenur', 'Durmus'), ('Aysu', 'Cuhaci'), ('Ayu Fani', 'Damayanti'), ('Ayumi', 'Ichikawa'), ('Ayumi', 'Koshiishi'), ('Ayumi', 'Miyamoto'), ('Ayumi', 'Mori'), ('Ayumi', 'Morita'), ('Ayumi', 'Oishi'), ('Ayumi', 'Oka'), ('Ayumi', 'Okuma'), ('Ayumi', 'Yamamoto'), ('Ayushi', 'Sinha'), ('Aza', 'Petrova'), ('Azaliya', 'Badegyeva'), ('Aziza', 'Berriri'), ('Aziza', 'Bhiri'), ('Aziza', 'Butoyi'), ('Azra', 'Hadzic'), ('Azra', 'Resic'), ('Azradeniz', 'Comlek'), ('Azul Agustina', 'Pedemonti'), ('Azusa', 'Konishi'), ('Azza', 'Abbou'), ('Azzurra', 'Fonsmorti'), ('B', 'Dalzell'), ('B', 'Rupp'), ('Babilina', 'Machaidze'), ('Babs', 'Van Kampen'), ('Bahia', 'Mouhtassine'), ('Baijing', 'Lin'), ('Balsen', 'Kaya'), ('Bao Wen', 'Pu'), ('Bao Yi', 'Xu'), ('Bar', 'Shimoni'), ('Barbara', 'Bacic'), ('Barbara', 'Bathory'), ('Barbara', 'Belis'), ('Barbara', 'Bonic'), ('Barbara', 'Brankovska'), ('Barbara', 'Brauchle'), ('Barbara', 'Capellari Abou Haikal'), ('Barbara', 'Castro'), ('Barbara', 'Choon'), ('Barbara', 'Collet'), ('Barbara', 'Costa'), ('Barbara', 'De Wilde'), ('Barbara', 'Dessolis'), ('Barbara', 'Downs'), ('Barbara', 'Ferreira'), ('Barbara', 'Fuzesi'), ('Barbara', 'Galletto'), ('Barbara', 'Garassino'), ('Barbara', 'Gatica'), ('Barbara', 'Gerken'), ('Barbara', 'Griffiths'), ('Barbara', 'Gueno'), ('Barbara', 'Haas'), ('Barbara', 'Hallquist'), ('Barbara', 'Hambridge'), ('Barbara', 'Hawcroft'), ('Barbara', 'Hellwig'), ('Barbara', 'Hoflinger'), ('Barbara', 'Huyskes'), ('Barbara', 'Jordan'), ('Barbara', 'Keller'), ('Barbara', 'Kotelesova'), ('Barbara', 'Kral'), ('Barbara', 'Krzesinska'), ('Barbara', 'Kvelstein'), ('Barbara', 'Lado'), ('Barbara', 'Lemberg'), ('Barbara', 'Lormeau'), ('Barbara', 'Luz'), ('Barbara', 'Maciocha'), ('Barbara', 'Mancera Carrillo'), ('Barbara', 'Montiel'), ('Barbara', 'Mulej'), ('Barbara', 'Murga'), ('Barbara', 'Murphy'), ('Barbara', 'Navarro'), ('Barbara', 'Oddone'), ('Barbara', 'Oliveira'), ('Barbara', 'Olszewska'), ('Barbara', 'Orlai'), ('Barbara', 'Paulus'), ('Barbara', 'Pietrkiewicz'), ('Barbara', 'Pocza'), ('Barbara', 'Polidoro'), ('Barbara', 'Pollet'), ('Barbara', 'Potter'), ('Barbara', 'Privrel'), ('Barbara', 'Quagliardi'), ('Barbara', 'Rajic'), ('Barbara', 'Rico Godino'), ('Barbara', 'Rittner'), ('Barbara', 'Rivera Rivera'), ('Barbara', 'Romano'), ('Barbara', 'Rosenberger'), ('Barbara', 'Rossi'), ('Barbara', 'Rush'), ('Barbara', 'Schett'), ('Barbara', 'Schwartz'), ('Barbara', 'Soares'), ('Barbara', 'Sobaszkiewicz'), ('Barbara', 'Urbanska'), ('Barbara', 'Walsh'), ('Barbara Guadalupe', 'Urrutia'), ('Barbare', 'Eristavi'), ('Barbel', 'Wohlfahrt'), ('Barbi', 'Bramblett'), ('Barbora', 'Bachmanova'), ('Barbora', 'Blahutiakova'), ('Barbora', 'Bozkova'), ('Barbora', 'Kijasova'), ('Barbora', 'Kolackova'), ('Barbora', 'Kollarova'), ('Barbora', 'Kosejkova'), ('Barbora', 'Krejcikova'), ('Barbora', 'Krtickova'), ('Barbora', 'Machovska'), ('Barbora', 'Matusova'), ('Barbora', 'Miklova'), ('Barbora', 'Palcatova'), ('Barbora', 'Ruffini'), ('Barbora', 'Slucikova'), ('Barbora', 'Stefkova'), ('Barbora', 'Stejskalova'), ('Barbora', 'Strnadova'), ('Barbora', 'Sukova'), ('Barbora', 'Trestikova'), ('Barbora', 'Vykydalova'), ('Barbora', 'Zahlavova Strycova'), ('Barbora', 'Zahnova'), ('Barrie', 'Bernstein'), ('Basak', 'Akbas'), ('Basak', 'Eraydin'), ('Bea', 'Bielik'), ('Beata', 'Wajdzik'), ('Beate', 'Giller'), ('Beate', 'Knauber'), ('Beate', 'Reinstadler'), ('Beatrice', 'Abbas'), ('Beatrice', 'Banila'), ('Beatrice', 'Capra'), ('Beatrice', 'Caruso'), ('Beatrice', 'Cedermark'), ('Beatrice', 'Chrystman'), ('Beatrice', 'Guery'), ('Beatrice', 'Gumulya'), ('Beatrice', 'Kight'), ('Beatrice', 'Krauss Granate'), ('Beatrice', 'Lombardo'), ('Beatrice', 'Parolai'), ('Beatrice', 'Reda'), ('Beatrice', 'Spiganti'), ('Beatrice', 'Torelli'), ('Beatrice Shirin', 'Khosravi'), ('Beatris', 'Simion'), ('Beatrix', 'Csordas'), ('Beatrix', 'Klein'), ('Beatriz', 'Abreu'), ('Beatriz', 'Aguilar'), ('Beatriz', 'Andonegui'), ('Beatriz', 'Araujo'), ('Beatriz', 'Becker'), ('Beatriz', 'Belda Mullor'), ('Beatriz', 'Cabrera Rosendo'), ('Beatriz', 'Fernandez'), ('Beatriz', 'Fraga'), ('Beatriz', 'Garcia Vidagany'), ('Beatriz', 'Haddad Maia'), ('Beatriz', 'Juan Miranzo'), ('Beatriz', 'Leon Hernandez'), ('Beatriz', 'Luna'), ('Beatriz', 'Machado Santos'), ('Beatriz', 'Maia'), ('Beatriz', 'Miravete'), ('Beatriz', 'Morales Hernandez'), ('Beatriz', 'Nallar'), ('Beatriz', 'Pellon'), ('Beatriz', 'Pena Lueza'), ('Beatriz', 'Prieto Cabrera'), ('Beatriz', 'Rios'), ('Beatriz', 'Salazar Ruiz'), ('Beatriz', 'Vall Cava De Llan'), ('Beatriz', 'Villaverde'), ('Beatriz Magdalena', 'Flores'), ('Beatriz Maria', 'Martins Cecato'), ('Beatriz Rodrigues', 'Bento'), ('Beatriz Valente', 'De Castro Coelho'), ('Beau', 'Jones'), ('Beauty', 'Macleod'), ('Beauty', 'Oghenekevwe'), ('Becky', 'Bell'), ('Becky', 'Brown'), ('Becky', 'Vest'), ('Begona', 'De Toro Sanz'), ('Begona', 'Garcia Soto'), ('Begonia', 'Erana'), ('Begum', 'Dilek'), ('Beier', 'Ko'), ('Beladora', 'Matallah'), ('Belen', 'Berbel Soriano'), ('Belen', 'Calero Vega'), ('Belen', 'Guajardo'), ('Belen', 'Luduena'), ('Belen', 'Pandre'), ('Belen', 'Perez De Juan Glez'), ('Belen', 'Rivera'), ('Belen', 'Tajmuch'), ('Belfin', 'Sumbul'), ('Belinda', 'Bencic'), ('Belinda', 'Borneo'), ('Belinda', 'Cordwell'), ('Belinda', 'Kelly'), ('Belinda', 'Thompson'), ('Belinda', 'Woolcock'), ('Belkis', 'Rodriguez'), ('Bella', 'Destriana'), ('Belma', 'Beslagic'), ('Benedetta', 'Davato'), ('Benedetta', 'Fasciani'), ('Benedetta', 'Ivaldi'), ('Benedetta', 'Prato'), ('Benedetta', 'Sabatini'), ('Benedicte', 'Vliegen'), ('Benita', 'Milenkiewicz'), ('Benita', 'Senn'), ('Benjamas', 'Sangaram'), ('Bente', 'Kjolstad'), ('Benyapa', 'Phumtip'), ('Berangere', 'Quillot'), ('Berat Sena', 'Dogru'), ('Berengere', 'Karpenschif'), ('Berengere', 'Teix'), ('Berenice', 'Alvarez'), ('Berfu', 'Cengiz'), ('Berit', 'Bjork'), ('Bermet', 'Duvanaeva'), ('Bermet', 'Talantkyzy'), ('Berna', 'Yahe'), ('Bernadetta', 'Birkas'), ('Bernadette', 'Audra'), ('Bernadette', 'Bayani'), ('Bernadette', 'Davy'), ('Bernadette', 'Heavey'), ('Bernadette', 'Randall'), ('Bernarda', 'Pera'), ('Bernice', 'Van De Velde'), ('Bernice', 'Vukovich'), ('Berta', 'Acero Garcia'), ('Berta', 'Bonardi'), ('Berta', 'Morata Flaquer'), ('Bertille', 'Van Marque'), ('Berveine', 'Mohammed'), ('Beryl', 'Jenkins'), ('Besarta', 'Avdullahi'), ('Bess', 'Waldram'), ('Beth', 'Herr'), ('Beth', 'Norton'), ('Bethan', 'Lewis'), ('Bethanie', 'Mattek Sands'), ('Bethany', 'Griffin'), ('Bethzabe', 'Magadan'), ('Beti', 'Sekulovski'), ('Betina', 'Jozami'), ('Betina', 'Tokac'), ('Betona', 'Pellon Fernandez'), ('Betsy', 'Blaney'), ('Betsy', 'Heidenberger'), ('Betsy', 'Miringoff'), ('Betsy', 'Nagelsen'), ('Betsy', 'Somerville'), ('Bettina', 'Auer'), ('Bettina', 'Bunge'), ('Bettina', 'Cremasco'), ('Bettina', 'Diesner'), ('Bettina', 'Fulco Villella'), ('Bettina', 'Gabbe'), ('Bettina', 'Hafner'), ('Bettina', 'Horvath'), ('Bettina', 'Kuznini'), ('Bettina', 'Mittermeier'), ('Bettina', 'Niedhart'), ('Bettina', 'Pirker'), ('Bettina', 'Resch'), ('Bettina', 'Roberts'), ('Betty', 'Dautriat'), ('Betty', 'Pratt'), ('Betty', 'Stove'), ('Betty', 'Tesfu'), ('Betty Ann', 'Dent'), ('Beverley', 'Billington'), ('Beverley', 'Rae'), ('Beverly', 'Bowes Hackney'), ('Beverly', 'Buckley'), ('Beverly', 'Corbie'), ('Beverly', 'Mould'), ('Beyda', 'Baykal'), ('Bharathy', 'Parthasarathy'), ('Bhargavi', 'Kalaga'), ('Bhargavi', 'Nitin Mangudkar'), ('Bhavani', 'Balakumar'), ('Bhavani', 'Ravisankar'), ('Bhavani', 'Tirumurti'), ('Bhavya', 'Ramineni'), ('Bhuvana', 'Kalva'), ('Bi Xia', 'Li'), ('Bianca', 'Aboubakare'), ('Bianca', 'Acquistapace'), ('Bianca', 'Ambros'), ('Bianca', 'Andreescu'), ('Bianca', 'Bevione'), ('Bianca', 'Birkenstock'), ('Bianca', 'Bonotto'), ('Bianca', 'Bostrom'), ('Bianca', 'Botto'), ('Bianca', 'Brasoveanu'), ('Bianca', 'Catay'), ('Bianca', 'Chidrawi'), ('Bianca', 'Cremer'), ('Bianca', 'Dulgheru'), ('Bianca', 'Dumitrascu'), ('Bianca', 'Eichkorn'), ('Bianca', 'Gorbea'), ('Bianca', 'Hincu'), ('Bianca', 'Itner'), ('Bianca', 'Kamper'), ('Bianca', 'Koch'), ('Bianca', 'Moldovan'), ('Bianca', 'Monaco'), ('Bianca', 'Nicolela Susanna'), ('Bianca', 'Nocella'), ('Bianca', 'Ravinis Lombardi'), ('Bianca', 'Salame'), ('Bianca', 'Schlumberger'), ('Bianca', 'Schulz'), ('Bianca', 'Smith'), ('Bianca', 'Sousa'), ('Bianca', 'Spinassi'), ('Bianca', 'Swanepoel'), ('Bianca', 'Tepper'), ('Bianca', 'Turati'), ('Bianca', 'Vitale'), ('Bianca Elena', 'Mihailescu'), ('Bianca Ioana', 'Bonifate'), ('Bianka', 'Bekefi'), ('Bianka', 'Lamade'), ('Bibiana', 'Almeida'), ('Bibiane', 'Schoofs'), ('Bieke', 'Serruys'), ('Biljana', 'Dimovska'), ('Biljana', 'Gajic'), ('Biljana', 'Joketovic'), ('Biljana', 'Kostic'), ('Biljana', 'Milosevska'), ('Biljana', 'Pawlowa Dimitrova'), ('Biljana', 'Trpeska'), ('Billie Jean', 'King'), ('Bilyana', 'Savova'), ('Bilynda', 'Potter'), ('Bin Jie', 'Luo'), ('Binasa', 'Beslagic'), ('Bing Jie', 'Luo'), ('Bintou', 'Barry'), ('Biola', 'Akewula'), ('Birdem', 'Oz'), ('Birgit', 'Arming'), ('Birgit', 'Burk'), ('Birgit', 'Dopfer'), ('Birgit', 'Pirker'), ('Birgit', 'Riederer'), ('Birgit', 'Ritschka'), ('Birgitta', 'Lindstrom'), ('Birgitte', 'Hermansen'), ('Birte', 'Langenstein'), ('Birthe', 'Glatzel'), ('Bistra', 'Otashliyska'), ('Bit Na', 'Lee'), ('Bitna', 'Lee'), ('Bixia', 'Li'), ('Blaga', 'Delic'), ('Blair', 'Di Sesa'), ('Blair', 'Shankle'), ('Blakeley', 'Griffith'), ('Blanca', 'Borbolla'), ('Blanca', 'Garcia'), ('Blanca', 'Guallart Lain'), ('Blanca', 'Martinez Perez'), ('Blanca', 'Puig Caballero'), ('Blanca Elena', 'Butnaru'), ('Blanka', 'Kumbarova'), ('Blanka', 'Szavay'), ('Blessing', 'Anuna'), ('Blessing', 'Samuel'), ('Blotza', 'Gutierrez'), ('Bo', 'Verhulsdonk'), ('Bo Ra', 'Choi'), ('Bo Ra', 'Kwak'), ('Bo Ram', 'Kim'), ('Boba', 'Kotlica'), ('Boglarka', 'Berecz'), ('Bogna', 'Nowicka'), ('Bojana', 'Bobusic'), ('Bojana', 'Borovnica'), ('Bojana', 'Cecez'), ('Bojana', 'Damnjanovic'), ('Bojana', 'Jovanovic'), ('Bojana', 'Jovanovski'), ('Bojana', 'Marinkovic'), ('Bojana', 'Markovic'), ('Bojana', 'Minic'), ('Bojana', 'Petrovic'), ('Bojana', 'Vuksan'), ('Bolan', 'Tarkoe'), ('Bolzan', 'Ana Paula'), ('Bong Soon', 'Choi'), ('Bonnie', 'Baird'), ('Bonnie', 'Bleecker'), ('Bonnie', 'Gadusek'), ('Bontshetse', 'Seleka'), ('Borislava', 'Botusharova'), ('Borka', 'Majstorovic'), ('Bouwiena', 'Boer'), ('Boyan', 'Wang'), ('Boyana', 'Perich'), ('Bracha', 'Weisman'), ('Brandi', 'Freudenberg'), ('Brandis', 'Braverman'), ('Brandy', 'Mina'), ('Branislava', 'Ivanovic'), ('Branka', 'Bojovic'), ('Branka', 'Savic'), ('Brankica', 'Stankovic'), ('Breana', 'Stampfli'), ('Breanna', 'Tilly'), ('Breanna Alexa Bachini', 'Bachini'), ('Breaunna', 'Addison'), ('Breda', 'Kovac'), ('Bree', 'Calderwood'), ('Brenda', 'Catton'), ('Brenda', 'Coassolo'), ('Brenda', 'Dale'), ('Brenda', 'Dart'), ('Brenda', 'Garcia'), ('Brenda', 'Kirk'), ('Brenda', 'Martinez'), ('Brenda', 'Moreira'), ('Brenda', 'Njuki'), ('Brenda', 'Nunns'), ('Brenda', 'Perry'), ('Brenda', 'Remilton'), ('Brenda', 'Rique'), ('Brenda', 'Rojas'), ('Brenda', 'Santos'), ('Brenda', 'Schultz Mccarthy'), ('Brenda', 'Thomas'), ('Brenda Sarahi', 'Baez'), ('Bretchtje', 'Bruls'), ('Briana', 'Harris'), ('Brianna', 'Lashway'), ('Brianna', 'Morgan'), ('Brianna', 'Thompson'), ('Brianna', 'Williams'), ('Briar', 'Preston'), ('Bridget', 'Chidi'), ('Bridget', 'Healy'), ('Bridget', 'Liddell'), ('Bridget', 'Merrick'), ('Bridget', 'Mikysa'), ('Brie', 'Rippner'), ('Brie', 'Whitehead'), ('Brienne', 'Minor'), ('Brigette', 'Cuypers'), ('Briggitt', 'Marcovich'), ('Brigit', 'Folland'), ('Brigith Alejandra', 'Teran'), ('Brigitte', 'Beck'), ('Brigitte', 'Loogen'), ('Brigitte', 'Lorang'), ('Brigitte', 'Simon Glinel'), ('Brina', 'Spegel'), ('Brindtha', 'Ramasamy'), ('Brintney', 'Larson'), ('Britt', 'Geukens'), ('Britt', 'Schreuder'), ('Britta', 'Mohlmann'), ('Britta', 'Schneider'), ('Brittany', 'Augustine'), ('Brittany', 'Baldy'), ('Brittany', 'Blalock'), ('Brittany', 'Brewster'), ('Brittany', 'Brown'), ('Brittany', 'Collens'), ('Brittany', 'Dubins'), ('Brittany', 'Lashway'), ('Brittany', 'Sheed'), ('Brittany', 'Teei'), ('Brittany', 'Wowchuk'), ('Bronte', 'Murgett'), ('Bronwyn', 'Davidson'), ('Bronwyn', 'Williams'), ('Brook', 'Connelly'), ('Brooke', 'Austin'), ('Brooke', 'Bolender'), ('Brooke', 'Broda'), ('Brooke', 'Harding'), ('Brooke', 'Lashway'), ('Brooke', 'Rischbieth'), ('Brooke', 'Rogers'), ('Brooke', 'Siebel'), ('Brooke', 'Skeen'), ('Brooke', 'Taylor'), ('Brooke', 'Winley'), ('Brooke Lindsey', 'Hughes'), ('Bruna', 'Colosio'), ('Bruna', 'Cunha'), ('Bruna', 'Discordia'), ('Bruna', 'Gelbecke'), ('Bruna', 'Macedo Soares'), ('Bruna', 'Magalhaes'), ('Bruna', 'Pacheco Chaves'), ('Bruna', 'Paes'), ('Bruna', 'Ponce'), ('Bryanne', 'Stewart'), ('Brynn', 'Boren'), ('Bryony', 'Hunter'), ('Bucke Enda', 'Yavuz'), ('Buket', 'Dogan'), ('Bunny', 'Bruning'), ('Bunny', 'Smith'), ('Bunyawi', 'Thamchaiwat'), ('Burcak', 'Ekin Yildiztekin'), ('Burce', 'Kurkan'), ('Burcu', 'Tari'), ('Buse', 'Cehreli'), ('Busra', 'Demirtas'), ('Busra', 'Kayrun'), ('Busrin', 'Boontemleaw'), ('C', 'Crawford'), ('C', 'Mcquaide'), ('C C', 'Sardinha'), ('Cacilia', 'Charbonnier'), ('Cackie', 'Germic'), ('Cagla', 'Azgari'), ('Cagla', 'Badem'), ('Cagla', 'Buyukakcay'), ('Cagla', 'Urcu'), ('Caijsa Wilda', 'Hennemann'), ('Caitlin', 'Bernard'), ('Caitlin', 'Collins'), ('Caitlin', 'Gordon'), ('Caitlin', 'Herb'), ('Caitlin', 'Mcgraw'), ('Caitlin', 'Steel'), ('Caitlin', 'Ward'), ('Caitlin', 'Whoriskey'), ('Caitlin Paige', 'Hindmarsh'), ('Caitlyn', 'Baines'), ('Caitlyn', 'Williams'), ('Caitriona', 'Ruane'), ('Callie', 'Craig'), ('Callie', 'Creighton'), ('Camelia', 'Abdellah'), ('Camelia', 'Todorova'), ('Camelia Elena', 'Hristea'), ('Cameron', 'Benjamin'), ('Cameron', 'Ellis'), ('Cameron', 'Hubbs'), ('Cameron', 'Morra'), ('Cami', 'Stewart'), ('Camila', 'Acuna'), ('Camila', 'Aguirri'), ('Camila', 'Andolfato'), ('Camila', 'Andrade'), ('Camila', 'Basto'), ('Camila', 'Belassi'), ('Camila', 'Bernal'), ('Camila', 'Blanes'), ('Camila', 'Deluchi'), ('Camila', 'Franco'), ('Camila', 'Fuentes'), ('Camila', 'Giangreco Campiz'), ('Camila', 'Gil'), ('Camila', 'Giorgi'), ('Camila', 'Millan Santacruz'), ('Camila', 'Munoz Quintanilla'), ('Camila', 'Pacheco'), ('Camila', 'Quesada'), ('Camila', 'Ramazzini'), ('Camila', 'Ramos'), ('Camila', 'Rebelo Felizzola'), ('Camila', 'Recalde'), ('Camila', 'Romero'), ('Camila', 'Sagae'), ('Camila', 'San Martin'), ('Camila', 'Silva'), ('Camila', 'Tobar'), ('Camila', 'Tumosa'), ('Camila', 'Valencia'), ('Camila', 'Vargas Gomez'), ('Camila', 'Wesbrooks'), ('Camila Andrea', 'Roca'), ('Camila Andrea', 'Velasquez Moreno'), ('Camila Magali', 'Romero'), ('Camila Vital', 'De Castro'), ('Camilia', 'Benabdeljalil'), ('Camilla', 'Abbate'), ('Camilla', 'Boniek'), ('Camilla', 'Bortolon'), ('Camilla', 'Ceppellini'), ('Camilla', 'Ciaccia'), ('Camilla', 'Diez'), ('Camilla', 'Fabbri'), ('Camilla', 'Franco'), ('Camilla', 'Hsu'), ('Camilla', 'Kremer'), ('Camilla', 'Littlewood'), ('Camilla', 'Lundberg'), ('Camilla', 'Margaroli'), ('Camilla', 'Persson'), ('Camilla', 'Priuli'), ('Camilla', 'Rosatello'), ('Camilla', 'Scala'), ('Camille', 'Baldrich'), ('Camille', 'Benjamin'), ('Camille', 'Cheli'), ('Camille', 'Corenthy'), ('Camille', 'Descamps'), ('Camille', 'Dubois'), ('Camille', 'Gely'), ('Camille', 'Giacalone'), ('Camille', 'Goodman'), ('Camille', 'Kirket'), ('Camille', 'Lalou'), ('Camille', 'Maisonnave'), ('Camille', 'Mignac Haus'), ('Camille', 'Pin'), ('Camille', 'Sapene'), ('Camille', 'Sesanker'), ('Camille', 'Sireix'), ('Camille', 'Verden Anderson'), ('Camille', 'Walter'), ('Cammie', 'Gray'), ('Cammy', 'Foley'), ('Cammy', 'Macgregor'), ('Candace Olivia', 'Pedro'), ('Candela', 'Bugnon'), ('Candela', 'Munoz Giron'), ('Candela', 'Novoa'), ('Candelaria', 'Rizzuto'), ('Candelaria', 'Sedano Acosta'), ('Candice', 'De La Torre'), ('Candice', 'Fuchs'), ('Candice', 'Laurent'), ('Candice', 'Meyer'), ('Candice', 'Paya'), ('Candida', 'Beaumont'), ('Candida', 'Reid'), ('Candy', 'Reynolds'), ('Canna', 'Furuta'), ('Capucine', 'Rousseau'), ('Cara', 'Abe'), ('Cara', 'Black'), ('Cara', 'Robinette'), ('Caragh', 'Courtney'), ('Caren', 'Schindler'), ('Carien', 'Venter'), ('Carin', 'Anderholm'), ('Carin', 'Bakkum'), ('Carina', 'Avram'), ('Carina', 'Bjornstrom'), ('Carina', 'Hirsch'), ('Carina', 'Kaempfer'), ('Carina', 'Karlsson'), ('Carina', 'Litfin'), ('Carina', 'Lopez'), ('Carina', 'Paulitsch'), ('Carina', 'Weisser'), ('Carina', 'Witthoeft'), ('Carine', 'Bornu'), ('Carine', 'Maisonnave'), ('Carine', 'Vermeulen'), ('Carissa', 'Aboubakare'), ('Carita', 'Moolman'), ('Carla', 'Andrade'), ('Carla', 'Arguelles'), ('Carla', 'Barciela Rodriguez'), ('Carla', 'Bastos'), ('Carla', 'Bazzon'), ('Carla', 'Bell'), ('Carla', 'Beltrami'), ('Carla', 'Bruno'), ('Carla', 'Bruzzesi Avella'), ('Carla', 'Caetano'), ('Carla', 'Cerdan Vives'), ('Carla', 'Forte'), ('Carla', 'Genovese'), ('Carla', 'Georgescu'), ('Carla', 'Girbau Romero'), ('Carla', 'Guarino De Galeazzi'), ('Carla', 'Hassaine'), ('Carla', 'Jimenez'), ('Carla', 'Lindlar'), ('Carla', 'Lorenzo Jodar'), ('Carla', 'Lucero'), ('Carla', 'Manzi'), ('Carla', 'Mei'), ('Carla', 'Mocete Talamantes'), ('Carla', 'Murguia'), ('Carla', 'Nava'), ('Carla', 'Prieto'), ('Carla', 'Rodriguez'), ('Carla', 'Roset Franco'), ('Carla', 'Santini'), ('Carla', 'Soto Villalobos'), ('Carla', 'Suarez Navarro'), ('Carla', 'Tiene'), ('Carla', 'Touly'), ('Carla', 'Tur Mari'), ('Carla', 'Venticinque Torres'), ('Carla', 'Zabaleta'), ('Carla Lorena', 'Martinez'), ('Carlee', 'Rizzolo'), ('Carlijn', 'Buis'), ('Carling', 'Bassett Seguso'), ('Carlista', 'Mohammed'), ('Carlota', 'Calve Munoz'), ('Carlota', 'Cartes Andres'), ('Carlota', 'Martin Santana'), ('Carlota', 'Molina Megias'), ('Carlota', 'Plantier Santos'), ('Carlota', 'Schwartz Caballe'), ('Carlotta', 'Campus'), ('Carlotta', 'Cima'), ('Carlotta', 'Lehner'), ('Carlotta', 'Orlando'), ('Carlotta', 'Ripa'), ('Carlotta', 'Romito'), ('Carlotta', 'Sartori'), ('Carlotta', 'Stasi'), ('Carlotta', 'Svaluto'), ('Carly', 'Gullickson'), ('Carly', 'Homewood'), ('Carly', 'Petit'), ('Carmel', 'Meachen'), ('Carmela', 'Carro'), ('Carmela', 'Vitali'), ('Carmen', 'Aizpurua Bernabe'), ('Carmen', 'Arredondo'), ('Carmen', 'Blanco'), ('Carmen', 'Blasco Robaina'), ('Carmen', 'Gajo'), ('Carmen', 'Gajo Torrell'), ('Carmen', 'Ibarra'), ('Carmen', 'Klaschka'), ('Carmen', 'Linder'), ('Carmen', 'Lopez Blanco'), ('Carmen', 'Lopez Rueda'), ('Carmen', 'Lopez Sanchez'), ('Carmen', 'Maas'), ('Carmen', 'Madden'), ('Carmen', 'Mandarino'), ('Carmen', 'Marquez'), ('Carmen', 'Perea Alcala'), ('Carmen', 'Pestano Hernandez'), ('Carmen', 'Pinto'), ('Carmen', 'Sandor'), ('Carmen', 'Schauer'), ('Carmen', 'Schultheiss'), ('Carmen', 'Smolka'), ('Carmen', 'Torres'), ('Carmen Maria', 'Ortiz Law'), ('Carmen Raluca', 'Tibuleac'), ('Carmen Roxana', 'Manu'), ('Carmencita', 'De La Rosa'), ('Carmene', 'Dotto'), ('Carmina', 'Giraldo'), ('Carol', 'Aucamp'), ('Carol', 'Augustine Benito'), ('Carol', 'Baily'), ('Carol', 'Bertrand'), ('Carol', 'Cassar Torreggiani'), ('Carol', 'Christian'), ('Carol', 'Daniels'), ('Carol', 'Draper'), ('Carol', 'Fernandez'), ('Carol', 'Finke'), ('Carol', 'Hunter'), ('Carol', 'Lombardino Petrocinio'), ('Carol', 'Neeld Lang'), ('Carol', 'Plakk'), ('Carol', 'Watson'), ('Carol', 'Zeeman'), ('Carol', 'Zhao'), ('Carol Ann', 'Kalogeropoulos'), ('Carol Yubitza', 'Arnez  Mercado'), ('Carola', 'Gonzalez King Garibo'), ('Carole', 'Graebner'), ('Carole', 'Herrick'), ('Carole', 'Lucarelli'), ('Carole', 'Luccarelli'), ('Carole', 'Soubis'), ('Carolin', 'Daniels'), ('Carolin', 'Habich'), ('Carolin', 'Jung'), ('Carolin', 'Kottutz'), ('Carolin', 'Nonnenmacher'), ('Carolin', 'Schmidt'), ('Carolin', 'Weikard'), ('Carolina', 'Abello'), ('Carolina', 'Aravena'), ('Carolina', 'Ardila Cuervo'), ('Carolina', 'Aristimuno'), ('Carolina', 'Azcui'), ('Carolina', 'Barboza'), ('Carolina', 'Barrionuevo'), ('Carolina', 'Barsante'), ('Carolina', 'Betancourt'), ('Carolina', 'Bokenhans'), ('Carolina', 'Boscardin'), ('Carolina', 'Bulatovic'), ('Carolina', 'Camargo De Luca'), ('Carolina', 'Castro'), ('Carolina', 'Cerowska'), ('Carolina', 'Conte'), ('Carolina', 'Costamagna'), ('Carolina', 'Cuevas Bucio'), ('Carolina', 'De Los Santos'), ('Carolina', 'Delgado'), ('Carolina', 'Escamilla'), ('Carolina', 'Espinoza'), ('Carolina', 'Franco'), ('Carolina', 'Gago Fuentes'), ('Carolina', 'Garcia'), ('Carolina', 'Guilliano'), ('Carolina', 'Gutierrez'), ('Carolina', 'Kanacri'), ('Carolina', 'Kubicska'), ('Carolina', 'Larco'), ('Carolina', 'Likhatcheva'), ('Carolina', 'Lillo Carrazon'), ('Carolina', 'Maso'), ('Carolina', 'Maurer'), ('Carolina', 'Mayorga'), ('Carolina', 'Melicoff'), ('Carolina', 'Molins'), ('Carolina', 'Monteiro Ribeiro De Lima'), ('Carolina', 'Ojeda'), ('Carolina', 'Olmo'), ('Carolina', 'Orsi'), ('Carolina', 'Petrelli'), ('Carolina', 'Pillot'), ('Carolina', 'Pimenta'), ('Carolina', 'Prats Millan'), ('Carolina', 'Rodriguez'), ('Carolina', 'Rodriguez Magdalena'), ('Carolina', 'Rojas Jimenez'), ('Carolina', 'Sa'), ('Carolina', 'Sadaj'), ('Carolina', 'Salge'), ('Carolina', 'Sanabria'), ('Carolina', 'Seixas'), ('Carolina', 'Somalo'), ('Carolina', 'Torres'), ('Carolina', 'Torrico'), ('Carolina', 'Uriarte'), ('Carolina', 'Velazquez'), ('Carolina', 'Viteri'), ('Carolina', 'Zeballos'), ('Carolina Magalhaes', 'Malheiros'), ('Carolina Meligeni Rodrigues', 'Alves'), ('Caroline', 'Bailly'), ('Caroline', 'Beaulieu'), ('Caroline', 'Bhaguandas'), ('Caroline', 'Billingham'), ('Caroline', 'Bodart'), ('Caroline', 'Brinson'), ('Caroline', 'Carpentier'), ('Caroline', 'Christian'), ('Caroline', 'Cooper'), ('Caroline', 'Cordat Auclair'), ('Caroline', 'Courmont'), ('Caroline', 'Daxhelet'), ('Caroline', 'Dedering'), ('Caroline', 'Delisle'), ('Caroline', 'Dhenin'), ('Caroline', 'Dolehide'), ('Caroline', 'Doyle'), ('Caroline', 'Dunleavy'), ('Caroline', 'Forstner'), ('Caroline', 'Franch'), ('Caroline', 'Furlaneto'), ('Caroline', 'Garcia'), ('Caroline', 'Germar'), ('Caroline', 'Gherega'), ('Caroline', 'Gideskog'), ('Caroline', 'Hagey'), ('Caroline', 'Haider'), ('Caroline', 'Hall'), ('Caroline', 'Hammond'), ('Caroline', 'Hartmann'), ('Caroline', 'Herbert'), ('Caroline', 'Hitimana'), ('Caroline', 'Hora'), ('Caroline', 'Huberty'), ('Caroline', 'Hunt'), ('Caroline', 'Ilowska'), ('Caroline', 'Kallberg'), ('Caroline', 'Korsawe'), ('Caroline', 'Kuhlman'), ('Caroline', 'Lagedamont'), ('Caroline', 'Lampl'), ('Caroline', 'Lane'), ('Caroline', 'Langsford'), ('Caroline', 'Larsson'), ('Caroline', 'Leens'), ('Caroline', 'Lilley'), ('Caroline', 'Maes'), ('Caroline', 'Magnusson'), ('Caroline', 'Marchetti'), ('Caroline', 'Marret'), ('Caroline', 'Martin'), ('Caroline', 'Neves'), ('Caroline', 'Nothnagel'), ('Caroline', 'Oduor'), ('Caroline', 'Price'), ('Caroline', 'Raba'), ('Caroline', 'Rohde Moe'), ('Caroline', 'Romeo'), ('Caroline', 'Rossel'), ('Caroline', 'Sautter'), ('Caroline', 'Schneider'), ('Caroline', 'Schuck'), ('Caroline', 'Skrzypczyk'), ('Caroline', 'Stassen'), ('Caroline', 'Stevens'), ('Caroline', 'Stoll'), ('Caroline', 'Szabo'), ('Caroline', 'Tidemand'), ('Caroline', 'Toyre'), ('Caroline', 'Uebelhoer'), ('Caroline', 'Van De Wijgaart'), ('Caroline', 'Van Renterghem'), ('Caroline', 'Vis'), ('Caroline', 'Wegner'), ('Caroline', 'Woerle'), ('Caroline', 'Wozniacki'), ('Caroline', 'Wuillot'), ('Caroline', 'Young'), ('Caroline Ann', 'Basu'), ('Caroline B', 'Dailey'), ('Caroline Betzave', 'Lojan Cruz'), ('Carolyn', 'Mcgann'), ('Carolyn', 'Mcveigh'), ('Carolyn', 'Monson'), ('Carolyn', 'Xie'), ('Carolyn Ann', 'Lim Hui'), ('Carrie', 'Cunningham'), ('Carrie', 'Fleming'), ('Carrie', 'Meyer'), ('Carrie Lynn', 'Cohen'), ('Carson', 'Branstine'), ('Caryn', 'Copeland Wilson'), ('Caryn', 'Moss'), ('Caryssa L', 'Peretz'), ('Casandra', 'Metzer'), ('Casey', 'Cross'), ('Casey', 'Dellacqua'), ('Casey', 'Robinson'), ('Cassandra', 'Barr'), ('Cassandra', 'Chan'), ('Cassandra', 'Godfrey'), ('Cassandra', 'Herzberg'), ('Cassandra', 'Swanepoel'), ('Cassandre', 'Thebault'), ('Cassi', 'Fabiani'), ('Cassia', 'Sigle'), ('Cassidy', 'Crawford'), ('Cassidy', 'Spearman'), ('Cassie', 'Chung'), ('Cassie', 'Mercer'), ('Cassie', 'Pough'), ('Cassy', 'Fabiani'), ('Catalina', 'Acosta'), ('Catalina', 'Angeleri'), ('Catalina', 'Arancibia'), ('Catalina', 'Bloch'), ('Catalina', 'Castano'), ('Catalina', 'Cristea'), ('Catalina', 'Cruz Gomez'), ('Catalina', 'Diaz'), ('Catalina', 'Isaza'), ('Catalina', 'Lopez'), ('Catalina', 'Martinez'), ('Catalina', 'Maya'), ('Catalina', 'Medici'), ('Catalina', 'Obrecht'), ('Catalina', 'Paz'), ('Catalina', 'Pella'), ('Catalina', 'Ramirez'), ('Catalina', 'Ronco'), ('Catalina', 'Ucros'), ('Catalina', 'Vigener'), ('Catalina', 'Villegas Garcia'), ('Catalina', 'Vives'), ('Catalina Paz', 'Arce Riquelme'), ('Catarina', 'Bernstein'), ('Catarina', 'Ferreira'), ('Catarina', 'Lindqvist Ryan'), ('Catarina', 'Morais'), ('Catarina', 'Muller'), ('Catarina Castro', 'Cerqueira'), ('Caterina', 'Brunamonti'), ('Caterina', 'Cerquaglia'), ('Caterina', 'Ghedin'), ('Caterina', 'Greco'), ('Caterina', 'Lepore Palmisano'), ('Caterina', 'Marusic'), ('Caterina', 'Nozzoli'), ('Catherine', 'Alain'), ('Catherine', 'Alzate'), ('Catherine', 'Barclay'), ('Catherine', 'Berry'), ('Catherine', 'Bonnet'), ('Catherine', 'Campbell'), ('Catherine', 'Chantraine'), ('Catherine', 'Chevalier'), ('Catherine', 'De Lorme'), ('Catherine', 'Fall'), ('Catherine', 'Grotz'), ('Catherine', 'Gunn'), ('Catherine', 'Harrison'), ('Catherine', 'Henuzet'), ('Catherine', 'Hortala'), ('Catherine', 'Leduc'), ('Catherine', 'Mothes Jobkel'), ('Catherine', 'Newman'), ('Catherine', 'Odea'), ('Catherine', 'Parenteau St Antoine'), ('Catherine', 'Roche'), ('Catherine', 'Shulman'), ('Catherine', 'Suire'), ('Catherine', 'Tanvier'), ('Catherine', 'Turinsky'), ('Catherine', 'Valantin'), ('Catherine Cartan', 'Bellis'), ('Catherine R', 'Isip'), ('Cathleen', 'Farrell'), ('Cathrin', 'Caspary'), ('Cathrine', 'Instebo'), ('Cathy', 'Beene'), ('Cathy', 'Canuti'), ('Cathy', 'Caverzasio'), ('Cathy', 'Drury'), ('Cathy', 'Fink'), ('Cathy', 'Griffiths'), ('Catia', 'Rodrigues'), ('Catiana', 'Kaercher'), ('Catrin', 'Deck'), ('Catrin', 'Jexell'), ('Catrin', 'Levers'), ('Catrin', 'Mueller'), ('Catrin', 'Muller'), ('Catrina', 'Thompson'), ('Catrine', 'Landstrom'), ('Catriona', 'Mccarthy'), ('Catriona', 'Stewart'), ('Cattaleeya', 'Wisesrat'), ('Caty', 'Mcnally'), ('Caty', 'Santos'), ('Cayetana', 'Barbed Isusi'), ('Cayla', 'Cross'), ('Caylan', 'Leslie'), ('Ceara', 'Oneill'), ('Cecile', 'Baijot'), ('Cecile', 'Bardoux'), ('Cecile', 'Bourdais'), ('Cecile', 'De Winne'), ('Cecile', 'Dorey'), ('Cecile', 'Leclere'), ('Cecilia', 'Ampuero'), ('Cecilia', 'Bahloul'), ('Cecilia', 'Barbat'), ('Cecilia', 'Bargagni'), ('Cecilia', 'Barrionuevo'), ('Cecilia', 'Cardenas'), ('Cecilia', 'Costa Melgar'), ('Cecilia', 'Crevani'), ('Cecilia', 'Dahlman'), ('Cecilia', 'Engback'), ('Cecilia', 'Estlander'), ('Cecilia', 'Fernandez Parker'), ('Cecilia', 'Gratian'), ('Cecilia', 'Guillenea'), ('Cecilia', 'Helland'), ('Cecilia', 'Hincapie'), ('Cecilia', 'Lainez'), ('Cecilia', 'Martinez'), ('Cecilia', 'Mercier'), ('Cecilia', 'Ortiz'), ('Cecilia', 'Pattacini'), ('Cecilia', 'Perez'), ('Cecilia', 'Poveda'), ('Cecilia', 'Quarracino'), ('Cecilia', 'Rosado'), ('Cecilia', 'Simon'), ('Cecilia', 'Varela'), ('Cecilia', 'Wilander'), ('Cecilia Maria', 'Barbiero'), ('Cecilie Lundgaard', 'Melsted'), ('Cecille', 'Calmette'), ('Ceire', 'Mullins'), ('Celena', 'Mccoury'), ('Celeste', 'Contin'), ('Celeste', 'Frey'), ('Celia', 'Cervino Ruiz'), ('Celia', 'Durkin'), ('Celia', 'Gil Mateo Sasieta'), ('Celia', 'Sutton'), ('Celina', 'Bester'), ('Celina', 'Goetti'), ('Celina', 'Grissi'), ('Celina', 'Grondin'), ('Celine', 'Bannmeyer'), ('Celine', 'Beermann'), ('Celine', 'Beigbeder'), ('Celine', 'Cattaneo'), ('Celine', 'Cohen'), ('Celine', 'El Ghali'), ('Celine', 'Francois'), ('Celine', 'Fritsch'), ('Celine', 'Ghesquiere'), ('Celine', 'Kern'), ('Celine', 'Menain'), ('Celine', 'Parun'), ('Celine', 'Regnier'), ('Celine', 'Rolly'), ('Celine', 'Schepers'), ('Celine', 'Vaure'), ('Cemre', 'Anil'), ('Ceyda', 'Keyman'), ('Ceylan', 'Engin'), ('Ceylan', 'Konuk'), ('Ceylin', 'Gunay'), ('Chaimae', 'Roudami'), ('Chalada', 'Wattana'), ('Chalena', 'Scholl'), ('Chamsi', 'Filali'), ('Chan', 'Zhang'), ('Chanda', 'Rubin'), ('Chandra', 'Capozzi'), ('Chane', 'Hines'), ('Chanel', 'Glasper'), ('Chanel', 'Janssen'), ('Chanel', 'Simmonds'), ('Chanelle', 'Kruger'), ('Chanelle', 'Scheepers'), ('Chanelle', 'Van Nguyen'), ('Chang', 'Liu'), ('Chang', 'Xu'), ('Chanikarn', 'Silakul'), ('Chanrisa', 'Rareang'), ('Chantal', 'Beetham'), ('Chantal', 'Brutschin'), ('Chantal', 'Coombs'), ('Chantal', 'Langanay'), ('Chantal', 'Martinez Blanco'), ('Chantal', 'Puget'), ('Chantal', 'Reuter'), ('Chantal', 'Sauvant'), ('Chantal', 'Skamlova'), ('Chantel', 'Skulskyj'), ('Chantelle', 'Rigozzi'), ('Chantelle', 'Simpson'), ('Chaoyi', 'Chen'), ('Charise', 'Godoy'), ('Charisma', 'Billings'), ('Charitomeni', 'Matoula'), ('Charity', 'Johns'), ('Charleen', 'Hillebrand'), ('Charlene', 'Favier'), ('Charlene', 'Monterrain'), ('Charlene', 'Mueller'), ('Charlene', 'Seateun'), ('Charlene', 'Tsangamwe'), ('Charlene', 'Vanneste'), ('Charline', 'Braidy'), ('Charlotta', 'Aronsson'), ('Charlotta', 'Larsson'), ('Charlotte', 'Aagaard'), ('Charlotte', 'Bossy'), ('Charlotte', 'Douwma'), ('Charlotte', 'Fabricius'), ('Charlotte', 'Feasby'), ('Charlotte', 'Klasen'), ('Charlotte', 'Koning'), ('Charlotte', 'Laevens'), ('Charlotte', 'Martin'), ('Charlotte', 'Pearce'), ('Charlotte', 'Petrick'), ('Charlotte', 'Phillips'), ('Charlotte', 'Pires'), ('Charlotte', 'Robillard Millette'), ('Charlotte', 'Rodier'), ('Charlotte', 'Roemer'), ('Charlotte', 'Ruitenberg'), ('Charlotte', 'Sikorra'), ('Charlotte', 'Smith'), ('Charlotte', 'Soubrie'), ('Charlotte', 'Swaans'), ('Charlotte', 'Van Der Meij'), ('Charlotte', 'Villeminot'), ('Charlotte', 'Wallace'), ('Charlotte', 'Wellem'), ('Charlotte', 'Windley'), ('Charmaine Shi Yi', 'Seah'), ('Charo', 'Bintureira'), ('Chatchaya', 'Sakchatchawan'), ('Chatmanee', 'Jankiaw'), ('Chattida', 'Thimjapo'), ('Chayenne', 'Ewijk'), ('Cheah Sui', 'Kim'), ('Cheli', 'Bargil'), ('Chelsea', 'Jones'), ('Chelsea', 'Kung'), ('Chelsea', 'Orr'), ('Chelsea', 'Preeg'), ('Chelsea', 'Te Tai'), ('Chelsea', 'Vanhoutte'), ('Chelsea May', 'Samways'), ('Chelsey', 'Gullickson'), ('Chelsie Marie', 'Yacks'), ('Chen', 'Astrogo'), ('Chen', 'Li'), ('Chen', 'Liang'), ('Chen', 'Shen'), ('Chen', 'Wang'), ('Chen Chen', 'Gao'), ('Chen Lu', 'Wu'), ('Chen Yee', 'Liaw'), ('Chenchen', 'Feng'), ('Cheng Jie', 'Lu'), ('Cheng Ling', 'Huang'), ('Chengyiyi', 'Yuan'), ('Cheree', 'Walker'), ('Cherise', 'Slocombe'), ('Chern Yi', 'Chiew'), ('Cherry', 'Kim'), ('Cheryl', 'Germaine'), ('Cheryl', 'Jones'), ('Cheryl', 'Lewis'), ('Cheryl', 'Norquay'), ('Cheyenne', 'Biancheri'), ('Chi Chi', 'Scholl'), ('Chi Fan', 'Liu'), ('Chia Hsien', 'Yang'), ('Chia Hsuan', 'Fu'), ('Chia Hui', 'Feng'), ('Chia Jung', 'Chuang'), ('Chia Li', 'Chen'), ('Chia Yi', 'Wu'), ('Chiaki', 'Matsumoto'), ('Chiaki', 'Nakajima'), ('Chiaki', 'Okadaue'), ('Chiao Fang', 'Lo'), ('Chiara', 'Arcangeli'), ('Chiara', 'Basso Basset'), ('Chiara', 'Carboni'), ('Chiara', 'Catini'), ('Chiara', 'Dal Bon'), ('Chiara', 'De Vito'), ('Chiara', 'Fermi'), ('Chiara', 'Frapolli'), ('Chiara', 'Gatto'), ('Chiara', 'Giaquinta'), ('Chiara', 'Gonnelli'), ('Chiara', 'Grimm'), ('Chiara', 'Icardi'), ('Chiara', 'Lommer'), ('Chiara', 'Lucacchioni'), ('Chiara', 'Marraghini'), ('Chiara', 'Mendo'), ('Chiara', 'Merico'), ('Chiara', 'Mossi'), ('Chiara', 'Pappacena'), ('Chiara', 'Pascale'), ('Chiara', 'Petrazzuolo'), ('Chiara', 'Pusceddu'), ('Chiara', 'Quattrone'), ('Chiara', 'Rebecchi'), ('Chiara', 'Rinaldi'), ('Chiara', 'Trovi'), ('Chiara', 'Volejnicek'), ('Chiari', 'Aragaki'), ('Chie', 'Hayasaka'), ('Chie', 'Kudo'), ('Chie', 'Nagano'), ('Chieh Ju', 'Wang'), ('Chieh Yu', 'Hsu'), ('Chih Hsien', 'Chu'), ('Chihiro', 'Matsumoto'), ('Chihiro', 'Muramatsu'), ('Chihiro', 'Nunome'), ('Chihiro', 'Oasa'), ('Chihiro', 'Takayama'), ('Chihiro', 'Tan'), ('Chiho', 'Kobayashi'), ('Chika', 'Terasawa'), ('Chikako', 'Murakami'), ('Chin Bee', 'Khoo'), ('Chin Wei', 'Chan'), ('Chinami', 'Ogi'), ('Chinami', 'Takada'), ('Chinatsu', 'Ito'), ('Chinatsu', 'Maeda'), ('Chinatsu', 'Shimizu'), ('Chinenye Ndidi', 'Izuogu'), ('Ching Li', 'Chen'), ('Ching Ling', 'Chang'), ('Ching Wen', 'Hsu'), ('Chira', 'Niemela'), ('Chirashanthi', 'Rajur'), ('Chiraz', 'Bechri'), ('Chisa', 'Hosonuma'), ('Chisa', 'Packard'), ('Chisako', 'Sugiyama'), ('Chisato', 'Kobayashi'), ('Chisato', 'Nakagawa'), ('Chisayo', 'Ito'), ('Chiu Mei', 'Ho'), ('Chizuru', 'Yamazaki'), ('Chloe', 'Babet'), ('Chloe', 'Beck'), ('Chloe', 'Carlotti'), ('Chloe', 'Cirotte'), ('Chloe', 'Compson'), ('Chloe', 'Gambey'), ('Chloe', 'Hughes'), ('Chloe', 'Hule'), ('Chloe', 'Jones'), ('Chloe', 'Mielgo Herrera'), ('Chloe', 'Murphy'), ('Chloe', 'Paquet'), ('Chloe', 'Smith'), ('Chloe', 'West'), ('Chloe Michele', 'Ouellet Pizer'), ('Cho Won', 'Lee'), ('Chompoothip', 'Jandakate'), ('Chongrak', 'Sri Ud'), ('Chotika', 'Wannachinda'), ('Chris', 'Cerato'), ('Chris', 'Evert'), ('Chris', 'Gillis'), ('Chris', 'Martinez Hernandez'), ('Chris', 'Newton'), ('Chris', 'Oneil'), ('Chris', 'Payne'), ('Chris', 'Penn'), ('Chris Anne', 'Aston'), ('Chris Lynne', 'Kuhlke'), ('Chrisdula', 'Kagga'), ('Chrissie', 'Seredni'), ('Christa', 'Grey'), ('Christa', 'Magister'), ('Christa', 'Pickwick'), ('Christala', 'Andrews'), ('Christelle', 'Antille'), ('Christelle', 'Fauche'), ('Christelle', 'Gerin'), ('Christelle', 'Prato'), ('Christi', 'Potgieter'), ('Christi', 'Turdo'), ('Christi', 'Wagenaar'), ('Christi', 'Woodson'), ('Christian', 'Tara'), ('Christian', 'Thompson'), ('Christiana', 'Brigante'), ('Christiana', 'Mcdonald'), ('Christiane', 'Hofmann'), ('Christiane', 'Hoppmann'), ('Christiane', 'Jolissaint'), ('Christiane', 'Mercelis'), ('Christiane', 'Sarrazin'), ('Christiane', 'Spinoza'), ('Christie', 'Agugbom'), ('Christie', 'Nwankwo'), ('Christie Ann', 'Hale'), ('Christin', 'Potsch'), ('Christin J', 'Thompson'), ('Christina', 'Amo'), ('Christina', 'Auer'), ('Christina', 'Baer'), ('Christina', 'Berchtold'), ('Christina', 'Birtchnell'), ('Christina', 'Bonneau'), ('Christina', 'Ferreira'), ('Christina', 'Fischler'), ('Christina', 'Fitz'), ('Christina', 'Fusano'), ('Christina', 'Habernigg'), ('Christina', 'Horiatopoulos'), ('Christina', 'Lao'), ('Christina', 'Laskaridou'), ('Christina', 'Liles'), ('Christina', 'Lindstrom'), ('Christina', 'Madenoglou'), ('Christina', 'Makarova'), ('Christina', 'Mathis'), ('Christina', 'Mchale'), ('Christina', 'Oberger'), ('Christina', 'Obermoser'), ('Christina', 'Papadaki'), ('Christina', 'Popescu'), ('Christina', 'Rosca'), ('Christina', 'Rozwadowski'), ('Christina', 'Sandberg'), ('Christina', 'Scherndl'), ('Christina', 'Schoener'), ('Christina', 'Seib'), ('Christina', 'Shakovets'), ('Christina', 'Singer'), ('Christina', 'Sotirova'), ('Christina', 'Tan'), ('Christina', 'Weiss'), ('Christina', 'Wheeler'), ('Christina', 'Wolfgruber'), ('Christina', 'Zachariadou'), ('Christina', 'Zgera'), ('Christina Lavinia', 'Badan'), ('Christine', 'Alford'), ('Christine', 'Dorey'), ('Christine', 'Gimmig'), ('Christine', 'Guerrazzi'), ('Christine', 'Iandolo'), ('Christine', 'Janes'), ('Christine', 'Joseph'), ('Christine', 'Kainzmeier'), ('Christine', 'Kandler'), ('Christine', 'King'), ('Christine', 'Lukalo'), ('Christine', 'Masite'), ('Christine', 'Moroe'), ('Christine', 'Neuman'), ('Christine', 'Njeuma'), ('Christine', 'Oreilly'), ('Christine', 'Pape Nielsen'), ('Christine', 'Ricour Catella'), ('Christine', 'Silaghi'), ('Christine', 'Simpson'), ('Christine', 'Sperling'), ('Christine', 'Stastny'), ('Christine', 'Vogt'), ('Christine', 'Wilson'), ('Christy', 'Greenly'), ('Christy', 'Mbadiwe'), ('Christy', 'Striplin'), ('Christyn', 'Lucas'), ('Chrystalla', 'Tritti'), ('Chu', 'Chu'), ('Chu Chen', 'Chuen'), ('Chu Xian', 'Huang'), ('Chullaluck', 'Phocharoen'), ('Chun Mei', 'Ji'), ('Chun Wing', 'Sher'), ('Chun Yan', 'He'), ('Chunxi', 'Xin'), ('Chutharat', 'Rungtein'), ('Chutima', 'Toma'), ('Ciara', 'Finucane'), ('Cielo Marisol', 'Castro Chao'), ('Cierra', 'Gaytan Leach'), ('Cigdem', 'Duru'), ('Cinda', 'Gurney'), ('Cindra', 'Maharaj'), ('Cindy', 'Burger'), ('Cindy', 'Castille'), ('Cindy', 'Chala'), ('Cindy', 'Davis'), ('Cindy', 'Dock'), ('Cindy', 'Hill'), ('Cindy', 'Oest'), ('Cindy', 'Schuurmans'), ('Cindy', 'Summers'), ('Cindy', 'Tow'), ('Cindy', 'Watson'), ('Cindy', 'Xu'), ('Ciney', 'Bekker'), ('Cinta', 'Princep'), ('Cintha Karrie Shanaz', 'Putri'), ('Cinthia', 'Saucedo'), ('Cintia', 'Perez'), ('Cintia', 'Seaton'), ('Cintia', 'Tortorella'), ('Cinzia', 'Coppini'), ('Cisil Buse', 'Ilgazli'), ('Ciska', 'Kramer'), ('Cissie', 'Donigan'), ('Claire', 'Adamini'), ('Claire', 'Bartlett'), ('Claire', 'Birnie'), ('Claire', 'Bourgault'), ('Claire', 'Carnez'), ('Claire', 'Carter'), ('Claire', 'Chapman'), ('Claire', 'Curran'), ('Claire', 'De Gubernatis'), ('Claire', 'Feuerstein'), ('Claire', 'Gatt'), ('Claire', 'Ilcinkas'), ('Claire', 'Jalade'), ('Claire', 'Lablans'), ('Claire', 'Liu'), ('Claire', 'Lyte'), ('Claire', 'Maiolini'), ('Claire', 'Mesnil'), ('Claire', 'Peterzan'), ('Claire', 'Pollard'), ('Claire', 'Ricketts'), ('Claire', 'Seal'), ('Claire', 'Sessions Bailey'), ('Claire', 'Soper'), ('Claire', 'Taylor'), ('Claire', 'Valentin'), ('Claire', 'Verwerda'), ('Claire', 'Webb'), ('Claire', 'Wegink'), ('Claire Cynthia', 'Mulyadi'), ('Claire Yoonkee Choi', 'Spackman'), ('Clara', 'Burel'), ('Clara', 'Carotta'), ('Clara', 'Froget'), ('Clara', 'Hoffman Loza'), ('Clara', 'Matias'), ('Clara', 'Perez Marcos'), ('Clara', 'Rios'), ('Clara', 'Schuhmacher Terron'), ('Clara', 'Tanielian'), ('Clara', 'Udofa'), ('Clara Patricia', 'Rizea'), ('Clare', 'Colman'), ('Clare', 'Evert'), ('Clare', 'Fong'), ('Clare', 'Harrison'), ('Clare', 'Schmoyer'), ('Clare', 'Thompson'), ('Clare', 'Warner'), ('Clare', 'Wood'), ('Clarisa', 'Fernandez'), ('Clarissa', 'Chen'), ('Clarissa', 'Gai'), ('Clarissa', 'Martinessi'), ('Clarisse', 'Baca'), ('Claudette', 'Laliberte'), ('Claudia', 'Argumedo'), ('Claudia', 'Bartolome Ortiz'), ('Claudia', 'Basciani'), ('Claudia', 'Borgiani'), ('Claudia', 'Brause'), ('Claudia', 'Calderon'), ('Claudia', 'Candado'), ('Claudia', 'Casabianca'), ('Claudia', 'Castro'), ('Claudia', 'Chabalgoity'), ('Claudia', 'Chavarria Perez'), ('Claudia', 'Cianci'), ('Claudia', 'Cirillo'), ('Claudia', 'Coppola'), ('Claudia', 'Corral'), ('Claudia', 'Cortes De Maldonado'), ('Claudia', 'Di Trapani'), ('Claudia', 'Faillace'), ('Claudia', 'Filippini'), ('Claudia', 'Franze'), ('Claudia', 'Gaspar'), ('Claudia', 'Giovine'), ('Claudia', 'Harrison'), ('Claudia', 'Herbas'), ('Claudia', 'Hernandez Salas'), ('Claudia', 'Herrero Garcia Honorato'), ('Claudia', 'Hidalgo'), ('Claudia', 'Hirt'), ('Claudia', 'Hoffmann Timm'), ('Claudia', 'Hoste Ferrer'), ('Claudia', 'Inchanstegui'), ('Claudia', 'Ivone'), ('Claudia', 'Jorda Fernandez'), ('Claudia', 'Kardys'), ('Claudia', 'Kieffer'), ('Claudia', 'Kohde Kilsch'), ('Claudia', 'Kuleszka'), ('Claudia', 'Lepore'), ('Claudia', 'Lorenzo Fernandez'), ('Claudia', 'Marini'), ('Claudia', 'Marsili'), ('Claudia', 'Mercado'), ('Claudia', 'Monteiro'), ('Claudia', 'Mucino'), ('Claudia', 'Negron'), ('Claudia', 'Nieto'), ('Claudia', 'Oliva'), ('Claudia', 'Oliveira'), ('Claudia', 'Oravcova'), ('Claudia', 'Ortiz Albert'), ('Claudia', 'Papi'), ('Claudia', 'Pasquale'), ('Claudia', 'Perolini'), ('Claudia', 'Piccini'), ('Claudia', 'Pontoglio'), ('Claudia', 'Porwik'), ('Claudia', 'Puddu'), ('Claudia', 'Razzeto'), ('Claudia', 'Reimering'), ('Claudia', 'Rodriguez'), ('Claudia', 'Salgues'), ('Claudia', 'Sanchez Gonzalez'), ('Claudia', 'Sanua'), ('Claudia', 'Smolders'), ('Claudia', 'Spincke'), ('Claudia', 'Strauss'), ('Claudia', 'Timm'), ('Claudia', 'Van Der Weck'), ('Claudia', 'Wasilewski'), ('Claudia', 'Wiktorin'), ('Claudia', 'Williams'), ('Claudia Antonia', 'Enache'), ('Claudia Cecilia', 'Rosas Garcia'), ('Claudia Gianina', 'Dumitrescu'), ('Claudia Irene', 'Ponton Caamano'), ('Claudia Lazara', 'Magarino Lopez'), ('Claudia Marcela', 'Silva Aragon'), ('Claudia Noemi', 'Cascella'), ('Claudia Paulina', 'Lopez'), ('Claudina', 'Covarrubias'), ('Claudine', 'Paulson'), ('Claudine', 'Rouire'), ('Claudine', 'Schaul'), ('Claudine', 'Toleafoa'), ('Clelia', 'Anfuso'), ('Clelia', 'Deltour'), ('Clelia', 'Melena'), ('Clemence', 'Castel'), ('Clemence', 'Fayol'), ('Clemence', 'Terol'), ('Clementina', 'Rovere'), ('Clementina Eugenia', 'Riobueno De Paola'), ('Cleopatra', 'Lopez'), ('Clodagh', 'Mcmorrow'), ('Clorinda', 'Wessels'), ('Clothilde', 'De Bernardi'), ('Clothilde', 'Falconetti'), ('Clotilde', 'Barriere'), ('Coco', 'Vandeweghe'), ('Cody', 'Morris'), ('Colet', 'Weening'), ('Colette', 'Caple'), ('Colette', 'Sely'), ('Coline', 'Chauvet'), ('Colleen', 'Carney'), ('Colleen', 'Cheng'), ('Colleen', 'Rielley'), ('Collette', 'Oreilly'), ('Colomba', 'Di Filippo'), ('Conceicao', 'Rio'), ('Conchita', 'Martinez'), ('Conchita', 'Martinez Granados'), ('Conchita Corazon', 'Zoleta'), ('Connie', 'Capozzi'), ('Connie', 'Yowell'), ('Connor', 'Vogel'), ('Conny', 'Perrin'), ('Constance', 'Alexander'), ('Constance', 'Sibille'), ('Constanza', 'Gorches'), ('Constanza', 'Politi'), ('Constanza Lara', 'Tempone'), ('Constanze', 'Glockner'), ('Constanze', 'Lotz'), ('Constanze', 'Steiner'), ('Constanze', 'Stepan'), ('Consuelo', 'Costantino'), ('Cora', 'Hofmann'), ('Cora', 'Linneman'), ('Cora', 'Vasilescu'), ('Coral', 'Morales'), ('Coral', 'Orpi'), ('Coral', 'Silverstone'), ('Cordelia Currey', 'Witten'), ('Corin', 'De Waal'), ('Corina', 'Jaeger'), ('Corina', 'Mader'), ('Corina', 'Martinez Pastur'), ('Corina', 'Morariu'), ('Corina Claudia', 'Corduneanu'), ('Corinna', 'Dentoni'), ('Corinne', 'Bousmans'), ('Corinne', 'Molesworth'), ('Corinne', 'Ng Tung Hing'), ('Corinne', 'Vanier'), ('Corinne Marie', 'Demey Bousm'), ('Cornelia', 'Dries'), ('Cornelia', 'Grunes'), ('Cornelia', 'Lassonczyk'), ('Cornelia', 'Lechner'), ('Cornelia', 'Lister'), ('Cornelia', 'Marty'), ('Cornelia', 'Villemur'), ('Cory Ann', 'Avants'), ('Cory Pierina', 'Molina Chenet'), ('Costanza', 'Bruno De Lisi'), ('Costanza', 'Federici'), ('Costanza', 'Magazzini'), ('Costanza', 'Mecchi'), ('Costanza', 'Pallme Konig'), ('Costanza', 'Pera'), ('Costanza', 'Traversi'), ('Courtenay', 'Chapman'), ('Courtenay', 'Middleton'), ('Courtney', 'Bergman'), ('Courtney', 'Byron'), ('Courtney', 'Clayton'), ('Courtney', 'Collins'), ('Courtney', 'Colton'), ('Courtney', 'Gulihur'), ('Courtney', 'Lord'), ('Courtney', 'Nagle'), ('Courtney', 'Roberts'), ('Courtney', 'Spafford'), ('Courtney', 'Steinbock'), ('Courtney', 'Ulery'), ('Courtney', 'Vernon'), ('Courtney B', 'Dolehide'), ('Courtney M', 'Petero'), ('Covadonga', 'Garcia Calvo'), ('Covadonga', 'Muradas'), ('Cricket', 'Manuel'), ('Cristelle', 'Grier'), ('Cristiana', 'Ferrando'), ('Cristiana', 'Marotta'), ('Cristiana', 'Marradi'), ('Cristiana', 'Narchi'), ('Cristiana Miruna', 'Tudor'), ('Cristina', 'Adamescu'), ('Cristina', 'Arribas'), ('Cristina', 'Bachiller Madrono'), ('Cristina', 'Bala Abella'), ('Cristina', 'Beber'), ('Cristina', 'Bejarano Jimenez'), ('Cristina', 'Bengzon'), ('Cristina', 'Bucsa'), ('Cristina', 'Cabello Gonzalez'), ('Cristina', 'Caparis'), ('Cristina', 'Casale'), ('Cristina', 'Casini'), ('Cristina', 'Cavina'), ('Cristina', 'Celani'), ('Cristina', 'Coletto'), ('Cristina', 'Condon'), ('Cristina', 'Correia'), ('Cristina', 'Cortes'), ('Cristina', 'Dinu'), ('Cristina', 'Ene'), ('Cristina', 'Fontelles'), ('Cristina', 'Gimenez Pena'), ('Cristina', 'Greco Naccarato'), ('Cristina', 'Lopez De Subijana'), ('Cristina', 'Lopez Santos'), ('Cristina', 'Madrid'), ('Cristina', 'Maiz'), ('Cristina', 'Martinez'), ('Cristina', 'Matera'), ('Cristina', 'Mayorova Bakhtina'), ('Cristina', 'Mecho Ruiz'), ('Cristina', 'Meilicke'), ('Cristina', 'Melgarejo'), ('Cristina', 'Moll Alles'), ('Cristina', 'Moroi'), ('Cristina', 'Moros'), ('Cristina', 'Nicolae'), ('Cristina', 'Perez De La Torre Ma'), ('Cristina', 'Portas'), ('Cristina', 'Portas Soy'), ('Cristina', 'Ribeiro Britto'), ('Cristina', 'Rodriguez'), ('Cristina', 'Salvi'), ('Cristina', 'Sampaio'), ('Cristina', 'Sanchez Quintanar'), ('Cristina', 'Santos'), ('Cristina', 'Sanz Aguirre'), ('Cristina', 'Tessi'), ('Cristina', 'Tonelli'), ('Cristina', 'Torrens Valero'), ('Cristina', 'Torres Sanchez'), ('Cristina', 'Valladares Nunez'), ('Cristina', 'Vasco'), ('Cristina', 'Visico'), ('Cristina', 'Wallis'), ('Cristina Andreea', 'Mitu'), ('Cristina Bianca', 'Danaila'), ('Cristina Diana', 'Ghinda'), ('Cristina Madalina', 'Stancu'), ('Cristina Mirela', 'Prodanel'), ('Crystal', 'Sutar'), ('Crystel', 'Mulder'), ('Csenge', 'Furak'), ('Csilla', 'Argyelan'), ('Csilla', 'Borsanyi'), ('Csilla', 'Cserepy'), ('Csilla', 'Dobo'), ('Cynthia', 'Ashling'), ('Cynthia', 'Del Rey Guardiola'), ('Cynthia', 'Dewi'), ('Cynthia', 'Doerner'), ('Cynthia', 'Goulet'), ('Cynthia', 'Macgregor'), ('Cynthia', 'Melita'), ('Cynthia', 'Mitchell'), ('Cynthia', 'Ojeda'), ('Cynthia', 'Perez Gil'), ('Cynthia', 'Prieto Garcia'), ('Cynthia', 'Tornil Marclay'), ('Cynthia Alejandra', 'Lopez'), ('Cynthia Ann', 'Thomas'), ('Cyntia Soledad', 'Gimenez'), ('Cyrine', 'Ben Cheikh'), ('Czarina Mae', 'Arevalo'), ('D', 'Brennan'), ('D', 'ESPINAL'), ('D', 'Jainer'), ('D', 'Maccloskey'), ('Da Hye', 'Jeong'), ('Da Hye', 'Kim'), ('Da Jung', 'Hong'), ('Da Un', 'Lee'), ('Dabin', 'Kim'), ('Dacil', 'Alvarado'), ('Dael Alma', 'Mckenna'), ('Dafna', 'Peleg'), ('Dafni', 'Demenega'), ('Dagmar', 'Denkova'), ('Dagmar', 'Dudlakova'), ('Dagmar', 'Janischova'), ('Dagmar', 'Schafer'), ('Dagmar', 'Zdrubecka'), ('Dagmara', 'Baskova'), ('Dagmara', 'Bednarczyk'), ('Dagmara', 'Siara'), ('Dahilmar', 'Saez'), ('Dai Hwa', 'Wang'), ('Daiana', 'Bazzano'), ('Daiana', 'Hail'), ('Daiana', 'Negreanu'), ('Daiany', 'Luchi'), ('Dainah', 'Cameron'), ('Daisy', 'Ames'), ('Daja', 'Bedanova'), ('Dajana', 'Csongradyova'), ('Dajana', 'Cvjetkovic'), ('Dajana', 'Dukic'), ('Dajana', 'Ognjenovic'), ('Dakota', 'Fordham'), ('Dakota', 'Norton'), ('Daksha', 'Mulay'), ('Dakshata', 'Girishkumar Patel'), ('Dalayna', 'Hewitt'), ('Daleidis', 'Borrego'), ('Dalia', 'Ahmed'), ('Dalia', 'Coutry'), ('Dalia', 'El Sheikh'), ('Dalia', 'Koriat'), ('Dalia', 'Zafirova'), ('Dalia Primaver', 'Garza'), ('Dalila', 'Jakupovic'), ('Dalila', 'Pejkovic'), ('Dalila', 'Said'), ('Dalila', 'Spiteri'), ('Dally', 'Randriantefy'), ('Dalma', 'Galfi'), ('Dalma Maria', 'Rojas Rodas'), ('Dalya', 'Pupchenok'), ('Dami', 'Edibson Messiah'), ('Dami', 'Lee'), ('Damilola', 'Olufeko'), ('Damini', 'Sharma'), ('Damira', 'Muminovic'), ('Dan', 'Li'), ('Dan', 'Xiong'), ('Dan', 'Yu'), ('Dan Dan', 'Jiang'), ('Dan Feng', 'Liu'), ('Dan Ni', 'Jiang'), ('Dan Ni', 'Wang'), ('Dana', 'Adelson'), ('Dana', 'Evans'), ('Dana', 'Ferreyra'), ('Dana', 'Gilbert'), ('Dana', 'Hartman'), ('Dana', 'Ihsanova'), ('Dana', 'Kremer'), ('Dana', 'Machalkova'), ('Dana', 'Nussralla'), ('Dana Katherine', 'Santiago Benavides'), ('Danai', 'Petroula'), ('Dane', 'Joubert'), ('Dane', 'Vorster'), ('Daneika', 'Borthwick'), ('Danel', 'Ashirova'), ('Dania', 'Musina'), ('Dania', 'Navarro'), ('Dania Bianca', 'Payer'), ('Danica', 'Kovacova'), ('Danica', 'Krstajic'), ('Danica', 'Malan'), ('Danica', 'Milinkovicova'), ('Danice', 'Shackelford'), ('Daniel', 'Hava'), ('Daniel', 'Kestenboum'), ('Daniela', 'Agostinone'), ('Daniela', 'Alvarez'), ('Daniela', 'Amelunge'), ('Daniela', 'Baez Friedrich'), ('Daniela', 'Bercek'), ('Daniela', 'Bertolo'), ('Daniela', 'Bolanos'), ('Daniela', 'Bracaglia'), ('Daniela', 'Caljkusic'), ('Daniela', 'Canepa'), ('Daniela', 'Carp'), ('Daniela', 'Carrillo'), ('Daniela', 'Casanova'), ('Daniela', 'Castillo'), ('Daniela', 'Ciganikova'), ('Daniela', 'Cigna'), ('Daniela', 'Ciobanu'), ('Daniela', 'Cociorba'), ('Daniela', 'Cocos'), ('Daniela', 'Covello'), ('Daniela', 'Cozzi'), ('Daniela', 'Degano'), ('Daniela', 'Dessolis'), ('Daniela', 'Diez'), ('Daniela', 'Farfan'), ('Daniela', 'Flores Gerez'), ('Daniela', 'Forti'), ('Daniela', 'Garcia Diaz'), ('Daniela', 'Garstea'), ('Daniela', 'Gonzalez Martinez'), ('Daniela', 'Groseanu'), ('Daniela', 'Gudelj'), ('Daniela', 'Hantuchova'), ('Daniela', 'Hebertova'), ('Daniela', 'Ilieva'), ('Daniela', 'Islamaj'), ('Daniela', 'Ivana'), ('Daniela', 'Kabakova'), ('Daniela', 'Kix'), ('Daniela', 'Klemenschits'), ('Daniela', 'Kocetkova'), ('Daniela', 'Kraberger'), ('Daniela', 'Krejsova'), ('Daniela', 'Leyria Moreno'), ('Daniela', 'Lopez'), ('Daniela', 'Lovera'), ('Daniela', 'Lozano'), ('Daniela', 'Martinez'), ('Daniela', 'Marzano'), ('Daniela', 'Moise'), ('Daniela', 'Montoya Sierra'), ('Daniela', 'Morales Beckmann'), ('Daniela', 'Munoz Gallegos'), ('Daniela', 'Murselovic'), ('Daniela', 'Muscolino'), ('Daniela', 'Noceto'), ('Daniela', 'Obando'), ('Daniela', 'Olivera'), ('Daniela', 'Or Shahar'), ('Daniela', 'Pedraza Novak'), ('Daniela', 'Peyrot'), ('Daniela', 'Puplinkhuisen'), ('Daniela', 'Ramirez'), ('Daniela', 'Raygadas Dominguez'), ('Daniela', 'Ruiz'), ('Daniela', 'Russino'), ('Daniela', 'Salomon'), ('Daniela', 'Santamato'), ('Daniela', 'Schekaiban'), ('Daniela', 'Schippers'), ('Daniela', 'Scivetti'), ('Daniela', 'Seguel'), ('Daniela', 'Suarez'), ('Daniela', 'Torres'), ('Daniela', 'Trigo'), ('Daniela', 'Vanko'), ('Daniela', 'Vidal'), ('Daniela', 'Vismane'), ('Daniela', 'Vita'), ('Daniela', 'Vukadinovic'), ('Daniela', 'Vukovic'), ('Daniela Alejandra', 'La Fuente Strassburger'), ('Daniela Alexandra', 'Ilcu'), ('Daniela Estefania', 'Rosado Vega'), ('Daniela Lucia', 'Sierra Jurado'), ('Daniela Macarena', 'Lopez'), ('Daniela Renee', 'Leitch'), ('Daniele', 'Bouteleux'), ('Daniella', 'Arcila'), ('Daniella', 'Blanke'), ('Daniella', 'Cohen'), ('Daniella', 'Daniel'), ('Daniella', 'Jeflea'), ('Daniella', 'Kastamoniti'), ('Daniella', 'Medvedeva'), ('Daniella', 'Moreno Kaste'), ('Daniella', 'Patton'), ('Daniella', 'Rabkin'), ('Daniella', 'Roldan'), ('Daniella', 'Silva'), ('Danielle', 'Brown'), ('Danielle', 'Cosgrove'), ('Danielle', 'Downey'), ('Danielle', 'Harmsen'), ('Danielle', 'Hock'), ('Danielle', 'Jones'), ('Danielle', 'Konotoptseva'), ('Danielle', 'Kypreos'), ('Danielle', 'Lao'), ('Danielle', 'Lund'), ('Danielle', 'McIntyre'), ('Danielle', 'Meunier'), ('Danielle', 'Mills'), ('Danielle', 'Moita'), ('Danielle', 'Paynter'), ('Danielle', 'Plant'), ('Danielle', 'Scott'), ('Danielle', 'Spacek'), ('Danielle', 'Steinberg'), ('Danielle', 'Thomas'), ('Danielle', 'Vernier'), ('Danielle', 'Wagland'), ('Danielle', 'Wiggins'), ('Danielle', 'Zinn'), ('Danielle Rose', 'Collins'), ('Danijela', 'Tomic'), ('Danila', 'Imbriani'), ('Danila', 'Prevuznakova'), ('Danira', 'Fabijanovic'), ('Danira', 'Penic'), ('Danka', 'Kovinic'), ('Danna Valentina', 'Galeano'), ('Danny', 'Engel'), ('Danuta', 'Rylska'), ('Danuta', 'Wieczorek'), ('Daowadueng', 'Phonkan'), ('Daphne', 'Charalambous'), ('Daphne', 'Friedrichs'), ('Daphne', 'Nicolatou'), ('Daphne', 'Pattison'), ('Daphne', 'Staelens'), ('Daphne', 'Van De Zande'), ('Daphne', 'Van Den Heuvel'), ('Daria', 'Abdrakhmanova'), ('Daria', 'Afanasyeva'), ('Daria', 'Babushkina'), ('Daria', 'Bykodarova'), ('Daria', 'Chemarda'), ('Daria', 'Chernova'), ('Daria', 'Chernyshkova'), ('Daria', 'Gajos'), ('Daria', 'Galyanova'), ('Daria', 'Gavrilova'), ('Daria', 'Glushich'), ('Daria', 'Holodnik'), ('Daria', 'Kirpicheva'), ('Daria', 'Kruzhkova'), ('Daria', 'Kuchmina'), ('Daria', 'Kuczer'), ('Daria', 'Kulbikova'), ('Daria', 'Lodikova'), ('Daria', 'Lukyanova'), ('Daria', 'Maslennikova'), ('Daria', 'Mironova'), ('Daria', 'Nazarkina'), ('Daria', 'Neretina'), ('Daria', 'Novosad'), ('Daria', 'Orichkevitch'), ('Daria', 'Ovsyannikova'), ('Daria', 'Panova'), ('Daria', 'Petrovic'), ('Daria', 'Ponomareva'), ('Daria', 'Potapova'), ('Daria', 'Prytkova'), ('Daria', 'Rakitskaya'), ('Daria', 'Razarenova'), ('Daria', 'Salnikova'), ('Daria', 'Sapogova'), ('Daria', 'Shakoulina'), ('Daria', 'Sharapova'), ('Daria', 'Shelomentseva'), ('Daria', 'Shilina'), ('Daria', 'Solovyeva'), ('Daria', 'Soukirno'), ('Daria', 'Titkina'), ('Daria', 'Tuaeva'), ('Daria', 'Turpak'), ('Daria', 'Vasekina'), ('Daria', 'Yakauleva'), ('Daria', 'Zheludchenko'), ('Darian', 'Chappel'), ('Dariana', 'Kozmina'), ('Darija', 'Deskovic'), ('Darija', 'Jurak'), ('Darija', 'Klaic'), ('Darina', 'Berkova'), ('Darina', 'Dobrovolski'), ('Darina', 'Mecova'), ('Darina', 'Mueller'), ('Darina', 'Sedenkova'), ('Dariya', 'Berezhnaya'), ('Dariya', 'Dashutina'), ('Dariya', 'Detkovskaya'), ('Dariya', 'Sovich'), ('Darja', 'Pribitkow'), ('Darlene', 'Hard'), ('Darlene', 'Williamson'), ('Daron', 'Moore'), ('Darta Elizabete', 'Emulina'), ('Darya', 'Bulatova'), ('Darya', 'Chernetsova'), ('Darya', 'Ivanov'), ('Darya', 'Kasatkina'), ('Darya', 'Kryvets'), ('Darya', 'Kustova'), ('Darya', 'Lebesheva'), ('Darya', 'Mukhina'), ('Darya', 'Nakidaylo'), ('Darya', 'Possokhova'), ('Darya', 'Shevchenko'), ('Darya', 'Shulzhanok'), ('Darya', 'Startseva'), ('Daryl', 'Gralka'), ('Daryna', 'Gukasyan'), ('Daryna', 'Kovalenko'), ('Dasa', 'Orlic'), ('Dasha', 'Cherkasova'), ('Dasha', 'Ivanova'), ('Dasha', 'Sergeeva'), ('Davilyn', 'Godinet'), ('Davina', 'Duronio'), ('Davina', 'Mendiburu'), ('Davina', 'Meza'), ('Davinia', 'Lobbinger'), ('Dawn', 'Buth'), ('Dayana', 'Mora'), ('Dayana', 'Sedova'), ('Dayana', 'Yastremska'), ('Dayane', 'Silva'), ('Dayeon', 'Back'), ('Dayna', 'Grazette'), ('Daysi', 'Espinal'), ('Dea', 'Herdzelas'), ('Dea', 'Lako'), ('Dea', 'Sumantri'), ('Dea Ioanna', 'Petropoulou'), ('Deanna', 'Roberts'), ('Deanne', 'Bell'), ('Dearbhia', 'Kelly'), ('Debbie', 'Carr'), ('Debbie', 'Chesterton'), ('Debbie', 'Freeman'), ('Debbie', 'Graham'), ('Debbie', 'Ladig'), ('Debbie', 'Larocque'), ('Debbie', 'Robb'), ('Debbie', 'Spence Nasim'), ('Debbie', 'Stewart'), ('Debbrich', 'Feys'), ('Debby', 'Haak'), ('Debora', 'Carmassi'), ('Debora', 'Carvalho'), ('Debora', 'Castany Muniente'), ('Debora', 'Echeverria'), ('Debora', 'Garat'), ('Debora Emanuela', 'Scurt'), ('Deborah', 'Armstrong'), ('Deborah', 'Chiesa'), ('Deborah', 'Cruciani'), ('Deborah', 'Edelman'), ('Deborah', 'Fiuza'), ('Deborah', 'Gaviria'), ('Deborah', 'Hill'), ('Deborah', 'Jevans'), ('Deborah', 'Kerfs'), ('Deborah', 'Montero'), ('Deborah', 'Pagani'), ('Deborah', 'Paulo Lamelas'), ('Deborah', 'Raia'), ('Deborah', 'Saxer'), ('Deborah', 'Suarez'), ('Debra', 'Darrell'), ('Dede Tari', 'Kusrini'), ('Dee Ann', 'Hansel'), ('Dee Dee', 'Herring'), ('Deeksha', 'Manju Prasad'), ('Deena Rose', 'Cruz'), ('Deeon', 'Mladin'), ('Deepa', 'Engade'), ('Deepanwita', 'Chakrabarty'), ('Deepika', 'Krishnappa'), ('Deepna', 'Vazirani'), ('Deepshikha', 'Saw'), ('Defne', 'Basbakkal'), ('Defne', 'Olcay'), ('Defne', 'Ozerden'), ('Deidre', 'Keller'), ('Deimante', 'Bulatovaite'), ('Deirdre', 'Cienki'), ('Deisy', 'Bolivar Espinosa'), ('Dejana', 'Radanovic'), ('Dejana', 'Raickovic'), ('Delaney', 'Nothaft'), ('Delene', 'Ackron'), ('Delfina', 'Glorioso'), ('Delia', 'Damaschin'), ('Delia', 'Sescioreanu'), ('Delila', 'Causevic'), ('Delisha', 'Guttikonda'), ('Delphine', 'Baudin'), ('Delphine', 'Costantini Benoit'), ('Delphine', 'De Winne'), ('Delphine', 'Froidevaux'), ('Delphine', 'Troch'), ('Demi', 'Barao Rodrigues'), ('Demi', 'Schuurs'), ('Dena', 'Laadan'), ('Dena', 'Levy'), ('Denia', 'Salu'), ('Denisa', 'Allertova'), ('Denisa', 'Chereches'), ('Denisa', 'Chiriacu'), ('Denisa', 'Chladkova'), ('Denisa', 'Dolejsova'), ('Denisa', 'Dumitrescu'), ('Denisa', 'Hindova'), ('Denisa', 'Krajcovicova'), ('Denisa', 'Kristofova'), ('Denisa', 'Kulhankova'), ('Denisa', 'Legac'), ('Denisa', 'Pavlikova'), ('Denisa', 'Pospisilova'), ('Denisa', 'Sobotkova'), ('Denisa', 'Szabova'), ('Denisa Elena', 'Gheorghe'), ('Denise', 'Atzinger'), ('Denise', 'Buberl'), ('Denise', 'Carter Triolo'), ('Denise', 'Doring'), ('Denise', 'Dy'), ('Denise', 'Ferreira'), ('Denise', 'Giler'), ('Denise', 'Harijanto'), ('Denise', 'Hofer'), ('Denise', 'Kirbijikian'), ('Denise', 'Konig'), ('Denise', 'Mascherini'), ('Denise', 'Maxl'), ('Denise', 'Muresan'), ('Denise', 'Panagopoulou'), ('Denise', 'Parnell'), ('Denise', 'Scheiflinger'), ('Denise', 'Starr'), ('Denise', 'Sukup'), ('Denise', 'Taylor'), ('Denise', 'Van Der Ben'), ('Denise', 'Vock'), ('Denise Antonela', 'Stoica'), ('Denitza', 'Alexandrova'), ('Deniz', 'Atas'), ('Deniz', 'Emre'), ('Deniz', 'Khazaniuk'), ('Deniz', 'Paykoc'), ('Deniz', 'Ulutug'), ('Deniza', 'Marcinkevica'), ('Deria', 'Nur Haliza'), ('Derja', 'Turhan'), ('Derly', 'Cunya'), ('Derya', 'Yahe'), ('Desanka', 'Jovanovic'), ('Desirae', 'Krawczyk'), ('Desire', 'Roset Torres'), ('Desiree', 'Alesiani'), ('Desiree', 'Bastianon'), ('Desiree', 'Galvan Suarez'), ('Desiree', 'Jakle'), ('Desiree', 'Leupold'), ('Desiree', 'Schelenz'), ('Desiree', 'Tran'), ('Desislava', 'Lazarova'), ('Desislava', 'Topalova'), ('Despina', 'Matsaridou'), ('Despina', 'Papamichail'), ('Despina', 'Toulgaridou'), ('Despoina', 'Vogasari'), ('Dessislava', 'Mladenova'), ('Dessislava', 'Zlateva'), ('Destanee', 'Aiava'), ('Devan', 'Mccluskey'), ('Devanshi G', 'Bhimjiyani'), ('Devi', 'Hasan'), ('Devin', 'Chypyha'), ('Devina', 'Saedi'), ('Devon', 'Kuijstermans'), ('Dewi', 'Dijkman'), ('Dewi', 'Fortuna'), ('Dewi', 'Wijayanthi'), ('Dewi Monica', 'Siregar'), ('Dewonder', 'Davis'), ('Deyanirr', 'Solorio'), ('Dhanielly', 'Quevedo'), ('Dhara Bharat', 'Thakor'), ('Dhruthi', 'Tatachar Venugopal'), ('Di', 'Hu'), ('Di', 'Riste'), ('Di', 'Zhao'), ('Di Andrea', 'Galloway'), ('Dia', 'Evtimova'), ('Diae', 'El Jardi'), ('Diala', 'Jamaleddine'), ('Diamond', 'Jackson'), ('Dian', 'Anggraini'), ('Dian', 'Mayasari'), ('Diana', 'Arutyunova'), ('Diana', 'Bakuta'), ('Diana', 'Batista'), ('Diana', 'Belalova'), ('Diana', 'Bobkova'), ('Diana', 'Bogoliy'), ('Diana', 'Brunel'), ('Diana', 'Bukajeva'), ('Diana', 'Buzean'), ('Diana', 'Cardenas Azcarate'), ('Diana', 'Chehoudi'), ('Diana', 'Costa'), ('Diana', 'Davitaia'), ('Diana', 'De Salvador'), ('Diana', 'Dehterevich'), ('Diana', 'Demidova'), ('Diana', 'Eriksson'), ('Diana', 'Escalante'), ('Diana', 'Espinal'), ('Diana', 'Flickier'), ('Diana', 'Foldenyi'), ('Diana', 'Gardner'), ('Diana', 'Gherghi'), ('Diana', 'Isaeva'), ('Diana', 'Julianto'), ('Diana', 'Khodan'), ('Diana', 'Krasnova'), ('Diana', 'Kyllmann'), ('Diana', 'Laksono'), ('Diana', 'Majkic'), ('Diana', 'Makki'), ('Diana', 'Marcinkevica'), ('Diana', 'Marcu'), ('Diana', 'Martin'), ('Diana', 'Mills'), ('Diana', 'Monsalve'), ('Diana', 'Monsivaiz'), ('Diana', 'Moskova'), ('Diana', 'Muller'), ('Diana', 'Nakic'), ('Diana', 'Narzikulova'), ('Diana', 'Olave'), ('Diana', 'Ospina'), ('Diana', 'Popescu'), ('Diana', 'Quevedo'), ('Diana', 'Ramirez'), ('Diana', 'Reverte'), ('Diana', 'Rivera'), ('Diana', 'Ryashko'), ('Diana', 'Salas'), ('Diana', 'Santillan Fernandez'), ('Diana', 'Shevchenko'), ('Diana', 'Spadea'), ('Diana', 'Spissakova'), ('Diana', 'Srebrovic'), ('Diana', 'Stomlega'), ('Diana', 'Sumova'), ('Diana', 'Sutedja'), ('Diana', 'Tchkouasselli'), ('Diana', 'Tokar'), ('Diana', 'Toma'), ('Diana', 'Torres'), ('Diana', 'Valenti'), ('Diana', 'Valverde'), ('Diana', 'Vasquez'), ('Diana', 'Viteri'), ('Diana', 'Vlad'), ('Diana', 'Vranceanu'), ('Diana', 'Vuchinger'), ('Diana', 'Woodcock'), ('Diana Andreea', 'Gae'), ('Diana Carolina', 'Casas'), ('Diana Madalina', 'Zainea'), ('Diana Maria', 'Mihail'), ('Diana Nur', 'Fatimah'), ('Diandra', 'Berliana'), ('Diane', 'Asensio'), ('Diane', 'Cheymol'), ('Diane', 'Craig'), ('Diane', 'Desfor'), ('Diane', 'Donnelly'), ('Diane', 'Eastburn'), ('Diane', 'Evers'), ('Diane', 'Farrell'), ('Diane', 'Filip'), ('Diane', 'James'), ('Diane', 'Matzner'), ('Diane', 'Mckeon'), ('Diane', 'Parry'), ('Diane', 'Trebalag'), ('Dianne', 'Balestrat'), ('Dianne', 'Berkinshaw'), ('Dianne', 'Hollands'), ('Dianne', 'Morrison'), ('Dianne', 'Van Rensburg'), ('Dianne Kenneth', 'Matias'), ('Dide', 'Beijer'), ('Diedre', 'Herman'), ('Diera', 'Saidmukhamedova'), ('Digna', 'Ketelaar'), ('Dijana', 'Banovec'), ('Dijana', 'Bogicevic'), ('Dijana', 'Srbinoska'), ('Dijana', 'Stojic'), ('Dikla', 'Dadon'), ('Dilara', 'Ahmetagic'), ('Dilara', 'Naibi'), ('Dilara', 'Spicer'), ('Dilara', 'Yurtkuran'), ('Dilara Romy', 'Kubak'), ('Dildora', 'Rakhimova'), ('Diletta', 'Alessandrelli'), ('Diletta', 'Paperini'), ('Dilshani', 'Manawadu'), ('Dilyara', 'Merzadinova'), ('Dilyara', 'Saidkhodjaeva'), ('Dima', 'Al Saadi'), ('Dimana', 'Krastevitch'), ('Dina', 'Azwar'), ('Dina', 'Bajramovic'), ('Dina', 'Basil'), ('Dina', 'Chayka'), ('Dina', 'Dajani'), ('Dina', 'El Farouk'), ('Dina', 'El Harazi'), ('Dina', 'Hegab'), ('Dina', 'Jovanovic'), ('Dina', 'Karina'), ('Dina', 'Khalil'), ('Dina', 'Mcbride'), ('Dina', 'Milosevic'), ('Dina', 'Naffa'), ('Dina', 'Senkina'), ('Dina', 'Zhamiyeva'), ('Dinah', 'Pfizenmaier'), ('Dinali', 'De Silva'), ('Dinara', 'Imazhanova'), ('Dinara', 'Khalilova'), ('Dinara', 'Safina'), ('Ding', 'Ding'), ('Dinka', 'Hadzic'), ('Dinka', 'Lujinovic'), ('Dionissia', 'Asteri'), ('Dionissia', 'Kotsia'), ('Dionne', 'Lim'), ('Dipti', 'Srivastava'), ('Disha', 'Dang'), ('Disha', 'Saigal'), ('Disha Satish', 'Agarwal'), ('Dita', 'Hauerlandova'), ('Dita', 'Kochloffelova'), ('Ditta', 'Huber'), ('Ditte', 'Hougaard'), ('Divija', 'Mandava'), ('Divina', 'Escala'), ('Divya', 'Merchant'), ('Djamila', 'Khaldi'), ('Djasmine', 'Garnacho'), ('Djihane', 'Tefani'), ('Do Hee', 'Bae'), ('Doga', 'Turkmen'), ('Doga Selen', 'Takunyaci'), ('Doina Nicoleta', 'Lovin'), ('Dolavee', 'Tumthong'), ('Dolores', 'Molina Portela'), ('Dolunay', 'Soykan'), ('Domenica', 'Gonzalez'), ('Domenika', 'Turkovic'), ('Dominice', 'Ripoll'), ('Dominika', 'Cibulkova'), ('Dominika', 'Dieskova'), ('Dominika', 'Gerwin'), ('Dominika', 'Gorecka'), ('Dominika', 'Haldinova'), ('Dominika', 'Hrabalova'), ('Dominika', 'Jasova'), ('Dominika', 'Kanakova'), ('Dominika', 'Kocwin'), ('Dominika', 'Lackova'), ('Dominika', 'Luzarova'), ('Dominika', 'Nemcovicova'), ('Dominika', 'Nociarova'), ('Dominika', 'Olszewska'), ('Dominika', 'Paczena'), ('Dominika', 'Paterova'), ('Dominika', 'Rozanska'), ('Dominika', 'Schlehoferova'), ('Dominika', 'Toronyi'), ('Dominika', 'Wojtal'), ('Dominika', 'Zaprazna'), ('Dominika', 'Zuzulova'), ('Dominique', 'Beauvais'), ('Dominique', 'Beillan'), ('Dominique', 'Bovey'), ('Dominique', 'Bruce'), ('Dominique', 'Burel'), ('Dominique', 'Covington'), ('Dominique', 'Damian'), ('Dominique', 'Esparza Fuster'), ('Dominique', 'Glinzler'), ('Dominique', 'Harmath'), ('Dominique', 'Ibarra Gomez'), ('Dominique', 'Karregat'), ('Dominique', 'Meyer'), ('Dominique', 'Monami'), ('Dominique', 'Oustric'), ('Dominique', 'Reynolds'), ('Dominique', 'Rosenberg'), ('Dominique', 'Schaefer'), ('Dominique', 'Toliravo'), ('Dominique', 'Van Boekel'), ('Dominique', 'Wahl'), ('Dominique', 'Wimmer'), ('Dominique Chante', 'Mclean'), ('Dona', 'Abo Habaga'), ('Dona', 'Valihanova'), ('Dong Bo', 'Lei'), ('Dong Ling', 'Zou'), ('Donika', 'Bashota'), ('Donna', 'Bradshaw'), ('Donna', 'Calvert'), ('Donna', 'Faber'), ('Donna', 'Fields Gibbs'), ('Donna', 'Ganz'), ('Donna', 'Kelly'), ('Donna', 'Littleton'), ('Donna', 'Mc Intyre'), ('Donna', 'Mcintyre'), ('Donna', 'Millington'), ('Donna', 'Rubin'), ('Donna', 'Stockton'), ('Donna', 'Vekic'), ('Donnaroza', 'Gouvernante'), ('Doo Ri', 'Na'), ('Dora', 'Alavantic'), ('Dora', 'Andrejszki'), ('Dora', 'Bechliwanis'), ('Dora', 'Delgadillo'), ('Dora', 'Djilianova'), ('Dora', 'Kiss'), ('Dora', 'Krstulovic'), ('Dora', 'Pavlinic'), ('Dora', 'Rangelova'), ('Dora', 'Somossy'), ('Dora', 'Vajdic'), ('Doria', 'Khetib'), ('Dorian', 'Driessen'), ('Doriane', 'Caporusso'), ('Dorien', 'Cuypers'), ('Dorien', 'Wamelink'), ('Doris', 'Graus'), ('Doris', 'Hart'), ('Doris', 'Kurtela'), ('Doris', 'Kuselj'), ('Doron', 'Muravnik'), ('Dorota', 'Dziekonska'), ('Dorota', 'Glowacka'), ('Dorota', 'Markowska'), ('Dorota', 'Szczygielska'), ('Dorota', 'Zaboklicka'), ('Dorotea', 'Kraljevic'), ('Doroteja', 'Eric'), ('Dorothee', 'Buschhuter'), ('Dorothee', 'Kurz'), ('Dorothy', 'Knode'), ('Dorothy', 'Whitely'), ('Dorothy', 'Zerbst'), ('Dorothy Jane', 'Suarez'), ('Dorottya', 'Magas'), ('Dorra', 'Hammami'), ('Dorra', 'Roumani'), ('Dorte', 'Ekner'), ('Dorthea', 'Faa Hviding'), ('Douglas', 'Wink'), ('Dragana', 'Bozovic'), ('Dragana', 'Ilic'), ('Dragana', 'Jakovljevic'), ('Dragana', 'Ognenovska'), ('Dragana', 'Pojuzina'), ('Dragana', 'Radisic'), ('Dragana', 'Zaric'), ('Dragica', 'Joksimovic'), ('Dragica', 'Lozina'), ('Dragica', 'Stanojlovic'), ('Draginja', 'Vukovic'), ('Dredi Inia', 'Ghinda'), ('Drousile', 'Dzeubou'), ('Dubravka', 'Cupac'), ('Duda', 'Ewa'), ('Dugleisy', 'Linares'), ('Duk Hee', 'Lee'), ('Dunja', 'Antunovic'), ('Dunja', 'Stamenkovic'), ('Dunja', 'Sunkic'), ('Dvora', 'Marsha'), ('Dwi', 'Ariyana'), ('Dyan', 'Castillejo'), ('Dyane', 'Aixendri'), ('Dyane Estefania', 'Barcena Del Bosque'), ('Dyphany', 'Wilkinson'), ('Dzenita', 'Zverotic'), ('Dzina', 'Milovanovic'), ('E', 'Kogl'), ('E', 'Staples'), ('Ebba', 'Rosberg'), ('Ebba', 'Unden'), ('Ebelechukwu', 'Chukwuweteli'), ('Ebere', 'Fortune'), ('Ebony', 'Panoho'), ('Ebru Zeynep', 'Yazgan'), ('Ecaterina', 'Ivasco'), ('Ecaterina', 'Oproiu'), ('Ecaterina', 'Vasenina'), ('Ece', 'Firat'), ('Ece', 'Tan'), ('Ece', 'Unlu'), ('Eda', 'Bora'), ('Edda', 'Buding'), ('Edda', 'Herdy'), ('Eden', 'Doliveira'), ('Eden', 'Konorti'), ('Eden', 'Marama'), ('Eden', 'Richardson'), ('Eden', 'Silva'), ('Eden Megan', 'Chang'), ('Eden Sophie', 'Schlagenhauf'), ('Edie', 'Carell'), ('Edilyn', 'Balanga Margate'), ('Edina', 'Gallovits Hall'), ('Edina', 'Gobol'), ('Edit', 'Bagoly'), ('Edit', 'Pakay'), ('Edit Katalin', 'Suhajda'), ('Edita', 'Liachoviciute'), ('Edita', 'Milos'), ('Edita', 'Raca'), ('Edith', 'Nunes Bersot'), ('Edith', 'Tatana'), ('Edith', 'Tosner'), ('Edith', 'Winkens'), ('Edith Ayelen', 'Monzon'), ('Edmee', 'Morin Kougoucheff'), ('Edna', 'Espinosa'), ('Edna', 'Olivarez'), ('Edna', 'Vasquez'), ('Eduarda', 'Ferreira'), ('Eduarda', 'Piai'), ('Eduarda Nardi Dos', 'Santos'), ('Edurne', 'Tabernero'), ('Edyta', 'Cieplucha'), ('Ee Yi Olivia', 'Koh'), ('Eeshita', 'Pande'), ('Eetee', 'Maheta'), ('Efrat', 'Mishor'), ('Efrat', 'Zlotikamin'), ('Efriliya', 'Herlina'), ('Ege', 'Kurtoglu'), ('Ege', 'Tomey'), ('Egle', 'Petrauskaite'), ('Ei', 'Iida'), ('Eiko', 'Katayama'), ('Eiko', 'Toba'), ('Eileen', 'Tell'), ('Eimear', 'Maher'), ('Eimi', 'Friant'), ('Eirdis', 'Ragnarsdottir'), ('Eirini', 'Georgatou'), ('Eirini', 'Vasileiadou'), ('Eka', 'Vepkhvadze'), ('Eka', 'Zhvania'), ('Ekaterina', 'Abaeva'), ('Ekaterina', 'Afinogenova'), ('Ekaterina', 'Alay'), ('Ekaterina', 'Alekseenko'), ('Ekaterina', 'Alexandrova'), ('Ekaterina', 'Burduli'), ('Ekaterina', 'Bychkova'), ('Ekaterina', 'Chatzisavidou'), ('Ekaterina', 'Davletova'), ('Ekaterina', 'Donetskova'), ('Ekaterina', 'Dranets'), ('Ekaterina', 'Dzehalevich'), ('Ekaterina', 'Grib'), ('Ekaterina', 'Grinevich'), ('Ekaterina', 'Hirtopanu'), ('Ekaterina', 'Ilina'), ('Ekaterina', 'Ivanova'), ('Ekaterina', 'Jeritsheva'), ('Ekaterina', 'Kamendova'), ('Ekaterina', 'Kavoun'), ('Ekaterina', 'Kazionova'), ('Ekaterina', 'Kholopenko'), ('Ekaterina', 'Kirianova'), ('Ekaterina', 'Kiseleva'), ('Ekaterina', 'Klyueva'), ('Ekaterina', 'Komarova'), ('Ekaterina', 'Korzhova'), ('Ekaterina', 'Kosminskaya'), ('Ekaterina', 'Koubinina'), ('Ekaterina', 'Kouznetchenkova'), ('Ekaterina', 'Kozhokhina'), ('Ekaterina', 'Krylova'), ('Ekaterina', 'Kunina'), ('Ekaterina', 'Kurtukova'), ('Ekaterina', 'Kuznetsova'), ('Ekaterina', 'Lavrikova'), ('Ekaterina', 'Lopes'), ('Ekaterina', 'Lukomskaya'), ('Ekaterina', 'Lushnikova'), ('Ekaterina', 'Makarenko'), ('Ekaterina', 'Makarova'), ('Ekaterina', 'Manekina'), ('Ekaterina', 'Mitroshina'), ('Ekaterina', 'Nikitina'), ('Ekaterina', 'Nossik'), ('Ekaterina', 'Ostapenko'), ('Ekaterina', 'Ovcharenko'), ('Ekaterina', 'Paniouchkina'), ('Ekaterina', 'Pogrebniak'), ('Ekaterina', 'Popova'), ('Ekaterina', 'Prozorova'), ('Ekaterina', 'Pushkareva'), ('Ekaterina', 'Rosianu'), ('Ekaterina', 'Semenova'), ('Ekaterina', 'Shalimova'), ('Ekaterina', 'Shulaeva'), ('Ekaterina', 'Strogonova'), ('Ekaterina', 'Sysoeva'), ('Ekaterina', 'Tikhankina'), ('Ekaterina', 'Tour'), ('Ekaterina', 'Trashchenko'), ('Ekaterina', 'Tretyak'), ('Ekaterina', 'Tsiklauri'), ('Ekaterina', 'Tugarinova'), ('Ekaterina', 'Verho'), ('Ekaterina', 'Vishnevskaya'), ('Ekaterina', 'Yakovleva'), ('Ekaterina', 'Yashina'), ('Ekaterina', 'Zaitseva'), ('Ekaterina', 'Zapadalova'), ('Ekaterine', 'Gorgodze'), ('Ekin', 'Bahitli'), ('Ekin', 'Ercetin'), ('Ekin', 'Gunaysu'), ('Ekin', 'Koca'), ('Ela', 'Kaludjer'), ('Elaine', 'Genovese'), ('Elaine', 'Gibrayl'), ('Elaine', 'Van Zyl'), ('Elana', 'Agranovich'), ('Elana', 'Clark'), ('Elanqua', 'Griffin'), ('Elba', 'Kasum'), ('Elba', 'Pinero'), ('Eldina', 'Fazlic'), ('Eleanna', 'Koukouvitaki'), ('Eleanor', 'Dean'), ('Eleanor', 'Deaves'), ('Eleanor', 'Lika'), ('Eleanor', 'Mcfadden'), ('Eleanor', 'Peters'), ('Eleanora', 'Dumitrescu'), ('Electra', 'Henry'), ('Eleftheria', 'Gkogkou'), ('Eleftheria', 'Makromaridou'), ('Elen', 'Chelidze'), ('Elena', 'Andrei'), ('Elena', 'Antonova'), ('Elena', 'Arabadji'), ('Elena', 'Baltacha'), ('Elena', 'Baranova'), ('Elena', 'Bavassano'), ('Elena', 'Belenova'), ('Elena', 'Bertoia'), ('Elena', 'Besedova'), ('Elena', 'Bogdan'), ('Elena', 'Bouloux'), ('Elena', 'Bovina'), ('Elena', 'Branker'), ('Elena', 'Brioukhovets'), ('Elena', 'Burrone'), ('Elena', 'Caldes Marques'), ('Elena', 'Cerezo Codina'), ('Elena', 'Chalova'), ('Elena', 'Chernyakova'), ('Elena', 'Cordano'), ('Elena', 'Corsini'), ('Elena', 'Cortimiglia'), ('Elena', 'De Mendoza'), ('Elena', 'De Santis'), ('Elena', 'Dementieva'), ('Elena', 'Di Battista'), ('Elena', 'Eliseenko'), ('Elena', 'Fayner'), ('Elena', 'Fontelles'), ('Elena', 'Gantcheva'), ('Elena', 'Garcia Garrido'), ('Elena', 'Giurgiu Dorina'), ('Elena', 'Golovnyova'), ('Elena', 'Granaturova'), ('Elena', 'Grazioso'), ('Elena', 'Griessner'), ('Elena', 'Guerra'), ('Elena', 'Jamshidi'), ('Elena', 'Jetcheva'), ('Elena', 'Jirnova'), ('Elena', 'Juricich'), ('Elena', 'Kazakova'), ('Elena', 'Kokkinaki'), ('Elena', 'Kovalchuk'), ('Elena', 'Krutko'), ('Elena', 'Kulikova'), ('Elena', 'Kuznetsova'), ('Elena', 'Likhovtseva'), ('Elena', 'Luri'), ('Elena', 'Makarova'), ('Elena', 'Maltseva'), ('Elena', 'Malygina'), ('Elena', 'Mandzhukova'), ('Elena', 'Manevska'), ('Elena', 'Marraghini'), ('Elena', 'Micheloni'), ('Elena', 'Milovanovic'), ('Elena', 'Mitrofanova'), ('Elena', 'Nartsissova'), ('Elena', 'Ordinaga'), ('Elena', 'Oslyakova'), ('Elena', 'Pampoulova'), ('Elena', 'Pavolucci'), ('Elena', 'Petrenko'), ('Elena', 'Petrucciano'), ('Elena', 'Pioppo'), ('Elena', 'Pogorelova'), ('Elena', 'Poliakova'), ('Elena', 'Ravnlanska'), ('Elena', 'Rief'), ('Elena', 'Rutigliano'), ('Elena', 'Ryabtseva'), ('Elena', 'Rybakina'), ('Elena', 'Salvador Reja'), ('Elena', 'Samoilo'), ('Elena', 'Sava'), ('Elena', 'Savoldi'), ('Elena', 'Silina'), ('Elena', 'Stoianova'), ('Elena', 'Stoilova'), ('Elena', 'Subirats'), ('Elena', 'Tatarkova'), ('Elena', 'Toulgaridou'), ('Elena', 'Trencheva'), ('Elena', 'Tsagalidou'), ('Elena', 'Tudor'), ('Elena', 'Uzunova'), ('Elena', 'Van Der Sypt'), ('Elena', 'Vesnina'), ('Elena', 'Vianello'), ('Elena', 'Villatoro'), ('Elena', 'Volobueva'), ('Elena', 'Voropaeva'), ('Elena', 'Wagner'), ('Elena', 'Yaryshka'), ('Elena', 'Zenko'), ('Elena Gabriela', 'Ruse'), ('Elena Madalina', 'Capraru'), ('Elena Stela', 'Latea'), ('Elena Teodora', 'Cadar'), ('Elene', 'Mchedlidze'), ('Eleni', 'Betsiou'), ('Eleni', 'Christofi'), ('Eleni', 'Daniilidou'), ('Eleni', 'Kangalou'), ('Eleni', 'Karakeke'), ('Eleni', 'Konstantinidou'), ('Eleni', 'Kordolaimi'), ('Eleni', 'Pilava Papanikolaou'), ('Eleni', 'Rossides'), ('Eleni', 'Stamati'), ('Elenora', 'Pedonese'), ('Eleonor', 'Picot'), ('Eleonora', 'Agnolozzi'), ('Eleonora', 'Cecchinato'), ('Eleonora', 'Dickinger'), ('Eleonora', 'Fornai'), ('Eleonora', 'Iannozzi'), ('Eleonora', 'Liga'), ('Eleonora', 'Luciani'), ('Eleonora', 'Maserati'), ('Eleonora', 'Mindiyarova'), ('Eleonora', 'Molinaro'), ('Eleonora', 'Punzo'), ('Eleonora', 'Sidjemileva'), ('Eleonora', 'Taddei'), ('Eleonora', 'Vegliante'), ('Eleonore', 'Barrere'), ('Eleonore', 'Tchakarova'), ('Elexia', 'Stivala'), ('Elfia', 'Nizarwan'), ('Eliana', 'Antequera'), ('Eliana', 'Bazan'), ('Eliana', 'Della Vedova'), ('Eliana Elizabeth', 'Pistone'), ('Eliana Maria', 'Lopez Pappalardo'), ('Eliana Sol', 'Gonzalez'), ('Elianne', 'Douglas Miron'), ('Elianne Magali', 'Matto Chaparro'), ('Elien', 'Crombez'), ('Eliessa', 'Vanlangendonck'), ('Elif', 'Turgul'), ('Elin', 'Hellberg'), ('Elin', 'Stahl Johansson'), ('Elin', 'Winkler'), ('Elina', 'Arutyunova'), ('Elina', 'Avanesyan'), ('Elina', 'Bairos'), ('Elina', 'Durchman'), ('Elina', 'Gasanova'), ('Elina', 'Joronen'), ('Elina', 'Nepliy'), ('Elina', 'Sharipova'), ('Elina', 'Sichakova'), ('Elina', 'Svitolina'), ('Elina', 'Vikhryanova'), ('Elinor', 'Storkaas'), ('Elisa', 'Balsamo'), ('Elisa', 'Belleri'), ('Elisa', 'Brentino'), ('Elisa', 'Celi'), ('Elisa', 'Cordovani'), ('Elisa', 'Elhadj'), ('Elisa', 'Gugnali'), ('Elisa', 'Idini'), ('Elisa', 'Innocenti'), ('Elisa', 'Lauri'), ('Elisa', 'Mansell'), ('Elisa', 'Patta'), ('Elisa', 'Penalvo'), ('Elisa', 'Peth'), ('Elisa', 'Salis'), ('Elisa', 'Sarmiento Aranda'), ('Elisa', 'Scarpetta'), ('Elisa', 'Tassotti'), ('Elisa', 'Villa'), ('Elisa', 'Visentin'), ('Elisa Andrea', 'Camerano'), ('Elisa Mai', 'Koonik'), ('Elisa Teodora', 'Sararu'), ('Elisabet', 'Strand'), ('Elisabeth', 'Abanda'), ('Elisabeth', 'Andryukhova'), ('Elisabeth', 'Bahn'), ('Elisabeth', 'Chantraine'), ('Elisabeth', 'Du Fresne Girard'), ('Elisabeth', 'Ekblom'), ('Elisabeth', 'Fournier'), ('Elisabeth', 'Habeler'), ('Elisabeth', 'Lyukshinova'), ('Elisabeth', 'Pleyer'), ('Elisabeth', 'Unge'), ('Elisabetta', 'Gianella'), ('Elisabetta', 'Monduzzi'), ('Elisaveta', 'Baer'), ('Elisaveta', 'Pironkova'), ('Elise', 'Burgin'), ('Elise', 'Crozier'), ('Elise', 'Mertens'), ('Elise', 'Tamaela'), ('Elise', 'Van Heuvelen'), ('Elisha', 'Gabb'), ('Elisha', 'Hande'), ('Eliska', 'Kleisnerova'), ('Eliska', 'Kropackova'), ('Eliska', 'Petrackova'), ('Elison', 'Amadio'), ('Elissa', 'Burton'), ('Elitsa', 'Kostova'), ('Elitsa', 'Mileva'), ('Elitza', 'Paunova'), ('Elixane', 'Lechemia'), ('Eliz', 'Maloney'), ('Eliza', 'Askarova'), ('Eliza', 'Eglit'), ('Eliza', 'Long'), ('Eliza', 'Omirou'), ('Eliza', 'Pande'), ('Eliza', 'Rustandar'), ('Eliza Adriana', 'Matache'), ('Eliza Maria', 'Dan'), ('Elizabet', 'Hamaliy'), ('Elizabeta', 'Bauer'), ('Elizabeth', 'Adams'), ('Elizabeth', 'Akutsiya'), ('Elizabeth', 'Alexander'), ('Elizabeth', 'Alina'), ('Elizabeth', 'Allan'), ('Elizabeth', 'Arce'), ('Elizabeth', 'Begley'), ('Elizabeth', 'Bondi'), ('Elizabeth', 'Brito'), ('Elizabeth', 'Burger'), ('Elizabeth', 'Cameron'), ('Elizabeth', 'Daly'), ('Elizabeth', 'Danailova'), ('Elizabeth', 'Dinopoulos'), ('Elizabeth', 'Dolan'), ('Elizabeth', 'Ferris'), ('Elizabeth', 'Fletcher'), ('Elizabeth', 'Freeman Young'), ('Elizabeth', 'Galphin'), ('Elizabeth', 'Gibson'), ('Elizabeth', 'Golovkin'), ('Elizabeth', 'Gordon'), ('Elizabeth', 'James'), ('Elizabeth', 'Johnson'), ('Elizabeth', 'Jones'), ('Elizabeth', 'Kaufman'), ('Elizabeth', 'Kilborn'), ('Elizabeth', 'Kobak'), ('Elizabeth', 'Little'), ('Elizabeth', 'Lumpkin'), ('Elizabeth', 'Mandlik'), ('Elizabeth', 'Means'), ('Elizabeth', 'Meyer'), ('Elizabeth', 'Minter'), ('Elizabeth', 'Nieto'), ('Elizabeth', 'Osborne'), ('Elizabeth', 'Plotkin'), ('Elizabeth', 'Popova'), ('Elizabeth', 'Rafailidis'), ('Elizabeth', 'Schmidt'), ('Elizabeth', 'Schranz'), ('Elizabeth', 'Scotty'), ('Elizabeth', 'Starkie'), ('Elizabeth', 'Tapia'), ('Elizabeth', 'Terry'), ('Elizabeth', 'Thomas'), ('Elizabeth', 'Thoms'), ('Elizabeth', 'Ullathorne'), ('Elizabeth', 'Vlotman'), ('Elizabeth', 'Walker'), ('Elizabeth', 'Wright'), ('Elizabeth Anita Alexandria', 'Profit'), ('Elizaveta', 'Avdeeva'), ('Elizaveta', 'Avdonina'), ('Elizaveta', 'Deykun'), ('Elizaveta', 'Ianchuk'), ('Elizaveta', 'Ignatova'), ('Elizaveta', 'Kamzolova'), ('Elizaveta', 'Kardaseva'), ('Elizaveta', 'Khabarova'), ('Elizaveta', 'Koklina'), ('Elizaveta', 'Kulichkova'), ('Elizaveta', 'Kuzmina'), ('Elizaveta', 'Luzina'), ('Elizaveta', 'Sokolova'), ('Elizaveta', 'Titova'), ('Elizaveta', 'Tochilovskaya'), ('Elizaveta', 'Volodko'), ('Elizaveta', 'Voronova'), ('Elizaveta', 'Zaritscaya'), ('Elizaveta', 'Zaytseva'), ('Elizaveta Anna', 'Nemchinov'), ('Elizma', 'Nortje'), ('Elke', 'Clijsters'), ('Elke', 'Escreet'), ('Elke', 'Juul'), ('Elke', 'Lemmens'), ('Elke', 'Renz'), ('Elke', 'Tiel'), ('Ella', 'Haavisto'), ('Ella', 'Husrefovic'), ('Ella', 'Ionescu'), ('Ella', 'Leivo'), ('Ella', 'Taylor'), ('Ellah', 'Nze'), ('Ellen', 'Allgurin'), ('Ellen', 'Ashley'), ('Ellen', 'Barry'), ('Ellen', 'Delie'), ('Ellen', 'Drieberger'), ('Ellen', 'Grindvold'), ('Ellen', 'Linsenbolz'), ('Ellen', 'Muller'), ('Ellen', 'Nelissen'), ('Ellen', 'Perez'), ('Ellen', 'Svensson'), ('Ellen', 'Tsay'), ('Ellen', 'Walliser'), ('Ellen', 'Yeung'), ('Elli', 'Kokoliou'), ('Ellie', 'Douglas'), ('Ellie', 'Halbauer'), ('Ellie', 'Murphy'), ('Ellie', 'Tsimbilakis'), ('Ellie', 'Yates'), ('Ellie Rose', 'Griffiths'), ('Elliesa', 'Ball'), ('Ellina', 'Kornilova'), ('Ellinore', 'Lightbody'), ('Elly', 'Appel'), ('Elly', 'Hakami'), ('Elly', 'Strother'), ('Ellyse', 'Hamlin'), ('Elna', 'De Villiers'), ('Elna', 'Reinach'), ('Elne', 'Barnard'), ('Eloah', 'Lopes'), ('Elodie', 'Busson'), ('Elodie', 'Caillat'), ('Elodie', 'Erakovic'), ('Elodie', 'Le Bescond'), ('Elodie', 'Leune'), ('Elodie', 'Naegellen'), ('Elodie', 'Navarro'), ('Elodie', 'Rogge Dietrich'), ('Elodie', 'Rouzier'), ('Eloisa Maria', 'Compostizo De Andres'), ('Eloise', 'Gournay'), ('Elora', 'Dabija'), ('Elpida', 'Malamou'), ('Elpida', 'Papanelopoulou'), ('Elpis', 'Alexandrou'), ('Elrien', 'De Villiers'), ('Els', 'Callens'), ('Elsa', 'Morel'), ('Elsa', 'Oriain'), ('Elsa', 'Pellegrinelli'), ('Elsa', 'Rodriguez'), ('Elsa', 'Serrano Eduards'), ('Elsa', 'Trigueros Sanchez'), ('Elsie', 'Veentjer Spruyt'), ('Elvira', 'Edstrom'), ('Elvira', 'Juravliova'), ('Elvira', 'Serrot Geminelli'), ('Elvira', 'Weisenberger'), ('Elvira', 'Yussupova'), ('Elya', 'Constanta'), ('Elyne', 'Boeykens'), ('Elyse', 'Edwards'), ('Elyse', 'Lavender'), ('Elyse', 'Steiner'), ('Elysia', 'Bolton'), ('Elyzaveta', 'Tymchenko'), ('Elza', 'Bellens'), ('Elzbieta', 'Iwaniuk'), ('Elzbieta', 'Kowalczyk'), ('Elzbieta', 'Slesicka'), ('Elze', 'Potgieter'), ('Elzyata', 'Sovaeva'), ('Ema', 'Barkovic'), ('Ema', 'Burgic'), ('Ema', 'Gil Pires'), ('Ema', 'Janaskova'), ('Ema', 'Lazic'), ('Ema', 'Mikulcic'), ('Ema', 'Mulalic'), ('Ema', 'Polic'), ('Ema', 'Vasic'), ('Eman', 'Metwaly'), ('Eman', 'Shahab'), ('Emanuela', 'Brusati'), ('Emanuela', 'Falleti'), ('Emanuela', 'Sangiorgi'), ('Emanuela', 'Zardo'), ('Emeka', 'Mayes'), ('Emel', 'Abibula'), ('Emelie', 'Akerbrandt Bengtsson'), ('Emelie', 'Reutersward'), ('Emelie Luisa', 'Schwarte'), ('Emeline', 'Dartron'), ('Emelyn', 'Starr'), ('Emerald', 'Able'), ('Emese', 'Kardhordo'), ('Emi', 'Hirayama'), ('Emi', 'Mutaguchi'), ('Emi', 'Nozaki'), ('Emi', 'Sakurai'), ('Emi', 'Yamaguchi'), ('Emiko', 'Ito'), ('Emiko', 'Okagawa'), ('Emiko', 'Sakaguchi'), ('Emiko', 'Takahashi'), ('Emilia', 'Anderson'), ('Emilia', 'Arnaudovska'), ('Emilia', 'Banos Gregorians'), ('Emilia', 'Bindi'), ('Emilia', 'Dejonckheere'), ('Emilia', 'Desiderio'), ('Emilia', 'Granstrom'), ('Emilia', 'Kopczynska'), ('Emilia', 'Occhipinti'), ('Emilia', 'Salo'), ('Emilia', 'Tenizbaeva'), ('Emilia', 'Yorio'), ('Emiliana', 'Arango'), ('Emiliana', 'Spinardi'), ('Emilie', 'Bacquet'), ('Emilie', 'Burrer'), ('Emilie', 'Elde'), ('Emilie', 'Elsvad'), ('Emilie', 'Fisher'), ('Emilie', 'Francati'), ('Emilie', 'Lindh Gallagher'), ('Emilie', 'Logiacco'), ('Emilie', 'Loit'), ('Emilie', 'Scribot'), ('Emilie', 'Trouche'), ('Emilie', 'Van Boekel'), ('Emilie', 'Vanhuysberghe'), ('Emilie', 'Viqueira'), ('Emilija', 'Ceranic'), ('Emilija', 'Dancetovic'), ('Emilija', 'Kokanovic'), ('Emiliya', 'Gadzhieva'), ('Emilse', 'Rapponi Longo'), ('Emily', 'Applegate'), ('Emily', 'Appleton'), ('Emily', 'Arbuthnott'), ('Emily', 'Arnott'), ('Emily', 'Askew'), ('Emily', 'Bond'), ('Emily', 'Burns'), ('Emily', 'Casteleyn'), ('Emily', 'Crowe'), ('Emily', 'Da Silva Chang'), ('Emily', 'Dowdeswell Koti'), ('Emily', 'Dunne'), ('Emily', 'Fanning'), ('Emily', 'Foster'), ('Emily', 'Fraser'), ('Emily', 'Gelber'), ('Emily', 'Gitman'), ('Emily', 'Haylock'), ('Emily', 'Hewson'), ('Emily', 'Jacobs'), ('Emily', 'Kwok'), ('Emily', 'Leenen'), ('Emily', 'Leonardi'), ('Emily', 'Madill'), ('Emily', 'Mazzola'), ('Emily', 'Mowery'), ('Emily', 'Ottsen'), ('Emily', 'Quin'), ('Emily', 'Rodbourne'), ('Emily', 'Seibold'), ('Emily', 'Smith'), ('Emily', 'Southall'), ('Emily', 'Stellato'), ('Emily', 'Webley Smith'), ('Emily', 'Welker'), ('Emily', 'Wolf'), ('Emily', 'Zanussi'), ('Emily Ann', 'Marker'), ('Emily J', 'Harman'), ('Emily Theresa', 'Weiland'), ('Emina', 'Bektas'), ('Emira', 'Spaho'), ('Emma', 'Allen'), ('Emma', 'Alos Chiquillo'), ('Emma', 'Brust'), ('Emma', 'Buczko'), ('Emma', 'Decoste'), ('Emma', 'Devine'), ('Emma', 'Eerola'), ('Emma', 'Ek'), ('Emma', 'Flood'), ('Emma', 'Gott'), ('Emma', 'Haakansson'), ('Emma', 'Hayman'), ('Emma', 'Hiles'), ('Emma', 'Hurst'), ('Emma', 'Isberg'), ('Emma', 'Janssen'), ('Emma', 'Kidd'), ('Emma', 'Laine'), ('Emma', 'Lene'), ('Emma', 'Lioi'), ('Emma', 'Marti'), ('Emma', 'Milicevic'), ('Emma', 'Murphy'), ('Emma', 'Navarro'), ('Emma', 'Nurgazieva'), ('Emma', 'Onila'), ('Emma', 'Reyes Baca'), ('Emma', 'Roenholt'), ('Emma', 'Smith'), ('Emma', 'Taikie'), ('Emma', 'Tomlinson'), ('Emma', 'Tullett'), ('Emma', 'Zuleta'), ('Emma Christine', 'Higuchi'), ('Emma Erin', 'Kiernan'), ('Emma Marie', 'Jensen'), ('Emma Sofia', 'Helisten'), ('Emmanouela', 'Antonakis'), ('Emmanuelle', 'Curutchet'), ('Emmanuelle', 'De Beer'), ('Emmanuelle', 'Derly'), ('Emmanuelle', 'Duval'), ('Emmanuelle', 'Edon'), ('Emmanuelle', 'Folcher'), ('Emmanuelle', 'Gagliardi'), ('Emmanuelle', 'Girard'), ('Emmanuelle', 'Poncetta'), ('Emmanuelle', 'Salas'), ('Emmanuelle', 'Zowczak'), ('Emmerentia', 'Marx'), ('Emmy', 'Fritz Krockow'), ('Emmy', 'Ho'), ('Emna', 'Fahmia'), ('Emy', 'Damiani'), ('En Pei', 'Huang'), ('En Shuo', 'Liang'), ('En Yue', 'Ma'), ('Ena', 'Babic'), ('Ena', 'Brankovic'), ('Ena', 'Kajevic'), ('Ena', 'Ovcina'), ('Ena', 'Shibahara'), ('Ena', 'Shimomura'), ('Ene', 'Ogbu'), ('Engela', 'Olivier'), ('Enni', 'Zander'), ('Enola', 'Chiesa'), ('Enrica', 'Ditta'), ('Eny', 'Sulistyowati'), ('Epiphany B', 'Turner'), ('Erandi Xanat', 'Martinez Hernandez'), ('Erda', 'Crous'), ('Erem', 'Akyurt'), ('Eri', 'Hozumi'), ('Eri', 'Mikami'), ('Eri', 'Murata'), ('Eri', 'Nozawa'), ('Eri', 'Ohmi'), ('Eri', 'Shimizu'), ('Erica', 'Adams'), ('Erica', 'Biro'), ('Erica', 'Braschi'), ('Erica', 'Kosova'), ('Erica', 'Krauth'), ('Erica', 'Krisan'), ('Erica', 'Oneill'), ('Erica', 'Oosterhout'), ('Erica', 'Robertson'), ('Erica', 'Sauer'), ('Erica', 'Tedoldi'), ('Erica', 'Tironi'), ('Ericka', 'Penaranda'), ('Ericka Roxana', 'Rivero'), ('Erika', 'Botalieva'), ('Erika', 'Clarke Magana'), ('Erika', 'De Lone'), ('Erika', 'Drozd Pereira'), ('Erika', 'Faba Lopez'), ('Erika', 'Hendsel'), ('Erika', 'Kuttler'), ('Erika', 'Miyamoto'), ('Erika', 'Ohlsson'), ('Erika', 'Perez'), ('Erika', 'Pineider'), ('Erika', 'Reggiane'), ('Erika', 'Sema'), ('Erika', 'Smith'), ('Erika', 'Sugamura'), ('Erika', 'Takao'), ('Erika', 'Valdes'), ('Erika', 'Venere'), ('Erika', 'Villalobos Morsink'), ('Erika', 'Vogelsang'), ('Erika', 'Yakhimovich'), ('Erika', 'Zanchetta'), ('Erika Abigail', 'Gauto Martinez'), ('Eriko', 'Mizuno'), ('Erin', 'Billett'), ('Erin', 'Boast'), ('Erin', 'Boisclair'), ('Erin', 'Burdette'), ('Erin', 'Clark'), ('Erin', 'Dignam'), ('Erin', 'Faulkner'), ('Erin', 'Heeder'), ('Erin', 'Jobe'), ('Erin', 'Larner'), ('Erin', 'Liefeld'), ('Erin', 'Paul'), ('Erin', 'Routliffe'), ('Erin', 'Troedson'), ('Erin', 'Vierra'), ('Erin', 'Wilbert'), ('Erin Carol', 'Stephens'), ('Erin Kane', 'Rodriguez'), ('Erina', 'Akizu'), ('Erina', 'Hayashi'), ('Erina', 'Kikuchi'), ('Erina', 'Nomiya'), ('Erzsebet', 'Polgar'), ('Erzsebet', 'Szell'), ('Esen', 'Kokce'), ('Esha', 'Sanghvi'), ('Esme', 'De Villiers'), ('Esme', 'Emanuel'), ('Esmir', 'Hoogendoorn'), ('Esmira', 'Gheisary'), ('Esperanza', 'Vinals Rebassa'), ('Esra', 'Bayburt'), ('Essi', 'Laine'), ('Este', 'Potgieter'), ('Estefania', 'Aldana Estremera'), ('Estefania', 'Balda Alvarez'), ('Estefania', 'Bottini'), ('Estefania', 'Craciun'), ('Estefania', 'Daubiol'), ('Estefania', 'Donnet'), ('Estefania', 'Martinez'), ('Estefania', 'Plaza'), ('Estefania', 'Rolon'), ('Estefania', 'Salvador Martinez'), ('Estefania', 'Vela'), ('Estefania Julieta', 'Valli'), ('Estefiana', 'Greco'), ('Estela', 'Benavides'), ('Estela', 'Perez Somarriba'), ('Estella', 'Jaeger'), ('Estelle', 'Balan'), ('Estelle', 'Cascino'), ('Estelle', 'Gevers'), ('Estelle', 'Guisard'), ('Estelle', 'La Porte'), ('Estelle', 'Mehta'), ('Estelle', 'Metadieu'), ('Estelle', 'Suys'), ('Ester', 'Baschirotto'), ('Ester', 'Goldfeld'), ('Ester', 'Lasheras Varade'), ('Ester', 'Masuri'), ('Esthefhanie Darehly', 'Juarez Rojo'), ('Esther', 'Boyle'), ('Esther', 'Brunn'), ('Esther', 'Hijosa Basarte'), ('Esther', 'Jimoh'), ('Esther', 'Knox'), ('Esther', 'Lopez Alcaraz'), ('Esther', 'Markenstein'), ('Esther', 'Mbugua'), ('Esther', 'Muscat'), ('Esther', 'Rekasch'), ('Esther', 'Ruiz De Ona Plaza'), ('Esther', 'Santiago'), ('Esther', 'Scheirlynck'), ('Esther', 'Stasi'), ('Esther', 'Thebault'), ('Esther', 'Van Londen'), ('Esther', 'Zelaya'), ('Estrella', 'Cabeza Candela'), ('Eszter', 'Molnar'), ('Eszter', 'Palinkas'), ('Ethel', 'Kouniavsky'), ('Etsuko', 'Inoue'), ('Etsuko', 'Kitazaki'), ('Etsuko', 'Yamada'), ('Etti', 'Gans'), ('Eudice Wong', 'Chong'), ('Eudoxia', 'Delisavva'), ('Eudoxia', 'Karaproimou'), ('Eugenia', 'Birioukova'), ('Eugenia', 'Chialvo'), ('Eugenia', 'Dubitshkaya'), ('Eugenia', 'Escarate'), ('Eugenia', 'Ganga'), ('Eugenia', 'Grebenyuk'), ('Eugenia', 'Isopaitis'), ('Eugenia', 'Kranioti'), ('Eugenia', 'Kulikovskaya'), ('Eugenia', 'Lepchenko'), ('Eugenia', 'Lopez Ascarte'), ('Eugenia', 'Maia'), ('Eugenia', 'Maniokova'), ('Eugenia', 'Sanchez'), ('Eugenia', 'Silantieva'), ('Eugenia', 'Subbotina'), ('Eugenia', 'Todaro'), ('Eugenia', 'Vertesheva'), ('Eugenia', 'Yordanova'), ('Eugenie', 'Bouchard'), ('Eugenie', 'Chapelle'), ('Eugeniya', 'Pashkova'), ('Eun Ha', 'Kim'), ('Eun Hee', 'Sung'), ('Eun Hye', 'Cho'), ('Eun Jeong', 'Cha'), ('Eun Jeong', 'Hwang'), ('Eun Jeong', 'Lee'), ('Eun Joo', 'Kang'), ('Eun Ju', 'Han'), ('Eun Jung', 'Kim'), ('Eun Jung', 'Yang'), ('Eun Kyung', 'Kim'), ('Eun Mi', 'Oh'), ('Eun Ok', 'Cho'), ('Eun Se', 'Jang'), ('Eun Sook', 'Han'), ('Eun Sook', 'Huang'), ('Eun Sook', 'Kim'), ('Eun Young', 'Ban'), ('Eun Young', 'Ha'), ('Eun Young', 'Kim'), ('Eunhye', 'Lee'), ('Eunice', 'David'), ('Eunice', 'Paravicini'), ('Eunji', 'Lim'), ('Eva', 'Alexandrova'), ('Eva', 'Alves Comesana'), ('Eva', 'Arteche'), ('Eva', 'Belbl'), ('Eva', 'Bes Ostariz'), ('Eva', 'Birnerova'), ('Eva', 'Borras'), ('Eva', 'Brozova'), ('Eva', 'Castiglioni'), ('Eva', 'De Block'), ('Eva', 'De Jong'), ('Eva', 'Diez'), ('Eva', 'Doman'), ('Eva', 'Dyrberg'), ('Eva', 'Erbova'), ('Eva', 'Escribano Poveda'), ('Eva', 'Fernandez Brugues'), ('Eva', 'Fislova'), ('Eva', 'Fridenzi'), ('Eva', 'Guerrero Alvarez'), ('Eva', 'Haslinghuis'), ('Eva', 'Hrdinova'), ('Eva', 'Husakova'), ('Eva', 'Januskova'), ('Eva', 'Jimenez Sanz'), ('Eva', 'Kadlecova'), ('Eva', 'Kolarovska'), ('Eva', 'Krapl'), ('Eva', 'Krejcova'), ('Eva', 'Lundquist'), ('Eva', 'Lys'), ('Eva', 'Martincova'), ('Eva', 'Martinez Regalado'), ('Eva', 'Melicharova'), ('Eva', 'Nyikos'), ('Eva', 'Paalma'), ('Eva', 'Pera'), ('Eva', 'Pfaff'), ('Eva', 'Pigova'), ('Eva', 'Raszkiewicz'), ('Eva', 'Rodriguez De Las Heras'), ('Eva', 'Rozsavolgyi'), ('Eva', 'Rutarova'), ('Eva', 'Sanz'), ('Eva', 'Sestakova'), ('Eva', 'Siskova'), ('Eva', 'Slaninkova'), ('Eva', 'Sung'), ('Eva', 'Sviglerova'), ('Eva', 'Szabo'), ('Eva', 'Teruel Jover'), ('Eva', 'Trujillo'), ('Eva', 'Valkova'), ('Eva', 'Wacanno'), ('Eva', 'Wang'), ('Eva', 'Zagorac'), ('Eva Lena', 'Olsson'), ('Eva Maria', 'Altenburger'), ('Eva Maria', 'Hoch'), ('Eva Maria', 'Petschnig'), ('Eva Maria', 'Schurhoff'), ('Eva Maria', 'Sjolund'), ('Eva Marie', 'Voracek'), ('Eva Pauline', 'Payet'), ('Evagelia', 'Roussi'), ('Evaggelia', 'Kokkinaki'), ('Evagreth', 'Emmenegger'), ('Evangelina Silvia', 'Migliavacca'), ('Evangeline', 'Du Toit'), ('Evangeline', 'Olivarez'), ('Evangeline', 'Repic'), ('Eve', 'Castaing'), ('Eve', 'Langley'), ('Eve', 'Zimmerman'), ('Evelia', 'Alvarez'), ('Evelien', 'Bostyn'), ('Eveliina', 'Virtanen'), ('Evelin', 'Barboutova'), ('Evelin', 'Taise Baziloni Gouveia'), ('Evelina', 'Hennigor'), ('Evelina', 'Scalise'), ('Eveline', 'Rusdianto'), ('Eveline', 'Vanhyfte'), ('Eveline', 'Widiger'), ('Eveline', 'Wouters'), ('Evelyn', 'Enunwah'), ('Evelyn', 'Fauth'), ('Evelyn', 'Larwig'), ('Evelyn', 'Lim'), ('Evelyn', 'Mayr'), ('Evelyn', 'Moser'), ('Evelyn', 'Otula'), ('Evelyn', 'Platzer'), ('Evelyn', 'Ploner'), ('Evelyn Briyeeth', 'Moreno Rivera'), ('Evelyne', 'Dom'), ('Evelyne', 'Gmeiner'), ('Evelyne', 'Terras'), ('Evelyne Christelle Atticia', 'Tiron'), ('Evgenia', 'Kokkinaki'), ('Evgenia', 'Linetskaya'), ('Evgenia', 'Stupak'), ('Evgenia', 'Subbotina'), ('Evgenia', 'Tarasova'), ('Evgeniya', 'Burdina'), ('Evgeniya', 'Guba'), ('Evgeniya', 'Ivanichenko'), ('Evgeniya', 'Kim'), ('Evgeniya', 'Levashova'), ('Evgeniya', 'Rodina'), ('Evgeniya', 'Svintsova'), ('Evghenia', 'Ablovatchi'), ('Evi', 'Murtiningsih'), ('Evica', 'Koljanin'), ('Evie', 'Dominikovic'), ('Evita', 'Febri Habsari'), ('Evonne', 'Allerkamp'), ('Evonne', 'Cawley'), ('Evy', 'De Mesmaecker'), ('Evy', 'Last'), ('Evy', 'Van Genechten'), ('Ewa', 'Grusiecka'), ('Ewa', 'Kopczynska'), ('Ewa', 'Losinski'), ('Ewa', 'Radzikowska'), ('Ewa', 'Szatkowska'), ('Ewa', 'Zerdecka'), ('Ewelina', 'Augustyniak'), ('Eylul', 'Benli'), ('Ezgi', 'Albayrak'), ('F', 'Dawson'), ('Fabiana', 'Araya'), ('Fabiana', 'Chiaparini'), ('Fabiana', 'Ferraro Arce'), ('Fabiana', 'Gomez'), ('Fabiana', 'Mak'), ('Fabiana', 'Marmiroli'), ('Fabiana', 'Mersan'), ('Fabiana', 'Palcic'), ('Fabiana', 'Pitisci'), ('Fabiana', 'Taverna'), ('Fabienne', 'Clavel'), ('Fabienne', 'Gmeiner'), ('Fabienne', 'Holz'), ('Fabienne', 'Schmidt'), ('Fabienne', 'Thill'), ('Fabienne', 'Vieille Grosjean'), ('Fabienne', 'Vielle Grosjean'), ('Fabienne', 'Vincon'), ('Fabiola', 'Alvarez Carbajo'), ('Fabiola', 'Zuluaga'), ('Fabiola Estefania', 'Cardenas Gutierrez'), ('Fadona Titalyana', 'Kusumawati'), ('Fadzai', 'Masiyazi'), ('Fadzai', 'Mawisire'), ('Faiza Munabari', 'Saskia'), ('Famke', 'Wilhelm'), ('Fang', 'Li'), ('Fang', 'Liu'), ('Fang Chi', 'Tsao'), ('Fang Hsien', 'Wu'), ('Fang Ling', 'Lin'), ('Fang Ying', 'Xun'), ('Fangzhou', 'Liu'), ('Fani', 'Chifchieva'), ('Fanni', 'Gecsek'), ('Fanni', 'Varga'), ('Fanny', 'Bengtsson'), ('Fanny', 'Caramaro'), ('Fanny', 'Cardenas'), ('Fanny', 'Fracassi'), ('Fanny', 'Lundsgard'), ('Fanny', 'Ostlund'), ('Fanny', 'Stollar'), ('Fanny Fatima', 'Vasquez Soza'), ('Farah', 'Abdelaziz'), ('Farah', 'Abougeib Selo'), ('Farah', 'Baklouti'), ('Farah', 'Baracat'), ('Farah', 'Dayoub'), ('Farah', 'Khalil'), ('Farah', 'Mahmood'), ('Farah', 'Mouri'), ('Farah', 'Yasser Abd El Wahab'), ('Farangiz', 'Shamsieva'), ('Faratiana', 'Rasoarilalao'), ('Farel', 'Footman'), ('Farida', 'Agustina'), ('Farida', 'Karaieva'), ('Fariza', 'Abdullaeva'), ('Farley', 'Taylor'), ('Farwa', 'Husain'), ('Fatem Zahra', 'Erraji'), ('Fatima', 'Bizhukova'), ('Fatima', 'El Allami'), ('Fatima', 'Olaso De La Rica'), ('Fatima', 'Santiago'), ('Fatima Zohra', 'Benboubker'), ('Fatima Zohra', 'Boukezzi'), ('Fatima Zorah', 'Bouabdallah'), ('Fatimah', 'Abinu'), ('Fatma', 'Al Janahi'), ('Fatma', 'Al Nabhani'), ('Fatmanur', 'Atilgan'), ('Fatyha', 'Berjane'), ('Fausthyara', 'Pietersz'), ('Faye', 'Moore'), ('Faye', 'Urban'), ('Febri', 'Joana'), ('Federica', 'Arcidiacono'), ('Federica', 'Balzani'), ('Federica', 'Benitez Zafra'), ('Federica', 'Bilardo'), ('Federica', 'Bonsignori'), ('Federica', 'Colmari'), ('Federica', 'Dambrosio'), ('Federica', 'Denti'), ('Federica', 'Di Sarra'), ('Federica', 'Fortuni'), ('Federica', 'Grazioso'), ('Federica', 'Haumuller'), ('Federica', 'Lentini'), ('Federica', 'Limone'), ('Federica', 'Maldini'), ('Federica', 'Mordegan'), ('Federica', 'Prati'), ('Federica', 'Pulcino'), ('Federica', 'Quercia'), ('Federica', 'Sema'), ('Federica', 'Severi'), ('Federica', 'Spazzacampagna'), ('Federica', 'Suess'), ('Federica', 'Trevisan'), ('Federica', 'Van Adrichem'), ('Federica Joe', 'Gardella'), ('Feila', 'Mahiddiene'), ('Felicia', 'Hutnick'), ('Felicia', 'Raschiatore'), ('Felicitas', 'Kastner'), ('Felicitas', 'Runkel'), ('Felicity', 'Maltby'), ('Femi', 'Odeyemi Musa'), ('Femke', 'Van Diemen'), ('Ferdaous', 'Bahri'), ('Feriel', 'Esseghir'), ('Feriel', 'Mahbouli'), ('Fernanda', 'Aranda'), ('Fernanda', 'Astete'), ('Fernanda', 'Bini'), ('Fernanda', 'Brito'), ('Fernanda', 'Caputi'), ('Fernanda', 'Castillo Huerta'), ('Fernanda', 'Contreras Gomez'), ('Fernanda', 'Dias'), ('Fernanda', 'Faria'), ('Fernanda', 'Ferreira'), ('Fernanda', 'Guilhaume Correa'), ('Fernanda', 'Hermenegildo'), ('Fernanda', 'Labrana'), ('Fernanda', 'Luiz'), ('Fernanda', 'Martins'), ('Fernanda', 'Oliveira Da Silva'), ('Fernanda', 'Perrotta'), ('Fernanda', 'Rodriguez Navarro'), ('Fernanda', 'Sala'), ('Fernanda', 'Sandoval'), ('Fernanda', 'Soares'), ('Fernanda', 'Tsucamoto'), ('Fernanda', 'Vargas'), ('Fernanda', 'Vlasak'), ('Fernanda', 'Zacouteguy'), ('Fernanda Luvizotto Do', 'Amaral'), ('Ferny', 'Angeles Paz'), ('Feronika', 'Katarina'), ('Feruzabonu', 'Saidova'), ('Fiana', 'Meineck'), ('Fidana', 'Khalilzada'), ('Filipa', 'Correia'), ('Filipa', 'Gabrovska'), ('Filipa', 'Ribeiro'), ('Filomena', 'Nisi'), ('Fiona', 'Arrese Mata'), ('Fiona', 'Barrett'), ('Fiona', 'Codino'), ('Fiona', 'Ferro'), ('Fiona', 'Ganz'), ('Fiona', 'Gervais'), ('Fiona', 'Gracia Tjipto'), ('Fiona', 'Keasberry'), ('Fiona', 'Lishman'), ('Fiona', 'Long'), ('Fiona', 'Martin'), ('Fiona', 'Mckenzie'), ('Fiona', 'Moffitt'), ('Fiona', 'Reid'), ('Fiona', 'Stoner'), ('Fiorella', 'Bonicelli'), ('Fiorella', 'Jerardino'), ('Fiorella', 'Nocino'), ('Fiorella', 'Zecchino'), ('Fiorella Maria', 'Jarufe'), ('Flaminia Maria', 'Valci'), ('Flavia', 'Borges'), ('Flavia', 'Dechandt Araujo'), ('Flavia', 'Guimaraes Bueno'), ('Flavia', 'Gutierrez'), ('Flavia', 'Mignola'), ('Flavia', 'Nagayama'), ('Flavia', 'Pennetta'), ('Flavia', 'Porru'), ('Flavia', 'Rezende'), ('Fleida Jan', 'Pila'), ('Fleur', 'Broughton'), ('Fleur', 'Goedkoop'), ('Fleur', 'Van Haasteren'), ('Floor', 'Vioen'), ('Flor', 'Bayon'), ('Flor', 'Reyes'), ('Flora', 'Birnbaum'), ('Flora', 'Perfetti'), ('Flore', 'Wagner'), ('Florea De Maria', 'Urrea'), ('Florella', 'Moggia'), ('Florence', 'Abbott'), ('Florence', 'Boucard'), ('Florence', 'De La Courtie Billat'), ('Florence', 'De Vrye'), ('Florence', 'Fleury'), ('Florence', 'Gauvain'), ('Florence', 'Guedy'), ('Florence', 'Haring'), ('Florence', 'Mbugua'), ('Florence', 'Na'), ('Florencia', 'Basile'), ('Florencia', 'Camperchioli'), ('Florencia', 'Devincenti'), ('Florencia', 'Dezotti'), ('Florencia', 'Di Biasi'), ('Florencia', 'Garcia Vazquez'), ('Florencia', 'Labat'), ('Florencia', 'Magni'), ('Florencia', 'Massardo Brain'), ('Florencia', 'Molinero'), ('Florencia', 'Paez'), ('Florencia', 'Romani'), ('Florencia', 'Rossi'), ('Florencia', 'Salvadores'), ('Florencia', 'Sanchez Gil'), ('Florencia Natalia', 'Grieco'), ('Florencia Sofia', 'Galdo'), ('Florenta', 'Mihai'), ('Florentina', 'Curpene'), ('Florentina', 'Hanisch'), ('Florentine', 'Wengler'), ('Florina', 'Nosca'), ('Florinda', 'Videa'), ('Fotini', 'Kapetanaki'), ('Fran', 'Booth'), ('Frana', 'Ugarkovic'), ('Frances', 'Altick'), ('Frances', 'Candy'), ('Frances', 'Giron'), ('Frances', 'Hearn'), ('Frances', 'Hendry'), ('Frances', 'Luff'), ('Frances', 'Maclennan'), ('Frances', 'Miller'), ('Francesca', 'Agazzi'), ('Francesca', 'Aureli'), ('Francesca', 'Bernardi'), ('Francesca', 'Bonomelli'), ('Francesca', 'Bonometti'), ('Francesca', 'Brancato'), ('Francesca', 'Bullani'), ('Francesca', 'Calabrese'), ('Francesca', 'Campigotto'), ('Francesca', 'Cicciu'), ('Francesca', 'Delledera'), ('Francesca', 'Denti'), ('Francesca', 'Di Lorenzo'), ('Francesca', 'Dubras'), ('Francesca', 'Flavell'), ('Francesca', 'Franco'), ('Francesca', 'Frappi'), ('Francesca', 'Fusinato'), ('Francesca', 'Gaida'), ('Francesca', 'Gariglio'), ('Francesca', 'Gonzalez'), ('Francesca', 'Gordigiani'), ('Francesca', 'Guardigli'), ('Francesca', 'Guastella'), ('Francesca', 'Jones'), ('Francesca', 'Kinsella'), ('Francesca', 'LaO'), ('Francesca', 'Lancini'), ('Francesca', 'Lewis'), ('Francesca', 'Lorenzoni'), ('Francesca', 'Lubiani'), ('Francesca', 'Maggi'), ('Francesca', 'Mancini'), ('Francesca', 'Mazzali'), ('Francesca', 'Morini'), ('Francesca', 'Palmigiano'), ('Francesca', 'Piu'), ('Francesca', 'Recalcati'), ('Francesca', 'Rescaldani'), ('Francesca', 'Romano'), ('Francesca', 'Savinelli'), ('Francesca', 'Schiavone'), ('Francesca', 'Segarelli'), ('Francesca', 'Sella'), ('Francesca', 'Stephenson'), ('Francesca', 'Tancredi'), ('Francesca', 'Vaghetti'), ('Francesca', 'Volonte'), ('Francesca', 'Wilkes'), ('Francesca Dorothea', 'Ciutescu'), ('Francesca M', 'Fanchin'), ('Francescamaria', 'Pannarale'), ('Franceske', 'Stroh'), ('Franci', 'Betancourt'), ('Francine', 'Harvey'), ('Francisca', 'Hernandez'), ('Francisca', 'Jorge'), ('Francisca', 'Matos'), ('Francisca', 'Salas'), ('Francisca', 'Sintes Martin'), ('Francisca', 'Vasquez Pongruber'), ('Francisca Emilia', 'Vergara Jofre'), ('Francois', 'Ramos'), ('Francoise', 'Abanda'), ('Francoise', 'Durr'), ('Francoise', 'Gillis'), ('Francoise', 'Repoux'), ('Franke', 'Joosten'), ('Franziska', 'Etzel'), ('Franziska', 'Goettsching'), ('Franziska', 'Goetz'), ('Franziska', 'Klotz'), ('Franziska', 'Koenig'), ('Franziska', 'Kommer'), ('Franziska', 'Lautenschlager'), ('Franziska', 'Sziedat'), ('Franziska Anna', 'Hotter'), ('Franziska Louise', 'Koehler'), ('Franziska Marie', 'Ahrend'), ('Frederica', 'Piedade'), ('Frederika', 'Girsang'), ('Frederike', 'Putthoff'), ('Frederikke', 'Karst'), ('Frederikke', 'Svarre'), ('Frederique', 'Desire'), ('Frederique', 'Martin'), ('Frederique', 'Mauger'), ('Frederique', 'Thibault'), ('Freekje', 'Maas'), ('Freya', 'Christie'), ('Freya', 'Younes'), ('Frida', 'Engblom'), ('Frida', 'Flores'), ('Froydis', 'Forberg'), ('Fruzsina', 'Siklosi'), ('Fukiko', 'Osawa'), ('Fumi', 'Kawatoko'), ('Fumika', 'Kumagai'), ('Fumiko', 'Furuhashi'), ('Fumiko', 'Masuda'), ('Fumiko', 'Yamazaki'), ('Funa', 'Kozaki'), ('Funke', 'Adekola'), ('Furuza', 'Gafurova'), ('Futaba', 'Kubota'), ('G', 'Ayre'), ('G', 'NILAND'), ('G', 'Read'), ('G', 'Thacker'), ('G', 'Wilson'), ('Gabbi', 'Tepic'), ('Gabi', 'Rojas'), ('Gabija', 'Druteikaite'), ('Gabija', 'Talberga'), ('Gabriel', 'Karatantcheva'), ('Gabriela', 'Amezaga'), ('Gabriela', 'Anzola'), ('Gabriela', 'Barreto'), ('Gabriela', 'Beleni'), ('Gabriela', 'Bueno'), ('Gabriela', 'Calderon'), ('Gabriela', 'Castro'), ('Gabriela', 'Cazares'), ('Gabriela', 'Ce'), ('Gabriela', 'Chmelinova'), ('Gabriela', 'Coello'), ('Gabriela', 'Coglitore'), ('Gabriela', 'Dabrowski'), ('Gabriela', 'Delgado'), ('Gabriela', 'Dinu'), ('Gabriela', 'Duarte'), ('Gabriela', 'Duca'), ('Gabriela', 'Duch'), ('Gabriela', 'Eufrasio'), ('Gabriela', 'Feitosa Rezende'), ('Gabriela', 'Ferreira Sanabria'), ('Gabriela', 'Gonzalez'), ('Gabriela', 'Horackova'), ('Gabriela', 'Kucerova'), ('Gabriela', 'Lancman'), ('Gabriela', 'Lastra'), ('Gabriela', 'Marcu'), ('Gabriela', 'Markova'), ('Gabriela', 'Matekova'), ('Gabriela', 'Mejia Tenorio'), ('Gabriela', 'Moreira'), ('Gabriela', 'Mosca'), ('Gabriela', 'Necea'), ('Gabriela', 'Netikova'), ('Gabriela', 'Niculescu'), ('Gabriela', 'Pantuckova'), ('Gabriela', 'Paz'), ('Gabriela', 'Pereira Alves'), ('Gabriela', 'Pintos'), ('Gabriela', 'Porubin'), ('Gabriela', 'Radu'), ('Gabriela', 'Rangel'), ('Gabriela', 'Robledo Loza'), ('Gabriela', 'Roux'), ('Gabriela', 'Sabatini'), ('Gabriela', 'Salloum'), ('Gabriela', 'Scaff Haddad'), ('Gabriela', 'Slavova'), ('Gabriela', 'Srodowski'), ('Gabriela', 'Talaba'), ('Gabriela', 'Tenorio'), ('Gabriela', 'Valdes Garcia'), ('Gabriela', 'Van De Graaf'), ('Gabriela', 'Vazquez'), ('Gabriela', 'Velasco Andreu'), ('Gabriela', 'Vergara'), ('Gabriela', 'Vesela'), ('Gabriela', 'Vieira'), ('Gabriela', 'Villanueva'), ('Gabriela', 'Volekova'), ('Gabriela', 'Yakalieva'), ('Gabriela', 'Ziliotto'), ('Gabriela', 'Zingman'), ('Gabriela Alejandra', 'Carrillo Palacios'), ('Gabriela Alejandra', 'Tamasi'), ('Gabriela Ana Maria', 'Davidescu'), ('Gabriela Andrea', 'Knutson'), ('Gabriela Aura', 'Zarnoveanu'), ('Gabriela Nicole', 'Tatarus'), ('Gabriele', 'Bertasiute'), ('Gabriele', 'Masiliunaite'), ('Gabriella', 'Akopian'), ('Gabriella', 'Barbosa Costa Silva'), ('Gabriella', 'Boboc'), ('Gabriella', 'Bongiovanni'), ('Gabriella', 'Boschiero'), ('Gabriella', 'Castaneda'), ('Gabriella', 'Da Silva Fick'), ('Gabriella', 'De Santis'), ('Gabriella', 'Molnaar'), ('Gabriella', 'Mujan'), ('Gabriella', 'Polito'), ('Gabriella', 'Pollner'), ('Gabriella', 'Reiner'), ('Gabriella', 'Rowe'), ('Gabriella', 'Somers'), ('Gabriella', 'Taylor'), ('Gabriella', 'Umoquit'), ('Gabriella', 'Witdarmono'), ('Gabriella Angelin', 'Alves'), ('Gabrielle', 'Alford'), ('Gabrielle', 'Baker'), ('Gabrielle', 'Desimone'), ('Gabrielle', 'Moxey'), ('Gabrielle', 'Smith'), ('Gabrielle', 'Villiger'), ('Gabrielle', 'Zambotto Interlich'), ('Gabrielle Faith', 'Andrews'), ('Gabrielle Olamide', 'Idera'), ('Gaby', 'Coorengel'), ('Gaby Alexandra', 'Fonseca Tamayo'), ('Gaelle', 'Adda'), ('Gaelle', 'Desperrier'), ('Gaelle', 'Ratianarimanana'), ('Gaelle', 'Rey'), ('Gaelle', 'Taton'), ('Gaelle', 'Widmer'), ('Gaia', 'Bandini'), ('Gaia', 'Lazzaroni'), ('Gaia', 'Morganti'), ('Gaia', 'Sanesi'), ('Gaia', 'Squarcialupi'), ('Gaia', 'Tanganelli'), ('Gail', 'Benedetti'), ('Gail', 'Biggs'), ('Gail', 'Boon'), ('Gail', 'Brodsky'), ('Gail', 'Falkenberg'), ('Gail', 'Hansen'), ('Gail', 'Williams'), ('Gaini', 'Ibrasheva'), ('Gajane', 'Vage'), ('Gal', 'Shemesh'), ('Gal Li', 'Kaplan'), ('Gala', 'Gasset Pinon'), ('Gala', 'Leon Garcia'), ('Galia', 'Angelova'), ('Galina', 'Baksheeva'), ('Galina', 'Bykova'), ('Galina', 'Dimitrova'), ('Galina', 'Fokina'), ('Galina', 'Kostova'), ('Galina', 'Mihaylova'), ('Galina', 'Misiuriova'), ('Galina', 'Selyunina'), ('Galina', 'Semenova'), ('Galina', 'Vishnikina'), ('Galina', 'Voskoboeva'), ('Gally', 'De Wael'), ('Galyna', 'Kosyk'), ('Gamze', 'Basaran'), ('Ganeshi', 'Aniya'), ('Gangothri', 'Sandri'), ('Ganna', 'Akhinko'), ('Ganna', 'Butkevych'), ('Ganna', 'Lukianchykova'), ('Ganna', 'Piven'), ('Ganna', 'Poznikhirenko'), ('Gaobolae', 'Seleka'), ('Garbine', 'Muguruza'), ('Garima', 'Vatwani'), ('Gaya', 'Solomon'), ('Gaye', 'Mcmanus'), ('Gayeong', 'Back'), ('Geanina', 'Mircea'), ('Gebriela', 'Mihaylova'), ('Geeta', 'Manohar'), ('Gema', 'Mendoza'), ('Geminesse', 'Co'), ('Gemma', 'Gallo Gomez'), ('Gemma', 'Heath'), ('Gemma', 'Magin'), ('Gemma', 'Olle Poma'), ('Gemma', 'Praditngam'), ('Gemma', 'Selga'), ('Gemma', 'Triay Pons'), ('Geneva', 'Gnam'), ('Genevieve', 'Barnes'), ('Genevieve', 'Charron'), ('Genevieve', 'Dwyer'), ('Genevieve', 'Etienne'), ('Genevieve', 'Greiwe'), ('Genevieve', 'Houle'), ('Genevieve', 'Lorbergs'), ('Genevieve', 'Luksich'), ('Georgette', 'Wright'), ('Georgia', 'Akrivopoulou'), ('Georgia', 'Brescia'), ('Georgia', 'Craven'), ('Georgia', 'Drummy'), ('Georgia', 'Fernandes'), ('Georgia', 'Gonzalez Massot'), ('Georgia', 'Gulin'), ('Georgia', 'Rose'), ('Georgia Andreea', 'Craciun'), ('Georgiana', 'Patrasc'), ('Georgiana', 'Ruhrig'), ('Georgiana', 'Smyser'), ('Georgie', 'Gent'), ('Georgie', 'Walker'), ('Georgina', 'Axon'), ('Georgina', 'Bastick'), ('Georgina', 'Campins Schonofer'), ('Georgina', 'Carswell'), ('Georgina', 'Dinham'), ('Georgina', 'Fedosenkova'), ('Georgina', 'Garcia Perez'), ('Georgina', 'Hingley'), ('Georgina', 'Palombo'), ('Georgina', 'Segarra Ferrer'), ('Georgina', 'Sellyn'), ('Geraldine', 'Aizenberg'), ('Geraldine', 'Ang'), ('Geraldine', 'Barniville'), ('Geraldine', 'Bimes'), ('Geraldine', 'Dondit'), ('Geraldine', 'Figueiredo'), ('Geraldine', 'Ibrac'), ('Geraldine', 'Leong'), ('Geraldine', 'Rimes'), ('Geraldine', 'Roma'), ('Geraldine', 'Salazar'), ('Gerda', 'Zykute'), ('Gergana', 'Ganeva'), ('Gergana', 'Topalova'), ('Geri', 'Shepard'), ('Germaine', 'Ohaco'), ('Germana', 'Di Natale'), ('Gertruda', 'Nagtzaam'), ('Gertrude', 'Moran'), ('Gertruida', 'Walhof'), ('Gesa', 'Focke'), ('Gesualda', 'Marra'), ('Ghada', 'Alajeely'), ('Ghadihela', 'Flores'), ('Ghazal', 'Pakbaten'), ('Ghazaleh', 'Torkaman'), ('Ghislaine', 'Van Baal'), ('Ghita', 'Benhadi'), ('Ghita', 'Courdi'), ('Ghita', 'Idrissi Kaitouni'), ('Ghita', 'Lahjouji'), ('Ghita', 'Mhaoud'), ('Ghita', 'Nassik'), ('Ghizela', 'Schutte'), ('Ghizlane', 'El Amrani Tchaha'), ('Ghizlane', 'Hatim'), ('Ghizlene', 'Douballah'), ('Gia', 'Mcknight'), ('Giada', 'Calabretta'), ('Giada', 'Clerici'), ('Giadagiovanna', 'Dortona'), ('Giana', 'Cormos'), ('Giana', 'Gutierrez'), ('Gianfranca', 'Devercelli'), ('Gianina', 'Enuta'), ('Gianna', 'Doz'), ('Giannina', 'Minieri'), ('Gigi', 'Fernandez'), ('Gigi', 'Gonzalez'), ('Gilda', 'Robleto'), ('Gill', 'Butterfield'), ('Gillian', 'Assad'), ('Gillian', 'Carter'), ('Gillian', 'Dove'), ('Gillian', 'Kay'), ('Gillian', 'Smith'), ('Gina', 'Diaz Ponce'), ('Gina', 'Fahaiyena'), ('Gina', 'Fogarty'), ('Gina', 'Genovese'), ('Gina', 'Niland'), ('Ginebra', 'Mostajo Estrada'), ('Ginelle  Michelle', 'Samson'), ('Ginet', 'Pinero'), ('Ginette', 'Huberty'), ('Ginette', 'Kaempf'), ('Ginevra', 'Chiara'), ('Ginevra', 'Mugniani'), ('Ginevra', 'Peiretti'), ('Ginger', 'Helgeson Nielsen'), ('Ginny', 'Purdy'), ('Ginte', 'Pociute'), ('Gioconda', 'Pinzon'), ('Gioia', 'Barbieri'), ('Giorgia', 'Bove'), ('Giorgia', 'Brunetti'), ('Giorgia', 'Buchanan'), ('Giorgia', 'Capanni'), ('Giorgia', 'Di Muzio'), ('Giorgia', 'Marchetti'), ('Giorgia', 'Mondani'), ('Giorgia', 'Mortello'), ('Giorgia', 'Nespoli'), ('Giorgia', 'Picano'), ('Giorgia', 'Pinto'), ('Giorgia', 'Poggi'), ('Giorgia', 'Pontoglio'), ('Giorgia', 'Pozzan'), ('Giorgia', 'Sampietro'), ('Giorgia', 'Stridacchio'), ('Giorgia', 'Testa'), ('Giorgie', 'Jones'), ('Giovana', 'Da Costa Rodrigues Alves'), ('Giovana', 'Patitucci'), ('Giovanna', 'Baccarini'), ('Giovanna', 'Carotenuto'), ('Giovanna', 'Di Lauro'), ('Giovanna', 'Ferreira Caputo'), ('Giovanna', 'Fioretti'), ('Giovanna', 'Lombardi'), ('Giovanna', 'Manifacio'), ('Giovanna', 'Palumbo'), ('Giovanna', 'Portiolli'), ('Giovanna', 'Ramos'), ('Giovanna', 'Tomita'), ('Gira', 'Schofield'), ('Girisha', 'Arora'), ('Gisel', 'Brito'), ('Gisela', 'Dulko'), ('Gisela', 'Quental'), ('Gisela', 'Riera Roura'), ('Gisele', 'Dufour'), ('Gisele', 'Faria'), ('Gisele', 'Ferreira'), ('Gisele', 'Miro'), ('Gisella', 'Pere'), ('Giselle', 'Swart'), ('Gislaine', 'Conceicao Farias'), ('Gitte', 'Ejlerskov'), ('Gitte', 'Heynemans'), ('Gitte', 'Moeller'), ('Giulia', 'Andreazza'), ('Giulia', 'Baldoni'), ('Giulia', 'Bruschi'), ('Giulia', 'Bruzzone'), ('Giulia', 'Calafiore'), ('Giulia', 'Carbonaro'), ('Giulia', 'Cascapera'), ('Giulia', 'Casoni'), ('Giulia', 'Cereghetti'), ('Giulia', 'Cerutti'), ('Giulia', 'Cesari'), ('Giulia', 'Coletti'), ('Giulia', 'Costa'), ('Giulia', 'Crescenzi'), ('Giulia', 'De Muro'), ('Giulia', 'Della Cioppa'), ('Giulia', 'Ferrari'), ('Giulia', 'Gabba'), ('Giulia', 'Gardani'), ('Giulia', 'Gasparri'), ('Giulia', 'Gatto Monticone'), ('Giulia', 'Guidetti'), ('Giulia', 'La Rocca'), ('Giulia', 'Lambiase'), ('Giulia', 'Leone'), ('Giulia', 'Maiorana'), ('Giulia', 'Mastellone'), ('Giulia', 'Mecca'), ('Giulia', 'Meruzzi'), ('Giulia', 'Morlet'), ('Giulia', 'Pairone'), ('Giulia', 'Pasini'), ('Giulia', 'Peoni'), ('Giulia', 'Perrone'), ('Giulia', 'Porcu'), ('Giulia', 'Porzio'), ('Giulia', 'Riepe'), ('Giulia', 'Sartori'), ('Giulia', 'Schivo'), ('Giulia', 'Spicacci'), ('Giulia', 'Squadrin'), ('Giulia', 'Sussarello'), ('Giulia', 'Tedesco'), ('Giulia', 'Toschi'), ('Giulia', 'Turconi'), ('Giulia', 'Zambaiti'), ('Giuliana', 'Atzori'), ('Giuliana', 'Bestetti'), ('Giuliana', 'Huerta Mercado'), ('Giuliana', 'Liga'), ('Giuliana', 'Olmos'), ('Giuliana', 'Pino'), ('Giuliana', 'Verbauwen'), ('Gizella', 'Turbok'), ('Gizem Melisa', 'Ates'), ('Gladys', 'Imperial'), ('Glaucia', 'Langela'), ('Glauka', 'Carvajal Vicente'), ('Gleici', 'Silva Do Espirito Santo'), ('Glenda', 'Swan'), ('Glenny', 'Cepeda'), ('Gloire', 'Mfoumouangana'), ('Gloria', 'Ceschi'), ('Gloria', 'Escobar'), ('Gloria', 'Guntinas'), ('Gloria', 'Liang'), ('Gloria', 'Perfetti'), ('Gloria', 'Pizzichini'), ('Gloriann', 'Lopez'), ('Gluay', 'Kampookaew'), ('Glynis', 'Coles'), ('Glynis', 'Oconnor'), ('Goda', 'Kuliesyte'), ('Goele', 'Lemmens'), ('Golda', 'Rubina'), ('Gopika', 'Kapoor'), ('Gorana', 'Kadijevic'), ('Gorana', 'Marsic'), ('Gorana', 'Matic'), ('Gorana', 'Stevanovic'), ('Gorica', 'Spasojevic'), ('Gornganok', 'Tiraganok'), ('Goulnara', 'Fattakhetdinova'), ('Gozal', 'Ainitdinova'), ('Gozde', 'Adar'), ('Gozde', 'Turhan'), ('Gozde', 'Unkaya'), ('Graca', 'Cardoso'), ('Grace', 'Cadona'), ('Grace', 'Denga'), ('Grace', 'Dixon'), ('Grace', 'Hannah'), ('Grace', 'Hutson'), ('Grace', 'Janis'), ('Grace', 'Kim'), ('Grace', 'Leake'), ('Grace', 'Min'), ('Grace', 'Orourke'), ('Grace', 'Sorbello'), ('Grace', 'Summerside'), ('Grace Lola', 'Lymer Sullivan'), ('Grace Maleka', 'Mpassy Nzoumba'), ('Grace Sari', 'Ysidora'), ('Gracia', 'Fuentes'), ('Gracia', 'Mboko'), ('Gracia', 'Radovanovic'), ('Graciela', 'Ailloud'), ('Graciela', 'Moran'), ('Graciela', 'Peraza'), ('Graciela', 'Velez'), ('Graciela Patricia', 'Rosas Alvarado'), ('Grazia', 'Greco'), ('Grazia', 'Ripepi'), ('Graziana', 'Di Giuseppe'), ('Greer', 'Stevens'), ('Greetje', 'Minnen'), ('Greta', 'Arn'), ('Greta', 'Ceccomori'), ('Greta', 'Delport'), ('Greta', 'Di Majo'), ('Greta', 'Joksyte'), ('Greta', 'Mokrousova'), ('Greta', 'Schmitt'), ('Greta', 'Veinberga'), ('Greta Louise', 'Von Peschke'), ('Gretchen', 'Doninger'), ('Gretchen', 'Galt'), ('Gretchen', 'Haynor'), ('Gretchen', 'Magers'), ('Greys', 'Moroder'), ('Guadalupe', 'Bugallo'), ('Guadalupe', 'Delgado'), ('Guadalupe', 'Hernandez'), ('Guadalupe', 'Moreno'), ('Guadalupe', 'Padilla'), ('Guadalupe', 'Perez Rojas'), ('Guadalupe', 'Ubeda'), ('Gudrun', 'Levers'), ('Guillermina', 'Naya'), ('Guillermina', 'Torre'), ('Guillermina', 'Zukerman'), ('Guiomar', 'Maristany Zuleta De Reales'), ('Gulay', 'Torgay'), ('Gulben', 'Guldas'), ('Gulberk', 'Gultekin'), ('Gulchekhra', 'Muhammadsidikova'), ('Guljahan', 'Kadyrova'), ('Guljan', 'Muhammetkuliyeva'), ('Gulnara', 'Axmedova'), ('Gulnaz', 'Dokey'), ('Gulsah', 'Cetin'), ('Gulshah', 'Esen'), ('Gulsina', 'Khalimullina'), ('Gulvona', 'Khodjaeva'), ('Gun Hee', 'Kim'), ('Gunjee', 'Sukhbat'), ('Guntisa', 'Boonlaing'), ('Gurianna', 'Korinihona'), ('Gussie', 'Osullivan'), ('Guzal', 'Yusupova'), ('Guzalhon', 'Nizamova'), ('Gvantsa', 'Robakidze'), ('Gwen', 'Stirton'), ('Gwen', 'Warnock'), ('Gwendolyne', 'Laugier'), ('Gwynn', 'Sammel'), ('Gyorgyi', 'Zsiros'), ('Gyselle Ximena', 'Daza'), ('Gyulnara', 'Nazarova'), ('Gyung Eun', 'Song'), ('H', 'Rush'), ('Ha Eun', 'Lim'), ('Ha Yang', 'Choi'), ('Ha Young', 'Ji'), ('Habiba', 'Ifrakh'), ('Habiba', 'Khaled Aly'), ('Habiba', 'Lasheen'), ('Habiba', 'Shaker'), ('Hada', 'Chang'), ('Hadar', 'Ostashinsky'), ('Hadas', 'Ronen'), ('Hadas', 'Zabusky'), ('Hadjer', 'Bouali'), ('Hadjira', 'Slimani'), ('Hadley', 'Berg'), ('Hae Jin', 'Jeong'), ('Hae Ok', 'Lee'), ('Hae Seon', 'Lee'), ('Hae Sung', 'Kim'), ('Hae Youm', 'Bae'), ('Hagar', 'Caro'), ('Hagit', 'Ohayon'), ('Hagit', 'Zubary'), ('Hailee', 'Elmore'), ('Hailey M', 'Johnson'), ('Haina', 'Franco'), ('Haine', 'Ogata'), ('Hala', 'Sufi'), ('Haleema', 'Rahim'), ('Haley', 'Gay'), ('Haley', 'Giavara'), ('Halla', 'Alajeely'), ('Halle', 'Cioffi'), ('Haluka', 'Higurashi'), ('Hamidan', 'Bibi'), ('Han Byeol', 'Lee'), ('Hana', 'Adamkova Guy'), ('Hana', 'Birnerova'), ('Hana', 'Debevec'), ('Hana', 'Fukarkova'), ('Hana', 'Kovacova'), ('Hana', 'Kraftova'), ('Hana', 'Mandlikova'), ('Hana', 'Mortagy'), ('Hana', 'Mraz'), ('Hana', 'Pektorova'), ('Hana', 'Ritterova'), ('Hana', 'Sakamoto'), ('Hana', 'Shimokawa'), ('Hana', 'Sisirak'), ('Hana', 'Sromova'), ('Hana', 'Strachonova'), ('Hana', 'Umek'), ('Hana', 'Vaculinova'), ('Hanae', 'Rhazi'), ('Hanako', 'Kamiya'), ('Hanane', 'Toumi'), ('Hande', 'Gorur'), ('Hande', 'Yesil'), ('Handra Anabela', 'Mangulea'), ('Hanemas', 'Pangestu'), ('Hania', 'Abouelsaad'), ('Hania', 'Bouakel'), ('Hanine', 'Boudjadi'), ('Hanna', 'Albowicz'), ('Hanna', 'Andreyeva'), ('Hanna', 'Borjeson'), ('Hanna', 'Chang'), ('Hanna', 'Kantenwein'), ('Hanna', 'Kapustka'), ('Hanna', 'Karczewska'), ('Hanna', 'Krampe'), ('Hanna', 'Kryvatulava'), ('Hanna', 'Landener'), ('Hanna', 'Levina'), ('Hanna', 'Malakhovich'), ('Hanna', 'Mar'), ('Hanna', 'Nooni'), ('Hanna', 'Puustinen'), ('Hanna', 'Sohn'), ('Hanna', 'Sokal'), ('Hanna', 'Tarlouskaya'), ('Hanna', 'Tolonen'), ('Hanna', 'Victorsson'), ('Hanna', 'Wikberg'), ('Hanna', 'Yedzelkina'), ('Hanna Katri', 'Aalto'), ('Hannah', 'Berner'), ('Hannah', 'Collin'), ('Hannah', 'Cseplo'), ('Hannah', 'Eke'), ('Hannah', 'Fick'), ('Hannah', 'Grady'), ('Hannah', 'Hume'), ('Hannah', 'James'), ('Hannah', 'King'), ('Hannah', 'Kuervers'), ('Hannah', 'Lehfeldt'), ('Hannah', 'Liljekvist'), ('Hannah', 'Martin Merchant'), ('Hannah', 'Mccolgan'), ('Hannah', 'Mueller'), ('Hannah', 'Nagel'), ('Hannah', 'Parker'), ('Hannah', 'Ploner'), ('Hannah', 'Sulz'), ('Hannah', 'Toro'), ('Hannah En Xin', 'Chew'), ('Hanne', 'Camassa'), ('Hanne Skak', 'Jensen'), ('Hanneke', 'Ketelaars'), ('Hanyu', 'Guo'), ('Hao', 'Zhang'), ('Hao Chen', 'Tang'), ('Hao Ching', 'Chan'), ('Happy', 'Ho'), ('Harisa', 'Delic'), ('Harmonie', 'Fiacchi'), ('Harmony', 'Tan'), ('Harpreet', 'Gill'), ('Harriet', 'Dart'), ('Harriet', 'Piercy'), ('Harriet', 'Sheahan'), ('Harsha Sai', 'Challa'), ('Harshini', 'Reddy'), ('Harshita', 'Chugh'), ('Harsimran Kaur', 'Bedi'), ('Haruka', 'Fujishiro'), ('Haruka', 'Inoue'), ('Haruka', 'Kaji'), ('Haruka', 'Naito'), ('Haruka', 'Nakamura'), ('Haruka', 'Sasaki'), ('Haruka', 'Suga'), ('Haruka', 'Tachiki'), ('Haruka', 'Taniguchi'), ('Haruka', 'Terashi'), ('Haruka', 'Yamamoto'), ('Haruka', 'Yamaura'), ('Haruka', 'Yoshida'), ('Haruko', 'Shigekawa'), ('Haruna', 'Arakawa'), ('Haruna', 'Sakamoto'), ('Haruna', 'Shimizu'), ('Haruna', 'Umemoto'), ('Hassiba', 'Munoz Alcaman'), ('Hatsuhi', 'Isowa'), ('Havana', 'Dauncey'), ('Hayaka', 'Murase'), ('Hayley', 'Carter'), ('Hayley', 'Ericksen'), ('Hayley', 'Macpherson'), ('Hayley', 'Rudman'), ('Hayley', 'St Leger'), ('Hazal', 'Karaaliler'), ('Hazal', 'Unlugenc'), ('Hazar', 'Sidki'), ('He Wen Fei', 'Li'), ('Hea Mi', 'Kim'), ('Heather', 'Bates'), ('Heather', 'Crowe'), ('Heather', 'Lockhart'), ('Heather', 'Ludloff'), ('Heather', 'Mckechnie'), ('Heather', 'Segal'), ('Heather', 'Shelby'), ('Heather', 'Watson'), ('Heather', 'Willens'), ('Heatherm', 'Steinbauer'), ('Hedda', 'Gurholt'), ('Hedda', 'Odegaard'), ('Hedda', 'Wolmarans'), ('Heden', 'Ly'), ('Hedvig', 'Lofdahl'), ('Hee Jeong', 'Baek'), ('Hee Jin', 'Oh'), ('Hee Sun', 'Lyoo Suh'), ('Hei Ching Claudia', 'Ng'), ('Hei Ching Claudia', 'Ng'), ('Heide', 'Schildknecht'), ('Heidi', 'Allsmiller'), ('Heidi', 'Djanogly'), ('Heidi', 'Eisterlehner'), ('Heidi', 'El Tabakh'), ('Heidi', 'Farr'), ('Heidi', 'Hogh'), ('Heidi', 'Narborough'), ('Heidi', 'Rosenbaum'), ('Heidi', 'Sprung'), ('Heike', 'Roloff'), ('Heike', 'Rusch'), ('Heike', 'Thoms'), ('Heinar', 'Boltea'), ('Heini', 'Salonen'), ('Helen', 'Amos'), ('Helen', 'Asciak'), ('Helen', 'Broome'), ('Helen', 'Cawley'), ('Helen', 'Crook'), ('Helen', 'Crozier'), ('Helen', 'Davis'), ('Helen', 'De Cesare'), ('Helen', 'Fraser'), ('Helen', 'Fritche'), ('Helen', 'Harvey'), ('Helen', 'Jonsson'), ('Helen', 'Kayser'), ('Helen', 'Kelesi'), ('Helen', 'Laupa'), ('Helen', 'Lawson'), ('Helen', 'Lennon'), ('Helen', 'Liebenberg'), ('Helen', 'Luscombe'), ('Helen', 'Middleton'), ('Helen', 'Oconnor'), ('Helen', 'Odea'), ('Helen', 'Parez'), ('Helen', 'Parish'), ('Helen', 'Park'), ('Helen', 'Parsons'), ('Helen', 'Ploskina'), ('Helen', 'Reesby'), ('Helen', 'Rice'), ('Helen', 'Richardson'), ('Helen', 'Sheedy'), ('Helen', 'Staresinic'), ('Helen', 'Taylor'), ('Helen', 'Van Den Berg'), ('Helen', 'Wisnienski'), ('Helen', 'Worland'), ('Helen', 'Young'), ('Helen Abigail', 'Altick'), ('Helena', 'Anliot'), ('Helena', 'Bel Franquesa'), ('Helena', 'Besovic'), ('Helena', 'Dahlstrom'), ('Helena', 'Ejeson'), ('Helena', 'Franko'), ('Helena', 'Fremuthova'), ('Helena', 'Jansen Figueras'), ('Helena', 'Korompis'), ('Helena', 'Laitinen'), ('Helena', 'Manset'), ('Helena', 'Martinez Soler'), ('Helena', 'Nordwall'), ('Helena', 'Norfeldt'), ('Helena', 'Nyikos'), ('Helena', 'Olsson'), ('Helena', 'Phillips'), ('Helena', 'Sinitshin'), ('Helena', 'Sukova'), ('Helena', 'Vildova'), ('Helena', 'Wimmer'), ('Helene', 'Auensen'), ('Helene', 'Cedet'), ('Helene', 'Heiberg'), ('Helene', 'Holter'), ('Helene', 'Kappler'), ('Helene', 'Lindstrand'), ('Helene', 'Louvet'), ('Helene', 'Meuleman'), ('Helene', 'Mygind'), ('Helene', 'Pelletier'), ('Helene', 'Pellicano'), ('Helene', 'Scholsen'), ('Helene', 'Stephens'), ('Helene', 'Tribolet'), ('Helga', 'Grille'), ('Helga', 'Hosl'), ('Helga', 'Lutten'), ('Helga', 'Masthoff'), ('Helga', 'Pinones'), ('Helga', 'Vieira'), ('Helga Margret', 'Jeske'), ('Heliane', 'Steden'), ('Helina', 'Lill'), ('Hellas', 'Ter Riet'), ('Helle', 'Viragh'), ('Helma', 'Leeuwen'), ('Hemel', 'Meghani'), ('Hendrike Lea', 'Heitmann'), ('Henrieta', 'Nagyova'), ('Henrietta', 'Alton'), ('Henrietta', 'Habler'), ('Henrietta', 'Harris'), ('Henrietta', 'Ogude'), ('Henriette', 'Gemer'), ('Henriette', 'Kjaer Nielsen'), ('Henriette', 'Van Aalderen'), ('Henrike', 'Kadzidroga'), ('Henrike', 'Voigt'), ('Hera', 'Brynjarsdottir'), ('Hermine', 'Sukiasyan'), ('Hermione', 'Roukassian'), ('Hermon', 'Brhane'), ('Hernanda Melia', 'Cholis'), ('Hester', 'Witvoet'), ('Hideko', 'Goto'), ('Hijiri', 'Nakazaka'), ('Hikari', 'Abe'), ('Hikari', 'Matsuo'), ('Hikari', 'Yamamoto'), ('Hila', 'Elster'), ('Hila', 'Mizrahi'), ('Hila', 'Rosen'), ('Hilary', 'Barte'), ('Hilary', 'Toole'), ('Hilda', 'Melander'), ('Hilda', 'Zuleta Cabrera'), ('Hili', 'Kronzon'), ('Hilke', 'Wilt'), ('Hillary', 'Adams'), ('Hillery', 'Royer'), ('Himani', 'Mor'), ('Himari', 'Sato'), ('Hind', 'Abdelouahid'), ('Hind', 'Belkarmouss'), ('Hind', 'Semlali'), ('Hind', 'Tajeddine'), ('Hiroko', 'Hara'), ('Hiroko', 'Ishizaki'), ('Hiroko', 'Komori'), ('Hiroko', 'Kuwata'), ('Hiroko', 'Mochizuki'), ('Hiroko', 'Nishikawa'), ('Hiroko', 'Sato'), ('Hiromi', 'Nagano'), ('Hiromi', 'Okazaki'), ('Hiromi', 'Sasano'), ('Hiromi', 'Takeuchi'), ('Hiromi', 'Yoshihara'), ('Hirono', 'Watanabe'), ('Hirono', 'Yoshikawa'), ('Hisaimet', 'Mendez Gonzalez'), ('Hisayo', 'Unno'), ('Hitomi', 'Fujii'), ('Hitomi', 'Hasebe'), ('Hitomi', 'Isomura'), ('Hitomi', 'Konno'), ('Hitomi', 'Ozaki'), ('Hitomi', 'Saito'), ('Hitomi', 'Sugata'), ('Hitomi', 'Watanabe'), ('Hjordis Rosa', 'Gudmundsdottir'), ('Ho Ching', 'Wu'), ('Hoda', 'Habib'), ('Hollie', 'Bees'), ('Holly', 'Bagshaw'), ('Holly', 'Cao'), ('Holly', 'Danforth'), ('Holly', 'Horsfall'), ('Holly', 'Hutchinson'), ('Holly', 'Mckee'), ('Holly', 'Parkinson'), ('Holly', 'Richards'), ('Holly Ann', 'Lloyd'), ('Holyn', 'Lord'), ('Honami', 'Sodeyama'), ('Hong Hui', 'Liu'), ('Hong Kyung', 'Shin'), ('Hong Lan', 'Liu'), ('Hong Thanh', 'Tang'), ('Hong Yi Cody', 'Wong'), ('Hongrui', 'Sun'), ('Honoka', 'Kawauchi'), ('Hope', 'Johnson'), ('Hortencia', 'Birnbaumer'), ('Hortensia', 'Hernandez'), ('Houda', 'Bellamine'), ('Houda', 'Yasri'), ('Hoyeon', 'Nor'), ('Hrafuhildur', 'Hannesdotter'), ('Hristiana', 'Gocheva'), ('Hristina', 'Cvetkovic'), ('Hristina', 'Dishkova'), ('Hristina', 'Djokic'), ('Hristina', 'Dyankova'), ('Hsiang Wen', 'Huang'), ('Hsiao Chuan', 'Fan'), ('Hsiao Han', 'Chao'), ('Hsiao Wen', 'Chao'), ('Hsin Chieh', 'Chang'), ('Hsin Min', 'Chin'), ('Hsin Ting', 'Tsai'), ('Hsin Yuan', 'Shih'), ('Hsiu', 'Lee'), ('Hsiu Ting', 'Huang'), ('Hsiu Tsuan', 'Wen'), ('Hsiung Ching', 'Lin'), ('Hsueh Li', 'Hsu'), ('Hu', 'Na'), ('Hua Chen', 'Lee'), ('Huai Hsuan', 'Huang'), ('Huan', 'Li'), ('Huan', 'Xia'), ('Huey Ying', 'Chen'), ('Huguette', 'Barat'), ('Hui', 'Chen'), ('Hui', 'Li'), ('Hui', 'Zhang'), ('Hui Chi', 'Huang'), ('Hui I', 'Huang'), ('Hui Ling', 'Sun'), ('Hui Na', 'Liu'), ('Hui Zhen', 'Ruan'), ('Huibre Mare', 'Botes'), ('Huijie', 'Li'), ('Hulya', 'Esen'), ('Hurricane Tyra', 'Black'), ('Hwa', 'Lee'), ('Hwa Ju', 'Jeung'), ('Hyacinth', 'Yorke'), ('Hye Jeong', 'Chang'), ('Hye Jeong', 'Kim'), ('Hye Jeong', 'Pyo'), ('Hye Jeong', 'Yoo'), ('Hye Ji', 'Ju'), ('Hye Jin', 'Byun'), ('Hye Jin', 'Park'), ('Hye Jin', 'Seo'), ('Hye Mi', 'Byun'), ('Hye Min', 'Lee'), ('Hye Young', 'Bae'), ('Hyejin', 'Lee'), ('Hyeran', 'Yun'), ('Hymke', 'Maurick'), ('Hyojin', 'Kong'), ('Hyojung', 'Yea'), ('Hyun A', 'Shin'), ('Hyun Hee', 'Jang'), ('Hyun Hee', 'Sohn'), ('Hyun Hui', 'Hong'), ('Hyun Jung', 'Kim'), ('Hyun Sook', 'Bae'), ('Hyun Sook', 'Park'), ('I', 'Norman'), ('I Hsuan', 'Cho'), ('I Hsuan', 'Hwang'), ('I Hui', 'Chang'), ('I Jin', 'Chew'), ('I Pei', 'Cheng'), ('I Ting', 'Wang'), ('Ia', 'Appelberg'), ('Ia', 'Jikia'), ('Iana', 'Tishchenko'), ('Ianes', 'Moreira'), ('Iariniaina', 'Tsantaniony'), ('Iciri', 'Rai'), ('Ida', 'Alfredsson'), ('Ida', 'Ferding'), ('Ida', 'Jarlskog'), ('Ida', 'Krnic'), ('Ida', 'Sutedja'), ('Ida Seljevoll', 'Skancke'), ('Idalina', 'Franca'), ('Idhun', 'Safaati'), ('Idia', 'Amen'), ('Idil', 'Haciraifoglu'), ('Idil', 'Ozdamar'), ('Idoia', 'Huerta Gallardo'), ('Idunn', 'Hertzberg'), ('Ielyzaveta', 'Rybakova'), ('Iesha', 'Holton'), ('Iesha', 'Shepherd'), ('Ieva', 'Irbe'), ('Iga', 'Odrzywolek'), ('Iga', 'Swiatek'), ('Iginia', 'Tilocca'), ('Igna', 'De Villiers'), ('Ignacia', 'Marin'), ('Ikram', 'El Aarej'), ('Ikram', 'Rassif'), ('Ikttesh', 'Chahal'), ('Ikuko', 'Hirata'), ('Ikumi', 'Akasaka'), ('Il Sook', 'Kim'), ('Il Soon', 'Kim'), ('Ilana', 'Berger'), ('Ilana', 'Kloss'), ('Ilana', 'Tetruashvili'), ('Ilaria', 'Alessi'), ('Ilaria', 'Pibiri'), ('Ilaria', 'Popovic'), ('Ilaria', 'Sposetti'), ('Ilaria', 'Ziche'), ('Ilay', 'Yoruk'), ('Ilayda', 'Yondem'), ('Ilda', 'Saulic'), ('Ildiko', 'Stadler'), ('Ileana Camelia', 'Necea'), ('Ilge', 'Alpay'), ('Ilham', 'Nadir'), ('Ilham', 'Zouaoui'), ('Ilijana', 'Ivic'), ('Ilina', 'Kroushovski'), ('Ilinca', 'Stoica'), ('Ilinca Teodora', 'Bercaru'), ('Ilinca Thea', 'Anghel'), ('Ilka', 'Csoregi'), ('Ilke', 'Gers'), ('Ilona', 'Giberte'), ('Ilona', 'Golynker'), ('Ilona', 'Jarkova'), ('Ilona', 'Kordonskaya'), ('Ilona', 'Kremen'), ('Ilona', 'Poljakova'), ('Ilona', 'Somers'), ('Ilona', 'Vichnevskaya'), ('Ilona', 'Vishnevskaya'), ('Ilse', 'Buding'), ('Ilse', 'De Ruysscher'), ('Ilse', 'Pacheco'), ('Iluminada', 'Concepcion'), ('Ilze', 'Hattingh'), ('Ima', 'Bohush'), ('Ima', 'Nindi'), ('Iman', 'Qureshi'), ('Imane', 'Bachi'), ('Imane', 'Maloufi'), ('Imane', 'Toubal'), ('Imane Maelle', 'Kocher'), ('Imani', 'Graham'), ('Imen', 'Abid'), ('Imen', 'Ben Larbi'), ('Imke', 'Jagau'), ('Imke', 'Kusgen'), ('Imke', 'Reimers'), ('Imke', 'Schluenzen'), ('Immaculada', 'Varas Caro'), ('Imogen', 'Golder'), ('Imogen', 'Magner'), ('Imogen', 'Wyatt'), ('Imperia', 'Martinez Mora'), ('Imren', 'Bilgic'), ('Imren', 'Kurt'), ('In Sook', 'Park'), ('In Young', 'Chang'), ('In Young', 'Hwang'), ('Ina', 'Hadziselimovic'), ('Ina', 'Kaufinger'), ('Ina', 'Kauppila'), ('Ina', 'Sartz'), ('Ina', 'Sireteanu'), ('Ina Maria', 'Range'), ('Inas', 'Ziki'), ('Inasse', 'Hamouti'), ('Inbar', 'Cohen'), ('Inci', 'Ogut'), ('India', 'Maggen'), ('India', 'Sanders'), ('Indire', 'Akiki'), ('Indra', 'Bigi'), ('Indre', 'Kastanauskaite'), ('Indy', 'De Vroome'), ('Ine', 'Nowe'), ('Ineke', 'Mergaert'), ('Ines', 'Arfaoui'), ('Ines', 'Baccouche'), ('Ines', 'Benito'), ('Ines', 'Buermeyer'), ('Ines', 'Canepa'), ('Ines', 'Carabetta'), ('Ines', 'Chibout'), ('Ines', 'Drumond'), ('Ines', 'Ferrer Suarez'), ('Ines', 'Fontanarosa'), ('Ines', 'Gorrochategui'), ('Ines', 'Heise'), ('Ines', 'Ibbou'), ('Ines', 'Janbakhsh'), ('Ines', 'Kertesz'), ('Ines', 'Khelefi'), ('Ines', 'Kreilinger'), ('Ines', 'Martins'), ('Ines', 'Mesquita'), ('Ines', 'Milosevic'), ('Ines', 'Miranda'), ('Ines', 'Moura'), ('Ines', 'Murta'), ('Ines', 'Mzoughi'), ('Ines', 'Nicault'), ('Ines', 'Pereira'), ('Ines', 'Roget'), ('Ines', 'Salvador'), ('Ines', 'Santos'), ('Ines', 'Teixeira'), ('Ines', 'Trickovic'), ('Ines', 'Zouabi'), ('Ines Belkis', 'Alimoussa'), ('Ines Karmen', 'Vias'), ('Ines Miren', 'De Pablo'), ('Inga', 'Albers'), ('Inga', 'Audrina'), ('Inga', 'Beermann'), ('Inga', 'Bertschmann'), ('Inga', 'Burger'), ('Inga', 'Mueller'), ('Inga', 'Prodinger'), ('Inge', 'De Geest'), ('Inge', 'Spronk'), ('Inge', 'Weirich'), ('Ingeborg', 'Kerkhoven'), ('Ingelise', 'Driehuis'), ('Inger', 'Van Dijkman'), ('Ingrid', 'Bentzer'), ('Ingrid', 'Cseh'), ('Ingrid', 'Di Carlo'), ('Ingrid', 'Gamarra Martins'), ('Ingrid', 'Gonzalez'), ('Ingrid', 'Jonge'), ('Ingrid', 'Kurta'), ('Ingrid', 'Lucak'), ('Ingrid', 'Meeus'), ('Ingrid', 'Navarro Rodriguez'), ('Ingrid', 'Neel'), ('Ingrid', 'Palmieri'), ('Ingrid', 'Peltier'), ('Ingrid', 'Peltzer'), ('Ingrid', 'Sadlon'), ('Ingrid', 'Siegrist'), ('Ingrid', 'Sommerauer'), ('Ingrid', 'Vojcinakova'), ('Ingrid', 'Willems'), ('Ingrid Alexandra', 'Radu'), ('Ingrid Carolina', 'Millan'), ('Ingrid Esperanza', 'Vargas Calvo'), ('Ingunn', 'Eiriksdottir'), ('Ingy', 'El Taweel'), ('Ingy', 'Hashish'), ('Injie', 'Fawzy'), ('Inna', 'Agaeva'), ('Inna', 'Bondarenko'), ('Inna', 'Brioukhovets'), ('Inna', 'Gavrilenko'), ('Inna', 'Kuzmenko'), ('Inna', 'Sokolova'), ('Inna', 'Tchepournaya'), ('Inna', 'Volkovich'), ('Insa', 'Villnow'), ('Insa', 'Wickmann'), ('Intissar', 'Rassif'), ('Ioana', 'Bogdan'), ('Ioana', 'Boronea'), ('Ioana', 'Dinescu'), ('Ioana', 'Dragan'), ('Ioana', 'Ducu'), ('Ioana', 'Gaspar'), ('Ioana', 'Gheorghita'), ('Ioana', 'Guna'), ('Ioana', 'Ignat'), ('Ioana', 'Ivan'), ('Ioana', 'Minca'), ('Ioana', 'Paun'), ('Ioana', 'Plesu'), ('Ioana', 'Posirca'), ('Ioana', 'Toanchina'), ('Ioana Alexandra', 'Bara'), ('Ioana Alexandra', 'Oprea'), ('Ioana Andreea', 'Cristea'), ('Ioana Andreea', 'Sascau'), ('Ioana Daniela', 'Bighiu'), ('Ioana Diana', 'Pietroiu'), ('Ioana Florentina', 'Popescu'), ('Ioana Larisa', 'Fuiorea'), ('Ioana Laura', 'Alecsiu'), ('Ioana Loredana', 'Rosca'), ('Ioanna', 'Markesini'), ('Ioanna', 'Petratou'), ('Ionela Andreea', 'Iova'), ('Ionita', 'Nesti'), ('Ipek', 'Birol'), ('Ipek', 'Cevik'), ('Ipek', 'Oz'), ('Ipek', 'Senoglu'), ('Ipek', 'Soylu'), ('Ira', 'Aleksova'), ('Irawan', 'Deewajee'), ('Irawati', 'Iskandar'), ('Irawati', 'Moerid'), ('Ireen', 'Kuipers'), ('Irem', 'Ergun'), ('Irem', 'Kaftan'), ('Irem', 'Karamanoglu'), ('Irem', 'Saram'), ('Irem', 'Soylu'), ('Irem Talya', 'Koken'), ('Irena', 'Khomyk'), ('Irena', 'Mihailova'), ('Irena', 'Mykytyn'), ('Irena', 'Noc'), ('Irena', 'Pavlovic'), ('Irena', 'Skulj'), ('Irene', 'Adsuar'), ('Irene', 'Burillo Escorihuela'), ('Irene', 'Fernandez Cabe'), ('Irene', 'Fraisse'), ('Irene', 'Gandara Gonzalez'), ('Irene', 'Garceran'), ('Irene', 'George'), ('Irene', 'Gonzalez Gonzalez'), ('Irene', 'Gonzalez Olivar'), ('Irene', 'Gutierrez'), ('Irene', 'Lavino'), ('Irene', 'Macia'), ('Irene', 'Mani'), ('Irene', 'Martinez Del Olmo'), ('Irene', 'Nunez Xifre'), ('Irene', 'Rehberger Bescos'), ('Irene', 'Santos Bravo'), ('Irene', 'Stavridou'), ('Irina', 'Adetu'), ('Irina', 'Anikina'), ('Irina', 'Bobrysheva'), ('Irina', 'Bulykina'), ('Irina', 'Buryachok'), ('Irina', 'Cantos Siemers'), ('Irina', 'Carrillo Marti'), ('Irina', 'Chaukina'), ('Irina', 'Constantinide'), ('Irina', 'Cybina'), ('Irina', 'Delitz'), ('Irina', 'Dementyeva'), ('Irina', 'Falconi'), ('Irina', 'Fetecau'), ('Irina', 'Glimakova'), ('Irina', 'Kakoulia'), ('Irina', 'Khatsko'), ('Irina', 'Khromacheva'), ('Irina', 'Komarova'), ('Irina', 'Koripenko'), ('Irina', 'Kornienko'), ('Irina', 'Kotkina'), ('Irina', 'Kuzmina'), ('Irina', 'Lapustina'), ('Irina', 'Letseva'), ('Irina', 'Lidkovskaya'), ('Irina', 'Lykina'), ('Irina', 'Malashok'), ('Irina', 'Matiychyk'), ('Irina', 'Mourachkintseva'), ('Irina', 'Nossenko'), ('Irina', 'Ramialison'), ('Irina', 'Repede'), ('Irina', 'Selyutina'), ('Irina', 'Shevchenko'), ('Irina', 'Slizovskaya'), ('Irina', 'Smirnova'), ('Irina', 'Smislova'), ('Irina', 'Spirlea'), ('Irina', 'Steirer'), ('Irina', 'Stoilova'), ('Irina', 'Strigalova'), ('Irina', 'Sukhova'), ('Irina', 'Tkachenko'), ('Irina', 'Tregub'), ('Irina', 'Tsymbal'), ('Irina', 'Tuturina'), ('Irina', 'Voskanyan'), ('Irina', 'Yarikova'), ('Irina', 'Zhdanova'), ('Irina', 'Zvereva'), ('Irina Alexandra', 'Paraschiv'), ('Irina Camelia', 'Begu'), ('Irina Elena', 'Preotescu'), ('Irina Maria', 'Bara'), ('Irina Mihaela', 'Giusca'), ('Irini', 'Alevizopoulou'), ('Irini', 'Papageorgiou'), ('Iris', 'Elias'), ('Iris', 'Ichim'), ('Iris', 'Khanna'), ('Iris', 'Mannarino'), ('Iris', 'Michailidou'), ('Iris', 'Riedel Kuhn'), ('Iris', 'Staub'), ('Iris', 'Thompson'), ('Iris', 'Verboven'), ('Iris Julia Antje', 'Verweij'), ('Irma', 'Novakova Spurny'), ('Irma', 'Vizcaino'), ('Irma Elita', 'Evania'), ('Iroda', 'Tulyaganova'), ('Iryna', 'Bremond'), ('Iryna', 'Kyrychenko'), ('Iryna', 'Shymanovich'), ('Iryna', 'Vardanyan'), ('Irys', 'Ekani'), ('Isabel', 'Adrover Gallego'), ('Isabel', 'Barciela Rodriguez'), ('Isabel', 'Bischof'), ('Isabel', 'Casso'), ('Isabel', 'Collischonn'), ('Isabel', 'Cueto'), ('Isabel', 'Dominguez Munaiz'), ('Isabel', 'Donaldson'), ('Isabel', 'Fernandez De Soto'), ('Isabel', 'Fonts'), ('Isabel', 'Horkmans'), ('Isabel', 'Iglesias Prieto'), ('Isabel', 'Jarosz'), ('Isabel', 'Mas Breto'), ('Isabel', 'Moure'), ('Isabel', 'Rapisarda Calvo'), ('Isabel', 'Santos'), ('Isabel', 'Steger'), ('Isabel M', 'Brito Cardoso'), ('Isabel Veronica', 'Boada'), ('Isabela', 'Campos Bifano'), ('Isabela', 'Espinosa Davila'), ('Isabela', 'Jovanovic'), ('Isabela', 'Kulaif'), ('Isabela', 'Listowska'), ('Isabela', 'Martin'), ('Isabela', 'Miro'), ('Isabela', 'Petrov'), ('Isabell', 'Quast'), ('Isabell', 'Seidlitz'), ('Isabella', 'Assad'), ('Isabella', 'Aumueller'), ('Isabella', 'Bizzo'), ('Isabella', 'Bozicevic'), ('Isabella', 'Caballero'), ('Isabella', 'Calves'), ('Isabella', 'Capato Camargo'), ('Isabella', 'Catelani'), ('Isabella', 'Dale'), ('Isabella', 'Escobar'), ('Isabella', 'Fernandez Diaz'), ('Isabella', 'Gaban'), ('Isabella', 'Harvison'), ('Isabella', 'Holland'), ('Isabella', 'Hurtado'), ('Isabella', 'Kimberly'), ('Isabella', 'Kling'), ('Isabella', 'Mitterlehner'), ('Isabella', 'Montini'), ('Isabella', 'Nunez'), ('Isabella', 'Perez'), ('Isabella', 'Reibmayr'), ('Isabella', 'Robbiani'), ('Isabella', 'Shinikova'), ('Isabella', 'Tcherkes Zade'), ('Isabella', 'Williams'), ('Isabelle', 'Boulais'), ('Isabelle', 'Crudo'), ('Isabelle', 'Declercq'), ('Isabelle', 'Demongeot'), ('Isabelle', 'Entenza'), ('Isabelle', 'Godfroy'), ('Isabelle', 'Larsson'), ('Isabelle', 'Soucy'), ('Isabelle', 'Taesch'), ('Isabelle', 'Vernhes'), ('Isabelle', 'Villiger'), ('Isabelle', 'Wallace'), ('Isadora', 'Bickham'), ('Isadora', 'Busch'), ('Isadora', 'Vieira'), ('Isadora Borges', 'Zwetsch'), ('Isamarie', 'Perez'), ('Isaura', 'Enrique Aguilar'), ('Isel', 'Martinez Marcos'), ('Isha', 'Budwal'), ('Isha', 'Chopra'), ('Isha', 'Lakhani'), ('Ishraq', 'Salman'), ('Isidora', 'Pejovic'), ('Isidora', 'Radojkovic'), ('Isidora', 'Zivkovic'), ('Isil', 'Cayirli'), ('Isil', 'Ileri'), ('Isioma', 'Usoegbu'), ('Ismet Duygu', 'Aksit Oal'), ('Isoke', 'Perry'), ('Isolde', 'De Jong'), ('Isotta', 'Mancini'), ('Issem', 'Essaies'), ('Itxaso', 'Blanco Fernandez De Leceta'), ('Itza', 'Trabulse Garci'), ('Itzi Janikuari', 'Torres Millan'), ('Iulia', 'Dogarescu'), ('Iulia', 'Rozgon'), ('Iulia', 'Savescu'), ('Iulia', 'Truca'), ('Iulia', 'Vodislav'), ('Iulia Bianca', 'Ilinca'), ('Iulia Maria', 'Ivascu'), ('Iuliana', 'Oante'), ('Iuliia', 'Kiriienko'), ('Iuliia', 'Sandrakova'), ('Iva', 'Berankova'), ('Iva', 'Budarova'), ('Iva', 'Buljubasic'), ('Iva', 'Ivkovic'), ('Iva', 'Jancevski'), ('Iva', 'Kirac'), ('Iva', 'Krivic'), ('Iva', 'Majoli'), ('Iva', 'Mekovec'), ('Iva', 'Plachkova'), ('Iva', 'Primorac'), ('Iva', 'Puflerova'), ('Iva', 'Roj'), ('Iva', 'Saric'), ('Iva', 'Velkovska'), ('Ivana', 'Abramovic'), ('Ivana', 'Andric'), ('Ivana', 'Belancic'), ('Ivana', 'Belejova'), ('Ivana', 'Beli'), ('Ivana', 'Bracun'), ('Ivana', 'Crnogorac'), ('Ivana', 'Culkovic'), ('Ivana', 'Filipi'), ('Ivana', 'Gala'), ('Ivana', 'Gelo'), ('Ivana', 'Havrlikova'), ('Ivana', 'Horvat'), ('Ivana', 'Jankovska'), ('Ivana', 'Jorovic'), ('Ivana', 'Jovanovic'), ('Ivana', 'Kafedjiyska'), ('Ivana', 'Karolyiova'), ('Ivana', 'Kekez'), ('Ivana', 'King'), ('Ivana', 'Klac'), ('Ivana', 'Klepic'), ('Ivana', 'Kopsova'), ('Ivana', 'Kubickova'), ('Ivana', 'Lisjak'), ('Ivana', 'Loncar Antic'), ('Ivana', 'Marinov'), ('Ivana', 'Mark'), ('Ivana', 'Milutinovic'), ('Ivana', 'Platenikova'), ('Ivana', 'Popovic'), ('Ivana', 'Ratkovic'), ('Ivana', 'Sokac'), ('Ivana', 'Spasojevic'), ('Ivana', 'Tomaic'), ('Ivana', 'Visic'), ('Ivana', 'Vukovic'), ('Ivana', 'Zupa'), ('Ivania', 'Martinich'), ('Ivanka', 'Karamalak'), ('Ivanka', 'Mocic'), ('Ivanna', 'Israilova'), ('Ivanna', 'Madruga Osses'), ('Ivanna', 'Slobodian'), ('Iveta', 'Benesova'), ('Iveta', 'Dapkute'), ('Iveta', 'Daujotaite'), ('Iveta', 'Gerlova'), ('Iveta', 'Guneva'), ('Iveta', 'Masarova'), ('Ivette', 'Lopez'), ('Ivon', 'Mihaleva'), ('Ivona', 'Cudina'), ('Ivona', 'Grujic'), ('Ivona', 'Horvat'), ('Ivona', 'Matulikova'), ('Ivona', 'Mihailova'), ('Ivona', 'Sereja'), ('Ivona', 'Stankovic'), ('Ivone', 'Alvaro'), ('Ivonne', 'Cavalle Reimers'), ('Ivonne', 'Lorher'), ('Ivonne', 'Sonderegger'), ('Ivy Kristel', 'De Castro'), ('Iwalani', 'Mccalla'), ('Iwona', 'Kuczynska'), ('Iyabo', 'Ogunwole'), ('Iza', 'Ferreira'), ('Izabela Gabriela', 'Novac'), ('Izabella', 'Ismailova'), ('Izaskun', 'Bernal'), ('Izel Ece', 'Yilmaz'), ('Izumi', 'Asano'), ('Izumi', 'Sugimoto'), ('J', 'Carey'), ('J', 'James'), ('J', 'Lin'), ('J', 'Ray'), ('J', 'Tobin'), ('J', 'Turner'), ('Jacara', 'Gillis'), ('Jacinta', 'Agim'), ('Jacinta', 'Ayers'), ('Jackeline', 'Jacome'), ('Jackie', 'Carleton'), ('Jackie', 'Castillejo'), ('Jackie', 'Fayter'), ('Jackie', 'Holden'), ('Jackie', 'Joseph'), ('Jackie', 'Masters'), ('Jackie', 'Moe'), ('Jackie', 'Monsour'), ('Jackie', 'Pinto'), ('Jackie', 'Van Wijk'), ('Jacklyn', 'Lambert'), ('Jaclyn', 'Lucas'), ('Jaclyn', 'Schokman'), ('Jacqueline', 'Berson'), ('Jacqueline', 'Boepple'), ('Jacqueline', 'Bohannon'), ('Jacqueline', 'Cabaj Awad'), ('Jacqueline', 'Cako'), ('Jacqueline', 'Crawford'), ('Jacqueline', 'Dickinson'), ('Jacqueline', 'Frohlich'), ('Jacqueline', 'Geller'), ('Jacqueline', 'Hagen'), ('Jacqueline', 'Kasler'), ('Jacqueline', 'Le Boubennec'), ('Jacqueline', 'Lorne'), ('Jacqueline', 'Morales'), ('Jacqueline', 'Nieto'), ('Jacqueline', 'Pelletier'), ('Jacqueline', 'Rees Lewis'), ('Jacqueline', 'Trail'), ('Jacqueline', 'Wu'), ('Jacquelyn', 'Rosen'), ('Jacquelyn', 'Visinski'), ('Jacquelynn', 'Tang'), ('Jacquie', 'Dobson'), ('Jacquline', 'Nylander Altelius'), ('Jada', 'Hart'), ('Jada', 'Robinson'), ('Jade', 'Curtis'), ('Jade', 'Frampton'), ('Jade', 'Hilton'), ('Jade', 'Hopper'), ('Jade', 'Lewis'), ('Jade', 'Pondicas'), ('Jade', 'Rafalovicz'), ('Jade', 'Schiffman'), ('Jade', 'Schoelink'), ('Jade', 'Suvrijn'), ('Jade', 'Windley'), ('Jae Eun', 'Kim'), ('Jae Hee', 'Joung'), ('Jae Hee', 'Lyoo'), ('Jaeda', 'Daniel'), ('Jaeyeon', 'Kim'), ('Jahana', 'Bayramova'), ('Jahnavi', 'Parekh'), ('Jahnavi', 'Sunderarajan'), ('Jaime', 'Kaplan'), ('Jaimee', 'Fourlis'), ('Jaimy Gayle', 'Van De Wal'), ('Jainy', 'Scheepens'), ('Jaipet', 'Anontaweesil'), ('Jaklin', 'Alawi'), ('Jamea', 'Jackson'), ('Jamie', 'Buterbaugh'), ('Jamie', 'Golder'), ('Jamie', 'Hampton'), ('Jamie', 'Henikoff'), ('Jamie', 'Jillissen'), ('Jamie', 'Lieberman'), ('Jamie', 'Loeb'), ('Jamie', 'Macias'), ('Jamie', 'Pawid'), ('Jamie', 'Pisarcik'), ('Jamila', 'Paul'), ('Jamilya', 'Sadykzhanova'), ('Jan', 'Abaza'), ('Jan', 'Bardot'), ('Jan', 'Barrett'), ('Jan', 'Blackstad'), ('Jan', 'Martin'), ('Jan', 'Morton'), ('Jan', 'Oneill'), ('Jan', 'Wilton'), ('Jana', 'Albers'), ('Jana', 'Benova'), ('Jana', 'Bezbradica'), ('Jana', 'Bielikova'), ('Jana', 'Bojovic'), ('Jana', 'Boubelikova'), ('Jana', 'Bourova'), ('Jana', 'Cabak'), ('Jana', 'Cepelova'), ('Jana', 'Derkasova'), ('Jana', 'Deylova'), ('Jana', 'Dorodnova'), ('Jana', 'Fett'), ('Jana', 'Haid'), ('Jana', 'Hlavackova'), ('Jana', 'Jablonovska'), ('Jana', 'Jais'), ('Jana', 'Jandova'), ('Jana', 'Juricova'), ('Jana', 'Kandarr'), ('Jana', 'Knaab'), ('Jana', 'Koran'), ('Jana', 'Kulova'), ('Jana', 'Kuzovkova'), ('Jana', 'Lazarevic'), ('Jana', 'Lubasova'), ('Jana', 'Mackova'), ('Jana', 'Macurova'), ('Jana', 'Matouskova'), ('Jana', 'Mccord'), ('Jana', 'Mihalovicova'), ('Jana', 'Nabel'), ('Jana', 'Nejedly'), ('Jana', 'Novotna'), ('Jana', 'Ondrouchova'), ('Jana', 'Pospisilova'), ('Jana', 'Schober'), ('Jana', 'Sedivec'), ('Jana', 'Simurkova'), ('Jana', 'Sokolenko'), ('Jana', 'Stankovicova'), ('Jana', 'Staskova'), ('Jana', 'Strnadova'), ('Jana', 'Urbanova'), ('Jana', 'Votrubcova'), ('Janaina', 'Mercadante'), ('Janaki', 'Gunuganti'), ('Janaki', 'Krishnamoorthy'), ('Janaya', 'Smith'), ('Jandayia', 'Lubin'), ('Jane', 'Chi'), ('Jane', 'Fennelly'), ('Jane', 'Forman'), ('Jane', 'Harper'), ('Jane', 'Holden'), ('Jane', 'Holdren'), ('Jane', 'Huh'), ('Jane', 'Ioaba'), ('Jane', 'Jarosz'), ('Jane', 'Kincaid'), ('Jane', 'Legge'), ('Jane', 'Melichar'), ('Jane', 'Morro'), ('Jane', 'Odonoghue'), ('Jane', 'Ohara'), ('Jane', 'Plackett'), ('Jane', 'Porfirio'), ('Jane', 'Preyer'), ('Jane', 'Stewart'), ('Jane', 'Stratton'), ('Jane', 'Sushkova'), ('Jane', 'Taylor'), ('Jane', 'Thomas'), ('Jane', 'Wasserson'), ('Jane', 'White'), ('Jane', 'Wood'), ('Jane', 'Yates'), ('Jane', 'Young'), ('Janelle', 'Cuthbertson'), ('Janelle', 'Watson'), ('Janet', 'Bergman'), ('Janet', 'Craig'), ('Janet', 'Fallis'), ('Janet', 'Haas'), ('Janet', 'Koch'), ('Janet', 'Lee'), ('Janet', 'Souto Garcia'), ('Janet', 'Walker'), ('Janet', 'Wright'), ('Janet', 'Young'), ('Janette', 'Bejlkova'), ('Janette', 'Husarova'), ('Janice', 'Metcalf'), ('Janice', 'Rapp'), ('Janice', 'Shin'), ('Janice', 'Tilbrook'), ('Janice', 'Tindle'), ('Janice', 'Wainwright'), ('Janina', 'Braun'), ('Janina', 'Geiss'), ('Janina', 'Mistecky'), ('Janina', 'Peters'), ('Janina', 'Ruhstaller'), ('Janina', 'Scheffbuch'), ('Janina', 'Tajkovsky'), ('Janina', 'Toljan'), ('Janine', 'Bourgnon'), ('Janine', 'Erasmus'), ('Janine', 'Hemmes'), ('Janine', 'Humphreys'), ('Janine', 'Koleta'), ('Janine', 'Lanser'), ('Janine', 'Lieffrig'), ('Janine', 'Mauroy Toffier'), ('Janine', 'Murdoch'), ('Janine', 'Remler'), ('Janine', 'Strauss'), ('Janine', 'Tiszolczy'), ('Janine', 'Tremelling'), ('Janine', 'Weinreich'), ('Janine', 'Whyte'), ('Janisse', 'Mota'), ('Janja', 'Gersic'), ('Janja', 'Kovacevic'), ('Janna', 'Hildebrand'), ('Janneke', 'Wikkerink'), ('Janthe', 'Cunningham'), ('Jaqueline Adina', 'Cristian'), ('Jara', 'Ghadri'), ('Jarita', 'Selenius'), ('Jarmila', 'Gajdosova'), ('Jaruwadee', 'Kaewma'), ('Jasleen', 'Randhawa'), ('Jaslyn', 'Hewitt'), ('Jasmin', 'Bruni'), ('Jasmin', 'Buchta'), ('Jasmin', 'Halbauer'), ('Jasmin', 'Heckel'), ('Jasmin', 'Jebawy'), ('Jasmin', 'Jessenk'), ('Jasmin', 'Kling'), ('Jasmin', 'Ladurner'), ('Jasmin', 'Matter'), ('Jasmin', 'Mertens'), ('Jasmin', 'Notdurfter'), ('Jasmin', 'Steinherr'), ('Jasmin', 'Woehr'), ('Jasmina', 'Davidovic'), ('Jasmina', 'Hamzic'), ('Jasmina', 'Kajtazovic'), ('Jasmina', 'Samardzic'), ('Jasmina', 'Stojiljkovic'), ('Jasmina', 'Tinjic'), ('Jasmine', 'Angeli'), ('Jasmine', 'Boyd'), ('Jasmine', 'Choudhury'), ('Jasmine', 'Paolini'), ('Jasmine', 'Wolcott'), ('Jasmine Amber', 'Asghar'), ('Jasmine Janelle', 'Williams'), ('Jasmine Kaur', 'Bajaj'), ('Jasmine Marina', 'Coteanu'), ('Jasmine Nicole', 'Minor'), ('Jasmine Pernill', 'Shankar'), ('Jasna', 'Brnjakovic'), ('Javiera', 'Alvarez'), ('Jawairiah', 'Noordin'), ('Jayci', 'Goldsmith'), ('Jayden', 'Nielsen'), ('Jayne', 'Demichele'), ('Jazmin', 'Britos'), ('Jazmin', 'Hernandez'), ('Jazmin', 'Ortenzi'), ('Jazzamay', 'Drew'), ('Jd', 'Griffiths'), ('Jean', 'Ceniza'), ('Jean', 'Drysdale'), ('Jean', 'Hepner'), ('Jean', 'Knight'), ('Jean', 'Nachand'), ('Jean', 'Okada'), ('Jean', 'Willmann'), ('Jean Marie', 'Lozano'), ('Jean Marie', 'Sterling'), ('Jeanette', 'Bhaguandas'), ('Jeanette', 'Draeger'), ('Jeanette', 'Gomez'), ('Jeanine', 'Baillie'), ('Jeanna', 'Schmidt'), ('Jeanne', 'Arth'), ('Jeanne', 'Duvall'), ('Jeanne', 'Evert'), ('Jeannette', 'Moesgen'), ('Jeannez', 'Daniel'), ('Jeannine', 'Hopfgartner'), ('Jeannine', 'Kuratli'), ('Jeannine', 'Niedhardt'), ('Jeannine', 'Prentner'), ('Jelena', 'Bukulin'), ('Jelena', 'Djordjevic'), ('Jelena', 'Dokic'), ('Jelena', 'Durisic'), ('Jelena', 'Dzinic'), ('Jelena', 'Ganic'), ('Jelena', 'Gencic'), ('Jelena', 'Jankovic'), ('Jelena', 'Janosevic'), ('Jelena', 'Jovic'), ('Jelena', 'Kostanic Tosic'), ('Jelena', 'Lazarevic'), ('Jelena', 'Lukic'), ('Jelena', 'Ostapenko'), ('Jelena', 'Pandzic'), ('Jelena', 'Polovina'), ('Jelena', 'Popovic'), ('Jelena', 'Rajic'), ('Jelena', 'Savic'), ('Jelena', 'Simic'), ('Jelena', 'Stanivuk'), ('Jelena', 'Stefanovic'), ('Jelena', 'Stojanovic'), ('Jelena', 'Tomasovic'), ('Jelena', 'Trailovic'), ('Jelena', 'Zivanovic'), ('Jelena Karla', 'Vujicic'), ('Jemileth', 'Aguilar'), ('Jemima', 'King'), ('Jena', 'Cheng'), ('Jeni', 'Patel'), ('Jenifer', 'Widjaja'), ('Jenna', 'Davidson'), ('Jenna', 'Friedel'), ('Jenna', 'Laroussi'), ('Jenna', 'Long'), ('Jenna', 'Rayner'), ('Jenna', 'Webster'), ('Jenna May', 'Osborne'), ('Jenneta', 'Halliyeva'), ('Jennie', 'Brobeck'), ('Jennie', 'Loow'), ('Jennie', 'McMahon'), ('Jennifer', 'Adrien'), ('Jennifer', 'Allan'), ('Jennifer', 'Aubernon'), ('Jennifer', 'Baker'), ('Jennifer', 'Balent'), ('Jennifer', 'Betancourt Hurtado'), ('Jennifer', 'Black'), ('Jennifer', 'Brady'), ('Jennifer', 'Brown'), ('Jennifer', 'Callen'), ('Jennifer', 'Capriati'), ('Jennifer', 'Carati Del Nogal'), ('Jennifer', 'Carter'), ('Jennifer', 'Chay'), ('Jennifer', 'De Bodt'), ('Jennifer', 'De Spain'), ('Jennifer', 'Duncan'), ('Jennifer', 'Elie'), ('Jennifer', 'Fenwick'), ('Jennifer', 'Fiers'), ('Jennifer', 'Fuchs'), ('Jennifer', 'Furnari'), ('Jennifer', 'Glynn'), ('Jennifer', 'Goodling'), ('Jennifer', 'Hadjieva'), ('Jennifer', 'Hall'), ('Jennifer', 'Hauer'), ('Jennifer', 'Hoad'), ('Jennifer', 'Holmberg'), ('Jennifer', 'Hopkins'), ('Jennifer', 'Jussi'), ('Jennifer', 'Klaschka'), ('Jennifer', 'Langer'), ('Jennifer', 'Larking Dawson'), ('Jennifer', 'Ligator'), ('Jennifer', 'Longin'), ('Jennifer', 'Luikham'), ('Jennifer', 'Magley'), ('Jennifer', 'Mcgaffigan'), ('Jennifer', 'Meredith'), ('Jennifer', 'Miccoli'), ('Jennifer', 'Migan'), ('Jennifer', 'Mitchell'), ('Jennifer', 'Moinard'), ('Jennifer', 'Mundel'), ('Jennifer', 'Nelson'), ('Jennifer', 'Obrien'), ('Jennifer', 'Poskitt'), ('Jennifer', 'Poulos'), ('Jennifer', 'Prah'), ('Jennifer', 'Pusey'), ('Jennifer', 'Rabot'), ('Jennifer', 'Radman'), ('Jennifer', 'Ren'), ('Jennifer', 'Rink'), ('Jennifer', 'Rothschild'), ('Jennifer', 'Ruetten'), ('Jennifer', 'Russell'), ('Jennifer', 'Saberon'), ('Jennifer', 'Sans'), ('Jennifer', 'Santrock'), ('Jennifer', 'Saret'), ('Jennifer', 'Schmidt'), ('Jennifer', 'Seide'), ('Jennifer', 'Slotow'), ('Jennifer', 'Smith'), ('Jennifer', 'Stevens'), ('Jennifer', 'Thornton'), ('Jennifer', 'Thorpe'), ('Jennifer', 'Timotin'), ('Jennifer', 'Tinnacher'), ('Jennifer', 'Tuchband'), ('Jennifer', 'Wacker'), ('Jennifer', 'Waggott'), ('Jennifer', 'Witthoeft'), ('Jennifer', 'Woyke'), ('Jennifer', 'Yen'), ('Jennifer', 'Young'), ('Jennifer', 'Zerbone'), ('Jennifer Lee', 'Heinser'), ('Jennifer Rosa', 'Dourado'), ('Jenny', 'Andrade'), ('Jenny', 'Belobrajdic'), ('Jenny', 'Broughall'), ('Jenny', 'Burrows'), ('Jenny', 'Byrne'), ('Jenny', 'Claffey'), ('Jenny', 'Combs'), ('Jenny', 'Dimond'), ('Jenny', 'Drummond'), ('Jenny', 'Duerst'), ('Jenny', 'Falcon Manrique'), ('Jenny', 'Frisell'), ('Jenny', 'Gardiner'), ('Jenny', 'Helliar'), ('Jenny', 'Jullien'), ('Jenny', 'Klemm'), ('Jenny', 'Klitch'), ('Jenny', 'Kuhlin'), ('Jenny', 'Kuhn'), ('Jenny', 'Lindstrom'), ('Jenny', 'Lunde'), ('Jenny', 'Reeves'), ('Jenny', 'Ridderhof'), ('Jenny', 'Rolf'), ('Jenny', 'Saarnilina'), ('Jenny', 'Sotomayor'), ('Jenny', 'Swift'), ('Jenny', 'Timoney'), ('Jenny', 'Trettin'), ('Jenny', 'Walker'), ('Jenny', 'Whalen'), ('Jenny', 'Zachrisson'), ('Jenny', 'Zambrano'), ('Jenny', 'Zika'), ('Jenny Ann', 'Fetch'), ('Jenny Thuy', 'Le'), ('Jente', 'Smit'), ('Jenya', 'Plevako'), ('Jeom Re', 'Park'), ('Jeom Sang', 'Choi'), ('Jeong A', 'Cho'), ('Jeong Eun', 'Park'), ('Jeong Hee', 'Paek'), ('Jeong Min', 'Jeon'), ('Jeong Myung', 'Lee'), ('Jeong Ok', 'Choi'), ('Jeong Soon', 'Lee'), ('Jeong Soon', 'Yang'), ('Jeongyun', 'Lee'), ('Jeri', 'Ingram'), ('Jerricka', 'Boone'), ('Jesica', 'Audina'), ('Jesica', 'Brys'), ('Jesica', 'Escobar'), ('Jesika', 'Maleckova'), ('Jeske', 'Van Erven'), ('Jesse', 'Hollins'), ('Jessi', 'Robinson'), ('Jessica', 'Aguilera'), ('Jessica', 'Alexander'), ('Jessica', 'Balbuena'), ('Jessica', 'Bertoldo'), ('Jessica', 'Birowski'), ('Jessica', 'Brito'), ('Jessica', 'Brouwer'), ('Jessica', 'Bruehwiler'), ('Jessica', 'Bruyns'), ('Jessica', 'Cohen'), ('Jessica', 'Cortes'), ('Jessica', 'Courtnell'), ('Jessica', 'Crivelletto'), ('Jessica', 'Emmons'), ('Jessica', 'Engels'), ('Jessica', 'Failla'), ('Jessica', 'Ferguson'), ('Jessica', 'Fernandez'), ('Jessica', 'Gardefjord'), ('Jessica', 'Ginier'), ('Jessica', 'Golovin'), ('Jessica', 'Gomez Galloso'), ('Jessica', 'Green'), ('Jessica', 'Hinojosa Gomez'), ('Jessica', 'Ho'), ('Jessica', 'Homberg'), ('Jessica', 'Hubbard'), ('Jessica', 'Iniguez'), ('Jessica', 'Jackson'), ('Jessica', 'Johnson Guyaux'), ('Jessica', 'Kirkland'), ('Jessica', 'Laing'), ('Jessica', 'Lawrence'), ('Jessica', 'Lehnhoff'), ('Jessica', 'Leitch'), ('Jessica', 'Lopez Lopez'), ('Jessica', 'Mcclintock'), ('Jessica', 'Mckeown'), ('Jessica', 'Mezo'), ('Jessica', 'Moore'), ('Jessica', 'Nguyen'), ('Jessica', 'Obi'), ('Jessica', 'Omeara'), ('Jessica', 'Orselli'), ('Jessica', 'Ortiz Diaz Oliver'), ('Jessica', 'Palma'), ('Jessica', 'Pegula'), ('Jessica', 'Perez'), ('Jessica', 'Picas'), ('Jessica', 'Pieri'), ('Jessica', 'Plazas'), ('Jessica', 'Raith'), ('Jessica', 'Ren'), ('Jessica', 'Roland Rosario'), ('Jessica', 'Sabeshinskaja'), ('Jessica', 'Schaer'), ('Jessica', 'Simosa'), ('Jessica', 'Simpson'), ('Jessica', 'Steck'), ('Jessica', 'Stein'), ('Jessica', 'Sweeting'), ('Jessica', 'Tribula'), ('Jessica', 'Wacnik'), ('Jessica', 'Weeks'), ('Jessica', 'Weyreuter'), ('Jessica', 'Williams'), ('Jessica', 'Young'), ('Jessica', 'Zeynel'), ('Jessica', 'Zok'), ('Jessica Marie', 'Agra'), ('Jessie', 'Aney'), ('Jessie', 'De Vries'), ('Jessie', 'Rochefort'), ('Jessie Felisia', 'Pakaya'), ('Jessie Jiaxin', 'Gong'), ('Jessie Lynn', 'Paul'), ('Jessika', 'Ponchet'), ('Jessy', 'Rompies'), ('Jessyca', 'Arthur'), ('Jetpisit', 'Lertsirisumpan'), ('Jette', 'Wilhelmsen'), ('Jewel', 'Peterson'), ('Jharna', 'Nansi'), ('Jheni', 'Osman'), ('Ji', 'Lee'), ('Ji Ae', 'Kim'), ('Ji Fei', 'Yu'), ('Ji Hee', 'Choi'), ('Ji Hee', 'Lee'), ('Ji Hey', 'Lee'), ('Ji Hye', 'Kim'), ('Ji Hye', 'Shin'), ('Ji Hyun', 'Kim'), ('Ji Hyun', 'Lee'), ('Ji Hyun', 'Oh'), ('Ji Min', 'Park'), ('Ji Sook', 'Kim'), ('Ji Su', 'Bae'), ('Ji Sun', 'Ha'), ('Ji Sun', 'Kim'), ('Ji Youn', 'Lee'), ('Ji Young', 'Kim'), ('Ji Young', 'Lee'), ('Ji Young', 'Yoo'), ('Ji Yun', 'Park'), ('Ji Yun', 'Yun'), ('Jia', 'Lin'), ('Jia', 'Ren'), ('Jia', 'Zhao'), ('Jia Bao', 'Yin'), ('Jia Bei', 'Mei'), ('Jia Jing', 'Lu'), ('Jia Qi', 'Kang'), ('Jia Qi', 'Yang'), ('Jiahe', 'Cai'), ('Jiahuan', 'He'), ('Jiahui', 'Chen'), ('Jiakang', 'Li'), ('Jialu', 'Huang'), ('Jiang', 'Yu'), ('Jiangxue', 'Han'), ('Jiaqi', 'Yang'), ('Jiaqing', 'Mo'), ('Jiatian', 'Qi'), ('Jiawen', 'Li'), ('Jiaxi', 'Lu'), ('Jiaxue', 'Zang'), ('Jiaying', 'He'), ('Jiayuan', 'Xue'), ('Jie', 'Hao'), ('Jie', 'Xu'), ('Jie', 'Zeng'), ('Jie', 'Zheng'), ('Jieke', 'Stroobant'), ('Jihan', 'Patel'), ('Jihane', 'Megdiche'), ('Jihene', 'Benzeggouta'), ('Jihye', 'Choi'), ('Jil', 'Wagner'), ('Jil Belen', 'Teichmann'), ('Jil Lin', 'Leong'), ('Jil Nora', 'Engelmann'), ('Jilke', 'Nelord'), ('Jill', 'Brenner'), ('Jill', 'Cooper'), ('Jill', 'Craybas'), ('Jill', 'Davis'), ('Jill', 'Hamilton'), ('Jill', 'Hetherington'), ('Jill', 'Patterson'), ('Jill', 'Schwikert'), ('Jill', 'Smoller'), ('Jill', 'Waldman'), ('Jill M', 'Saunders'), ('Jillian', 'Alexander Brower'), ('Jillian', 'Muller'), ('Jillian', 'Oneill'), ('Jillian', 'Rooney'), ('Jillian', 'Taggart'), ('Jimena', 'Alvarez'), ('Jimena', 'Fernandez'), ('Jimena', 'Rodriguez Benito'), ('Jimena', 'Wu'), ('Jimena Paula', 'Garbino'), ('Jimin', 'Kwon'), ('Jin', 'Choi'), ('Jin', 'Huang'), ('Jin', 'Yoo'), ('Jin A', 'Lee'), ('Jin Hee', 'Kim'), ('Jin Jie', 'Gong'), ('Jin Ju', 'Lee'), ('Jin Li', 'Tang'), ('Jin Sil', 'Park'), ('Jin Young', 'Choi'), ('Jinal', 'Patel'), ('Jindra', 'Gabrisova'), ('Jing', 'Ren'), ('Jing', 'Sung'), ('Jing', 'Zhou'), ('Jing Hua', 'He'), ('Jing Jing', 'Chen'), ('Jing Jing', 'Liu'), ('Jing Jing', 'Lu'), ('Jing Jue', 'Lu'), ('Jing Qian', 'Yi'), ('Jinxuan', 'Wang'), ('Jitasha', 'Shastri M'), ('Jithmie', 'Jayawickrema'), ('Jitka', 'Dubcova'), ('Jitka', 'Gavdunova'), ('Jitka', 'Kleisnerova'), ('Jitka', 'Schonfeldova'), ('Jitka', 'Volavkova'), ('Jitske', 'Frankenhuis'), ('Jitsupang', 'Samrej'), ('Jo', 'Durie'), ('Jo', 'Griffiths'), ('Jo', 'Sheridan'), ('Jo', 'Weisen'), ('Jo Anne', 'Faull'), ('Joan', 'Johnson'), ('Joan', 'Koudelka'), ('Joan', 'Walker'), ('Joana', 'Brites'), ('Joana', 'Cortez'), ('Joana', 'Eidukonyte'), ('Joana', 'Ferreira'), ('Joana', 'Laranjinha'), ('Joana', 'Manta'), ('Joana', 'Pangaio Pereira'), ('Joana', 'Pedroso'), ('Joana', 'Roda'), ('Joana', 'Santiago'), ('Joana', 'Vale Costa'), ('Joana Alexandra', 'Comsa'), ('Joanie', 'Macken'), ('Joanna', 'Bauza'), ('Joanna', 'Bougon'), ('Joanna', 'Carlson'), ('Joanna', 'Carswell'), ('Joanna', 'Craven'), ('Joanna', 'Dobrowolska'), ('Joanna', 'Furdyna'), ('Joanna', 'Garland'), ('Joanna', 'Gozdek'), ('Joanna', 'Henderson'), ('Joanna', 'Horne'), ('Joanna', 'Jurca'), ('Joanna', 'Kacprzyk'), ('Joanna', 'Mather'), ('Joanna', 'Matuszczyk'), ('Joanna', 'Meagher'), ('Joanna', 'Nalborska'), ('Joanna', 'Phang'), ('Joanna', 'Rossi'), ('Joanna', 'Sakowicz Kostecka'), ('Joanna', 'Skrzypczynska'), ('Joanna', 'Szymczyk'), ('Joanna', 'Zajac'), ('Joanna', 'Zawadzka'), ('Joanna', 'Zwirbulis'), ('Joanna', 'Zyndzo'), ('Joanna Mary', 'Smith'), ('Joanna Nena', 'Savva'), ('Joanne', 'Akl'), ('Joanne', 'Karaitiana'), ('Joanne', 'Keene'), ('Joanne', 'Limmer'), ('Joanne', 'Louis'), ('Joanne', 'Mayne'), ('Joanne', 'Moore'), ('Joanne', 'Russell'), ('Joanne', 'Schickerling'), ('Joanne', 'Ward'), ('Joanne', 'Zuger'), ('Joannette', 'Kruger'), ('Joany', 'Pontjodikromo'), ('Jocelijn', 'Cavero Roeper'), ('Jocelyn', 'Ffriend'), ('Jocelyn', 'Rae'), ('Jodi', 'Davidson'), ('Jodi', 'Kenoyer'), ('Jodi', 'Richardson'), ('Jodi', 'Saunders'), ('Jodie', 'Lynn'), ('Jodie', 'Mckinnon'), ('Jodie', 'Williams'), ('Jodie Anna', 'Burrage'), ('Jodie Annie', 'Lawrence Taylor'), ('Jody', 'Anglin'), ('Jody', 'Appelbaum'), ('Jody', 'Yin'), ('Joelie', 'Brousseaud'), ('Joelle', 'Kissell'), ('Joelle', 'Schad'), ('Johana', 'Hernandez'), ('Johana', 'Markova'), ('Johana Maria', 'Vitanzo Maravi'), ('Johann', 'Fernandes'), ('Johanna', 'Bihr'), ('Johanna', 'Dahlback'), ('Johanna', 'De Leon'), ('Johanna', 'Engstrom'), ('Johanna', 'Hyoty'), ('Johanna', 'Ingnas'), ('Johanna', 'Isokangas'), ('Johanna', 'Konta'), ('Johanna', 'Larsson'), ('Johanna', 'Pana'), ('Johanna', 'Pesola'), ('Johanna', 'Ranta Aho'), ('Johanna', 'Silva'), ('Johanna', 'Skoglund'), ('Johanna', 'Sones'), ('Johanna', 'Zingman'), ('Johanne', 'Venturino'), ('Johnnise', 'Renaud'), ('Joice Riana', 'Sutedja'), ('Joke', 'De Kok'), ('Jolanda', 'Mens'), ('Jolanta', 'Twarowska'), ('Jolene', 'Watanabe Giltz'), ('Joleta', 'Budiman'), ('Jolien', 'De Wulf'), ('Jolien', 'Gadeyne'), ('Jolien', 'Kroese'), ('Jone', 'Kruger'), ('Joneca', 'Meurling'), ('Joni', 'Urban'), ('Joni', 'Van Ryck De Groot'), ('Jonna', 'Jonerup'), ('Jonni', 'Seymour'), ('Joo Hee', 'Lee'), ('Joo Young', 'Woo'), ('Joohyoung', 'Kim'), ('Jordan', 'Ortega Mendez'), ('Jordana', 'Lujan'), ('Jordanna', 'Seymour'), ('Jorgelina', 'Barrera'), ('Jorgelina', 'Cravero'), ('Jorgelina', 'Moreno'), ('Jorgelina', 'Torti'), ('Josanne', 'Van Bennekom'), ('Josefin', 'Andersson'), ('Josefin', 'Halden'), ('Josefin', 'Hjertquist'), ('Josefina', 'Surraco'), ('Josefina', 'Vega'), ('Josefine', 'Strom'), ('Josella Francisca', 'Valderrama Ahumada'), ('Joselyn Margarita', 'Treyes AlbarracN'), ('Josepha', 'Adam'), ('Josephine', 'Boualem'), ('Josephine', 'Haraldsson'), ('Josephine', 'Hofmann'), ('Josephine', 'Jedrychowski'), ('Josephine', 'Paguyo'), ('Josephine', 'Strandfors'), ('Josiane', 'Graas'), ('Josie', 'Kuhlman'), ('Josien', 'Boverhof'), ('Josipa', 'Bek'), ('Josselin', 'Lattanzio'), ('Josymar', 'Escalona'), ('Jovana', 'Blagojevic'), ('Jovana', 'Bogicevic'), ('Jovana', 'Gvozdenovic'), ('Jovana', 'Jakouliev'), ('Jovana', 'Jaksic'), ('Jovana', 'Jankovic'), ('Jovana', 'Karac'), ('Jovana', 'Kenic'), ('Jovana', 'Knezevic'), ('Jovana', 'Krsikapa'), ('Jovana', 'Miletic'), ('Jovana', 'Peric'), ('Jovana', 'Petrov'), ('Jovana', 'Petrovic'), ('Jovana', 'Rasovic'), ('Jovana', 'Stanisljevic'), ('Jovana', 'Stankovic'), ('Jovana', 'Trickovic'), ('Jovana', 'Vasic'), ('Jovana', 'Vukovic'), ('Jovanna', 'Pecovski'), ('Joy', 'Cummings'), ('Joy', 'Emerson'), ('Joy', 'Rodrigues'), ('Joy', 'Schwikert'), ('Joy', 'Tacon'), ('Joy', 'Yaich'), ('Joyce', 'Ardies'), ('Joyce', 'Bergman'), ('Joyce', 'Davenport'), ('Joyce', 'Martinez'), ('Joyce', 'Portman'), ('Joyce', 'Van Der Linden'), ('Joyce', 'Williams'), ('Ju Eun', 'Heo'), ('Ju Eun', 'Kim'), ('Ju Hee', 'You'), ('Ju Yeon', 'Choi'), ('Juan Juan', 'Cheng'), ('Juan Rosalia', 'Tejoprayitno'), ('Juana', 'Miras Navarro'), ('Juana', 'Zambrano'), ('Juanas', 'Miras Navarro'), ('Juanita', 'Diaz'), ('Juanita', 'Munoz'), ('Judit', 'Domingo Casas'), ('Judit', 'Llorens'), ('Judit', 'Nagy'), ('Judit', 'Trunkos'), ('Judit', 'Vives Joan'), ('Judita', 'Papista'), ('Judith', 'Bohnenkamp Serena'), ('Judith', 'Collado'), ('Judith', 'Czigany'), ('Judith', 'Diaz'), ('Judith', 'Gohn'), ('Judith', 'Mercade'), ('Judith', 'Perello Saavedra'), ('Judith', 'Principe'), ('Judith', 'Salome'), ('Judith', 'Szorenyi'), ('Judith', 'Van Kessel'), ('Judith', 'Warringa'), ('Judith', 'Wiesner'), ('Judith Maria', 'Barrios Rolon'), ('Judy', 'Alvarez'), ('Judy', 'Chaloner'), ('Judy', 'Congdon'), ('Judy', 'Dalton'), ('Judy', 'Dixon'), ('Judy', 'Forbes'), ('Judy', 'Harris'), ('Judy', 'Newman'), ('Judy', 'Rich'), ('Jue', 'Wang'), ('Julaluck', 'Sae Eung'), ('Jule', 'Niemeier'), ('Jule', 'Salzburg'), ('Juleya', 'Semenets'), ('Juli', 'Raventos'), ('Julia', 'Abe'), ('Julia', 'Acs'), ('Julia', 'Adlbrecht'), ('Julia', 'Albuquerque'), ('Julia', 'Apostoli'), ('Julia', 'Ascua'), ('Julia', 'Babilon'), ('Julia', 'Beconi'), ('Julia', 'Biffar'), ('Julia', 'Bochkareva'), ('Julia', 'Boden'), ('Julia', 'Bone'), ('Julia', 'Boserup'), ('Julia', 'Browne'), ('Julia', 'Candiotto'), ('Julia', 'Carballal Fernandez'), ('Julia', 'Casselbury'), ('Julia', 'Chergova'), ('Julia', 'Chernyaeva'), ('Julia', 'Cohen'), ('Julia', 'Comas Espona'), ('Julia', 'Courter'), ('Julia', 'Dinhof'), ('Julia', 'Doci'), ('Julia', 'Dziedzic'), ('Julia', 'Efremova'), ('Julia', 'Elbaba'), ('Julia', 'Fisch'), ('Julia', 'Freitas'), ('Julia', 'Gandia'), ('Julia', 'Gandia Gomez'), ('Julia', 'Gavenko'), ('Julia', 'Glushko'), ('Julia', 'Goerges'), ('Julia', 'Goloborodko'), ('Julia', 'Grabher'), ('Julia', 'Gragera Cano'), ('Julia', 'Helbet'), ('Julia', 'Henninger'), ('Julia', 'Herlogsson'), ('Julia', 'Hodes'), ('Julia', 'Huschke'), ('Julia', 'Iglesias'), ('Julia', 'Izotova'), ('Julia', 'Jagodzinska'), ('Julia', 'Jehs'), ('Julia', 'Jones'), ('Julia', 'Jung'), ('Julia', 'Kapitanova'), ('Julia', 'Kashevarova'), ('Julia', 'Keranovic'), ('Julia', 'Khamula'), ('Julia', 'Kimmelmann'), ('Julia', 'Klackenberg'), ('Julia', 'Klein'), ('Julia', 'Kondratovskaia'), ('Julia', 'Konishi Camargo Silva'), ('Julia', 'Kryoukova'), ('Julia', 'Kushnereva'), ('Julia', 'Landauer'), ('Julia', 'Livotova'), ('Julia', 'Lorca'), ('Julia', 'Lutrova'), ('Julia', 'Matojan'), ('Julia', 'Mayr'), ('Julia', 'Mertins'), ('Julia', 'Mikulski'), ('Julia', 'Moriarty'), ('Julia', 'Muir'), ('Julia', 'Nogueira'), ('Julia', 'Oczachowska'), ('Julia', 'Osmolets'), ('Julia', 'Oussanova'), ('Julia', 'Paetow'), ('Julia', 'Parasyuk'), ('Julia', 'Payola'), ('Julia', 'Perez Wienese'), ('Julia', 'Podgorochna'), ('Julia', 'Przybylska'), ('Julia', 'Pugach'), ('Julia', 'Rehberg'), ('Julia', 'Rissanen'), ('Julia', 'Roach'), ('Julia', 'Roca Valverde'), ('Julia', 'Romanova'), ('Julia', 'Rosenquist'), ('Julia', 'Sack'), ('Julia', 'Sagan'), ('Julia', 'Samuseva'), ('Julia', 'Saving'), ('Julia', 'Scaringe'), ('Julia', 'Schepp'), ('Julia', 'Schiller'), ('Julia', 'Schruff'), ('Julia', 'Sloboda'), ('Julia', 'Smith'), ('Julia', 'Spiridonova'), ('Julia', 'Stamatova'), ('Julia', 'Suzuki'), ('Julia', 'Terziyska'), ('Julia', 'Teufel'), ('Julia', 'Thiem'), ('Julia', 'Tozzi'), ('Julia', 'Trunk'), ('Julia', 'Vakulenko'), ('Julia', 'Valetova'), ('Julia', 'Vulpio'), ('Julia', 'Wachaczyk'), ('Julia', 'Wagner'), ('Julia', 'Wais'), ('Julia', 'Wieckowski'), ('Julia', 'Zakharova'), ('Julia Christine', 'Fellerhoff'), ('Julia Mansano', 'Gomide'), ('Julia Maria', 'Arguello'), ('Julia Maria', 'Navarro Navarro'), ('Julia Mihaela', 'Moldovan'), ('Julia Octavia', 'Groblewski'), ('Juliana', 'Alzate'), ('Juliana', 'Botelho'), ('Juliana', 'Castellanos Fernandez'), ('Juliana', 'Cordero'), ('Juliana', 'Fernandes'), ('Juliana', 'Franco'), ('Juliana', 'Gajic'), ('Juliana', 'Garcia'), ('Juliana', 'Goncalves'), ('Juliana', 'Gorka'), ('Juliana', 'Jofre'), ('Juliana', 'Jonsdottir'), ('Juliana', 'Marques'), ('Juliana', 'Moscoso'), ('Juliana', 'Pena'), ('Juliana', 'Pires'), ('Juliana', 'Piumatti'), ('Juliana', 'Silva De Carvalho'), ('Juliana', 'Umeki'), ('Juliana', 'Valero'), ('Juliana', 'Voigt'), ('Juliana Jose', 'Parra Gomez'), ('Juliana Rocha', 'Cardoso'), ('Julianna', 'Gates'), ('Julianna Barbosa', 'Bacelar'), ('Julianne', 'Welford'), ('Julie', 'Anthony'), ('Julie', 'Ball'), ('Julie', 'Bensilum'), ('Julie', 'Bigot'), ('Julie', 'Byrne'), ('Julie', 'Chao'), ('Julie', 'Coin'), ('Julie', 'Coles'), ('Julie', 'De Armond'), ('Julie', 'De Roo'), ('Julie', 'Ditty'), ('Julie', 'Exum'), ('Julie', 'Fidler'), ('Julie', 'Filkoff'), ('Julie', 'Foillard'), ('Julie', 'Fratoni'), ('Julie', 'Garret'), ('Julie', 'Gervais'), ('Julie', 'Gonzalez Rodriguez'), ('Julie', 'Halard Decugis'), ('Julie', 'Hanger'), ('Julie', 'Hanrahan'), ('Julie', 'Harrington'), ('Julie', 'Heldman'), ('Julie', 'Herve'), ('Julie', 'Huang'), ('Julie', 'Jacobs'), ('Julie', 'Mansour'), ('Julie', 'McKeon'), ('Julie', 'Mckeon'), ('Julie', 'Merle'), ('Julie', 'Noe'), ('Julie', 'Peters'), ('Julie', 'Pullin'), ('Julie', 'Queval'), ('Julie', 'Razafindranaly'), ('Julie', 'Renson Miquel'), ('Julie', 'Richardson'), ('Julie', 'Rotondi'), ('Julie', 'Salla'), ('Julie', 'Salmon'), ('Julie', 'Scott'), ('Julie', 'Shiflet'), ('Julie', 'Sinkins'), ('Julie', 'Smekodub'), ('Julie', 'Staines'), ('Julie', 'Stas'), ('Julie', 'Steven'), ('Julie', 'Thu'), ('Julie', 'Tremblay'), ('Julie', 'Tringa'), ('Julie', 'Uwague'), ('Julie', 'Verdy'), ('Julie', 'Vo'), ('Julie', 'Walther'), ('Julie', 'White'), ('Julie', 'Wijnakker'), ('Julie', 'Zanin'), ('Julie Ann', 'Baird'), ('Julie Ann', 'Cadiente'), ('Julie Anne', 'Chidley'), ('Julieanne', 'Bou'), ('Juliet', 'Bocklet'), ('Juliet', 'Drew'), ('Juliet Jia Wen', 'Zhang'), ('Julieta', 'Albornoz'), ('Julieta', 'Calabrese'), ('Julieta', 'Guimaraes'), ('Julieta', 'Robin'), ('Julieta Evangelina', 'Bidahorria'), ('Julieta Lara', 'Estable'), ('Julieta Sofia', 'Canas'), ('Julieta Soledad', 'Rodriguez'), ('Juliette', 'Bastin'), ('Juliette', 'Bertagnol'), ('Juliette', 'Colard'), ('Juliette', 'Coupez'), ('Juliette', 'Sapene'), ('Juliette', 'Surlemont'), ('Julija', 'Gotovskyte'), ('Julija', 'Jauk'), ('Julija', 'Kulibaba'), ('Julija', 'Lukac'), ('Julija', 'Sabanov'), ('Julita', 'Saner'), ('Julyette Maria Josephine', 'Steur'), ('Jumoke', 'Ajulo'), ('Jun', 'Zhang'), ('Jun Yi', 'Zheng'), ('June', 'Ferestein'), ('June', 'Lee'), ('Jung Chi', 'Tsai'), ('Jung Eun', 'Kim'), ('Jung Eun', 'Nam'), ('Jung Ha', 'Lee'), ('Jung Hua', 'Kuo'), ('Jung Yoon', 'Shin'), ('Junjuti', 'Dorkkulab'), ('Junko', 'Nishida'), ('Junko', 'Sawamatsu'), ('Junko', 'Watanabe'), ('Junko', 'Yamada'), ('Junri', 'Namigata'), ('Junsai', 'Wang'), ('Juri', 'Fukushima'), ('Juri', 'Komatsu'), ('Justina', 'Derungs'), ('Justina', 'Mikulskyte'), ('Justine', 'Bourdon'), ('Justine', 'Brown'), ('Justine', 'De Sutter'), ('Justine', 'Henin'), ('Justine', 'Hodder'), ('Justine', 'Lo Presti'), ('Justine', 'Ozga'), ('Justine', 'Pysson'), ('Justine', 'Sutherland'), ('Justine', 'Walsh'), ('Justyna', 'Jegiolka'), ('Justyna', 'Pajak'), ('Justyna', 'Richter'), ('Justyna', 'Wojas'), ('Juthika', 'Chokshi'), ('Jutta', 'Bornefeld'), ('Jutta', 'Diesslin'), ('Jutta', 'Ribitsch'), ('Jyotsna', 'Vasisht'), ('K', 'Bluhm'), ('K', 'Leslie'), ('Ka Man Carina', 'Ma'), ('Ka Po', 'Tong'), ('Kaaviya', 'Balasubramanian'), ('Kadi', 'Hilpus'), ('Kadi', 'Ilves'), ('Kadi Liis', 'Saar'), ('Kadija', 'Richards'), ('Kady', 'Pooler'), ('Kaede', 'Hayase'), ('Kaede', 'Ikuma'), ('Kaede', 'Matsuo'), ('Kago', 'Phatshwane'), ('Kai Chen', 'Chang'), ('Kai Feng', 'Yi'), ('Kai Lin', 'Zhang'), ('Kaia', 'Kanepi'), ('Kairangi', 'Vano'), ('Kaisaran', 'Siewrattan'), ('Kaitlin', 'Ray'), ('Kaitlin', 'Staines'), ('Kaitlyn', 'Christian'), ('Kaitlyn', 'Mccarthy'), ('Kaja', 'Juvan'), ('Kaja', 'Kond'), ('Kaja', 'Podobnik'), ('Kaja', 'Rajh'), ('Kaja', 'Smole'), ('Kajsa', 'Rinaldo Persson'), ('Kali A', 'Krisik'), ('Kalina', 'Bozhilova'), ('Kalina', 'Diankova'), ('Kalinina', 'Sandoval'), ('Kalita', 'Saraiva'), ('Kalliopi', 'Gkouskou'), ('Kalliopi', 'Katsoupi'), ('Kalliopi', 'Zamanoudi'), ('Kalpaka', 'Pradip'), ('Kalpita', 'Raje'), ('Kamalpreet', 'Bhullar'), ('Kamila', 'Abdukadirova'), ('Kamila', 'Dadakhodjaeva'), ('Kamila', 'Kerimbayeva'), ('Kamila', 'Marchocka'), ('Kamila', 'Mirzaalimova'), ('Kamila', 'Pavelkova'), ('Kamila', 'Rafkat'), ('Kamilia', 'Daya'), ('Kamilla', 'Beisenova'), ('Kamilla', 'Bolatova'), ('Kamilla', 'Farhad'), ('Kamilla', 'Galieva'), ('Kamilla', 'Kokeladze'), ('Kamilla', 'Rakhimova'), ('Kamini', 'Murugaboopathy'), ('Kamolnadda', 'Thumrongluck'), ('Kamonluk', 'Kittitanom'), ('Kamonthip', 'Saovana'), ('Kamonwan', 'Buayam'), ('Kamonwan', 'Thongsaner'), ('Kana', 'Aoki'), ('Kana', 'Daniel'), ('Kana', 'Hatakeyama'), ('Kana', 'Kubota'), ('Kana', 'Natsume'), ('Kana', 'Okada'), ('Kana', 'Okawa'), ('Kana', 'Watanabe'), ('Kanae', 'Hisami'), ('Kanae', 'Iha'), ('Kanaka', 'Tsujimura'), ('Kanako', 'Ishida'), ('Kanako', 'Kozawa'), ('Kanako', 'Morisaki'), ('Kanako', 'Ootsuka'), ('Kanako', 'Osafune'), ('Kanako', 'Yano'), ('Kanami', 'Tsuji'), ('Kandiss', 'Creighton'), ('Kanika', 'Vaidya'), ('Kanisha', 'Mehta'), ('Kanistha', 'Sritawan'), ('Kanna', 'Nishida'), ('Kanoko', 'Ohara'), ('Kanyalak', 'Boonyarat'), ('Kanyapat', 'Narattana'), ('Kaori', 'Aoyama'), ('Kaori', 'Goto'), ('Kaori', 'Kuki'), ('Kaori', 'Oishi'), ('Kaori', 'Onishi'), ('Kaori', 'Sano'), ('Kaori', 'Yamazaki'), ('Kaoru', 'Maezawa'), ('Kaoru', 'Okamoto'), ('Kaoru', 'Shibata'), ('Kaoru', 'Yagi'), ('Kaoutar', 'Yazghi'), ('Kara', 'Cecil'), ('Kara', 'Fisher'), ('Kara', 'Knight'), ('Kara', 'Molony Hussey'), ('Kara', 'Schertzer'), ('Kara', 'Warkentin'), ('Karamontree', 'Siriluethaiwattana'), ('Karem', 'Harboe'), ('Karen', 'Alvarez'), ('Karen', 'Anderson'), ('Karen', 'Bacon'), ('Karen', 'Barbat'), ('Karen', 'Black'), ('Karen', 'Buchholz'), ('Karen', 'Butler'), ('Karen', 'Castiblanco'), ('Karen', 'Cross'), ('Karen', 'Dawson'), ('Karen', 'Deed'), ('Karen', 'Denman'), ('Karen', 'Dewis'), ('Karen', 'Faus'), ('Karen', 'Feldman'), ('Karen', 'Filippou'), ('Karen', 'Fisher'), ('Karen', 'Fodera'), ('Karen', 'Frawley'), ('Karen', 'Gallego'), ('Karen', 'Gebauer'), ('Karen', 'Gulley'), ('Karen', 'Hernandez'), ('Karen', 'Huebner'), ('Karen', 'Hueffman'), ('Karen', 'Hunter'), ('Karen', 'Kennington'), ('Karen', 'Kozangian'), ('Karen', 'Krantzcke'), ('Karen', 'Losch'), ('Karen', 'Nijssen'), ('Karen', 'Nugent'), ('Karen', 'Paterson'), ('Karen', 'Rombouts'), ('Karen', 'Saravia'), ('Karen', 'Schimper'), ('Karen', 'Shin'), ('Karen', 'Smith'), ('Karen', 'Susman'), ('Karen', 'Theck'), ('Karen', 'Van Der Merwe'), ('Karen Elena', 'Montoya'), ('Karen Johana', 'Martinez'), ('Karen Johanna', 'Ramirez Rivera'), ('Karen M', 'Gomez Gonzalez'), ('Karen Natalia', 'Martinez Bernal'), ('Karen Sofia', 'Romero'), ('Kari', 'Gunton'), ('Kari', 'Olsen'), ('Kari', 'Wig'), ('Kariann', 'Pierre Louis'), ('Karim', 'Strohmeier Merino'), ('Karima', 'Ait Ali Yahia'), ('Karin', 'Asberg'), ('Karin', 'Balekova'), ('Karin', 'Boshoff'), ('Karin', 'Cislikowski'), ('Karin', 'Coetzee'), ('Karin', 'Conti'), ('Karin', 'Dallwitz'), ('Karin', 'Hamanaka'), ('Karin', 'Hechenberger'), ('Karin', 'Hinterwirth'), ('Karin', 'Hiraoka'), ('Karin', 'Hoppler'), ('Karin', 'Ionesco'), ('Karin', 'Kennel'), ('Karin', 'Knapp'), ('Karin', 'Kschwendt'), ('Karin', 'Kues'), ('Karin', 'Lems'), ('Karin', 'Lundmark'), ('Karin', 'Lusnic'), ('Karin', 'Miller'), ('Karin', 'Moos'), ('Karin', 'Morgosova'), ('Karin', 'Oberleitner'), ('Karin', 'Palme'), ('Karin', 'Ptaszek'), ('Karin', 'Schlapbach'), ('Karin', 'Stampfli'), ('Karin', 'Terami'), ('Karin', 'Urbin'), ('Karin', 'Vodickova'), ('Karin', 'Zibar'), ('Karina', 'Ahuja'), ('Karina', 'Bradnam'), ('Karina', 'Fiamenghi'), ('Karina', 'Gamonal'), ('Karina', 'Goia'), ('Karina', 'Gootman'), ('Karina', 'Grigorian'), ('Karina', 'Gurgenyan'), ('Karina', 'Habsudova'), ('Karina', 'Heck'), ('Karina', 'Isayan'), ('Karina', 'Jarlkaganova'), ('Karina', 'Kalkenova'), ('Karina', 'Karner'), ('Karina', 'Kedzo'), ('Karina', 'Koche'), ('Karina', 'Komaruk'), ('Karina', 'Kuregian'), ('Karina', 'Maliska'), ('Karina', 'Miguenz'), ('Karina', 'Pimkina'), ('Karina', 'Porushkevich'), ('Karina', 'Rinaldi'), ('Karina', 'Rovira'), ('Karina', 'Saeri Ono'), ('Karina', 'Silkina'), ('Karina', 'Tomaszewska'), ('Karina', 'Torres Ferrer'), ('Karina', 'Traxler'), ('Karina', 'Venditti'), ('Karina Ildor', 'Jacobsgaard'), ('Karina Kristina', 'Vyrlan'), ('Karina Natalia', 'Lojo'), ('Karine', 'Celis'), ('Karine', 'Etienne'), ('Karine', 'Gallet'), ('Karine', 'Preaud'), ('Karine', 'Quentrec'), ('Karine', 'Redon'), ('Karine', 'Sarkisova'), ('Karis', 'Ryan'), ('Karishma', 'Mulay'), ('Karishma', 'Patel'), ('Karla', 'Alvarado'), ('Karla', 'Bonacic'), ('Karla', 'Contreras'), ('Karla', 'De La Luz Montalvo'), ('Karla', 'Gallardo'), ('Karla', 'Golfin'), ('Karla', 'Hall Gonzalez'), ('Karla', 'Jana'), ('Karla', 'Kilic'), ('Karla', 'Lehnoff'), ('Karla', 'Mancinas'), ('Karla', 'Miranda'), ('Karla', 'Mraz'), ('Karla', 'Popovic'), ('Karla', 'Portalatin'), ('Karla', 'Porter'), ('Karla', 'Portillo'), ('Karla', 'Umana'), ('Karly', 'Olson'), ('Karman', 'Thandi'), ('Karmelina', 'Rivera'), ('Karmen', 'Skulj'), ('Karni', 'Cohen'), ('Karola', 'Diaconescu'), ('Karola Patricia', 'Bejenaru'), ('Karolayne', 'Alexandre Da Rosa'), ('Karolina', 'Bakalarova'), ('Karolina', 'Benackova'), ('Karolina', 'Berankova'), ('Karolina', 'Bulat'), ('Karolina', 'Cechova'), ('Karolina', 'Chernaya'), ('Karolina', 'Domanski'), ('Karolina', 'Dziubanii'), ('Karolina', 'Filipiak'), ('Karolina', 'Glowacka'), ('Karolina', 'Hakala'), ('Karolina', 'Jagieniak'), ('Karolina', 'Jaskiewicz'), ('Karolina', 'Jovanovic'), ('Karolina', 'Karlsson'), ('Karolina', 'Kosinska'), ('Karolina', 'Kostro'), ('Karolina', 'Kowall'), ('Karolina', 'Kubanova'), ('Karolina', 'Lisiecka'), ('Karolina', 'Muchova'), ('Karolina', 'Navratilova'), ('Karolina', 'Novotna'), ('Karolina', 'Nowak'), ('Karolina', 'Petrikova'), ('Karolina', 'Pliskova'), ('Karolina', 'Pondusova'), ('Karolina', 'Porubska'), ('Karolina', 'Rejniak'), ('Karolina', 'Roubickova'), ('Karolina', 'Rozenberg'), ('Karolina', 'Sadaj'), ('Karolina', 'Silwanowicz'), ('Karolina', 'Snita'), ('Karolina', 'Soor'), ('Karolina', 'Sprem'), ('Karolina', 'Stuchla'), ('Karolina', 'Szmit'), ('Karolina', 'Vlachova'), ('Karolina', 'Wlodarczak'), ('Karolina', 'Zamiela'), ('Karolina', 'Zmyslowska'), ('Karoline', 'Borgersen'), ('Karoline', 'Grieshofer'), ('Karoline', 'Kurz'), ('Karoline', 'Steiro'), ('Karolyn', 'Grymel'), ('Karthiga', 'Thavarajasingam'), ('Kartika', 'Halim'), ('Kartiki Vijay', 'Bhat'), ('Karyn', 'Emeralda'), ('Karyn', 'Guttormsen'), ('Karyna', 'Alesha'), ('Kasandra', 'Kozub'), ('Kassandra', 'Davesne'), ('Kassandra', 'Dunser'), ('Kasturi', 'Bhat'), ('Kasumi', 'Aiko'), ('Kasumi', 'Hattori'), ('Kat', 'Bailey'), ('Kat', 'Facey'), ('Kata', 'Gyorke'), ('Katalin', 'Borka'), ('Katalin', 'Darvas'), ('Katalin', 'Marosi'), ('Katalin', 'Miskolczi'), ('Katalin', 'Szekely'), ('Kataraina', 'Hunia'), ('Katarena', 'Paliivets'), ('Katariina', 'Tuohimaa'), ('Katarina', 'Adamovic'), ('Katarina', 'Anic'), ('Katarina', 'Balan'), ('Katarina', 'Baranova'), ('Katarina', 'Barclay'), ('Katarina', 'Bartholdson'), ('Katarina', 'Basternakova'), ('Katarina', 'Gajic'), ('Katarina', 'Guarino'), ('Katarina', 'Jokic'), ('Katarina', 'Jovanovic'), ('Katarina', 'Kachlikova'), ('Katarina', 'Karanja'), ('Katarina', 'Kostic'), ('Katarina', 'Kozarov'), ('Katarina', 'Krpan'), ('Katarina', 'Lerga'), ('Katarina', 'Lindner'), ('Katarina', 'Ljujic'), ('Katarina', 'Marackova'), ('Katarina', 'Marinkovikj'), ('Katarina', 'Markovski'), ('Katarina', 'Milinkovic'), ('Katarina', 'Misic'), ('Katarina', 'Mlcochova'), ('Katarina', 'Panakova'), ('Katarina', 'Pavlovic'), ('Katarina', 'Poljakova'), ('Katarina', 'Sasaroga'), ('Katarina', 'Srebotnik'), ('Katarina', 'Stresnakova'), ('Katarina', 'Studenikova'), ('Katarina', 'Trickovic'), ('Katarina', 'Tuohimaa'), ('Katarina', 'Valkyova'), ('Katarina', 'Vranic'), ('Katarina', 'Weymouth'), ('Katarina', 'Zavatska'), ('Katarina', 'Zoricic'), ('Katarina Duic', 'Plumtree'), ('Katarzyna', 'Kaleta'), ('Katarzyna', 'Kapustka'), ('Katarzyna', 'Kawa'), ('Katarzyna', 'Kolodynska'), ('Katarzyna', 'Kossowska'), ('Katarzyna', 'Kubicz'), ('Katarzyna', 'Malec'), ('Katarzyna', 'Nowak'), ('Katarzyna', 'Pitak'), ('Katarzyna', 'Piter'), ('Katarzyna', 'Pyka'), ('Katarzyna', 'Siwosz'), ('Katarzyna', 'Skrzypczynska'), ('Katarzyna', 'Straczy'), ('Katarzyna', 'Teodorowicz Lisowska'), ('Katarzyna', 'Walukiewicz'), ('Katarzyna', 'Witos'), ('Katarzyna', 'Wysoczanska'), ('Kate', 'Antosik'), ('Kate', 'Boomershine'), ('Kate', 'Brasher'), ('Kate', 'Cusick'), ('Kate', 'Elliott'), ('Kate', 'Fuller'), ('Kate', 'Glancy'), ('Kate', 'Gompert'), ('Kate', 'Hole'), ('Kate', 'Jolson'), ('Kate', 'Latham'), ('Kate', 'Lutgert'), ('Kate', 'Mcdonald'), ('Kate', 'Pinchbeck'), ('Kate', 'Rodger'), ('Kate', 'Turvy'), ('Kate', 'Vialle'), ('Kate', 'Warne Holland'), ('Kate', 'Zueva'), ('Katelyn', 'Jackson'), ('Katelyn', 'Ross'), ('Katelyn', 'Stokes'), ('Katerina', 'Avdiyenko'), ('Katerina', 'Baka'), ('Katerina', 'Bohmova'), ('Katerina', 'Bohmova'), ('Katerina', 'Boiko'), ('Katerina', 'Brozova'), ('Katerina', 'Chuda'), ('Katerina', 'Filip'), ('Katerina', 'Hladka'), ('Katerina', 'Ilyina'), ('Katerina', 'Kaminkova'), ('Katerina', 'Kocibova'), ('Katerina', 'Kramperova'), ('Katerina', 'Krizova'), ('Katerina', 'Kroupova'), ('Katerina', 'Latalova'), ('Katerina', 'Maleeva'), ('Katerina', 'Mazackova'), ('Katerina', 'Petrenko'), ('Katerina', 'Polunina'), ('Katerina', 'Popova'), ('Katerina', 'Romanenko'), ('Katerina', 'Romanyuta'), ('Katerina', 'Sevcikova'), ('Katerina', 'Sidorovich'), ('Katerina', 'Siniakova'), ('Katerina', 'Stamatopoulou'), ('Katerina', 'Stewart'), ('Katerina', 'Stloukalova'), ('Katerina', 'Teplizki'), ('Katerina', 'Traykova'), ('Katerina', 'Tsygourova'), ('Katerina', 'Valos'), ('Katerina', 'Vankova'), ('Katerina', 'Vlckova'), ('Katerina', 'Zajacova'), ('Katerina', 'Zlebkova'), ('Katerina', 'Zupancic'), ('Katerleen', 'Szeman'), ('Kateryna', 'Baranivska'), ('Kateryna', 'Bondarenko'), ('Kateryna', 'Byelcheva'), ('Kateryna', 'Filyus'), ('Kateryna', 'Karpiuk'), ('Kateryna', 'Kozlova'), ('Kateryna', 'Lymar'), ('Kateryna', 'Malakhova'), ('Kateryna', 'Nezhura'), ('Kateryna', 'Popova'), ('Kateryna', 'Pyatakova'), ('Kateryna', 'Riabtseva'), ('Kateryna', 'Sliusar'), ('Kateryna', 'Vasylyeva'), ('Kateryna', 'Yergina'), ('Katharina', 'Alberti'), ('Katharina', 'Blik'), ('Katharina', 'Braeutigam'), ('Katharina', 'Brown'), ('Katharina', 'Buche'), ('Katharina', 'Duell'), ('Katharina', 'Feldmer'), ('Katharina', 'Gerlach'), ('Katharina', 'Hering'), ('Katharina', 'Herpertz'), ('Katharina', 'Hobgarski'), ('Katharina', 'Hock'), ('Katharina', 'Holert'), ('Katharina', 'Jacob'), ('Katharina', 'Jobst'), ('Katharina', 'Killi'), ('Katharina', 'Knoebl'), ('Katharina', 'Kukaras'), ('Katharina', 'Lehnert'), ('Katharina', 'Morth'), ('Katharina', 'Negrin'), ('Katharina', 'Rath'), ('Katharina', 'Scholtisek'), ('Katharina', 'Siller'), ('Katharine', 'Baker'), ('Katharine', 'Fahey'), ('Katherina', 'Trumpf'), ('Katherine', 'Boyanovich'), ('Katherine', 'Camilleri'), ('Katherine', 'Costain'), ('Katherine', 'Fleischman'), ('Katherine', 'Frame'), ('Katherine', 'Gladding'), ('Katherine', 'Hoepelman'), ('Katherine', 'Ip'), ('Katherine', 'Laidler'), ('Katherine', 'Laporta'), ('Katherine', 'Lee'), ('Katherine', 'Lyman'), ('Katherine', 'Rammo'), ('Katherine', 'Sebov'), ('Katherine', 'Tessier'), ('Katherine', 'Vymetal'), ('Katherine', 'Westbury'), ('Katherine', 'White'), ('Katherine', 'Wittgruber'), ('Katherine', 'Zordani'), ('Katherine Gabriela', 'Miranda Chang'), ('Katheryne Stephanie', 'Valencia Perez'), ('Kathinka', 'Von Deichmann'), ('Kathleen', 'Biong Percegona'), ('Kathleen', 'Blaszak'), ('Kathleen', 'Carey'), ('Kathleen', 'Cummings'), ('Kathleen', 'Derienzo'), ('Kathleen', 'Harter'), ('Kathleen', 'Kanev'), ('Kathleen', 'Mcgaffigan'), ('Kathleen', 'Odaly'), ('Kathleen', 'Schuurmans'), ('Kathrin', 'Hegel'), ('Kathrin', 'Keil'), ('Kathrin', 'Spendier'), ('Kathrin', 'Weinwurm'), ('Kathrin', 'Woerle'), ('Kathrine', 'Berge'), ('Kathryn', 'Bentley'), ('Kathryn', 'Hughes'), ('Kathryn', 'Katibi'), ('Kathryn', 'Sell'), ('Kathy', 'Barton'), ('Kathy', 'Blake'), ('Kathy', 'Foxworth'), ('Kathy', 'Hofer'), ('Kathy', 'Holton'), ('Kathy', 'Horvath'), ('Kathy', 'Jordan'), ('Kathy', 'Kraft'), ('Kathy', 'Kuykendall'), ('Kathy', 'Mantle'), ('Kathy', 'May Teacher Paben'), ('Kathy', 'Mueller'), ('Kathy', 'ODaly'), ('Kathy', 'Obrien'), ('Kathy', 'Rinaldi Stunkel'), ('Kathy', 'Walker'), ('Kati', 'Athorne'), ('Kati', 'Kocsis'), ('Kati', 'Wolner'), ('Katia', 'Alarcon'), ('Katia', 'Altilia'), ('Katia', 'Bogomolova'), ('Katia', 'Ceracchi'), ('Katia', 'Labourey'), ('Katia', 'Piccolini'), ('Katia', 'Rodrigues'), ('Katia', 'Roubanova'), ('Katia', 'Sabate Orera'), ('Katia', 'Viera Erbach'), ('Katia Monserrat', 'De La Garza Valdez'), ('Katie', 'Boulter'), ('Katie', 'Gater'), ('Katie', 'Goepel'), ('Katie', 'Gouyette'), ('Katie', 'Granson'), ('Katie', 'Lafrance'), ('Katie', 'Le'), ('Katie', 'Mcglennen'), ('Katie', 'Miles'), ('Katie', 'Muller'), ('Katie', 'Obrien'), ('Katie', 'Orletsky'), ('Katie', 'Poluta'), ('Katie', 'Rickett'), ('Katie', 'Robinette'), ('Katie', 'Ruckert'), ('Katie', 'Schlukebir'), ('Katie', 'Swan'), ('Katie', 'Taylor'), ('Katie', 'Volynets'), ('Katie', 'Welch'), ('Katiuscia', 'Del Vecchio'), ('Katja', 'Blocker'), ('Katja', 'Ebbinghaus'), ('Katja', 'Karrento'), ('Katja', 'Kokko'), ('Katja', 'Kovac'), ('Katja', 'Meichelbock'), ('Katja', 'Milas'), ('Katja', 'Nossik'), ('Katja', 'Oeljeklaus'), ('Katja', 'Pohlmann'), ('Katja', 'Stemmer'), ('Katka', 'Stach'), ('Katri', 'Miller'), ('Katrien', 'De Craemer'), ('Katrien', 'Scott'), ('Katriin', 'Saar'), ('Katrin', 'Gaber'), ('Katrin', 'Glatz'), ('Katrin', 'Ittensohn'), ('Katrin', 'Kilsch'), ('Katrin', 'Klein'), ('Katrin', 'Meiss'), ('Katrin', 'Scheer'), ('Katrin', 'Schmidt'), ('Katrin', 'Tebaldini'), ('Katrina', 'Adams'), ('Katrina', 'Andrzejevska'), ('Katrina', 'Bandere'), ('Katrina', 'Crawford'), ('Katrina', 'Elder Bush'), ('Katrina', 'Greenman'), ('Katrina', 'Mihaere'), ('Katrina', 'Nimmers'), ('Katrina', 'Raicevic'), ('Katrina', 'Saarinen'), ('Katrina', 'Sammut'), ('Katrina', 'Tsang'), ('Katrine', 'Christensen'), ('Katrine Isabel', 'Steffensen'), ('Katsarina', 'Zheltova'), ('Katsiaryna', 'Skachkova'), ('Katy', 'Dunne'), ('Katy', 'Oshea'), ('Katy', 'Sauboi'), ('Katy', 'Scarisbrook'), ('Katy', 'Shaw'), ('Katya', 'Krivoshapov'), ('Katya', 'Malikova'), ('Katya', 'Zenklusen'), ('Katyarina', 'Paulenka'), ('Kavitha', 'Krishnamurthy'), ('Kawana', 'Ishijima'), ('Kay', 'Louthian'), ('Kay', 'McDaniel'), ('Kay', 'Mcdaniel'), ('Kay', 'Williams'), ('Kaye', 'Dening'), ('Kaye', 'Hallam'), ('Kaye', 'Marfini Hand'), ('Kayla', 'Day'), ('Kayla', 'Gammie'), ('Kayla', 'Rizzolo'), ('Kayla Symone', 'Price'), ('Kaylah', 'Mcphee'), ('Kayoko', 'Fukuoka'), ('Kaysara', 'Mandry'), ('Kaysie', 'Smashey'), ('Kazue', 'Takuma'), ('Kazuko', 'Ito'), ('Kazuko', 'Kuromatsu'), ('Kazuko', 'Sawamatsu'), ('Kazusa', 'Ito'), ('Ke', 'Mao'), ('Ke Hsin', 'Chen'), ('Kealy', 'Carter'), ('Kehinde', 'Amusan'), ('Kei', 'Kato'), ('Kei', 'Sekine'), ('Keiko', 'Fujiwara'), ('Keiko', 'Fukui'), ('Keiko', 'Hayashi'), ('Keiko', 'Ishida'), ('Keiko', 'Morimoto'), ('Keiko', 'Nagai'), ('Keiko', 'Nagatomi'), ('Keiko', 'Taguchi'), ('Keiko', 'Tameishi'), ('Keiko', 'Tokuda'), ('Keilly', 'Ulery'), ('Keirsten', 'Alley'), ('Kelcy', 'Mckenna'), ('Kelcy', 'Tefft'), ('Kelesitse', 'Makgale'), ('Kelia', 'Le Bihan'), ('Kelley', 'Hyndman'), ('Kelli', 'Hine'), ('Kelli', 'Zahnel'), ('Kelli Ann', 'Johnston'), ('Kelli Elizabeth', 'Close'), ('Kellie', 'Browne'), ('Kellie', 'Dorman Tyrone'), ('Kellie', 'Schmitt'), ('Kelly', 'Anderson'), ('Kelly', 'Blake'), ('Kelly', 'Blanch'), ('Kelly', 'Brown'), ('Kelly', 'Callahan'), ('Kelly', 'Chen'), ('Kelly', 'Couturier'), ('Kelly', 'De Beer'), ('Kelly', 'Duns'), ('Kelly', 'Gebert'), ('Kelly', 'Henry'), ('Kelly', 'Holland'), ('Kelly', 'Holtzhausen'), ('Kelly', 'Irving'), ('Kelly', 'Liggan'), ('Kelly', 'Mccain'), ('Kelly', 'Mcnabney'), ('Kelly', 'Pedrazzoli'), ('Kelly', 'Press'), ('Kelly', 'Rudolph'), ('Kelly', 'Schmandt'), ('Kelly', 'Shaffer'), ('Kelly', 'Simkin'), ('Kelly', 'Southwood'), ('Kelly', 'Story'), ('Kelly', 'Taylor'), ('Kelly', 'Toa'), ('Kelly', 'Versteeg'), ('Kelly', 'Williford'), ('Kelly K', 'Barry'), ('Kelly S', 'Wilson'), ('Kelsey', 'Anonsen'), ('Kelsey', 'King'), ('Kelsey', 'Laurente'), ('Kelsey', 'Lawson'), ('Kelsey', 'Sundaram'), ('Kemalie', 'Herath'), ('Kenadi', 'Hance'), ('Kendal', 'Drake'), ('Kendal', 'Woodard'), ('Kendra', 'Howard'), ('Kendra', 'Segura'), ('Kendra', 'Strohm'), ('Kenia', 'Vasallo Soto'), ('Kenna', 'Kilgo'), ('Kennan', 'Johnson'), ('Kennedy', 'Scott'), ('Kennedy', 'Shaffer'), ('Kennedy', 'Wicker'), ('Keren', 'Rozen'), ('Keren', 'Shlomo'), ('Keri', 'Phebus'), ('Keri', 'Preng'), ('Keri', 'Robison'), ('Keri', 'Wong'), ('Kerri', 'Reiter'), ('Kerrie', 'Byrne'), ('Kerrie', 'Cartwright'), ('Kerry', 'Ballard'), ('Kerry', 'Harris'), ('Kerry', 'Kendrick'), ('Kerry', 'Neill'), ('Kerry', 'Reid'), ('Kerry', 'Rudman'), ('Kerry', 'Wilkinson'), ('Kerry', 'Young'), ('Kerry Ann', 'Lim'), ('Kerry Anne', 'Guse'), ('Kerryl', 'Chute'), ('Kersten', 'Renneissen'), ('Kerstin', 'Gressmann'), ('Kerstin', 'Kreis'), ('Kerstin', 'Kretschmann'), ('Kerstin', 'Marent'), ('Kerstin', 'Peckl'), ('Kerstin', 'Seelbach'), ('Kerstin', 'Taube'), ('Keryn', 'Pratt'), ('Kesica', 'Jayapalan'), ('Kesy', 'Moison'), ('Ketevan', 'Okruashvili'), ('Ketino', 'Akhvlediani'), ('Ketravee', 'Attachoo'), ('Kett', 'Sadi'), ('Keva', 'Palmer'), ('Kewa', 'Nichols'), ('Kexuan', 'Zhou'), ('Keyi', 'Zhou'), ('Keyla Manuela', 'Cifuentes Monsalve'), ('Khady NDeye', 'Diop'), ('Khanh Phi', 'Huynh'), ('Khanita', 'Sritawan'), ('Khaoula', 'Allaoui'), ('Khee Yen', 'Wee'), ('Khim', 'Iglupas'), ('Khristen', 'Pietrucha'), ('Khristina', 'Blajkevitch'), ('Khristina', 'Kazimova'), ('Khrystsina', 'Kandratsiuk'), ('Khrystyna', 'Pavlyuk'), ('Khume', 'Herring'), ('Khunpak', 'Issara'), ('Khushcher', 'Italia'), ('Khushleen', 'Bains'), ('Khwanthiti', 'Banthao'), ('Ki Ryang', 'Kim'), ('Kiah', 'Generette'), ('Kiana', 'Marshall'), ('Kiara', 'Petrovicka'), ('Kibibi', 'Moseley'), ('Kika', 'Hogendoorn'), ('Kiki', 'Bertens'), ('Kiki', 'Filippou'), ('Kiki', 'Reuter'), ('Kikka', 'Adachi'), ('Kiko', 'Nishizato'), ('Kildine', 'Chevalier'), ('Kilmeny', 'Waterman'), ('Kim', 'Berghaus'), ('Kim', 'Borg'), ('Kim', 'Brandford'), ('Kim', 'Cartwright'), ('Kim', 'Clijsters'), ('Kim', 'Coventry'), ('Kim', 'De Weille'), ('Kim', 'Fontana'), ('Kim', 'Freebairn'), ('Kim', 'Grant'), ('Kim', 'Gysbertse'), ('Kim', 'Ha Nul'), ('Kim', 'Jones Shaefer'), ('Kim', 'Kambic'), ('Kim', 'Kelly'), ('Kim', 'Kermet'), ('Kim', 'Kilsdonk'), ('Kim', 'Labuschagne'), ('Kim', 'Niggemeyer'), ('Kim', 'Roberts'), ('Kim', 'Rudman'), ('Kim', 'Rus'), ('Kim', 'Sadi'), ('Kim', 'Sands'), ('Kim', 'Seddon'), ('Kim', 'Simmons'), ('Kim', 'Staunton'), ('Kim', 'Steinmetz'), ('Kim', 'Stierli'), ('Kim', 'Stubbe'), ('Kim', 'Van Der Horst'), ('Kim Alena', 'Twelker'), ('Kim Alice', 'Grajdek'), ('Kim Anh', 'Nguyen'), ('Kim Jana', 'Hausler'), ('Kim Janine', 'Gefeller'), ('Kim Trang', 'Nguyen'), ('Kimberley', 'Cassar'), ('Kimberley', 'Gintrand'), ('Kimberley', 'Koerner'), ('Kimberley', 'Risson'), ('Kimberley', 'Ruxton'), ('Kimberley', 'Van Rijn'), ('Kimberley', 'Zimmermann'), ('Kimberley Ann', 'Surin'), ('Kimberly', 'Birrell'), ('Kimberly', 'Buick'), ('Kimberly', 'Couts'), ('Kimberly', 'Gates'), ('Kimberly', 'Kessaris'), ('Kimberly', 'Mpukusa'), ('Kimberly', 'Po Messerli'), ('Kimberly', 'Yee'), ('Kimika', 'Sakamoto'), ('Kimika', 'Sakata'), ('Kimiko', 'Date Krumm'), ('Kimiyo', 'Yagahara'), ('Kindha', 'Nacef'), ('King See', 'Lee'), ('Kinga', 'Anusiewicz'), ('Kinga', 'Berecz'), ('Kinga', 'Kozlowska'), ('Kingkaew', 'Niroj'), ('Kinnie', 'Laisne'), ('Kintan Pratiwi', 'Anwar'), ('Kir', 'Kemp'), ('Kira', 'Bezverkova'), ('Kirandeep Kaur', 'Kotade'), ('Kiriaki', 'Karaproimou'), ('Kirrily', 'Sharpe'), ('Kirsi', 'Lampinen'), ('Kirsten', 'Dreyer'), ('Kirsten', 'Flipkens'), ('Kirsten', 'Flower'), ('Kirsten', 'Harris'), ('Kirsten', 'Joern'), ('Kirsten', 'Lewis'), ('Kirsten', 'Magi'), ('Kirsten', 'Mcarthur'), ('Kirsten', 'Moeller'), ('Kirsten', 'Robsahm'), ('Kirsten', 'Schenk'), ('Kirsten', 'Scott'), ('Kirsten', 'Willems'), ('Kirsten Andrea', 'Weedon'), ('Kirstie', 'Pathumanun Hearn'), ('Kirstin', 'Freye'), ('Kirsty', 'Blumberg'), ('Kirsty', 'Mcrae'), ('Kirsty', 'Thomas'), ('Kirsty', 'Wenzel'), ('Kirsty', 'Woolley'), ('Kisa', 'Yoshioka'), ('Kit', 'Carson'), ('Kiyoko', 'Nomura'), ('Kiyoko', 'Yazawa'), ('Kiyomi', 'Nakagawa'), ('Kjersti', 'Jensen'), ('Kjersti', 'Lund'), ('Klaartje', 'Liebens'), ('Klaartje', 'Van Baarle'), ('Klara', 'Alenas'), ('Klara', 'Bardoczy'), ('Klara', 'Blahova'), ('Klara', 'Dohnalova'), ('Klara', 'Ellingerova'), ('Klara', 'Fabikova'), ('Klara', 'Hajkova'), ('Klara', 'Hladka'), ('Klara', 'Jagosova'), ('Klara', 'Jarova'), ('Klara', 'Koprivova'), ('Klara', 'Koukalova'), ('Klara', 'Kufova'), ('Klara', 'Mrcela'), ('Klara', 'Petersson'), ('Klara', 'Silka'), ('Klara', 'Skopac'), ('Klara', 'Thell Lenntorp'), ('Klara', 'Tomsu'), ('Klara', 'Vyskocilova'), ('Klara', 'Zrustova'), ('Klaudia', 'Boczova'), ('Klaudia', 'Fedosenkova'), ('Klaudia', 'Gawlik'), ('Klaudia', 'Halasz'), ('Klaudia', 'Jans Ignacik'), ('Klaudia', 'Malenovska'), ('Klaudia', 'Szabo'), ('Klaudia', 'Wira'), ('Klaudia', 'Wlodarczyk'), ('Klavdija', 'Bukovec'), ('Klio', 'Manolopoulou'), ('Kobkanok', 'Upapong'), ('Kokoro', 'Takehara'), ('Kolie', 'Allen'), ('Komal', 'Nagare'), ('Komal', 'Safdar'), ('Komang Sri', 'Maryati'), ('Komola', 'Umarova'), ('Komugi', 'Matsui'), ('Konstantina', 'Adami'), ('Konstantina', 'Lalaouni'), ('Konstantina', 'Papaoikonomou'), ('Konstantina', 'Tsadari'), ('Kora', 'Schediwy'), ('Koral', 'Koldobski'), ('Koralie', 'Etienne'), ('Kori', 'Davidson'), ('Korina', 'Perkovic'), ('Kornelia', 'Varro'), ('Kotchamon', 'Kongkerd'), ('Kotomi', 'Takahata'), ('Kourtney J', 'Keegan'), ('Krisel', 'Sverko'), ('Krishna', 'Logeswari'), ('Krishnali', 'Bhonsle'), ('Krisna', 'Summa'), ('Krissy', 'Hamilton Heinberg'), ('Krista', 'Damico'), ('Krista', 'Hardebeck'), ('Krista', 'Sanders'), ('Kristel', 'Izquierdo'), ('Kristel', 'Van Den Tillaart'), ('Kristel', 'Van Der Perre'), ('Kristel Ann', 'Samala'), ('Kristen', 'Lopez'), ('Kristen', 'Mcvitty'), ('Kristen', 'Radford'), ('Kristen', 'Rafael'), ('Kristen', 'Sanderson'), ('Kristen', 'Schlukebir'), ('Kristen', 'Steinbock'), ('Kristen', 'Stubbs'), ('Kristen', 'Thoms'), ('Kristen', 'Van Elden'), ('Kristen A', 'Bleakley'), ('Kristi', 'Bastian'), ('Kristi', 'Boxx'), ('Kristi', 'Miller'), ('Kristie', 'Ahn'), ('Kristie', 'Boogert'), ('Kristien', 'Shaw'), ('Kristiina', 'Eskola'), ('Kristin', 'Cargill'), ('Kristin', 'Godridge'), ('Kristin', 'Gunnarsdottir'), ('Kristin', 'Gyaki'), ('Kristin', 'Kinney'), ('Kristin', 'Koenig'), ('Kristin', 'Lam'), ('Kristin', 'Martinez'), ('Kristin', 'Messmer'), ('Kristin', 'Osmond'), ('Kristin', 'Reed'), ('Kristin', 'Schuler'), ('Kristin', 'Wiley'), ('Kristin', 'Yordanova'), ('Kristin', 'Younes'), ('Kristin Vivien', 'Rehse'), ('Kristina', 'Andlovic'), ('Kristina', 'Antoniychuk'), ('Kristina', 'Baran'), ('Kristina', 'Barrois'), ('Kristina', 'Barysheva'), ('Kristina', 'Bekavac'), ('Kristina', 'Benashvili'), ('Kristina', 'Bezakova'), ('Kristina', 'Beznakova'), ('Kristina', 'Bogacheva'), ('Kristina', 'Bozinovska'), ('Kristina', 'Brandi'), ('Kristina', 'Chasovskikh'), ('Kristina', 'Curic'), ('Kristina', 'Djamalova'), ('Kristina', 'Doerr'), ('Kristina', 'Dundov'), ('Kristina', 'Eremina'), ('Kristina', 'Evtushenko'), ('Kristina', 'Georgieva'), ('Kristina', 'Geraniou'), ('Kristina', 'Grunberg'), ('Kristina', 'Horsikyan'), ('Kristina', 'Huba'), ('Kristina', 'Irwan'), ('Kristina', 'Jarkenstedt'), ('Kristina', 'Kinarkina'), ('Kristina', 'Kislyak'), ('Kristina', 'Kormuthova'), ('Kristina', 'Korochinskaya'), ('Kristina', 'Kostic'), ('Kristina', 'Kraszewski'), ('Kristina', 'Kucova'), ('Kristina', 'Lagoda'), ('Kristina', 'Mathis'), ('Kristina', 'Michalakova'), ('Kristina', 'Milenkovic'), ('Kristina', 'Miletic'), ('Kristina', 'Mladenovic'), ('Kristina', 'Movsesyan'), ('Kristina', 'Mrazova'), ('Kristina', 'Nedelcheva'), ('Kristina', 'Njegus'), ('Kristina', 'Novak'), ('Kristina', 'Ostojic'), ('Kristina', 'Parviainen'), ('Kristina', 'Pastukhova'), ('Kristina', 'Pejkovic'), ('Kristina', 'Pesatova'), ('Kristina', 'Pojatina'), ('Kristina', 'Pukhaeva'), ('Kristina', 'Radan'), ('Kristina', 'Samardzic'), ('Kristina', 'Savchenkova'), ('Kristina', 'Schleich'), ('Kristina', 'Schmiedlova'), ('Kristina', 'Shishkina'), ('Kristina', 'Solodovnikova'), ('Kristina', 'Sorokolet'), ('Kristina', 'Steiert'), ('Kristina', 'Triska'), ('Kristina', 'Ufimtseva'), ('Kristina', 'Vasina'), ('Kristina', 'Vesse'), ('Kristina N', 'Smith'), ('Kristina Tina', 'Godec'), ('Kristine', 'Kunce'), ('Kristine', 'Kurth'), ('Kristy', 'Bayer'), ('Kristy', 'Dascoli'), ('Kristy', 'Frilling'), ('Kristy', 'Pigeon'), ('Kristyna', 'Hancarova'), ('Kristyna', 'Horakova'), ('Kristyna', 'Hrabalova'), ('Kristyna', 'Kucianova'), ('Kristyna', 'Lavickova'), ('Kristyna', 'Pliskova'), ('Kristyna', 'Rouckova'), ('Kristyna', 'Sramkova'), ('Kriszina', 'Kapitany'), ('Krisztina', 'Kovacs'), ('Krizia', 'Borgarello'), ('Krushmi', 'Chheda'), ('Krystel', 'Sauvageau'), ('Krystina', 'Marcio'), ('Krystina', 'Titz'), ('Ksenia', 'Brich'), ('Ksenia', 'Chimpoake'), ('Ksenia', 'Dmitrieva'), ('Ksenia', 'Domnina'), ('Ksenia', 'Gaydarzhi'), ('Ksenia', 'Gorbunova'), ('Ksenia', 'Gospodinova'), ('Ksenia', 'Khatsey'), ('Ksenia', 'Kirillova'), ('Ksenia', 'Kolesnikova'), ('Ksenia', 'Kuznetsova'), ('Ksenia', 'Laskutova'), ('Ksenia', 'Lopina'), ('Ksenia', 'Lykina'), ('Ksenia', 'Mikhaylova'), ('Ksenia', 'Milevskaya'), ('Ksenia', 'Moskal'), ('Ksenia', 'Orehova'), ('Ksenia', 'Palkina'), ('Ksenia', 'Pervak'), ('Ksenia', 'Pushkareva'), ('Ksenia', 'Sidorova'), ('Ksenia', 'Slavina'), ('Ksenia', 'Stashenkova'), ('Ksenia', 'Tortsikava'), ('Kseniia', 'Bekker'), ('Kseniia', 'Berestetskaya'), ('Kseniia', 'Tokarieva'), ('Ksenija', 'Grinshpun'), ('Ksenija', 'Sharifova'), ('Ksenija', 'Tmusic'), ('Kseniya', 'Savenkava'), ('Kseniya', 'Yersh'), ('Ksenya', 'Bardabush'), ('Ksieniia', 'Rudenko'), ('Ku Maizan', 'Shak'), ('Kuburat', 'Akintunde'), ('Kum Ok', 'Im'), ('Kumarani', 'Ranga Rao'), ('Kumari Sweta', 'Solanki'), ('Kumi', 'Fukui'), ('Kumi', 'Hagino'), ('Kumi', 'So'), ('Kumiko', 'Anzai'), ('Kumiko', 'Iijima'), ('Kumiko', 'Okamoto'), ('Kun', 'Deng'), ('Kun', 'Zhang'), ('Kun Hee', 'Kim'), ('Kunigunda', 'Dorn'), ('Kuniyo', 'Tsukamoto'), ('Kunkanda', 'Pukjumpa'), ('Kunykei', 'Koichumananova'), ('Kurumi', 'Nara'), ('Kurumi', 'Sensui'), ('Kveta', 'Hajkova'), ('Kveta', 'Peschke'), ('Kwan Yau', 'Ng'), ('Kwon Hee', 'Kim'), ('Kyeong Mi', 'Choi'), ('Kyla', 'Hunte'), ('Kyla', 'Jarrar'), ('Kyle', 'Mcphillips'), ('Kylene', 'Wong Simunyola'), ('Kylie', 'Copeland'), ('Kylie', 'Gottsche'), ('Kylie', 'Hunt'), ('Kylie', 'Johnson'), ('Kylie', 'Mckenzie'), ('Kylie', 'Moore'), ('Kylie', 'Moulds'), ('Kylie', 'Waschuk'), ('Kylie', 'Wilcox'), ('Kym', 'Hazzard'), ('Kym', 'Laver'), ('Kym', 'Ruddell'), ('Kyoka', 'Okamura'), ('Kyoko', 'Hirano'), ('Kyoko', 'Iida'), ('Kyoko', 'Kojima'), ('Kyoko', 'Nagatsuka'), ('Kyra', 'Nagy'), ('Kyra', 'Shroff'), ('Kyra', 'Wojcik'), ('Kyria', 'Dunford'), ('Kyung Hwa', 'Lee'), ('Kyung Joo', 'Won'), ('Kyung Mi', 'Chang'), ('Kyung Mi', 'Noh'), ('Kyung Mi', 'Park'), ('Kyung Sook', 'Yoo'), ('Kyung Won', 'Kim'), ('Kyung Yee', 'Chae'), ('Kyung Yee', 'Chang'), ('L', 'Cameron'), ('L', 'Griffiths'), ('L', 'Rios De Almeida'), ('La Shawnn', 'Jones'), ('Lacey Jo', 'Coleman'), ('Ladina', 'Soler'), ('Laetitia', 'Allegrini'), ('Laetitia', 'Bonny'), ('Laetitia', 'Charbonnet'), ('Laetitia', 'Gassis'), ('Laetitia', 'Prat'), ('Laetitia', 'Pulchartova'), ('Laetitia', 'Renault'), ('Laetitia', 'Sanchez'), ('Laetitia', 'Sarrazin'), ('Laetitia', 'Zembski'), ('Laia', 'Conde Monfort'), ('Laia', 'Conejero Gutierrez'), ('Laia', 'Gonzalez Garrido'), ('Laia', 'Hernandez Soler'), ('Laia', 'Santamaria Colomer'), ('Laila', 'Abdala'), ('Laila', 'Ben Abderrahman'), ('Laila', 'Elnimr'), ('Laila', 'Karim'), ('Laila', 'Pirila'), ('Laila', 'Shetty'), ('Laili', 'Rahmawati Ulfa'), ('Lais', 'Carvalho De Oliveira Bicca'), ('Lais', 'Ogata'), ('Lais', 'Souza'), ('Lakschmi', 'Van Der Wart'), ('Laksmi', 'Nuraningsih'), ('Lalatiana', 'Randriamanantena'), ('Lalita', 'Devarakonda'), ('Lam Anh', 'Tran'), ('Lama', 'Daouk'), ('Lamia', 'Alami'), ('Lamia', 'Essaadi'), ('Lamia', 'Hameurlaine'), ('Lamiaa', 'Aziz'), ('Lamis', 'Alhussein Abdel Aziz'), ('Lamsriati', 'Moerid'), ('Lamyae', 'Dad'), ('Lan', 'Yao'), ('Lan Lan', 'Tai'), ('Lana', 'Groenvynck'), ('Lana', 'Kentchiashvili'), ('Lana', 'Miholcek'), ('Lana', 'Popadic'), ('Lana', 'Rostiashvili'), ('Lana', 'Rush'), ('Lana', 'Scardigno'), ('Lana', 'Sipek'), ('Lana', 'Slavica'), ('Lana', 'Stefanovic'), ('Lani', 'Tuemmers'), ('Lani', 'Wilcox'), ('Lany', 'Kaligis'), ('Laone', 'Botshoma'), ('Lara', 'Afonso Garcia'), ('Lara', 'Albini'), ('Lara', 'Alexander'), ('Lara', 'Alsamman'), ('Lara', 'Arnaout'), ('Lara', 'Arruabarrena'), ('Lara', 'Biter'), ('Lara', 'Bitter'), ('Lara', 'Conrad'), ('Lara', 'De Angelis'), ('Lara', 'Del Saz'), ('Lara', 'Del Saz De Soto'), ('Lara', 'Dimmer'), ('Lara', 'Ercegovic'), ('Lara', 'Escauriza'), ('Lara', 'Fakhoury'), ('Lara', 'Garcia'), ('Lara', 'Giltinan'), ('Lara', 'Glavic'), ('Lara', 'Howes'), ('Lara', 'Kamnik'), ('Lara', 'Kralj'), ('Lara', 'Meccico'), ('Lara', 'Michel'), ('Lara', 'Panfilov'), ('Lara', 'Picone'), ('Lara', 'Pujol Rotger'), ('Lara', 'Rafful'), ('Lara', 'Salden'), ('Lara', 'Schmidt'), ('Lara', 'Souza Soares'), ('Lara', 'Van Rooyen'), ('Lara', 'Wittmann'), ('Lara Isis', 'Teodoro De Oliveira'), ('Larikah', 'Russell'), ('Larisa', 'Bekmetova'), ('Larisa', 'Gorodetsky'), ('Larisa', 'Savchenko'), ('Larisa', 'Sporea'), ('Larissa', 'Bucher'), ('Larissa', 'Carvalho'), ('Larissa', 'Deschamps'), ('Larissa', 'Ferreira Melo'), ('Larissa', 'Horat'), ('Larissa', 'Ravanini De Souza'), ('Larissa', 'Schaerer'), ('Larissa', 'Wuehrl'), ('Larn', 'Mcshane'), ('Larraine', 'Saavedra'), ('Lashawnn', 'Jones'), ('Lata', 'Assudani'), ('Latavra', 'Andriashvili'), ('Latifah', 'Al Sayed Omar'), ('Latifah Amelia', 'Dinar'), ('Latrell', 'Reed'), ('Laura', 'Aguero'), ('Laura', 'Andrei'), ('Laura', 'Antonana Iriarte'), ('Laura', 'Apaolaza Miradevilla'), ('Laura', 'Argente'), ('Laura', 'Ashley'), ('Laura', 'Austin'), ('Laura', 'Babet'), ('Laura', 'Bao'), ('Laura', 'Barbu'), ('Laura', 'Barona'), ('Laura', 'Bastos'), ('Laura', 'Bel Franquesa'), ('Laura', 'Beltran'), ('Laura', 'Bente'), ('Laura', 'Bernal'), ('Laura', 'Bernard'), ('Laura', 'Bernstein'), ('Laura', 'Bolet'), ('Laura', 'Borza'), ('Laura', 'Bosneag'), ('Laura', 'Botero'), ('Laura', 'Bredniak'), ('Laura', 'Bsoul'), ('Laura', 'Burns'), ('Laura', 'Cabrera Lafuente'), ('Laura', 'Cardone'), ('Laura', 'Cartwright'), ('Laura', 'Cazacu'), ('Laura', 'Cebrian'), ('Laura', 'Claus'), ('Laura', 'Collins'), ('Laura', 'Correia'), ('Laura', 'Cuddon Large'), ('Laura', 'Deigman'), ('Laura', 'Dellangelo'), ('Laura', 'Du Pont'), ('Laura', 'Enea'), ('Laura', 'Falceto Font'), ('Laura', 'Falconieri'), ('Laura', 'Fernandez'), ('Laura', 'Ferreira'), ('Laura', 'Fiala'), ('Laura', 'Figuerola Foix'), ('Laura', 'Fisher'), ('Laura', 'Fitzgerald'), ('Laura', 'Fodorean'), ('Laura', 'Frias'), ('Laura', 'Gamarra'), ('Laura', 'Gambarini'), ('Laura', 'Ganzer'), ('Laura', 'Garcia Martinez'), ('Laura', 'Garcia Pacual'), ('Laura', 'Garrone'), ('Laura', 'Gatti'), ('Laura', 'Gence'), ('Laura', 'Gibanel Velasco'), ('Laura', 'Gil Lerin'), ('Laura', 'Gilbert'), ('Laura', 'Gildemeister'), ('Laura', 'Giussani'), ('Laura', 'Glitz'), ('Laura', 'Golarsa'), ('Laura', 'Gomez'), ('Laura', 'Gordon'), ('Laura', 'Gotarredona'), ('Laura', 'Granville'), ('Laura', 'Gulbe'), ('Laura', 'Haberkorn'), ('Laura', 'Harkness'), ('Laura', 'Heckler'), ('Laura', 'Heinrichs'), ('Laura', 'Hernandez'), ('Laura', 'Holterbosch'), ('Laura', 'Hornsby'), ('Laura', 'Hudson'), ('Laura', 'Illanes'), ('Laura', 'Lapi'), ('Laura', 'Lechi'), ('Laura', 'Levan'), ('Laura', 'Lim'), ('Laura', 'Liong'), ('Laura', 'Lopez Giese'), ('Laura', 'Luedemann'), ('Laura', 'Maisonnave'), ('Laura', 'Maluniakova'), ('Laura', 'Manfredonia'), ('Laura', 'Mangunsong'), ('Laura', 'Mannisto'), ('Laura', 'Marti'), ('Laura', 'Masic'), ('Laura', 'Mcgaffigan'), ('Laura', 'Medei'), ('Laura', 'Milner'), ('Laura', 'Moares'), ('Laura', 'Moll Bagur'), ('Laura', 'Montalvo'), ('Laura', 'Morales'), ('Laura', 'Morales Hernandez'), ('Laura', 'Moreno Hernandez'), ('Laura', 'Moreno Martinez'), ('Laura', 'Morrill'), ('Laura', 'Mueller'), ('Laura', 'Murgo'), ('Laura', 'Noguera Aparicio'), ('Laura', 'Nurminen'), ('Laura', 'Oates'), ('Laura', 'Olave'), ('Laura', 'Pena'), ('Laura', 'Pennanen'), ('Laura', 'Perez'), ('Laura', 'Pertusa Garcia'), ('Laura', 'Peterzan'), ('Laura', 'Pigossi'), ('Laura', 'Pimenta'), ('Laura', 'Pola'), ('Laura', 'Popescu'), ('Laura', 'Pous Tio'), ('Laura', 'Prenant'), ('Laura', 'Pretin'), ('Laura', 'Puch'), ('Laura', 'Quintanilla Vidal'), ('Laura', 'Raimkhanova'), ('Laura', 'Randmaa'), ('Laura', 'Revert Oroz'), ('Laura', 'Richards'), ('Laura', 'Rijkers'), ('Laura', 'Rincon'), ('Laura', 'Ritchey'), ('Laura', 'Rizzi'), ('Laura', 'Robson'), ('Laura', 'Rocchi'), ('Laura', 'Rodriguez Navas'), ('Laura', 'Roig Tortajada'), ('Laura', 'Rossi'), ('Laura', 'Rossouw'), ('Laura', 'Sadria'), ('Laura', 'Sainsbury'), ('Laura', 'Sanchez'), ('Laura', 'Schaeder'), ('Laura', 'Sham'), ('Laura', 'Siegemund'), ('Laura', 'Slater'), ('Laura', 'Smith'), ('Laura', 'Svatikova'), ('Laura', 'Tanfin'), ('Laura', 'Thorpe'), ('Laura', 'Tinello'), ('Laura', 'Torres'), ('Laura', 'Tuzzi'), ('Laura', 'Ubeda Lopez'), ('Laura', 'Ucros'), ('Laura', 'Valkova'), ('Laura', 'Vallverdu Zafra'), ('Laura', 'Van De Stroet'), ('Laura', 'Vignoni'), ('Laura', 'Viquez'), ('Laura', 'White'), ('Laura', 'Zelder'), ('Laura Alejandra', 'Gutierrez Gomez'), ('Laura Alicia', 'Aguilar'), ('Laura D', 'Arciniegas'), ('Laura Ioana', 'Andrei'), ('Laura Margareta', 'Luca'), ('Laura Mariana', 'Montalvo'), ('Laura Mirabela', 'Teodorescu'), ('Laura Ramona', 'Husaru'), ('Laura Sarah', 'Ambrozic'), ('Laura Silva', 'De Arruda'), ('Laura Sofia', 'Rico Garcia'), ('Laura Sofia', 'Sanchez Perez'), ('Laura Zsofia', 'Biro'), ('Laure Line', 'Glaude'), ('Lauren', 'Albanese'), ('Lauren', 'Barnikow'), ('Lauren', 'Bishop'), ('Lauren', 'Breadmore'), ('Lauren', 'Burich'), ('Lauren', 'Cheung'), ('Lauren', 'Chypyha'), ('Lauren', 'Colalillo'), ('Lauren', 'Cooper'), ('Lauren', 'Davis'), ('Lauren', 'Deegan'), ('Lauren', 'Dossor'), ('Lauren', 'Dowling'), ('Lauren', 'Embree'), ('Lauren', 'Fisher'), ('Lauren', 'Gavaris'), ('Lauren', 'Gish'), ('Lauren', 'Greco'), ('Lauren', 'Hankle'), ('Lauren', 'Harrington'), ('Lauren', 'Herring'), ('Lauren', 'Imre'), ('Lauren', 'Jones'), ('Lauren', 'Kalvaria'), ('Lauren', 'Lui'), ('Lauren', 'Macfarlane'), ('Lauren', 'Marker'), ('Lauren', 'Martin'), ('Lauren', 'Mchale'), ('Lauren', 'Mcminn'), ('Lauren', 'Nikolaus Zink'), ('Lauren', 'Proctor'), ('Lauren', 'Rookledge'), ('Lauren', 'Rose'), ('Lauren', 'Sabacinski'), ('Lauren', 'Schmidt'), ('Lauren', 'Shumate'), ('Lauren', 'Stein'), ('Lauren', 'Stephens'), ('Lauren', 'Stratman'), ('Lauren', 'Townrow'), ('Lauren Joanna', 'Lang'), ('Laurence', 'Andretto'), ('Laurence', 'Bois'), ('Laurence', 'Combes'), ('Laurence', 'Courtois'), ('Laurence', 'Duffaud'), ('Laurence', 'Garcia Clement'), ('Laurence', 'Giroud'), ('Laurence', 'Jayet'), ('Laurence', 'Neuville'), ('Laurence', 'Pont'), ('Laurence', 'Poujoulat'), ('Laurene', 'Fayol'), ('Laurette', 'Van Den Knaap'), ('Laurianne', 'Henry'), ('Laurie', 'Gingras'), ('Laurie', 'Rowley'), ('Laurie', 'Tenney'), ('Lauryn', 'John Baptiste'), ('Lavanya', 'Khanuja'), ('Lavanya', 'Nath'), ('Lavinia', 'Lancellotti'), ('Lavinia', 'Sereteanu'), ('Lavinia', 'Tananta'), ('Lavinia', 'Timme'), ('Lavinia', 'Toader'), ('Laxmi', 'Poruri'), ('Layla', 'Tohme'), ('Laylo', 'Bahodyrova'), ('Layne', 'Sleeth'), ('Lazarina', 'Sazdova'), ('Le', 'Ma'), ('Le', 'Zhao'), ('Lea', 'Antonoplis'), ('Lea', 'Boskovic'), ('Lea', 'Bruno'), ('Lea', 'Degen'), ('Lea', 'Dubois Rebiere'), ('Lea', 'Gasparovic'), ('Lea', 'Ghirardi'), ('Lea', 'Godallier'), ('Lea', 'Pericoli'), ('Lea', 'Plchova'), ('Lea', 'Romain'), ('Lea', 'Tholey'), ('Lea', 'Winkler'), ('Lea Katharina', 'Jacob'), ('Leah', 'Daw'), ('Leah', 'Luboldt'), ('Leana', 'Atlan'), ('Leanne', 'Baker'), ('Leanne', 'Harrison Austin'), ('Leanne', 'Melgaard'), ('Leanne', 'Palmisano'), ('Leanne', 'Rutherford'), ('Lebogang', 'Seitshiro'), ('Lechia', 'Trewick'), ('Leciane', 'Comparin Da Silva'), ('Leda', 'Pesatova'), ('Ledna', 'Martin'), ('Lee', 'Barnard'), ('Lee', 'Ben Or'), ('Lee', 'Chan'), ('Lee', 'Levy'), ('Lee', 'Or'), ('Lee', 'Whitwell'), ('Lee Ann', 'Van Den Berg'), ('Lee Anne', 'Lingo'), ('Leela', 'Beattie'), ('Leeloo', 'Obrul'), ('Leen', 'Irani'), ('Leena', 'Mutanen'), ('Leena', 'Singarajah'), ('Leeza', 'Rooks'), ('Lei', 'Chen'), ('Lei', 'Feng'), ('Lei', 'Huang'), ('Leia', 'Balkevarn'), ('Leia', 'Kaukonen'), ('Leigh', 'Bradwell'), ('Leigh', 'Shelton'), ('Leigh', 'Walsh'), ('Leigh Anne', 'Eldredge'), ('Leigh Anne', 'Thompson'), ('Leighann', 'Sahagun'), ('Leila', 'Hodzic'), ('Leila', 'Koster'), ('Leila', 'Meskhi'), ('Leila', 'Salek'), ('Leire', 'Etayo'), ('Leire', 'Martin Tena'), ('Leire', 'Martinez Barredo'), ('Leisa', 'Dunn'), ('Lejla', 'Colic'), ('Lejla', 'Hodzic'), ('Lejla', 'Husic'), ('Lejla', 'Popobic'), ('Lela', 'Zainal'), ('Lele', 'Forood'), ('Leloba', 'Seitshiro'), ('Lema', 'Ateba'), ('Lena', 'Babunski'), ('Lena', 'Dvornik'), ('Lena', 'Greiner'), ('Lena', 'Keothavong'), ('Lena', 'Litvak'), ('Lena', 'Lutzeier'), ('Lena', 'Pacholski'), ('Lena', 'Reichel'), ('Lena', 'Rueffer'), ('Lena', 'Ruppert'), ('Lena', 'Sandin'), ('Lena', 'Sherbakov'), ('Lena', 'Specht'), ('Lena Marie', 'Hofmann'), ('Lenah Hatsumi', 'Sakai'), ('Lenice', 'Van Eyk'), ('Lenka', 'Antonijevic'), ('Lenka', 'Broosova'), ('Lenka', 'Cenkova'), ('Lenka', 'Danielova'), ('Lenka', 'Dlhopolcova'), ('Lenka', 'Dzygovska'), ('Lenka', 'Filipova'), ('Lenka', 'Hladikova'), ('Lenka', 'Hojckova'), ('Lenka', 'Humenikova'), ('Lenka', 'Jaloviecova'), ('Lenka', 'Jurikova'), ('Lenka', 'Kuncikova'), ('Lenka', 'Nemeckova'), ('Lenka', 'Novotna'), ('Lenka', 'Piskova'), ('Lenka', 'Potocarova'), ('Lenka', 'Snajdrova'), ('Lenka', 'Stara'), ('Lenka', 'Tvaroskova'), ('Lenka', 'Vlachynska'), ('Lenka', 'Wienerova'), ('Lenka', 'Zacharova'), ('Lenore', 'Lazaroiu'), ('Leolia', 'Jeanjean'), ('Leona', 'Laskova'), ('Leona', 'Masuoka'), ('Leonarda', 'Horvat'), ('Leonela', 'Gonzalez'), ('Leoni', 'Weirich'), ('Leonie', 'Athanasiadis'), ('Leonie', 'Guijt'), ('Leonie', 'Kung'), ('Leonie', 'Mekel'), ('Leonie', 'Odriscoll'), ('Leonita', 'Girsang'), ('Leonne', 'Muller Van Moppe'), ('Leonor', 'Meliveo Saragusti'), ('Leonor', 'Oliveira'), ('Leonora', 'Peralta'), ('Lerissa', 'Maurice'), ('Lesbia', 'Zuniga'), ('Lesedi', 'Ramocha'), ('Lesedi Sheya', 'Jacobs'), ('Lesia', 'Bilak'), ('Lesia', 'Tsurenko'), ('Lesley', 'Barbour'), ('Lesley', 'Bowrey'), ('Lesley', 'Charles'), ('Lesley', 'Hunt'), ('Lesley', 'Kerkhove'), ('Lesley', 'Kramer'), ('Lesley', 'OHalloran'), ('Leslie', 'Allen'), ('Leslie', 'Butkiewicz'), ('Leslie', 'Cavanaugh   Rose'), ('Leslie', 'Espinoza'), ('Leslie', 'Hakala'), ('Leslie', 'Harvey'), ('Leslie', 'Koffi'), ('Leslie', 'Soto'), ('Leslie', 'Thile'), ('Leslie', 'Walker'), ('Leticia', 'Costas'), ('Leticia', 'Demichelli'), ('Leticia', 'Giudici'), ('Leticia', 'Sanchez'), ('Leticia', 'Sobral'), ('Leticia Garcia', 'Vidal'), ('Leticia Nayara Moura', 'Monteiro'), ('Letizia', 'Lardani'), ('Letizia', 'Lo Re'), ('Lettica', 'Venter'), ('Lexi', 'Borr'), ('Lexie', 'Kenny'), ('Leyla', 'Azaeva'), ('Leyla', 'Erkan'), ('Leyla', 'Musalem'), ('Leyla', 'Ogan'), ('Leyla', 'Taracena'), ('Leyla Esther', 'Cabrera'), ('Leylah Annie', 'Fernandez'), ('Li', 'Chen'), ('Li', 'Huang'), ('Li', 'Li'), ('Li', 'Liu'), ('Li', 'Tong'), ('Li', 'Xi'), ('Li', 'Yan'), ('Li Chuan', 'Hsieh'), ('Li Hua', 'Yang'), ('Li Lan', 'Duan'), ('Li Li', 'Ding'), ('Li Ling', 'Chen'), ('Li Qiao', 'Yu'), ('Li Yao', 'Tang'), ('Lia', 'Fabiano'), ('Lia', 'Jackson'), ('Liako', 'Selokoma'), ('Lian', 'Tran'), ('Liana', 'Sakvarelidze'), ('Liana', 'Skordopoulou'), ('Liana', 'Todorova'), ('Liana Gabriela', 'Ungur'), ('Lianasari', 'Batubara'), ('Lianne', 'Supperstone'), ('Liat', 'Cohen'), ('Liat', 'Zimmermann'), ('Libby', 'Muma'), ('Liberty', 'Crawford'), ('Liberty', 'Sveke'), ('Libi', 'Mesh'), ('Libuse', 'Prusova'), ('Lidia', 'Llanos De La Fuente'), ('Lidia', 'Lopez Companys'), ('Lidia', 'Moreno Arias'), ('Lidia', 'Mugelli'), ('Lidia', 'Soulti'), ('Lidiia', 'Dashchenko'), ('Lidija', 'Samardzic'), ('Lidy', 'Venneboer'), ('Lidya', 'Yargovan'), ('Lidziya', 'Marozava'), ('Liege', 'Vieira'), ('Lien', 'Van Geel'), ('Liene', 'Linina'), ('Lies', 'Budiharto'), ('Liezel', 'Huber'), ('Liga', 'Dekmeijere'), ('Lihini', 'Weerasuriya'), ('Liina', 'Suurvarik'), ('Liisa', 'Pajumets'), ('Liisa', 'Vehvilainen'), ('Lijia', 'Huang'), ('Lika', 'Chkuaseli'), ('Likitha', 'Shetty'), ('Lila', 'Humaloja'), ('Lili', 'Bell'), ('Lili', 'Fekete'), ('Lili', 'Grebinuk'), ('Lilia', 'Biktyakova'), ('Lilia', 'Osterloh'), ('Lilia', 'Talaboulma'), ('Lilia Carla', 'Azevedo'), ('Lilian', 'Asuaje'), ('Lilian', 'Ighodaro'), ('Lilian', 'Kelaidis'), ('Lilian', 'Silva'), ('Liliana', 'Aguilera'), ('Liliana', 'Avola'), ('Liliana', 'Fernandez'), ('Liliana', 'Giussani'), ('Liliana', 'Hung'), ('Liliana', 'Pereira'), ('Liliana', 'Rodriguez'), ('Liliana', 'Stoiu'), ('Lilien', 'Pacheco'), ('Lilija', 'Sabirzjanova'), ('Lilit', 'Teloumian'), ('Lilivette', 'Rivera'), ('Liliya', 'Izmaylova'), ('Lilla', 'Barzo'), ('Lillian', 'Aviles'), ('Lillian', 'Gabrielsen'), ('Lilly', 'Cal Fong'), ('Lilly', 'Raffa'), ('Lilly Elida', 'Haseth'), ('Lilly F', 'Kimbell'), ('Lily', 'Aguirre'), ('Lily', 'Ghodrati'), ('Lily', 'Nejasmic'), ('Lily', 'Reynolds'), ('Lilya', 'Hadab'), ('Limor', 'Gabai'), ('Limor', 'Zaltz'), ('Lin', 'Ma'), ('Lin', 'Zhu'), ('Lina', 'Amouzoune'), ('Lina', 'Benkirane'), ('Lina', 'Bennani'), ('Lina', 'Fettah'), ('Lina', 'Gjorcheska'), ('Lina', 'Glushko'), ('Lina', 'Grabow'), ('Lina', 'Hohnhold'), ('Lina', 'Krasnoroutskaya'), ('Lina', 'Lileikite'), ('Lina', 'Padegimaite'), ('Lina', 'Qostal'), ('Lina', 'Sachica'), ('Lina', 'Sfar'), ('Lina', 'Shokry'), ('Lina', 'Stanciute'), ('Linda', 'Agazzi'), ('Linda', 'Akkerman'), ('Linda', 'Allred'), ('Linda', 'Aqvist'), ('Linda', 'Barnard'), ('Linda', 'Berlinecke'), ('Linda', 'Blank'), ('Linda', 'Cassell'), ('Linda', 'Dubska'), ('Linda', 'Engblom'), ('Linda', 'Fallon'), ('Linda', 'Faltynkova'), ('Linda', 'Ferrando'), ('Linda', 'Fritschken'), ('Linda', 'Gates'), ('Linda', 'Geeves'), ('Linda', 'Guerzize'), ('Linda', 'Harley'), ('Linda', 'Howell'), ('Linda', 'Hricistova'), ('Linda', 'Jansson'), ('Linda', 'Mair'), ('Linda', 'Mattsson'), ('Linda', 'Mottram'), ('Linda', 'Niemantsverdriet'), ('Linda', 'Ohanyan'), ('Linda', 'Prenkovic'), ('Linda', 'Puppendahl'), ('Linda', 'Sentis'), ('Linda', 'Sevcikova'), ('Linda', 'Siegel'), ('Linda', 'Siegleman'), ('Linda', 'Smaira'), ('Linda', 'Smolenakova'), ('Linda', 'Stewart'), ('Linda', 'Svarena'), ('Linda', 'Tajnai'), ('Linda', 'Thomas'), ('Linda', 'Tuero'), ('Linda', 'Wild'), ('Linda', 'Zahlavova'), ('Linda Beate', 'Andersen'), ('Lindsay', 'Alpert'), ('Lindsay', 'Bartlett'), ('Lindsay', 'Blachford'), ('Lindsay', 'Blau'), ('Lindsay', 'Bruce'), ('Lindsay', 'Burdette'), ('Lindsay', 'Cox'), ('Lindsay', 'Davenport'), ('Lindsay', 'Dawaf'), ('Lindsay', 'Ferrell'), ('Lindsay', 'Graff'), ('Lindsay', 'Jones'), ('Lindsay', 'Lee'), ('Lindsay', 'Lee Waters'), ('Lindsay', 'Martin'), ('Lindsay', 'Matthews'), ('Lindsay', 'Morse'), ('Lindsay', 'Rawling'), ('Lindsay', 'Song'), ('Lindsay', 'Standen'), ('Lindsay', 'Truscott'), ('Lindsey', 'Beaven'), ('Lindsey', 'Hardenbergh'), ('Lindsey', 'Lyles'), ('Lindsey', 'Nelson'), ('Lindsey', 'Pereira'), ('Lindsey', 'Puchyr'), ('Lindsey', 'Stead'), ('Line', 'Al Ghannam'), ('Line', 'Elvstrom Ekner'), ('Line', 'Jouayed'), ('Line', 'Ullring'), ('Linfeifei', 'Fan'), ('Ling', 'Yan'), ('Ling', 'Zhang'), ('Lingwei', 'Kong'), ('Liniques', 'Theron'), ('Link', 'Leskosky'), ('Linky', 'Boshoff'), ('Linley', 'Tanner'), ('Linn', 'Ehrenstrom'), ('Linn', 'Ronnberg'), ('Linn', 'Timmermann'), ('Linnea', 'Bjork'), ('Linnea', 'Malmqvist'), ('Linnea', 'Pedersen'), ('Linsey', 'Jacks'), ('Lior', 'Ifergan'), ('Lior', 'Pachuorkovski'), ('Liora', 'Krasnopolski'), ('Liora', 'Levin'), ('Lioudmila', 'Skavronskaia'), ('Liria', 'Loria Pereyra'), ('Liron', 'Sasson'), ('Lisa', 'Albano'), ('Lisa', 'Andersson'), ('Lisa', 'Annebro'), ('Lisa', 'Barg'), ('Lisa', 'Bastianello'), ('Lisa', 'Bobby'), ('Lisa', 'Bonder Kreiss'), ('Lisa', 'Borckink'), ('Lisa', 'Brinkmann'), ('Lisa', 'Broadie'), ('Lisa', 'Bublitz'), ('Lisa', 'Camenzuli'), ('Lisa', 'Canova'), ('Lisa', 'Damelio'), ('Lisa', 'Doherty'), ('Lisa', 'Dunner'), ('Lisa', 'Ehrensberger'), ('Lisa', 'Fleming'), ('Lisa', 'Friess'), ('Lisa', 'Fritz'), ('Lisa', 'Fung Kee Fung'), ('Lisa', 'Gebert'), ('Lisa', 'Gould'), ('Lisa', 'Green'), ('Lisa', 'Grosselius'), ('Lisa', 'Haegele'), ('Lisa', 'Harding'), ('Lisa', 'Hofbauer'), ('Lisa', 'Jamais'), ('Lisa', 'Kearney'), ('Lisa', 'Keller'), ('Lisa', 'Kung'), ('Lisa', 'Kwok'), ('Lisa', 'Lillemoe'), ('Lisa', 'Low'), ('Lisa', 'Lusteg'), ('Lisa', 'Mackey'), ('Lisa', 'Marshall'), ('Lisa', 'Matviyenko'), ('Lisa', 'Mays'), ('Lisa', 'Mcshea'), ('Lisa', 'Moldrem'), ('Lisa', 'Nystrom Skold'), ('Lisa', 'Oneill'), ('Lisa', 'Pennington'), ('Lisa', 'Phillips'), ('Lisa', 'Piccinetti'), ('Lisa', 'Piller'), ('Lisa', 'Ponomar'), ('Lisa', 'Poole'), ('Lisa', 'Pugliese'), ('Lisa', 'Quiller'), ('Lisa', 'Raymond'), ('Lisa', 'Ruckenbaum'), ('Lisa', 'Sabino'), ('Lisa', 'Sassano'), ('Lisa', 'Schlatter'), ('Lisa', 'Seemann'), ('Lisa', 'Sendelbach'), ('Lisa', 'Spain Short'), ('Lisa', 'Summerer'), ('Lisa', 'Sutton'), ('Lisa', 'Tognetti'), ('Lisa', 'Vallone'), ('Lisa', 'Wagner'), ('Lisa', 'Weerasekera'), ('Lisa', 'Wegmair'), ('Lisa', 'Weidenbruck'), ('Lisa', 'Whybourn'), ('Lisa', 'Wilcox'), ('Lisa', 'Wilkinson'), ('Lisa', 'Yap Sam'), ('Lisa', 'Zang'), ('Lisa Maria', 'Moser'), ('Lisa Maria', 'Reichmann'), ('Lisa Marie', 'Lausecker'), ('Lisa Marie', 'Maetschke'), ('Lisa Marie', 'Rioux'), ('Lisanna', 'Pihlak'), ('Lisanne', 'Balk'), ('Lisanne', 'Van Riet'), ('Lise', 'Brulmans'), ('Lise', 'Gregory'), ('Lise', 'Hahn Evers'), ('Lise', 'Marbach'), ('Liset', 'Brito Herrera'), ('Lisette', 'Pereira Aguilar'), ('Lisette', 'Senn'), ('Lita', 'Sugiarto'), ('Liu Ling', 'Wang'), ('Liu Shang', 'Ku'), ('Liubov', 'Demidova'), ('Liubov', 'Vasilyeva'), ('Liudmila', 'Gazzaeva'), ('Liudmila', 'Nikoyan'), ('Liudmyla', 'Latysheva'), ('Liv', 'Geurts'), ('Liv', 'Hubert'), ('Liv', 'Jagge'), ('Livia', 'Azzi'), ('Livia', 'Kraus'), ('Livia', 'Turiano'), ('Lixin', 'Wang'), ('Liya', 'Tsanava'), ('Liz', 'Cruz'), ('Liz', 'Finlayson'), ('Liz', 'Smylie'), ('Liz', 'Wachter'), ('Liz Andrea', 'Miranda'), ('Liz Tatiane', 'Koehler Bogarin'), ('Liza', 'Andriyani'), ('Liza', 'Fieldsend'), ('Liza', 'Lebedzeva'), ('Liza', 'Riefkohl'), ('Liza', 'Viplav'), ('Lizaan', 'Du Plessis'), ('Lizanne', 'Jinkertz'), ('Lizanne', 'Marais'), ('Lizaveta', 'Artsiomenka'), ('Lizaveta', 'Hancharova'), ('Lize', 'Leenknecht'), ('Lize Elfrida', 'Moolman'), ('Lizeth', 'Asuaje'), ('Lizeth', 'Fourie'), ('Lizeth', 'King'), ('Lizeth', 'Ramirez'), ('Lizeth Vanessa', 'Gomez Diaz'), ('Lizette', 'Cabrera'), ('Lizette', 'Carrillo Morales'), ('Lizette', 'Gomez'), ('Lizette', 'Reding'), ('Lizette', 'Roncagliolo'), ('Lizi', 'Morgoshia'), ('Lizzy', 'Jelfs'), ('Ljiljana', 'Nanusevic'), ('Ljubica', 'Avramovic'), ('Ljubica', 'Stojanovic'), ('Ljudmila', 'Pavlov'), ('Lledo', 'Tena Guzman'), ('Lloyd', 'Hatcher'), ('Loanita', 'Rachman'), ('Lobena', 'Cherif'), ('Lobke', 'Haepers'), ('Lodovica', 'Giannini'), ('Loes', 'Janssen'), ('Lois', 'Raymond'), ('Lok Sze', 'Leung'), ('Lola', 'Asis Espuche'), ('Lola', 'Azimova'), ('Lola', 'Benedetti'), ('Lola', 'Marandel'), ('Lolade', 'Ogungbesan'), ('Lolia', 'Kienka'), ('Lolita', 'Frangulyan'), ('Lone', 'Vandborg'), ('Loni', 'Worsley'), ('Lonny', 'Young'), ('Lora', 'Stancheva'), ('Lore', 'De Lille'), ('Lorea', 'Ganboa'), ('Loredana', 'Bujor'), ('Loredana', 'Serbu'), ('Lorena', 'Alves Castellanos'), ('Lorena', 'Aparicio Vargas'), ('Lorena', 'Arandia'), ('Lorena', 'Aviles'), ('Lorena', 'Barbero'), ('Lorena', 'Brain'), ('Lorena', 'Clemente'), ('Lorena', 'Constantin'), ('Lorena', 'Gheorghe'), ('Lorena', 'Hernandez'), ('Lorena', 'Madahuar'), ('Lorena', 'Marruffo'), ('Lorena', 'Martinez'), ('Lorena', 'Piedras'), ('Lorena', 'Porras'), ('Lorena', 'Rebolledo'), ('Lorena', 'Rodriguez Di Laura'), ('Lorena', 'Romano'), ('Lorena', 'Sandoval'), ('Lorena', 'Valente'), ('Lorena', 'Vano  Martin'), ('Lorena', 'Villalobos Cruz'), ('Lorena', 'Vincenzini'), ('Lorena Ivette', 'Arias Rodriguez'), ('Lorena Maria', 'Danaila'), ('Lorenza', 'Jachia'), ('Lorenza', 'Romano'), ('Lorenza', 'Stefanelli'), ('Lorenza', 'Vaschetto'), ('Loreto', 'Alonso Martinez'), ('Loretta', 'Sheales'), ('Loretto', 'Villalba Rubio'), ('Lori', 'Feingold'), ('Lori', 'Grey'), ('Lori', 'Kosten'), ('Lori', 'Mcneil'), ('Lori', 'Miller'), ('Lori', 'Robertson'), ('Loriane', 'Favoretto'), ('Loris', 'Butterfield'), ('Lorna', 'Greville Collins'), ('Lorna', 'Simmons'), ('Lorna', 'Whitfield'), ('Lorna', 'Woodroffe'), ('Lorna May', 'Lewis'), ('Lorrae', 'Guse'), ('Lorraine', 'Robinson'), ('Lorraine M', 'Guillermo'), ('Lorrayne', 'Gracie'), ('Lorrie', 'Major'), ('Lorrie', 'Zacharias'), ('Lotta', 'Heiskanen'), ('Lotta', 'Stenberg'), ('Lotte', 'Solbeck'), ('Lotte', 'Van Leeuwen'), ('Lottie', 'Fox'), ('Lotty', 'Seelen'), ('Lou', 'Adler'), ('Lou', 'Brouleau'), ('Loudmilla', 'Bencheikh'), ('Louisa', 'Chirico'), ('Louise', 'Allen'), ('Louise', 'Boinay'), ('Louise', 'Brown'), ('Louise', 'Brunskog'), ('Louise', 'Bysiek'), ('Louise', 'Doutrelant'), ('Louise', 'Field'), ('Louise', 'Fitzgerald'), ('Louise', 'Gonnerman'), ('Louise', 'Grangette'), ('Louise', 'Harbo Schmidt'), ('Louise', 'Herbert'), ('Louise', 'Holtum'), ('Louise', 'Johansson'), ('Louise', 'Kwong'), ('Louise', 'Lampla'), ('Louise', 'Latimer'), ('Louise', 'Lilleso'), ('Louise', 'Pleming'), ('Louise', 'Reis De Campos'), ('Louise', 'Ronaldson'), ('Louise', 'Stacey'), ('Louise', 'Tuff'), ('Louise', 'Venter'), ('Louise', 'Wekesa'), ('Louise', 'Wittouck'), ('Louise Line', 'Odet'), ('Louise Mare', 'Botes'), ('Lourdes', 'Dominguez Lino'), ('Lourdes', 'Gaona Gonzalez'), ('Lourdes', 'Lopez'), ('Lourdes', 'Manulat'), ('Lourdes', 'Pascual Rodriguez'), ('Lourdes', 'Ramalle'), ('Lourdes', 'Sprinckmoller'), ('Loveth', 'Donatus'), ('Loveth', 'Nnadozie'), ('Lu', 'Guo'), ('Lu', 'Lin'), ('Lu', 'Yu'), ('Lu Ling', 'Chen'), ('Luana', 'Daus'), ('Luana', 'Flessak'), ('Luana', 'Magnani'), ('Luana', 'Stanciu'), ('Luana Georgiana', 'Rednic'), ('Luanne', 'Spadea'), ('Lubica', 'Nadasska'), ('Lubka', 'Radkova'), ('Lubomira', 'Bacheva'), ('Lubomira', 'Kurhajcova'), ('Luboslava', 'Hiresova'), ('Luca', 'Fabian'), ('Luca', 'Nagymihaly'), ('Luca', 'Pump'), ('Lucelena', 'Hoyo'), ('Luci', 'Barlow'), ('Luci', 'Gonzalez Puch'), ('Lucia', 'Bassi'), ('Lucia', 'Batta'), ('Lucia', 'Bosio'), ('Lucia', 'Bronzetti'), ('Lucia', 'Bruce'), ('Lucia', 'Butkovska'), ('Lucia', 'Cervera Vazquez'), ('Lucia', 'Cortez Llorca'), ('Lucia', 'Curielli'), ('Lucia', 'De La Puerta Uribe'), ('Lucia', 'Diaz Saez'), ('Lucia', 'Fernandez'), ('Lucia', 'Gallego Jover'), ('Lucia', 'Garcia'), ('Lucia', 'Garrigues Melendez'), ('Lucia', 'Gatti'), ('Lucia', 'Gongora'), ('Lucia', 'Gonzalez'), ('Lucia', 'Gutierrez'), ('Lucia', 'Halty'), ('Lucia', 'Halty Barrutieta'), ('Lucia', 'Henkle Gomez'), ('Lucia', 'Huber'), ('Lucia', 'Ioli'), ('Lucia', 'Jara Lozano'), ('Lucia', 'Jimenez Almendros'), ('Lucia', 'Kovalova'), ('Lucia', 'Kovarcikova'), ('Lucia', 'Krzelj'), ('Lucia', 'Lazo'), ('Lucia', 'Martinez Gomez'), ('Lucia', 'Marzal Martinez'), ('Lucia', 'Montano'), ('Lucia', 'Natal Gomez'), ('Lucia', 'Obysovska'), ('Lucia', 'Ondrasova'), ('Lucia', 'Paz Monteagudo'), ('Lucia', 'Peria'), ('Lucia', 'Quiterio'), ('Lucia', 'Romanov'), ('Lucia', 'Sainz Pelegri'), ('Lucia', 'Sariscanova'), ('Lucia', 'Soulie'), ('Lucia', 'Struharova'), ('Lucia', 'Tallova'), ('Lucia', 'Vrskova'), ('Lucia', 'Zavarcikova'), ('Lucia', 'Zelenka'), ('Lucia Annette', 'Davila Espejo'), ('Lucia Ioana', 'Crisan'), ('Luciana', 'Alfaro'), ('Luciana', 'Barbosa'), ('Luciana', 'Corsato Owsianka'), ('Luciana', 'Della Casa'), ('Luciana', 'Masante'), ('Luciana', 'Rabines'), ('Luciana', 'Sarmenti'), ('Luciana', 'Tella'), ('Luciana', 'Ullmann'), ('Lucianna', 'Piedra'), ('Lucie', 'Ahl'), ('Lucie', 'Chrastecka'), ('Lucie', 'Devier'), ('Lucie', 'Dvorakova'), ('Lucie', 'Fleischmannov'), ('Lucie', 'Hradecka'), ('Lucie', 'Kabacova'), ('Lucie', 'Kankova'), ('Lucie', 'Kriegsmannova'), ('Lucie', 'Makrlikova'), ('Lucie', 'Mazinova'), ('Lucie', 'Pazderova'), ('Lucie', 'Podskubova'), ('Lucie', 'Prochazkova'), ('Lucie', 'Rey'), ('Lucie', 'Ruskova'), ('Lucie', 'Safarova'), ('Lucie', 'Schmidhauser'), ('Lucie', 'Sipkova'), ('Lucie', 'Soumarova'), ('Lucie', 'Steflova'), ('Lucie', 'Telinova'), ('Lucie', 'Vecerova'), ('Lucie', 'Wargnier'), ('Lucie', 'Zaruba'), ('Luciene', 'Benitez Boiero'), ('Luciene', 'Sapienza Muro'), ('Lucila', 'Becerra'), ('Lucila', 'Di Carlo'), ('Lucinda', 'Crosby'), ('Lucinda', 'Gibbs'), ('Lucrezia', 'Stefanini'), ('Lucy', 'Altman'), ('Lucy', 'Bird'), ('Lucy', 'Brooks'), ('Lucy', 'Brown'), ('Lucy', 'Fendig'), ('Lucy', 'Fletcher'), ('Lucy', 'Francis'), ('Lucy', 'Gordon'), ('Lucy', 'Ikic'), ('Lucy', 'Johnson'), ('Lucy', 'Mcdonald'), ('Lucy', 'Needham'), ('Lucy', 'Scott'), ('Lucy', 'Warburton'), ('Lucy', 'Wood'), ('Ludivine', 'Burguiere'), ('Ludivine', 'Cassagne'), ('Ludivine', 'Choisel'), ('Ludivine', 'Laville'), ('Ludivine', 'Nicolas'), ('Ludmila', 'Arias Moreno'), ('Ludmila', 'Cervanova'), ('Ludmila', 'Kareisova'), ('Ludmila', 'Makarova'), ('Ludmila', 'Richterova'), ('Ludmila', 'Stavila'), ('Ludmila', 'Vasilieva'), ('Ludmilla', 'Samsonova'), ('Ludmilla', 'Varmuza'), ('Ludovica', 'Fusco'), ('Ludovica', 'Infantino'), ('Ludovica', 'Perri'), ('Lui Li', 'Shen'), ('Luicelena', 'Perez'), ('Luisa', 'Barcaui'), ('Luisa', 'Cantu'), ('Luisa', 'Cowper'), ('Luisa', 'Fantola'), ('Luisa', 'Fernandez'), ('Luisa', 'Meyer Auf Der Heide'), ('Luisa', 'Obando'), ('Luisa', 'Pelayo'), ('Luisa', 'Rosa'), ('Luisa', 'Stefani'), ('Luisa Elfride', 'Lopez'), ('Luisa Fernanda', 'Echeverry Rodriguez'), ('Luisa Fernanda', 'Velez'), ('Luisa Maria', 'Varon Diaz'), ('Luisa Marie', 'Huber'), ('Luisanna', 'Rodriguez'), ('Luise', 'Intert'), ('Luiza', 'Barcaui'), ('Luiza', 'Biktyakova'), ('Luiza', 'Borges'), ('Luiza', 'Coman'), ('Luiza', 'Fullana'), ('Luiza', 'Irismetova'), ('Luiza', 'Sharipova'), ('Luiza', 'Sonnervig'), ('Luize Liva', 'Strike'), ('Lujza', 'Ryskova'), ('Lukky', 'Tedjamukti'), ('Luksika', 'Kumkhum'), ('Lulu', 'Radovcic'), ('Lumay', 'Diaz Hernandez'), ('Luminita', 'Tutunaru'), ('Luna', 'Cagnoni'), ('Luna', 'Meers'), ('Luna', 'Milovanovic'), ('Lunda', 'Kumhom'), ('Lungile', 'Ntuli'), ('Lupita', 'Novelo'), ('Lusine', 'Avanesyan'), ('Lusine', 'Chobanyan'), ('Lusine', 'Davtyan'), ('Lusy', 'Kumala'), ('Lutfiana Aris', 'Budiharto'), ('Lutfiye', 'Esen'), ('Luz Angelica', 'Solano Delgado'), ('Luz Maria', 'Lafranconi'), ('Luz Rocio', 'Jara'), ('Ly Huong', 'Dinh'), ('Lyann', 'Hoang'), ('Lydia', 'Lopez Lopez'), ('Lydia', 'Perkins'), ('Lydia', 'Steinbach'), ('Lydie', 'Van Hille'), ('Lyle', 'Cupido'), ('Lyn Yuen', 'Choo'), ('Lynda', 'Benkaddour'), ('Lynda', 'Xepoleas'), ('Lyndsay', 'Reilly'), ('Lyndsey', 'Molony'), ('Lynette', 'Mansfield'), ('Lynette', 'Tay'), ('Lynn', 'Blau'), ('Lynn', 'Chi'), ('Lynn', 'Henderson'), ('Lynn', 'Jacobs'), ('Lynn', 'Janssens'), ('Lynn', 'Kiro'), ('Lynn', 'Lewis'), ('Lynn', 'Nabors'), ('Lynn', 'Novack'), ('Lynn', 'Philippe'), ('Lynn', 'Rolley'), ('Lynn', 'Schonhage'), ('Lynn Yin', 'Tan'), ('Lynne', 'Epstein'), ('Lynne', 'Nette'), ('Lynsey', 'Davison'), ('Lynsey', 'Mccullough'), ('Lyuboslava', 'Peruhova'), ('Lyubov', 'Pogribnyak'), ('Lyubov', 'Slovtsova'), ('Lyudmyla', 'Kichenok'), ('M', 'Berta'), ('M', 'Earl'), ('M', 'Mcgrath'), ('M', 'Mesek'), ('M', 'POOS'), ('Ma Carmen', 'Garcia'), ('Ma Eugenia', 'Abrate'), ('Ma Llanos', 'Soriano'), ('Ma Regina', 'Santiago'), ('Maaike', 'Koutstaal'), ('Maarit', 'Nieminen'), ('Maaya', 'Uno'), ('Maayan', 'Mastey'), ('Maayan', 'Sela'), ('Maayan', 'Shtern'), ('Mabel', 'Rodriguez'), ('Mabel', 'Roviti'), ('Mabel', 'Vrancovich'), ('Macall', 'Harkins'), ('Macarena', 'Acuna'), ('Macarena', 'Asensos'), ('Macarena', 'Miranda'), ('Macarena', 'Olivares Lopez'), ('Macarena', 'Rodriguez Capilla'), ('Macey', 'Breece'), ('Machika', 'Miyaji'), ('Machika', 'Tsuji'), ('Machiko', 'Fujiwara'), ('Machiko', 'Shigefuji'), ('Machiko', 'Yahata'), ('Maci', 'Epstein'), ('Macie', 'Elliott'), ('Madalina', 'Florea'), ('Madalina', 'Gojnea'), ('Madalina', 'Grigoriu'), ('Madalina', 'Lupu'), ('Madalina', 'Niculaita'), ('Madalina Daniela', 'Gugila'), ('Madara', 'Straume'), ('Maddalena', 'Giordano'), ('Maddie', 'Antoun'), ('Maddie', 'Brooks'), ('Maddie', 'Pothoff'), ('Maddison', 'Inglis'), ('Madelaine', 'Madelaire'), ('Madeleine', 'Boepple'), ('Madeleine', 'Dax'), ('Madeleine', 'Kobelt'), ('Madeleine', 'Pegel'), ('Madeleine', 'Saari Bystrom'), ('Madeline', 'Bosnjak'), ('Madeline', 'Lipp'), ('Madeline', 'Meredith'), ('Madeline', 'Rolph'), ('Madeline', 'Sanchez'), ('Madina', 'Hatamova'), ('Madina', 'Khatamova'), ('Madina', 'Rakhim'), ('Madina', 'Yekubjanova'), ('Madison', 'Bourguignon'), ('Madison', 'Brengle'), ('Madison', 'Craft'), ('Madison', 'Crawford'), ('Madison', 'Frahn'), ('Madison', 'Gallegos'), ('Madison', 'Harrison'), ('Madison', 'Keys'), ('Madison', 'Westby'), ('Madita', 'Suer'), ('Madlen', 'Kadur'), ('Madoka', 'Kuki'), ('Madoka', 'Suzuki'), ('Madoka', 'Tominaga'), ('Madona', 'Najarian'), ('Madrie', 'Le Roux'), ('Madura', 'Ranganathan'), ('Maegan', 'Manasse'), ('Maelys', 'Bougrat'), ('Maeva', 'Razakasoa'), ('Maeva', 'Thiebaud'), ('Maeve', 'Quinlan'), ('Mafalda', 'Fernandes'), ('Mafalda', 'Lhorca'), ('Maftuna', 'Yunusova'), ('Maftunabonu', 'Saidova'), ('Magali', 'Benitez'), ('Magali', 'De Lattre'), ('Magali', 'Denayer'), ('Magali', 'Kempen'), ('Magali', 'Lamarre'), ('Magali', 'Partyka'), ('Magali', 'Risoleo'), ('Magali', 'Van Landegem'), ('Magalie', 'Gaillot'), ('Magalie', 'Girard'), ('Magalie', 'Portel'), ('Magda', 'Aubets Macia'), ('Magda', 'Leal'), ('Magda', 'Linette'), ('Magda', 'Mihalache'), ('Magda', 'Okruashvili'), ('Magda', 'Riutort Bou'), ('Magdalena', 'Bilova'), ('Magdalena', 'Boado'), ('Magdalena', 'Bresson'), ('Magdalena', 'Cibils'), ('Magdalena', 'Cordero'), ('Magdalena', 'Costa'), ('Magdalena', 'Ekert'), ('Magdalena', 'Feistel'), ('Magdalena', 'Frech'), ('Magdalena', 'Gargulakova'), ('Magdalena', 'Grzybowska'), ('Magdalena', 'Gual Pascual'), ('Magdalena', 'Kiszczynska'), ('Magdalena', 'Kucerova'), ('Magdalena', 'Kurzacz'), ('Magdalena', 'Maleeva'), ('Magdalena', 'Maranda'), ('Magdalena', 'Marszalek'), ('Magdalena', 'Mrozek'), ('Magdalena', 'Osterle'), ('Magdalena', 'Pantuckova'), ('Magdalena', 'Plucinski'), ('Magdalena', 'Radkova'), ('Magdalena', 'Rejniak'), ('Magdalena', 'Rybarikova'), ('Magdalena', 'Santer'), ('Magdalena', 'Sekrecka'), ('Magdalena', 'Simkova'), ('Magdalena', 'Smejova'), ('Magdalena', 'Stencel'), ('Magdalena', 'Stoilkovska'), ('Magdalena', 'Taltavull Fernandez'), ('Magdalena', 'Tokarczyk'), ('Magdalena', 'Tokarska'), ('Magdalena', 'Von Geyr'), ('Magdalena', 'Wiecha'), ('Magdalena', 'Wiese'), ('Magdalena', 'Wojcik'), ('Magdalena', 'Wojdylok'), ('Magdalini', 'Adaloglou'), ('Magdelena', 'Zdenovcova'), ('Magdelini', 'Lesvidou'), ('Magdolna', 'Rekasi'), ('Maggie', 'Harris'), ('Maggie', 'Mello'), ('Magnolia', 'Galvez'), ('Magui', 'Serna'), ('Magy', 'Aziz'), ('Maha', 'Berty'), ('Mahak', 'Jain'), ('Maharevo', 'Ramanitrarivo Rosea'), ('Mahault', 'De Claviere'), ('Maheen', 'Dada'), ('Mahela', 'Gartner Ockernahl'), ('Mahesha', 'Seneviratne'), ('Mahiro', 'Date'), ('Mahitha', 'Dadi Reddy'), ('Maho', 'Hatta'), ('Maho', 'Kowase'), ('Mahrukh', 'Kokni'), ('Mai', 'El Kamash'), ('Mai', 'Fujii'), ('Mai', 'Fujiwara'), ('Mai', 'Grage'), ('Mai', 'Hatanaka'), ('Mai', 'Hontama'), ('Mai', 'Iwasaki'), ('Mai', 'Minokoshi'), ('Mai', 'Takano'), ('Mai', 'Takeda'), ('Mai', 'Tanii'), ('Mai Huynh', 'Huynh'), ('Mai Napatt', 'Nirundorn'), ('Maia', 'Lumsden'), ('Maia', 'Ram'), ('Maia', 'Semerdjieva'), ('Maia', 'Sosa'), ('Maia', 'Stankova'), ('Maia A', 'Magill'), ('Maiara', 'Olivera'), ('Maibel', 'Quintana'), ('Maider', 'Laval'), ('Maija', 'Avotins'), ('Maija', 'Lamu'), ('Maija', 'Suonpaa'), ('Maika', 'Ozaki'), ('Maika Jae', 'Tanpoco'), ('Maike', 'Kampschulte'), ('Maike', 'Zeppernick'), ('Maiken', 'Pape'), ('Maiko', 'Cook'), ('Maiko', 'Inoue'), ('Maiko', 'Ohmi'), ('Maiko', 'Yamashita'), ('Maileen', 'Nuudi'), ('Mailen', 'Auroux'), ('Mailyne', 'Andrieux'), ('Mair', 'Hughes'), ('Maite', 'Cano'), ('Maite', 'Gabarrus Alonso'), ('Maite', 'Martinez Perez'), ('Maite', 'Vila'), ('Maja', 'Chwalinska'), ('Maja', 'Ipsa'), ('Maja', 'Issler'), ('Maja', 'Jovic'), ('Maja', 'Kambic'), ('Maja', 'Kazimieruk'), ('Maja', 'Kovacek'), ('Maja', 'Makoric'), ('Maja', 'Matevzic'), ('Maja', 'Mesanovic'), ('Maja', 'Milas'), ('Maja', 'Mise'), ('Maja', 'Mladenovic'), ('Maja', 'Mlakar'), ('Maja', 'Muric'), ('Maja', 'Ornberg'), ('Maja', 'Palaversic Cooper Smith'), ('Maja', 'Pauk'), ('Maja', 'Petrovic'), ('Maja', 'Sujica'), ('Maja', 'Sundac'), ('Maja', 'Tadic'), ('Maja', 'Vuzem'), ('Maja', 'Wittke'), ('Maja', 'Zivec Skulj'), ('Majdouline', 'Akrate'), ('Majdouline', 'Idrissi'), ('Majen', 'Immink'), ('Majlena', 'Pedersen'), ('Majoly', 'De Wilde'), ('Makenna', 'Jones'), ('Makenzie', 'Myers'), ('Makere', 'Bradnam'), ('Maki', 'Arai'), ('Makiho', 'Kozawa'), ('Makiko', 'Inekaku'), ('Mako', 'Ganaha'), ('Mako', 'Irie'), ('Mako', 'Mizunuma'), ('Makoto', 'Ninomiya'), ('Makoto', 'Nishida'), ('Maksymiliana', 'Wandel'), ('Mal Sim', 'Park'), ('Malaika Alex', 'Fernandes'), ('Malak', 'Demerdash'), ('Malak', 'Elazze'), ('Malak Jasim', 'Fardan'), ('Malalasoa Jackinah', 'Rakotohasy'), ('Malena', 'Gordo'), ('Malene', 'Helgo'), ('Malene', 'Stripp'), ('Malgorzata', 'Glodkowska'), ('Malgorzata', 'Jankowska'), ('Malgorzata', 'Kanabus'), ('Malgorzata', 'Rejdych'), ('Malgorzata', 'Sieradzka'), ('Malgorzata', 'Silka'), ('Maliha', 'Al Awaidy'), ('Malika', 'Arifjanova'), ('Malika', 'Auger Aliassime'), ('Malika', 'Bouakel'), ('Malika', 'Oberoi'), ('Malika', 'Rose'), ('Malin', 'Cubukcu'), ('Malin', 'Falk'), ('Malin', 'Grimshorn'), ('Malin', 'Nilsson'), ('Malin', 'Sjoqvist'), ('Malin', 'Ulvefeldt'), ('Malkia', 'Menguene'), ('Mallaurie', 'Noel'), ('Mallory', 'Burdette'), ('Mallory', 'Cecil'), ('Malou', 'Ejdesgaard'), ('Maluca', 'Llamas'), ('Malvina', 'De La Canal'), ('Mamatha', 'Nandakumar'), ('Mami', 'Adachi'), ('Mami', 'Donoshiro'), ('Mami', 'Hasegawa'), ('Mami', 'Inoue'), ('Mamiko', 'Harada'), ('Mamiko', 'Kawaguchi'), ('Mamotebang', 'Molise'), ('Man Ying Maggie', 'Ng'), ('Mana', 'Ayukawa'), ('Mana', 'Endo'), ('Mana', 'Furuhashi'), ('Mana', 'Kawamura'), ('Manae', 'Miwa'), ('Manami', 'Fukada'), ('Manami', 'Hirata'), ('Manami', 'Miura'), ('Manami', 'Tsuji'), ('Manana', 'Dueli'), ('Manana', 'Shapakidze'), ('Mananchaya', 'Sawangkaew'), ('Manar', 'Akkar'), ('Manar', 'Al Jazzaf'), ('Manar', 'Charrouf'), ('Manca', 'Pislak'), ('Mandy', 'Brown'), ('Mandy', 'Carvalho'), ('Mandy', 'Minella'), ('Mandy', 'Morgan'), ('Mandy', 'Septoe'), ('Mandy', 'Stegman'), ('Mandy', 'Wagemaker'), ('Mandy', 'Wilson'), ('Manel', 'Refaa'), ('Manisha', 'Abeywardene'), ('Manisha', 'Chowdhury'), ('Manisha', 'Foster'), ('Manisha', 'Malhotra'), ('Manisha', 'Patel'), ('Manjot', 'Marwah'), ('Manni', 'Zhang'), ('Manoela Corbellini', 'Chiacchio'), ('Manon', 'Arcangioli'), ('Manon', 'Arnaud'), ('Manon', 'Bollegraf'), ('Manon', 'Garcia'), ('Manon', 'Leonard'), ('Manon', 'Peral'), ('Manon', 'Provost'), ('Manon', 'Robine'), ('Manon', 'Savelkouls'), ('Manon', 'Van Den Beek'), ('Manon', 'Veldhorst'), ('Manon Cristina', 'Peri'), ('Mansi', 'Majeji'), ('Manuela', 'Bargis'), ('Manuela', 'Borzi'), ('Manuela', 'Costa'), ('Manuela', 'Esposito'), ('Manuela', 'Grosskopf'), ('Manuela', 'Hernandez'), ('Manuela', 'Huckfeldt'), ('Manuela', 'Kostner'), ('Manuela', 'Leme'), ('Manuela', 'Maleeva Fragniere'), ('Manuela', 'Pietzuch'), ('Manuela', 'Santos'), ('Manuela', 'Schwerzmann'), ('Manuela', 'Zoni'), ('Manuela Luz', 'Molesini'), ('Manuela Stephania', 'Cruz Rodriguez'), ('Manumea', 'Durie'), ('Manya', 'Nagpal'), ('Mao', 'Ohmine'), ('Mao', 'Suzuki'), ('Mao', 'Yamanaka'), ('Mar', 'Gendra Felip'), ('Mar', 'Gonzalez Perez'), ('Mara', 'Argyriou'), ('Mara', 'Benz'), ('Mara', 'Cohen Mintz'), ('Mara', 'Eijkenboom'), ('Mara', 'Nowak'), ('Mara', 'Santangelo'), ('Mara', 'Schmidt'), ('Mara', 'Vasiliev'), ('Mara', 'Vidal'), ('Mara', 'Zovko'), ('Mara Sofia', 'Martinez Santori'), ('Marah', 'Calvo'), ('Maraike', 'Biglmaier'), ('Maral Khachik', 'Awanes'), ('Maram', 'Selim'), ('Maram Mohamed', 'Sharif'), ('Marcela', 'Alves Pereira Valle'), ('Marcela', 'Arroyo Vergara'), ('Marcela', 'Costa Quintas'), ('Marcela', 'Cuderman'), ('Marcela', 'Demilio'), ('Marcela', 'Duarte'), ('Marcela', 'Evangelista'), ('Marcela', 'Ferrari'), ('Marcela', 'Fonseca Villarreal'), ('Marcela', 'Gomez'), ('Marcela', 'Gonzalez'), ('Marcela', 'Henriques Brandao'), ('Marcela', 'Jimenez Ramos'), ('Marcela', 'Monroy'), ('Marcela', 'Montanha'), ('Marcela', 'Rivero'), ('Marcela', 'Rosales'), ('Marcela', 'Skuherska'), ('Marcela', 'Vanegas Bello'), ('Marcela', 'Vojtiskova'), ('Marcela', 'Zacarias'), ('Marcela Guimaraes', 'Bueno'), ('Marcela Ivon', 'Rodezno Hernandez'), ('Marcela Viviana', 'Cataldi'), ('Marcelina', 'Cichon'), ('Marcelina', 'Podlinska'), ('Marcella', 'Campana'), ('Marcella', 'Cruz'), ('Marcella', 'Cucca'), ('Marcella', 'Jones'), ('Marcella', 'Koek'), ('Marcella', 'Mesker'), ('Marcelle', 'Cirino'), ('Marcelle', 'Hirt'), ('Marcelle', 'Voyame'), ('Marcia', 'Almada'), ('Marcia', 'Gaspar'), ('Marcia', 'Paganini'), ('Marcia', 'Secondo'), ('Marcia', 'Senn'), ('Marcie', 'Harper'), ('Marcy', 'Okeefe'), ('Maree', 'Booth'), ('Maree Teiwa', 'Casey'), ('Mareen', 'Beermann'), ('Mareen', 'Louie Harper'), ('Mareike', 'Molchin'), ('Mareke', 'Plocher'), ('Maren', 'Haus'), ('Maren', 'Helgo'), ('Maren', 'Kassens'), ('Maren', 'Muller'), ('Maren', 'Nordklev'), ('Maren', 'Sundermeier'), ('Maret', 'Ani'), ('Maretha', 'Van Niekerk'), ('Mareze', 'Joubert'), ('Margalita', 'Chakhnashvili'), ('Margalita', 'Tchitchashvili'), ('Margaret', 'Boyette'), ('Margaret', 'Burns'), ('Margaret', 'Cooper'), ('Margaret', 'Court'), ('Margaret', 'Harris'), ('Margaret', 'Hunt'), ('Margaret', 'Lee'), ('Margaret', 'Lumia'), ('Margaret', 'Olagundoye'), ('Margaret', 'Redfearn'), ('Margaret', 'Riley'), ('Margaret', 'Schnakenburg'), ('Margaret', 'Starr'), ('Margareta', 'Forsgardh'), ('Margaretha', 'Novianti'), ('Margarida', 'Abreu'), ('Margarida', 'Fernandes'), ('Margarida', 'Moura'), ('Margarita', 'Akbacheva'), ('Margarita', 'Amelina'), ('Margarita', 'Andonegui'), ('Margarita', 'De Zuleta'), ('Margarita', 'Edinarova'), ('Margarita', 'Febrer Marza'), ('Margarita', 'Gasparyan'), ('Margarita', 'Karnaukhova'), ('Margarita', 'Khasanova'), ('Margarita', 'Kotok'), ('Margarita', 'Lazareva'), ('Margarita', 'Markaki'), ('Margarita', 'Medina'), ('Margarita', 'Mejia'), ('Margarita', 'Shmeleva'), ('Margarita', 'Skryabina'), ('Margarita', 'Spicin'), ('Margarita', 'Vaquero'), ('Margarita', 'Vasileva'), ('Margarita', 'Zuleta'), ('Margarita Greta', 'Skripnik'), ('Margaryta', 'Bilokin'), ('Margaryta', 'Demchenko'), ('Margaryta', 'Dolzhenko'), ('Margaryta', 'Pashket'), ('Margaux', 'Bovy'), ('Margaux', 'Brabant'), ('Margaux', 'Deagostini'), ('Margaux', 'Orange'), ('Margherita', 'Naso'), ('Margie', 'Milliken'), ('Margit', 'Ruutel'), ('Margita', 'Sunjic'), ('Margo', 'Landmann'), ('Margot', 'Carter'), ('Margot', 'De Haan'), ('Margot', 'Decker'), ('Margot', 'Dittmeyer'), ('Margot', 'Mercier'), ('Margot', 'Torre'), ('Margot', 'Yerolymos'), ('Marharyta', 'Smolyak'), ('Mari', 'Andersson'), ('Mari', 'Inoue'), ('Mari', 'Mahoni'), ('Mari', 'Mizuno'), ('Mari', 'Osaka'), ('Mari', 'Tanaka'), ('Mari', 'Toro'), ('Mari', 'Yamauchi'), ('Mari Ann', 'Klougart'), ('Mari Carmen', 'Espinosa'), ('Mari Cruz', 'Garcia Sanchez'), ('Mari Liis', 'Parmas'), ('Maria', 'Abramovic'), ('Maria', 'Ahumada'), ('Maria', 'Alvarez Aguaron'), ('Maria', 'Alvaro'), ('Maria', 'Arenas'), ('Maria', 'Arkhipova'), ('Maria', 'Avgerinos'), ('Maria', 'Babanova'), ('Maria', 'Babich'), ('Maria', 'Barbed Isusi'), ('Maria', 'Barboutova'), ('Maria', 'Bayon'), ('Maria', 'Belaya'), ('Maria', 'Bengtsson'), ('Maria', 'Benkirane'), ('Maria', 'Biryukova'), ('Maria', 'Boboedova'), ('Maria', 'Bogdanova'), ('Maria', 'Bolster'), ('Maria', 'Bordons Ortiz'), ('Maria', 'Bru Ballara'), ('Maria', 'Bueno'), ('Maria', 'Calbeto'), ('Maria', 'Capistrano Bjorklund'), ('Maria', 'Casas Blas'), ('Maria', 'Castanera Rodriguez'), ('Maria', 'Cespedes'), ('Maria', 'Chakarova'), ('Maria', 'Chavez'), ('Maria', 'Christensen'), ('Maria', 'Chun'), ('Maria', 'Djordjio'), ('Maria', 'Ekstrand'), ('Maria', 'Fagerstrom'), ('Maria', 'Fedosyuk'), ('Maria', 'Fernandez'), ('Maria', 'Fernandez Zaragoza'), ('Maria', 'Figueroa'), ('Maria', 'Galiy'), ('Maria', 'Galoustova'), ('Maria', 'Garcia Planas'), ('Maria', 'Garoz Moreno'), ('Maria', 'Gatalskaya'), ('Maria', 'Geyer'), ('Maria', 'Geznenge'), ('Maria', 'Gil'), ('Maria', 'Goloviznina'), ('Maria', 'Gomez'), ('Maria', 'Gomez Saldarriaga'), ('Maria', 'Guerreiro'), ('Maria', 'Gugel'), ('Maria', 'Guijarro'), ('Maria', 'Gusheva'), ('Maria', 'Gutierrez Carrasco'), ('Maria', 'Hamad'), ('Maria', 'Hardling'), ('Maria', 'Hernandez'), ('Maria', 'Hollingsworth'), ('Maria', 'Hoyos'), ('Maria', 'Husain'), ('Maria', 'Ilieva'), ('Maria', 'Irigoyen'), ('Maria', 'Ivanov'), ('Maria', 'Jedlickova'), ('Maria', 'Jespersen'), ('Maria', 'Kajikawa'), ('Maria', 'Kefala'), ('Maria', 'Kiparenko'), ('Maria', 'Kirilenko'), ('Maria', 'Klein'), ('Maria', 'Knott'), ('Maria', 'Komissarova'), ('Maria', 'Kompalka'), ('Maria', 'Kondratieva'), ('Maria', 'Kononova'), ('Maria', 'Kouvatsos'), ('Maria', 'Krasnova'), ('Maria', 'Kravcenko'), ('Maria', 'Kuznetsova'), ('Maria', 'Lawton'), ('Maria', 'Limanskaya'), ('Maria', 'Lindberg'), ('Maria', 'Lindstrom'), ('Maria', 'Manilova'), ('Maria', 'Marfina'), ('Maria', 'Marfutina'), ('Maria', 'Marnellou'), ('Maria', 'Martin Lozano'), ('Maria', 'Martinez Martinez'), ('Maria', 'Martinez Romero'), ('Maria', 'Masini'), ('Maria', 'Mateas'), ('Maria', 'Mateo'), ('Maria', 'Melihova'), ('Maria', 'Meliuk'), ('Maria', 'Mendez'), ('Maria', 'Mendonca'), ('Maria', 'Mikhaylova'), ('Maria', 'Milanova'), ('Maria', 'Milic'), ('Maria', 'Miziouk'), ('Maria', 'Mokh'), ('Maria', 'Mosolova'), ('Maria', 'Moya'), ('Maria', 'Mukai'), ('Maria', 'Muntanola'), ('Maria', 'Naoum'), ('Maria', 'Navarro Cruz'), ('Maria', 'Nieto'), ('Maria', 'Nivia'), ('Maria', 'Novikova'), ('Maria', 'Oliver Sanchez'), ('Maria', 'Oreshkina'), ('Maria', 'Ouazzani'), ('Maria', 'Pages Mere'), ('Maria', 'Palhoto'), ('Maria', 'Panaite'), ('Maria', 'Patrascu'), ('Maria', 'Pavlidou'), ('Maria', 'Penkova'), ('Maria', 'Perevoschikova'), ('Maria', 'Pereyra Sellart'), ('Maria', 'Perez Garcia'), ('Maria', 'Persson'), ('Maria', 'Pes'), ('Maria', 'Petrova'), ('Maria', 'Petrovic'), ('Maria', 'Popescu'), ('Maria', 'Prishlyak'), ('Maria', 'Pujol Serra'), ('Maria', 'Pulido'), ('Maria', 'Purcell'), ('Maria', 'Rakhmanina'), ('Maria', 'Rasmussen'), ('Maria', 'Ribeiro'), ('Maria', 'Rivas'), ('Maria', 'Romanov'), ('Maria', 'Rothschild'), ('Maria', 'Ruiz Fabrega'), ('Maria', 'Ryshchina'), ('Maria', 'SOLNYSHKINA'), ('Maria', 'Sakkari'), ('Maria', 'Salsgard'), ('Maria', 'Sanchez'), ('Maria', 'Sanchez Lorenzo'), ('Maria', 'Schneider'), ('Maria', 'Seppi'), ('Maria', 'Serra'), ('Maria', 'Shalaeva'), ('Maria', 'Sharapova'), ('Maria', 'Shishkina'), ('Maria', 'Silva'), ('Maria', 'Sinigaglia'), ('Maria', 'Siopacha'), ('Maria', 'Smith'), ('Maria', 'Soler Valverde'), ('Maria', 'Soo'), ('Maria', 'Sorbello'), ('Maria', 'Spenceley'), ('Maria', 'Stepanova'), ('Maria', 'Strandlund Tomsvik'), ('Maria', 'Suarez Alonso'), ('Maria', 'Tasheva'), ('Maria', 'Tavares'), ('Maria', 'Temez Fernandez'), ('Maria', 'Tkachuk'), ('Maria', 'Toma'), ('Maria', 'Toncheva'), ('Maria', 'Toran Ribes'), ('Maria', 'Tritou'), ('Maria', 'Turrillo'), ('Maria', 'Tyrina'), ('Maria', 'Uvarova'), ('Maria', 'Vento Kabchi'), ('Maria', 'Viarkhusha'), ('Maria', 'Vlachou'), ('Maria', 'Voscekova'), ('Maria', 'Wolfbrandt'), ('Maria', 'Zela'), ('Maria', 'Zharkova'), ('Maria', 'Zivcicova'), ('Maria', 'Zlydnikova'), ('Maria', 'Zotova'), ('Maria', 'Zsoldos'), ('Maria', 'Zubkova'), ('Maria Adelaida', 'Agudelo'), ('Maria Agustina', 'De Carli'), ('Maria Agustina', 'Reyes Molina'), ('Maria Alejandra', 'Claure'), ('Maria Alejandra', 'Garcia'), ('Maria Alejandra', 'Quezada'), ('Maria Aless', 'Termini'), ('Maria Alexandra', 'Giura'), ('Maria Alexandra', 'Maldonado'), ('Maria Andrea', 'Cardenas'), ('Maria Andrea', 'Quintero'), ('Maria Andreina', 'Varela'), ('Maria Angela', 'Ferreira'), ('Maria Angelica', 'Tangarife'), ('Maria Anna', 'Koutaniti'), ('Maria Antonia', 'Vives Barquiel'), ('Maria Antonietta', 'Trupia'), ('Maria Aran', 'Teixido Garcia'), ('Maria Aurelia', 'Scotti'), ('Maria Azul', 'Cortiana'), ('Maria Belen', 'Corbalan'), ('Maria Belen', 'Da Luz'), ('Maria Belen', 'Mosca'), ('Maria Belen', 'Rojas'), ('Maria Belen', 'Vaz Teixeira'), ('Maria Camila', 'Osorio Serrano'), ('Maria Camila', 'Trujillo Hoyos'), ('Maria Carmen', 'Arnoso'), ('Maria Carmen', 'Escuder'), ('Maria Carmen', 'Gaso'), ('Maria Carmen', 'Leon'), ('Maria Carolina', 'Torres'), ('Maria Celeste', 'Lamagni'), ('Maria Christine', 'Damas'), ('Maria Clara', 'Bernardez'), ('Maria Clara', 'Fernandez Bruera'), ('Maria Claudia', 'Alves'), ('Maria Claudia', 'Negri'), ('Maria Claudia', 'Romo'), ('Maria Claudia', 'Santos Santanna'), ('Maria Concepcion', 'Bulilan'), ('Maria Constanza De Las Mercedes', 'Vega'), ('Maria Cristina', 'Bentivoglio'), ('Maria Cristina', 'Borba Dias'), ('Maria Cristina', 'Campana'), ('Maria Cristina', 'Selis'), ('Maria Daniela', 'Frascini'), ('Maria Daniela', 'Yanez'), ('Maria De Los Angeles', 'Cardenas'), ('Maria De Los Angeles', 'Montoya'), ('Maria De Los Angeles', 'Ycaza'), ('Maria Del', 'Prados Cid'), ('Maria Del Mar', 'Ceron'), ('Maria Del Rosario', 'Canero Perez'), ('Maria Del Rosario', 'Rodriguez Arias'), ('Maria Del Rosario', 'Vazquez'), ('Maria Dolores', 'Campana'), ('Maria Dolores', 'Pazo'), ('Maria Eduarda', 'Medeiros'), ('Maria Elena', 'Badillo'), ('Maria Elena', 'Camerin'), ('Maria Elena', 'Del Valle'), ('Maria Elena', 'Gittens'), ('Maria Elena', 'Jimenez'), ('Maria Elena', 'Llamas'), ('Maria Elena', 'Medina Betancourt'), ('Maria Elena', 'Recalde'), ('Maria Elena', 'Rojas Loaiza'), ('Maria Elena', 'Ruiz'), ('Maria Elena', 'Torres'), ('Maria Eleni', 'Charalampopoulou'), ('Maria Eliana', 'Castro'), ('Maria Elisa', 'Franco'), ('Maria Elizabeth', 'Lopez'), ('Maria Emilia', 'Ponton Caamano'), ('Maria Emilia', 'Salerni'), ('Maria Emma', 'Quiroz'), ('Maria Eugenia', 'Brito'), ('Maria Eugenia', 'Fernandez'), ('Maria Eugenia', 'Guzman'), ('Maria Eugenia', 'Roca Recarey'), ('Maria Eugenia', 'Rojas'), ('Maria Eugenia', 'Torres'), ('Maria Eugenia', 'Vento'), ('Maria Fernanda', 'Aguirre Arteaga'), ('Maria Fernanda', 'Alvarez A'), ('Maria Fernanda', 'Alvarez Teran'), ('Maria Fernanda', 'Alves'), ('Maria Fernanda', 'Carrillo'), ('Maria Fernanda', 'Herazo Gonzalez'), ('Maria Fernanda', 'Hernandez'), ('Maria Fernanda', 'Jimenez'), ('Maria Fernanda', 'Landa'), ('Maria Fernanda', 'Macedo'), ('Maria Fernanda', 'Navarro Oliva'), ('Maria Fernanda', 'Riveroll'), ('Maria Fernanda', 'Sainz'), ('Maria Fernanda', 'Vargas'), ('Maria Florencia', 'Albertalli'), ('Maria Florencia', 'Cianfagna'), ('Maria Florencia', 'Novillo'), ('Maria Florencia', 'Rivolta'), ('Maria Florencia', 'Urrutia'), ('Maria Florica', 'Pandele'), ('Maria Francesca', 'Bentivoglio'), ('Maria Gabriela', 'Giacomin'), ('Maria Gabriela', 'Linares'), ('Maria Gabriela', 'Linares De Faria'), ('Maria Giorgia', 'Farrugia Sacco'), ('Maria Gracia', 'Ycaza'), ('Maria Grazia', 'Tonani'), ('Maria Ignacia', 'Gioria'), ('Maria Ignacia', 'Yapur Lopez'), ('Maria Ines', 'Araiz'), ('Maria Ines', 'Deheza'), ('Maria Ines', 'Fonte'), ('Maria Ines', 'Leal'), ('Maria Irene', 'Squillaci Sandoval'), ('Maria Isabel', 'Camberos'), ('Maria Isabella', 'Ariza Sanz'), ('Maria Jazmin', 'Amicuzi'), ('Maria Jesus', 'Ibanez Galindo'), ('Maria Jesus', 'Sol Hernandez'), ('Maria Joao', 'Antunes'), ('Maria Joao', 'Koehler'), ('Maria Jose', 'Andres Gomez'), ('Maria Jose', 'Arechavaleta'), ('Maria Jose', 'Argeri'), ('Maria Jose', 'Aubet'), ('Maria Jose', 'Buil Tellaeche'), ('Maria Jose', 'Capuano'), ('Maria Jose', 'Dronda Prados'), ('Maria Jose', 'Gaidano'), ('Maria Jose', 'Hernandez Magro Quiroz'), ('Maria Jose', 'Likibi'), ('Maria Jose', 'Llorca'), ('Maria Jose', 'Lopez Herrera'), ('Maria Jose', 'Luque Moreno'), ('Maria Jose', 'Marino Calvino'), ('Maria Jose', 'Martinez Sanchez'), ('Maria Jose', 'Olave'), ('Maria Jose', 'Paniagua'), ('Maria Jose', 'Pintos'), ('Maria Jose', 'Portillo Ramirez'), ('Maria Jose', 'Reynaldo'), ('Maria Jose', 'Rodriguez'), ('Maria Jose', 'Samano Moreno'), ('Maria Jose', 'Sanchez Alayeto'), ('Maria Jose', 'Sastre Comas'), ('Maria Jose', 'Vallasciani'), ('Maria Jose', 'Zacarias'), ('Maria Jose', 'Zehnder'), ('Maria Josefina', 'Rojo'), ('Maria Julia', 'Bernal Penteado De Lima Mendes'), ('Maria Julia', 'Roverano'), ('Maria Juliana', 'Alzate'), ('Maria Juliana', 'Labrador Morales'), ('Maria Julieta', 'Lillo'), ('Maria Karina', 'Lomena'), ('Maria Laura', 'Bertolo'), ('Maria Laura', 'Fernandez'), ('Maria Laura', 'Scapigliati'), ('Maria Laura', 'Zarza'), ('Maria Lavinia', 'Piva'), ('Maria Letizia', 'Zavagli'), ('Maria Lorena', 'Alcetegaray'), ('Maria Lota', 'Kaul'), ('Maria Lourdes', 'Carle'), ('Maria Lovella', 'Catalan'), ('Maria Luciana', 'Reynares'), ('Maria Luiza', 'Craciun'), ('Maria Luz', 'Perlini'), ('Maria Manuel', 'Cabral Lencastre'), ('Maria Marta', 'Gallinal'), ('Maria Noel', 'Losada'), ('Maria Noel', 'Ruiz'), ('Maria Paola', 'Aranguren'), ('Maria Paola', 'Arcos'), ('Maria Paola', 'Zavagli'), ('Maria Patricia', 'Cordova'), ('Maria Paula', 'Abreu'), ('Maria Paula', 'Aguirre'), ('Maria Paula', 'Bagnati'), ('Maria Paula', 'Coyos'), ('Maria Paula', 'Deheza'), ('Maria Paula', 'Hernandez'), ('Maria Paula', 'Martinez Gelvez'), ('Maria Paula', 'Medina Blanco'), ('Maria Paula', 'Ribero'), ('Maria Paula', 'Sanchez'), ('Maria Paula', 'Tobias'), ('Maria Paula', 'Torres'), ('Maria Paula', 'Uhrich'), ('Maria Paulina', 'Gamboa'), ('Maria Paulina', 'Perez Garcia'), ('Maria Paz', 'Jimenez Barquero'), ('Maria Paz', 'Orellana'), ('Maria Paz', 'Orero'), ('Maria Pilar', 'Sanchez Alayeto'), ('Maria Pilar', 'Valls'), ('Maria Regina', 'Espindola Mancera'), ('Maria Rene', 'Espinosa'), ('Maria Rian', 'Pila'), ('Maria Rosa', 'Sitja Gibert'), ('Maria Rossana', 'Vega Saguier'), ('Maria Shirley', 'Valler'), ('Maria Sol', 'Carrasco'), ('Maria Sol', 'Mezio'), ('Maria Sol', 'Rotondo'), ('Maria Sol', 'Zeyen'), ('Maria Sole', 'Barbieri'), ('Maria Soledad', 'Coppari'), ('Maria Styliani', 'Botsa'), ('Maria Tania', 'Abraham'), ('Maria Teresa', 'Guell'), ('Maria Teresa', 'Nasuelli'), ('Maria Teresa', 'Riedl'), ('Maria Teresa', 'Ruiz'), ('Maria Teresa', 'Salame'), ('Maria Teresa', 'Salvidea Diaz'), ('Maria Teresa', 'Scott'), ('Maria Teresa', 'Torro Flor'), ('Maria Vanina', 'Garcia Sokol'), ('Maria Veronica', 'Jimenez Coello'), ('Maria Veronica', 'Widyadharma'), ('Maria Victoria', 'Baldovinos Cibeira'), ('Maria Victoria', 'Beortegui'), ('Maria Victoria', 'De Moggio'), ('Maria Victoria', 'Domina'), ('Maria Victoria', 'Negoita'), ('Maria Victoria', 'Puga'), ('Maria Victoria', 'Quinde Serrano'), ('Maria Victoria', 'Valle Zimmernann'), ('Maria Virginia', 'Bosch'), ('Maria Virginia', 'Francesca'), ('Maria Virginia', 'Moreno Heredia'), ('Maria Vitoria', 'Beirao'), ('Maria Vittoria', 'Viviani'), ('Maria Ximena', 'Herrera Rea'), ('Mariaan', 'De Swardt'), ('Mariagiovanna', 'Nanti'), ('Mariagrazia', 'Pedretti'), ('Mariah', 'Plauth'), ('Mariajose', 'Cardona'), ('Marialice', 'Alonso'), ('Marialuisa', 'Zirilli'), ('Mariam', 'Bayatyan'), ('Mariam', 'Bolkvadze'), ('Mariam', 'Dalakishvili'), ('Mariam', 'Galal Hafez'), ('Mariam', 'Kiknadze'), ('Mariam', 'Kupreishvili'), ('Mariam', 'Kurdadze'), ('Mariam', 'Mikuchadze'), ('Mariam', 'Rahim'), ('Mariam', 'Ramon Climent'), ('Mariam Ashraf', 'Mohamed Mostafa'), ('Mariame', 'Toure'), ('Mariami', 'Akhalaia'), ('Mariami', 'Dolashvili'), ('Mariami', 'Gogelashvili'), ('Mariami', 'Kurasbediani'), ('Mariami', 'Samkanashvili'), ('Mariami', 'Skhirtladze'), ('Marian', 'Martin Garcia'), ('Marian Jade', 'Capadocia'), ('Mariana', 'Aconcha'), ('Mariana', 'Alvarez'), ('Mariana', 'Borges'), ('Mariana', 'Carreira'), ('Mariana', 'Charalambous'), ('Mariana', 'Conde'), ('Mariana', 'Correa'), ('Mariana', 'Cutuk'), ('Mariana', 'Demichelli Vergara'), ('Mariana', 'Diaz De Leon'), ('Mariana', 'Diaz Oliva'), ('Mariana', 'Drazic'), ('Mariana', 'Duarte'), ('Mariana', 'Duque Marino'), ('Mariana', 'Eberle'), ('Mariana', 'Faustinelli'), ('Mariana', 'Fernandez Larrandaburu'), ('Mariana', 'Galben'), ('Mariana', 'Gonzalez'), ('Mariana', 'Gonzalez Moreno'), ('Mariana', 'Gonzalez Romero'), ('Mariana', 'Gould'), ('Mariana', 'Junqueira'), ('Mariana', 'Levova'), ('Mariana', 'Lopez Palacios'), ('Mariana', 'Lopez Terribile'), ('Mariana', 'Macia'), ('Mariana', 'Majic'), ('Mariana', 'Melo'), ('Mariana', 'Mesa'), ('Mariana', 'Moreno'), ('Mariana', 'Muci Torres'), ('Mariana', 'Oliveira'), ('Mariana', 'Otero'), ('Mariana', 'Perez Roldan'), ('Mariana', 'Perez Saaibi'), ('Mariana', 'Petrasova'), ('Mariana', 'Quintanilla'), ('Mariana', 'Randrup'), ('Mariana', 'Ranzahuer Garcia Calderon'), ('Mariana', 'Salvador'), ('Mariana', 'Simionescu'), ('Mariana', 'Sonnervig'), ('Mariana', 'Vargas Carrascal'), ('Mariana', 'Weschenfelder'), ('Mariana', 'Zuluaga Robledo'), ('Mariana Lucia', 'Bedon Burgos'), ('Mariana Mayer', 'Humberg'), ('Mariana Pires', 'Junqueira'), ('Mariangela', 'Avola'), ('Mariangeles', 'Gomez Quintana'), ('Marianna', 'Ansio'), ('Marianna', 'Brummer'), ('Marianna', 'Keranen'), ('Marianna', 'Laasanen'), ('Marianna', 'Natali'), ('Marianna', 'Petrei'), ('Marianna', 'Yuferova'), ('Marianna', 'Zakarlyuk'), ('Marianne', 'Baker'), ('Marianne', 'Bakken'), ('Marianne', 'Colon'), ('Marianne', 'De Crop'), ('Marianne', 'Groat'), ('Marianne', 'Jodoin'), ('Marianne', 'Kindler'), ('Marianne', 'Sibille'), ('Marianne', 'Vallin'), ('Marianne', 'Van Der Torre'), ('Marianne', 'Van Oppen'), ('Marianne', 'Ward'), ('Marianne', 'Werdel Witmeyer'), ('Marianthi', 'Tsesmetzi'), ('Mariapia', 'Quagliozzi'), ('Mariaryeni', 'Gutierrez'), ('Maribel', 'Amadeo'), ('Maribel', 'Ramirez'), ('Maribel', 'Vicente Joyera'), ('Maricaye', 'Christenson'), ('Maricela', 'Morales'), ('Maricielo', 'Torres Chihuan'), ('Maricris', 'Gentz'), ('Marie', 'Arkbrant'), ('Marie', 'Benoit'), ('Marie', 'Bouzkova'), ('Marie', 'Combemorel'), ('Marie', 'Croin'), ('Marie', 'Decamps'), ('Marie', 'Klocker'), ('Marie', 'Leduc'), ('Marie', 'Linusson'), ('Marie', 'Matrka'), ('Marie', 'Mattel'), ('Marie', 'Mayerova'), ('Marie', 'Menacer'), ('Marie', 'Natroshvili'), ('Marie', 'Norris'), ('Marie', 'Pinterova'), ('Marie', 'Temin'), ('Marie', 'Vallety'), ('Marie', 'Van Aelst'), ('Marie', 'Vicente'), ('Marie', 'Villet'), ('Marie', 'Yamabe'), ('Marie', 'Zalameda'), ('Marie Ange', 'Koami'), ('Marie Christine', 'Brochard'), ('Marie Christine', 'Calleja'), ('Marie Christine', 'Caron'), ('Marie Christine', 'Chartier'), ('Marie Christine', 'Goy'), ('Marie Claire', 'Mathot'), ('Marie Claude', 'Ndzoudja'), ('Marie Claude', 'Ostiguy'), ('Marie Elise', 'Casares'), ('Marie Eva', 'Vrba'), ('Marie Eve', 'Pelletier'), ('Marie France', 'Lord Andrade'), ('Marie Frederique', 'Bedard'), ('Marie Gaiane', 'Mikaelian'), ('Marie Jose', 'Llorca'), ('Marie Lisa', 'Loriga'), ('Marie Louise', 'Schuetz'), ('Marie Perla', 'Biansumba'), ('Marie Perrine', 'Baudouin'), ('Marie Pier', 'Huet'), ('Marie Pier', 'Pouliot'), ('Marie Pierre', 'Attali'), ('Marie Pierre', 'Villani'), ('Marieke', 'De Jong'), ('Marieke', 'Gunawan'), ('Mariel', 'Rosales Martinez'), ('Mariel', 'Verban'), ('Mariela', 'Brunello'), ('Mariela', 'Castro'), ('Mariela', 'Clavijo'), ('Mariela', 'Cornejo'), ('Mariela', 'Haug'), ('Mariela', 'Marinaro'), ('Mariela', 'Salinas'), ('Mariella', 'Blackwell'), ('Mariella', 'Calderon'), ('Mariella', 'Greschik'), ('Mariella', 'Minetti'), ('Marielle', 'Bruens'), ('Marielle', 'Hoogland'), ('Marielle', 'Rooimans'), ('Marielle', 'Wallin'), ('Marielle', 'Weihs'), ('Mariem Nissaf', 'Bouchlaka'), ('Marietta', 'Bigus'), ('Mariette', 'Pakker'), ('Marifer', 'Abreu'), ('Mariia', 'Antoniuk'), ('Mariia', 'Bergen'), ('Mariia', 'Skuba'), ('Mariia', 'Tcakanian'), ('Marija', 'Bogicevic'), ('Marija', 'Curnic'), ('Marija', 'Jovicic'), ('Marija', 'Kelava'), ('Marija', 'Mastilovic'), ('Marija', 'Miladinovic'), ('Marija', 'Milutinovic'), ('Marija', 'Mirkovic'), ('Marija', 'Mirosavljevic'), ('Marija', 'Olujic'), ('Marija', 'Radosavovic'), ('Marija', 'Radulovic'), ('Marija', 'Serdarusic'), ('Marija', 'Venta'), ('Marija Vera', 'Stankovic'), ('Marijana', 'Acimovic'), ('Marijana', 'Kovacevic'), ('Marijana', 'Novakovic'), ('Marijana', 'Randjelovic'), ('Marijana', 'Vlahinic'), ('Marijke', 'Schaar'), ('Marika', 'Akkerman'), ('Marika', 'Kobayashi'), ('Marika', 'Petrosino'), ('Mariko', 'Fritz Krockow'), ('Mariko', 'Kaneko'), ('Marilda', 'Julia'), ('Marilia', 'Andrade'), ('Marilia', 'Camara'), ('Marilia', 'Fritelli'), ('Marillia', 'Matte'), ('Marily', 'Canellopoulos'), ('Marilyn', 'Aschner'), ('Marilyn', 'Baker'), ('Marilyn', 'Greenwood'), ('Marilyn', 'Pryde'), ('Marilyn', 'Shekhter'), ('Marilyn', 'Tesch'), ('Marina', 'Albert'), ('Marina', 'Alcaide Bakari'), ('Marina', 'Andreoni'), ('Marina', 'Aniutin'), ('Marina', 'Antonova'), ('Marina', 'Bassols Ribera'), ('Marina', 'Benito'), ('Marina', 'Bernshtein'), ('Marina', 'Bottazzi'), ('Marina', 'Caiazzo'), ('Marina', 'Canals Bennassar'), ('Marina', 'Capin'), ('Marina', 'Cardoso'), ('Marina', 'Cernea'), ('Marina', 'Chaves Moledo'), ('Marina', 'Chuvirina'), ('Marina', 'Cossou'), ('Marina', 'Cozac'), ('Marina', 'Cunningham Pereira'), ('Marina', 'Danzini'), ('Marina', 'Darzyan'), ('Marina', 'Davtyan'), ('Marina', 'Delgado Valero'), ('Marina', 'Erakovic'), ('Marina', 'Escobar Martinez'), ('Marina', 'Ferreira'), ('Marina', 'Fileva'), ('Marina', 'Galkina'), ('Marina', 'Gallo'), ('Marina', 'Garcia Vertiz'), ('Marina', 'Gennimata'), ('Marina', 'Giral Lores'), ('Marina', 'Gojkovic'), ('Marina', 'Guinart Espana'), ('Marina', 'Hruba'), ('Marina', 'Ivanova'), ('Marina', 'Jozipovic'), ('Marina', 'Kachar'), ('Marina', 'Khomenko'), ('Marina', 'Kojanova'), ('Marina', 'Komatsu'), ('Marina', 'Kondova'), ('Marina', 'Kozachenko'), ('Marina', 'Kroschina'), ('Marina', 'Lazarovska'), ('Marina', 'Lazic'), ('Marina', 'Lebrao'), ('Marina', 'Lidiya'), ('Marina', 'Lushchina'), ('Marina', 'Lysenko'), ('Marina', 'Margulis'), ('Marina', 'Marti Hernanz'), ('Marina', 'Melnikova'), ('Marina', 'Moreno'), ('Marina', 'Nicolas Chueca'), ('Marina', 'Novak'), ('Marina', 'Novelli'), ('Marina', 'Olalla Abajo'), ('Marina', 'Pantovic'), ('Marina', 'Parashkevova'), ('Marina', 'Petrovic'), ('Marina', 'Prosenica'), ('Marina', 'Raic'), ('Marina', 'Raicevic'), ('Marina', 'Rodriguez Garcia'), ('Marina', 'Samolenko'), ('Marina', 'Sato'), ('Marina', 'Shamayko'), ('Marina', 'Skvortsova'), ('Marina', 'Soukholitko'), ('Marina', 'Spakova'), ('Marina', 'Stanimirov'), ('Marina', 'Stets'), ('Marina', 'Takimura'), ('Marina', 'Tasheva'), ('Marina', 'Tavares'), ('Marina', 'Tishkova'), ('Marina', 'Viliamovskaia'), ('Marina', 'Yudanov'), ('Marina', 'Zhurba'), ('Marina Raluca', 'Tudorache'), ('Marine', 'Beugre Guyot'), ('Marine', 'Dans'), ('Marine', 'Fontaine'), ('Marine', 'Jacquet'), ('Marine', 'Meraut'), ('Marine', 'Nizri Spiegel'), ('Marine', 'Partaud'), ('Marine', 'Petit'), ('Marine', 'Piriou'), ('Marine', 'Sorg'), ('Marine', 'Tirel'), ('Marine', 'Verbeken'), ('Marinel', 'Rudas'), ('Marinela', 'Antonic'), ('Marines', 'Holguin'), ('Marinet', 'Morgan'), ('Marinne', 'Giraud'), ('Mariola', 'Prado'), ('Marion', 'Bartoli'), ('Marion', 'Boundy'), ('Marion', 'Cammilleri'), ('Marion', 'Chatenet'), ('Marion', 'Codino'), ('Marion', 'Cristiani'), ('Marion', 'De Witte'), ('Marion', 'Dupuy'), ('Marion', 'Fleury'), ('Marion', 'Foldina'), ('Marion', 'Gaud'), ('Marion', 'Lecas'), ('Marion', 'Leuillier'), ('Marion', 'Maruska'), ('Marion', 'Pereira'), ('Marion', 'Proisy'), ('Marion', 'Walter'), ('Mariona', 'Del Peral Francin'), ('Mariona', 'Gallifa Puig Desens'), ('Mariona', 'Nadal Ribelles'), ('Mariona', 'Perez Noguera'), ('Marisa', 'Georgitsi'), ('Marisa', 'Gianotti'), ('Marisa', 'Howell'), ('Marisa', 'Sanchez'), ('Marisa', 'Sanchez Vicario'), ('Marisa', 'Tseng'), ('Marise', 'Botha'), ('Marise', 'Kruger'), ('Marisela', 'Aviles'), ('Mariska', 'Steenkamp'), ('Marisol', 'Aguilar'), ('Marisol', 'Berengeno'), ('Marissa', 'Armienta'), ('Marissa', 'Catlin'), ('Marissa', 'Espinoza'), ('Marissa', 'Gildemeister'), ('Marissa', 'Gould'), ('Marissa', 'Lincoln'), ('Marissa', 'Niroj'), ('Marisue', 'Jacutin'), ('Marit', 'Nordfors'), ('Marita', 'Redondo'), ('Maritza', 'Hernandez'), ('Maritza', 'Villalba Castro'), ('Mariya', 'Koloney'), ('Mariya', 'Koryttseva'), ('Mariya', 'Kovaleva'), ('Mariya', 'Luss'), ('Mariya', 'Malkhasyan'), ('Mariya', 'Ponomareva'), ('Mariya', 'Ryzhova'), ('Mariya', 'Slupska'), ('Mariya', 'Sukhareva'), ('Mariya', 'Taukumova'), ('Mariya', 'Tverdikova'), ('Marja', 'Znidar'), ('Marja Liisa', 'Kuurne'), ('Marjorie', 'Antohi'), ('Marjorie', 'Blackwood'), ('Marjorie', 'Ceppo'), ('Marjorie', 'Ferrand'), ('Marjorie', 'Gantman'), ('Marjorie', 'Gengler'), ('Marjorie', 'Muller'), ('Marjorie', 'Ondeck'), ('Marjorie', 'Sindal'), ('Marjorie', 'Wladimirski'), ('Marketa', 'Blazkova'), ('Marketa', 'Cizova'), ('Marketa', 'Havelkova'), ('Marketa', 'Kochta'), ('Marketa', 'Langerova'), ('Marketa', 'Panackova'), ('Marketa', 'Pastikova'), ('Marketa', 'Placha'), ('Marketa', 'Postranecka'), ('Marketa', 'Prochova'), ('Marketa', 'Stuskova'), ('Marketa', 'Vondrousova'), ('Marketa', 'Wallenfels'), ('Marketa', 'Zeminova'), ('Marla', 'Mesa'), ('Marleen', 'Tilgner'), ('Marlen', 'Hacke'), ('Marlena', 'Metzinger'), ('Marlena', 'Pietzuch'), ('Marlene', 'Chumbez'), ('Marlene', 'De Wouters'), ('Marlene', 'Dirnstorfer'), ('Marlene', 'Mejia'), ('Marlene', 'Ryan'), ('Marlene', 'Weingartner'), ('Marlene', 'Zuleta'), ('Marli', 'Van Heerden'), ('Marlie', 'Buehler'), ('Marlies', 'Reinders'), ('Marlies', 'Steiner'), ('Marlies', 'Szupper'), ('Marlot', 'Meddens'), ('Marlou', 'Kluiving'), ('Marne', 'Roos'), ('Marnelle', 'Boshoff'), ('Marnie', 'Mahler'), ('Marrit', 'Boonstra'), ('Marsela', 'Gunawan'), ('Marsha', 'Bladel'), ('Marta', 'Alastruez Ruiz'), ('Marta', 'Arnes Cacho'), ('Marta', 'Bechliwanis'), ('Marta', 'Bellucco'), ('Marta', 'Bertolaso'), ('Marta', 'Bettinelli'), ('Marta', 'Brandani'), ('Marta', 'Canas Alvarez'), ('Marta', 'Cano'), ('Marta', 'Cruells Lopez'), ('Marta', 'Cuevas Guerrero'), ('Marta', 'Dallosso'), ('Marta', 'De Pablo Bota'), ('Marta', 'Del Pino Maturano'), ('Marta', 'Domachowska'), ('Marta', 'Dyba'), ('Marta', 'Espigado Delgado'), ('Marta', 'Fraga Perez'), ('Marta', 'Galka'), ('Marta', 'Galli'), ('Marta', 'Garcia Gausi'), ('Marta', 'Gonzalez Ballbe'), ('Marta', 'Hnatyshyn'), ('Marta', 'Insausti'), ('Marta', 'Jedrzejak'), ('Marta', 'Kostrhounova'), ('Marta', 'Kostyuk'), ('Marta', 'Kowalska'), ('Marta', 'Lesniak'), ('Marta', 'Lewandowska'), ('Marta', 'Magalhaes'), ('Marta', 'Marrero'), ('Marta', 'Melis'), ('Marta', 'Mir Portell'), ('Marta', 'Morga Alonso'), ('Marta', 'Oliva Lopez'), ('Marta', 'Oliveira'), ('Marta', 'Paigina'), ('Marta', 'Peman'), ('Marta', 'Perez Mur'), ('Marta', 'Plumitallo'), ('Marta', 'Ribalta'), ('Marta', 'Rodriguez Carbajo'), ('Marta', 'Rozas'), ('Marta', 'Rubina'), ('Marta', 'Ruedas Burgos'), ('Marta', 'Ruiz Fernandez De Castro'), ('Marta', 'Ruszczynska'), ('Marta', 'Salgueiro Freixenet'), ('Marta', 'Sanchez Soto'), ('Marta', 'Sexmilo Pascual'), ('Marta', 'Simic'), ('Marta', 'Sirotkina'), ('Marta', 'Smiechowska'), ('Marta', 'Sramkova'), ('Marta', 'Stojanovic'), ('Marta', 'Stoyanova'), ('Marta', 'Torbarina'), ('Marta', 'Torres Torres'), ('Marta', 'Varanda'), ('Marta', 'Vicens Miquel'), ('Marta Huqi', 'Gonzalez Encinas'), ('Martha', 'Garzon Elkins'), ('Martha', 'Matoula'), ('Martha', 'Montano'), ('Martha', 'Morrison'), ('Martha', 'Sanchez'), ('Martha', 'Wolf Peterdy'), ('Martha Carolina', 'Bello Urbina'), ('Martha Elena', 'Garza Del Alto'), ('Martha Paola', 'Sanchez Merigo'), ('Martha V', 'Blakely'), ('Marthe Eugenie', 'Sime'), ('Marthina Diyani', 'Schwencke'), ('Martie', 'De Villiers'), ('Martina', 'Agarici'), ('Martina', 'Alabiso'), ('Martina', 'Andornino'), ('Martina', 'Babakova'), ('Martina', 'Balogova'), ('Martina', 'Bartosova'), ('Martina', 'Basic'), ('Martina', 'Biagianti'), ('Martina', 'Biollo'), ('Martina', 'Bokulic'), ('Martina', 'Borecka'), ('Martina', 'Braun Schultz'), ('Martina', 'Bregola'), ('Martina', 'Caciotti'), ('Martina', 'Capurro Taborda'), ('Martina', 'Caregaro'), ('Martina', 'Chrobakova'), ('Martina', 'Colmegna'), ('Martina', 'Crha'), ('Martina', 'Darczuk'), ('Martina', 'Demichelis'), ('Martina', 'Dettore'), ('Martina', 'Di Giuseppe'), ('Martina', 'Erceg'), ('Martina', 'Frantova'), ('Martina', 'Fratini'), ('Martina', 'Fricova'), ('Martina', 'Furlanetto'), ('Martina', 'Gaemperle'), ('Martina', 'Gerlova'), ('Martina', 'Girardi'), ('Martina', 'Gledacheva'), ('Martina', 'Granatelli'), ('Martina', 'Gregoric'), ('Martina', 'Hautova'), ('Martina', 'Hingis'), ('Martina', 'Husarova'), ('Martina', 'Janska'), ('Martina', 'Kostalova'), ('Martina', 'Krischkeova'), ('Martina', 'Kubicikova'), ('Martina', 'Kudelova'), ('Martina', 'Lautenschlager'), ('Martina', 'Lo Pumo'), ('Martina', 'Lombardi'), ('Martina', 'Malmqvist'), ('Martina', 'Matouskova'), ('Martina', 'Miklosava'), ('Martina', 'Mikulcikova'), ('Martina', 'Mone'), ('Martina', 'Muller'), ('Martina', 'Natali'), ('Martina', 'Navratilova'), ('Martina', 'Nedelkova'), ('Martina', 'Nedorostova'), ('Martina', 'Nejedly'), ('Martina', 'Okalova'), ('Martina', 'Ondrackova'), ('Martina', 'Ondrejkova'), ('Martina', 'Paladini Jennings'), ('Martina', 'Parmigiani'), ('Martina', 'Pavelec'), ('Martina', 'Pawlik'), ('Martina', 'Pradova'), ('Martina', 'Pratesi'), ('Martina', 'Puglierin'), ('Martina', 'Reinhardt'), ('Martina', 'Reiser'), ('Martina', 'Sallusti'), ('Martina', 'Santoni'), ('Martina', 'Schaller'), ('Martina', 'Schiavo'), ('Martina', 'Sebastiani'), ('Martina', 'Sedivec'), ('Martina', 'Somoano'), ('Martina', 'Spigarelli'), ('Martina', 'Stigliano'), ('Martina', 'Strussova'), ('Martina', 'Sucha'), ('Martina', 'Toto'), ('Martina', 'Trevisan'), ('Martina', 'Trierweiler'), ('Martina', 'Vitulli'), ('Martina', 'Walsh'), ('Martina', 'Zavarise'), ('Martina', 'Zerbola'), ('Martina', 'Zerulo'), ('Martina', 'Zichova'), ('Martina Alejandra', 'Baca Villagomez'), ('Martine', 'Belle'), ('Martine', 'Bunschoten'), ('Martine', 'Bureau'), ('Martine', 'Castonguay'), ('Martine', 'Cazaux'), ('Martine', 'Ditlev'), ('Martine', 'Jodin'), ('Martine', 'Le Rays'), ('Martine', 'Poos'), ('Martine', 'Vosseberg'), ('Martini', 'Pospisilova'), ('Martyna', 'Habrych'), ('Martyna', 'Majewska'), ('Marutha', 'Devi'), ('Marwa', 'El Wany'), ('Mary', 'Carillo'), ('Mary', 'Clayton'), ('Mary', 'Closs'), ('Mary', 'Dailey'), ('Mary', 'Gambale'), ('Mary', 'Hamm'), ('Mary', 'Innes'), ('Mary', 'Johnson'), ('Mary', 'Lewis'), ('Mary', 'Liddle'), ('Mary', 'Liu'), ('Mary', 'Lowdon'), ('Mary', 'Malkin'), ('Mary', 'Marechal'), ('Mary', 'Mcanally'), ('Mary', 'Mclean'), ('Mary', 'Nejasmic'), ('Mary', 'Norwood'), ('Mary', 'Pierce'), ('Mary', 'Puljak'), ('Mary', 'Quasney'), ('Mary', 'Sawyer'), ('Mary', 'Stevens'), ('Mary', 'Struthers'), ('Mary', 'Tenu Michael Christon'), ('Mary', 'Weatherholt'), ('Mary Ann', 'Balint'), ('Mary Ann', 'Beattie'), ('Mary Ann', 'Colville'), ('Mary Anne', 'Macfarlane'), ('Mary Beth', 'Maggart'), ('Mary Carlisle', 'White'), ('Mary Catherine', 'Haffey'), ('Mary Joe', 'Fernandez'), ('Mary Lou', 'Daniels'), ('Mary Victoria', 'Cancini'), ('Maryam', 'Eslami'), ('Maryam', 'Mazaheri'), ('Maryla', 'Madura'), ('Marylene', 'Losey'), ('Maryna', 'Chernyshova'), ('Maryna', 'Chumak'), ('Maryna', 'Kariuk'), ('Maryna', 'Kolb'), ('Maryna', 'Proctor'), ('Maryna', 'Veksler'), ('Maryna', 'Zanevska'), ('Maryna', 'Zhytska'), ('Maryori', 'Franco'), ('Marzhan', 'Kukoneva'), ('Marzia', 'Carchesio'), ('Marzia', 'Grossi'), ('Masa', 'Antonijevic'), ('Masa', 'Grgan'), ('Masa', 'Jovanovic'), ('Masa', 'Marc'), ('Masa', 'Pozar'), ('Masa', 'Smic'), ('Masa', 'Vesenjak'), ('Masa', 'Zec Peskiric'), ('Masako', 'Makiba'), ('Masako', 'Morikawa'), ('Masako', 'Naito'), ('Masako', 'Nishina'), ('Masako', 'Yanagi'), ('Masami', 'Nakai'), ('Masami', 'Nakamura'), ('Masayo', 'Hosokawa'), ('Masha', 'Bayser'), ('Mashaal', 'Hameed'), ('Mashona', 'Washington'), ('Masika', 'Williams'), ('Massoumeh', 'Emami'), ('Matea', 'Curic'), ('Matea', 'Cutura'), ('Matea', 'Mamic'), ('Matea', 'Mezak'), ('Matea', 'Mihaljevic'), ('Matea', 'Zemunik'), ('Mateja', 'Horvat'), ('Mateja', 'Kraljevic'), ('Mateja', 'Ogrizek'), ('Mateja', 'Spes'), ('Mateya', 'Radisavljevic'), ('Mathilda', 'Engstrom'), ('Mathilda', 'Malm'), ('Mathilda', 'Vidgren'), ('Mathilde', 'Armitano'), ('Mathilde', 'Cor'), ('Mathilde', 'Devits'), ('Mathilde', 'Johansson'), ('Mathilde', 'Trigaux'), ('Matilda', 'David'), ('Matilda', 'Hamlin'), ('Matilda', 'Hurst'), ('Matilda', 'Lenngren'), ('Matilda', 'Vainio'), ('Matilde', 'Fernandes'), ('Matilde', 'Herrera Govantes'), ('Matilde', 'Mariani'), ('Matilde', 'Munoz Gonzalves'), ('Matulanda', 'Lumanauw'), ('Maud', 'Galtier'), ('Maud', 'Vigne'), ('Maura', 'Aveta'), ('Maureen', 'Diaz'), ('Maureen', 'Drake'), ('Maureen', 'Pratt'), ('Maureen', 'Rankine'), ('Maureen', 'Rielley'), ('Maureen', 'Schwartz'), ('Maurien', 'Rikkert'), ('Maurine', 'Lena'), ('Mawuena', 'Ankutse'), ('Maxi', 'Ehmer'), ('Maximiliane', 'Wachall'), ('Maxine', 'Palmen'), ('Maxine', 'Thomas'), ('May', 'El Wardany'), ('May', 'Emara'), ('May', 'Kabani'), ('May', 'Kimhi'), ('May', 'Wanvisa Thurakitseree'), ('Maya', 'Gaverova'), ('Maya', 'Hajjar'), ('Maya', 'Jansen'), ('Maya', 'Kato'), ('Maya', 'Kerschbaum'), ('Maya', 'Kidowaki'), ('Maya', 'Milosevic'), ('Maya', 'Pitenina'), ('Maya', 'Rosa'), ('Maya', 'Tahan'), ('Maya', 'Wakui'), ('Mayar', 'Eltony'), ('Mayar', 'Sherif'), ('Mayara', 'Galvez'), ('Mayka', 'Zima'), ('Maylani', 'Ah Hoy'), ('Maylis', 'Burel'), ('Maylis', 'Lafaysse'), ('Mayna', 'Andrade'), ('Mayo', 'Hibi'), ('Mayssa', 'Tebourbi'), ('Mayte', 'Calmet'), ('Mayte', 'Cuellar'), ('Mayu', 'Araki'), ('Mayu', 'Iwai'), ('Mayu', 'Okawa'), ('Mayuka', 'Aikawa'), ('Mayuko', 'Ebina'), ('Mayuko', 'Koshiba'), ('Mayumi', 'Seki'), ('Mayumi', 'Yamada'), ('Mayumi', 'Yamamoto'), ('Mayya', 'Katsitadze'), ('Mazluma', 'Turdyeva'), ('Mbalia', 'Bangoura'), ('Mbolatiana', 'Randrianarisoa'), ('Mccall', 'Jones'), ('Mccartney', 'Kessler'), ('Mckenna Alexandra', 'Root'), ('Mckenzie', 'Thomas'), ('Meang', 'Liew'), ('Medea', 'Petriashvili'), ('Medhini', 'Sharma'), ('Medhira', 'Samarasinghe'), ('Medi', 'Dadoch'), ('Medina', 'Bajrambasic'), ('Medina', 'Sahinagic'), ('Meenal', 'Maharwal'), ('Meera', 'Kantaria'), ('Meg', 'Boyle'), ('Meg', 'Fanjoy'), ('Mega', 'Sukmawati'), ('Megali', 'Gence'), ('Megan', 'Alexander'), ('Megan', 'Basson'), ('Megan', 'Bradley'), ('Megan', 'Broderick'), ('Megan', 'Davies'), ('Megan', 'Dorney'), ('Megan', 'Emmett'), ('Megan', 'Falcon'), ('Megan', 'Ferreira'), ('Megan', 'Forster'), ('Megan', 'Garcia'), ('Megan', 'Lombardi'), ('Megan', 'Marton'), ('Megan', 'Mccray'), ('Megan', 'Miller'), ('Megan', 'Moulton Levy'), ('Megan', 'Price'), ('Megan', 'Racette'), ('Megan', 'Rogers'), ('Megan', 'Russell'), ('Megan', 'Sandwith'), ('Megan', 'Schmulbach'), ('Megan', 'Smith'), ('Megan', 'Sporndli'), ('Megan', 'Toole'), ('Megan', 'Yeats'), ('Megane', 'Bianco'), ('Megen', 'Cochran'), ('Megha', 'Sehrawat'), ('Meghan', 'Blevins'), ('Meghan', 'Kelley'), ('Meghana', 'Paritala'), ('Meghann', 'Shaughnessy'), ('Meghha', 'Vakaria'), ('Megumi', 'Fukui'), ('Megumi', 'Katakura'), ('Megumi', 'Matsuyama'), ('Megumi', 'Nishimoto'), ('Megumi', 'Sugimura'), ('Megumi', 'Takahashi'), ('Megumi', 'Todoroki'), ('Meheq', 'Khokhar'), ('Mehreen', 'Izhar'), ('Mehry', 'Shawki'), ('Mehvish', 'Chishtie'), ('Mei', 'Date'), ('Mei', 'Otsuka'), ('Mei', 'Yamaguchi'), ('Mei Chu', 'Hsu'), ('Mei Hua', 'Hsu'), ('Mei Xu', 'Wu'), ('Meible', 'Chi'), ('Meike', 'Babel'), ('Meike', 'Frohlich'), ('Meike', 'Vorschel'), ('Meiko', 'Miyashita'), ('Meilen', 'Tu'), ('Meiling', 'Parks'), ('Meiling', 'Wang'), ('Meiqi', 'Guo'), ('Meirav', 'Duek'), ('Meiting', 'Liu'), ('Melan', 'Butler'), ('Melania', 'Mirambell'), ('Melanie', 'Benyadi'), ('Melanie', 'Bernard'), ('Melanie', 'Cohen'), ('Melanie', 'Delannoy'), ('Melanie', 'Delsart'), ('Melanie', 'Dveksler Celin'), ('Melanie', 'Gerbasi'), ('Melanie', 'Gloria'), ('Melanie', 'Gomila Bengtsson'), ('Melanie', 'Hafner'), ('Melanie', 'Junod'), ('Melanie', 'Kay'), ('Melanie', 'Klaffner'), ('Melanie', 'Kovacic'), ('Melanie', 'Maietti'), ('Melanie', 'Marois'), ('Melanie', 'Oosterhof'), ('Melanie', 'Oudin'), ('Melanie', 'Roy'), ('Melanie', 'Schneider'), ('Melanie', 'Schnell'), ('Melanie', 'South'), ('Melanie', 'Stokke'), ('Melanie', 'Tu'), ('Melanie', 'Vlak'), ('Melanie', 'Wolkersberger'), ('Melanie Ann', 'Clayton'), ('Melanie Azucena', 'Millan Acosta'), ('Melanie Isabella', 'Diaz Padron'), ('Melany Solange', 'Krywoj'), ('Melena', 'Lopez'), ('Meli', 'Garcia Truchado'), ('Melina', 'Ferrero'), ('Melina', 'Gonzalez'), ('Melina', 'Gonzalez Morganti'), ('Melina', 'Lyubomirova'), ('Melinda', 'Akerbrant Bengtsson'), ('Melinda', 'Czink'), ('Melinda', 'Glenister'), ('Melinda', 'Malouli'), ('Melinda', 'Petkes'), ('Melis', 'Bayraktaroglu'), ('Melis', 'Sezer'), ('Melis', 'Yasar'), ('Melisa', 'Arevalo'), ('Melisa', 'Cabrera Handt'), ('Melisa', 'Castro'), ('Melisa', 'Lemus'), ('Melisa', 'Martinov'), ('Melisa', 'Miranda Otarola'), ('Melisa', 'Morales'), ('Melissa', 'Applebaum'), ('Melissa', 'Arnoldi'), ('Melissa', 'Avants'), ('Melissa', 'Beadman'), ('Melissa', 'Berry'), ('Melissa', 'Bolivar'), ('Melissa', 'Brown'), ('Melissa', 'Dakkak'), ('Melissa', 'Dowse'), ('Melissa', 'Garcia'), ('Melissa', 'Gibb'), ('Melissa', 'Golfin'), ('Melissa', 'Gurney'), ('Melissa', 'Kopinski'), ('Melissa', 'Laharrague'), ('Melissa', 'Laing'), ('Melissa', 'Lord'), ('Melissa', 'Lutring'), ('Melissa', 'Mang'), ('Melissa', 'Mazzotta'), ('Melissa', 'McFarlane'), ('Melissa', 'Mcqueen'), ('Melissa', 'Mendieta'), ('Melissa', 'Middleton'), ('Melissa', 'Minniti'), ('Melissa', 'Missaglia'), ('Melissa', 'Nodvin'), ('Melissa', 'Percy'), ('Melissa', 'Ravestein'), ('Melissa', 'Ryan'), ('Melissa', 'Saiontz'), ('Melissa', 'Schaub'), ('Melissa', 'Sehovic'), ('Melissa', 'Silva'), ('Melissa', 'Torres Sandoval'), ('Melissa', 'Ullrich'), ('Melissa', 'Zimpfer'), ('Melissa Emile', 'Kandinata'), ('Melissa Ishuan', 'Ifidzhen'), ('Melissa Rose', 'Orteza'), ('Melita', 'Ferjanic'), ('Melitta', 'Miklosi'), ('Melodia', 'Morales'), ('Melody', 'Falco'), ('Melody', 'Paschal'), ('Melody', 'Todorova'), ('Menanteau', 'Moolman'), ('Meng', 'Liu'), ('Meng', 'Qin'), ('Meng', 'Wang'), ('Meng', 'Yuan'), ('Meng Ning', 'Deng'), ('Mengjuan', 'Yi'), ('Menna', 'El Nagdy'), ('Meray', 'Malouf'), ('Mercedes', 'Aristegui'), ('Mercedes', 'Del Valle Prieto'), ('Mercedes', 'Giner Gasco'), ('Mercedes', 'Hammond'), ('Mercedes', 'Lopez Velez'), ('Mercedes', 'Paz'), ('Meredith', 'Geiger'), ('Meredith', 'Mcgrath'), ('Meredith', 'Roberts'), ('Meredith', 'Xepoleas'), ('Meredith G', 'Jones'), ('Merel', 'Hoedt'), ('Merete', 'Lindahl'), ('Merete', 'Stockmann Balling'), ('Meriam', 'Rhallab'), ('Meriem', 'Addou'), ('Meriem', 'Chaouachi'), ('Meriem', 'Turki'), ('Meriem', 'Zitouni'), ('Merike', 'Stamberg'), ('Meritxell', 'Balbas'), ('Meritxell', 'Gol Alamo'), ('Meritxell', 'Mimo Bravo'), ('Meritxell', 'Perera Ros'), ('Meropi', 'Parousi'), ('Merrilee', 'Keller'), ('Merrilyn', 'Robinson'), ('Merritt', 'Emery'), ('Mervana', 'Jugic Salkic'), ('Merve', 'Asimgil'), ('Merve', 'Gultekinler'), ('Merve', 'Gulten'), ('Merve', 'Koksal'), ('Meryem', 'El Haddad'), ('Meryem', 'Lahlou'), ('Meryem', 'Tazi'), ('Mesenbete', 'Shenkutee'), ('Meta', 'Sevsek'), ('Metamin', 'Sharijah'), ('Metasebeya', 'Temesgen'), ('Mette', 'Iversen'), ('Mette', 'Sigmundstad'), ('Meutia', 'Sabrina'), ('Mey', 'Ayari'), ('Mhairi', 'Brown'), ('Mhari', 'Neish'), ('Mi', 'Yoo'), ('Mi Ae', 'Sohn'), ('Mi Hee', 'Jung'), ('Mi Jeong', 'Kwon'), ('Mi Jeong', 'Lee'), ('Mi Ok', 'Kim'), ('Mi Ok', 'Lee'), ('Mi Ra', 'Jeon'), ('Mi Rae', 'Ham'), ('Mi Ran', 'Shin'), ('Mi Seon', 'Lee'), ('Mi Zhuoma', 'You'), ('Mia', 'Buric'), ('Mia', 'Drobnjak'), ('Mia', 'Fiocca'), ('Mia', 'Golubovic'), ('Mia', 'Gordon'), ('Mia', 'Horvit'), ('Mia', 'Jurasic'), ('Mia', 'Kasih'), ('Mia', 'King'), ('Mia', 'Kurek'), ('Mia', 'Lancaster'), ('Mia', 'Leino'), ('Mia', 'Liimatainen'), ('Mia', 'Marovic'), ('Mia', 'Middleton'), ('Mia', 'Mijatovic'), ('Mia', 'Paavilainen'), ('Mia', 'Rabinowitz'), ('Mia', 'Radulovic'), ('Mia', 'Ramic'), ('Mia', 'Sacca'), ('Mia', 'Van Rooyen'), ('Mia', 'Vriens'), ('Mia', 'Zecevic'), ('Mia Nicole', 'Eklund'), ('Micaela', 'Acosta'), ('Micaela', 'Hein'), ('Micaela', 'Moran'), ('Micaela', 'Moroni'), ('Micaela', 'Silva'), ('Michaela', 'Babicova'), ('Michaela', 'Bartlova'), ('Michaela', 'Bayerlova'), ('Michaela', 'Beck'), ('Michaela', 'Bezdickova'), ('Michaela', 'Bjornstrom'), ('Michaela', 'Boev'), ('Michaela', 'Bressan'), ('Michaela', 'Capannolo'), ('Michaela', 'Carvanova'), ('Michaela', 'Frimmelova'), ('Michaela', 'Frlicka'), ('Michaela', 'Gordon'), ('Michaela', 'Haet'), ('Michaela', 'Hasanova'), ('Michaela', 'Havelkova'), ('Michaela', 'Honcova'), ('Michaela', 'Ince'), ('Michaela', 'Jasenakova'), ('Michaela', 'Johansson'), ('Michaela', 'Kissell'), ('Michaela', 'Kopacin'), ('Michaela', 'Kriebel'), ('Michaela', 'Kucharova'), ('Michaela', 'Larsson'), ('Michaela', 'Lazerova'), ('Michaela', 'Lincoln'), ('Michaela', 'Marikova'), ('Michaela', 'Masur'), ('Michaela', 'Matejickova'), ('Michaela', 'Meszarosova'), ('Michaela', 'Michalkova'), ('Michaela', 'Odraskova'), ('Michaela', 'Pastikova'), ('Michaela', 'Pazderova'), ('Michaela', 'Pochabova'), ('Michaela', 'Schumichrastova'), ('Michaela', 'Seibold'), ('Michaela', 'Silesova'), ('Michaela', 'Soukupova Peterova'), ('Michaela', 'Tennant'), ('Michaela', 'Vogel'), ('Michaela', 'Washington'), ('Michaella', 'Krajicek'), ('Michaila', 'Hasanova'), ('Michal', 'Amir'), ('Michal', 'Bar'), ('Michal', 'Yogev'), ('Michala', 'Bzdusekova'), ('Michala', 'Kucharova'), ('Michalina', 'Jedrzejczak'), ('Michela', 'Casanova'), ('Michela', 'Comune'), ('Michela', 'Isella'), ('Michela', 'Piccioli'), ('Michela', 'Pizzo'), ('Michela', 'Sala'), ('Michela', 'Trabalioni'), ('Michela', 'Verpelli'), ('Michela', 'Xibilia'), ('Michele', 'Erkens'), ('Michele', 'Grimm'), ('Michele', 'Gurdal'), ('Michele', 'Kahn'), ('Michele', 'Mizen'), ('Michele', 'Wagner'), ('Michele', 'Wreem'), ('Michele', 'Zmau'), ('Michele Alexandra', 'Zmau'), ('Michele Ayomide', 'Idera'), ('Micheline', 'Aubuchon'), ('Michelle', 'Anderson'), ('Michelle', 'Arnott'), ('Michelle', 'Aybar'), ('Michelle', 'Beadman'), ('Michelle', 'Berrigan'), ('Michelle', 'Bertolini'), ('Michelle', 'Blattler'), ('Michelle', 'Bowrey'), ('Michelle', 'Brycki'), ('Michelle', 'Buess'), ('Michelle', 'Colaninni'), ('Michelle', 'Dasso'), ('Michelle', 'De Groot'), ('Michelle', 'Erasmus'), ('Michelle', 'Farley'), ('Michelle', 'Faucher'), ('Michelle', 'Fischer'), ('Michelle', 'Fux'), ('Michelle', 'Garth'), ('Michelle', 'Gerards'), ('Michelle', 'Giang'), ('Michelle', 'Gough'), ('Michelle', 'Green'), ('Michelle', 'Grobby'), ('Michelle', 'Jackson Nobrega'), ('Michelle', 'Jaggard Lai'), ('Michelle', 'Janis'), ('Michelle', 'Jlilati'), ('Michelle', 'Larcher De Brito'), ('Michelle', 'Likibi'), ('Michelle', 'Mair'), ('Michelle', 'Mitchell'), ('Michelle', 'Morris Berg'), ('Michelle', 'Oldham'), ('Michelle', 'Pang'), ('Michelle', 'Parun'), ('Michelle', 'Pekovitch'), ('Michelle', 'Pits'), ('Michelle', 'Rodriguez'), ('Michelle', 'Roth'), ('Michelle', 'Russ'), ('Michelle', 'Sammons'), ('Michelle', 'Schroeder'), ('Michelle', 'Smith'), ('Michelle', 'Snyman'), ('Michelle', 'Strebel'), ('Michelle', 'Suarez'), ('Michelle', 'Summerside'), ('Michelle', 'Torres'), ('Michelle', 'Turk'), ('Michelle', 'Tyler'), ('Michelle', 'Van Lier'), ('Michelle', 'Weiss'), ('Michelle', 'Werbrouck'), ('Michelle', 'Yang'), ('Michelle Kerubo', 'Onyancha'), ('Michelle Li Sha', 'Khoo'), ('Michelle Marie', 'Valdez'), ('Michelle Paz', 'Coccio Nieto'), ('Michika', 'Ozeki'), ('Michiko', 'Saji'), ('Michino', 'Meguro'), ('Michiru', 'Furuya'), ('Michou', 'Tulfer'), ('Micki', 'Schillig'), ('Midian', 'Tulio'), ('Midori', 'Yamamoto'), ('Mieri', 'Aoki'), ('Miglana', 'Nenova'), ('Mihaela', 'Buzarnescu'), ('Mihaela', 'Djakovic'), ('Mihaela', 'Duna'), ('Mihaela', 'Ghica'), ('Mihaela', 'Ghioca'), ('Mihaela', 'Giban'), ('Mihaela', 'Kaftanova'), ('Mihaela', 'Moldovan'), ('Mihaela', 'Sicoe'), ('Mihaela', 'Stefan'), ('Mihaela', 'Vulpe'), ('Mihaela Alina', 'Stanila'), ('Mihaela Florina', 'Bunea'), ('Mihaela Lorena', 'Marculescu'), ('Miharu', 'Imanishi'), ('Mihika', 'Yadav'), ('Miho', 'Ishida'), ('Miho', 'Kowase'), ('Miho', 'Saeki'), ('Miho', 'Tanaka'), ('Mihoka', 'Matshushima'), ('Mihoki', 'Miyahara'), ('Miia', 'Kohtala'), ('Miina', 'Luebbe'), ('Mija', 'Kresic'), ('Mijeong', 'Park'), ('Mika', 'Kanaya'), ('Mika', 'Kawamura'), ('Mika', 'Misgav'), ('Mika', 'Morimoto'), ('Mika', 'Tanaka'), ('Mika', 'Todo'), ('Mika', 'Urbancic'), ('Mikaela', 'Hockman'), ('Mikaela', 'Konstantinova'), ('Mikaela', 'Kristofersson'), ('Mikaela', 'Martinez'), ('Mikaela', 'Molina Bugarija'), ('Mikaele', 'Zaykine'), ('Mikayla', 'Morkel Brink'), ('Mikayla', 'Parks'), ('Mikayla', 'Rogers'), ('Mikele', 'Irazusta'), ('Miki', 'Chinen'), ('Miki', 'Kanehira'), ('Miki', 'Kobayashi'), ('Miki', 'Kuramochi'), ('Miki', 'Miyamura'), ('Miki', 'Miyauchi'), ('Miki', 'Mizokuchi'), ('Miki', 'Mori'), ('Miki', 'Ueno'), ('Miki', 'Ukai'), ('Miki', 'Yokobori'), ('Miku', 'Bando'), ('Miku', 'Kajishita'), ('Miku', 'Yamamoto'), ('Mila', 'Hartig'), ('Mila', 'Majtan'), ('Mila', 'Marinkovic'), ('Mila', 'Masic'), ('Mila', 'Mejic'), ('Mila', 'Popivoda'), ('Mila', 'Saric'), ('Milagros', 'Abal'), ('Milagros', 'Cubelli'), ('Milagros', 'Montero'), ('Milagros', 'Sequera'), ('Milana', 'Borisev'), ('Milana', 'Drca'), ('Milana', 'Gasymova'), ('Milana', 'Imamniyazova'), ('Milana', 'Lysova'), ('Milana', 'Maslenkova'), ('Milana', 'Semenova'), ('Milana', 'Spremo'), ('Milana', 'Yusupov'), ('Milana', 'Zhabrailova'), ('Milangela', 'Morales'), ('Milauni', 'Vibhakar'), ('Milena', 'Achlamov'), ('Milena', 'Amedieva'), ('Milena', 'Araujo'), ('Milena', 'Avetisyan'), ('Milena', 'Chisaca'), ('Milena', 'Gadjanova'), ('Milena', 'Kachar'), ('Milena', 'Kornil'), ('Milena', 'Leiva'), ('Milena', 'Nekvapilova'), ('Milena', 'Schulz Gartner'), ('Milena', 'Stanoycheva'), ('Milena', 'Stojanovic'), ('Milena', 'Tona'), ('Milena', 'Toseva'), ('Milena', 'Vitez'), ('Milena', 'Vujanovic'), ('Milena', 'Zubkov'), ('Milene', 'Souza'), ('Mileva', 'Cardenas Serna'), ('Milica', 'Bojic'), ('Milica', 'Cortanovacki'), ('Milica', 'Cubranovic'), ('Milica', 'Hadzi Tanovic'), ('Milica', 'Jeremic'), ('Milica', 'Koprivica'), ('Milica', 'Milosavljevic'), ('Milica', 'Novakovic'), ('Milica', 'Sljukic'), ('Milica', 'Stamenic'), ('Milica', 'Stepanovic'), ('Milica', 'Tomic'), ('Milica', 'Veselinovic'), ('Milica', 'Vujovic'), ('Milica', 'Zivanovic'), ('Miljana', 'Adanko'), ('Miljana', 'Jocic'), ('Miljana', 'Milojevic'), ('Miljana', 'Ristic'), ('Milka', 'Genkova'), ('Milka Emilia', 'Pasanen'), ('Millie', 'Begovic'), ('Millie', 'Didio'), ('Millie', 'Nichols'), ('Millie', 'Radovic'), ('Milly', 'Vagn Nielsen'), ('Mima', 'Jausovec'), ('Mimi', 'Fotopoulos'), ('Mimi', 'Kanarek'), ('Mimi', 'Renaudin'), ('Mimi', 'Wheeler'), ('Mimi', 'Wikstedt'), ('Mimma', 'Chernovita'), ('Mimouschka', 'Kion'), ('Min', 'Fan'), ('Min', 'Liu'), ('Min', 'Tang'), ('Min Fang', 'Chang'), ('Min Hee', 'Lee'), ('Min Hui', 'Chan'), ('Min Hwa', 'Yu'), ('Min Jie', 'Shi'), ('Min Jung', 'Jeon'), ('Min Kyung', 'Seol'), ('Mina', 'Abdul Rahman'), ('Mina', 'Gardic'), ('Mina', 'Hodzic'), ('Mina', 'Markovic'), ('Mina', 'Matsuba'), ('Mina', 'Saygi'), ('Mina Adelin', 'Pedersen'), ('Mina Guner', 'Karamercan'), ('Minami', 'Akiyama'), ('Minami', 'Endo'), ('Minami', 'Shuto'), ('Minami', 'Sonan'), ('Minami', 'Uesugi'), ('Mindy', 'Salas'), ('Mindy', 'Weiner'), ('Mineri', 'Sukegawa'), ('Minette', 'Van Vreden'), ('Minette', 'Weirich'), ('Ming Hui', 'Wu'), ('Ming Ming Joy', 'Chia'), ('Mingxiu', 'Du'), ('Mingyang', 'Liu'), ('Minh Trang', 'Dao'), ('Minja', 'Gligic'), ('Minna', 'Rautajoki'), ('Minori', 'Himeno'), ('Minori', 'Natsuka'), ('Minori', 'Takemoto'), ('Minori', 'Tamura'), ('Minori', 'Yonehara'), ('Minou', 'Jancso'), ('Mio', 'Kinjo'), ('Mir', 'Ambaye'), ('Mira', 'Antonitsch'), ('Mira', 'Radu'), ('Mira', 'Rainshtein'), ('Mira', 'Veghova'), ('Mirabela', 'Teodorescu'), ('Mirabelle', 'Njoze'), ('Miranda', 'Ball'), ('Miranda', 'Foley'), ('Miranda', 'Ramirez'), ('Miranda', 'Yates'), ('Miray', 'Eshak'), ('Mirea', 'Signorini'), ('Mireia', 'Cano Guirao'), ('Mireia', 'Gol Alamo'), ('Mireia', 'Gonzalez Bosch'), ('Mireia', 'Polo'), ('Mireia', 'Recasens Horta'), ('Mireille', 'Bink'), ('Mireille', 'Moreau'), ('Mirela', 'Vladulescu'), ('Mirella', 'Ramic'), ('Mirem', 'Rico Nogales'), ('Miria', 'Bartels'), ('Miriam', 'Civera Lima'), ('Miriam', 'Cruz'), ('Miriam', 'Dagostini'), ('Miriam', 'Kolodziejova'), ('Miriam', 'Monsutti'), ('Miriam', 'Oremans'), ('Miriam', 'Palacios'), ('Miriam', 'Ponce De Leon'), ('Miriam', 'Rahali'), ('Miriam', 'Rosell Canudas'), ('Miriam', 'Schnitzer'), ('Miriam', 'Siljic'), ('Miriam', 'Sommer'), ('Miriam', 'Steinhilber'), ('Miriam Bianca', 'Bulgaru'), ('Miriam Ruth', 'Lane'), ('Miriana', 'Tona'), ('Mirielle', 'Dittmann'), ('Mirijam', 'Schweda'), ('Mirina', 'Rajaoarisoa'), ('Mirja', 'Cuntz'), ('Mirja', 'Wagner'), ('Mirjam', 'Bjorklund'), ('Mirjam', 'Gamperli'), ('Mirjam', 'Zeller'), ('Mirjana', 'Lucic'), ('Mirna', 'Cicak'), ('Mirna', 'Curcic'), ('Mirna', 'Marinovic'), ('Miroslava', 'Bendlova'), ('Miroslava', 'Holubova'), ('Miroslava', 'Vavrinec'), ('Miroslava', 'Veghova'), ('Miroslava', 'Velevska'), ('Mirte', 'De Bakker'), ('Mirte', 'Ros'), ('Miruki', 'Kugai'), ('Mirva', 'Maenpaa'), ('Miryam', 'Jabri'), ('Misa', 'Eguchi'), ('Misa', 'Kinoshita'), ('Misae', 'Sakai'), ('Misaki', 'Doi'), ('Misaki', 'Kawamura'), ('Misaki', 'Matsuda'), ('Misaki', 'Mori'), ('Misaki', 'Shuto'), ('Misaki', 'Yoshimoto'), ('Misano', 'Sato'), ('Misato', 'Fujita'), ('Misato', 'Negi'), ('Misato', 'Tashiro'), ('Mishel', 'Kenin'), ('Mishel', 'Okhremchuk'), ('Misleydis', 'Diaz Gonzalez'), ('Misumi', 'Miyauchi'), ('Mitsuko', 'Ise'), ('Mitsumi', 'Kawasaki'), ('Miu', 'Ema'), ('Miu', 'Hongo'), ('Mixcoatl', 'Trabulse Garcia'), ('Miya', 'Solic'), ('Miyabi', 'Inoue'), ('Miyako', 'Ataka'), ('Miyako', 'Nakanishi'), ('Miyoko', 'Sugawara'), ('Miyoko', 'Takahashi'), ('Miyu', 'Date'), ('Miyu', 'Kato'), ('Miyu', 'Terada'), ('Miyuka', 'Kimoto'), ('Mizuki', 'Konakawa'), ('Mizuno', 'Kijima'), ('Mmaphala', 'Letsatle'), ('Mo', 'Cao'), ('Mobina', 'Saimwala'), ('Moe', 'Aoki'), ('Moe', 'Kawatoko'), ('Moe', 'Tsubuku'), ('Mohana', 'Chintala'), ('Moira', 'Torrisi'), ('Moira', 'Whitely'), ('Moira Valeria', 'Miranda'), ('Mojca', 'Fijavz'), ('Mojca', 'Mejak'), ('Mojca', 'Mileta'), ('Mojca', 'Pavlinic'), ('Mollie', 'Crouch'), ('Molly', 'Helgesson'), ('Molly', 'Mcgrath'), ('Molly', 'Okoniewski'), ('Molly', 'Polak'), ('Molly', 'Reed'), ('Molly', 'Scott'), ('Molly', 'Ulvin'), ('Molly', 'Van Nostrand'), ('Momoka', 'Chimura'), ('Momoka', 'Hoshino'), ('Momoko', 'Kobori'), ('Momoko', 'Nishio'), ('Momoko', 'Sonoda'), ('Mona', 'Barthel'), ('Mona', 'Guerrant'), ('Mona', 'Mansour'), ('Mona', 'Piller'), ('Monet', 'Willis'), ('Moni', 'Potrc'), ('Monia', 'Belghith'), ('Monia', 'Pederzoli'), ('Monica', 'Acosta'), ('Monica', 'Aguado'), ('Monica', 'Aguero'), ('Monica', 'Alvarez'), ('Monica', 'Amador Pons'), ('Monica', 'Baez'), ('Monica', 'Bonilla'), ('Monica', 'Canevaro'), ('Monica', 'Cantele'), ('Monica', 'Cappelletti'), ('Monica', 'Chornet Velasco'), ('Monica', 'Chow'), ('Monica', 'Giorgi'), ('Monica', 'Gonzalez Gordo'), ('Monica', 'Gorny'), ('Monica', 'Guglielmi'), ('Monica', 'Hoz De Vila'), ('Monica', 'Jimenez'), ('Monica', 'Kowalewski'), ('Monica', 'Londono'), ('Monica', 'Lundqvist'), ('Monica', 'Malinen'), ('Monica', 'Massarella'), ('Monica', 'Mastan'), ('Monica', 'Matias'), ('Monica', 'Mir Daud'), ('Monica', 'Mraz'), ('Monica', 'Munoz'), ('Monica', 'Neveklovska'), ('Monica', 'Niculescu'), ('Monica', 'Peets'), ('Monica', 'Pezzotti'), ('Monica', 'Poveda'), ('Monica', 'Puig'), ('Monica', 'Purice'), ('Monica', 'Rebolledo'), ('Monica', 'Reinach'), ('Monica', 'Rey'), ('Monica', 'Rho'), ('Monica', 'Ribero'), ('Monica', 'Rincon'), ('Monica', 'Robinson'), ('Monica', 'Saffie'), ('Monica', 'Scartoni'), ('Monica', 'Seles'), ('Monica', 'Simmen'), ('Monica', 'Toledo'), ('Monica', 'Tomas Lopes'), ('Monica', 'Turewicz'), ('Monica', 'Weber'), ('Monica', 'Wiese'), ('Monica', 'Wiesener'), ('Monica', 'Yajima'), ('Monica Putri Kusuma', 'Wardhani'), ('Monika', 'Brzuskiewicz'), ('Monika', 'Dancevic'), ('Monika', 'De Lenart'), ('Monika', 'Drabkova'), ('Monika', 'Dybicz'), ('Monika', 'Galikova'), ('Monika', 'Gieczys'), ('Monika', 'Goel'), ('Monika', 'Hadvigerova'), ('Monika', 'Hassmann'), ('Monika', 'Hohenecker'), ('Monika', 'Horvath'), ('Monika', 'Kasianiuk'), ('Monika', 'Kilnarova'), ('Monika', 'Kochanova'), ('Monika', 'Kolbovic'), ('Monika', 'Kratochvilova'), ('Monika', 'Krauze'), ('Monika', 'Lalewicz'), ('Monika', 'Lesniakova'), ('Monika', 'Lundqvist'), ('Monika', 'Magusiak'), ('Monika', 'Malinska'), ('Monika', 'Mastalirova'), ('Monika', 'Musilova'), ('Monika', 'Pavlaskova'), ('Monika', 'Peciulionyte'), ('Monika', 'Pimentel'), ('Monika', 'Popovic'), ('Monika', 'Rajicic'), ('Monika', 'Schneider'), ('Monika', 'Serrano'), ('Monika', 'Sirilova'), ('Monika', 'Stanikova'), ('Monika', 'Starosta'), ('Monika', 'Tumova'), ('Monika', 'Vinterova'), ('Monika', 'Waniek'), ('Monika', 'Wejnert'), ('Monique', 'Adamczak'), ('Monique', 'Albuquerque'), ('Monique', 'Bedoret'), ('Monique', 'Belovukovic'), ('Monique', 'Di Maso'), ('Monique', 'Fitters'), ('Monique', 'Groen'), ('Monique', 'Javer'), ('Monique', 'Kiene'), ('Monique', 'Krecke'), ('Monique', 'Le Sueur'), ('Monique', 'Lynch'), ('Monique', 'Van Haver'), ('Monique', 'Viele'), ('Monique', 'Zuur'), ('Monita', 'Horn'), ('Montana', 'Grenfell'), ('Montana', 'Moore'), ('Monthika', 'Anuchan'), ('Montinee', 'Tangphong'), ('Montserrat', 'Alonso'), ('Montserrat', 'Blasco Fernandez'), ('Montserrat', 'De Castro'), ('Montserrat', 'Ferrer'), ('Montserrat', 'Gonzalez'), ('Montserrat', 'Gonzalez'), ('Montserrat', 'Palacios'), ('Monty', 'Morrison'), ('Mora', 'Eshak'), ('Morena', 'De Bernardi'), ('Morgan', 'Barnhill'), ('Morgan', 'Basil'), ('Morgan', 'Bernabe'), ('Morgan', 'Chumney'), ('Morgan', 'Coppoc'), ('Morgan', 'Lightbourne'), ('Morgan', 'Mccray'), ('Morgane', 'Michiels'), ('Morgane', 'Pons'), ('Morgane', 'Zowczak'), ('Moriyo', 'Adachi'), ('Morocco', 'Hitt'), ('Morven', 'Mcculloch'), ('Morya', 'Peres'), ('Motoe', 'Uchida'), ('Moulika', 'Ram'), ('Mouna', 'Bouzgarrou'), ('Mouna', 'Idlkadi'), ('Mouna', 'Jebri'), ('Mouna', 'Sabri'), ('Mouna Naila', 'Azzouni'), ('Mounia', 'Hassib'), ('Moyuka', 'Uchijima'), ('Mu Ying', 'Chen'), ('Muattar', 'Abdukhalikova'), ('Muazzez', 'Demirci'), ('Mubina', 'Vahobova'), ('Mudarwati', 'Mudarwati'), ('Muge', 'Topsel'), ('Mugette', 'Ahn'), ('Mukadas', 'Yussupova'), ('Mukhabbat', 'Saidova'), ('Mumtoza', 'Mamadaliyeva'), ('Muriel', 'Wacker'), ('Murielle', 'Methon'), ('Murjana', 'Boskova'), ('Musangu', 'Muchunga'), ('Muskaan', 'Ranjan'), ('Muslima', 'Akhunova'), ('Mutsuko', 'Hirose'), ('Myke', 'Loomis'), ('Mylene', 'Halemai'), ('Mylie', 'Gillet'), ('Myrella', 'De Paula'), ('Myriam', 'Berthe'), ('Myriam', 'Casanova'), ('Myriam', 'Cueva'), ('Myriam', 'Enmer'), ('Myriam', 'Gheziel'), ('Myriam', 'Schropp'), ('Myriam', 'Sopel'), ('Myrte', 'Molenveld'), ('Myrtille', 'Georges'), ('N', 'Marman'), ('Na', 'Fan'), ('Na', 'Li'), ('Na Hee', 'Lee'), ('Na Lae', 'Han'), ('Na Ri', 'Kim'), ('Na Young', 'Lee'), ('Naa Shika', 'Adu'), ('Nabila', 'Bouchabou'), ('Nabila', 'Farah'), ('Nabila', 'Yasri'), ('Nada', 'Dimovska'), ('Nada', 'Sghyar'), ('Nada', 'Zaher'), ('Nadege', 'Jorda'), ('Nadege', 'Vergos'), ('Nadeja', 'Karpol'), ('Nadejda', 'Guskova'), ('Nadejda', 'Ostrovskaya'), ('Nadejda', 'Sidorenko'), ('Nadejda', 'Stavreva'), ('Nadejda', 'Vassileva'), ('Nadezda', 'Gorbachkova'), ('Nadezda', 'Samoylo'), ('Nadezhda', 'Sedysheva'), ('Nadia', 'Abdala'), ('Nadia', 'Adnani'), ('Nadia', 'Bibarss'), ('Nadia', 'Choqri'), ('Nadia', 'Chvanova'), ('Nadia', 'Dzuganova'), ('Nadia', 'Echeverria Alam'), ('Nadia', 'Frederika'), ('Nadia', 'Johnston'), ('Nadia', 'Justiniano'), ('Nadia', 'Kilani'), ('Nadia', 'Lalami'), ('Nadia', 'Lee'), ('Nadia', 'Mechaala Gordillo'), ('Nadia', 'Petrova'), ('Nadia', 'Podoroska'), ('Nadia', 'Pope'), ('Nadia', 'Ravita'), ('Nadia', 'Rawson'), ('Nadia', 'Solomon'), ('Nadia', 'Streltsova'), ('Nadia', 'Van Heerden'), ('Nadia Yahya Tear', 'Tjahjana'), ('Nadiia', 'Baryshpolets'), ('Nadin', 'Ercegovic'), ('Nadina', 'Secerbegovic'), ('Nadine', 'Batliner'), ('Nadine', 'De Villiers'), ('Nadine', 'Fahoum'), ('Nadine', 'Hassinger'), ('Nadine', 'Klug'), ('Nadine', 'Netter'), ('Nadine', 'Pauli'), ('Nadine', 'Plaizier'), ('Nadine', 'Raidt'), ('Nadine', 'Ruegg'), ('Nadine', 'Sabbagh'), ('Nadine', 'Sanfilippo'), ('Nadine', 'Schlotterer'), ('Nadine', 'Schmit'), ('Nadine', 'Van De Walle'), ('Nadine', 'Zeitoun'), ('Nadira', 'Burikhodjaeva'), ('Nadiya', 'Kichenok'), ('Nadiya', 'Kolb'), ('Nadja', 'Barz'), ('Nadja', 'Bay Christians'), ('Nadja', 'Beik'), ('Nadja', 'Dzafic'), ('Nadja', 'Gilchrist'), ('Nadja', 'Kusterer'), ('Nadja', 'Manjon Mihalic'), ('Nadja', 'Pavic'), ('Nadja', 'Ramskogler'), ('Nadja', 'Roma'), ('Nadja', 'Stojcic'), ('Nadja', 'Teufel'), ('Nadya', 'Syarifah'), ('Nadzeya', 'Lysak'), ('Nafees Bano', 'Syed'), ('Nagi', 'Hanatani'), ('Nagisa', 'Morimoto'), ('Nagisa', 'Nishimura'), ('Nagomi', 'Higashitani'), ('Nahathai', 'Khuntaket'), ('Naheeda', 'Noormohamed'), ('Nahia', 'Abou Khalil'), ('Nahoko', 'Tanaka'), ('Nai Yu', 'Wang'), ('Naia', 'Lartategui Uriarte'), ('Naiara', 'Uriarte Morillas'), ('Naiktha', 'Bains'), ('Naima', 'Karamoko'), ('Naina', 'Karsolia'), ('Naira', 'Santrosian'), ('Najah', 'Dawson'), ('Nam Sook', 'Kim'), ('Nam Yeon', 'Jun'), ('Nami', 'Otsuka'), ('Nami', 'Urabe'), ('Namita', 'Bal'), ('Namu', 'Zeren'), ('Nan', 'Dong'), ('Nan Nan', 'Liu'), ('Nan Nan', 'Zhang'), ('Nana', 'Kanayama'), ('Nana', 'Miyakawa'), ('Nana', 'Nemoto'), ('Nana', 'Smith'), ('Nana', 'Tsuchiya'), ('Nana', 'Urotadze'), ('Nana', 'Wada'), ('Nanako', 'Ono'), ('Nanami', 'Masuoka'), ('Nanci', 'Lemuz'), ('Nancy', 'Arendt'), ('Nancy', 'Cazares'), ('Nancy', 'El Molla'), ('Nancy', 'Feber'), ('Nancy', 'Ferguson'), ('Nancy', 'Harris'), ('Nancy', 'Karaky'), ('Nancy', 'Killingsworth'), ('Nancy', 'Loeffler Caro'), ('Nancy', 'Metriya'), ('Nancy', 'Neviaser'), ('Nancy', 'Ornstein'), ('Nancy', 'Reed'), ('Nancy', 'Richey'), ('Nancy', 'Rustignoli'), ('Nancy', 'Spelman'), ('Nancy', 'Van Erp'), ('Nancy', 'Weigel'), ('Nancy', 'Yeargin'), ('Nandia', 'Tenni'), ('Nandini', 'Gupta'), ('Nandini', 'Perumal'), ('Nandini', 'Sharma'), ('Nandita', 'Chandrasekar'), ('Nanely', 'Vallejo'), ('Nanette', 'Flichtbeil'), ('Nanette', 'Nylund'), ('Nanette', 'Schutte'), ('Nanis', 'El Essaily'), ('Nanne', 'Dahlman'), ('Nannette', 'Duxin'), ('Nantenaina', 'Ramalalaharivololona'), ('Nanuli', 'Pipiya'), ('Nao', 'Akahori'), ('Nao', 'Hibino'), ('Nao', 'Shimoji'), ('Naoe', 'Nabetani'), ('Naoko', 'Eto'), ('Naoko', 'Horikawa'), ('Naoko', 'Ishikawa'), ('Naoko', 'Kanai'), ('Naoko', 'Kijimuta'), ('Naoko', 'Kinoshita'), ('Naoko', 'Kurimata'), ('Naoko', 'Masuda'), ('Naoko', 'Matsuki'), ('Naoko', 'Sato'), ('Naoko', 'Sawamatsu'), ('Naoko', 'Suzuki'), ('Naoko', 'Teramachi'), ('Naoko', 'Ueshima'), ('Naoko', 'Ushiyama'), ('Naomi', 'Bleisch'), ('Naomi', 'Broady'), ('Naomi', 'Callow'), ('Naomi', 'Cavaday'), ('Naomi', 'Cheong'), ('Naomi', 'Holopainen'), ('Naomi', 'Jackson'), ('Naomi', 'Osaka'), ('Naomi', 'Totka'), ('Naomi', 'Tran'), ('Napanant', 'Montkhongtham'), ('Napaporn', 'Tongsalee'), ('Napatsakorn', 'Sankaew'), ('Napawee', 'Jankiaw'), ('Napharat', 'Swangkaew'), ('Narayanee', 'Gopal'), ('Nargisa', 'Akramova'), ('Nargiza', 'Ibragmova'), ('Nargiza', 'Rakhmanova'), ('Nariman', 'Abo Bakr'), ('Narisa', 'Luanporn'), ('Narumi', 'Kakegawa'), ('Nasheli', 'Martinez'), ('Nasiba', 'Espolova'), ('Nastasia', 'Boitier Legourd'), ('Nastasia', 'Jedrychowski'), ('Nastasiya', 'Kipina'), ('Nastassia', 'Chamoun'), ('Nastassia', 'Rubel'), ('Nastassja', 'Burnett'), ('Nastja', 'Kolar'), ('Nastja', 'Recnik'), ('Nastja', 'Rettich'), ('Nasty', 'Surkova'), ('Nastya', 'Gordeeva'), ('Natacha', 'Gosset'), ('Natacha', 'Randriantefy'), ('Natali', 'Balige'), ('Natali', 'Coronel'), ('Natalia', 'Alvarez Bilbao'), ('Natalia', 'Amineva'), ('Natalia', 'Anisimova'), ('Natalia', 'Baez'), ('Natalia', 'Baudone Furlan'), ('Natalia', 'Belova'), ('Natalia', 'Berezhnaya'), ('Natalia', 'Bey Barbe'), ('Natalia', 'Biletskaia'), ('Natalia', 'Bogacova'), ('Natalia', 'Bogdanova'), ('Natalia', 'Boltinskaya'), ('Natalia', 'Bondarenko'), ('Natalia', 'Bubien'), ('Natalia', 'Chasovaya'), ('Natalia', 'Cheng'), ('Natalia', 'Coronel'), ('Natalia', 'Cretu'), ('Natalia', 'Davila'), ('Natalia', 'De Cola'), ('Natalia', 'De Ugarte'), ('Natalia', 'Drabova'), ('Natalia', 'Dziamidzenka'), ('Natalia', 'Egorova'), ('Natalia', 'Escobar'), ('Natalia', 'Galan Gomez'), ('Natalia', 'Galouza'), ('Natalia', 'Ganna'), ('Natalia', 'Garay'), ('Natalia', 'Garbellotto'), ('Natalia', 'Garcia'), ('Natalia', 'Garcia Molina'), ('Natalia', 'Glodkowska'), ('Natalia', 'Gonzalez Martinez'), ('Natalia', 'Gonzalez Quintero'), ('Natalia', 'Gordeeva'), ('Natalia', 'Guevara'), ('Natalia', 'Guitler'), ('Natalia', 'Gussoni'), ('Natalia', 'Janowicz'), ('Natalia', 'Jelinkova'), ('Natalia', 'Jung'), ('Natalia', 'Kattah'), ('Natalia', 'Kolat'), ('Natalia', 'Kostova'), ('Natalia', 'Kozel'), ('Natalia', 'Leipus'), ('Natalia', 'Lifshitz'), ('Natalia', 'Lozano Anton'), ('Natalia', 'Lysova'), ('Natalia', 'Marques Melibeu'), ('Natalia', 'Maynetto'), ('Natalia', 'Medvedeva'), ('Natalia', 'Narenko'), ('Natalia', 'Nemchinova'), ('Natalia', 'Niemiec'), ('Natalia', 'Nikitina'), ('Natalia', 'Nikolopoulou'), ('Natalia', 'Noreiko'), ('Natalia', 'Nusshold'), ('Natalia', 'Orlova'), ('Natalia', 'Pellegrini'), ('Natalia', 'Perepadenko'), ('Natalia', 'Pervitskaya'), ('Natalia', 'Pietras'), ('Natalia', 'Pishchaeva'), ('Natalia', 'Piszczkiewicz'), ('Natalia', 'Rakhmanina'), ('Natalia', 'Riva'), ('Natalia', 'Roca Ward'), ('Natalia', 'Rojas'), ('Natalia', 'Romashina'), ('Natalia', 'Rubio'), ('Natalia', 'Rudnouskaya'), ('Natalia', 'Ryzhonkova'), ('Natalia', 'Sanchez'), ('Natalia', 'Savchenko'), ('Natalia', 'Semenenko'), ('Natalia', 'Serrano Garcia'), ('Natalia', 'Siedliska'), ('Natalia', 'Soetrisno'), ('Natalia', 'Stoudyanaya'), ('Natalia', 'Testa'), ('Natalia', 'Tsitouras'), ('Natalia', 'Ucros'), ('Natalia', 'Vajdova'), ('Natalia', 'Vikhlyantseva'), ('Natalia', 'Vizhunova'), ('Natalia', 'Volcova'), ('Natalia', 'Vovk'), ('Natalia', 'Yakimovich'), ('Natalia', 'Yatsenka'), ('Natalia', 'Zabala'), ('Natalia', 'Zamolotskikh'), ('Natalia', 'Zamora Jimenez'), ('Natalia', 'Zhuravleva'), ('Natalia', 'Ziminova'), ('Natalia', 'Zorgovska'), ('Natalia', 'Zvereva'), ('Natalia L S', 'Abdalla'), ('Natalia Maria', 'Christenson'), ('Natalie', 'Adsuar'), ('Natalie', 'Ayton'), ('Natalie', 'Barbir'), ('Natalie', 'Beck'), ('Natalie', 'Cahana'), ('Natalie', 'Castro'), ('Natalie', 'Cvackova'), ('Natalie', 'Dean'), ('Natalie', 'Dillon'), ('Natalie', 'Dittmann'), ('Natalie', 'Faeh'), ('Natalie', 'Fehse'), ('Natalie', 'Fracassi'), ('Natalie', 'Frawley'), ('Natalie', 'Frazier'), ('Natalie', 'Grandin'), ('Natalie', 'Handler'), ('Natalie', 'Hepburn'), ('Natalie', 'Kallmunzerova'), ('Natalie', 'Ko'), ('Natalie', 'Kohoutkova'), ('Natalie', 'Kolganova'), ('Natalie', 'Laus'), ('Natalie', 'Lozano'), ('Natalie', 'Luft'), ('Natalie', 'Marz'), ('Natalie', 'Mikolich'), ('Natalie', 'Nagyova'), ('Natalie', 'Neri'), ('Natalie', 'Novakova'), ('Natalie', 'Novotna'), ('Natalie', 'Orourke'), ('Natalie', 'Piquion'), ('Natalie', 'Pluskota'), ('Natalie', 'Proese'), ('Natalie', 'Rodriguez'), ('Natalie', 'Scaramanga'), ('Natalie', 'Slezakova'), ('Natalie', 'Solevski'), ('Natalie', 'Suk'), ('Natalie', 'Syme'), ('Natalie', 'Tanevska'), ('Natalie', 'Toporowski'), ('Natalie', 'Tschan'), ('Natalie Greer Watts', 'Da Silveira'), ('Natalija', 'Kostic'), ('Natalija', 'Popovic'), ('Natalija', 'Sipek'), ('Nataliya', 'Kotova'), ('Nataliya', 'Naumova'), ('Nataliya', 'Pintusova'), ('Nataliya', 'Pogribnyak'), ('Natalja', 'Vojinovic'), ('Natalla', 'Khaniejo'), ('Natallia', 'Niahrei'), ('Natallia', 'Vavulina'), ('Nataly', 'Yoo'), ('Natalya', 'Borodina'), ('Natalya', 'Malenko'), ('Natasa', 'Brnovic'), ('Natasa', 'Kosanin'), ('Natasa', 'Krklec Jerinkic'), ('Natasa', 'Sijakovic'), ('Natasa', 'Trailovic'), ('Natasa', 'Vuckovic'), ('Natasa', 'Vukovic'), ('Natasa', 'Zoric'), ('Natascha', 'De Kramer'), ('Natascha', 'Kennis'), ('Natasha', 'Afridi'), ('Natasha', 'Bertolucci'), ('Natasha', 'Bredl'), ('Natasha', 'Chmyreva'), ('Natasha', 'Fourouclas'), ('Natasha', 'Galouza'), ('Natasha', 'Giles Mellon'), ('Natasha', 'Hillyer'), ('Natasha', 'Irani'), ('Natasha', 'Kanvinde'), ('Natasha', 'Karolyi'), ('Natasha', 'Kelly'), ('Natasha', 'Kersten'), ('Natasha', 'Khan'), ('Natasha', 'Lotuffo'), ('Natasha', 'Lucki'), ('Natasha', 'Marcucci'), ('Natasha', 'Marks'), ('Natasha', 'Micevski'), ('Natasha', 'Palha'), ('Natasha', 'Papadopoulou'), ('Natasha', 'Pawlowski'), ('Natasha', 'Piludu'), ('Natasha', 'Piskakova'), ('Natasha', 'Prokhnevska'), ('Natasha', 'Reva'), ('Natasha', 'Sciolti'), ('Natasha', 'Starling'), ('Natasha', 'Subhash'), ('Natasha', 'Swanepoel'), ('Natasha', 'Van Der Merwe'), ('Natasha', 'Van Jaarsveld'), ('Natasha', 'Vieira'), ('Natasha', 'Villarroel'), ('Natasha', 'Watts'), ('Natasha', 'Yonan'), ('Natasha Mayumi', 'Tomishima'), ('Natasha Natalia', 'Shigina'), ('Natchanok', 'Saenyaukhot'), ('Natcharee', 'Teerachodjiranon'), ('Natela', 'Dzalamidze'), ('Natella', 'Nabieva'), ('Nathalia', 'Bellizia'), ('Nathalia', 'Naomy Sato'), ('Nathalia', 'Papadopolou'), ('Nathalia', 'Rodrigues'), ('Nathalia', 'Rossi'), ('Nathalia', 'Wolf Gasparin'), ('Nathalie', 'Aizenberg'), ('Nathalie', 'Ballet'), ('Nathalie', 'Banday'), ('Nathalie', 'Callen'), ('Nathalie', 'Dechy'), ('Nathalie', 'Du Vigneaud'), ('Nathalie', 'Elgales'), ('Nathalie', 'Fuchs'), ('Nathalie', 'Garcia Jaminet'), ('Nathalie', 'Guerree Spitzer'), ('Nathalie', 'Gunthard'), ('Nathalie', 'Herreman'), ('Nathalie', 'Housset Gilbert'), ('Nathalie', 'Jarlan'), ('Nathalie', 'Leschi'), ('Nathalie', 'Mohn'), ('Nathalie', 'Phan Thanh'), ('Nathalie', 'Roels'), ('Nathalie', 'Sienkob'), ('Nathalie', 'Tauziat'), ('Nathalie', 'Van Dierendonck'), ('Nathalie', 'Vierin'), ('Nathalie', 'Wallin'), ('Nathaly', 'Kurata'), ('Nathaly', 'Miranda'), ('Nathaly', 'Tijssen'), ('Nathania Ratih Putri', 'Karsita'), ('Natia', 'Gegia'), ('Natia', 'Tsiklauri'), ('Natividad', 'Lopez Diaz'), ('Natnicha', 'Ruangsumrej'), ('Natnicha', 'Sirijariyaporn'), ('Nato', 'Dolitze'), ('Nato', 'Kachkachishvili'), ('Nato', 'Shaburishvili'), ('Natsuho', 'Arakawa'), ('Natsuho', 'Nakazawa'), ('Natsuki', 'Asakura'), ('Natsuko', 'Kurita'), ('Natsuko', 'Matsuda'), ('Natsuko', 'Yamada'), ('Natsumi', 'Chimura'), ('Natsumi', 'Hamamura'), ('Natsumi', 'Kobayashi'), ('Natsumi', 'Koshino'), ('Natsumi', 'Kujime'), ('Natsumi', 'Okamoto'), ('Natsumi', 'Tsubo'), ('Natsumi', 'Yokota'), ('Natsumi', 'Yuki'), ('Nattawadee', 'Kotcha'), ('Natthapat', 'Piwbangruk'), ('Natyanee', 'Tanawsri'), ('Navodi', 'De Zoysa'), ('Nayara', 'Candido De Moraes'), ('Naz', 'Karagoz'), ('Nazan', 'Arsal'), ('Nazari', 'Urbina'), ('Nazh', 'Gencsoy'), ('Nazil', 'Ander'), ('Nazli', 'Gencsoy'), ('Nazli', 'Kutuk'), ('Nazli Nader', 'Redha'), ('Nazrin', 'Jafarova'), ('Ndindi Inziani', 'Mwaruka'), ('Neda', 'Katalina'), ('Neda', 'Koprcina'), ('Neda', 'Kozic'), ('Neda', 'Mihneva'), ('Neena', 'Sharma'), ('Neesha', 'Thirumalaichelvam'), ('Nefisa', 'Berberovic'), ('Neha', 'Bhardwaj'), ('Neha', 'Rana'), ('Neha', 'Uberoi'), ('Neha Sujit', 'Nair'), ('Neharika', 'Rama'), ('Nehel', 'Sahni'), ('Neige', 'Dias'), ('Neira', 'Fatic'), ('Neissa', 'Doumbia'), ('Nejla', 'Gunay Karoglu'), ('Nel', 'Ben Ami'), ('Nela', 'Bogdanovich'), ('Nela', 'Platkova'), ('Nele', 'Landrieux'), ('Neli', 'Sunjic'), ('Nelise', 'Verster'), ('Nell', 'Miller'), ('Nell', 'Truman'), ('Nellemieke', 'Brouwer'), ('Nelli', 'Buyuklianova'), ('Nelli', 'Ponomareva'), ('Nelly', 'Ciolkowski'), ('Nelly', 'Dvornicka'), ('Nelly', 'Garcia Sanchez'), ('Nelly', 'Iglesias Vazquez'), ('Nelly', 'Maillard'), ('Nelly', 'Mezan'), ('Nelly', 'Pardo'), ('Nelly', 'Radeva'), ('Nelo', 'Phiri'), ('Nelyuri', 'Calvo'), ('Nena', 'Vukasovic'), ('Nency', 'Chipan'), ('Nenni', 'Delmestre'), ('Nerea', 'Guerra Santana'), ('Nerea', 'Irisarri Duran'), ('Nerea', 'Piquer Albisu'), ('Neri', 'Cohen'), ('Nerida', 'Gregory'), ('Nerma', 'Caluk'), ('Nermeen', 'Shawky'), ('Nermien', 'Abaza'), ('Nesrine', 'Korso Feciane'), ('Nesrine', 'Troubia'), ('Neta', 'Berman'), ('Nethmi Himashi', 'Waduge'), ('Neus', 'Avila Bonastre'), ('Neus', 'Barbera Flores'), ('Neus', 'Bestard Pomar'), ('Neus', 'Rodriguez Menendez'), ('Neus', 'Sole'), ('Neus', 'Torregrosa Parets'), ('Neuza', 'Silva'), ('Nevena', 'Arsic'), ('Nevena', 'Georgieva'), ('Nevena', 'Selakovic'), ('Nevena', 'Sokovic'), ('Neyssa', 'Etienne'), ('Neza', 'Globocnik'), ('Nezha', 'Saber'), ('Ngozi', 'Dirisu'), ('Ngozi', 'Okwudike'), ('Nhu Quynh', 'Phan'), ('Ni', 'Zhong'), ('Ni', 'Zhou'), ('Ni Luh Sintha', 'Eka'), ('Nia', 'Rose'), ('Niamh', 'Coveney'), ('Nian Ze', 'Liu'), ('Nicha', 'Jitmanee'), ('Nicha', 'Lertpitaksinchai'), ('Nichala', 'Reddy Boda'), ('Nicky', 'Van Dyck'), ('Nicol', 'Padilla'), ('Nicol', 'Signorini'), ('Nicola', 'Corn'), ('Nicola', 'George'), ('Nicola', 'Geuer'), ('Nicola', 'Kaiwai'), ('Nicola', 'Koopman'), ('Nicola', 'Lusty'), ('Nicola', 'Manley'), ('Nicola', 'Mooney'), ('Nicola', 'Payne'), ('Nicola', 'Seltenbecher'), ('Nicola', 'Slater'), ('Nicola', 'Trinder'), ('Nicola', 'Woodhouse'), ('Nicole', 'Agostini'), ('Nicole', 'Angat'), ('Nicole', 'Aragones Miro Quesada'), ('Nicole', 'Arendt'), ('Nicole', 'Arosemena'), ('Nicole', 'Ballach'), ('Nicole', 'Baloescu'), ('Nicole', 'Bartnik'), ('Nicole', 'Bimes'), ('Nicole', 'Bonnaffoux'), ('Nicole', 'Bouffler'), ('Nicole', 'Bradtke'), ('Nicole', 'Briceno'), ('Nicole', 'Bueno Sandoval'), ('Nicole', 'Buitoni'), ('Nicole', 'Bunea'), ('Nicole', 'Cianci'), ('Nicole', 'Clerico'), ('Nicole', 'Collie'), ('Nicole', 'Conard'), ('Nicole', 'Coopersmith'), ('Nicole', 'De O Crispino De Souza'), ('Nicole', 'Dzenga'), ('Nicole', 'Elliott'), ('Nicole', 'Fintell'), ('Nicole', 'Fossa Huergo'), ('Nicole', 'Frenkel'), ('Nicole', 'Funk'), ('Nicole', 'Gadanyi'), ('Nicole', 'Gadient'), ('Nicole', 'Gibbs'), ('Nicole', 'Grunwald'), ('Nicole', 'Havlicek'), ('Nicole', 'Herzog'), ('Nicole', 'Hoynaski'), ('Nicole', 'Hummel'), ('Nicole', 'Kadlec'), ('Nicole', 'Kaiser'), ('Nicole', 'Kantor'), ('Nicole', 'Kenneally'), ('Nicole', 'Khirin'), ('Nicole', 'Knickerbocker'), ('Nicole', 'Krijger Jagerman'), ('Nicole', 'Kriz'), ('Nicole', 'Leimbach'), ('Nicole', 'London'), ('Nicole', 'Lorenzetti'), ('Nicole', 'Ludwig'), ('Nicole', 'Mabille'), ('Nicole', 'Martinez'), ('Nicole', 'Melch'), ('Nicole', 'Melichar'), ('Nicole', 'Meyer'), ('Nicole', 'Mingazzini'), ('Nicole', 'Mitchell'), ('Nicole', 'Monteiro'), ('Nicole', 'Mossmer'), ('Nicole', 'Nadel'), ('Nicole', 'Niox Chateau'), ('Nicole', 'Oomens'), ('Nicole', 'Petchey'), ('Nicole', 'Peterson'), ('Nicole', 'Pitts'), ('Nicole', 'Pratt'), ('Nicole', 'Remis'), ('Nicole', 'Rencken'), ('Nicole', 'Riner'), ('Nicole', 'Robinson'), ('Nicole', 'Roth'), ('Nicole', 'Rottmann'), ('Nicole', 'Saracino'), ('Nicole', 'Seitenbecher'), ('Nicole', 'Sewell'), ('Nicole', 'Shabaz'), ('Nicole', 'Simon'), ('Nicole', 'Smith'), ('Nicole', 'Stanziola'), ('Nicole', 'Strnadova'), ('Nicole', 'Thyssen'), ('Nicole', 'Vaidisova'), ('Nicole', 'Wagstaff'), ('Nicole', 'Weber'), ('Nicole', 'Welte'), ('Nicole', 'Wist'), ('Nicole Caroline', 'Vaz Da Silva'), ('Nicole Marlene', 'Sanjon'), ('Nicole Taylor', 'Pafundi'), ('Nicole Theresa', 'Leisher'), ('Nicoleta', 'Dan'), ('Nicoleta', 'Ratiu'), ('Nicoleta Ana Maria', 'Bara'), ('Nicoleta Catalina', 'Dascalu'), ('Nicoleta Mihaela', 'Negru'), ('Nicoletta', 'Iaccarino'), ('Nicoletta', 'Pericleous'), ('Nicolette', 'Mechem'), ('Nicolette', 'Rooimans'), ('Nicolette', 'Tran'), ('Nicolette', 'Van Uitert'), ('Nicoli', 'Attili Pereira'), ('Nicolin', 'Luecke'), ('Nicolle Andrea', 'Gomez Romero'), ('Nida', 'Hamilton'), ('Nida', 'Shahid Kamal'), ('Nida', 'Waseem'), ('Nidhi', 'Chilumula'), ('Nidhi', 'Shah'), ('Nidhi', 'Surapaneni'), ('Niditra', 'Rajmohan'), ('Nigina', 'Abduraimova'), ('Nigina', 'Rahmanova'), ('Nigora', 'Sirojiddinova'), ('Nihal', 'El Aasar'), ('Nihal', 'Tarek Saleh'), ('Nihed', 'Benkaddour'), ('Nihel', 'Adjali'), ('Nika', 'Kovac'), ('Nika', 'Kukharchuk'), ('Nika', 'Ozegovic'), ('Nika', 'Shytkouskaya'), ('Nikarat', 'Wateenukit'), ('Nike', 'Dobrovits'), ('Nikhila', 'Narra'), ('Nikhila', 'Palat'), ('Niki', 'Ninaus'), ('Niki', 'Tippins'), ('Niki', 'Williams'), ('Nikita', 'Bhardwaj'), ('Nikita', 'Deshmukh'), ('Nikita', 'Uberoi'), ('Nikki', 'Kallenberg'), ('Nikki', 'Luttikhuis'), ('Nikki', 'Prosser'), ('Nikki', 'Redelijk'), ('Nikki Camille', 'Zoleta'), ('Nikkita', 'Fountain'), ('Nikol', 'Dimitrova'), ('Nikol', 'Dobrilova'), ('Nikol', 'Docheva'), ('Nikol', 'Hristova'), ('Nikol', 'Yordanova'), ('Nikol', 'Zaikin'), ('Nikola', 'Breckova'), ('Nikola', 'Dolakova'), ('Nikola', 'Frankova'), ('Nikola', 'Hofmanova'), ('Nikola', 'Horakova'), ('Nikola', 'Hubnerova'), ('Nikola', 'Matovicova'), ('Nikola', 'Neumannova'), ('Nikola', 'Novotna'), ('Nikola', 'Schweinerova'), ('Nikola', 'Tomanova'), ('Nikola', 'Vajdova'), ('Nikoleta', 'Antoniou Karademitrou'), ('Nikoleta', 'Bulatovic'), ('Nikoleta', 'Kipritidou'), ('Nikoleta', 'Pritargova'), ('Nikoleta', 'Vlaikoudi'), ('Nikoletta', 'Muller'), ('Nikolette', 'Budai'), ('Nikolina', 'Dominikovic'), ('Nikolina', 'Dzunov'), ('Nikolina', 'Grbac'), ('Nikolina', 'Hrankova'), ('Nikolina', 'Jovic'), ('Nikolina', 'Renic'), ('Nikolina', 'Rimac'), ('Nikolina Marija', 'Turudic'), ('Niku', 'Amin'), ('Nilay Gizem', 'Altay'), ('Nilaya', 'Tarimela'), ('Nilgen', 'Ahmetspahic'), ('Niltooli', 'Wilkins'), ('Nilufar', 'Ismailova'), ('Nilupul', 'Goonasekera'), ('Nilushi', 'Fernando'), ('Nimisha', 'Mohan'), ('Nimom', 'Segodo'), ('Nimota', 'Kadiri'), ('Nina', 'Aigner'), ('Nina', 'Alibalic'), ('Nina', 'Asanin'), ('Nina', 'Beljajevova'), ('Nina', 'Bland'), ('Nina', 'Bohm'), ('Nina', 'Bratchikova'), ('Nina', 'Catovic'), ('Nina', 'Duebbers'), ('Nina', 'Egger'), ('Nina', 'Erickson'), ('Nina', 'Furmaniak'), ('Nina', 'Henkel'), ('Nina', 'Holanova'), ('Nina', 'Janzekovic'), ('Nina', 'Jauch'), ('Nina', 'Joksovic'), ('Nina', 'Kalezic'), ('Nina', 'Khmelnitckaia'), ('Nina', 'Khrisanova'), ('Nina', 'Knavs'), ('Nina', 'Knez'), ('Nina', 'Kolar'), ('Nina', 'Kolar'), ('Nina', 'Kruijer'), ('Nina', 'Maglatyuk'), ('Nina', 'Makarova'), ('Nina', 'Marjanovic'), ('Nina', 'Miu'), ('Nina', 'Mujezinovic'), ('Nina', 'Munch Soegaard'), ('Nina', 'Murn'), ('Nina', 'Nagode'), ('Nina', 'Nikitovic'), ('Nina', 'Nikprelevic'), ('Nina', 'Nittinger'), ('Nina', 'Olyanovskaya'), ('Nina', 'Pantic'), ('Nina', 'Pfahler'), ('Nina', 'Potocnik'), ('Nina', 'Rudiukova'), ('Nina', 'Schwarz'), ('Nina', 'Septrita'), ('Nina', 'Sertic'), ('Nina', 'Spaeth'), ('Nina', 'Stadler'), ('Nina', 'Stojanovic'), ('Nina', 'Suvak'), ('Nina', 'Van Oost'), ('Nina', 'Voydat'), ('Nina', 'Vulovich'), ('Nina', 'Wellnitz'), ('Nina', 'Wenger'), ('Nina', 'Wennerstrom'), ('Nina', 'Zander'), ('Nina', 'Zlender'), ('Nina Isabella', 'Scholten'), ('Nina Rebecca', 'Hotter'), ('Ninani', 'Coyne'), ('Ninel', 'Barkan'), ('Ninfa', 'Marra'), ('Ning', 'Hai'), ('Ning', 'Lin'), ('Nini', 'Guensler'), ('Nini', 'Lagvilava'), ('Ninisita', 'Srihadi'), ('Ninja', 'Pfuetzenreuter'), ('Nino', 'Chichinadze'), ('Nino', 'Esebua'), ('Nino', 'Louarsabishvili'), ('Nino', 'Mebuke'), ('Nino', 'Memishishi'), ('Nino', 'Szownadze'), ('Nino G', 'Sujashvili'), ('Ninoska', 'Souto'), ('Nipada', 'Kaewborisut'), ('Niriantsa', 'Rasolomalala'), ('Niroshita', 'Madanala'), ('Nirupama', 'Sanjeev'), ('Nisha', 'Nair'), ('Nisha', 'Naraynsingh'), ('Nishtha', 'Dudeja'), ('Nishtha', 'Yadav'), ('Nisrine', 'Hajbane'), ('Nithya Raj', 'Babu Raj'), ('Nitisha', 'Deodhar'), ('Nitzan', 'Bruner'), ('Niu Xuan', 'Zhou'), ('Niurka', 'Sodupe'), ('Nivea', 'Bezich Cavinta'), ('Nivedita', 'Venkatesh'), ('Nives', 'Baric'), ('Nives', 'Culum'), ('Nives', 'Pavlovic'), ('Nivin', 'Kezbari'), ('Niyati', 'Shetty'), ('Noa', 'Horovitz'), ('Noa', 'Krznaric'), ('Noa', 'Lasry'), ('Noa', 'Liauw A Fong'), ('Noa', 'Revivo'), ('Noel', 'Scott'), ('Noelia', 'Bouzo Zanotti'), ('Noelia', 'Furno'), ('Noelia', 'Leon'), ('Noelia', 'Lopez Lazaro'), ('Noelia', 'Perez Penate'), ('Noelia', 'Serra'), ('Noelia', 'Serra Djamdjean'), ('Noelia', 'Zeballos'), ('Noelia Alejandra', 'Acuna'), ('Noelle', 'Hickey'), ('Noelle', 'Porter'), ('Noelle', 'Van Lottum'), ('Noemi', 'Giraudo'), ('Noemi', 'Hemmerich'), ('Noemi', 'Minzberg'), ('Noemi', 'Novo Pereira'), ('Noemie', 'Ruffin'), ('Noemie', 'Scharle'), ('Noha', 'Mohsen'), ('Nona', 'Wagh'), ('Nonna', 'Kurginyan'), ('Noopur', 'Desai'), ('Noor', 'Omara'), ('Noppawan', 'Lertcheewakarn'), ('Nora', 'Ayala Serra'), ('Nora', 'Bajchikova'), ('Nora', 'Kovarcikova'), ('Nora', 'Koves'), ('Nora', 'Lauteslager'), ('Nora', 'Niedmers'), ('Nora', 'Quintal'), ('Nora', 'Somoza'), ('Nora', 'Szoke'), ('Nora', 'Veiga Gil'), ('Nora Lima', 'Dahl'), ('Nora Luciana', 'David'), ('Noramon', 'Tacharungroj'), ('Norie', 'Kojima'), ('Noriko', 'Miyamoto'), ('Noriko', 'Miyazaki'), ('Noriko', 'Saruta'), ('Noriko', 'Uehara'), ('Norma', 'Aules'), ('Norma', 'Baylon'), ('Norma', 'Eastburn'), ('Norma', 'Flautero'), ('Norma', 'Marsh'), ('Norzafira', 'Taufik'), ('Norzahara', 'Zainal'), ('Nosa', 'Esorae'), ('Nosheen', 'Ehtesham'), ('Nosrat', 'Zeidan'), ('Noswazi', 'Tshabalala'), ('Nouha', 'Bazir'), ('Nouha', 'Ziki'), ('Nour', 'Abbes'), ('Nour', 'Abou Saleh'), ('Nour', 'Azzouz'), ('Nour', 'Damergi'), ('Nour', 'Dib'), ('Nour', 'Kaddour'), ('Nour', 'Tohamy'), ('Noura', 'Abdul Aal'), ('Nova', 'Patel'), ('Novela Rezha', 'Millenia Putri'), ('Novianti', 'Warsono'), ('Nowlenn', 'Peltier'), ('Noy', 'Mor'), ('Noya', 'Ohana'), ('Nozelina', 'Lukeman'), ('Nozipho Gloria', 'Sithole'), ('Nozomi', 'Aiba'), ('Nozomi', 'Fujioka'), ('Nozomi', 'Kawai'), ('Nozomi', 'Matsuda'), ('Nozomi', 'Ohya'), ('Ntswaki', 'Mawela'), ('Nudnida', 'Luangnam'), ('Nune', 'Khachatryan'), ('Nungnadda', 'Wannasuk'), ('Nupur', 'Kaul'), ('Nupur', 'Umashankar'), ('Nur Gulsan', 'Bicen'), ('Nuraeni', 'Batubara'), ('Nuria', 'Brancaccio'), ('Nuria', 'Cascon Lapido'), ('Nuria', 'Garrido Femenias'), ('Nuria', 'Hernandez'), ('Nuria', 'Llagostera Vives'), ('Nuria', 'Martinez'), ('Nuria', 'Montero'), ('Nuria', 'Niemes'), ('Nuria', 'Ormeno Ruiz'), ('Nuria', 'Parrizas Diaz'), ('Nuria', 'Rivas'), ('Nuria', 'Roig Tost'), ('Nuria', 'Sanchez Garcia'), ('Nuria', 'Sanjurjo'), ('Nuria', 'Tabernero Garin'), ('Nurin Nabilah', 'Roslan'), ('Nurseda', 'Akovalier'), ('Nutwadee', 'Suthiprapha'), ('Nyla', 'Beenk'), ('Oana', 'Archip'), ('Oana', 'Creanga'), ('Oana', 'Danescu'), ('Oana', 'Gavrila'), ('Oana', 'Ionescu'), ('Oana', 'Irimescu'), ('Oana Alexandra', 'Stanica'), ('Oana Carmen', 'Trus'), ('Oana Elena', 'Golimbioschi'), ('Oana Georgeta', 'Simion'), ('Oana Smaranda', 'Corneanu'), ('Oceane', 'Adam'), ('Oceane', 'Dodin'), ('Oceane', 'Garibal'), ('Oceane', 'Mialon'), ('Oceane', 'Razakaboana'), ('Odalis', 'Sardinas'), ('Odeta', 'Naujokaite'), ('Odile', 'De Roubin'), ('Odile', 'Maesfranckx'), ('Odul', 'Okur'), ('Ofelya', 'Poghosyan'), ('Ofir', 'Morag'), ('Ofra', 'Friedman'), ('Ofri', 'Lankri'), ('Oindrila', 'Majumder'), ('Ojasvinee', 'Singh'), ('Oksana', 'Bushevitsa'), ('Oksana', 'Djulai'), ('Oksana', 'Enik'), ('Oksana', 'Kalashnikova'), ('Oksana', 'Karyshkova'), ('Oksana', 'Khomyk'), ('Oksana', 'Koshman'), ('Oksana', 'Melnichenko'), ('Oksana', 'Pavlova'), ('Oksana', 'Uzhylovska'), ('Oksana', 'Yarikova'), ('Oktavia', 'Ayu Dewi'), ('Ola', 'Abou Zekri'), ('Ola', 'Abou Zekry'), ('Olakunbi', 'Abass'), ('Olawaseun', 'Ogundare'), ('Olaya', 'Garrido Rivas'), ('Olaya', 'Inclan Solis'), ('Oleksandra', 'Andrieieva'), ('Oleksandra', 'Balaba'), ('Oleksandra', 'Gorchanyuk'), ('Oleksandra', 'Korashvili'), ('Oleksandra', 'Piskun'), ('Olena', 'Antypina'), ('Olena', 'Kuzmyk'), ('Olena', 'Kyrpot'), ('Olena', 'Leonchuk'), ('Olena', 'Tsutskova'), ('Olesia', 'Nazarova'), ('Olesya', 'Artemeva'), ('Olesya', 'Nesterovich'), ('Olesya', 'Pervushina'), ('Olexandra', 'Verkhniatska'), ('Olfa', 'Dhaoui'), ('Olga', 'Alexeeva'), ('Olga', 'Arevalo'), ('Olga', 'Arruabarrena Vecino'), ('Olga', 'Babanova'), ('Olga', 'Baikoulova'), ('Olga', 'Barabanschikova'), ('Olga', 'Blank'), ('Olga', 'Borisova'), ('Olga', 'Boulytcheva'), ('Olga', 'Brozda'), ('Olga', 'Carrasco'), ('Olga', 'Cosic'), ('Olga', 'Danilovic'), ('Olga', 'Doroshina'), ('Olga', 'Duran'), ('Olga', 'Dzuba'), ('Olga', 'Elkin'), ('Olga', 'Esteve Mendez'), ('Olga', 'Fischer'), ('Olga', 'Fridman'), ('Olga', 'Glouschenko'), ('Olga', 'Gorzelak'), ('Olga', 'Govortsova'), ('Olga', 'Helmi'), ('Olga', 'Hostakova'), ('Olga', 'Ianchuk'), ('Olga', 'Ippolitova'), ('Olga', 'Ivanova'), ('Olga', 'Ivlieva'), ('Olga', 'Kalyuzhnaya'), ('Olga', 'Khrapkova'), ('Olga', 'Kirpicheva'), ('Olga', 'Kishchun'), ('Olga', 'Koutseridi'), ('Olga', 'Lazarchuk'), ('Olga', 'Lugina'), ('Olga', 'Makhova'), ('Olga', 'Mikhailova'), ('Olga', 'Morozova'), ('Olga', 'Nefedova'), ('Olga', 'Nin'), ('Olga', 'Panova'), ('Olga', 'Parres Azcoitia'), ('Olga', 'Pasichnichenko'), ('Olga', 'Puchkova'), ('Olga', 'Ramirez'), ('Olga', 'Saez Larra'), ('Olga', 'Sarli'), ('Olga', 'Savchuk'), ('Olga', 'Serbyn'), ('Olga', 'Tatarchenko'), ('Olga', 'Teplynska'), ('Olga', 'Terletska'), ('Olga', 'Terteac'), ('Olga', 'Timofeeva'), ('Olga', 'Tsarbopoulou'), ('Olga', 'Tsoi'), ('Olga', 'Votavova'), ('Olga', 'Vymetalkova'), ('Olga', 'Zaicenco'), ('Olga', 'Zaitseva'), ('Olga', 'Zavarotnaya'), ('Olha', 'Romanyshyn'), ('Olivera', 'Tadijin'), ('Olivera', 'Veskovac'), ('Olivia', 'Alfredsson'), ('Olivia', 'Beltrame'), ('Olivia', 'Bennett'), ('Olivia', 'Boesing'), ('Olivia', 'Cappelletti'), ('Olivia', 'Crouchent'), ('Olivia', 'De Camaret'), ('Olivia', 'Dubovikov'), ('Olivia', 'Fery'), ('Olivia', 'Gadecki'), ('Olivia', 'Horn'), ('Olivia', 'Howlett'), ('Olivia', 'Janowicz'), ('Olivia', 'Larsson'), ('Olivia', 'Lukaszewicz'), ('Olivia', 'Marshall'), ('Olivia', 'Matuszak'), ('Olivia', 'Messineo'), ('Olivia', 'Mislov'), ('Olivia', 'Nicholls'), ('Olivia', 'Parson'), ('Olivia', 'Peet'), ('Olivia', 'Pimia'), ('Olivia', 'Ponchet'), ('Olivia', 'Rich'), ('Olivia', 'Robert'), ('Olivia', 'Rogowska'), ('Olivia', 'Rohrbacher'), ('Olivia', 'Salgi'), ('Olivia', 'Sanchez'), ('Olivia', 'Scarfi'), ('Olivia', 'Smith'), ('Olivia', 'Sneed'), ('Olivia', 'Sonnekus Williams'), ('Olivia', 'Tjandramulia'), ('Olivia', 'Tudor'), ('Olivia', 'Vrettas'), ('Olivia Alexandra', 'Placzek'), ('Oliwia', 'Szymczuch'), ('Olla', 'Mourad'), ('Oluchukwu Jennifer', 'Ibeto'), ('Olusola', 'Gbadamosi'), ('Omlata Rai', 'Kumari'), ('Omolola', 'Oredugba'), ('Onalenna', 'Leepile'), ('Ondine', 'Trompette'), ('Ons', 'Jabeur'), ('Oona', 'Orpana'), ('Oormila', 'Ram'), ('Ophelie', 'Vergnes'), ('Or', 'Meir'), ('Or', 'Sasson'), ('Orathai', 'Thampensri'), ('Orawan', 'Lamangthong'), ('Orawan', 'Thampensri'), ('Orawan', 'Wongkamalasai'), ('Orian', 'Ben Haim'), ('Oriana', 'Escalante'), ('Oriana', 'Nowicki'), ('Oriana Belen', 'Labaqui'), ('Orie', 'Sasaki'), ('Orit', 'Strauss'), ('Orly', 'Bialistozky'), ('Ornela', 'Basaric'), ('Ornella', 'Caron'), ('Ornella', 'Garavani'), ('Ornella', 'Gentile'), ('Ornella Marcela', 'Spinetta'), ('Orobosa', 'Amadin'), ('Ortansa Nicoleta', 'Danciu'), ('Osariemen', 'Airhunmwunde'), ('Osaro', 'Amadin'), ('Oshri', 'Shashua'), ('Othilia', 'Lindqvist'), ('Ouarda', 'Bouchabou'), ('Oumaima', 'Aziz'), ('Oumeima', 'Charrad'), ('Oxana', 'Lyubtsova'), ('Oxana', 'Zhuchenko'), ('Oxi', 'Gravitas Putri'), ('Oyku', 'Boz'), ('Oyku', 'Pekgenc'), ('Oyuki', 'Cruz'), ('Ozge', 'Atalay'), ('Paco', 'Heredia'), ('Padma Preetham', 'Mahalingam'), ('Page', 'Bartelt'), ('Paiao Asinata', 'Short'), ('Paige', 'Cline'), ('Paige', 'Yaroshuk'), ('Paige Mary', 'Hourigan'), ('Paige Wanjiku', 'Mbugua'), ('Pairin', 'Panjasilpa'), ('Paiton', 'Wagner'), ('Pakrpa', 'Pramualsuk'), ('Palina', 'Dubavets'), ('Palina', 'Padabed'), ('Pallavi', 'Ravikumar'), ('Pallavi', 'Sharma'), ('Palma', 'Kiraly'), ('Paloma', 'Castillo'), ('Paloma', 'Collantes'), ('Paloma', 'Cuervo'), ('Paloma', 'Diaz Sada'), ('Paloma', 'Escobedo'), ('Paloma', 'Mielgo'), ('Paloma', 'Navarro Montes De Oca'), ('Paloma', 'Ruiz Blanco'), ('Paloma', 'Villalba'), ('Paloma Margarita', 'Mereles Aranda'), ('Pam', 'Casale Telford'), ('Pam', 'Farmer'), ('Pam', 'Nelson'), ('Pam', 'Richmond'), ('Pam', 'Shriver'), ('Pam', 'Teeguarden'), ('Pam', 'Whytcross'), ('Pamela', 'Adom Mendez'), ('Pamela', 'Amon'), ('Pamela', 'Austin'), ('Pamela', 'Bailey'), ('Pamela', 'Baily'), ('Pamela', 'Boyanov'), ('Pamela', 'Brand'), ('Pamela', 'Buehler'), ('Pamela', 'Cohen'), ('Pamela', 'Duran Vinueza'), ('Pamela', 'Fernandez'), ('Pamela', 'Floro'), ('Pamela', 'Fogel'), ('Pamela', 'Gonzalez'), ('Pamela', 'Hernandez'), ('Pamela', 'Jung'), ('Pamela', 'Lopez Cervantes'), ('Pamela', 'Montez'), ('Pamela', 'Russo'), ('Pamela', 'Salas'), ('Pamela', 'Southcombe'), ('Pamela', 'Van Boekel'), ('Pamela', 'Wallenfels'), ('Pamela', 'Wu'), ('Pamela', 'Zingman'), ('Pancha', 'Aguilar Sepulveda Francisca Gisella'), ('Panna', 'Udvardy'), ('Panoria', 'Tsekoura'), ('Pao Hua', 'Huang'), ('Paola', 'Almeida'), ('Paola', 'Alvarado'), ('Paola', 'Arrangoiz'), ('Paola', 'Calderon'), ('Paola', 'Capella'), ('Paola', 'Cervantes'), ('Paola', 'Cespedes'), ('Paola', 'Cigui'), ('Paola', 'Cortez Vargas'), ('Paola', 'Cos'), ('Paola', 'De Cunto'), ('Paola', 'Doldan Gonzalez'), ('Paola', 'Dominguez'), ('Paola', 'Exposito Diaz Delgad'), ('Paola', 'Gamarra'), ('Paola', 'Gamboa'), ('Paola', 'Garrido Rodriguez'), ('Paola', 'Gonzales'), ('Paola', 'Guerrero'), ('Paola', 'Gullino'), ('Paola', 'Iovino'), ('Paola', 'Landin Lopez'), ('Paola', 'Martinez'), ('Paola', 'Orozco'), ('Paola', 'Palacios'), ('Paola', 'Palencia'), ('Paola', 'Ravano'), ('Paola', 'Sprovieri'), ('Paola', 'Stephen'), ('Paola', 'Suarez'), ('Paola', 'Tampieri'), ('Paola', 'Villalon'), ('Paola', 'Voli'), ('Paola Valentina', 'Quintana Rojas'), ('Pareen', 'Shivekar'), ('Parichart', 'Charoensukployphol'), ('Parija', 'Maloo'), ('Parminder', 'Kaur'), ('Parris', 'Todd'), ('Parul', 'Goswami'), ('Parvathy', 'Vijayan'), ('Parvin', 'Afshar'), ('Pascal', 'Engel'), ('Pascale', 'Bernateau'), ('Pascale', 'Bonneteau'), ('Pascale', 'Etchemendy'), ('Pascale', 'Leroy'), ('Pascale', 'Paradis Mangon'), ('Pascale', 'Schnitzer'), ('Pascale', 'Veraverbeke'), ('Pascale', 'Welter'), ('Pascalle', 'Druyts'), ('Pascalle', 'Thenoux Acuna'), ('Pasquale', 'Jansma'), ('Pat', 'Henderson'), ('Pat', 'Stewart'), ('Patamika', 'Phongsuramas'), ('Patcharin', 'Cheapchandej'), ('Patience', 'Onebamhoin'), ('Patience', 'Otali'), ('Patricia', 'Aburto'), ('Patricia', 'Ahern'), ('Patricia', 'Almudever Folch'), ('Patricia', 'Alonso'), ('Patricia', 'Alvarenga'), ('Patricia', 'Armet Sanpere'), ('Patricia', 'Avramescu'), ('Patricia', 'Aznar'), ('Patricia', 'Bianchi'), ('Patricia', 'Billing'), ('Patricia', 'Boentgen'), ('Patricia', 'Bostrom'), ('Patricia', 'Brailsford'), ('Patricia', 'Camina'), ('Patricia', 'Chang'), ('Patricia', 'Chirea'), ('Patricia', 'Cody'), ('Patricia', 'Coimbra'), ('Patricia', 'Coleman'), ('Patricia', 'Cortes'), ('Patricia', 'Cyranowski'), ('Patricia', 'Delicado Orihuela'), ('Patricia', 'Edwards'), ('Patricia', 'Eftenoiu'), ('Patricia', 'Fargas Osorio'), ('Patricia', 'Faulkner'), ('Patricia', 'Garcia'), ('Patricia', 'Gomez'), ('Patricia', 'Guerreiro'), ('Patricia', 'Haas'), ('Patricia', 'Hermeda'), ('Patricia', 'Holzman'), ('Patricia', 'Huelin Alvarez'), ('Patricia', 'Hy Boulais'), ('Patricia', 'King'), ('Patricia', 'Ku Flores'), ('Patricia', 'La Rovere'), ('Patricia', 'Lancranjan'), ('Patricia', 'Lopez Illan'), ('Patricia', 'Manzur'), ('Patricia', 'Marci'), ('Patricia', 'Martins'), ('Patricia', 'Mattes'), ('Patricia', 'Mayr Achleitner'), ('Patricia', 'Medrado'), ('Patricia', 'Miller'), ('Patricia', 'Miro'), ('Patricia', 'Miro Bussman'), ('Patricia', 'Mongauzi'), ('Patricia', 'Montano'), ('Patricia', 'Munoz Santana'), ('Patricia', 'Panta'), ('Patricia', 'Perez De Vinaspre'), ('Patricia', 'Quintana Cerezo'), ('Patricia', 'Quisoboni'), ('Patricia', 'Reese'), ('Patricia', 'Reyes'), ('Patricia', 'Ribeiro'), ('Patricia', 'Rime'), ('Patricia', 'Rivera'), ('Patricia', 'Rodriguez'), ('Patricia', 'Rogulski'), ('Patricia', 'Salles Rousseau Guedes'), ('Patricia', 'Sandagorda'), ('Patricia', 'Segala'), ('Patricia', 'Shoolman'), ('Patricia', 'Soesilo'), ('Patricia', 'Starzyk'), ('Patricia', 'Tarabini'), ('Patricia', 'Valadas'), ('Patricia', 'Valimaa'), ('Patricia', 'Van Worcum'), ('Patricia', 'Veresova'), ('Patricia', 'Vilas Ibanez'), ('Patricia', 'Vollmeier'), ('Patricia', 'Walkden'), ('Patricia', 'Wartusch'), ('Patricia', 'Zerdan'), ('Patricia', 'Zeriu'), ('Patricia', 'Zurita'), ('Patricia Maria', 'Tig'), ('Patrizia', 'Cacciaguerra'), ('Patrizia', 'Fusco'), ('Patrizia', 'Mirtillo'), ('Patrizia', 'Murgo'), ('Patrycja', 'Bandurowska'), ('Patrycja', 'Chackiewicz'), ('Patrycja', 'Gajdzik'), ('Patrycja', 'Komarska'), ('Patrycja', 'Polanska'), ('Patrycja', 'Sanduska'), ('Pattaraporn', 'Salirathavibhaga'), ('Patti', 'Hogan'), ('Patty', 'Fendick'), ('Patty', 'Murren'), ('Patty', 'Oreilly'), ('Patty', 'Schnyder'), ('Patty', 'Van Acker'), ('Paula', 'Alvarez'), ('Paula', 'Alvarez Pino'), ('Paula', 'Appezzato'), ('Paula', 'Arevalo'), ('Paula', 'Arias Manjon'), ('Paula', 'Astrini'), ('Paula', 'Badosa'), ('Paula', 'Baranano'), ('Paula', 'Boccia'), ('Paula', 'Cabezas'), ('Paula', 'Cantarutti'), ('Paula', 'Castro'), ('Paula', 'Comella Aguilo'), ('Paula', 'De Man'), ('Paula', 'Del Cueto Castillo'), ('Paula', 'Dinuta'), ('Paula', 'Espinoza Pena'), ('Paula', 'Feitosa'), ('Paula', 'Fondevila Castro'), ('Paula', 'Garcia'), ('Paula', 'Goetz'), ('Paula', 'Hermida Velo'), ('Paula', 'Hors Comadira'), ('Paula', 'Insaurralde'), ('Paula', 'Iturbide'), ('Paula', 'Iversen'), ('Paula', 'Jaime Agramon'), ('Paula', 'Joukanen'), ('Paula', 'Kania'), ('Paula', 'Lopez'), ('Paula', 'Marama'), ('Paula', 'Mocete Talamantes'), ('Paula', 'Montoya'), ('Paula', 'Oliveira'), ('Paula', 'Ormaechea'), ('Paula', 'Parentich'), ('Paula', 'Pastor Mir'), ('Paula', 'Racedo'), ('Paula', 'Rincon Otero'), ('Paula', 'Rives Palau'), ('Paula', 'Rodriguez'), ('Paula', 'Sanchez'), ('Paula', 'Smetak'), ('Paula', 'Smith'), ('Paula', 'Umana'), ('Paula', 'Veyhle'), ('Paula', 'Veza'), ('Paula', 'Wakefield'), ('Paula', 'Zabala'), ('Paula Alejandra', 'Saenz'), ('Paula Andrea', 'Coronado'), ('Paula Andrea', 'Perez Garcia'), ('Paula Andrea', 'Puentes Jimenez'), ('Paula Catalina', 'Robles Garcia'), ('Paula Cristina', 'Goncalves'), ('Paula Estefania', 'Diaz Cabrera'), ('Paula Natalia', 'Orlini Campos'), ('Paule Andree', 'Levasseur'), ('Paulette', 'Moreno'), ('Paulette', 'Roux'), ('Paulina', 'Bakaite'), ('Paulina', 'Bednarczyk'), ('Paulina', 'Bigos'), ('Paulina', 'Castillejos'), ('Paulina', 'Cota'), ('Paulina', 'Czarnik'), ('Paulina', 'Engback'), ('Paulina', 'Hinojosa'), ('Paulina', 'Janus'), ('Paulina', 'Jastrzebska'), ('Paulina', 'Jorquera'), ('Paulina', 'Lewandowska'), ('Paulina', 'Luquin'), ('Paulina', 'Mecho Hernandez'), ('Paulina', 'Mielewczyk'), ('Paulina', 'Milosavljevic'), ('Paulina', 'Ojeda'), ('Paulina', 'Peled'), ('Paulina', 'Petriskova'), ('Paulina', 'Pokorna'), ('Paulina', 'Rotaeche'), ('Paulina', 'Rustecka'), ('Paulina', 'Schippers'), ('Paulina', 'Sepulveda'), ('Paulina', 'Slitrova'), ('Paulina', 'Vargas'), ('Paulina', 'Velarde Magana'), ('Paulina', 'Wulcan'), ('Paulina', 'Zuniga'), ('Paulina Ailin', 'Sainz'), ('Paulina Ela', 'Mihokova'), ('Paulina Javiera', 'Obreque'), ('Pauline', 'Addie'), ('Pauline', 'Bisset'), ('Pauline', 'Bourdet Fontaine'), ('Pauline', 'Chan'), ('Pauline', 'Clavel'), ('Pauline', 'Courcoux'), ('Pauline', 'Demel'), ('Pauline', 'Descat'), ('Pauline', 'Dore'), ('Pauline', 'Elliott'), ('Pauline', 'Lollia'), ('Pauline', 'Paire'), ('Pauline', 'Parmentier'), ('Pauline', 'Payet'), ('Pauline', 'Ribot'), ('Pauline', 'Roberts'), ('Pauline', 'Rodriguez'), ('Pauline', 'Trinchant'), ('Pauline', 'Van Herck'), ('Pauline', 'Wong'), ('Pauline', 'Wuarin'), ('Pavia', 'Schnattingerova'), ('Pavla', 'Smidova'), ('Pavlina', 'Akritas'), ('Pavlina', 'Bartunkova'), ('Pavlina', 'Glosova'), ('Pavlina', 'Nola'), ('Pavlina', 'Rajzlova'), ('Pavlina', 'Smatova'), ('Pavlina', 'Ticha'), ('Peaches', 'Bartkowicz'), ('Peangtarn', 'Plipuech'), ('Peeraya', 'Charoensirisutthikul'), ('Peggy', 'Brixhe'), ('Peggy', 'Michel'), ('Peggy', 'Moore'), ('Peggy', 'Porter'), ('Peggy', 'Rouquier'), ('Pei', 'Peng'), ('Pei Chi', 'Lee'), ('Pei Chuan', 'Kao'), ('Pei Hsuan', 'Chen'), ('Pei Hsuan', 'Kuo'), ('Pei Ju', 'Chien'), ('Pei Jung', 'Wu'), ('Pei Jyue', 'Lo'), ('Pei Ling', 'Tong'), ('Pei Wen', 'Kao'), ('Pei Yu', 'Sieh'), ('Pei Yuin', 'Keng'), ('Pemra', 'Ozgen'), ('Penelope', 'Abreu'), ('Penelope', 'Hardgrave'), ('Penka', 'Fileva'), ('Penny', 'Barg Mager'), ('Penny', 'Johnson'), ('Penny', 'Moor'), ('Penporn', 'Chantawannop'), ('Peppi', 'Ramstedt'), ('Perla', 'Nieuwboer'), ('Pernilla', 'Mendesova'), ('Pernilla', 'Sorensen'), ('Pernille', 'Orloff Sattari'), ('Perrine', 'Boisset'), ('Perrine', 'Du Puy'), ('Perrine', 'Fouche'), ('Perrine', 'Gauthier'), ('Perrine', 'Pernin'), ('Petia', 'Arshinkova'), ('Petia', 'Marinova'), ('Petia', 'Voucheva'), ('Petia', 'Vousheva'), ('Petra', 'Babakova'), ('Petra', 'Bajerovska'), ('Petra', 'Baksa'), ('Petra', 'Begerow'), ('Petra', 'Bercik'), ('Petra', 'Capin'), ('Petra', 'Cetkovska'), ('Petra', 'Crimmel'), ('Petra', 'Delhees Jauch'), ('Petra', 'Dizdar'), ('Petra', 'Douderova'), ('Petra', 'Gaspar'), ('Petra', 'Granic'), ('Petra', 'Halastova'), ('Petra', 'Holubova'), ('Petra', 'Hradecka'), ('Petra', 'Huber'), ('Petra', 'Hule'), ('Petra', 'Ivankovic'), ('Petra', 'Januskova'), ('Petra', 'Jaskova'), ('Petra', 'Johansson'), ('Petra', 'Jurova'), ('Petra', 'Kamstra'), ('Petra', 'Keppeler'), ('Petra', 'Kopic'), ('Petra', 'Kostelnikova'), ('Petra', 'Krejsova'), ('Petra', 'Kubinova'), ('Petra', 'Kucerova'), ('Petra', 'Kvitova'), ('Petra', 'Mandula'), ('Petra', 'Martic'), ('Petra', 'Melounova'), ('Petra', 'Mokra'), ('Petra', 'Navratilova'), ('Petra', 'Niedermayerova'), ('Petra', 'Novotnikova'), ('Petra', 'Padalikova'), ('Petra', 'Pajalic'), ('Petra', 'Pichalova Langrova'), ('Petra', 'Piirtola'), ('Petra', 'Plackova'), ('Petra', 'Pokorna'), ('Petra', 'Puheloinen'), ('Petra', 'Putnik'), ('Petra', 'Raclavska'), ('Petra', 'Rampre'), ('Petra', 'Remedio'), ('Petra', 'Rohanova'), ('Petra', 'Russegger'), ('Petra', 'Schmitt'), ('Petra', 'Schwarz'), ('Petra', 'Sedlmajerova'), ('Petra', 'Spaar'), ('Petra', 'Studnicka'), ('Petra', 'Sunic'), ('Petra', 'Teller'), ('Petra', 'Tesarova'), ('Petra', 'Thoren'), ('Petra', 'Uberalova'), ('Petra', 'Van Oyen'), ('Petra', 'Viskovic'), ('Petra', 'Vogel'), ('Petra', 'Vojtaskova'), ('Petra', 'Winzenholler'), ('Petra Maria', 'Kerdikova'), ('Petra Maria', 'Kulhova'), ('Petroena', 'Fong'), ('Petrona', 'Bantay'), ('Peyton', 'Pesavento'), ('Peyton', 'Stearns'), ('Phemelo', 'Mogapi'), ('Phenomena', 'Radovcic'), ('Philippa', 'Palmer'), ('Philippa', 'Taul'), ('Philippa', 'Tepper'), ('Philippine', 'Gauduffe'), ('Philippine', 'Picard'), ('Phillipa', 'Reakes'), ('Phillis', 'Vanenburg'), ('Phoebe', 'Di Leo'), ('Phonexay', 'Chitdara'), ('Phorhathai', 'Suksamran'), ('Phornsarin', 'Tovisitchai'), ('Phyllis', 'Blackwell'), ('Phyllis', 'Wilunda'), ('Pia', 'Balling'), ('Pia', 'Brglez'), ('Pia', 'Cuk'), ('Pia', 'De Robertis'), ('Pia', 'Ender'), ('Pia', 'Konig'), ('Pia', 'Rygh'), ('Pia', 'Tamayo'), ('Pia Lena', 'Ander'), ('Pichaya', 'Laosirichon'), ('Pichittra', 'Thongdach'), ('Pichnita', 'Songsanu'), ('Piia', 'Suomalainen'), ('Pilar', 'Andres'), ('Pilar', 'Astigarraga Harper'), ('Pilar', 'Dominguez Lopez'), ('Pilar', 'Escandell Planells'), ('Pilar', 'Perez'), ('Pilar', 'Piana'), ('Pilar', 'Quintana'), ('Pilar', 'Santibanez Gomez Ull'), ('Pilar', 'Vasquez'), ('Pimpisamai', 'Kansuthi'), ('Pimpitcha', 'Jattavapornvanit'), ('Ping', 'Jia'), ('Ping Sr', 'Wang'), ('Pingkan', 'Lumenta'), ('Pippa', 'Carr'), ('Pippa', 'Horn'), ('Pirada', 'Witoonpanich'), ('Piret', 'Ilves'), ('Pirjo', 'Ojala'), ('Pixie', 'Lamm'), ('Plamena', 'Gogovska'), ('Plamena', 'Kurteva'), ('Pleun', 'Burgmans'), ('Plobrung', 'Plipuech'), ('Po Kuen', 'Lam'), ('Pola', 'Olczak'), ('Polina', 'Altukhova'), ('Polina', 'Avdzhiyan'), ('Polina', 'Bakhmutkina'), ('Polina', 'Bezsmertnaya'), ('Polina', 'Chala'), ('Polina', 'Dzyuba'), ('Polina', 'Galanina'), ('Polina', 'Goloputova'), ('Polina', 'Golubovskaya'), ('Polina', 'Ivanova'), ('Polina', 'Konop'), ('Polina', 'Leykina'), ('Polina', 'Lushnikova'), ('Polina', 'Lyuksheva'), ('Polina', 'Malykh'), ('Polina', 'Merenkova'), ('Polina', 'Miroshnichenko'), ('Polina', 'Monova'), ('Polina', 'Movchan'), ('Polina', 'Nazarchuk'), ('Polina', 'Novikova'), ('Polina', 'Novoselova'), ('Polina', 'Ordanskaya'), ('Polina', 'Pekhova'), ('Polina', 'Radeva'), ('Polina', 'Rodionova'), ('Polina', 'Smolskaya'), ('Polina', 'Vinogradova'), ('Polina', 'Yuzefovich'), ('Polina', 'Zaretser'), ('Polona', 'Hercog'), ('Polona', 'Rebersak'), ('Ponamporn', 'Samawanthana'), ('Pooja', 'Kommireddi'), ('Poojashree', 'Venkatesha'), ('Pornpawee', 'Premthong'), ('Pornrampha', 'Pramualsuk'), ('Porntip', 'Mulsap'), ('Poschanun', 'Warakulnukroh'), ('Prachi', 'Nadkarni'), ('Prachi', 'Sinha'), ('Pragati', 'Natraj'), ('Pragati', 'Solankar'), ('Pragya', 'Sinha'), ('Pragya', 'Yadav'), ('Prakriti', 'Banwani'), ('Prang', 'Pantusart'), ('Pranjala', 'Yadlapalli'), ('Prapaiphan', 'Kansuthi'), ('Prarisa', 'Rachdanone'), ('Prariyawan', 'Ratanakrong'), ('Prarthana G', 'Thombare'), ('Prathana', 'Prathap'), ('Praveeni', 'Srinivasan'), ('Preethi', 'Mukundan'), ('Preethi', 'Shravan'), ('Preethi', 'Srinivasan'), ('Preethi', 'Subramaniam'), ('Preethi', 'Ujjini'), ('Preeti', 'Gokhale'), ('Preeti', 'Rao'), ('Prerana', 'Prathap'), ('Prerana Mythri', 'Appineni'), ('Prerna', 'Bhambri'), ('Pretty', 'Marot'), ('Prim', 'Buaklee'), ('Prim', 'Siripipat'), ('Priscila', 'Baptista'), ('Priscila', 'Garcia'), ('Priscila', 'Martinez'), ('Priscila', 'Nunez'), ('Priscila', 'Ortega'), ('Priscilla', 'Baron Zichar'), ('Priscilla', 'Heise'), ('Priscilla', 'Hon'), ('Priscilla', 'Medlich Leal'), ('Prissy', 'Annoual'), ('Priyachanok', 'Sukkanha'), ('Priyanka', 'Contractor'), ('Priyanka', 'Mehta'), ('Priyanka', 'Parekh'), ('Priyanka', 'Tohan'), ('Protiksha', 'Sharma'), ('Prudence', 'Teitzel'), ('Pui Wing', 'Sher'), ('Puja', 'Deshmukh'), ('Puja', 'Patel'), ('Puleng', 'Tlhophane'), ('Punam', 'Reddy'), ('Punchanok', 'Khunpitak'), ('Punnin', 'Kovapitukted'), ('Puntila', 'Namwong'), ('Purnima', 'Shakaalya'), ('Puspa Ratih', 'Tri Oktavira'), ('Putri Sanjungan', 'Insani'), ('Pynar', 'Nergiz'), ('Qi', 'Tuo'), ('Qi Li', 'Ma'), ('Qian', 'Wang'), ('Qian Nan', 'Feng'), ('Qiang', 'Wang'), ('Qianhui', 'Tang'), ('Qianqian', 'Zhao'), ('Qianting', 'Yan'), ('Qianxin', 'Kong'), ('Qin', 'Yang'), ('Qin Di', 'Weng'), ('Qing', 'Yue'), ('Qing Qing', 'Gong'), ('Qiu Yu', 'Ye'), ('Quan', 'Gao'), ('Quinn', 'Gleason'), ('Quirine', 'Lemoine'), ('Quynh', 'Le'), ('R', 'Witeker'), ('Raadhae', 'Svarupa'), ('Rachael', 'Dillon'), ('Rachael', 'Hall'), ('Rachael', 'Irelewuyi'), ('Rachael', 'Mcardle'), ('Rachael', 'Porsz'), ('Rachael', 'Reed'), ('Rachael', 'Tredoux'), ('Rachael', 'White'), ('Rachel', 'Chong'), ('Rachel', 'Clark'), ('Rachel', 'Crismond'), ('Rachel', 'Cruickshank'), ('Rachel', 'Dean'), ('Rachel', 'Dive'), ('Rachel', 'Gale'), ('Rachel', 'Girard'), ('Rachel', 'Halligan'), ('Rachel', 'Houpapa'), ('Rachel', 'Janssen'), ('Rachel', 'Kahan'), ('Rachel', 'King'), ('Rachel', 'Magory'), ('Rachel', 'Manasse'), ('Rachel', 'Mcquillan'), ('Rachel', 'Michell'), ('Rachel', 'Porter'), ('Rachel', 'Shweky'), ('Rachel', 'Viollet'), ('Rachel', 'Wilhelm'), ('Rachel', 'Zipfel'), ('Rachel Ann', 'Jensen'), ('Rachel May', 'Pierson'), ('Rachida', 'Berjane'), ('Rachmawati', 'Siregar'), ('Rada', 'Manataweewat'), ('Radana', 'Holusova'), ('Radha', 'Devendrappa'), ('Radhika', 'Jadhav'), ('Radhika', 'Mandke'), ('Radhika', 'Ravji'), ('Radhika', 'Tulpule'), ('Radhika', 'Yadav'), ('Radia', 'Lalami'), ('Radina', 'Dimitrova'), ('Radina', 'Rakic'), ('Radka', 'Bobkova'), ('Radka', 'Buzkova'), ('Radka', 'Hovorkova'), ('Radka', 'Jarosova'), ('Radka', 'Pelikanova'), ('Radka', 'Sottova'), ('Radka', 'Surova'), ('Radmila', 'Djordjevic'), ('Radomira', 'Zrubakova'), ('Radoslava', 'Serakova'), ('Radoslava', 'Topalova'), ('Rafaela', 'Boero'), ('Rafaela', 'Efstathiou'), ('Rafaela', 'Francisquiny'), ('Rafaela', 'Gomez'), ('Rafaela', 'Orenga Panizza'), ('Rafaela', 'Rodrigues Dos Santos'), ('Rafaela Arsenia', 'Alipranti'), ('Rafaella', 'Baquerizo'), ('Rafaella', 'Sampaio'), ('Rafeket', 'Binyamini'), ('Raffaela', 'Alhach'), ('Raffaella', 'Bindi'), ('Raffaella', 'Coffa'), ('Raffaella', 'Gambadoro'), ('Raffaella', 'Reggi Concato'), ('Raffaella', 'Valentino'), ('Ragini', 'Vimal'), ('Raissa', 'Gourevitch'), ('Raiza', 'Verdecia'), ('Raja Rajeshwari', 'Pamidimukkala Venkata'), ('Rajna', 'Jankovic'), ('Rakel', 'Petursdottir'), ('Rakha', 'Mohan'), ('Ralene', 'Fourie'), ('Ralina', 'Kalimullina'), ('Ralitza', 'Doneva'), ('Ralitza', 'Milorieva'), ('Raluca', 'Ciochina'), ('Raluca', 'Ciufrila'), ('Raluca', 'Ciulei'), ('Raluca', 'Gheorghe'), ('Raluca', 'Mita'), ('Raluca', 'Moldovan'), ('Raluca', 'Nedelea'), ('Raluca', 'Olaru'), ('Raluca', 'Sandu'), ('Raluca Adriana', 'Belehuz'), ('Raluca Daniela', 'Gheorghe'), ('Raluca Elena', 'Platon'), ('Raluca Georgiana', 'Serban'), ('Raminta', 'Mackeviciute'), ('Ramona', 'But'), ('Ramona', 'Czakon'), ('Ramona', 'Erb'), ('Ramona', 'Ghermani'), ('Ramona', 'Sarba'), ('Ramona Eva', 'Chivu'), ('Ramu', 'Ueda'), ('Ramya', 'Natarajan'), ('Ran', 'Meng'), ('Ran', 'Miyachi'), ('Ran', 'Tian'), ('Rana', 'El Derwy'), ('Rana', 'Essam'), ('Rana', 'Ramez'), ('Rana', 'Sabry'), ('Rana', 'Sherif Ahmed'), ('Rana', 'Tharwat Hafez'), ('Rana', 'Zafer'), ('Randi', 'Schuler'), ('Rani', 'Cestari Setia'), ('Rani Fitriya', 'Wardhani'), ('Rani Smita', 'Jain'), ('Ranim', 'Mkahal'), ('Rankin', 'Williams'), ('Rano', 'Nizamova'), ('Raphaela', 'Chaves Borges'), ('Raphaela', 'Cordeiro'), ('Raphaela', 'Zotter'), ('Raphaella', 'Liziero'), ('Raquel', 'Barcala Lopez'), ('Raquel', 'Castro'), ('Raquel', 'Contreras'), ('Raquel', 'Diaz'), ('Raquel', 'Fernandes'), ('Raquel', 'Giscafre'), ('Raquel', 'Guede Estevez'), ('Raquel', 'Kops Jones'), ('Raquel', 'Madrigal Rodriguez'), ('Raquel', 'Martini'), ('Raquel', 'Martins'), ('Raquel', 'Mateus'), ('Raquel', 'Montalvo'), ('Raquel', 'Ortega Herran'), ('Raquel', 'Pedraza'), ('Raquel', 'Perez Ruescas'), ('Raquel', 'Piltcher'), ('Raquel', 'Pina'), ('Raquel', 'Rodrigues'), ('Raquel', 'Seijo Rodriguez'), ('Rasheeda', 'Mcadoo'), ('Rashmi', 'Teltumbde'), ('Rasika', 'Sankpal'), ('Ratchaya', 'Chaichanachaicharn'), ('Rati', 'Kumar'), ('Ratih', 'Zanida'), ('Ratnika', 'Batra'), ('Ratricia', 'Diaz'), ('Rattiya', 'Hiranrat'), ('Raveena', 'Kingsley'), ('Ravnoor', 'Kaur'), ('Rawya', 'Seif'), ('Raye Ann', 'Sandy'), ('Rayen', 'Turki'), ('Rayene Nour', 'Brahimi'), ('Rayleen', 'Henningson'), ('Raymonde', 'Jones'), ('Rayni', 'Fox'), ('Rayssa', 'Haddad'), ('Razalia', 'Phethu'), ('Razilya', 'Galayamova'), ('Razina', 'Shaibu'), ('Reagan', 'Collins'), ('Rebeca', 'Aguilar Dominguez'), ('Rebeca', 'Bou Nogueiro'), ('Rebeca', 'C Silva'), ('Rebeca', 'Delgado Gerardo'), ('Rebeca', 'Estupina Ibanez'), ('Rebeca', 'Llorente'), ('Rebeca', 'Mitrea'), ('Rebeca', 'Molina'), ('Rebeca', 'Neves'), ('Rebeca', 'Pereira'), ('Rebeca', 'Reyes'), ('Rebeca Ruth', 'Scurt'), ('Rebecca', 'Alessi'), ('Rebecca', 'Andrade'), ('Rebecca', 'Bran'), ('Rebecca', 'Bryant'), ('Rebecca', 'Cook'), ('Rebecca', 'Cooper'), ('Rebecca', 'Dandeniya'), ('Rebecca', 'Dare Mccann'), ('Rebecca', 'Edwards'), ('Rebecca', 'Ehn'), ('Rebecca', 'Fong'), ('Rebecca', 'Gustafson'), ('Rebecca', 'Hawkins'), ('Rebecca', 'Horompoliova'), ('Rebecca', 'Jensen'), ('Rebecca', 'Kaineder'), ('Rebecca', 'Leahy'), ('Rebecca', 'Leftherioti'), ('Rebecca', 'Llewellyn'), ('Rebecca', 'Marino'), ('Rebecca', 'Parks'), ('Rebecca', 'Pedrazzi'), ('Rebecca', 'Peterson'), ('Rebecca', 'Pike'), ('Rebecca', 'Poikajarvi'), ('Rebecca', 'Rankin'), ('Rebecca', 'Siegler'), ('Rebecca', 'Smaller'), ('Rebecca', 'Spinello'), ('Rebecca', 'Spurr'), ('Rebecca', 'Sramkova'), ('Rebecca', 'Turner'), ('Rebecca', 'Van Orshaegen'), ('Rebecca', 'Weissmann'), ('Rebeccah', 'Rosenfield'), ('Rebecka', 'Persson'), ('Rebecka', 'Tarnstrom'), ('Rebeka', 'Kern'), ('Rebeka', 'Masarova'), ('Rebeka', 'Stolmar'), ('Rebeka Margareta', 'Mertena'), ('Rebekah', 'Rhodes'), ('Rebekka', 'Haenle'), ('Rebekka', 'Petursdottir'), ('Rediet', 'Kefyalew'), ('Reeka', 'Szikszay'), ('Reem', 'Fayed'), ('Reem', 'Raouf'), ('Reetu', 'Sethi'), ('Regina', 'Chladkova'), ('Regina', 'Clark'), ('Regina', 'Husak'), ('Regina', 'Kulikova'), ('Regina', 'Lopez Ley'), ('Regina', 'Marsikova'), ('Regina', 'Rajchrtova'), ('Regina', 'Shtyagina'), ('Regina', 'Temez'), ('Regina', 'Wieser'), ('Regina Marica', 'Matyak'), ('Rehmat', 'Johal'), ('Rei', 'Ikeda'), ('Reika', 'Agata'), ('Reiko', 'Ino'), ('Reiko', 'Miyagi'), ('Reiko', 'Noguchi'), ('Reina', 'Alexander'), ('Reina', 'Ishihara'), ('Reina', 'Oda'), ('Reina', 'Takahashi'), ('Rejhana', 'Mekic'), ('Reka', 'Farbas'), ('Reka', 'Monoki'), ('Reka', 'Muller'), ('Reka', 'Rohonyi'), ('Reka', 'Szalai'), ('Reka', 'Vidats'), ('Reka', 'Zadori'), ('Reka', 'Zsilinszka'), ('Reka Luca', 'Jani'), ('Rekha', 'Natrajan'), ('Remeice', 'Ellis'), ('Remi', 'Tezuka'), ('Remi', 'Uda'), ('Renata', 'Arshavskaya'), ('Renata', 'Bakieva'), ('Renata', 'Baranski'), ('Renata', 'Brito'), ('Renata', 'Caceres'), ('Renata', 'Campagnolo'), ('Renata', 'De Sanctis'), ('Renata', 'Del Barco Matto'), ('Renata', 'Della'), ('Renata', 'Dias'), ('Renata', 'Diez'), ('Renata', 'Hlavova'), ('Renata', 'Ivandic'), ('Renata', 'Kochta'), ('Renata', 'Kolbovic'), ('Renata', 'Kucerkova'), ('Renata', 'Kucerova'), ('Renata', 'Kuricova'), ('Renata', 'Ljukovcan'), ('Renata', 'Lombera'), ('Renata', 'Marcinkowska'), ('Renata', 'Martins'), ('Renata', 'Ostermann'), ('Renata', 'Sasak'), ('Renata', 'Skrzypczynska'), ('Renata', 'Smekalova'), ('Renata', 'Suarez'), ('Renata', 'Tomanova'), ('Renata', 'Veiga'), ('Renata', 'Voracova'), ('Renata', 'Zarazua'), ('Renate', 'Stoop'), ('Renate', 'Wachtler'), ('Rene', 'Blount'), ('Rene', 'Collins'), ('Rene', 'Mentz'), ('Rene', 'Uys'), ('Renee', 'Binnie'), ('Renee', 'Lampret'), ('Renee', 'McBryde'), ('Renee', 'Mullinger'), ('Renee', 'Reid'), ('Renee', 'Reinhard'), ('Renee', 'Ren'), ('Renee', 'Richards'), ('Renee', 'Schuurman'), ('Rennae', 'Stubbs'), ('Renon', 'Mano'), ('Renska', 'Hiemstra'), ('Renuka', 'Keswani'), ('Resha', 'Chandak'), ('Reshma', 'Ganapathy'), ('Revonne', 'Du Toit'), ('Rewa', 'Harriman'), ('Reykan', 'Woro'), ('Reyna', 'Alvarado'), ('Rheeya', 'Doshi'), ('Rhiann', 'Newborn'), ('Rhona', 'Howett'), ('Ria', 'Sabay'), ('Ria', 'Vaidya'), ('Rianna', 'Valdes'), ('Ribana', 'Roth'), ('Richel', 'Hogenkamp'), ('Richele', 'Le Saldo'), ('Rida', 'Khalid'), ('Riddhi', 'Ramesh Sharma'), ('Ridhina', 'Parekh'), ('Rie', 'Imai'), ('Rie', 'Koganei'), ('Rie', 'Nakazaka'), ('Rie', 'Saiki'), ('Riei', 'Kawamata'), ('Rieka', 'Ito'), ('Rieke', 'Honiball'), ('Rieko', 'Noda'), ('Rieneke', 'Kusters'), ('Rifanty', 'Kahfiani'), ('Riina', 'Veiram'), ('Rijana', 'Puljic'), ('Rika', 'Fujiwara'), ('Rika', 'Hiraki'), ('Rika', 'Tatsuno'), ('Rika', 'Yamamoto'), ('Rikako', 'Suga'), ('Rikeetha', 'Pereira'), ('Rikke', 'Faurfelt'), ('Rikki', 'Gaddie'), ('Riko', 'Fujioka'), ('Riko', 'Sawayanagi'), ('Riko', 'Tachibana'), ('Riley', 'Blanks'), ('Riley', 'Mcquaid'), ('Rima', 'Asatrian'), ('Rima', 'Taki'), ('Rimi', 'So'), ('Rina', 'Caniza'), ('Rina', 'Einy'), ('Rina', 'Fujiwara'), ('Rina', 'Tateyama'), ('Rininta', 'Hidayat'), ('Rio', 'Kitagawa'), ('Rio', 'Suzuki'), ('Risa', 'Fukushige'), ('Risa', 'Hasegawa'), ('Risa', 'Nakahara'), ('Risa', 'Ozaki'), ('Risa', 'Shimizu'), ('Risa', 'Ushijima'), ('Risako', 'Sugihara'), ('Rishika', 'Ravindran'), ('Rishika', 'Sunkara'), ('Ristine', 'Olson'), ('Rita', 'Agassi'), ('Rita', 'Atik'), ('Rita', 'Bengelloun Touimy'), ('Rita', 'Cruz Lima'), ('Rita', 'Degli Esposti'), ('Rita', 'Degliesposti'), ('Rita', 'Esteves De Freitas'), ('Rita', 'Felix'), ('Rita', 'Gerecz'), ('Rita', 'Gouveia'), ('Rita', 'Grande'), ('Rita', 'Horvath'), ('Rita', 'Kowacsics'), ('Rita', 'Krombach'), ('Rita', 'Kuti Kis'), ('Rita', 'Lauder'), ('Rita', 'Obasigie'), ('Rita', 'Oliveira'), ('Rita', 'Pedroso'), ('Rita', 'Pichardo'), ('Rita', 'Tarjan'), ('Rita', 'Vilaca'), ('Rita', 'Vukov'), ('Rita', 'Winebarger'), ('Rita Maria', 'Bentes De Oliveira Pinto'), ('Ritwika', 'Sen'), ('Riva', 'Hondiashvili'), ('River', 'Hart'), ('Riya', 'Bhatia'), ('Riza', 'Zalameda'), ('Roana', 'Schiopu'), ('Roberta', 'Beltrame'), ('Roberta', 'Borrelli'), ('Roberta', 'Burzagli'), ('Roberta', 'Caldas'), ('Roberta', 'Di Rosa'), ('Roberta', 'Frizzo'), ('Roberta', 'Gerovac'), ('Roberta', 'Greco'), ('Roberta', 'Lamagni'), ('Roberta', 'Martellini'), ('Roberta', 'Mccallum'), ('Roberta', 'Radin'), ('Roberta', 'Stark'), ('Roberta', 'Vinci'), ('Roberta', 'Zandarin'), ('Roberta Maria', 'Naicu'), ('Robertina', 'Marcu'), ('Robin', 'Anderson'), ('Robin', 'Boss'), ('Robin', 'Harris'), ('Robin', 'Khan'), ('Robin', 'Lesh'), ('Robin', 'Lloyd'), ('Robin', 'Stephenson'), ('Robin', 'Tenney'), ('Robin', 'White'), ('Robu', 'Kajitani'), ('Robyn', 'Baker'), ('Robyn', 'Beddow'), ('Robyn', 'Davis'), ('Robyn', 'Ebbern'), ('Robyn', 'Farrington'), ('Robyn', 'Field'), ('Robyn', 'Hunt'), ('Robyn', 'Knobel'), ('Robyn', 'Lamb'), ('Robyn', 'Mawdsley'), ('Rochelle', 'Goldthreate'), ('Rochelle', 'Raiss'), ('Rochelle', 'Rosenfield'), ('Rocio', 'Amadio'), ('Rocio', 'Benavent Rojas'), ('Rocio', 'Cupeiro'), ('Rocio', 'De La Torre Sanchez'), ('Rocio', 'Fantilli'), ('Rocio', 'Frausto'), ('Rocio', 'Galan'), ('Rocio', 'Galarza'), ('Rocio', 'Gonzalez'), ('Rocio', 'Govantes'), ('Rocio', 'Juarez'), ('Rocio', 'Lopez Alberca'), ('Rocio', 'Lopez Pimentel'), ('Rocio', 'Macri'), ('Rocio', 'Martin Fernandez'), ('Rocio', 'Mora'), ('Rocio', 'Portela'), ('Rocio', 'Safont Branchadell'), ('Rocio', 'Sanchez Palacio'), ('Rocio', 'Villar Gonzalez'), ('Rocio Daniela', 'Merlo'), ('Rocio Macarena', 'Parodi'), ('Rocio Maria', 'Diaz'), ('Rohini', 'Das'), ('Roisin', 'Mullins'), ('Roksana', 'Lukasiak'), ('Romaine', 'Zenhausern'), ('Romana', 'Cernoskova'), ('Romana', 'Cisovska'), ('Romana', 'Janshen'), ('Romana', 'Tarajova'), ('Romana', 'Tedjakusuma'), ('Romana', 'Valenta'), ('Romana Caroline', 'Tabak'), ('Romilda', 'Zitarosa'), ('Romina', 'Aufieri'), ('Romina', 'Brante'), ('Romina', 'Fonda'), ('Romina', 'Gualtieri'), ('Romina', 'Labrador'), ('Romina', 'Manas Rodriguez'), ('Romina', 'Mrochen'), ('Romina', 'Oprandi'), ('Romina', 'Ottoboni'), ('Romina', 'Palmisano'), ('Romina', 'Puglia'), ('Romina', 'Raonic'), ('Romina', 'Sceats'), ('Romina Soledad', 'Sanio Juarez'), ('Romy', 'Farah'), ('Romy', 'Hutchins'), ('Romy', 'Koelzer'), ('Romy', 'Lion'), ('Rona', 'Berisha'), ('Rona', 'Daniels'), ('Rona', 'Lavian'), ('Rona', 'Mayer'), ('Ronak', 'Shah'), ('Rongrong', 'Leenabanchong'), ('Roni', 'Gilboa'), ('Ronit', 'Yurovsky'), ('Ronke', 'Akingbade'), ('Ronni', 'Reis'), ('Roongnapha', 'Surachet'), ('Roos', 'Nederstigt'), ('Roos', 'Van Der Zwaan'), ('Roosa', 'Timonen'), ('Roosh', 'Wijesundera'), ('Ros', 'Lewis'), ('Ros Polly', 'Nguyen'), ('Rosa', 'Bielsa Hierro'), ('Rosa', 'Gajic'), ('Rosa', 'Vicens Mas'), ('Rosa Maria', 'Andres Rodriguez'), ('Rosa Maria', 'Llaneras'), ('Rosa Maria', 'Mendoza'), ('Rosa Maria', 'Morazan'), ('Rosa Maria', 'Perez'), ('Rosa Maria', 'Peso Aldaz'), ('Rosa Maria', 'Togores Colom'), ('Rosabel', 'Moyen'), ('Rosabianca', 'Satta'), ('Rosalba', 'Caporuscio'), ('Rosalba', 'Vido'), ('Rosalia', 'Alda'), ('Rosalie', 'Tranchot'), ('Rosalie', 'Van Der Hoek'), ('Rosalie', 'Willig'), ('Rosaline Zafir', 'Chavez Tello'), ('Rosalyn', 'Mccann'), ('Rosalyn', 'Nideffer'), ('Rosalyn', 'Small'), ('Rosana', 'De Los Rios'), ('Rosangela', 'Martinez'), ('Rosanna', 'Hatch'), ('Rosanna', 'Maffei'), ('Rosanna', 'Valerio'), ('Rosanne', 'Dimech'), ('Rosario', 'Barea De Lara'), ('Rosario', 'Briones'), ('Rosario', 'Gracia Abad'), ('Rosario', 'Perez Salinas'), ('Rosaura', 'Ramirez Vega'), ('Rose', 'Ojonimi'), ('Rose', 'Onoja'), ('Roseann', 'Alva'), ('Rosellina', 'Masala'), ('Rosemary', 'Eden'), ('Roseta', 'Navarro Pons'), ('Roshenka', 'Fernando'), ('Rosidah', 'Kusuma Dewi'), ('Rosie', 'Bird'), ('Rosie', 'Casals'), ('Rosie', 'Cheng'), ('Rosie', 'Johanson'), ('Rossana', 'Hidalgo'), ('Rossella', 'Sartore'), ('Rossi', 'Thomas'), ('Rosy', 'Darmon'), ('Rotem', 'Goldstein'), ('Rotem', 'Magnagni'), ('Rotem', 'Shveber'), ('Rotem', 'Tepperberg'), ('Roumeila', 'Zhir'), ('Rouxanne', 'Janse Van Rensburg'), ('Rowan', 'Arafat'), ('Rowena', 'Baierl'), ('Rowena', 'Sanders'), ('Rowie', 'Kouw'), ('Roxana', 'Abdurakhmonova'), ('Roxana', 'Alexandru'), ('Roxana', 'Dragan'), ('Roxana', 'Martinez'), ('Roxana', 'Rabago'), ('Roxana Ianula', 'Dragan'), ('Roxane', 'Vaisemberg'), ('Roxanne', 'Ellison'), ('Roxanne', 'Sammel'), ('Roylee', 'Bailey'), ('Rozalina', 'Youseva'), ('Rozel Asuncion', 'Hernandez'), ('Rozike', 'Janzen Van Rensburg'), ('Rubi', 'Morales'), ('Ruchita', 'Shetty'), ('Rui', 'Bao'), ('Rui', 'Du'), ('Rui Jie', 'Jiang'), ('Rui Jing', 'Wong'), ('Ruia', 'Morrison Davy'), ('Ruken Dilara', 'Kizilay'), ('Rukshika', 'Wijesooriya'), ('Rumi', 'Abe'), ('Ruo Nan', 'Zhang'), ('Ruoyu', 'Chen'), ('Rurika', 'Maruse'), ('Rushmi', 'Chakravarthi'), ('Rut', 'Galindo'), ('Rut Ester', 'Prudencio Csapek'), ('Ruta', 'Deduraite'), ('Ruta', 'Gerulaitis'), ('Rute', 'Almeida'), ('Ruth', 'Artaza Martin'), ('Ruth', 'Copas'), ('Ruth', 'Diaz'), ('Ruth', 'Hauknes'), ('Ruth', 'Markov'), ('Ruth', 'Sabbe'), ('Ruth', 'Seaborne'), ('Ruth', 'Seeman'), ('Ruth', 'Sverdloff'), ('Ruth Ann', 'Escobedo'), ('Ruth Tekle', 'Andemariam'), ('Rutuja', 'Bhosale'), ('Ruxandra', 'Ababii'), ('Ruxandra', 'Dragomir Ilie'), ('Ruxandra', 'Marin'), ('Ruxandra', 'Schech'), ('Ruxandra Floriana', 'Tudosoiu'), ('Ruxandra Gabriela', 'Costov'), ('Ruya', 'Inalpulat'), ('Ryan', 'Peus'), ('Ryann', 'Foster'), ('Ryeong Gyeong', 'Park'), ('Rym', 'Cherni'), ('Ryo', 'Takahashi'), ('Ryoko', 'Fuda'), ('Ryoko', 'Ikeda'), ('Ryoko', 'Takemura'), ('Ryoko', 'Watanabe'), ('Ryoko', 'Yamaguchi'), ('Ryouko', 'Yamada'), ('S', 'BACCAR'), ('S', 'Goot'), ('S', 'Matthews'), ('S', 'Middleton'), ('S', 'Stephen'), ('S', 'Washbourne'), ('Saadgi', 'Rajani'), ('Saadia', 'Belhadj'), ('Saadia', 'Mezdel'), ('Saana', 'Saarteinen'), ('Saara', 'Kunakunova'), ('Saara', 'Orav'), ('Saba', 'Aziz'), ('Sabaea', 'Carrington'), ('Sabastiani', 'Leon'), ('Sabath', 'Ibrahim'), ('Sabhyata', 'Nihalani'), ('Sabina', 'Calancea'), ('Sabina', 'Da Ponte'), ('Sabina', 'Dadaciu'), ('Sabina', 'Gunnarsson'), ('Sabina', 'Jeresic'), ('Sabina', 'Kairanbayeva'), ('Sabina', 'Kochan'), ('Sabina', 'Korsunova'), ('Sabina', 'Kovtunova'), ('Sabina', 'Kurbanova'), ('Sabina', 'Latypova'), ('Sabina', 'Lupu'), ('Sabina', 'Machalova'), ('Sabina', 'Mediano Alvarez'), ('Sabina', 'Pellas'), ('Sabina', 'Radevicova'), ('Sabina', 'Ramirez'), ('Sabina', 'Safarova'), ('Sabina', 'Sharipova'), ('Sabina', 'Shaydullina'), ('Sabina', 'Simmonds'), ('Sabina', 'Smirnova'), ('Sabina', 'Stilu'), ('Sabina', 'Warta'), ('Sabina Elena', 'Preda'), ('Sabine', 'Appelmans'), ('Sabine', 'Bernegger'), ('Sabine', 'Gerke'), ('Sabine', 'Haas'), ('Sabine', 'Hack'), ('Sabine', 'Herdegen'), ('Sabine', 'Klaschka'), ('Sabine', 'Krein Auer'), ('Sabine', 'Lavrerotte'), ('Sabine', 'Lisicki'), ('Sabine', 'Lohmann'), ('Sabine', 'Lutter'), ('Sabine', 'Mueller'), ('Sabine', 'Neteler'), ('Sabine', 'Oristil'), ('Sabine', 'Pawelec'), ('Sabine', 'Resch'), ('Sabine', 'Van Der Sar'), ('Sabita', 'Maharaj'), ('Sabrina', 'Allaut'), ('Sabrina', 'Bamburac'), ('Sabrina', 'Barkdull'), ('Sabrina', 'Baumgarten'), ('Sabrina', 'Bouheddi'), ('Sabrina', 'Capannolo'), ('Sabrina', 'Corazza'), ('Sabrina', 'Damario'), ('Sabrina', 'Diniz'), ('Sabrina', 'Dos Reis'), ('Sabrina', 'Echavarria'), ('Sabrina', 'Eisenberg'), ('Sabrina', 'Favini'), ('Sabrina', 'Faybyshev'), ('Sabrina', 'Federici'), ('Sabrina', 'Giusto'), ('Sabrina', 'Goles'), ('Sabrina', 'Jolk'), ('Sabrina', 'Kierberg'), ('Sabrina', 'Lindemann'), ('Sabrina', 'Lopes'), ('Sabrina', 'Lucchi'), ('Sabrina', 'Man Son Hing'), ('Sabrina', 'Meier'), ('Sabrina', 'Mendez Dominguez'), ('Sabrina', 'Moser'), ('Sabrina', 'Peppl'), ('Sabrina', 'Piccolo'), ('Sabrina', 'Rittberger'), ('Sabrina', 'Rodriguez'), ('Sabrina', 'Santamaria'), ('Sabrina', 'Stewart'), ('Sabrina', 'Tahir'), ('Sabrina', 'Valenti'), ('Sabrina', 'Vogt'), ('Sabrina', 'Wist'), ('Sabrina', 'Xu'), ('Sabrina Mary', 'Woll'), ('Sacha', 'Jones'), ('Sachi', 'Belwal'), ('Sachia', 'Vickery'), ('Sachie', 'Ishizu'), ('Sachie', 'Umehara'), ('Sachiyo', 'Hirayama'), ('Sada', 'Nahimana'), ('Sadaf', 'Sadeghvaziri'), ('Sadafmoh', 'Tolibova'), ('Sade', 'Atkinson'), ('Sadia', 'Berthe Hoffman'), ('Sadietou Biguedenam', 'Mayou'), ('Sadigheh', 'Akbari'), ('Sadiya', 'Pathan'), ('Sadvika', 'Saboo'), ('Sae', 'Haraguchi'), ('Sae', 'Kato'), ('Sae Mi', 'Lim'), ('Saera', 'Kanda'), ('Safa', 'Safar'), ('Safae', 'Kchich'), ('Saffet Seden', 'Soyalp'), ('Safiya', 'Carrington'), ('Sagarika', 'Phadke'), ('Sagit', 'Doron'), ('Sahan', 'Shetty'), ('Sahar', 'Al Disi'), ('Sahar', 'Amini Hajibashi'), ('Sahar', 'Najaei'), ('Sai Dedeepya', 'Yeddula'), ('Sai Jayalakshmy', 'Jayaram'), ('Sai Samhitha', 'Chamarthi'), ('Sai Swapna', 'Ramakrishnan'), ('Said Basiuny', 'Hend'), ('Saida', 'Berthe'), ('Saida', 'Hared'), ('Saira', 'Sanchinelli'), ('Saisai', 'Zheng'), ('Saki', 'Imamura'), ('Sakiko', 'Namba'), ('Sakiko', 'Shimizu'), ('Sakina', 'Nshimirimana'), ('Sakura', 'Hondo'), ('Salima', 'Fendri'), ('Salima Esmat', 'Salman'), ('Sally', 'Arnott'), ('Sally', 'Bogaert Morel'), ('Sally', 'Boulding'), ('Sally', 'Dischmann'), ('Sally', 'Godman'), ('Sally', 'Greer'), ('Sally', 'Holdsworth'), ('Sally', 'Hudson Beck'), ('Sally', 'Irvine'), ('Sally', 'McCann'), ('Sally', 'Mccann'), ('Sally', 'Moore'), ('Sally', 'Peers'), ('Sally', 'Reeves'), ('Sally', 'Timms'), ('Sally', 'Turner'), ('Sally Ann', 'Cuttler'), ('Sally Ann', 'Lewis'), ('Sally Anne', 'Mcdonald'), ('Salma', 'Abdel Rahim'), ('Salma', 'Abdelbaset'), ('Salma', 'Ben Mahmoud'), ('Salma', 'Cabrera'), ('Salma', 'Charif'), ('Salma', 'Chouhib'), ('Salma', 'Djoubri'), ('Salma', 'El Garhi'), ('Salma', 'El Semary'), ('Salma', 'Ewing'), ('Salma', 'Ziouti'), ('Salome', 'Aladashvili'), ('Salome', 'Chachkhunashvili'), ('Salome', 'Devidze'), ('Salome', 'Kvitashvili'), ('Salome', 'Llaguno'), ('Salome', 'Ugrekhelidze'), ('Saloni', 'Kantaria'), ('Samanta', 'Villegas'), ('Samantha', 'Asch'), ('Samantha', 'Cowan'), ('Samantha', 'Crawford'), ('Samantha', 'Czarniak Rego'), ('Samantha', 'Echevarria'), ('Samantha', 'Etienne'), ('Samantha', 'Ewart'), ('Samantha', 'Galinier'), ('Samantha', 'Hammond'), ('Samantha', 'Harris'), ('Samantha', 'Knight'), ('Samantha', 'Koelliker'), ('Samantha', 'Lee'), ('Samantha', 'Lieb'), ('Samantha', 'Lucas'), ('Samantha', 'Murray'), ('Samantha', 'Nanere'), ('Samantha', 'Noble'), ('Samantha', 'Palacio'), ('Samantha', 'Powers'), ('Samantha', 'Pribaz'), ('Samantha', 'Reeves'), ('Samantha', 'Schoeffel'), ('Samantha', 'Smith'), ('Samantha', 'Stosur'), ('Samantha', 'Vickers'), ('Samantha Rose', 'Droop'), ('Samanthi', 'Wijesekera'), ('Samara', 'Amour'), ('Samia', 'Jalali'), ('Samia', 'Medjahdi'), ('Samira', 'Giger'), ('Samira', 'Radjaa'), ('Samira', 'Takourabet'), ('Sampada', 'Kanede'), ('Samrita', 'Sekar'), ('Sana', 'Ben Salah'), ('Sanaa', 'Benkaddour'), ('Sanaa', 'Bhambri'), ('Sanaa', 'Ziadi'), ('Sanae', 'Guenfoudi'), ('Sanae', 'Ohta'), ('Sanaz', 'Marand'), ('Sanda', 'Mamic'), ('Sanda', 'Omerovic'), ('Sandhya', 'Kanury'), ('Sandhya', 'Nagaraj'), ('Sandra', 'Andriamarosoa'), ('Sandra', 'Angerer'), ('Sandra', 'Anglesjo'), ('Sandra', 'Arsovska'), ('Sandra', 'Azorin Vilella'), ('Sandra', 'Begijn'), ('Sandra', 'Bellver Fructuoso'), ('Sandra', 'Beltran'), ('Sandra', 'Bendlova'), ('Sandra', 'Bernal'), ('Sandra', 'Birch'), ('Sandra', 'Bolstad'), ('Sandra', 'Bozinovic'), ('Sandra', 'Cacic'), ('Sandra', 'Canrom'), ('Sandra', 'Cecchini'), ('Sandra', 'Costa Corral'), ('Sandra', 'De Rafael Esteban'), ('Sandra', 'De Silva'), ('Sandra', 'Deamelio'), ('Sandra', 'Denis'), ('Sandra', 'Dopfer'), ('Sandra', 'Dynka'), ('Sandra', 'Fornes Marques'), ('Sandra', 'Friedl'), ('Sandra', 'Garriga Catala'), ('Sandra', 'Gloria'), ('Sandra', 'Gonzalez Salas'), ('Sandra', 'Gwiggner'), ('Sandra', 'Herrera'), ('Sandra', 'Herrera Gonzalez'), ('Sandra', 'Hole'), ('Sandra', 'Honigova'), ('Sandra', 'Hribar'), ('Sandra', 'Ion'), ('Sandra', 'Jamrichova'), ('Sandra', 'Jillyova'), ('Sandra', 'Kellemberger'), ('Sandra', 'Kleinova'), ('Sandra', 'Klemenschits'), ('Sandra', 'Kloesel'), ('Sandra', 'Kristjansdottir'), ('Sandra', 'Kvelstein'), ('Sandra', 'Leborgne'), ('Sandra', 'Liebl'), ('Sandra', 'Maletin'), ('Sandra', 'Mantler'), ('Sandra', 'Martinovic'), ('Sandra', 'Mente Ladanai'), ('Sandra', 'Mihajlovic'), ('Sandra', 'Milojevic'), ('Sandra', 'Nacuk'), ('Sandra', 'Olsen'), ('Sandra', 'Ortevall'), ('Sandra', 'Podolak'), ('Sandra', 'Reichel'), ('Sandra', 'Roldan'), ('Sandra', 'Roma'), ('Sandra', 'Samir'), ('Sandra', 'Sasidharan'), ('Sandra', 'Segura Mandarino'), ('Sandra', 'Soler Sola'), ('Sandra', 'Spadzinski'), ('Sandra', 'Van Der Aa'), ('Sandra', 'Volk'), ('Sandra', 'Vukojicic'), ('Sandra', 'Waechtershauser'), ('Sandra', 'Walsham'), ('Sandra', 'Wasserman'), ('Sandra', 'Wikstrom'), ('Sandra', 'Zahlavova'), ('Sandra', 'Zaniewska'), ('Sandra', 'Zmak'), ('Sandra Mihaela', 'Sida'), ('Sandra Mirela', 'Rus'), ('Sandrella', 'Droubi'), ('Sandrine', 'Bouilleau'), ('Sandrine', 'Chevy'), ('Sandrine', 'Jabra'), ('Sandrine', 'Jaquet'), ('Sandrine', 'Testud'), ('Sandy', 'Collins'), ('Sandy', 'Gumulya'), ('Sandy', 'Lukowski'), ('Sandy', 'Marti'), ('Sandy', 'Stap'), ('Sandy', 'Vo'), ('Saneeya', 'Singh'), ('Sanela', 'Kunovac'), ('Sanem', 'Irem'), ('Sang Hee', 'Park'), ('Sang Hoon', 'Chung'), ('Sangaram', 'Shangamitra'), ('Sangeeta', 'Roopan'), ('Sania', 'Mirza'), ('Sanja', 'Ancic'), ('Sanja', 'Bajin'), ('Sanja', 'Fabijancic'), ('Sanja', 'Jukic'), ('Sanja', 'Racic'), ('Sanja', 'Todorovic'), ('Sanjana', 'Kapur'), ('Sanjana', 'Sudhir'), ('Sanjeevani', 'Patil'), ('Sankriti', 'Sinha'), ('Sanna', 'Miestamo'), ('Sanne', 'Bakker'), ('Sanne', 'Holtkamp'), ('Sanne', 'Lemmers'), ('Sanne', 'Louwers'), ('Sanne', 'Van Den Biggelaar'), ('Sanny', 'Harsono'), ('Sansitha', 'Nandakumar'), ('Sanskriti', 'Sinha'), ('Sansriti', 'Ranjan'), ('Santa', 'Sushinska'), ('Santina', 'Lange'), ('Santina', 'Mushtakova'), ('Sanya', 'Madan'), ('Sanya', 'Sinha'), ('Sanyukta', 'Gawande'), ('Saori', 'Enmoto'), ('Saori', 'Honda'), ('Saori', 'Hosogai'), ('Saori', 'Kaneko'), ('Saori', 'Karikomi'), ('Saori', 'Miyamoto'), ('Saori', 'Nakamura'), ('Saori', 'Obata'), ('Saori', 'Oda'), ('Sapfo', 'Sakellaridi'), ('Sara', 'Abaza'), ('Sara', 'Abutovic'), ('Sara', 'Amini'), ('Sara', 'Amiri'), ('Sara', 'Amo Flores'), ('Sara', 'Anundsen'), ('Sara', 'Badran'), ('Sara', 'Benabdeljalil'), ('Sara', 'Boevska'), ('Sara', 'Bonomi'), ('Sara', 'Cakarevic'), ('Sara', 'Castellano'), ('Sara', 'Catarain Ruiz'), ('Sara', 'Celma Boix'), ('Sara', 'Cvorovic'), ('Sara', 'Czubak'), ('Sara', 'Daavettila'), ('Sara', 'Del Barrio Aragon'), ('Sara', 'Di Paolo'), ('Sara', 'Djurdjevic'), ('Sara', 'Eccel'), ('Sara', 'El Ghazouly'), ('Sara', 'Errani'), ('Sara', 'Gambogi'), ('Sara', 'Gimenez'), ('Sara', 'Gomer'), ('Sara', 'Grechi'), ('Sara', 'Grubac'), ('Sara', 'Guglielminotti'), ('Sara', 'Gvozdenovic'), ('Sara', 'Haider'), ('Sara', 'Jamil'), ('Sara', 'Julio'), ('Sara', 'Kalkenova'), ('Sara', 'Kelly'), ('Sara', 'Kostic'), ('Sara', 'Lanca'), ('Sara', 'Lizariturry'), ('Sara', 'Lydon'), ('Sara', 'Mansoor'), ('Sara', 'Marcionni'), ('Sara', 'Marjanovic'), ('Sara', 'Martinez Martos'), ('Sara', 'Mechaala Gordillo'), ('Sara', 'Meghoufel'), ('Sara', 'Migliori'), ('Sara', 'Mitrovic'), ('Sara', 'Mueller'), ('Sara', 'Nael'), ('Sara', 'Neto'), ('Sara', 'Neves'), ('Sara', 'Nilsson'), ('Sara', 'Orellana'), ('Sara', 'Ottomano'), ('Sara', 'Palcic'), ('Sara', 'Pasquinoni'), ('Sara', 'Perez Gonzalez'), ('Sara', 'Pilic'), ('Sara', 'Pritchard'), ('Sara', 'Pujals Perez'), ('Sara', 'Quiroga'), ('Sara', 'Raimkhanova'), ('Sara', 'Ramadan'), ('Sara', 'Ramirez'), ('Sara', 'Sabry'), ('Sara', 'Savarise'), ('Sara', 'Secco'), ('Sara', 'Sherif'), ('Sara', 'Simbula'), ('Sara', 'Sorribes Tormo'), ('Sara', 'Sussarello'), ('Sara', 'Tarraso Barber'), ('Sara', 'Taweel'), ('Sara', 'Tegner'), ('Sara', 'Tomic'), ('Sara', 'Tse'), ('Sara', 'Urquizu'), ('Sara', 'Valverde'), ('Sara', 'Ventura'), ('Sara', 'Walker'), ('Sara', 'Yadav'), ('Sara', 'Ziodato'), ('Sara Catherine', 'Parker'), ('Sara Maria', 'Farzat'), ('Sarah', 'Abaza'), ('Sarah', 'Adegoke'), ('Sarah', 'Al Balushi'), ('Sarah', 'Andrew'), ('Sarah', 'Andrews'), ('Sarah', 'Aulombard'), ('Sarah', 'Baron'), ('Sarah', 'Behbehani'), ('Sarah', 'Benad'), ('Sarah', 'Bentley'), ('Sarah', 'Borwell'), ('Sarah', 'Braun'), ('Sarah', 'Brown'), ('Sarah', 'Candeloro'), ('Sarah', 'Castillejo'), ('Sarah', 'Coles'), ('Sarah', 'De Clercq'), ('Sarah', 'Dinkelmann'), ('Sarah', 'Dvorak'), ('Sarah', 'Fansler'), ('Sarah', 'Fernandez Ruiz'), ('Sarah', 'Finck'), ('Sarah', 'Funedda'), ('Sarah', 'Gbadamosi'), ('Sarah', 'Gillespie Jones'), ('Sarah', 'Gray'), ('Sarah', 'Gregg'), ('Sarah', 'Gronert'), ('Sarah', 'Harding'), ('Sarah', 'Heckel'), ('Sarah', 'Hellstern'), ('Sarah', 'Huah'), ('Sarah', 'Jones'), ('Sarah', 'Kadi'), ('Sarah', 'Lancaster'), ('Sarah', 'Lee'), ('Sarah', 'Leonard'), ('Sarah', 'Loosemore'), ('Sarah', 'Mahboob Khan'), ('Sarah', 'Makki'), ('Sarah', 'Mar'), ('Sarah', 'Mateo'), ('Sarah', 'Mcintyre'), ('Sarah', 'Mclaren'), ('Sarah', 'Mclean'), ('Sarah', 'Means'), ('Sarah', 'Mitten'), ('Sarah', 'Moundir'), ('Sarah', 'Pang'), ('Sarah', 'Pestieau'), ('Sarah', 'Petrides'), ('Sarah', 'Pham'), ('Sarah', 'Pitkowski Malcor'), ('Sarah', 'Raab'), ('Sarah', 'Rafael'), ('Sarah', 'Riske'), ('Sarah', 'Savedra'), ('Sarah', 'Scaringe'), ('Sarah', 'Schaerer'), ('Sarah', 'Schneider'), ('Sarah', 'Schulze'), ('Sarah', 'Seiderer'), ('Sarah', 'Serrano'), ('Sarah', 'Stallard'), ('Sarah', 'Stanley'), ('Sarah', 'Stoerbrauck'), ('Sarah', 'Stone'), ('Sarah', 'Suitor'), ('Sarah', 'Sullivan'), ('Sarah', 'Summerfield'), ('Sarah', 'Tami Masi'), ('Sarah', 'Taylor'), ('Sarah', 'Tremuth'), ('Sarah', 'Urbanek'), ('Sarah', 'Vargas'), ('Sarah', 'Wetz'), ('Sarah', 'Witten'), ('Sarah', 'Wray'), ('Sarah', 'Wright'), ('Sarah Beth', 'Askew'), ('Sarah Ellen', 'Hofmann'), ('Sarah Inga', 'Senger'), ('Sarah Jane', 'Connelly'), ('Sarah Lynn', 'Du Plessis'), ('Sarah Marija', 'Merlic'), ('Sarah Rebecca', 'Sekulic'), ('Sarahi', 'Garcia Carrera'), ('Sarai', 'Flores Diaz'), ('Sarai', 'Torres'), ('Sarai Delfina', 'Monarrez Yesaki'), ('Saranga', 'Sangakkara'), ('Saranya', 'Nagpal'), ('Saranya', 'Pattabhi'), ('Saras', 'Arasu'), ('Saravinder', 'Pannu'), ('Saray', 'Pino Vega'), ('Saray', 'Sterenbach'), ('Sareewan', 'Wattanadechachan'), ('Sargam', 'Gupta'), ('Sari', 'Baba'), ('Sari', 'Stegmann'), ('Sarie', 'Swanepoel'), ('Sarina', 'Kang'), ('Sarina', 'Mueller'), ('Sarit', 'Shalev'), ('Sariya', 'Khairova'), ('Sarka', 'Snorova'), ('Sarlota', 'Cesnekova'), ('Saroop', 'Dhatt'), ('Sarra', 'Ata'), ('Sarra', 'Boukezzi'), ('Sarvinoz', 'Saidhujaeva'), ('Sarvinoz', 'Sharipova'), ('Sasa', 'Klanecek'), ('Sasano', 'Yoshiko'), ('Sasarin', 'Borwornchokchai'), ('Sasha', 'Abraham'), ('Sasha', 'Alexander'), ('Sasha', 'Bollweg'), ('Sasha', 'Edelstein'), ('Sasha', 'Fisher'), ('Sasha', 'Hanna'), ('Sasha', 'Khabibulina'), ('Sasha', 'Mattu'), ('Sasipa', 'Permpanich'), ('Sasirin', 'Borwornchokchai'), ('Sasithorn', 'Tangthienkul'), ('Sasiwan', 'Pimonrat'), ('Saska', 'Gavrilovska'), ('Saskia', 'Adomat'), ('Saskia', 'Meineck'), ('Saskia', 'Monien'), ('Saskia', 'Simon'), ('Satjaporn', 'Mahajaroenkul'), ('Sato', 'Fujigo'), ('Satoko', 'Kurioka'), ('Satoko', 'Nakano'), ('Satomi', 'Fujitani'), ('Satomi', 'Kinjo'), ('Satomi', 'Yasuno'), ('Satori', 'Seki'), ('Satoyo', 'Funaki'), ('Satsuki', 'Takamura'), ('Saule', 'Valantiejute'), ('Saumya', 'Vig'), ('Savannah', 'Sills'), ('Savannah', 'Wood'), ('Savi', 'Sehrawat'), ('Sawitre', 'Naree'), ('Saya', 'Nishi'), ('Saya', 'Usui'), ('Saya', 'Yoshimi'), ('Sayaka', 'Koumura'), ('Sayaka', 'Takahara'), ('Sayaka', 'Umeda'), ('Sayaka', 'Yoshimoto'), ('Sayaka', 'Yoshino'), ('Sayako', 'Matsunaga'), ('Sayali', 'Bhilare'), ('Sayuri', 'Takeshima'), ('Sayyara', 'Mammadova'), ('Scarlett', 'Werner'), ('Schena', 'Benamar'), ('Se Hyun', 'Kim'), ('Se Jin', 'Lee'), ('Se Na', 'Lee'), ('Se Won', 'Lee'), ('Sean', 'Lodzki'), ('Seble', 'Woldegebriel'), ('Seda', 'Arantekin'), ('Seda', 'Noorlander'), ('Seda', 'Vardanyan'), ('Sedef', 'Ozkan'), ('Seden', 'Ozlu'), ('Sederique', 'Merola'), ('Sedigheh', 'Hassani'), ('Seema', 'Kumari'), ('Seema', 'Maybud'), ('Segolene', 'Berger'), ('Segun', 'Lesi'), ('Seheno', 'Razafindramaso'), ('Sehzade', 'Gur'), ('Sei Rei', 'Cho'), ('Seika', 'Takahara'), ('Seiko', 'Ichioka'), ('Seiko', 'Okamoto'), ('Seira', 'Etori'), ('Seira', 'Shimizu'), ('Sejla', 'Duzel'), ('Selen', 'Surel'), ('Selenay', 'Heper'), ('Selima', 'Frioui'), ('Selima', 'Sfar'), ('Selin', 'Karaer'), ('Selin', 'Nassi Tekikbas'), ('Selin', 'Ovunc'), ('Selin GLseren', 'Simsek'), ('Selina', 'Atay'), ('Selina', 'Guns'), ('Selina', 'Jordi'), ('Selina', 'Scheffer'), ('Selma', 'Andrade'), ('Selma', 'Babic'), ('Selma', 'Dahbi'), ('Selma', 'Husic'), ('Selma', 'Salkovic'), ('Selma', 'Saran'), ('Selma Stefania', 'Cadar'), ('Selyn', 'Ozgur'), ('Sem', 'Wensveen'), ('Sena', 'Bensafi'), ('Sena', 'Sahin'), ('Sena', 'Suswam'), ('Sena Lara', 'Nural'), ('Senaida', 'Kambel'), ('Senait', 'Gebreail'), ('Senay', 'Ince'), ('Seo Kyung', 'Kang'), ('Seohyeon', 'Kim'), ('Seoin', 'Choi'), ('Seon Ja', 'Yoo'), ('Seon Young', 'Park'), ('Seon Young', 'Um'), ('Seone', 'Mendez'), ('Septi', 'Mende'), ('Septiana', 'Zahiroh'), ('Seraina', 'Jaeger'), ('Serena', 'Bergomi'), ('Serena', 'Buonaccorso'), ('Serena', 'Carsughi'), ('Serena', 'Dercole'), ('Serena', 'Frazzitta'), ('Serena', 'Gugnali'), ('Serena', 'Nash'), ('Serena', 'Strano'), ('Serena', 'Venica'), ('Serena', 'Williams'), ('Seriana', 'Saltzen'), ('Serra', 'Olgac'), ('Servane', 'Delobelle'), ('Sesil', 'Karatantcheva'), ('Setia Indri', 'Harti'), ('Seul Ki', 'Chin'), ('Seung Hee', 'Han'), ('Seung Yeon', 'Hong'), ('Seung Yeon', 'Kang'), ('Seunghyun', 'Lee'), ('Seven', 'Oral'), ('Severine', 'Arpajou'), ('Severine', 'Augros'), ('Severine', 'Beltrame'), ('Severine', 'Dhondt'), ('Sevia', 'Gonca'), ('Sevil', 'Aliyeva'), ('Sevil', 'Yuldasheva'), ('Sevvy', 'Gallios'), ('Seyedeh', 'Saadat'), ('Shabnam', 'Eslami'), ('Shaddae', 'Findley'), ('Shadi', 'Tabatabai'), ('Shadisha', 'Robinson'), ('Shahar', 'Biran'), ('Shahar', 'Peer'), ('Shahin', 'Ansari'), ('Shahira', 'Tawfik'), ('Shahlio', 'Ibadullaeva'), ('Shahzodaxon', 'Hatamova'), ('Shaila', 'Ali'), ('Shakhlo', 'Saidova'), ('Shakhnoza', 'Karieva'), ('Shakhnoza', 'Khatamova'), ('Shakhzoda', 'Asimova'), ('Shalaka', 'Uddur Manjunath'), ('Shale', 'Bouchard'), ('Shalimar', 'Talbi'), ('Shaline Doreen', 'Pipa'), ('Shalini', 'Perera'), ('Shalini', 'Sahoo'), ('Shalini', 'Thakar'), ('Shamika', 'Dhar'), ('Shan Shan', 'Li'), ('Shan Shan', 'Song'), ('Shana', 'Claes'), ('Shandra', 'Livingston'), ('Shangqing', 'Yang'), ('Shani', 'Arnon'), ('Shani', 'Blecher'), ('Shani', 'Dubinchik'), ('Shani', 'Gatterer'), ('Shaniek', 'Pinder'), ('Shanki', 'Dandeniya'), ('Shanna', 'Krimatschow'), ('Shanna', 'Strong'), ('Shannan', 'Mccarthy'), ('Shannon', 'Cox'), ('Shannon', 'Golds'), ('Shannon', 'Gordon'), ('Shannon', 'Hudson'), ('Shannon', 'Peters'), ('Shannon', 'Robinson'), ('Shannon', 'Wong Hon Chan'), ('Shanon', 'Bronzi'), ('Shanshan', 'Guo'), ('Shao Fang', 'Ong'), ('Shao Yuan', 'Kao'), ('Shaozhuo', 'Liu'), ('Sharani', 'Gaini'), ('Shareen', 'Bottrell'), ('Shareen Rena', 'Lai'), ('Shari', 'Barman'), ('Shari', 'Bucklin'), ('Sharifah Syafeenaz', 'Syed Azmir'), ('Sharmada', 'Balu'), ('Sharmada', 'Iyer'), ('Sharmeen', 'Rizvi'), ('Sharni', 'Stocker Jones'), ('Sharon', 'Biondi'), ('Sharon', 'Fichman'), ('Sharon', 'Green'), ('Sharon', 'Hodgkin'), ('Sharon', 'Marin'), ('Sharon', 'Mcnamara'), ('Sharon', 'Norgren'), ('Sharon', 'Oconnor'), ('Sharon', 'Pesch'), ('Sharon', 'Pinchbeck'), ('Sharon', 'Russell'), ('Sharon', 'Thomson'), ('Sharon', 'Van Brandis'), ('Sharon', 'Walsh Pete'), ('Sharon Nosipho', 'Makhanya'), ('Sharon Sanchana', 'Paul'), ('Shatel', 'Tavita'), ('Shaun', 'Stafford'), ('Shauna', 'Casey'), ('Shauna', 'Heffernan'), ('Shauna', 'Morgan'), ('Shavit', 'Kimchi'), ('Shawn', 'Foltz'), ('Shawna', 'Martin'), ('Shayma Seif', 'El Sisi'), ('Shayna', 'Mcdowell'), ('Shaza', 'Tinawi'), ('Sheau Shan', 'Liew'), ('Sheena', 'Jain'), ('Sheena Jade', 'Masuda Karrasch'), ('Sheenagh', 'Cosgrove'), ('Sheetal', 'Shetty'), ('Sheethal', 'Goutham'), ('Shehnaz', 'Singh'), ('Sheila', 'Guerberg'), ('Sheila', 'Jacobo'), ('Sheila', 'Mcinerney'), ('Sheila', 'Moradian'), ('Sheila', 'Ohlsson'), ('Sheila', 'Solsona Carcasona'), ('Sheila Bertha', 'Aquino Aragon'), ('Shelby', 'Rogers'), ('Shelby', 'Talcott'), ('Shelby', 'Torrance'), ('Shelley', 'Aguero'), ('Shelley', 'Bartlett'), ('Shelley', 'Bryce'), ('Shelley', 'Panford Gyaaba'), ('Shelley', 'Solomon'), ('Shellita', 'Haughton'), ('Shelly', 'Bereznyak'), ('Shelly', 'Krolitzky'), ('Shelly', 'Walpole'), ('Shenay', 'Perry'), ('Shenelle', 'Mohammed'), ('Sheng Nan', 'Sun'), ('Shera', 'Wiegler'), ('Sherazad', 'Benamar'), ('Sherazad', 'Reix'), ('Shereen', 'Peterson Paul'), ('Shereen', 'Youssef'), ('Sheri', 'Esrock'), ('Sheri', 'Yandle'), ('Sherri', 'Norris'), ('Sherri', 'Vitale'), ('Sherry', 'Acker'), ('Sherry', 'Buller'), ('Sherry', 'Hull'), ('Sherry', 'Li'), ('Sherry', 'Sherry Ayad Abd Elmalek Wassef'), ('Sheryl', 'Gershon'), ('Sheung', 'Pang'), ('Shevita', 'Aulana'), ('Shi Min', 'Lin'), ('Shi Ting', 'Wang'), ('Shi Tong', 'Shao'), ('Shi Ying', 'Li'), ('Shieh Yen', 'Leong'), ('Shiho', 'Akita'), ('Shiho', 'Hisamatsu'), ('Shiho', 'Mochida'), ('Shiho', 'Okada'), ('Shiho', 'Otake'), ('Shiho', 'Sakagawa'), ('Shiho', 'Tanaka'), ('Shikha', 'Uberoi'), ('Shilin', 'Xu'), ('Shilpa', 'Goel'), ('Shilpa', 'Joshi'), ('Shilpi', 'Jaiswal'), ('Shinann', 'Featherston'), ('Shinobu', 'Asagoe'), ('Shinobu', 'Kiribayashi'), ('Shiori', 'Araki'), ('Shiori', 'Fukuda'), ('Shiori', 'Kikukawa'), ('Shir', 'Aharon'), ('Shir', 'Azran'), ('Shir', 'Bakshi'), ('Shir', 'Hornung'), ('Shir', 'Perkis'), ('Shira', 'Gafni'), ('Shira', 'Goldberger'), ('Shiran', 'Arol Wiegand'), ('Shiran', 'Ben Nun'), ('Shiraz', 'Bronstein'), ('Shiri', 'Burstein'), ('Shiri', 'Zlotikamin'), ('Shirley', 'Bernal'), ('Shirley', 'Brasher'), ('Shirli Ann', 'Siddall'), ('Shiu Man', 'Chan'), ('Shivani', 'Bhatt'), ('Shivani', 'Manchanda'), ('Shivani', 'Manjanna'), ('Shivani', 'Mysore Sreekantiah'), ('Shivani', 'Oberoi'), ('Shivika', 'Burman'), ('Shizu', 'Katsumi'), ('Shizuka', 'Hisamitsu'), ('Shizuka', 'Tokiwa'), ('Shizuko', 'Matsuda'), ('Shkekyana', 'Dubova'), ('Shohsiyat', 'Tuhtamatova'), ('Shoko', 'Yamamoto'), ('Shona', 'Lee'), ('Shonette', 'Wilson'), ('Shou Na', 'Mu'), ('Shoval', 'Fanani'), ('Shraddha', 'Lodha'), ('Shradha', 'Dali'), ('Shreya', 'Pasricha'), ('Shreya', 'Swarup'), ('Shrishti', 'Daas'), ('Shruti', 'Archita'), ('Shruti', 'Dhawan'), ('Shu Hwei', 'Huang'), ('Shu Jin', 'Xie'), ('Shu Jing', 'Yang'), ('Shu Ping', 'Lin'), ('Shu Shin', 'Kam'), ('Shu Yi', 'Zhang'), ('Shu Ying', 'Hsieh'), ('Shuai', 'Peng'), ('Shuai', 'Zhang'), ('Shuang', 'Liu'), ('Shuang', 'Wu'), ('Shubha', 'Srinivasan'), ('Shubhi', 'Dwivedi'), ('Shufaa Changawa', 'Ruwa'), ('Shuko', 'Aoyama'), ('Shukufa', 'Abdullayeva'), ('Shuo', 'Feng'), ('Shura', 'Poppe'), ('Shuyue', 'Ma'), ('Shweta', 'Kakhandki Gadigeppa'), ('Shweta', 'Rana'), ('Shweta', 'Ravji'), ('Si Nga', 'Lee'), ('Si Qi', 'Liu'), ('Si Si', 'Qiu'), ('Si Yiah', 'Ling'), ('Si Ying Julienne', 'Keong'), ('Sian', 'Bayliss'), ('Sian Arie', 'Staria'), ('Sianna', 'Simmons'), ('Sibel', 'Ruzkar'), ('Sibilla', 'Fiorentino'), ('Sidal', 'Ak'), ('Sidonia', 'Wolfinger'), ('Sierra A', 'Ellison'), ('Sigurlaug', 'Sigurdardottir'), ('Siham Soumeya', 'Ben Nacer'), ('Sihem', 'Bellahouel'), ('Sihem', 'Ben Youcef'), ('Sihem', 'Sahli'), ('Silke', 'Frankl'), ('Silke', 'Martin'), ('Silke', 'Meier'), ('Silky', 'Sachdeva'), ('Silvana', 'Barna'), ('Silvana', 'Bauer'), ('Silvana', 'Belardinelli'), ('Silvana', 'Campos'), ('Silvana', 'Casaretto'), ('Silvana', 'Reis'), ('Silvana', 'Urroz'), ('Silvana', 'Vargas'), ('Silvana Lorena', 'Celorio'), ('Silvia', 'Albano'), ('Silvia', 'Aneiros'), ('Silvia', 'Bastici'), ('Silvia', 'Batista'), ('Silvia', 'Bayon'), ('Silvia', 'Blume Bruns'), ('Silvia', 'Bordes Caselles'), ('Silvia', 'Campius Pinas'), ('Silvia', 'Carvajal'), ('Silvia', 'Cevoli'), ('Silvia', 'Chinellato'), ('Silvia', 'Correa'), ('Silvia', 'Cribellati'), ('Silvia', 'Disderi'), ('Silvia', 'Farina Elia'), ('Silvia', 'Fassione'), ('Silvia', 'Freye Steur'), ('Silvia', 'Fuentes Perez'), ('Silvia', 'Gabba'), ('Silvia', 'Garcia Jimenez'), ('Silvia', 'Genisova'), ('Silvia', 'Gualtieri'), ('Silvia', 'Gubler'), ('Silvia', 'Gutierrez Quiroga'), ('Silvia', 'Hegedis'), ('Silvia', 'La Fratta'), ('Silvia', 'Ludorf'), ('Silvia', 'Margaroli'), ('Silvia', 'Mattiolo'), ('Silvia', 'Miguel'), ('Silvia', 'Mocciola'), ('Silvia', 'Navarro Orgilles'), ('Silvia', 'Njiric'), ('Silvia', 'Plasin Peral'), ('Silvia', 'Ramon Cortes'), ('Silvia', 'Ranocchi'), ('Silvia', 'Russo'), ('Silvia', 'Saccani'), ('Silvia', 'Schiavetti'), ('Silvia', 'Soler Espinosa'), ('Silvia', 'Sosnarova'), ('Silvia', 'Tiscareno'), ('Silvia', 'Torne Ortiz'), ('Silvia', 'Tozzi'), ('Silvia', 'Tumova'), ('Silvia', 'Urickova'), ('Silvia Carina', 'Mazzeo Da Silva'), ('Silvia Elena', 'Irimescu'), ('Silvia Paulina', 'Vilchis Sanchez'), ('Silvia Priscila', 'Montoya'), ('Silvija', 'Perosa'), ('Silvija', 'Talaja'), ('Silvina', 'Ronsisvalli'), ('Silvina', 'Saulo'), ('Silviya', 'Zhelyazkova'), ('Simge', 'Resmor'), ('Simin', 'Liu'), ('Simina Teodora', 'Bodea'), ('Simmi', 'Rani'), ('Simona', 'Arghire'), ('Simona', 'Borisova'), ('Simona', 'Dandrea'), ('Simona', 'Demont'), ('Simona', 'Dobra'), ('Simona', 'Farenza'), ('Simona', 'Galik'), ('Simona', 'Graniceru'), ('Simona', 'Halep'), ('Simona', 'Heinova'), ('Simona', 'Horsikyan'), ('Simona', 'Ionescu'), ('Simona', 'Isidori'), ('Simona', 'Jozova'), ('Simona', 'Kralikova'), ('Simona', 'Krausova'), ('Simona', 'Morici'), ('Simona', 'Nedorostova'), ('Simona', 'Pascau'), ('Simona', 'Patti'), ('Simona', 'Petru'), ('Simona', 'Petrutiu'), ('Simona', 'Porchia'), ('Simona', 'Struzzolino'), ('Simona', 'Syleouni'), ('Simona', 'Synkova'), ('Simona', 'Waltert'), ('Simona', 'Weymar'), ('Simona Iulia', 'Matei'), ('Simone', 'Alipieva'), ('Simone', 'Bock'), ('Simone', 'Eberlein'), ('Simone', 'Frank'), ('Simone', 'Hermann'), ('Simone', 'Hoormaert'), ('Simone', 'Jardim'), ('Simone', 'Kalhorn'), ('Simone', 'Pratt'), ('Simone', 'Schilder'), ('Simone', 'Simas'), ('Simone', 'Stohr'), ('Simone', 'Templeton'), ('Simone', 'Vasconcellos Calves'), ('Simone', 'Vranov Brown'), ('Simone', 'Wichman'), ('Simone', 'Wienbeck'), ('Simone', 'Wolter'), ('Simone Lindsay', 'Krog'), ('Simonetta', 'Bozzano'), ('Simonetta', 'Miori'), ('Simonka', 'Parajova'), ('Simran', 'Kejriwal'), ('Simran', 'Wadhwa'), ('Simran Kaur', 'Sethi'), ('Sina', 'Bader'), ('Sina', 'Haas'), ('Sina', 'Hartmann'), ('Sina', 'Ladage'), ('Sina', 'Niketta'), ('Sina', 'Zuger'), ('Sindhu', 'Janagam'), ('Sindhu Nila', 'Partheepan'), ('Sindy', 'Cespedes'), ('Sindy', 'Lochon'), ('Sinead', 'Disaya'), ('Sinead', 'Lohan'), ('Sinem', 'Alptekin'), ('Sing Le', 'Fan Chiang'), ('Sinhee', 'Kim'), ('Sinika', 'Jezkova'), ('Siobhan', 'Drake Brockman'), ('Siobhan', 'Finicane'), ('Siobhan', 'Munro'), ('Siobhan', 'Nicholson'), ('Siobhan', 'Oneill'), ('Siqi', 'Cao'), ('Siqi', 'Xie'), ('Siri', 'Mittet'), ('Siri', 'Victorsson'), ('Siria Elena', 'Brebenel'), ('Sirikanya', 'Hoonsiri'), ('Sirilux', 'Mingmolee'), ('Siriporn', 'Phakamad'), ('Siriyakorn', 'Makpoon'), ('Sirma Aysen', 'Bingeli'), ('Sirui', 'He'), ('Sissi', 'Kroustalaki'), ('Sissy', 'Carvin'), ('Sitara', 'Prabhu'), ('Sitong', 'Yan'), ('Sivan', 'Ozana'), ('Sivan', 'Paz'), ('Sivan', 'Raizman'), ('Siyu', 'Chen'), ('Siyu', 'Qin'), ('Skye', 'Hopper'), ('Skylar', 'Holloway'), ('Skylar', 'Kuykendall'), ('Skylar Alexandra', 'Morton'), ('Skywalkie', 'Raimrova'), ('Sladana', 'Stankovic'), ('Sladjana', 'Kos'), ('Sladjana', 'Saveljic'), ('Slavica', 'Milanovic'), ('Slavina', 'Kaplanska'), ('Sloane', 'Stephens'), ('Smaranda', 'Stan'), ('Smriti', 'Joon'), ('Sneha', 'Padamata'), ('Snehadevi S', 'Reddy'), ('Snehal', 'Mane'), ('Snezhana', 'Nekrasova'), ('Snigdha', 'Padamata'), ('So Dam', 'Park'), ('So Hee', 'Jung'), ('So Hyun', 'Bae'), ('So Jung', 'Kim'), ('So Ra', 'Lee'), ('So Yeon', 'Im'), ('So Yeon', 'Kim'), ('Sobhini', 'De Silva'), ('Socorro', 'Trumpeta'), ('Soetkin', 'Van Deun'), ('Sofi', 'Papadopoulou'), ('Sofi Helene', 'Weckman'), ('Sofia', 'Araujo'), ('Sofia', 'Arvidsson'), ('Sofia', 'Avakova'), ('Sofia', 'Ayala'), ('Sofia', 'Ayuso'), ('Sofia', 'Baptista'), ('Sofia', 'Barletta'), ('Sofia', 'Benhalima'), ('Sofia', 'Bezukladova'), ('Sofia', 'Blanco'), ('Sofia', 'Blanco Andrade'), ('Sofia', 'Booth'), ('Sofia', 'Brun'), ('Sofia', 'Bruno'), ('Sofia', 'Canarte'), ('Sofia', 'Carlsson'), ('Sofia', 'Compostizo De Andres'), ('Sofia', 'Dinis'), ('Sofia', 'Dmitrieva'), ('Sofia', 'Epur'), ('Sofia', 'Espana'), ('Sofia', 'Finer'), ('Sofia', 'Garcia Morales'), ('Sofia', 'Gorovits'), ('Sofia', 'Hager'), ('Sofia', 'Haggstrom'), ('Sofia', 'Henning'), ('Sofia', 'Hiort'), ('Sofia', 'Holden'), ('Sofia', 'Holmberg'), ('Sofia', 'Johansson'), ('Sofia', 'Kalavria'), ('Sofia', 'Kelbert'), ('Sofia', 'Kenin'), ('Sofia', 'Kvatsabaia'), ('Sofia', 'Lozano'), ('Sofia', 'Luini'), ('Sofia', 'Macias Mendoza'), ('Sofia', 'Managadze'), ('Sofia', 'Mariotto'), ('Sofia', 'Medina'), ('Sofia', 'Melikishvili'), ('Sofia', 'Mitrokhin'), ('Sofia', 'Montemayor'), ('Sofia', 'Munera Sanchez'), ('Sofia', 'Pacifico'), ('Sofia', 'Prazeres'), ('Sofia', 'Quaglia'), ('Sofia', 'Ragona'), ('Sofia', 'Ramirez'), ('Sofia', 'Rojas'), ('Sofia', 'Sabljarevic'), ('Sofia', 'Salimova'), ('Sofia', 'San Jose'), ('Sofia', 'Santa Maria'), ('Sofia', 'Sewing'), ('Sofia', 'Shapatava'), ('Sofia', 'Shaykis'), ('Sofia', 'Smagina'), ('Sofia', 'Sualehe'), ('Sofia', 'Thomaidou'), ('Sofia', 'Vaynberg'), ('Sofia', 'Vignau'), ('Sofia', 'Voll'), ('Sofia', 'Wicker'), ('Sofia Daniela', 'Duran Vinueza'), ('Sofia Giantvigka', 'Zengou Nieviantomska'), ('Sofia Haydee', 'Nicolini'), ('Sofia Nami', 'Samavati'), ('Sofico', 'Kadzhaya'), ('Sofie', 'Albinus'), ('Sofie', 'Borgions'), ('Sofie', 'Kofoed Thomsen'), ('Sofie', 'Oyen'), ('Sofie', 'Werckx'), ('Sofie', 'Woon'), ('Sofie Bomark', 'Syversen'), ('Sofija', 'Mandic'), ('Sofija', 'Zecevic'), ('Sofiko', 'Sharangia'), ('Sofiya', 'Bogatova'), ('Sofiya', 'Chekunova'), ('Sofiya', 'Esterman'), ('Sofiya', 'Kovalets'), ('Sofiya', 'Kuzina'), ('Sofya', 'Dobronevskaya'), ('Sofya', 'Golubovskaya'), ('Sofya', 'Gulnova'), ('Sofya', 'Lansere'), ('Sofya', 'Malysheva'), ('Sofya', 'Treshcheva'), ('Sofya', 'Zhuk'), ('Soha', 'Sadiq'), ('Sohinee', 'Ghosh'), ('Sohini', 'Kumari'), ('Sohvi', 'Sundqvist'), ('Sohyun', 'Park'), ('Soizette', 'Simmons'), ('Sol', 'Ferrero'), ('Sol Hee', 'Sim'), ('Sol Maria', 'Terracina'), ('Solange', 'Rasoarivelo'), ('Soledad', 'Blanco'), ('Soledad', 'Calderon Arroyo'), ('Soledad', 'Esperon'), ('Soledad', 'Lucero'), ('Soledad', 'Podlipnik'), ('Solene', 'Ficheux'), ('Solene', 'Guyomard'), ('Solihati', 'Moerid'), ('Solma', 'Norovz Najeri'), ('Solomiya', 'Rohovets'), ('Solomiya', 'Zinko'), ('Solveig', 'Fosser'), ('Somer', 'Dalla Bona'), ('Sommer', 'Bisagas'), ('Sona', 'Novakova'), ('Sona', 'Priscakova'), ('Sona', 'Saringulyan'), ('Sonal', 'Marker'), ('Sonal', 'Phadke'), ('Sonali', 'Sanap'), ('Song Yee', 'You'), ('Sonia', 'Bernal'), ('Sonia', 'Colomina'), ('Sonia', 'Corominas Plaja'), ('Sonia', 'Daggou'), ('Sonia', 'Delgado Tardif'), ('Sonia', 'Eguizabal Saracho'), ('Sonia', 'Fondevila Castro'), ('Sonia', 'Grzywocz'), ('Sonia', 'Iacovacci'), ('Sonia', 'Klamczynska'), ('Sonia', 'Lagos'), ('Sonia', 'Orellana'), ('Sonia', 'Perez'), ('Sonia', 'Poveda Marsal'), ('Sonia', 'Sandano'), ('Sonia', 'Shelar'), ('Sonia', 'Tiberi'), ('Sonia', 'Vickers'), ('Sonia Stefania', 'Negrila'), ('Sonja', 'Balic'), ('Sonja', 'Becarevic'), ('Sonja', 'Fetz'), ('Sonja', 'Foks'), ('Sonja', 'Keranen'), ('Sonja', 'Krtenova'), ('Sonja', 'Larsen'), ('Sonja', 'Liasovska'), ('Sonja', 'Molnar'), ('Sonja', 'Pachta'), ('Sonja', 'Vidas'), ('Sonja', 'Viskovich'), ('Sonoe', 'Yonezawa'), ('Sonora', 'Fontaine'), ('Sonora', 'Ijdo'), ('Sonya', 'Dayal'), ('Sonya', 'Haggstrom'), ('Sonya', 'Hahn'), ('Sonya', 'Jeyaseelan'), ('Sonya', 'Kumar'), ('Sonya', 'Latycheva'), ('Sonya Sheeran', 'Stover'), ('Soo Bin', 'Oh'), ('Soo Mi', 'Yoo'), ('Soo Ok', 'Kim'), ('Sook Ja', 'Im'), ('Soomin', 'Kim'), ('Soon Ho', 'Shin'), ('Soon Hye', 'Lee'), ('Soon Mi', 'Kim'), ('Soon Mi', 'Seo'), ('Soon Nam', 'Kim'), ('Soon Oh', 'Lee'), ('Sophia', 'Bergner'), ('Sophia', 'Bouganga'), ('Sophia', 'Bursulaya'), ('Sophia', 'Chow'), ('Sophia', 'Dzulynsky'), ('Sophia', 'Edwards'), ('Sophia', 'Grippo'), ('Sophia', 'Intert'), ('Sophia', 'Kermet'), ('Sophia', 'Kryloff'), ('Sophia', 'Marks'), ('Sophia', 'Mulsap'), ('Sophie', 'Abrams'), ('Sophie', 'Amiach'), ('Sophie', 'Arnuti'), ('Sophie', 'Blom'), ('Sophie', 'Chang'), ('Sophie', 'Cloessner'), ('Sophie', 'Cockell'), ('Sophie', 'Cornerotte'), ('Sophie', 'Cortina'), ('Sophie', 'Cremers'), ('Sophie', 'De Taxis'), ('Sophie', 'Didelot'), ('Sophie', 'Douchet'), ('Sophie', 'Dunlop'), ('Sophie', 'Erre'), ('Sophie', 'Ferguson'), ('Sophie', 'Georges'), ('Sophie', 'Gerits'), ('Sophie', 'Jacobeit'), ('Sophie', 'Kobuch'), ('Sophie', 'Lefevre'), ('Sophie', 'Letcher'), ('Sophie', 'Muntean'), ('Sophie', 'Pismont'), ('Sophie', 'Proctor'), ('Sophie', 'Quist'), ('Sophie', 'Regnier'), ('Sophie', 'Turine'), ('Sophie', 'Watts'), ('Sophie', 'Wilkinson'), ('Sophie', 'Woorons'), ('Sophie Anne', 'Cerbon'), ('Sorana', 'Cirstea'), ('Sorana', 'Mastan'), ('Soraya', 'Guellas'), ('Soraya', 'Moradian'), ('Souha', 'Chibout'), ('Soumeya', 'Anane'), ('Soumia', 'Islami'), ('Sousan', 'Massi'), ('Sowjanya', 'Bavisetti'), ('Soyeon', 'Park'), ('Spela', 'Kobetic'), ('Spela', 'Rajh'), ('Spencer', 'Liang'), ('Spirit', 'Edley'), ('Spurti', 'Shivalingaiah'), ('Sri', 'Utaminingsih'), ('Sri Sai Shivani', 'K'), ('Sri Vaishnavi', 'Peddi Reddy'), ('Sricharanya', 'Thiagarajan'), ('Srijita', 'Ghosh'), ('Sriningdiah', 'Sutarniati'), ('Srishti', 'Slaria'), ('Stacey', 'Anderson'), ('Stacey', 'Fung'), ('Stacey', 'Grant'), ('Stacey', 'Jellen'), ('Stacey', 'Kyriakopoulos'), ('Stacey', 'Lee'), ('Stacey', 'Lock'), ('Stacey', 'Martin'), ('Stacey', 'Schefflin'), ('Stacey', 'Sheppard'), ('Stacey', 'Tan'), ('Stacia', 'Fonseca'), ('Stacia', 'Kissell'), ('Stacy', 'Margolin'), ('Stamatia', 'Fafaliou'), ('Stanca', 'Muresan'), ('Stanislava', 'Cozirscaia'), ('Stanislava', 'Hrozenska'), ('Stanislava', 'Starostoyants'), ('Stanka', 'Ilkova'), ('Stefana', 'Andrei'), ('Stefana', 'Lakicevic'), ('Stefana', 'Petrov'), ('Stefani', 'Andreeva'), ('Stefani', 'Arsova'), ('Stefani', 'Falconi'), ('Stefani', 'Hofer'), ('Stefani', 'Stojic'), ('Stefania', 'Boffa'), ('Stefania', 'Carrizo'), ('Stefania', 'Casi'), ('Stefania', 'Chieppa'), ('Stefania', 'Dalla Valle'), ('Stefania', 'Di Vasto'), ('Stefania', 'Fadabini'), ('Stefania', 'Haddad'), ('Stefania', 'Hristov'), ('Stefania', 'Imolesi'), ('Stefania', 'Indemini'), ('Stefania', 'Pacella'), ('Stefania', 'Pesce'), ('Stefania', 'Pifferi'), ('Stefania', 'Postorino'), ('Stefania', 'Rogozinska Dzik'), ('Stefania', 'Rubini'), ('Stefania', 'Sernaglia'), ('Stefania', 'Sismanidou'), ('Stefania', 'Stefansdottir'), ('Stefania', 'Vizireanu'), ('Stefania Cristina', 'Nicolae'), ('Stefanie', 'Alfery'), ('Stefanie', 'Haidner'), ('Stefanie', 'Halder'), ('Stefanie', 'Hershfield'), ('Stefanie', 'Kaindl'), ('Stefanie', 'Kastner'), ('Stefanie', 'Kolar'), ('Stefanie', 'Leushuis'), ('Stefanie', 'Meyer'), ('Stefanie', 'Mikesz'), ('Stefanie', 'Nunic'), ('Stefanie', 'Rath'), ('Stefanie', 'Rehmke'), ('Stefanie', 'Stemmer'), ('Stefanie', 'Tan'), ('Stefanie', 'Voegele'), ('Stefanie', 'Vorih'), ('Stefanie', 'Weis'), ('Stefany', 'Ferigatto'), ('Steffany', 'Bermudez'), ('Steffi', 'Bachofer'), ('Steffi', 'Carruthers'), ('Steffi', 'Distelmans'), ('Steffi', 'Graf'), ('Steffi', 'Keim'), ('Steffi', 'Menning'), ('Steffi', 'Van Elten'), ('Steffi', 'Weterings'), ('Steffy', 'Canals Baker'), ('Stefi', 'Gjine'), ('Stefy Lorena', 'Varon Diaz'), ('Stela', 'Penciu'), ('Stella', 'Crick'), ('Stella', 'Di Michele'), ('Stella', 'Kristjansdottir'), ('Stella', 'Kyradji'), ('Stella', 'Menna'), ('Stella', 'Papaspyrou'), ('Stella', 'Sampras'), ('Stella', 'Sondang'), ('Steph', 'Booth'), ('Stephani', 'Rodriguez'), ('Stephania', 'Gehrke'), ('Stephanie', 'Baldinucci'), ('Stephanie', 'Balzert'), ('Stephanie', 'Bardsley'), ('Stephanie', 'Barfeld'), ('Stephanie', 'Belovukovic'), ('Stephanie', 'Bengson'), ('Stephanie', 'Bernadel'), ('Stephanie', 'Bertschmann'), ('Stephanie', 'Brown'), ('Stephanie', 'Carmans'), ('Stephanie', 'Chi'), ('Stephanie', 'Chu'), ('Stephanie', 'Cohen Aloro'), ('Stephanie', 'Content Tardieu'), ('Stephanie', 'Cornish'), ('Stephanie', 'Dalmacio'), ('Stephanie', 'De Laet'), ('Stephanie', 'De Ville'), ('Stephanie', 'Devisme'), ('Stephanie', 'Doboara'), ('Stephanie', 'Dubois'), ('Stephanie', 'Faulkner'), ('Stephanie', 'Foretz Gacon'), ('Stephanie', 'Fox'), ('Stephanie', 'Gehrlein'), ('Stephanie', 'Givens'), ('Stephanie', 'Gomperts'), ('Stephanie', 'Grant'), ('Stephanie', 'Greau'), ('Stephanie', 'Hales'), ('Stephanie', 'Halsell'), ('Stephanie', 'Hazlett'), ('Stephanie', 'Herz'), ('Stephanie', 'Hirsch'), ('Stephanie', 'Hoffpauir'), ('Stephanie', 'Jasper'), ('Stephanie', 'Jeanes'), ('Stephanie', 'Johnson'), ('Stephanie', 'Kamberi'), ('Stephanie', 'Kent'), ('Stephanie', 'Kimura'), ('Stephanie', 'Koderisch'), ('Stephanie', 'Kovacic'), ('Stephanie', 'Krappl'), ('Stephanie', 'Kusano'), ('Stephanie', 'Lim'), ('Stephanie', 'Lobner'), ('Stephanie', 'London'), ('Stephanie', 'Loutsenko'), ('Stephanie', 'Luk'), ('Stephanie', 'Macfarlane'), ('Stephanie', 'Martin'), ('Stephanie', 'Mayorkis'), ('Stephanie', 'Meier'), ('Stephanie', 'Nauta'), ('Stephanie', 'Nemtsova'), ('Stephanie', 'Nickitas'), ('Stephanie', 'Ntcha'), ('Stephanie', 'Pace'), ('Stephanie', 'Parker'), ('Stephanie', 'Price'), ('Stephanie', 'Reece'), ('Stephanie', 'Rehe'), ('Stephanie', 'Rizzi'), ('Stephanie', 'Rottier'), ('Stephanie', 'Roy'), ('Stephanie', 'Sagaspe'), ('Stephanie', 'Sajbert'), ('Stephanie', 'Savides'), ('Stephanie', 'Schaer'), ('Stephanie', 'Scimone'), ('Stephanie', 'Serruys'), ('Stephanie', 'Sheppard'), ('Stephanie', 'Sipe'), ('Stephanie', 'Slaveski'), ('Stephanie', 'Sullivan'), ('Stephanie', 'Tedja Abdi'), ('Stephanie', 'Testard'), ('Stephanie', 'Theiler'), ('Stephanie', 'Tibbits'), ('Stephanie', 'Tolleson'), ('Stephanie', 'Vidov'), ('Stephanie', 'Vieira'), ('Stephanie', 'Vock'), ('Stephanie', 'Vogt'), ('Stephanie', 'Vongsouthi'), ('Stephanie', 'Wagner'), ('Stephanie', 'Weinstein'), ('Stephanie', 'Wetmore'), ('Stephanie', 'Wiltshire'), ('Stephanie', 'Yamada'), ('Stephanie', 'Zenklusen'), ('Stephanie J', 'Smith'), ('Stephanie Judith', 'Visscher'), ('Stephanie M', 'Vlad'), ('Stephanie Mariel', 'Petit'), ('Stephany', 'Chang'), ('Stephany', 'Gamiz'), ('Sthefanie', 'Santos'), ('Stina', 'Almgren'), ('Stina', 'Kailaheimo'), ('Stine', 'Sebakk'), ('Stine', 'Vogt Andersen'), ('Storm', 'Sanders'), ('Story', 'Tweedie Yates'), ('Stuti', 'Singh Tomar'), ('Stutti', 'Smit'), ('Su Chen', 'Lin'), ('Su Haiza', 'Wan'), ('Su Jen', 'Lai'), ('Su Jeong', 'Jang'), ('Su Jin', 'Kim'), ('Su Lin', 'Lai'), ('Su Peng', 'Ng'), ('Su San Na', 'Sim'), ('Su Wei', 'Hsieh'), ('Su Yeon', 'Chun'), ('Su Ying', 'Lai'), ('Subbadharmi', 'Sundaram'), ('Subhashini', 'Kalyanasundaram'), ('Subhra', 'Shukla'), ('Subin', 'Park'), ('Suchanun', 'Viratprasert'), ('Suci', 'Bungaran'), ('Sudsobhi', 'Chatsuthiphan'), ('Sue', 'Barker'), ('Sue', 'Bartlett'), ('Sue', 'Chancellor'), ('Sue', 'Hastings'), ('Sue', 'Hatch'), ('Sue', 'Kocsis'), ('Sue', 'Mappin'), ('Sue', 'Rossano'), ('Sue', 'Roux'), ('Sue', 'Saliba'), ('Sue', 'Stap'), ('Suellen', 'Abel'), ('Suhaila', 'Jad Gomez'), ('Suhana Sofia', 'Mohd Adam Das'), ('Suheil', 'Lizana'), ('Sujin', 'Yoon'), ('Sujitra', 'Duangchan'), ('Sukriti', 'Patnaik'), ('Suleika', 'Besser'), ('Sultan', 'Gonen'), ('Sumara', 'Passos'), ('Sumeera', 'Kamil'), ('Sumin', 'Kim'), ('Sumina', 'Eshiro'), ('Sumitra', 'Basnyat'), ('Sumitra', 'Rao'), ('Summer', 'Bhullar'), ('Summer', 'Yardley'), ('Sun Jung', 'Kim'), ('Sun Young', 'Choi'), ('Sun Young', 'Kim'), ('Sunae', 'Ji'), ('Sunam', 'Jeong'), ('Suncica', 'Strkic'), ('Sung Ah', 'Park'), ('Sung Hee', 'Han'), ('Sung Hee', 'Kim'), ('Sung Hee', 'Park'), ('Sung Hee', 'Shin'), ('Sunitha', 'Rao'), ('Sunna Kristina', 'Barthel'), ('Sunthree', 'Arphanukul'), ('Supapitch', 'Kuearum'), ('Sura', 'Assadova'), ('Surabhi', 'Singh'), ('Surama', 'Gotera'), ('Surina', 'De Beer'), ('Surya', 'Tejaswini'), ('Suryaningsih', 'Suryaningsih'), ('Susan', 'Alexander'), ('Susan', 'Bandecchi'), ('Susan', 'Bowman'), ('Susan', 'Butt'), ('Susan', 'Cowan'), ('Susan', 'Darnel'), ('Susan', 'Durst'), ('Susan', 'Gadroen'), ('Susan', 'Gilchrist'), ('Susan', 'Hagey'), ('Susan', 'Huang'), ('Susan', 'Katzen'), ('Susan', 'King'), ('Susan', 'Klingenberg'), ('Susan', 'Kreymborg'), ('Susan', 'Leach'), ('Susan', 'Leo'), ('Susan', 'Mascarin'), ('Susan', 'Mcrann'), ('Susan', 'Minford'), ('Susan', 'Niemann'), ('Susan', 'Northen'), ('Susan', 'Okocha'), ('Susan', 'Pendo'), ('Susan', 'Rimes'), ('Susan', 'Rollinson'), ('Susan', 'Russo'), ('Susan', 'Salinas'), ('Susan', 'Sloane Lundy'), ('Susan', 'Sommerville'), ('Susan', 'Stone'), ('Susan', 'Vinton'), ('Susan', 'Zaro'), ('Susana', 'Carreras'), ('Susana', 'De Andres Therond'), ('Susana', 'Florez'), ('Susana', 'Hernandez'), ('Susana', 'Rojas'), ('Susana Maria', 'Villaverde'), ('Susanna', 'Attili'), ('Susanna', 'Bostanjyan'), ('Susanna', 'Ciccone'), ('Susanna', 'Giovanardi'), ('Susanna', 'Lee'), ('Susanna', 'Lingman'), ('Susanna', 'Locher'), ('Susanna', 'Modric'), ('Susanna', 'Mussi'), ('Susannah', 'Dart'), ('Susanne', 'Aigner'), ('Susanne', 'Boyden'), ('Susanne', 'Celik'), ('Susanne', 'Depka'), ('Susanne', 'Filipp'), ('Susanne', 'Kirsch'), ('Susanne', 'Korpas'), ('Susanne', 'Losel'), ('Susanne', 'Schmid'), ('Susanne', 'Trik'), ('Susanne', 'Wild'), ('Susheel', 'Gulati'), ('Sushrutha', 'Reddy Chintala'), ('Susi', 'Bensch'), ('Susi', 'Eichenberger'), ('Susi', 'Fortun Lohrmann'), ('Susie', 'Jaeger'), ('Susie', 'Mehmedbasich'), ('Susie', 'Scott'), ('Susie', 'Starrett'), ('Susie', 'Witwer'), ('Susita', 'Das'), ('Sussy', 'Boyanovich'), ('Suthasini', 'Sirikaya'), ('Suvikukka', 'Forsius'), ('Suvimol', 'Duangchan'), ('Suyeon', 'Choi'), ('Suzan', 'Lamens'), ('Suzana', 'Gesteira'), ('Suzana', 'Kuffner'), ('Suzana', 'Maksovic'), ('Suzana', 'Rodrigues'), ('Suzana', 'Sava'), ('Suzanna', 'Anggarkusuma'), ('Suzanna', 'Grigoryan'), ('Suzanna', 'Mansour'), ('Suzanne', 'Bakewell'), ('Suzanne', 'Italiano'), ('Suzanne', 'Jarell'), ('Suzanne', 'Jones'), ('Suzanne', 'Le Besnerais'), ('Suzanne', 'Lundgren'), ('Suzanne', 'Matzenauer'), ('Suzanne', 'Olson'), ('Suzanne', 'Tolu'), ('Suzanne', 'Van Hartingsveldt'), ('Suzanne', 'White'), ('Suzanne', 'Wright'), ('Suzelle', 'Davin'), ('Suzi', 'Becvinovska'), ('Suzie', 'Holm'), ('Suzie', 'Mair'), ('Suzuho', 'Oshino'), ('Suzuka', 'Furukawa'), ('Suzuka', 'Takoi'), ('Suzy', 'Larkin'), ('Suzy', 'Tan'), ('Svatava', 'Prorokova'), ('Svenja', 'Haymann'), ('Svenja', 'Ochsner'), ('Svenja', 'Truelsen'), ('Svenja', 'Weidemann'), ('Sveta', 'Kaladzko'), ('Svetla', 'Bozicnik'), ('Svetlana', 'Bubnova'), ('Svetlana', 'Cherneva'), ('Svetlana', 'Iansitova'), ('Svetlana', 'Klyuchnikova'), ('Svetlana', 'Komleva'), ('Svetlana', 'Kouzmenko'), ('Svetlana', 'Krivencheva'), ('Svetlana', 'Kuznetsova'), ('Svetlana', 'Mossiakova'), ('Svetlana', 'Patakhonova'), ('Svetlana', 'Piquerez'), ('Svetlana', 'Sinitsyna'), ('Svetlana', 'Smirnova'), ('Svetlana', 'Soldatenkova'), ('Svetlana', 'Tsykhanskaya'), ('Svetlana', 'Zakharchenko'), ('Svetlana', 'Zdorova'), ('Sveva', 'Mazzari'), ('Sviatlana', 'Pirazhenka'), ('Swara', 'Kulkarni'), ('Swathika', 'Kandhaswany'), ('Swetha', 'Devaraj'), ('Swetha', 'Nalikala'), ('Swetha', 'Sree Hari'), ('Sybella', 'Garvin'), ('Sybil', 'Parker'), ('Sybille', 'Bammer'), ('Sybille', 'Gauvain'), ('Sybille', 'Khayat'), ('Sybille', 'Niox Chateau'), ('Sydney', 'Campbell'), ('Sydney', 'Rider'), ('Sydney', 'Van Alphen'), ('Sydni', 'Katz'), ('Syeda', 'Gulras Begum'), ('Sylma', 'Phillip'), ('Sylva', 'Nesvadbova'), ('Sylvana', 'Lazzarino'), ('Sylvia', 'Clayton'), ('Sylvia', 'Czopek'), ('Sylvia', 'Hanika'), ('Sylvia', 'Koning'), ('Sylvia', 'Krywacz'), ('Sylvia', 'Lokollo'), ('Sylvia', 'Montero'), ('Sylvia', 'Plischke'), ('Sylvia', 'Schenck'), ('Sylvia', 'Stefkova'), ('Sylvia', 'Vay'), ('Sylvie', 'Baccarani'), ('Sylvie', 'Bohmova'), ('Sylvie', 'Gardette'), ('Sylvie', 'Metlef'), ('Sylvie', 'Rual'), ('Sylvie', 'Rual Faulty'), ('Sylvie', 'Sabas'), ('Sylvie', 'Sallaberry'), ('Sylvie', 'Tetreault'), ('Sylwia', 'Domanska'), ('Sylwia', 'Huminska'), ('Sylwia', 'Kociecka'), ('Sylwia', 'Mikolajczuk'), ('Sylwia', 'Niedbalo'), ('Sylwia', 'Rynarzewska'), ('Sylwia', 'Zagorska'), ('Sylwia', 'Ziolkowska'), ('Syna', 'Kayser'), ('Syna', 'Schreiber'), ('Szabina', 'Szlavikovics'), ('Szandra', 'Fuzesi'), ('Szilvia', 'Kelemen'), ('Szu Yu', 'Lin'), ('T', 'Novaco'), ('Tabata Oshiro', 'Coutinho'), ('Tabitha', 'Blackburn'), ('Tadeja', 'Majeric'), ('Tadeja', 'Sibila'), ('Tagifano', 'Soonalole'), ('Taij Mishma', 'Kumar'), ('Taisia', 'Polyarush'), ('Taisiya', 'Zakarlyuk'), ('Taja', 'Mohorcic'), ('Tajana', 'Mlakar'), ('Tajda', 'Bestijanic'), ('Tajna', 'Lukas'), ('Takalani', 'Molaoa'), ('Takhmina', 'Burkhanova'), ('Tal', 'Gorenstein'), ('Tal', 'Zinn'), ('Tali', 'Fink'), ('Talia', 'Rojas'), ('Talina', 'Beiko'), ('Talissa', 'Kucera'), ('Talitha', 'De Groot'), ('Talula', 'Guralnek'), ('Talya', 'Onyer'), ('Talya', 'Zandberg'), ('Tam', 'Oshaughnessy'), ('Tamachan', 'Momkoonthod'), ('Tamaka', 'Takagi'), ('Tamami', 'Kamiyama'), ('Tamar', 'Akhobadze'), ('Tamar', 'Keren'), ('Tamar', 'Komakhidze'), ('Tamar', 'Kutubidze'), ('Tamar', 'Kvaratskhelia'), ('Tamar', 'Levin'), ('Tamar', 'Milevskaya'), ('Tamar', 'Shahaf'), ('Tamar', 'Shoshani'), ('Tamar', 'Zedginidze'), ('Tamara', 'Alvarado'), ('Tamara', 'Alvarez Riobo'), ('Tamara', 'Aranda Nunez'), ('Tamara', 'Arnold'), ('Tamara', 'Barad Itzhaki'), ('Tamara', 'Bartkowiak'), ('Tamara', 'Bizhukova'), ('Tamara', 'Blum'), ('Tamara', 'Bojanic'), ('Tamara', 'Bunic'), ('Tamara', 'Cherkassova'), ('Tamara', 'Culibrk'), ('Tamara', 'Curovic'), ('Tamara', 'Davis'), ('Tamara', 'Day'), ('Tamara', 'Dobrovolna'), ('Tamara', 'Encina'), ('Tamara', 'Jugo'), ('Tamara', 'Kaftalovich'), ('Tamara', 'Kikaleishvili'), ('Tamara', 'Korpatsch'), ('Tamara', 'Kupkova'), ('Tamara', 'Madjeric'), ('Tamara', 'Malesevic'), ('Tamara', 'Mihajlovic'), ('Tamara', 'Milosevic'), ('Tamara', 'Mol'), ('Tamara', 'Musulbes'), ('Tamara', 'Novoselac'), ('Tamara', 'Orwa'), ('Tamara', 'Pavlov'), ('Tamara', 'Pichkhadze'), ('Tamara', 'Racine Beauchamp'), ('Tamara', 'Rollenberg'), ('Tamara', 'Stanic'), ('Tamara', 'Stojkovic'), ('Tamara', 'Tanner'), ('Tamara', 'Teufl'), ('Tamara', 'Tomic'), ('Tamara', 'Vrhovac'), ('Tamara', 'Zidansek'), ('Tamari', 'Chalaganidze'), ('Tamari', 'Sumbadze'), ('Tamari', 'Tskhakaia'), ('Tamarine', 'Tanasugarn'), ('Tamaryn', 'Hendler'), ('Tami', 'Grende'), ('Tami', 'Whitlinger Jones'), ('Tamijean', 'Fumagalli'), ('Tamira', 'Paszek'), ('Tamitha', 'Nguyen'), ('Tammi', 'Patterson'), ('Tammy', 'Kevey'), ('Tammy', 'Whittington'), ('Tamsin', 'Wainwright'), ('Tamsyn', 'Briscoe'), ('Tanaporn', 'Thongsing'), ('Tanasha', 'Khandpur'), ('Tania', 'Aguirre'), ('Tania', 'Alaby'), ('Tania', 'Couto'), ('Tania', 'Everoll'), ('Tania', 'Hernandez'), ('Tania', 'Martin'), ('Tania', 'Martinez Jimenez'), ('Tania', 'Miro Garcia Pozuelo'), ('Tania', 'Rice'), ('Tania', 'Rivera'), ('Tania', 'Salas'), ('Tania', 'Tzartzeva'), ('Tania', 'Varela Alvarado'), ('Tania', 'Zaitouni'), ('Tania Andrada', 'Mare'), ('Tanisha', 'Rohira'), ('Tanit', 'Lopez Lopez'), ('Tanja', 'Buchheim'), ('Tanja', 'Cerne'), ('Tanja', 'Gligoric'), ('Tanja', 'Grzan'), ('Tanja', 'Hauschildt'), ('Tanja', 'Hirschauer'), ('Tanja', 'Karsten'), ('Tanja', 'Kovacevic'), ('Tanja', 'Lang'), ('Tanja', 'Magoc'), ('Tanja', 'Markovic'), ('Tanja', 'Ostertag'), ('Tanja', 'Rebholz'), ('Tanja', 'Schugt'), ('Tanja', 'Stegkamper'), ('Tanja', 'Stojanovska'), ('Tanja', 'Tsiganii'), ('Tanja', 'Tuomi'), ('Tanja', 'Weigl'), ('Tanja', 'Winkler'), ('Tankiso', 'Letseka'), ('Tanner', 'Cochran'), ('Tanti', 'Trayono'), ('Tanvee', 'Bose'), ('Tanvi', 'Shah'), ('Tanya', 'Germanlieva'), ('Tanya', 'Harford'), ('Tanya', 'Klenkoski'), ('Tanya', 'Kovachka'), ('Tanya', 'Murtagh'), ('Tanya', 'Noury'), ('Tanya', 'Raykova'), ('Tanya', 'Ridzevskaya'), ('Tanya', 'Samodelok'), ('Tanya', 'Sharma'), ('Tanya', 'Soemarno'), ('Tanya', 'Stasiuk'), ('Tanya', 'Stoimenova'), ('Tanya', 'Volkova'), ('Tanya Amala', 'Burgula'), ('Tanysha', 'Dissanayake'), ('Tapiwa', 'Marobela'), ('Tara', 'Collins'), ('Tara', 'Damnjanovic'), ('Tara', 'Gancev'), ('Tara', 'Iyer'), ('Tara', 'Kanbargimath'), ('Tara', 'Lambert'), ('Tara', 'Moore'), ('Tara', 'Reid'), ('Tara', 'Snyder'), ('Tara', 'Vasovic'), ('Tara', 'Wigan'), ('Tara Deen', 'Moore'), ('Tarakaa', 'Bertrand'), ('Tari Ann', 'Toro'), ('Tarlina', 'Tipungwuti'), ('Tarminder', 'Grover'), ('Taro', 'Keens'), ('Tarrannum', 'Handa'), ('Tarrin', 'Dougery'), ('Tarryn', 'Rudman'), ('Tarryn', 'Terblanche'), ('Taryn', 'Swanepoel'), ('Tasha', 'Cacciato'), ('Tasha', 'Jackson'), ('Tassia', 'Sono'), ('Tatevik', 'Babayan'), ('Tatevik', 'Yedigaryan'), ('Tathiana', 'Garbin'), ('Tatia', 'Mikadze'), ('Tatiana', 'Babina'), ('Tatiana', 'Bua'), ('Tatiana', 'Buss'), ('Tatiana', 'Carpio'), ('Tatiana', 'Cutrona'), ('Tatiana', 'Eftenoiu'), ('Tatiana', 'Feliciano Granda'), ('Tatiana', 'Feygina'), ('Tatiana', 'Filaire'), ('Tatiana', 'Golovin'), ('Tatiana', 'Grechukhina'), ('Tatiana', 'Grigoryan'), ('Tatiana', 'Guskova'), ('Tatiana', 'Ignatieva'), ('Tatiana', 'Illova'), ('Tatiana', 'Kotelnikova'), ('Tatiana', 'Kovaltchouk'), ('Tatiana', 'Lopez'), ('Tatiana', 'Makarova'), ('Tatiana', 'Matohniuk'), ('Tatiana', 'Nikolaeva'), ('Tatiana', 'Panova'), ('Tatiana', 'Papakanellou'), ('Tatiana', 'Perebiynis'), ('Tatiana', 'Pieri'), ('Tatiana', 'Postnikova'), ('Tatiana', 'Poutchek'), ('Tatiana', 'Rico Viana'), ('Tatiana', 'Rodens'), ('Tatiana', 'Semenova'), ('Tatiana', 'Silbereisen'), ('Tatiana', 'Simova'), ('Tatiana', 'Tamburini'), ('Tatiana', 'Terwindt'), ('Tatiana', 'Varela'), ('Tatiana', 'Zhukovskaya'), ('Tatiany', 'Tangerino'), ('Tatijana', 'Sheikhan'), ('Tatjana', 'Jecmenica'), ('Tatjana', 'Malek'), ('Tatjana', 'Maria'), ('Tatjana', 'Nossik'), ('Tatjana', 'Priachin'), ('Tatjana', 'Scheel'), ('Tatjana', 'Stoll'), ('Tatjana', 'Vorobjova'), ('Tatjana', 'Vuckovic'), ('Tatsiana', 'Kapshay'), ('Tatsiana', 'Sakovich'), ('Tatsiana', 'Teterina'), ('Tatsiana', 'Uvarova'), ('Tatum', 'Prudhomme'), ('Tatyana', 'Bezukladnikova'), ('Tatyana', 'Ignatchenko'), ('Tatyana', 'Vialichka'), ('Tayisiya', 'Morderger'), ('Tayla', 'Stenta'), ('Taylor', 'Bridges'), ('Taylor', 'Dean'), ('Taylor', 'Douglas'), ('Taylor', 'Gruber'), ('Taylor', 'Hollander'), ('Taylor', 'Johnson'), ('Taylor', 'Lindsey'), ('Taylor', 'Marable'), ('Taylor', 'Ng'), ('Taylor', 'Ormond'), ('Taylor', 'Russo'), ('Taylor', 'Townsend'), ('Taylor L', 'Davidson'), ('Taysia', 'Rogers'), ('Tea', 'Faber'), ('Tea', 'Jandric'), ('Tea', 'Jezidzic'), ('Tea', 'Palandacic'), ('Tea', 'Popaja'), ('Teele', 'Tani'), ('Teertha', 'Iska'), ('Tega', 'Richard'), ('Tegan', 'Edwards'), ('Tejashwi', 'Narayana'), ('Tejasvi', 'Kate'), ('Tekeme', 'Ekios'), ('Teliana', 'Pereira'), ('Temesgen', 'Metasebeya'), ('Temitope', 'Bamidele'), ('Tena', 'Lukas'), ('Teng Lian', 'Kwong'), ('Tenille', 'Elias'), ('Teodora', 'Djordjevic'), ('Teodora', 'Doncheva'), ('Teodora', 'Golubovic'), ('Teodora', 'Mircheva'), ('Teodora', 'Mircic'), ('Teodora', 'Mitrovic'), ('Teodora', 'Nedeva'), ('Teodora', 'Radosavljevic'), ('Teodora', 'Ristic'), ('Teodora', 'Sabljarevic'), ('Teodora', 'Stinga'), ('Teodora', 'Tache'), ('Teodora Adina', 'Ardeleanu'), ('Teodora Elena', 'Radu'), ('Teodora Lavinia', 'Cazan'), ('Teona', 'Tatishvili'), ('Teona', 'Tsertsvadze'), ('Teresa', 'Afuang Haro'), ('Teresa', 'Araujo'), ('Teresa', 'Dobson'), ('Teresa', 'Edgar'), ('Teresa', 'Ferrer Lopez Cuervo'), ('Teresa', 'Franco Dias'), ('Teresa', 'Oberti'), ('Teresa', 'Pladevall Oroz'), ('Teresa', 'Stromberg'), ('Teresa', 'Van Haren'), ('Teresa', 'Veneruso'), ('Teresa', 'Zorrilla Medrano'), ('Teresia', 'Londol'), ('Teresina', 'Paz Soldan'), ('Tereza', 'Bekerova'), ('Tereza', 'Belblova'), ('Tereza', 'Budilova'), ('Tereza', 'Hejlova'), ('Tereza', 'Hladikova'), ('Tereza', 'Janatova'), ('Tereza', 'Jankovska'), ('Tereza', 'Kolarova'), ('Tereza', 'Koplova'), ('Tereza', 'Kotasova'), ('Tereza', 'Malikova'), ('Tereza', 'Martincova'), ('Tereza', 'Melicharkova'), ('Tereza', 'Mihalikova'), ('Tereza', 'Mrdeza'), ('Tereza', 'Polanska'), ('Tereza', 'Prochazkova'), ('Tereza', 'Sandova'), ('Tereza', 'Simonian'), ('Tereza', 'Smitkova'), ('Tereza', 'Stenclava'), ('Tereza', 'Susen'), ('Tereza', 'Svecova'), ('Tereza', 'Svicova'), ('Tereza', 'Sykorova'), ('Tereza', 'Szafnerova'), ('Tereza', 'Vancurova'), ('Tereza', 'Veverkova'), ('Terri', 'Fleming'), ('Terri', 'Gaskill'), ('Terri', 'Oreilly'), ('Terry', 'Holladay'), ('Terry', 'Phelps'), ('Terry Ann', 'Zawacki'), ('Teryn', 'Ashley'), ('Tess', 'Sugnaux'), ('Tessa', 'Breve'), ('Tessa', 'Price'), ('Tessa', 'Shapovalova'), ('Tessah', 'Andrianjafitrimo'), ('Tessy', 'Van De Ven'), ('Tetiana', 'Luzhanska'), ('Tetyana', 'Arefyeva'), ('Thaddea', 'Lock'), ('Thai Sa Grana', 'Pedretti'), ('Thais', 'Castiglioni'), ('Thais', 'Nascimento'), ('Thais', 'Romero'), ('Thais', 'Schenck'), ('Thais', 'Xavier'), ('Thaisa', 'Pereira'), ('Thale', 'Myhre'), ('Thalia', 'Diaz Barriga'), ('Thalia', 'Martin'), ('Thamara', 'Jonkman'), ('Thanthita', 'Suetrong'), ('Thanushree', 'Vale'), ('Thanyarat', 'Karnjanapong'), ('Thanyathorn', 'Putthuan'), ('Thasaporn', 'Naklo'), ('Thassha', 'Vitayaviroj'), ('Thavindra', 'Ekanayake'), ('Thea', 'De Weerd'), ('Thea', 'Ivanisevic'), ('Thea Sund', 'Jacobsen'), ('Theiviya', 'Selvarajoo'), ('Thelara', 'Louw'), ('Thelma', 'Long'), ('Themis', 'Zambrzycki'), ('Theo', 'Gravouil'), ('Theodora', 'Patsourakou'), ('Theodora', 'Soldatou'), ('Theresa', 'Anderson'), ('Theresa', 'Jobst'), ('Theresa', 'Kleinsteuber'), ('Theresa', 'Logar'), ('Theresa', 'Piontek'), ('Theresa', 'Smith'), ('Theresa', 'Swart'), ('Theresa Alison', 'Van Zyl'), ('Theresa Maria', 'Braun'), ('Therese', 'Arildsen'), ('Therese', 'Ekdahl'), ('Therese', 'Tisseverasinghe'), ('Therina', 'Steenkamp'), ('Thi Kim Loi', 'Tran'), ('Thi Tam Hao', 'Tran'), ('Thi Thanh Binh', 'Phan'), ('Thien Trang', 'Nguyen'), ('Thisuri', 'Molligoda'), ('Thitirat', 'Kanaphuet'), ('Thiyumi', 'Abeysinghe'), ('Thu Tuyen', 'Pham Nhu'), ('Thuy Dan', 'Nguyen'), ('Thuy Dung', 'Nguyen'), ('Thuy Linh', 'Tran'), ('Thuy Trang', 'Le Nguyen'), ('Thyra', 'Taune'), ('Tian', 'Cao'), ('Tian Tian', 'Sun'), ('Tiana', 'Lum Tucker'), ('Tiana', 'Windbuchler'), ('Tiare', 'Rebolledo'), ('Tifanie', 'Treece'), ('Tiffany', 'Brymer'), ('Tiffany', 'Cornelius'), ('Tiffany', 'Dabek'), ('Tiffany', 'Eklov'), ('Tiffany', 'Hoberth'), ('Tiffany', 'Huber'), ('Tiffany', 'Kurniawan'), ('Tiffany', 'Lagarde'), ('Tiffany', 'Mylonas'), ('Tiffany', 'Silveria'), ('Tiffany', 'Smith'), ('Tiffany', 'Tran'), ('Tiffany', 'Tucker'), ('Tiffany', 'Welcher'), ('Tiffany', 'Welford'), ('Tiffany', 'William'), ('Tiffini', 'Huggins'), ('Tihana', 'Pochobradsky'), ('Tiiu', 'Kivi'), ('Tijana', 'Filipovic'), ('Tijana', 'Koprivica'), ('Tijana', 'Rotim'), ('Tijana', 'Spasojevic'), ('Tijana', 'Stojkovic'), ('Tijana', 'Uzelac'), ('Tijana', 'Vrhovac'), ('Timberly', 'Greenly'), ('Timea', 'Babos'), ('Timea', 'Bacsinszky'), ('Timea', 'Ferenczy'), ('Timea', 'Jaruskova'), ('Timea', 'Pavlickova'), ('Timea', 'Visontai'), ('Timna', 'Ticic'), ('Tina', 'Akaegbusi'), ('Tina', 'Aryani'), ('Tina', 'Bokhua'), ('Tina', 'Hergold'), ('Tina', 'Hojnik'), ('Tina', 'Jacob'), ('Tina', 'Jiang'), ('Tina', 'Kotter'), ('Tina', 'Krizan'), ('Tina', 'Lyman'), ('Tina', 'Miller'), ('Tina', 'Mochizuki'), ('Tina', 'Mohorcic'), ('Tina', 'Obrez'), ('Tina', 'Parits'), ('Tina', 'Pieger'), ('Tina', 'Pisnik'), ('Tina', 'Plivelitsch'), ('Tina', 'Potisk'), ('Tina', 'Rupert'), ('Tina', 'Samara'), ('Tina', 'Schiechtl'), ('Tina', 'Schmassmann'), ('Tina', 'Sojkova'), ('Tina', 'Steinmetz'), ('Tina', 'Tehrani'), ('Tina', 'Trautmann'), ('Tina', 'Vukasovic'), ('Tina', 'Zimmermann'), ('Tina Helen', 'Soderstrom'), ('Tinatin', 'Kavlashvili'), ('Tinatin', 'Turmanidze'), ('Tine', 'Maertens'), ('Tine', 'Scheuer Larsen'), ('Tine', 'Zwaan'), ('Tinesta', 'Rowe'), ('Ting', 'Li'), ('Ting', 'Wang'), ('Ting Fei', 'Juan'), ('Ting Jr', 'Li'), ('Ting Pei', 'Chang'), ('Ting Ting', 'Lu'), ('Ting Wen', 'Wang'), ('Ting Ya', 'Hsu'), ('Ting Ya', 'Wang'), ('Tingting', 'Pei'), ('Tinkara', 'Kovac'), ('Tinusha', 'Sivaganam'), ('Tiphanie', 'Fiquet'), ('Tish', 'Adams'), ('Tita', 'Zea'), ('Titia', 'Wilmink'), ('Tiya', 'Rolle'), ('Tizia', 'Brocks'), ('Tiziana', 'Iezza'), ('Tjasa', 'Jerse'), ('Tjasa', 'Jezernik'), ('Tjasa', 'Srimpf'), ('Tjasa', 'Suvak'), ('Tokiyo', 'Ikeda'), ('Tomiris', 'Koshmukhanova'), ('Tomo', 'Akutsu'), ('Tomoe', 'Hotta'), ('Tomoe', 'Yazawa'), ('Tomoko', 'Dokei'), ('Tomoko', 'Hagita'), ('Tomoko', 'Ishida'), ('Tomoko', 'Iyori'), ('Tomoko', 'Nagahisa'), ('Tomoko', 'Sekiguchi'), ('Tomoko', 'Sugano'), ('Tomoko', 'Taira'), ('Tomoko', 'Tazawa'), ('Tomoko', 'Yonemura'), ('Tomomi', 'Sumi'), ('Tomomi', 'Takaichi'), ('Tomoyo', 'Takagishi'), ('Tone', 'Schirmer'), ('Tong', 'Gao'), ('Toni', 'Gaddie'), ('Tonia', 'Bayley'), ('Tonia', 'Cook'), ('Tonka', 'Doric'), ('Tonya', 'Evans'), ('Tonya', 'Fuller'), ('Tori', 'Kinard'), ('Tornado Alicia', 'Black'), ('Tory', 'Parravi'), ('Tory', 'Plunkett'), ('Tory', 'Zawacki'), ('Tory Ann', 'Fretz'), ('Toshiko', 'Sade'), ('Tossaporn', 'Summa'), ('Totinkoa', 'Djanguenane'), ('Tova', 'Epstein'), ('Tracee', 'Lee'), ('Tracey', 'Hiete'), ('Tracey', 'King'), ('Tracey', 'Morton Rodgers'), ('Tracey', 'Moyle'), ('Tracey', 'Oconnor'), ('Traci', 'Green'), ('Tracie', 'Blumentritt'), ('Tracy', 'Almeda Singian'), ('Tracy', 'Austin'), ('Tracy', 'Castillo'), ('Tracy', 'Houk'), ('Tracy', 'Lin'), ('Tracy', 'Plant'), ('Tracy', 'Schroeder'), ('Tracy', 'Smith'), ('Trang', 'Huynh Phuong Dai'), ('Trelsie', 'Sadler'), ('Treta', 'Bhattacharyya'), ('Trevine', 'Sellier'), ('Trey', 'Lewis'), ('Tria Rizki', 'Amalia'), ('Tricia', 'Mar'), ('Tricia Ann', 'Greaves'), ('Trina', 'Singian'), ('Trina', 'Slapeka'), ('Trine', 'Bassett'), ('Trinidad Maria', 'Merdeni'), ('Trisha', 'Holloway'), ('Trisha', 'Laux'), ('Trisha', 'Sundaram'), ('Trishna', 'Williams'), ('Tristen Z', 'Dewar'), ('Trivena Monika', 'Putri'), ('Trudi', 'Musgrave'), ('Trudie', 'Du Toit'), ('Trudy Gine', 'Amoranto'), ('Tsarina', 'Domacasse'), ('Tsedey', 'Kifle'), ('Tshidiso', 'Mosinyi'), ('Tsippy', 'Waterman'), ('Tsitsi', 'Masviba'), ('Tsukasa', 'Yamaguchi'), ('Tsveta Konstantinova', 'Dimitrova'), ('Tsvetana', 'Pironkova'), ('Tsvetanka', 'Trifonova'), ('Tu', 'Dong'), ('Tuana', 'Oz'), ('Tuana', 'Tinaztepe'), ('Tugce', 'Dogan'), ('Tulin', 'Dagilmisgul'), ('Tumeka', 'Harris'), ('Tuna', 'Kaya'), ('Tunde', 'Nemeth'), ('Tunecia', 'Sheffield'), ('Tuule', 'Tani'), ('Tuvana', 'Denizci'), ('Tuyet Minh', 'Tran'), ('Ty Ana', 'Williams'), ('Tyler', 'Smith'), ('Typhaine', 'Cottenier'), ('Tyra', 'Calderwood'), ('Tyra', 'Kotuwattegedera'), ('Tzarina', 'Tuen Matthews'), ('Tze May', 'Lee'), ('Tzipi', 'Obziler'), ('Tzu Chen', 'Hsu'), ('Tzu Ting', 'Weng'), ('Tzveta', 'Panajotova'), ('Tzvetelina', 'Havren'), ('Udanthi', 'Narahenpitage'), ('Uju', 'Ben'), ('Uljan', 'Espolova'), ('Ulker', 'Yuregir'), ('Ulla', 'Pontoppidan'), ('Ulla', 'Sandulf'), ('Ulrike', 'Priller'), ('Ulrike', 'Przysucha'), ('Ulrikke', 'Eikeri'), ('Ulrikke', 'Hoyer'), ('Ulyana', 'Ayzatulina'), ('Ulyana', 'Grib'), ('Ulyana', 'Shirokova'), ('Ummarahmat', 'Hummetova'), ('Unnati', 'Purushotham'), ('Upeka', 'Wijeratne'), ('Urmi', 'Negi'), ('Ursa', 'Jerman'), ('Urska', 'Juric'), ('Urska', 'Klemenc'), ('Urska', 'Velec'), ('Urska', 'Vesenjak'), ('Ursula', 'Albizuri'), ('Ursula', 'Alvarado Camino'), ('Ursula', 'Castillejos'), ('Ursula', 'Svetlik'), ('Urszula', 'Kolodziejczak'), ('Urszula', 'Owsiak'), ('Urszula', 'Radwanska'), ('Uschi', 'Ulrich'), ('Uschi', 'Van Doren'), ('Ushna', 'Suhail'), ('Usue Maitane', 'Arconada'), ('Uta', 'Grabinger'), ('Utako', 'Suzuki'), ('Ute', 'Schnoy'), ('Uthumporn', 'Pudtra'), ('Uzma', 'Khan'), ('V', 'Von Demleaux'), ('Vadali', 'Kameswari'), ('Vaibhavi', 'Trivedi'), ('Vaida', 'Martinkute'), ('Vaidehi', 'Chaudhari'), ('Vajira', 'Premaratne'), ('Valda', 'Lake'), ('Valentina', 'Abrile'), ('Valentina', 'Balzotti'), ('Valentina', 'Beccaria'), ('Valentina', 'Bonacorsi'), ('Valentina', 'Bontempi'), ('Valentina', 'Caronti'), ('Valentina', 'Castro'), ('Valentina', 'Cvackova'), ('Valentina', 'Dancenco'), ('Valentina', 'Del Marco'), ('Valentina', 'Fauviau'), ('Valentina', 'Franchini'), ('Valentina', 'Gaggini'), ('Valentina', 'Gazzoli'), ('Valentina', 'Gemini'), ('Valentina', 'Giavazzi'), ('Valentina', 'Gonzalez Ramirez'), ('Valentina', 'Imperio'), ('Valentina', 'Kecman'), ('Valentina', 'Kulikova'), ('Valentina', 'Lia'), ('Valentina', 'Likic'), ('Valentina', 'Losciale'), ('Valentina', 'Mariotto'), ('Valentina', 'Mokrova'), ('Valentina', 'Mortello'), ('Valentina', 'Murgo'), ('Valentina', 'Novelo'), ('Valentina', 'Parrilla'), ('Valentina', 'Piccolo'), ('Valentina', 'Ponomartseva'), ('Valentina', 'Quinones'), ('Valentina', 'Ramirez'), ('Valentina', 'Ronchi'), ('Valentina', 'Rossi'), ('Valentina', 'Ryser'), ('Valentina', 'Salani'), ('Valentina', 'Sassi'), ('Valentina', 'Shleyn'), ('Valentina', 'Solari'), ('Valentina', 'Sottile'), ('Valentina', 'Starkova'), ('Valentina', 'Stephan'), ('Valentina', 'Sulpizio'), ('Valentina', 'Terio'), ('Valentina', 'Tizzano'), ('Valentina', 'Todeschin'), ('Valentina', 'Vargas'), ('Valentina', 'Vasilieva'), ('Valentina Andrea', 'Vasquez Pongruber'), ('Valentine', 'Bacher'), ('Valentine', 'Confalonieri'), ('Valentine', 'Vernaz'), ('Valentini', 'Grammatikopoulou'), ('Valentyna', 'Ivakhnenko'), ('Valeri', 'Zatulko'), ('Valeria', 'Bhunu'), ('Valeria', 'Bondarenko'), ('Valeria', 'Campigotto'), ('Valeria', 'Casillo'), ('Valeria', 'Cealic'), ('Valeria', 'Cecchetti'), ('Valeria', 'Dag'), ('Valeria', 'Danilova'), ('Valeria', 'Detogni'), ('Valeria', 'Faccinetti'), ('Valeria', 'Filiaeva'), ('Valeria', 'Franco'), ('Valeria', 'Galouza'), ('Valeria', 'Gorlats'), ('Valeria', 'Khazova'), ('Valeria', 'Koussenkova'), ('Valeria', 'Lapis'), ('Valeria', 'Macloughlin'), ('Valeria', 'Madaro'), ('Valeria', 'Mantilla'), ('Valeria', 'Mishina'), ('Valeria', 'Munoz Velasquez'), ('Valeria', 'Muratori'), ('Valeria', 'Nikolaev'), ('Valeria', 'Osadchenko'), ('Valeria', 'Patiuk'), ('Valeria', 'Pertsukhova'), ('Valeria', 'Petrovich'), ('Valeria', 'Podda'), ('Valeria', 'Prosperi'), ('Valeria', 'Pulido Velasco'), ('Valeria', 'Salazar'), ('Valeria', 'Savinykh'), ('Valeria', 'Solovieva'), ('Valeria', 'Strappa'), ('Valeria', 'Valente'), ('Valeria Paulina', 'Humpierres Novikow'), ('Valerie', 'Batut'), ('Valerie', 'Caulley'), ('Valerie', 'Chin'), ('Valerie', 'De La Noye'), ('Valerie', 'Feger'), ('Valerie', 'Forbes'), ('Valerie', 'Franta'), ('Valerie', 'Ledroff'), ('Valerie', 'Litzell'), ('Valerie', 'Meise'), ('Valerie', 'Menob'), ('Valerie', 'Pavlickova'), ('Valerie', 'Poulos'), ('Valerie', 'Quiceno'), ('Valerie', 'Saillant'), ('Valerie', 'Tan'), ('Valerie', 'Tetreault'), ('Valerie', 'Verhamme'), ('Valerie', 'Verrier Diaconescu'), ('Valerie', 'Ziegenfuss'), ('Valerie Ann', 'Valencia Castillo'), ('Valeriia', 'Bazhanova'), ('Valeriya', 'Boyanovska'), ('Valeriya', 'Deminova'), ('Valeriya', 'Denisenko'), ('Valeriya', 'Korotina'), ('Valeriya', 'Maksimchenko'), ('Valeriya', 'Olyanovskaya'), ('Valeriya', 'Pogrebnyak'), ('Valeriya', 'Rozenkova'), ('Valeriya', 'Savina'), ('Valeriya', 'Solopaeva'), ('Valeriya', 'Strakhova'), ('Valeriya', 'Urzhumova'), ('Valeriya', 'Yushchenko'), ('Valeriya', 'Zeleva'), ('Valeriya', 'Zhupanska'), ('Valeryia', 'Kulikouskaya'), ('Valisoa', 'Rafolomanantsiatosika'), ('Van', 'Nguyen Ai Ngoc'), ('Van Ai Ngog', 'Nguyen'), ('Vana', 'Mrazovic'), ('Vana', 'Sutalo'), ('Vanda', 'Lukacs'), ('Vandana', 'Murali'), ('Vanesa', 'Furlanetto'), ('Vanesa', 'Pappa'), ('Vanesa Rut', 'Ansotegui'), ('Vanessa', 'Alonso Rodriguez'), ('Vanessa', 'Basora'), ('Vanessa', 'Boey'), ('Vanessa', 'Brilleman'), ('Vanessa', 'Caddick'), ('Vanessa', 'Castellano'), ('Vanessa', 'De Los Heros'), ('Vanessa', 'Devesa'), ('Vanessa', 'Dobson'), ('Vanessa', 'Dzmurova'), ('Vanessa', 'Elmendorp'), ('Vanessa', 'Erlan'), ('Vanessa', 'Esteves'), ('Vanessa', 'Flores'), ('Vanessa', 'Foltinger Garcia'), ('Vanessa', 'Guerrero'), ('Vanessa', 'Gutierrez'), ('Vanessa', 'Henke'), ('Vanessa', 'Heute'), ('Vanessa', 'Kendall'), ('Vanessa', 'Krauth'), ('Vanessa', 'Kretsch'), ('Vanessa', 'Lima'), ('Vanessa', 'Manya Arranz'), ('Vanessa', 'Masalles'), ('Vanessa', 'Matthys'), ('Vanessa', 'Menga'), ('Vanessa', 'Moor'), ('Vanessa', 'Nieto'), ('Vanessa', 'Pallucci'), ('Vanessa', 'Pinto'), ('Vanessa', 'Rebelo'), ('Vanessa', 'Ridolfo'), ('Vanessa', 'Rooks'), ('Vanessa', 'Stiegner'), ('Vanessa', 'Timm'), ('Vanessa', 'Valdez Casas'), ('Vanessa', 'Valdivia'), ('Vanessa', 'Webb'), ('Vanessa', 'Wellauer'), ('Vanessa', 'Wong'), ('Vanessa', 'Zemp'), ('Vanessa Olimpia', 'Rauta'), ('Vanessa Steffi', 'Ortiz Perez'), ('Vania', 'Apodaca'), ('Vania', 'Ivanova'), ('Vania', 'King'), ('Vanina', 'Casanova'), ('Vaniya', 'Dangwal'), ('Vanja', 'Babunski'), ('Vanja', 'Corovic'), ('Vanja', 'Galijasevic'), ('Vanja', 'Klaric'), ('Vanja', 'Mikovic'), ('Vanja', 'Radunovic'), ('Vanja', 'Tomic'), ('Vannesa', 'Gunawan'), ('Vanshika', 'Sawhney'), ('Vanya', 'Kelleher'), ('Varalee', 'Sureephong'), ('Varanya', 'Vijuksanaboon'), ('Varatchaya', 'Wongteanchai'), ('Varinia', 'Soler Bravo'), ('Varita', 'Sureephong'), ('Varmila', 'Trneckova'), ('Varsha', 'Meena'), ('Varsha', 'Reddy'), ('Varsha', 'Shivashankar'), ('Varunya', 'Chandrashekar'), ('Varunya', 'Wongteanchai'), ('Varvara', 'Flink'), ('Varvara', 'Galanina'), ('Varvara', 'Gracheva'), ('Varvara', 'Kuksina'), ('Varvara', 'Kuznetsova'), ('Varvara', 'Lepchenko'), ('Varvara', 'Timofeeva'), ('Vasanti', 'Shinde'), ('Vasavi', 'Ganesan'), ('Vasiliki', 'Karvouni'), ('Vasiliki', 'Simouli'), ('Vasilisa', 'Aponasenko'), ('Vasilisa', 'Bardina'), ('Vasilisa', 'Davydova'), ('Vasilisa', 'Mikhaylova'), ('Vasilisa', 'Polunova'), ('Vassiliki', 'Doriza'), ('Vassiliki', 'Giannakaki'), ('Vasundara', 'Raju'), ('Vaszilisza', 'Bulgakova'), ('Veera', 'Nurmi'), ('Velena', 'Mamutova'), ('Velina', 'Ivanova'), ('Vendula', 'Plechata'), ('Vendula', 'Zovincova'), ('Veneta', 'Karatchomakova'), ('Venia', 'Yeung'), ('Venus', 'Williams'), ('Vera', 'Aleshcheva'), ('Vera', 'Bessonova'), ('Vera', 'Dushevina'), ('Vera', 'Johansen'), ('Vera', 'Kostelnikova'), ('Vera', 'Lapko'), ('Vera', 'Leontieva'), ('Vera', 'Markovic'), ('Vera', 'Ploner'), ('Vera', 'Sakalouskaya'), ('Vera', 'Sukova'), ('Vera', 'Tere'), ('Vera', 'Turkhaneli'), ('Vera', 'Tverdikova'), ('Vera', 'Vitels'), ('Vera', 'Zhukovets'), ('Vera', 'Zvonareva'), ('Vera Carina', 'Elter'), ('Vera Lucia', 'Giugni'), ('Verdiana', 'Verardi'), ('Vered', 'Bert'), ('Verena', 'Amesbauer'), ('Verena', 'Beller'), ('Verena', 'Cerny'), ('Verena', 'Gantschnig'), ('Verena', 'Hofer'), ('Verena', 'Joechle'), ('Verena', 'Meliss'), ('Verena', 'Piccolo'), ('Verena', 'Santos'), ('Verena', 'Schmid'), ('Verena Jane', 'Scott'), ('Verenisse', 'Munguia'), ('Verginie', 'Tchakarova'), ('Verica', 'Spirovska'), ('Verolalaina Helene', 'Radilofe'), ('Veronica', 'Burton'), ('Veronica', 'Castro'), ('Veronica', 'Cepede Royg'), ('Veronica', 'Coslovich'), ('Veronica', 'Del Piano'), ('Veronica', 'Garcia'), ('Veronica', 'Garcia Herrera'), ('Veronica', 'Goude'), ('Veronica', 'Grigis'), ('Veronica', 'Lacerda'), ('Veronica', 'Martinez'), ('Veronica', 'Miroshnichenko'), ('Veronica', 'Napolitano'), ('Veronica', 'Osogo Nabwire'), ('Veronica', 'Platz'), ('Veronica', 'Popovici'), ('Veronica', 'Queen'), ('Veronica', 'Rizhik Urteaga'), ('Veronica', 'Sartini'), ('Veronica', 'Saucedo'), ('Veronica', 'Seruca'), ('Veronica', 'Spiegel'), ('Veronica', 'Stele'), ('Veronica', 'Verzoletto'), ('Veronica', 'Virseda Sanchez'), ('Veronica M', 'Corning'), ('Veronica Ruo Qi', 'Li'), ('Veronika', 'Adami'), ('Veronika', 'Babayan'), ('Veronika', 'Bacikova'), ('Veronika', 'Badurova'), ('Veronika', 'Bencova'), ('Veronika', 'Birioukova'), ('Veronika', 'Blaskova'), ('Veronika', 'Buche'), ('Veronika', 'Chvojkova'), ('Veronika', 'Ciganikova'), ('Veronika', 'Ctvrtnickova'), ('Veronika', 'Domagala'), ('Veronika', 'Dostalova'), ('Veronika', 'Erjavec'), ('Veronika', 'Gardazari'), ('Veronika', 'Jakimicova'), ('Veronika', 'Kapshay'), ('Veronika', 'Koberlingova'), ('Veronika', 'Koksova'), ('Veronika', 'Kolarova'), ('Veronika', 'Kudermetova'), ('Veronika', 'Levchenko'), ('Veronika', 'Litvinskaya'), ('Veronika', 'Makovey'), ('Veronika', 'Maksimchyk'), ('Veronika', 'Martinek'), ('Veronika', 'Mayer'), ('Veronika', 'Mazalova'), ('Veronika', 'Ovcacikova'), ('Veronika', 'Pribylova'), ('Veronika', 'Raimrova'), ('Veronika', 'Safarova'), ('Veronika', 'Sepp'), ('Veronika', 'Sigutova'), ('Veronika', 'Stotyka'), ('Veronika', 'Studena'), ('Veronika', 'Subertova'), ('Veronika', 'Tobolova'), ('Veronika', 'Vlkovska'), ('Veronika', 'Zatekova'), ('Veronika', 'Zavodska'), ('Veronique', 'Luksich'), ('Veronique', 'Parke Bedard'), ('Verusa', 'Dias'), ('Vesilina', 'Ivanova'), ('Vesna', 'Dolonc'), ('Vesna', 'Sevsek'), ('Vicki', 'Beggs'), ('Vicki', 'Lancaster Kerr'), ('Vicki', 'Marler'), ('Vicki', 'Nelson Dunbar'), ('Vicki', 'Saxegaard'), ('Vickie', 'Paynter'), ('Vicky', 'Barker'), ('Vicky', 'Berner'), ('Vicky', 'Geurinckx'), ('Vicky', 'Lee'), ('Vicky', 'Maes'), ('Vicky', 'Michaud'), ('Vicky', 'Navia'), ('Vicky', 'Stuckey'), ('Vicky', 'Van De Peer'), ('Vicky Irma Margaretha', 'Oktaviana'), ('Victoire', 'Mfoumouangana'), ('Victoria', 'Abbassi'), ('Victoria', 'Allen'), ('Victoria', 'Azarenka'), ('Victoria', 'Bakhtadze'), ('Victoria', 'Beck'), ('Victoria', 'Bensimon'), ('Victoria', 'Bosio'), ('Victoria', 'Brook'), ('Victoria', 'Broyak'), ('Victoria', 'Chavleishvili'), ('Victoria', 'Chehal'), ('Victoria', 'Courmes Benedetti'), ('Victoria', 'Cservenyak'), ('Victoria', 'Davies'), ('Victoria', 'Dimuzio'), ('Victoria', 'Duval'), ('Victoria', 'Emma'), ('Victoria', 'Flores'), ('Victoria', 'Ford'), ('Victoria', 'Giannaccini'), ('Victoria', 'Hall'), ('Victoria', 'Hooper'), ('Victoria', 'Hunt'), ('Victoria', 'Jorjoliani'), ('Victoria', 'Kan'), ('Victoria', 'Larriere'), ('Victoria', 'Livanova'), ('Victoria', 'Lozano'), ('Victoria', 'Mikhaylova'), ('Victoria', 'Muntean'), ('Victoria', 'Naef'), ('Victoria', 'Ocheva'), ('Victoria', 'Pahlett'), ('Victoria', 'Quintero'), ('Victoria', 'Rey'), ('Victoria', 'Rode Bager'), ('Victoria', 'Rodriguez'), ('Victoria', 'Rogers'), ('Victoria', 'Saldh'), ('Victoria', 'Schnell Jacobsen'), ('Victoria', 'Schweizer'), ('Victoria', 'Sharpley'), ('Victoria', 'Slavina'), ('Victoria', 'Smirnova'), ('Victoria', 'Todorova'), ('Victoria', 'Tournebize'), ('Victoria', 'Tseitlin'), ('Victoria', 'Vaara'), ('Victoria', 'Valls Comamala'), ('Victoria', 'Vorontsova'), ('Victoria', 'Voznesenskaya'), ('Victoria', 'Walter'), ('Victoria', 'Wuilloud'), ('Victoria', 'Yu'), ('Victoria', 'Zabala'), ('Victoria', 'Zotter'), ('Victoria', 'Zukowski'), ('Victoria Ariadna', 'Beccio'), ('Victoria Corina', 'Mirea'), ('Victoria Fernanda', 'Angulo Pimentel'), ('Vida', 'Mulec'), ('Vida Lina', 'Alpuerto'), ('Vidushi', 'Gupta'), ('Viet Ha', 'Ngo'), ('Vija', 'Vuskalns'), ('Vijayalakshmi', 'Radhakrishnan'), ('Viktoria', 'Bardarova'), ('Viktoria', 'Bjork'), ('Viktoria', 'Bucalic'), ('Viktoria', 'Gimberg'), ('Viktoria', 'Glotova'), ('Viktoria', 'Kamenskaya'), ('Viktoria', 'Konstantinova'), ('Viktoria', 'Kutuzova'), ('Viktoria', 'Kuzmova'), ('Viktoria', 'Laskutova'), ('Viktoria', 'Lytovchenko'), ('Viktoria', 'Malova'), ('Viktoria', 'Matejevic'), ('Viktoria', 'Milvidskaia'), ('Viktoria', 'Morvayova'), ('Viktoria', 'Stojanova'), ('Viktoria', 'Stoklasova'), ('Viktoria', 'Surova'), ('Viktoria', 'Tepluk'), ('Viktoria', 'Viduka'), ('Viktoria', 'Yemialyanava'), ('Viktoriia', 'Dema'), ('Viktoriia', 'Fedorova'), ('Viktoriia', 'Kalinina'), ('Viktorija', 'Golubic'), ('Viktorija', 'Rajicic'), ('Viktoriya', 'Agryutenkova'), ('Viktoriya', 'Bogoslovska'), ('Viktoriya', 'Bon'), ('Viktoriya', 'Gogol'), ('Viktoriya', 'Kanapatskaya'), ('Viktoriya', 'Karmenova'), ('Viktoriya', 'Klimushkina'), ('Viktoriya', 'Lushkova'), ('Viktoriya', 'Petrenko'), ('Viktoriya', 'Semyrodenko'), ('Viktoriya', 'Serenkova'), ('Viktoriya', 'Tomova'), ('Viktoriya', 'Yankovskaya'), ('Viktoriya', 'Zheleva'), ('Viktorya', 'Gorodetsky'), ('Viktoryia', 'Kisialeva'), ('Viktoryia', 'Mun'), ('Viktoryia', 'Viaklenka'), ('Viky', 'Nunez Fuentes'), ('Villa', 'Daniella'), ('Vilma', 'Berglund'), ('Vilma', 'Macheda'), ('Vilma Y', 'Gomez'), ('Vilmarie', 'Castellvi'), ('Vimbai Patience', 'Ugaro'), ('Vinca', 'Rampen'), ('Vincenza', 'Ciraolo'), ('Vincenza', 'Procacci'), ('Vincerzo', 'Napolio'), ('Vinciane', 'Remy'), ('Vindya', 'Dayananda'), ('Vineeta', 'Singh'), ('Vinitha', 'Dikshit'), ('Vinja', 'Lehmann'), ('Viola', 'Wacker'), ('Violeta', 'Fabe Martin'), ('Violeta', 'Jankovic'), ('Violetta', 'Bagrova'), ('Violetta', 'Degtiareva'), ('Violetta', 'Milkova'), ('Violetta', 'Rankic'), ('Violetta', 'Shatalova'), ('Violetta', 'Tosmuk'), ('Violette', 'Ahn'), ('Violette', 'Huck'), ('Violette', 'Percy'), ('Virag', 'Csurgo'), ('Virag', 'Nemeth'), ('Virginia', 'Bigliardi'), ('Virginia', 'Brown'), ('Virginia', 'Caceres'), ('Virginia', 'Ciccone'), ('Virginia', 'Colmenero'), ('Virginia', 'Donda'), ('Virginia', 'Gollut'), ('Virginia', 'Humphreys Davies'), ('Virginia', 'Oteiza'), ('Virginia', 'Prato'), ('Virginia', 'Romero Barrio'), ('Virginia', 'Ruano Pascual'), ('Virginia', 'Ruzici'), ('Virginia', 'Sadi'), ('Virginia', 'Tomatis'), ('Virginia', 'Tournebise'), ('Virginia', 'Trifonova'), ('Virginia', 'Ugrcyc'), ('Virginia', 'Varga'), ('Virginia', 'Wade'), ('Virginia', 'Zaffaroni'), ('Virginia Eliana', 'Tica'), ('Virginie', 'Ayassamy'), ('Virginie', 'Buisson'), ('Virginie', 'Cappoen'), ('Virginie', 'Favory'), ('Virginie', 'Massart'), ('Virginie', 'Oulevay'), ('Virginie', 'Paquet'), ('Virginie', 'Pichet'), ('Virginie', 'Rabeau'), ('Virginie', 'Razzano'), ('Virginie', 'Van Der Meersch'), ('Virpi', 'John'), ('Vishakha', 'Sheoran'), ('Vishesh', 'Vkc'), ('Vishika', 'Chhetri'), ('Vishnu Preetham', 'Mahalingam'), ('Visnja', 'Visnjic'), ('Visnja', 'Vuletic'), ('Vita', 'Kaminskiate'), ('Vita', 'Moskaliova'), ('Vita', 'Taher'), ('Vitalia', 'Diatchenko'), ('Vitalia', 'Stamat'), ('Vitaliya', 'Nekhoroshikh'), ('Vitoria', 'Okuyama'), ('Vittoria', 'Avvantaggiati'), ('Vittoria', 'Beolchi'), ('Vittoria', 'Maglio'), ('Vittoria', 'Perugini'), ('Vivian', 'Acra'), ('Vivian', 'Cassimer'), ('Vivian', 'Glozman'), ('Vivian', 'Hansen'), ('Vivian', 'Hegeman'), ('Vivian', 'Heisen'), ('Vivian', 'Janecki'), ('Vivian', 'Segnini'), ('Vivian', 'Torrez'), ('Vivian', 'Wolff'), ('Vivian', 'Zlatanova'), ('Vivian Mayumi', 'Toma'), ('Viviana', 'Bolivar'), ('Viviana', 'Ferencak'), ('Viviana', 'Mracnova Burgess'), ('Viviana', 'Onorato'), ('Viviana', 'Rivero'), ('Viviana', 'Rojas Millan'), ('Viviana', 'Segal'), ('Viviana', 'Tedino Morandi'), ('Viviana', 'Valdovinos'), ('Viviana', 'Yrureta'), ('Viviane', 'Marani'), ('Vivicca', 'Andersson'), ('Vivien', 'Abraham'), ('Vivien', 'Juhaszova'), ('Vivien', 'Klein'), ('Vivien', 'Laszloffy'), ('Vivien', 'Sandberg'), ('Vivien', 'Sepuka'), ('Vivien', 'Silfany Tony'), ('Vivien', 'Svirkovska'), ('Vivien', 'Teglas'), ('Vivien', 'Weber'), ('Vivienne', 'Kulicke'), ('Vivienne', 'Vierin'), ('Vlada', 'Chernikova'), ('Vlada', 'Ekshibarova'), ('Vlada', 'Filinskaya'), ('Vlada', 'Kirilovska'), ('Vlada', 'Koval'), ('Vlada', 'Medvedcova'), ('Vlada', 'Svarkovskaya'), ('Vlada', 'Zvereva'), ('Vladica', 'Babic'), ('Vladimira', 'Uhlirova'), ('Vladislava', 'Kutuzova'), ('Vladislava', 'Kuzmenkova'), ('Vladlena', 'Petushkova'), ('Vladlena', 'Samenkova'), ('Vladyslava', 'Zanosiyenko'), ('Vlasta', 'Dammova'), ('Vlasta', 'Kodesova'), ('Vlatka', 'Jovanovic'), ('Vojislava', 'Lukic'), ('Volha', 'Barshcheuskaya'), ('Volha', 'Dubovik'), ('Volha', 'Duko'), ('Volha', 'Kalodzitsa'), ('Voni', 'Darlina'), ('Vonjiniana', 'Rasamuel'), ('Voralak', 'Vichienchai'), ('Vorranavaporn', 'Vorrarattanamongkol'), ('Vroni', 'Hinterseer'), ('Vrushali', 'Gawankar'), ('Vukosava', 'Medojevic'), ('Wai Yiu', 'Tsang'), ('Waka', 'Kirihata'), ('Wakana', 'Ichikawa'), ('Walena', 'White'), ('Wallis', 'Vitis'), ('Wan Ching', 'Tuan'), ('Wan Ting', 'Lin'), ('Wan Ting', 'Liu'), ('Wan Yi', 'Sweeting'), ('Wanda', 'Ferraz De Oliveira'), ('Wanda', 'Rodriguez'), ('Wanjika', 'Ngaruiya'), ('Wanning', 'Zhu'), ('Wanrong', 'Li'), ('Wanyu', 'Tang'), ('Wanyuanyun', 'Jin'), ('Warona', 'Mdlulwa'), ('Watsachol', 'Sawasdee'), ('Waya', 'Walalangi'), ('Wei', 'Hua'), ('Wei', 'Na'), ('Wei', 'Ni'), ('Wei', 'Qie'), ('Wei', 'Tang'), ('Wei Fang', 'Kung'), ('Wei Juan', 'Liu'), ('Wei Na', 'Liu'), ('Wei Ping', 'Lee'), ('Wei Yen', 'Lai'), ('Weijia', 'Sun'), ('Welma', 'Luus'), ('Wen', 'Sun'), ('Wen', 'Zhao'), ('Wen Bo', 'Wang'), ('Wen Hao', 'Wu'), ('Wen Hsin', 'Hsu'), ('Wen Ling', 'Wang'), ('Wen Tzu', 'Lai'), ('Wendy', 'Appleby'), ('Wendy', 'Barlow'), ('Wendy', 'Brown'), ('Wendy', 'Burkhart'), ('Wendy', 'Fix'), ('Wendy', 'Frazer'), ('Wendy', 'Galan Dominguez'), ('Wendy', 'Gilchrist'), ('Wendy', 'Hall'), ('Wendy', 'Kong'), ('Wendy', 'Maccloskey'), ('Wendy', 'Moore'), ('Wendy', 'Nelson'), ('Wendy', 'Ouwendijk'), ('Wendy', 'Overton'), ('Wendy', 'Pattenden'), ('Wendy', 'Pearson'), ('Wendy', 'Prausa'), ('Wendy', 'Shipp'), ('Wendy', 'Slaughter'), ('Wendy', 'Tomlinson'), ('Wendy', 'Turnbull'), ('Wendy', 'Wood'), ('Wendy Qi Wen', 'Zhang'), ('Weronika', 'Bloczynska'), ('Weronika', 'Falkowska'), ('Weronika', 'Halicka'), ('Weronika Jasmina', 'Forys'), ('Weyli', 'Chang'), ('Whitney', 'Benik'), ('Whitney', 'Byrd'), ('Whitney', 'Chappell'), ('Whitney', 'Deason'), ('Whitney', 'Jones'), ('Whitney', 'Laiho'), ('Whitney', 'Mccray'), ('Whitney', 'Osuigwe'), ('Whitney', 'Ritchie'), ('Whitney', 'Robards'), ('Whitney', 'Wilson'), ('Whitney', 'Wolf'), ('Whitney P', 'Kay'), ('Wibeke', 'Clifford'), ('Widhi', 'Setyorini'), ('Wiem', 'Ben Sedrine'), ('Wijitbanjong', 'Pakkaro'), ('Wiktoria', 'Kulik'), ('Wilawan', 'Choptang'), ('Wiltrud', 'Probst'), ('Wing Ka', 'Lin'), ('Wing Kiu Jacqueline', 'Lam'), ('Wing Man', 'Lin'), ('Wing Shan', 'Cheung'), ('Wing Sze', 'Yu'), ('Wing Yau Venise', 'Chan'), ('Winnie', 'Wooldridge'), ('Wioletta', 'Kaczmarek'), ('Wiveca', 'Swarting'), ('Wl Joanne', 'Koh'), ('Woo Keoung', 'Lee'), ('Woyla', 'Waluyo'), ('Wu', 'Mei Qi'), ('Wukirasih', 'Sawondari'), ('Wushuang', 'Zheng'), ('Wynne', 'Prakusya'), ('Xanthe', 'Adams'), ('Xantippe', 'Vassiliadou'), ('Xenia', 'Anastasiados'), ('Xenia', 'De Luna'), ('Xenia', 'Knoll'), ('Xenia', 'Oberson'), ('Xenia', 'Roman'), ('Xenia', 'Samoilova'), ('Xenia', 'Suworowa'), ('Xenia', 'Tsilimigra'), ('Xeniya', 'Prokopchuk'), ('Xer Li', 'Woo'), ('Xi', 'Bai'), ('Xi', 'Jin'), ('Xi', 'Lu'), ('Xi Jing', 'Hong'), ('Xi Wei', 'Cai'), ('Xi Yao', 'Wang'), ('Xia', 'Sheng'), ('Xia Ling', 'Li'), ('Xianghong', 'Yin'), ('Xiangruyi', 'Ji'), ('Xianlin', 'Zeng'), ('Xiao', 'Fu'), ('Xiao', 'Zhou'), ('Xiao Jing', 'Lu'), ('Xiao Xuan', 'Guo'), ('Xiao Yu', 'Zhu'), ('Xiaodi', 'You'), ('Xiaojing', 'Lu'), ('Xiaorong', 'Dong'), ('Xiaoxi', 'Zhao'), ('Ximena', 'Aguilar'), ('Ximena', 'Hermoso'), ('Ximena', 'Mino'), ('Ximena', 'Rodriguez'), ('Ximena', 'Siles Luna'), ('Xin', 'Wen'), ('Xin', 'Yang'), ('Xin Fen', 'Pu'), ('Xin Tong', 'Liu'), ('Xin Yi', 'Li'), ('Xin Yu', 'Wang'), ('Xinyi', 'Jiang'), ('Xinyu', 'Cai'), ('Xinyu', 'Gao'), ('Xinyu', 'Jiang'), ('Xinyun', 'Han'), ('Xiuyuan', 'Li'), ('Xixi', 'Feng'), ('Xiyu', 'Wang'), ('Xochitl', 'Escobedo'), ('Xu Liu', 'Sun'), ('Xuan Yu', 'Guo'), ('Xuanshuo', 'Ou'), ('Xue', 'Cao'), ('Xue', 'Zhang'), ('Y', 'FARID'), ('Ya', 'Zhou'), ('Ya Chi', 'Yang'), ('Ya Fang', 'Tsai'), ('Ya Hsin', 'Lee'), ('Ya Hsuan', 'Lee'), ('Ya Hui', 'Lin'), ('Ya Ming', 'Lin'), ('Ya Qi', 'Deng'), ('Ya Ting', 'Chang'), ('Ya Wen', 'Lee'), ('Ya Ying', 'Wang'), ('Ya Yun', 'Pai'), ('Yaar Ester', 'Shafir'), ('Yada', 'Vasupongchai'), ('Yadira', 'Geara'), ('Yadira', 'Padilla'), ('Yadira', 'Rubio'), ('Yaeko', 'Matsuda'), ('Yael', 'Anays'), ('Yael', 'Beckman'), ('Yael', 'Glitzenstein'), ('Yael', 'Segal'), ('Yael', 'Shavit'), ('Yafan', 'Wang'), ('Yagmur', 'Akdemir'), ('Yagmur', 'Akgul'), ('Yagmur Basak', 'Gone'), ('Yaimaris', 'Paterson Crespo'), ('Yaiza', 'Franco'), ('Yaiza', 'Goni Blanco'), ('Yamila', 'Halle'), ('Yamile', 'Cordova'), ('Yamile', 'Fors Guerra'), ('Yamini', 'Reddy'), ('Yamini', 'Thukkaiandi'), ('Yamit', 'Vodovoz'), ('Yan', 'Chen'), ('Yan', 'Sun'), ('Yan', 'Tang'), ('Yan', 'Wang'), ('Yan', 'Zhang'), ('Yan Chong', 'Chen'), ('Yan Hua', 'Dong'), ('Yan Ling', 'Li'), ('Yan Sr', 'Zhang'), ('Yan Tung', 'Ki'), ('Yan Ze', 'Xie'), ('Yana', 'Buchina'), ('Yana', 'Erkeeva'), ('Yana', 'Filyushina'), ('Yana', 'Grechkina'), ('Yana', 'Khon'), ('Yana', 'Kireeva'), ('Yana', 'Kochneva'), ('Yana', 'Koroleva'), ('Yana', 'Levchenko'), ('Yana', 'Mathias'), ('Yana', 'Mogilnitskaya'), ('Yana', 'Morderger'), ('Yana', 'Nemerovski'), ('Yana', 'Orlova'), ('Yana', 'Parshina'), ('Yana', 'Sadovskaya'), ('Yana', 'Shulaeva'), ('Yana', 'Sizikova'), ('Yana', 'Sluzhiteleva'), ('Yana', 'Tashaev'), ('Yana', 'Yurchenko'), ('Yana', 'Zavialova'), ('Yana', 'Zvarich'), ('Yanchong', 'Chen'), ('Yanelis', 'Jimenez Estevez'), ('Yanet', 'Blanco Puentes'), ('Yanet', 'Nunez Mojarena'), ('Yanet', 'Yanez'), ('Yang', 'Lee'), ('Yang', 'Liu'), ('Yang', 'Pang'), ('Yang', 'Shen'), ('Yang Guang', 'Zhao'), ('Yang Jin', 'Chung'), ('Yani', 'Genesse'), ('Yanin', 'Wisitwarapron'), ('Yanina', 'Darishina'), ('Yanina', 'Wickmayer'), ('Yanisleidis', 'Fernandez'), ('Yanni', 'Liu'), ('Yao', 'Zhang'), ('Yara', 'Abed'), ('Yara', 'Abou El Ghar'), ('Yarden', 'Akler'), ('Yaroslava', 'Gadiatska'), ('Yaroslava', 'Shvedova'), ('Yaroslava', 'Zhishchenko'), ('Yasemin', 'Cetinel'), ('Yasemin', 'Elgi'), ('Yasemin Ada', 'Boru'), ('Yashu', 'Yang'), ('Yasmeen', 'Ghaoui'), ('Yasmeen', 'Parviz'), ('Yasmin', 'Attia Abdalla'), ('Yasmin', 'Clarke'), ('Yasmin', 'Del Arco'), ('Yasmin', 'Ebada'), ('Yasmin', 'El Kashef'), ('Yasmin', 'Enrich'), ('Yasmin', 'Hamza'), ('Yasmin', 'Hamzawy'), ('Yasmin', 'Kaya'), ('Yasmin', 'Mansouri'), ('Yasmin', 'Schnack'), ('Yasmin', 'Ulrich'), ('Yasmina', 'Demane'), ('Yasmina', 'El Sayed'), ('Yasmina', 'Karimjanova'), ('Yasmine', 'Abou Farah Trigueros'), ('Yasmine', 'Alkema'), ('Yasmine', 'Ansari'), ('Yasmine', 'Ben Abdallah'), ('Yasmine', 'Bengebara'), ('Yasmine', 'Guimaraes'), ('Yasmine', 'Ince'), ('Yasmine', 'Khiri'), ('Yasmine', 'Mansouri'), ('Yasmine', 'Rashad'), ('Yasmine', 'Sahyoun'), ('Yasmine', 'Wagner'), ('Yasmine', 'Xantos'), ('Yasmyn', 'Gulman'), ('Yassamine', 'Boudjadi'), ('Yasuka', 'Shiba'), ('Yasuko', 'Nishimata'), ('Yasuko', 'Saruta'), ('Yasuyo', 'Kajita'), ('Yasuyo', 'Numajiri'), ('Yauheniya', 'Shapaval'), ('Yawna', 'Allen'), ('Yayuk', 'Basuki'), ('Ye Ji', 'Mun'), ('Ye Ji', 'Seo'), ('Ye Jin', 'Kim'), ('Ye Ra', 'Lee'), ('Ye Rin', 'Lee'), ('Ye Xin', 'Ma'), ('Yee', 'Wong'), ('Yee Hong', 'Tan'), ('Yekaterina', 'Dmitrichenko'), ('Yekaterina', 'Gubanova'), ('Yekaterina', 'Morozova'), ('Yekaterina', 'Sagitova'), ('Yelena', 'Nemchen'), ('Yelyzaveta', 'Aksonova'), ('Yelyzaveta', 'Pletnyeva'), ('Yelyzaveta', 'Rachenko'), ('Yen Hua', 'Lu'), ('Yen Ling', 'Chen'), ('Yenise', 'Machado'), ('Yeniseik', 'Gomez'), ('Yenisleydis', 'Calana Rodriguez'), ('Yennifer', 'Delgado'), ('Yenny', 'Kumalawati'), ('Yeon', 'Kim'), ('Yeon Hee', 'Cho'), ('Yeon Ju', 'Kim'), ('Yeon Sook', 'Kim'), ('Yeon Woo', 'Ku'), ('Yeong Won', 'Jeong'), ('Yera', 'Campos Molina'), ('Yesica', 'De Lucas'), ('Yesmine', 'Kharrat'), ('Yessica', 'Garcia'), ('Yessica', 'Medina'), ('Yessmine', 'Zhir'), ('Yevgenia', 'Nudga'), ('Yevgeniya', 'Barysheva'), ('Yevgeniya', 'Kryvoruchko'), ('Yevgeniya', 'Rezepkina'), ('Yevheniia', 'Savranska'), ('Yi', 'Chen'), ('Yi', 'Liu'), ('Yi', 'Wang'), ('Yi', 'Yang'), ('Yi', 'Yuan'), ('Yi', 'Zhong'), ('Yi Chi', 'Ma'), ('Yi Chieh', 'Chen'), ('Yi Ching', 'Chen'), ('Yi Ching', 'Wu'), ('Yi Chun', 'Lan'), ('Yi Dan', 'Liu'), ('Yi Fan', 'Chen'), ('Yi Fan', 'Xu'), ('Yi Jing', 'Zhao'), ('Yi Ju', 'Chen'), ('Yi Miao', 'Zhou'), ('Yi Ming', 'Huang'), ('Yi Ping', 'Chang'), ('Yi Run', 'Han'), ('Yi Tsen', 'Cho'), ('Yi Wei', 'Chen'), ('Yi Ying', 'Lai'), ('Yiching', 'Wu'), ('Yidi', 'Yang'), ('Yifei', 'Yang'), ('Yihong', 'Li'), ('Yijia', 'Shao'), ('Yik Hui', 'Leow'), ('Yik Yan Suki', 'Law'), ('Yimara', 'Figueroa'), ('Yin', 'Chen'), ('Ying', 'Bi'), ('Ying', 'Qian'), ('Ying', 'Wu'), ('Ying', 'Yu'), ('Ying', 'Zhang'), ('Ying Shi', 'Huang'), ('Ying Ying', 'Duan'), ('Yinglak', 'Jittakoat'), ('Yingying', 'Xi'), ('Yisel', 'Nodarse Darvois'), ('Yixuan', 'Li'), ('Ylena', 'In Albon'), ('Ylona Georgiana', 'Ghioroaie'), ('Ylva', 'Kaiser'), ('Yoannis', 'Montesino'), ('Yohko', 'Obata'), ('Yoke', 'Virliana'), ('Yoko', 'Kobayashi'), ('Yoko', 'Mitsuko'), ('Yoko', 'Nagai'), ('Yoko', 'Naito'), ('Yoko', 'Torii'), ('Yolanda', 'Civit Canals'), ('Yolanda', 'Clemot Lerendegui'), ('Yolanda', 'Nieto'), ('Yolanda', 'Rowe'), ('Yolanda', 'Sumarno'), ('Yolanda', 'Vallejo'), ('Yolande', 'Leacock'), ('Yolande', 'Ramirez'), ('Yolandi', 'Beukes'), ('Yolandi', 'Rogers'), ('Yolandi', 'Terblanche Ward'), ('Yolimar', 'Ogando'), ('Yomna', 'Farid'), ('Yonca', 'Gonen'), ('Yone', 'Kamio'), ('Yongyuan', 'Wang'), ('Yoo Mi', 'Jung'), ('Yoo Ri', 'Bae'), ('Yoo Ri', 'Song'), ('Yoon Ja', 'Han'), ('Yoon Jeong', 'Cho'), ('Yoon Young', 'Jeong'), ('Yoriko', 'Kokubun'), ('Yoriko', 'Yamagishi'), ('Yoshi', 'Nagano'), ('Yoshie', 'Yoshihara'), ('Yoshiko', 'Kobayashi'), ('Yoshiko', 'Koizumi'), ('Yoshiko', 'Sasano'), ('Yoshiko', 'Wauke'), ('Yoshimi', 'Kakuta'), ('Yoshimi', 'Kawasaki'), ('Yoshimi', 'Tanaka'), ('Yoshiro', 'Tanaka'), ('Yosr', 'Elmi'), ('You Jin', 'Kang'), ('You Na', 'Sul'), ('You Shu', 'Wu'), ('Youliya', 'Dimitrova'), ('Young Eun', 'Shin'), ('Young Ja', 'Choi'), ('Ysabel', 'Gonzalez Rico'), ('Ysaline', 'Bonaventure'), ('Yu', 'Morishima'), ('Yu', 'Nakashima'), ('Yu', 'Shan'), ('Yu', 'Sun'), ('Yu An', 'Chen'), ('Yu Chu', 'Juan'), ('Yu Chun', 'Huang'), ('Yu Hsien', 'Liu'), ('Yu Jin', 'Ahn'), ('Yu Jin', 'Wang'), ('Yu Lan', 'Liu'), ('Yu Lin', 'Dai'), ('Yu Mei', 'Chen'), ('Yu Mi', 'Hwang'), ('Yu Min', 'Fan Chiang'), ('Yu Ting', 'Deng'), ('Yu Ting', 'Hsieh'), ('Yu Ting', 'Lin'), ('Yu Tong', 'Tang'), ('Yu Xin', 'Miao'), ('Yu Xuan', 'Liu'), ('Yu Yu', 'Zhu'), ('Yuan', 'Jia'), ('Yuan', 'Wen'), ('Yuan', 'Xin'), ('Yuan Yuan', 'Shi'), ('Yuan Yuan', 'Zhong'), ('Yuanyi', 'Yu'), ('Yubarani', 'Banerjee'), ('Yuchia', 'Chen'), ('Yue', 'Fei'), ('Yue', 'Wan'), ('Yue', 'Yu'), ('Yue', 'Yuan'), ('Yue Yue', 'Hu'), ('Yuen Yuen', 'Ling'), ('Yuenu', 'Li'), ('Yufei', 'Long'), ('Yui', 'Chikaraishi'), ('Yui', 'Kiyohara'), ('Yui', 'Nagasawa'), ('Yui', 'Saikai'), ('Yui', 'Takauchi'), ('Yui', 'Takeshima'), ('Yui', 'Tomita'), ('Yui Lynn', 'Miao'), ('Yuika', 'Sano'), ('Yujia', 'Wang'), ('Yuka', 'Hatano'), ('Yuka', 'Hayashi'), ('Yuka', 'Higashi'), ('Yuka', 'Higuchi'), ('Yuka', 'Hosoki'), ('Yuka', 'Hosoya'), ('Yuka', 'Iijima'), ('Yuka', 'Inoue'), ('Yuka', 'Ito'), ('Yuka', 'Izumi'), ('Yuka', 'Kuroda'), ('Yuka', 'Matsumoto'), ('Yuka', 'Mori'), ('Yuka', 'Sadakane'), ('Yuka', 'Tanaka'), ('Yuka', 'Ueda'), ('Yuka', 'Yamaguchi'), ('Yuka', 'Yoshida'), ('Yukako', 'Kato'), ('Yukako', 'Noi'), ('Yukari', 'Kishiro'), ('Yukari', 'Nakashima'), ('Yukari', 'Ochiai'), ('Yukari', 'Tsujimoto'), ('Yuki', 'Ando'), ('Yuki', 'Fujii'), ('Yuki', 'Hasegawa'), ('Yuki', 'Ito'), ('Yuki', 'Kitamura'), ('Yuki', 'Kusunose'), ('Yuki', 'Naito'), ('Yuki', 'Shinada'), ('Yuki', 'Ukai'), ('Yuki Kristina', 'Chiang'), ('Yukie', 'Koizumi'), ('Yukiho', 'Yasuda'), ('Yukiko', 'Fukuzawa'), ('Yukiko', 'Midorikawa'), ('Yukiko', 'Nakanishi'), ('Yukiko', 'Terai'), ('Yukiko', 'Yabe'), ('Yukina', 'Saigo'), ('Yukino', 'Emi'), ('Yukiyo', 'Hara'), ('Yuko', 'Adachi'), ('Yuko', 'Hosoki'), ('Yuko', 'Kimura'), ('Yuko', 'Kurata'), ('Yuko', 'Miyajima'), ('Yuko', 'Uchida'), ('Yukun', 'Zhang'), ('Yulia', 'Almiron Solano'), ('Yulia', 'Berberian'), ('Yulia', 'Bryzgalova'), ('Yulia', 'Chubarova'), ('Yulia', 'Davidyuk'), ('Yulia', 'Fedossova'), ('Yulia', 'Fitri'), ('Yulia', 'Georgieva'), ('Yulia', 'Ikonnikova'), ('Yulia', 'Klimchenko'), ('Yulia', 'Kulikova'), ('Yulia', 'Mirna'), ('Yulia', 'Pilnik'), ('Yulia', 'Putintseva'), ('Yulia', 'Rudavska'), ('Yulia', 'Shishova'), ('Yulia', 'Shupenia'), ('Yulia', 'Sokolovskaya'), ('Yulia', 'Solonitskaya'), ('Yulia', 'Starodubtsewa'), ('Yulia', 'Stupak'), ('Yulia', 'Ustyuzhanina'), ('Yulia', 'Zakharova'), ('Yuliana', 'Fedak'), ('Yuliana', 'Lizarazo'), ('Yuliana', 'Monroy'), ('Yuliana', 'Motyl'), ('Yuliana', 'Umanets'), ('Yulieth Eliana', 'Blanco Molina'), ('Yuliya', 'Alexsandrova'), ('Yuliya', 'Artsiomava'), ('Yuliya', 'Beygelzimer'), ('Yuliya', 'Brotgal'), ('Yuliya', 'Hatouka'), ('Yuliya', 'Hnateyko'), ('Yuliya', 'Kalabina'), ('Yuliya', 'Kim'), ('Yuliya', 'Kulbitskaya'), ('Yuliya', 'Latokhina'), ('Yuliya', 'Lyndina'), ('Yuliya', 'Lysa'), ('Yuliya', 'Mazur'), ('Yuliya', 'Trubachova'), ('Yuly Marcela', 'Tamayo'), ('Yumeka', 'Maeda'), ('Yumeko', 'Yoshitomi'), ('Yumi', 'Kawakita'), ('Yumi', 'Kitano'), ('Yumi', 'Miyazaki'), ('Yumi', 'Nakano'), ('Yumi', 'Takaichi'), ('Yumi', 'Ueda'), ('Yumi', 'Yokoi'), ('Yumiko', 'Kitamura'), ('Yumiko', 'Nakazima'), ('Yun', 'Ku'), ('Yun Hee', 'Kim'), ('Yun Ling', 'Ng'), ('Yun Ning', 'Fu'), ('Yun Qiao', 'Ren'), ('Yuna', 'Ito'), ('Yuna', 'Kikawa'), ('Yuna', 'Saito'), ('Yung Jan', 'Chan'), ('Yunjeong', 'Park'), ('Yunjun', 'Wu'), ('Yunuen', 'Elizarraras Bahena'), ('Yuqi', 'Sheng'), ('Yuri', 'Fujii'), ('Yuri', 'Gonto'), ('Yuri', 'Kasuya'), ('Yuri', 'Kurashima'), ('Yuri', 'Nagano'), ('Yuri', 'Okada'), ('Yuri', 'Sugimoto'), ('Yurika', 'Aoki'), ('Yurika', 'Moriya'), ('Yurika', 'Sema'), ('Yuriko', 'Miyazaki'), ('Yuriko', 'Ono'), ('Yuriko', 'Sakai'), ('Yuriko', 'Shinmura'), ('Yurina', 'Koshino'), ('Yurina', 'Tago'), ('Yus Syazlin Nabila Binti', 'Yusri'), ('Yuseung', 'Suh'), ('Yusleydis', 'Smith Dias'), ('Yusra', 'Hegy'), ('Yusta', 'Dorofeeva'), ('Yuuki', 'Tanaka'), ('Yuumi', 'Totsuka'), ('Yuval', 'Keren'), ('Yuvanna', 'Montalvo'), ('Yuxin', 'Zhang'), ('Yuxuan', 'Zhang'), ('Yuzuka', 'Shimizu'), ('Yvanna', 'Kurlak'), ('Yveline', 'Boy'), ('Yvett', 'Imre'), ('Yvette', 'Basting'), ('Yvette', 'Castillejo'), ('Yvette', 'Flu'), ('Yvette', 'Hyndman'), ('Yvona', 'Brzakova'), ('Yvona', 'Cindric'), ('Yvonne', 'Bruce Tagoe'), ('Yvonne', 'Der Kinderen'), ('Yvonne', 'Doyle'), ('Yvonne', 'Flynn'), ('Yvonne', 'Grubben'), ('Yvonne', 'Klompenhouver'), ('Yvonne', 'Meusburger'), ('Yvonne', 'Neuwirth'), ('Yvonne', 'Stratmann'), ('Yvonne', 'Vermaak'), ('Yvonne Elizabeth', 'Tirado Tejeda'), ('Zaida', 'Abreu'), ('Zaiga', 'Yansone'), ('Zaina', 'Sufi'), ('Zainab', 'Ali Sajjad'), ('Zainab', 'Bendahhou'), ('Zaineb', 'El Houari'), ('Zaklin', 'Bokan'), ('Zala', 'Dovnik'), ('Zalina', 'Khairudinova'), ('Zamira', 'Jadue'), ('Zana', 'Gospodnetic'), ('Zana', 'Zlebnik'), ('Zane', 'Zarina'), ('Zani', 'Barnard'), ('Zanmarie', 'Pienaar'), ('Zanya Manola', 'Sanchez'), ('Zara', 'Lennon'), ('Zara', 'Wolseley'), ('Zarah', 'De Silva'), ('Zarah', 'Razafimahatratra'), ('Zarema', 'Mekhtieva'), ('Zarina', 'Diyas'), ('Zarina', 'Galvan'), ('Zarina', 'Jumajanova'), ('Zarina', 'Yunusalieva'), ('Zaruhi', 'Harutyunyan'), ('Zdenka', 'Malkova'), ('Zdenka', 'Videnova'), ('Ze Xin', 'Pu'), ('Zeel', 'Desai'), ('Zehra Lara', 'Tekbas'), ('Zeina', 'El Tawil'), ('Zeineb', 'Ben Hamida'), ('Zejda', 'Veljacic'), ('Zelda', 'Kuhn'), ('Zeljana', 'Radicevic'), ('Zeljka', 'Gavrilovic'), ('Zena', 'Williams'), ('Zenda', 'Liess'), ('Zerene', 'Reyes'), ('Zerina', 'Gozhdari'), ('Zeynep', 'Ates'), ('Zeynep', 'Ay'), ('Zeynep', 'Cakirer'), ('Zeynep', 'Erman'), ('Zeynep', 'Gurkaynak'), ('Zeynep', 'Inanli'), ('Zeynep', 'Nalbantoglu'), ('Zeynep', 'Ozbarlas'), ('Zeynep', 'Saricam'), ('Zeynep', 'Sonmez'), ('Zeynep  Sena', 'Sarioglan'), ('Zeynep Asli', 'Naibi'), ('Zeynep Aysu', 'Yavuz'), ('Zeynep Melis', 'Altinay'), ('Zeynep Naz', 'Ozturk'), ('Zhamilia', 'Duisheeva'), ('Zhanelya', 'Turarbek'), ('Zhangwenli', 'Yan'), ('Zhanlan', 'Wei'), ('Zhanna', 'Nemykina'), ('Zhanna', 'Panfilkina'), ('Zhaoxuan', 'Yang'), ('Zhen', 'Yan'), ('Zhen Zhen', 'Xiang'), ('Zheng', 'Wang'), ('Zhi Huan Eva', 'Chen'), ('Zhi Rong', 'Liu'), ('Zhi Xian', 'Guo'), ('Zhi Yan', 'Ye'), ('Zhibek', 'Kulambayeva'), ('Zhijie', 'Ma'), ('Zhima', 'Du'), ('Zhou', 'Mingjun'), ('Zhuo Ma', 'Ge Rong'), ('Zhuoma', 'Ni Ma'), ('Zi', 'Yan'), ('Zi', 'Yang'), ('Zi Jun', 'Yang'), ('Zi Xuan', 'Ma'), ('Zi Yi', 'Wang'), ('Ziarla', 'Battad'), ('Zihaida', 'Shantalova'), ('Zina', 'Bretzel'), ('Zina', 'Garrison'), ('Zina', 'Graves'), ('Zina', 'Mehikic'), ('Zina', 'Monteiro'), ('Zineb', 'El Ouazzani'), ('Zineb', 'Hilali'), ('Zineb', 'Ibnmajdoub'), ('Zineb', 'Rajib'), ('Zinovia', 'Vaneva'), ('Ziqi', 'Hou'), ('Zita', 'Horanyi'), ('Ziva', 'Grasic'), ('Ziyi', 'Yang'), ('Ziyin', 'Zhu'), ('Ziyu', 'Wang'), ('Ziyue', 'Sun'), ('Zlatka', 'Petrova'), ('Zobaida', 'Mottola'), ('Zoe', 'Bambridge'), ('Zoe', 'Bourbotte'), ('Zoe', 'Doronjski'), ('Zoe', 'Hitt'), ('Zoe', 'Hives'), ('Zoe', 'Imes'), ('Zoe', 'Kruger'), ('Zoe', 'Mellis'), ('Zoe', 'Richard'), ('Zoe Adeline', 'Katz'), ('Zoe Gwen', 'Scandalis'), ('Zoel', 'Kastelic'), ('Zofia', 'Kulig'), ('Zoi', 'Meers'), ('Zongzhen', 'Li'), ('Zora', 'Mark'), ('Zora', 'Vlckova'), ('Zorana', 'Anastasijevic'), ('Zorana', 'Samardzic'), ('Zorana', 'Stefanovic'), ('Zorayma', 'Arreola'), ('Zorica', 'Glisic'), ('Zorica', 'Petrov'), ('Zorica', 'Spasojevic'), ('Zoziya', 'Kardava'), ('Zsofia', 'Broszmann'), ('Zsofia', 'Csapo'), ('Zsofia', 'Golopencza'), ('Zsofia', 'Gubacsi'), ('Zsofia', 'Miko'), ('Zsofia', 'Susanyi'), ('Zsofia', 'Szabo'), ('Zsuzsa', 'Kormoczy'), ('Zsuzsanna', 'Babos'), ('Zsuzsanna', 'Fodor'), ('Zulema', 'Zelaya'), ('Zuleykha', 'Safarova'), ('Zuzana', 'Cerna'), ('Zuzana', 'Chmelarova'), ('Zuzana', 'Demeterova'), ('Zuzana', 'Filipova'), ('Zuzana', 'Hejdova'), ('Zuzana', 'Kucova'), ('Zuzana', 'Lesenarova'), ('Zuzana', 'Lindner'), ('Zuzana', 'Linhova'), ('Zuzana', 'Luknarova'), ('Zuzana', 'Melicherova'), ('Zuzana', 'Michalicova'), ('Zuzana', 'Nemsakova'), ('Zuzana', 'Ondraskova'), ('Zuzana', 'Palovic'), ('Zuzana', 'Prusova'), ('Zuzana', 'Rakicka'), ('Zuzana', 'Valekova'), ('Zuzana', 'Valicekova'), ('Zuzana', 'Witzova'), ('Zuzana', 'Zalabska'), ('Zuzana', 'Zemenova'), ('Zuzana', 'Zlochova'), ('Zuzanna', 'Grochocka'), ('Zuzanna', 'Liskocova'), ('Zuzanna', 'Liskovcova'), ('Zuzanna', 'Maciejewska'), ('Zuzanna', 'Szuszkiewicz'), ('Zuzanna', 'Wilk'), ('Zvezdelina', 'Mladenova')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name, last_name FROM players WHERE hand = 'left' ORDER BY birth_date","Not match: [('Aayushi', 'Chouhan'), ('Agustina Sol', 'Eskenazi'), ('Ai Qi', 'Chen'), ('Ainhoa', 'Atucha Gomez'), ('Alejandra', 'Barragan'), ('Alejandra', 'Obregon'), ('Alejandra', 'Tamayo Gomez'), ('Aleksandra', 'Vukadinovic'), ('Alena', 'Gerasimova'), ('Alessandra', 'Caprara'), ('Alexandra', 'Avirvarei'), ('Alexandra', 'Kazanova'), ('Alexandra', 'Martinez'), ('Alexandria', 'Liles'), ('Alexia', 'Quartetto'), ('Alicia', 'Doms Golobart'), ('Allison', 'Baker'), ('Amanda', 'Augustus'), ('Amanda', 'Grahame'), ('Amanda', 'Keen'), ('Amanda', 'Rodgers'), ('Amanda', 'Schneider'), ('Amandine', 'Cazeaux'), ('Amelie', 'Castera'), ('Amelie', 'Cocheteux'), ('Amina', 'El Sahn'), ('Amy', 'Hoburn'), ('Ana', 'Beltran Trigueros'), ('Ana', 'Veselinovic'), ('Ana Lorena', 'Garcia Navas'), ('Ana Lucia', 'Migliarini De Leon'), ('Ana Maria', 'Chavez Franco'), ('Ana Maria', 'Crisan'), ('Ana Paula', 'Leal'), ('Ana Sofia', 'Sanchez'), ('Anastasia', 'Kontratevidi'), ('Anastasia', 'Prokopenko'), ('Anastasiya', 'Komardina'), ('Anastasiya', 'Vasylyeva'), ('Anca', 'Barna'), ('Andra Maria', 'Nitescu'), ('Andrea', 'Arratia Fernandez'), ('Andreea', 'Ehritt Vanc'), ('Andreea', 'Istrate'), ('Andreea', 'Novaceanu'), ('Andreea', 'Stanescu'), ('Andressa', 'Garcia'), ('Angela', 'Haynes'), ('Angelique', 'Kerber'), ('Ann', 'Jones'), ('Anna', 'Montserrat Sanchez'), ('Anna', 'Slovakova'), ('Annabel', 'Blow'), ('Anne Gaelle', 'Sidot'), ('Annie', 'Sullivan'), ('Ansley', 'Cargill'), ('Arantxa', 'Rus'), ('Arantxa', 'Sanchez'), ('Ariela', 'Perez'), ('Ashley', 'Kratzer'), ('Ashley', 'Krysiak'), ('Aurelie', 'Vedy'), ('Avel Romaly', 'Coronado'), ('Aya', 'El Akkad'), ('Barbara', 'Schwartz'), ('Barbora', 'Bozkova'), ('Barbora', 'Trestikova'), ('Beatrix', 'Csordas'), ('Beatriz', 'Haddad Maia'), ('Bernarda', 'Pera'), ('Betina', 'Tokac'), ('Bianca', 'Botto'), ('Bianca Ioana', 'Bonifate'), ('Birgit', 'Burk'), ('Bit Na', 'Lee'), ('Brandy', 'Mina'), ('Briar', 'Preston'), ('Busra', 'Kayrun'), ('Cagla', 'Urcu'), ('Camila', 'Belassi'), ('Carla', 'Tiene'), ('Carla', 'Zabaleta'), ('Carmen', 'Blasco Robaina'), ('Carol', 'Augustine Benito'), ('Carolina', 'Escamilla'), ('Carolina', 'Orsi'), ('Casey', 'Dellacqua'), ('Catherine', 'Grotz'), ('Catia', 'Rodrigues'), ('Cecile', 'Baijot'), ('Chane', 'Hines'), ('Chanel', 'Simmonds'), ('Chang', 'Xu'), ('Charitomeni', 'Matoula'), ('Charlotte', 'Robillard Millette'), ('Chiara', 'Lommer'), ('Chieh Yu', 'Hsu'), ('Chinami', 'Ogi'), ('Chrissie', 'Seredni'), ('Christina', 'Madenoglou'), ('Chun Yan', 'He'), ('Cindy', 'Chala'), ('Claire', 'De Gubernatis'), ('Claire', 'Feuerstein'), ('Clarisa', 'Fernandez'), ('Claudia', 'Mercado'), ('Constanze', 'Lotz'), ('Cristina', 'Greco Naccarato'), ('Cristina Bianca', 'Danaila'), ('Dagmar', 'Zdrubecka'), ('Daniela', 'Morales Beckmann'), ('Daniella', 'Patton'), ('Danielle', 'Harmsen'), ('Danielle', 'Mills'), ('Daria', 'Kruzhkova'), ('Dejana', 'Raickovic'), ('Denisa', 'Chereches'), ('Dessislava', 'Mladenova'), ('Diana', 'Arutyunova'), ('Diana', 'Valverde'), ('Diana Andreea', 'Gae'), ('Dimana', 'Krastevitch'), ('Dipti', 'Srivastava'), ('Do Hee', 'Bae'), ('Doroteja', 'Eric'), ('Dunja', 'Antunovic'), ('Dzina', 'Milovanovic'), ('Ecaterina', 'Ivasco'), ('Ecaterina', 'Oproiu'), ('Ekaterina', 'Abaeva'), ('Ekaterina', 'Davletova'), ('Ekaterina', 'Kamendova'), ('Ekaterina', 'Makarova'), ('Ekaterine', 'Gorgodze'), ('Elena', 'Bogdan'), ('Elena', 'Petrucciano'), ('Elena', 'Tatarkova'), ('Elena Teodora', 'Cadar'), ('Eleonore', 'Barrere'), ('Elise', 'Tamaela'), ('Elixane', 'Lechemia'), ('Elizabeth', 'Bondi'), ('Ellen', 'Ashley'), ('Eloisa Maria', 'Compostizo De Andres'), ('Elpida', 'Papanelopoulou'), ('Emerald', 'Able'), ('Emilia', 'Yorio'), ('Emilie', 'Loit'), ('Emily', 'Applegate'), ('Emily', 'Quin'), ('Emma', 'Laine'), ('Erica', 'Biro'), ('Erika', 'Pineider'), ('Erika', 'Venere'), ('Eugenia', 'Chialvo'), ('Fatima', 'El Allami'), ('Fernanda', 'Oliveira Da Silva'), ('Fiorella', 'Jerardino'), ('Flavia', 'Borges'), ('Florencia', 'Labat'), ('Francesca', 'Campigotto'), ('Francesca', 'Di Lorenzo'), ('Francesca', 'Lubiani'), ('Francisca', 'Matos'), ('Gabriela', 'Ce'), ('Gabriela', 'Roux'), ('Gabriele', 'Bertasiute'), ('Gabriella', 'Boboc'), ('Gabrielle', 'Moxey'), ('Gaelle', 'Widmer'), ('Gala', 'Leon Garcia'), ('Galina', 'Fokina'), ('Ganna', 'Lukianchykova'), ('Gemma', 'Praditngam'), ('Georgina', 'Fedosenkova'), ('Geraldine', 'Roma'), ('Giulia', 'Bruzzone'), ('Giulia', 'Della Cioppa'), ('Giulia', 'Morlet'), ('Grace', 'Leake'), ('Guadalupe', 'Moreno'), ('Hannah', 'Grady'), ('Hannah', 'King'), ('Hannah', 'Kuervers'), ('Hedda', 'Odegaard'), ('Helen', 'Fritche'), ('Hendrike Lea', 'Heitmann'), ('Hikari', 'Yamamoto'), ('Ia', 'Jikia'), ('Iga', 'Odrzywolek'), ('Ilayda', 'Yondem'), ('Ines Miren', 'De Pablo'), ('Ioana Alexandra', 'Oprea'), ('Ioana Diana', 'Pietroiu'), ('Irina', 'Cantos Siemers'), ('Irina', 'Khromacheva'), ('Irina', 'Smirnova'), ('Irys', 'Ekani'), ('Isabella', 'Nunez'), ('Isabella', 'Tcherkes Zade'), ('Isabelle', 'Wallace'), ('Isha', 'Lakhani'), ('Ivana', 'Belejova'), ('Iveta', 'Benesova'), ('Ivon', 'Mihaleva'), ('Ivona', 'Cudina'), ('Jasmine', 'Boyd'), ('Jayci', 'Goldsmith'), ('Jelena', 'Kostanic Tosic'), ('Jennifer', 'Zerbone'), ('Jenny Thuy', 'Le'), ('Jessica', 'Sweeting'), ('Jiaying', 'He'), ('Jil Belen', 'Teichmann'), ('Jin A', 'Lee'), ('Jitka', 'Gavdunova'), ('Jitka', 'Kleisnerova'), ('Joana', 'Cortez'), ('Joanna', 'Bougon'), ('Judit', 'Vives Joan'), ('Julia', 'Gavenko'), ('Julia', 'Kimmelmann'), ('Julia', 'Smith'), ('Julia', 'Stamatova'), ('Julia', 'Vulpio'), ('Julia', 'Wachaczyk'), ('Julie', 'Ditty'), ('Julie', 'Gonzalez Rodriguez'), ('Julie', 'Pullin'), ('Kamila', 'Pavelkova'), ('Kanako', 'Osafune'), ('Karen', 'Castiblanco'), ('Karen', 'Cross'), ('Karina', 'Gurgenyan'), ('Karina', 'Porushkevich'), ('Karina', 'Rovira'), ('Karly', 'Olson'), ('Karolina', 'Soor'), ('Katarzyna', 'Kossowska'), ('Kate', 'Vialle'), ('Katelyn', 'Jackson'), ('Katerina', 'Bohmova'), ('Katerina', 'Bohmova'), ('Katerina', 'Vankova'), ('Katharina', 'Herpertz'), ('Katharine', 'Baker'), ('Kathrin', 'Hegel'), ('Katia', 'Sabate Orera'), ('Kayla', 'Day'), ('Kelly', 'Williford'), ('Kim', 'Kilsdonk'), ('Kobkanok', 'Upapong'), ('Kotomi', 'Takahata'), ('Kristina', 'Chasovskikh'), ('Kristy', 'Frilling'), ('Kristyna', 'Hancarova'), ('Kristyna', 'Pliskova'), ('Krushmi', 'Chheda'), ('Ksenia', 'Pervak'), ('Lara', 'Biter'), ('Lara', 'Meccico'), ('Laura', 'Illanes'), ('Laura', 'Robson'), ('Laura', 'Rocchi'), ('Laura', 'Sadria'), ('Lauren', 'Jones'), ('Lauren', 'Lui'), ('Lea', 'Tholey'), ('Leanne', 'Baker'), ('Leticia', 'Costas'), ('Liege', 'Vieira'), ('Lina', 'Shokry'), ('Lindsay', 'Cox'), ('Lisa', 'Fritz'), ('Lise', 'Gregory'), ('Liset', 'Brito Herrera'), ('Lizaan', 'Du Plessis'), ('Ljubica', 'Avramovic'), ('Lucie', 'Safarova'), ('Lucie', 'Sipkova'), ('Lucy', 'Fletcher'), ('Ludmilla', 'Varmuza'), ('Luisa Fernanda', 'Echeverry Rodriguez'), ('Magui', 'Serna'), ('Mai', 'Iwasaki'), ('Maite', 'Cano'), ('Maja', 'Matevzic'), ('Maja', 'Mladenovic'), ('Majdouline', 'Akrate'), ('Manca', 'Pislak'), ('Mara', 'Vidal'), ('Marcela', 'Vojtiskova'), ('Margarita', 'Lazareva'), ('Maria', 'Patrascu'), ('Maria', 'Prishlyak'), ('Maria Camila', 'Trujillo Hoyos'), ('Maria Elizabeth', 'Lopez'), ('Maria Eugenia', 'Roca Recarey'), ('Maria Fernanda', 'Alves'), ('Maria Fernanda', 'Herazo Gonzalez'), ('Maria Jose', 'Martinez Sanchez'), ('Maria Sol', 'Carrasco'), ('Mariam', 'Bolkvadze'), ('Mariana Pires', 'Junqueira'), ('Marianna', 'Natali'), ('Marie', 'Benoit'), ('Marine', 'Nizri Spiegel'), ('Marketa', 'Vondrousova'), ('Marta', 'Del Pino Maturano'), ('Martina', 'Balogova'), ('Martina', 'Capurro Taborda'), ('Martina', 'Navratilova'), ('Martina', 'Trevisan'), ('Martina', 'Zerbola'), ('Mary', 'Carillo'), ('Mashaal', 'Hameed'), ('Matilde', 'Mariani'), ('Mayuka', 'Aikawa'), ('Meghha', 'Vakaria'), ('Megumi', 'Fukui'), ('Melinda', 'Czink'), ('Melisa', 'Cabrera Handt'), ('Mia Nicole', 'Eklund'), ('Micaela', 'Acosta'), ('Michaela', 'Jasenakova'), ('Micheline', 'Aubuchon'), ('Michelle', 'Russ'), ('Mihaela', 'Buzarnescu'), ('Mila', 'Mejic'), ('Mirabelle', 'Njoze'), ('Misaki', 'Doi'), ('Momoka', 'Chimura'), ('Monica', 'Seles'), ('Monica', 'Turewicz'), ('Monika', 'Lalewicz'), ('Monika', 'Musilova'), ('Monika', 'Tumova'), ('Montserrat', 'Alonso'), ('Na Lae', 'Han'), ('Nadege', 'Jorda'), ('Najah', 'Dawson'), ('Nancy', 'Loeffler Caro'), ('Naomi', 'Cavaday'), ('Naomi', 'Totka'), ('Natali', 'Coronel'), ('Natalia', 'Bogdanova'), ('Natalia', 'Nikolopoulou'), ('Natalie', 'Novakova'), ('Nathalia', 'Rossi'), ('Natsuho', 'Arakawa'), ('Nelise', 'Verster'), ('Nicole', 'Arendt'), ('Nicole', 'Bunea'), ('Nicole', 'Frenkel'), ('Nicole', 'Grunwald'), ('Nicole', 'Riner'), ('Nina', 'Holanova'), ('Nina', 'Mujezinovic'), ('Nina', 'Munch Soegaard'), ('Noa', 'Krznaric'), ('Oana', 'Irimescu'), ('Oceane', 'Mialon'), ('Oksana', 'Kalashnikova'), ('Olga', 'Danilovic'), ('Olga', 'Doroshina'), ('Olga', 'Fridman'), ('Olga', 'Pasichnichenko'), ('Ornella', 'Gentile'), ('Patty', 'Schnyder'), ('Paula', 'Mocete Talamantes'), ('Paulina', 'Jorquera'), ('Petra', 'Delhees Jauch'), ('Petra', 'Kvitova'), ('Petra', 'Vogel'), ('Polina', 'Bezsmertnaya'), ('Polina', 'Novoselova'), ('Punam', 'Reddy'), ('Quirine', 'Lemoine'), ('Rachel', 'Girard'), ('Rana', 'Tharwat Hafez'), ('Raquel', 'Montalvo'), ('Rebecca', 'Andrade'), ('Rebecca', 'Smaller'), ('Renata', 'Bakieva'), ('Rene', 'Collins'), ('Ria', 'Vaidya'), ('Rie', 'Imai'), ('Rita', 'Gouveia'), ('Rita', 'Kuti Kis'), ('Rita', 'Vilaca'), ('Rona', 'Berisha'), ('Rosalie', 'Van Der Hoek'), ('Roxane', 'Vaisemberg'), ('Ruxandra', 'Ababii'), ('Ruxandra', 'Schech'), ('Sabine', 'Appelmans'), ('Sabrina', 'Dos Reis'), ('Salome', 'Llaguno'), ('Samira', 'Radjaa'), ('Sanaa', 'Bhambri'), ('Sanaz', 'Marand'), ('Sandra', 'Garriga Catala'), ('Sandra', 'Klemenschits'), ('Sandra', 'Roma'), ('Sandra', 'Sasidharan'), ('Sanne', 'Bakker'), ('Saori', 'Obata'), ('Sarah Beth', 'Askew'), ('Sarah Rebecca', 'Sekulic'), ('Sarahi', 'Garcia Carrera'), ('Saumya', 'Vig'), ('Seheno', 'Razafindramaso'), ('Seul Ki', 'Chin'), ('Shadisha', 'Robinson'), ('Shakhlo', 'Saidova'), ('Shana', 'Claes'), ('Shaozhuo', 'Liu'), ('Sheng Nan', 'Sun'), ('Sherazad', 'Benamar'), ('Sherazad', 'Reix'), ('Shiraz', 'Bronstein'), ('Shraddha', 'Lodha'), ('Simonetta', 'Miori'), ('Snigdha', 'Padamata'), ('So Ra', 'Lee'), ('Sofia', 'Medina'), ('Sonia', 'Iacovacci'), ('Sonya', 'Dayal'), ('Sophie', 'Blom'), ('Sowjanya', 'Bavisetti'), ('Stefania', 'Hristov'), ('Stella', 'Papaspyrou'), ('Stephani', 'Rodriguez'), ('Stephanie', 'Kovacic'), ('Stephanie', 'Theiler'), ('Storm', 'Sanders'), ('Stuti', 'Singh Tomar'), ('Sybille', 'Bammer'), ('Sylvia', 'Krywacz'), ('Tamara', 'Tomic'), ('Tapiwa', 'Marobela'), ('Tatiana', 'Bua'), ('Tayisiya', 'Morderger'), ('Taylor', 'Johnson'), ('Taylor', 'Townsend'), ('Teodora Adina', 'Ardeleanu'), ('Tereza', 'Budilova'), ('Tereza', 'Jankovska'), ('Tereza', 'Koplova'), ('Theresa', 'Logar'), ('Tina', 'Rupert'), ('Valentina', 'Tizzano'), ('Valeria', 'Casillo'), ('Vanessa', 'Webb'), ('Varvara', 'Lepchenko'), ('Vasanti', 'Shinde'), ('Vasilisa', 'Davydova'), ('Verena', 'Gantschnig'), ('Veronica', 'Miroshnichenko'), ('Veronika', 'Domagala'), ('Veronika', 'Zavodska'), ('Viktoryia', 'Kisialeva'), ('Violette', 'Huck'), ('Vorranavaporn', 'Vorrarattanamongkol'), ('Watsachol', 'Sawasdee'), ('Wendy', 'Gilchrist'), ('Xenia', 'Knoll'), ('Xenia', 'Samoilova'), ('Xinyun', 'Han'), ('Xiyu', 'Wang'), ('Ya Hsin', 'Lee'), ('Yang', 'Lee'), ('Yasmina', 'Karimjanova'), ('Yasmine', 'Rashad'), ('Yasmine', 'Xantos'), ('Yi Fan', 'Xu'), ('Ysabel', 'Gonzalez Rico'), ('Ysaline', 'Bonaventure'), ('Yui', 'Nagasawa'), ('Yuliya', 'Lysa'), ('Yurika', 'Sema'), ('Yuuki', 'Tanaka'), ('Zanmarie', 'Pienaar'), ('Zerene', 'Reyes'), ('Zora', 'Vlckova'), ('Zsuzsanna', 'Babos'), ('Zuzanna', 'Maciejewska')] != []",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","Not match: [('USA', 'Julia')] != [('Julia', 'USA')]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name, T1.winner_rank_points FROM matches AS T1 INNER JOIN ( SELECT winner_name, COUNT(*) as num_wins FROM matches GROUP BY winner_name ORDER BY num_wins DESC LIMIT 1 ) AS T2 ON T1.winner_name = T2.winner_name","Not match: [('Angelique Kerber', '3715')] != [('Angelique Kerber', '3590'), ('Angelique Kerber', '3710'), ('Angelique Kerber', '3710'), ('Angelique Kerber', '3715'), ('Angelique Kerber', '5330'), ('Angelique Kerber', '5330'), ('Angelique Kerber', '5700'), ('Angelique Kerber', '5740'), ('Angelique Kerber', '5740'), ('Angelique Kerber', '6375'), ('Angelique Kerber', '6375'), ('Angelique Kerber', '6380'), ('Angelique Kerber', '6380'), ('Angelique Kerber', '6500'), ('Angelique Kerber', '6860'), ('Angelique Kerber', '6860'), ('Angelique Kerber', '6860'), ('Angelique Kerber', '7340'), ('Angelique Kerber', '8000'), ('Angelique Kerber', '8000'), ('Angelique Kerber', '8000'), ('Angelique Kerber', '8000')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.winner_name, T1.winner_rank_points FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id GROUP BY T1.winner_id ORDER BY COUNT(T1.match_num) DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1;,OperationalError('no such column: T2.winner_name'),False
spider_data/database/wta_1/wta_1.sqlite,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;,OperationalError('no such column: T2.winner_name'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT loser_name, winner_name FROM matches ORDER BY minutes DESC LIMIT 1","Not match: [('Petra Kvitova', 'Angelique Kerber')] != [('Angelique Kerber', 'Petra Kvitova')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT T1.winner_name, T1.loser_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.loser_id = T2.player_id ORDER BY T1.minutes DESC LIMIT 1",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT AVG(ranking), first_name FROM rankings GROUP BY player_id",OperationalError('no such column: first_name'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('1001.0679611650486', 'Karis'), ('1002.6792452830189', 'Sybille'), ('1003.1212121212121', 'Kei'), ('1003.5367647058823', 'Seda'), ('1004.6666666666666', 'Sohyun'), ('1004.7428571428571', 'Malika'), ('1005.75', 'Berta'), ('1006.1769911504425', 'Vladislava'), ('1006.2982456140351', 'Elizabeth Anita Alexandria'), ('1006.5128205128206', 'Oliwia'), ('1007.15', 'Mahitha'), ('1009.8666666666667', 'Treta'), ('1010.1818181818181', 'Katyarina'), ('1010.3333333333334', 'Da Hye'), ('1010.4545454545455', 'Ramu'), ('1011.3666666666667', 'Amelie'), ('1011.469696969697', 'Wendy Qi Wen'), ('1011.9433962264151', 'Elke'), ('1012.325', 'Kelsey'), ('1013.4761904761905', 'Maud'), ('1015.2352941176471', 'Tingting'), ('1015.5', 'Fatyha'), ('1015.6792452830189', 'Susan'), ('1016.5714285714286', 'Apichaya'), ('1017.2560553633218', 'Melina'), ('1017.3134328358209', 'Nikki'), ('1017.7777777777778', 'Tijana'), ('1018.6534653465346', 'Keri'), ('1018.6637931034483', 'Ashmitha'), ('1019.0', 'Reina'), ('1019.4107142857143', 'Helen'), ('1019.9411764705883', 'Julita'), ('1020.28125', 'Hye Min'), ('1020.4271844660194', 'Kerstin'), ('1020.6', 'Carson'), ('1021.6504854368932', 'Ratnika'), ('1022.3333333333334', 'Xin Yu'), ('1022.6198347107438', 'Jordana'), ('1022.9174311926605', 'Emiliana'), ('1023.089430894309', 'Tanya'), ('1023.8690476190476', 'Eveliina'), ('1024.0116279069769', 'Sherry'), ('1024.625', 'Aishwarya'), ('1024.6666666666667', 'Julia Mansano'), ('1025.0', 'Megumi'), ('1027.0', 'Guillermina'), ('1027.1382978723404', 'Oana'), ('1028.0365853658536', 'Madeleine'), ('1028.9565217391305', 'Sandy'), ('1029.0', 'Molly'), ('1029.0980392156862', 'Sonia'), ('1029.1666666666667', 'Meiqi'), ('1029.3196721311476', 'Trang'), ('1029.6888888888889', 'Eden'), ('1030.5', 'Leylah Annie'), ('1031.0', 'Nevena'), ('1031.228855721393', 'Ana Paula'), ('1031.5342465753424', 'Mallaurie'), ('1031.6', 'Mei Xu'), ('1032.2666666666667', 'Desiree'), ('1033.027027027027', 'Sasa'), ('1034.1304347826087', 'Yujia'), ('1034.5833333333333', 'Ailen'), ('1035.0384615384614', 'Kirsten Andrea'), ('1035.327868852459', 'Libi'), ('1035.46', 'Jazmin'), ('1035.5548387096774', 'Stephanie Mariel'), ('1035.6470588235295', 'Jin Ju'), ('1035.7780678851175', 'Paulina'), ('1035.95', 'Meng Ning'), ('1036.1214953271028', 'Magalie'), ('1037.0833333333333', 'Anushka'), ('1037.5274725274726', 'Jainy'), ('1038.35', 'Akvile'), ('1038.6911764705883', 'I Hsuan'), ('1039.0', 'Inger'), ('1039.3902439024391', 'Chi Fan'), ('1039.6744186046512', 'Abiodun'), ('1039.8333333333333', 'Melany Solange'), ('1041.0740740740741', 'Pippa'), ('1041.5367231638418', 'Yuriko'), ('1041.948717948718', 'Emily J'), ('1042.037037037037', 'Annie'), ('1042.6802325581396', 'Shu Ying'), ('1042.7843137254902', 'Dominique'), ('1045.6666666666667', 'Andrina'), ('1047.3529411764705', 'Yuqi'), ('1047.7575757575758', 'Si Qi'), ('1047.98224852071', 'Maria Paulina'), ('1048.081081081081', 'Ye Xin'), ('1049.0', 'Costanza'), ('1049.4655172413793', 'Antonina'), ('1049.834745762712', 'Noelia'), ('1050.7', 'Katya'), ('1051.1224489795918', 'Margaux'), ('1051.623188405797', 'Habiba'), ('1051.7096774193549', 'Antonela'), ('1051.7349397590363', 'Rita'), ('1052.8314606741574', 'Gaelle'), ('1054.0', 'Yuan'), ('1054.0813953488373', 'Nikol'), ('1054.606896551724', 'Robyn'), ('1054.9019607843138', 'Larikah'), ('1055.020202020202', 'Kady'), ('1056.0588235294117', 'Martha'), ('1057.628205128205', 'Alessia'), ('1058.0', 'Zhibek'), ('1059.2702702702702', 'Yanni'), ('1059.73', 'Rosalia'), ('1060.5633802816901', 'Kristina N'), ('1061.3076923076924', 'Pei Ju'), ('1062.3666666666666', 'Lamis'), ('1062.795918367347', 'Karina Kristina'), ('1063.4736842105262', 'Andjela'), ('1063.9411764705883', 'Yijia'), ('1064.0', 'Axana'), ('1064.142857142857', 'Mihika'), ('1066.5343511450383', 'Eleanor'), ('1066.5887096774193', 'Rosalie'), ('1067.019801980198', 'Alejandra'), ('1067.3413173652696', 'Marisa'), ('1068.4619883040937', 'Yolande'), ('1068.7457627118645', 'Tea'), ('1068.9166666666667', 'Kariann'), ('1069.0379746835442', 'Ryann'), ('1069.0925925925926', 'Inci'), ('1069.15', 'Nermeen'), ('1069.3208955223881', 'Hyojung'), ('1070.0377358490566', 'Kwan Yau'), ('1070.1025641025642', 'Louise'), ('1070.21875', 'Maureen'), ('1070.3417721518988', 'Simone'), ('1070.3967391304348', 'Anna Maria'), ('1070.5648854961833', 'Jawairiah'), ('1070.6666666666667', 'Shiori'), ('1070.9463414634147', 'Fatimah'), ('1071.3076923076924', 'Mi Jeong'), ('1071.5833333333333', 'Yukako'), ('1072.4', 'Leticia Garcia'), ('1072.857142857143', 'Ronke'), ('1072.9591836734694', 'Maria Andrea'), ('1073.1752577319587', 'Ebony'), ('1074.3333333333333', 'Arlinda'), ('1075.0', 'Tatia'), ('1075.8260869565217', 'Amira'), ('1077.8095238095239', 'Karolayne'), ('1079.05', 'Ivanka'), ('1081.142857142857', 'Wan Yi'), ('1081.1666666666667', 'Sari'), ('1082.3548387096773', 'Agata Jadwiga'), ('1083.1454545454546', 'Wiktoria'), ('1083.8333333333333', 'Eva Marie'), ('1084.0294117647059', 'May'), ('1084.107142857143', 'Sofico'), ('1084.7916666666667', 'Ana Gabriela'), ('1085.4242424242425', 'Mariaryeni'), ('1085.581818181818', 'Iana'), ('1086.45', 'Astrid Wanja'), ('1087.372340425532', 'Eleonore'), ('1087.3823529411766', 'Naz'), ('1087.6216216216217', 'Gyulnara'), ('1089.1603773584907', 'Angeliki'), ('1089.2100840336134', 'Rashmi'), ('1089.7111111111112', 'Vanja'), ('1092.2771084337348', 'Emiliya'), ('1092.7621951219512', 'Magy'), ('1094.4583333333333', 'Dina'), ('1095.1176470588234', 'Hikari'), ('1096.1140350877192', 'Nour'), ('1096.9130434782608', 'Yoshimi'), ('1097.0', 'Sharon Sanchana'), ('1097.219512195122', 'Kimika'), ('1098.2888888888888', 'Lulu'), ('1098.357142857143', 'Yu Jin'), ('1099.625', 'Parris'), ('1104.357142857143', 'Melissa Ishuan'), ('1105.1298701298701', 'Alicia'), ('1105.171875', 'Sanae'), ('1105.3125', 'Kanako'), ('1106.3076923076924', 'Farah'), ('1106.5', 'Pei Hsuan'), ('1107.0882352941176', 'Lauryn'), ('1107.0919540229886', 'Danijela'), ('1107.7142857142858', 'Hsin Yuan'), ('1110.0434782608695', 'Abbi'), ('1110.0816326530612', 'Juliana'), ('1110.3333333333333', 'Aida'), ('1110.4411764705883', 'Mihoki'), ('1110.4594594594594', 'Yawna'), ('1110.5376344086021', 'Hana'), ('1111.08', 'Katrine Isabel'), ('1111.8333333333333', 'Johana'), ('1112.1458333333333', 'Chompoothip'), ('1112.75', 'Olaya'), ('1112.875', 'Christie'), ('1112.9450549450548', 'Camille'), ('1113.2325581395348', 'Tanaporn'), ('1114.4074074074074', 'Milena'), ('1114.9433962264152', 'Kelia'), ('1114.99375', 'Isabela'), ('1115.0851063829787', 'Deeon'), ('1115.72', 'Seira'), ('1116.4190476190477', 'Jil Nora'), ('1117.55', 'Wen Ling'), ('1117.64', 'Jasmine Amber'), ('1117.6666666666667', 'Rana'), ('1117.7142857142858', 'Kate'), ('1117.88', 'Saana'), ('1118.4166666666667', 'Tamar'), ('1118.904761904762', 'Huijie'), ('1119.1639344262296', 'Alana'), ('1119.4897959183672', 'Maria Del Rosario'), ('1120.388888888889', 'Shou Na'), ('1120.5652173913043', 'Lizaveta'), ('1121.04', 'Mitsumi'), ('1121.0869565217392', 'Maurien'), ('1121.2432432432433', 'Rafaela'), ('1121.767857142857', 'Jara'), ('1121.8846153846155', 'Ramya'), ('1122.4423076923076', 'Adnya'), ('1122.4545454545455', 'Se Jin'), ('1123.3855421686746', 'Cemre'), ('1123.4864864864865', 'Alessandra'), ('1123.6486486486488', 'Deria'), ('1124.1666666666667', 'Nina Isabella'), ('1125.0363636363636', 'Rio'), ('1125.5471698113208', 'Rona'), ('1126.3333333333333', 'Brindtha'), ('1127.7368421052631', 'Anca'), ('1127.9338842975208', 'Carlotta'), ('1128.030303030303', 'Chantelle'), ('1128.7272727272727', 'Angela'), ('1128.901098901099', 'Yoko'), ('1130.6037735849056', 'Vaniya'), ('1131.6333333333334', 'Donika'), ('1132.0', 'Chelsea'), ('1132.1744186046512', 'Dariya'), ('1132.4109589041095', 'Ushna'), ('1135.5', 'Ilay'), ('1136.8535031847134', 'Ivette'), ('1137.19', 'Priscila'), ('1138.8490566037735', 'Victoire'), ('1138.9166666666667', 'Nastassia'), ('1139.0', 'Luna'), ('1139.2340425531916', 'Sarahi'), ('1139.7', 'Mafalda'), ('114.05571428571429', 'Jie'), ('114.78806907378336', 'Yayuk'), ('1140.981981981982', 'Busra'), ('1141.842105263158', 'Cecilie Lundgaard'), ('1141.842105263158', 'Sing Le'), ('1142.9285714285713', 'Savannah'), ('1143.7957746478874', 'Marcela Guimaraes'), ('1144.45', 'Zhima'), ('1145.1641791044776', 'Alessondra'), ('1145.4333333333334', 'Rebeca'), ('1145.8235294117646', 'Akiho'), ('1146.3934426229507', 'Tamari'), ('1147.8526315789475', 'Rachel'), ('1147.8529411764705', 'Lidia'), ('1148.0', 'Shreya'), ('1148.9166666666667', 'Mariia'), ('1149.3125', 'Spurti'), ('1150.0', 'Anda'), ('1150.0', 'Vinciane'), ('1150.6607142857142', 'Ghislaine'), ('1151.95', 'Asha'), ('1152.0857142857142', 'Aneta'), ('1152.142857142857', 'Gebriela'), ('1152.7837837837837', 'Weronika Jasmina'), ('1152.888888888889', 'Maileen'), ('1153.590909090909', 'Mami'), ('1153.9166666666667', 'Georgiana'), ('1153.936507936508', 'Hao Ching'), ('1154.093023255814', 'Melissa'), ('1154.25', 'Agustina Elena'), ('1154.2714285714285', 'Elizabeta'), ('1154.2857142857142', 'Dewi'), ('1154.4166666666667', 'Shir'), ('1155.0392156862745', 'Afroditi'), ('1155.8191489361702', 'Yekaterina'), ('1156.28125', 'Paige Mary'), ('1156.340425531915', 'Ah'), ('1157.5', 'Eugenia'), ('1157.8', 'Almudena'), ('1159.1818181818182', 'Dagmara'), ('1159.5632183908046', 'Theresa'), ('1160.3125', 'Denise Antonela'), ('1161.0', 'Jiaxue'), ('1161.5675675675675', 'Caroline B'), ('1162.8301886792453', 'Kamilla'), ('1163.0', 'Mariona'), ('1163.3478260869565', 'Kaylah'), ('1164.090909090909', 'Ki Ryang'), ('1164.107142857143', 'Nelise'), ('1164.95', 'Aina'), ('1165.093023255814', 'Colomba'), ('1165.5573770491803', 'Ina'), ('1166.875', 'Yarden'), ('1167.2758620689656', 'Nonna'), ('1167.3333333333333', 'Stefani'), ('1167.3368421052633', 'Belen'), ('1168.2857142857142', 'Roosh'), ('1168.3396226415093', 'Gulben'), ('1168.6571428571428', 'Selin'), ('1168.7967479674796', 'Ella'), ('1169.4864864864865', 'Miranda'), ('1169.6923076923076', 'Jia'), ('117.95684523809524', 'Iveta'), ('1170.1830985915492', 'Maria Jesus'), ('1170.3461538461538', 'You Na'), ('1170.840579710145', 'Violetta'), ('1170.9411764705883', 'Iulia Maria'), ('1171.0', 'Shelly'), ('1172.5531914893618', 'Assia'), ('1173.75', 'Maftuna'), ('1174.0', 'Nikita'), ('1175.7666666666667', 'Juliana Rocha'), ('1175.909090909091', 'Paula Andrea'), ('1176.5', 'Ralina'), ('1177.622641509434', 'Nattawadee'), ('1177.8823529411766', 'Yang'), ('1179.1555555555556', 'Olena'), ('1179.4153846153847', 'Haine'), ('1179.6216216216217', 'Leah'), ('1179.875', 'Livia'), ('1180.3828125', 'Naoko'), ('1180.5454545454545', 'Leslie'), ('1181.27868852459', 'Aselya'), ('1181.3548387096773', 'Manya'), ('1181.4736842105262', 'Dajana'), ('1181.6078431372548', 'Alory Regina Elorriaga'), ('1182.9107142857142', 'Meritxell'), ('1184.0', 'Layne'), ('1184.0416666666667', 'Andressa Cristina'), ('1184.6666666666667', 'Sabina Elena'), ('1184.7222222222222', 'Liniques'), ('1184.8260869565217', 'Smriti'), ('1185.030303030303', 'Yidi'), ('1185.7142857142858', 'Aldana'), ('1185.75', 'Hollie'), ('1186.9444444444443', 'Muge'), ('1187.0384615384614', 'Ferny'), ('1187.9245283018868', 'Shiran'), ('1188.2941176470588', 'Schena'), ('1188.5277777777778', 'Maria Camila'), ('1188.7096774193549', 'Mary Ann'), ('1189.0', 'June'), ('1190.0629921259842', 'Lutfiye'), ('1190.0833333333333', 'Maria Agustina'), ('1190.7307692307693', 'Clara'), ('1191.6470588235295', 'Sarai Delfina'), ('1192.1818181818182', 'Cameron'), ('1192.3783783783783', 'Camila Vital'), ('1192.5454545454545', 'Intissar'), ('1193.3529411764705', 'Emma Christine'), ('1196.0', 'Gulchekhra'), ('1196.56', 'Dorien'), ('1197.0', 'Giovanna'), ('1197.578947368421', 'Carolyn'), ('1198.1538461538462', 'Laura Sofia'), ('1198.25', 'Moyuka'), ('1198.3333333333333', 'Damira'), ('1199.8235294117646', 'Aastha'), ('1200.2', 'Aimee'), ('1201.16', 'Mila'), ('1201.25', 'Vita'), ('1202.2692307692307', 'Man Ying Maggie'), ('1203.5', 'Madina'), ('1204.6666666666667', 'Salma'), ('1204.7272727272727', 'Federica Joe'), ('1205.7692307692307', 'Diana Maria'), ('1206.6666666666667', 'Maia A'), ('1208.4285714285713', 'Avgusta'), ('1208.952380952381', 'Vishesh'), ('1209.4', 'Amrita'), ('1209.625', 'Emilija'), ('1209.625', 'Rui'), ('1209.625', 'Yihong'), ('1209.7777777777778', 'Sarlota'), ('121.82273948075202', 'Tamarine'), ('121.9579326923077', 'Jill'), ('1210.2571428571428', 'Se Hyun'), ('1211.0', 'Phenomena'), ('1211.2333333333333', 'Elodie'), ('1212.9166666666667', 'Justina'), ('1213.1666666666667', 'Adrienn'), ('1213.2142857142858', 'Mercedes'), ('1214.1142857142856', 'Vincenza'), ('1214.7692307692307', 'Hazal'), ('1214.857142857143', 'Ege'), ('1215.0', 'Marijana'), ('1217.469387755102', 'Madeline'), ('1218.5652173913043', 'Esen'), ('1219.0', 'Himari'), ('122.19587628865979', 'Agnieszka'), ('1220.0', 'Loudmilla'), ('1221.3333333333333', 'Sophia'), ('1221.5', 'Zinovia'), ('1221.7931034482758', 'Elaine'), ('1221.8333333333333', 'Blessing'), ('1221.904761904762', 'Milica'), ('1222.24', 'Yosr'), ('1223.4', 'Mihaela Lorena'), ('1224.0', 'Arina Gabriela'), ('1224.0', 'Judith'), ('1225.388888888889', 'Sneha'), ('1225.75', 'Ya'), ('1226.076923076923', 'Laylo'), ('1226.3333333333333', 'Ange Oby'), ('1226.5', 'Giorgie'), ('1226.5454545454545', 'Daphne'), ('1227.0', 'Muazzez'), ('1227.344827586207', 'Zaineb'), ('1227.7777777777778', 'Yasmina'), ('1227.8', 'Joanne'), ('1228.3235294117646', 'Shangqing'), ('1228.388888888889', 'Anke'), ('1228.75', 'Abir'), ('1228.9285714285713', 'Michela'), ('1229.5714285714287', 'Betina'), ('1229.5714285714287', 'Zeynep  Sena'), ('1229.7333333333333', 'En Pei'), ('1229.8', 'Sunae'), ('1230.2', 'Talya'), ('1230.2', 'Yuval'), ('1230.6', 'Jiakang'), ('1230.6', 'Mananchaya'), ('1231.2727272727273', 'Lorenza'), ('1231.5', 'Agne'), ('1232.0', 'Emilia'), ('1232.032258064516', 'Jiatian'), ('1232.2', 'Idia'), ('1232.8', 'Chaoyi'), ('1234.2857142857142', 'Milagros'), ('1234.6176470588234', 'Doga Selen'), ('1235.1960784313726', 'Sarvinoz'), ('1236.0', 'Victoria Ariadna'), ('1236.5333333333333', 'Viktoriia'), ('1236.6153846153845', 'Gulnaz'), ('1236.7627118644068', 'Shakhnoza'), ('1236.7777777777778', 'Carlota'), ('1237.6363636363637', 'Anne Marie'), ('1237.9', 'Zhou'), ('1238.0625', 'Minami'), ('1239.6666666666667', 'Yu Tong'), ('1240.92', 'Sean'), ('1241.1379310344828', 'Siyu'), ('1242.0', 'Damini'), ('1243.0', 'Vilma Y'), ('1243.4', 'Moulika'), ('1243.4285714285713', 'Ana Luisa'), ('1243.875', 'Jaimy Gayle'), ('1243.904761904762', 'Jule'), ('1244.3333333333333', 'Frederikke'), ('1245.3333333333333', 'Constanze'), ('1245.75', 'Anastasiia'), ('1247.3333333333333', 'Jamilya'), ('1247.3636363636363', 'Marcelina'), ('1247.909090909091', 'Nataliya'), ('1248.2', 'Dilara'), ('1248.72', 'Ahlam'), ('1249.3333333333333', 'Warona'), ('1251.1333333333334', 'Hortencia'), ('1252.0', 'Anne Sophie'), ('1252.9130434782608', 'Vicky'), ('1253.4', 'Beatriz Magdalena'), ('1254.6341463414635', 'Boba'), ('1255.3333333333333', 'Adva'), ('1258.5', 'Mouna'), ('1261.8181818181818', 'Yasmyn'), ('1262.5416666666667', 'Janja'), ('1263.7666666666667', 'Yoo Ri'), ('1267.0', 'Jin'), ('127.06775067750678', 'Kaia'), ('1275.8235294117646', 'Andra Maria'), ('1281.8461538461538', 'Arthi'), ('1281.8461538461538', 'Chanikarn'), ('131.02074074074073', 'Tsvetana'), ('132.12638580931264', 'Paola'), ('1332.0737704918033', 'Micaela'), ('134.21917808219177', 'Catherine Cartan'), ('135.88910505836577', 'Tamira'), ('1382.1538461538462', 'Beauty'), ('1397.5', 'Olawaseun'), ('14.654294803817603', 'Serena'), ('143.48235294117646', 'Mallory'), ('144.3264367816092', 'Anabel'), ('146.59709379128137', 'Bethanie'), ('149.46360759493672', 'Jarmila'), ('1493.0', 'Damilola'), ('150.96681415929203', 'Roberta'), ('159.62397820163488', 'Kveta'), ('162.3505747126437', 'Sesil'), ('165.96132596685084', 'Kurumi'), ('166.41358024691357', 'Shahar'), ('166.6586270871985', 'Yung Jan'), ('167.50632911392404', 'Heather'), ('167.90740740740742', 'Shuai'), ('169.13578500707214', 'Melinda'), ('171.71134020618555', 'Dominika'), ('177.22695035460993', 'Sania'), ('182.02426160337552', 'Timea'), ('185.3469387755102', 'Michaella'), ('185.75', 'Vania'), ('186.76587795765877', 'Mirjana'), ('188.06095041322314', 'Lourdes'), ('194.2392065344224', 'Maria Elena'), ('195.66923570969814', 'Vera'), ('200.97080291970804', 'Aravane'), ('201.87700534759358', 'Anna Lena'), ('203.5871080139373', 'Sabine'), ('205.17590361445784', 'Lesia'), ('208.95263157894738', 'Misaki'), ('210.0846394984326', 'Monica'), ('211.01377118644066', 'Brenda'), ('211.41240310077518', 'Yaroslava'), ('211.67325428194994', 'Edina'), ('213.75043630017453', 'Sorana'), ('215.25185185185185', 'Akgul'), ('215.6615811373093', 'Chanelle'), ('217.2493188010899', 'Su Wei'), ('217.85922330097088', 'Alla'), ('218.4701086956522', 'Severine'), ('221.66153846153847', 'Anastasija'), ('222.81428571428572', 'Zarina'), ('223.50900900900902', 'Donna'), ('229.35687022900763', 'Urszula'), ('229.3774193548387', 'Garbine'), ('235.31431431431432', 'Klara'), ('236.07412398921832', 'Cara'), ('240.0448979591837', 'Vesna'), ('240.5306603773585', 'Janette'), ('246.19871794871796', 'Richel'), ('247.7449768160742', 'Tatjana'), ('248.74237737516572', 'Anne'), ('249.5244140625', 'Eleni'), ('252.11485774499474', 'Alize'), ('252.6093155893536', 'Barbora'), ('259.63589743589745', 'Sloane'), ('262.30884808013354', 'Junri'), ('265.79487179487177', 'Annika'), ('267.03227571115974', 'Svetlana'), ('268.05945945945945', 'Dinah'), ('270.5896860986547', 'Coco'), ('272.08855291576674', 'Kai Chen'), ('273.57517899761336', 'Mona'), ('274.85317919075146', 'Renata'), ('275.6055900621118', 'Lindsay'), ('279.16438356164383', 'Dalma'), ('279.23336006415394', 'Arantxa'), ('279.78655282817505', 'Marion'), ('280.79959100204496', 'Michelle'), ('281.871335504886', 'Mariya'), ('283.63246554364474', 'Romina'), ('284.22813688212926', 'Luksika'), ('284.8326771653543', 'Liezel'), ('284.8724727838258', 'Aiko'), ('285.84388185654007', 'Irina Camelia'), ('287.71625344352617', 'Kiki'), ('288.74423480083857', 'Irena'), ('289.60283687943263', 'Regina'), ('290.0614657210402', 'Rika'), ('290.64452214452217', 'Madison'), ('291.4792817679558', 'Kathrin'), ('293.76942355889724', 'Catalina'), ('294.33209990749305', 'Kateryna'), ('296.2025641025641', 'Vitalia'), ('296.5792682926829', 'Sharon'), ('296.8219584569733', 'Greta'), ('297.39032258064515', 'Saisai'), ('298.1861898890259', 'Pauline'), ('300.3974358974359', 'Magda'), ('300.56296296296296', 'Marie Eve'), ('302.83268482490274', 'Danka'), ('302.84831460674155', 'Ajla'), ('304.4619771863118', 'Raluca'), ('305.19563522992985', 'Galina'), ('306.1794310722101', 'Maria Jose'), ('308.56833824975416', 'Angelique'), ('308.64912280701753', 'Kirsten'), ('309.35767790262173', 'Xinyun'), ('310.3405299313052', 'Johanna'), ('311.87854251012146', 'Cagla'), ('312.54158964879855', 'Stanislava'), ('312.7584269662921', 'Kelly S'), ('313.45625', 'Nao'), ('318.2867132867133', 'Yvonne'), ('318.69978858350953', 'Carly'), ('32.984862819299906', 'Venus'), ('321.23595505617976', 'Eri'), ('322.17758620689654', 'Yurika'), ('322.62611607142856', 'Lucie'), ('323.1388101983003', 'Reka Luca'), ('323.86176470588236', 'Maryna'), ('324.3720930232558', 'Elena'), ('324.63613231552165', 'Madalina'), ('325.5912596401028', 'Margalita'), ('325.6162790697674', 'Yafan'), ('331.3681818181818', 'Ashleigh'), ('331.93949394939494', 'Katalin'), ('334.7118644067797', 'Elise'), ('337.5292682926829', 'Mervana'), ('340.2890442890443', 'Sacha'), ('342.40130505709624', 'Caroline'), ('343.0985324947589', 'Tadeja'), ('343.22432701894314', 'Alberta'), ('343.25546975546973', 'Kristina'), ('343.2835365853659', 'Chanel'), ('345.51020408163265', 'Anna Karolina'), ('347.34943639291464', 'Estrella'), ('348.19338235294117', 'Jelena'), ('348.54794520547944', 'Kyoka'), ('348.6364892881825', 'Daniela'), ('349.54794520547944', 'Aryna'), ('353.44444444444446', 'Marketa'), ('355.7223168654174', 'Masa'), ('355.88102893890675', 'Virginie'), ('356.0105210420842', 'Lisa'), ('356.8219696969697', 'Corinna'), ('359.3764705882353', 'Chia Jung'), ('359.81081081081084', 'Maria Teresa'), ('361.0', 'Mandy'), ('365.50280484204313', 'Petra'), ('367.2274678111588', 'Anett'), ('368.14331210191085', 'Valentyna'), ('368.26881720430106', 'Sachie'), ('369.1620469083156', 'Jing Jing'), ('372.32502965599053', 'Melanie'), ('372.89398280802294', 'Shelby'), ('374.93926247288505', 'Noppawan'), ('376.47888446215137', 'Flavia'), ('376.7356115107914', 'Mihaela'), ('376.7617554858934', 'Nigina'), ('378.0163727959698', 'Casey'), ('380.5308641975309', 'Louisa'), ('380.609375', 'Danica'), ('381.2581602373887', 'Yanina'), ('381.5512572533849', 'Yi Fan'), ('382.6888217522659', 'Varvara'), ('382.82479784366575', 'Lyudmyla'), ('383.4714587737844', 'Qiang'), ('383.6413199426112', 'Claudine'), ('383.7832512315271', 'Dia'), ('383.9921465968586', 'Alexa'), ('384.87776983559684', 'Yuliya'), ('385.2651515151515', 'Chin Wei'), ('385.8135593220339', 'Patty'), ('386.7025316455696', 'Tamaryn'), ('387.5662100456621', 'Taylor'), ('387.66706161137444', 'Abigail'), ('387.73412112259973', 'Stefanie'), ('387.87113402061857', 'Liana Gabriela'), ('390.0', 'Conny'), ('390.2361111111111', 'Tessah'), ('391.3003629764065', 'Agnes'), ('391.4656290531777', 'Zi'), ('392.44444444444446', 'Elena Gabriela'), ('392.7313829787234', 'Bojana'), ('395.6680227827502', 'Nuria'), ('396.225', 'Georgina'), ('396.2893280632411', 'Ana'), ('397.83561643835617', 'Ayla'), ('398.3106546854942', 'Vanessa'), ('398.83478260869566', 'Tetyana'), ('400.8093385214008', 'Sachia'), ('401.0998263888889', 'Katarina'), ('402.36756756756756', 'Jamie'), ('402.49931972789113', 'Romana'), ('403.48784576697403', 'Alison'), ('403.8775981524249', 'Ying Ying'), ('403.935', 'Patricia Maria'), ('406.21702404158543', 'Samantha'), ('406.5511363636364', 'Cory Ann'), ('406.6258503401361', 'Jana'), ('406.9281767955801', 'Fangzhou'), ('407.029702970297', 'Mayo'), ('407.5463976945245', 'Nadia'), ('410.8463541666667', 'Mailen'), ('411.5068493150685', 'Usue Maitane'), ('411.70779777206513', 'Carla'), ('412.74466019417474', 'Ayumi'), ('414.4332292750607', 'Andrea'), ('414.66339869281046', 'Evgenia'), ('415.7', 'Kathinka'), ('415.9078341013825', 'Amra'), ('416.3666666666667', 'Carina'), ('417.44323483670297', 'Heidi'), ('417.8053097345133', 'Susanne'), ('418.2566137566138', 'Yi Miao'), ('418.39748953974896', 'Elitsa'), ('418.81925343811395', 'Ling'), ('419.1633466135458', 'Denisa'), ('419.32988047808766', 'Marta'), ('421.44179894179894', 'Shuko'), ('421.6573033707865', 'Elina'), ('424.64521739130436', 'Andreja'), ('425.82394366197184', 'Tina'), ('426.3886462882096', 'Su Jeong'), ('426.6002565198803', 'Maria'), ('427.0', 'Ronit'), ('428.5496828752643', 'Anna Giulia'), ('430.0872542522642', 'Anastasia'), ('431.19607843137254', 'Robin'), ('431.3144424131627', 'Ye Ra'), ('432.6511627906977', 'Olga'), ('432.6949152542373', 'Anhelina'), ('434.68', 'Danielle Rose'), ('435.1470588235294', 'Ons'), ('436.66881028938906', 'Nudnida'), ('436.84339509862525', 'Irina'), ('437.05298013245033', 'Francoise'), ('437.11396648044695', 'Mathilde'), ('437.4119658119658', 'Tetiana'), ('437.73858921161826', 'Chiaki'), ('437.86915887850466', 'Jasmine'), ('438.4245810055866', 'Maiko'), ('439.5747863247863', 'Cristina Andreea'), ('439.81414868105514', 'Ivana'), ('439.87772357723577', 'Stephanie'), ('440.35214446952597', 'Wen Hsin'), ('441.9846743295019', 'Aliaksandra'), ('442.0344827586207', 'Evgeniya'), ('443.0228531855956', 'Maria Fernanda'), ('443.45754716981133', 'Claire'), ('443.6296006264683', 'Magdalena'), ('443.76148409893995', 'Kyra'), ('443.8467908902692', 'Kristyna'), ('444.96190476190475', 'Yue Yue'), ('444.9760935910478', 'Victoria'), ('445.18918918918916', 'Kristie'), ('446.7231833910035', 'Olivia'), ('447.93283582089555', 'Miyabi'), ('450.22998544395927', 'Aleksandra'), ('450.4642082429501', 'Varatchaya'), ('451.33577981651376', 'Lenka'), ('451.5810397553517', 'Florencia'), ('451.8657487091222', 'Sheng Nan'), ('451.92875448487956', 'Zuzana'), ('452.625', 'Ilona'), ('453.01556420233464', 'Alisa'), ('453.43392070484583', 'Asia'), ('454.06233062330625', 'Grace'), ('454.9920529801324', 'Christina'), ('457.4050279329609', 'Beatriz'), ('458.86633663366337', 'Ysaline'), ('459.29286608260327', 'Katarzyna'), ('460.8932038834951', 'An Sophie'), ('461.06702898550725', 'Teliana'), ('462.4270462633452', 'Monique'), ('464.1367781155015', 'Chi Chi'), ('464.95631067961165', 'Darija'), ('465.24962852897477', 'Pemra'), ('467.24657534246575', 'Xiaodi'), ('471.5439093484419', 'Evelyn'), ('471.8367290748899', 'Ekaterina'), ('472.338003502627', 'Karin'), ('475.2979683972912', 'Tara'), ('477.62886597938143', 'Eugenie'), ('478.30369515011546', 'Polona'), ('479.51738241308794', 'Roxane'), ('479.5530612244898', 'Ayu Fani'), ('479.8914728682171', 'Valentini'), ('480.646017699115', 'Xinyu'), ('481.3229166666667', 'Leticia'), ('482.26169844020797', 'Anais'), ('482.36648501362396', 'Ksenia'), ('482.43243243243245', 'Ioana Diana'), ('483.77464788732397', 'Destanee'), ('483.97225572979494', 'Naomi'), ('484.9442231075697', 'Lauren'), ('485.35135135135135', 'Yulia'), ('485.40168539325845', 'Myrtille'), ('485.46875', 'Nicoleta Catalina'), ('485.9559748427673', 'Indy'), ('486.6092544987147', 'Maria Joao'), ('487.6268656716418', 'Raveena'), ('488.76107382550333', 'Kumiko'), ('488.7671232876712', 'Xu Liu'), ('489.27513227513225', 'Teodora'), ('489.5294964028777', 'Iryna'), ('489.5307517084282', 'Elizaveta'), ('489.65909090909093', 'Risa'), ('490.4144736842105', 'Aranza'), ('491.8507295173962', 'Katerina'), ('492.6608695652174', 'Katy'), ('492.8915187376726', 'Jin A'), ('493.98205383848455', 'Akiko'), ('494.6111111111111', 'Remi'), ('495.22641509433964', 'Riko'), ('496.7156398104265', 'Ana Sofia'), ('496.9431818181818', 'Alyona'), ('497.42124542124543', 'Lin'), ('499.4127634660422', 'Nicole'), ('500.29483037156706', 'Eva'), ('500.688679245283', 'Shiho'), ('501.0619469026549', 'Jil Belen'), ('501.44444444444446', 'Olesya'), ('501.5860215053763', 'Jesika'), ('504.4145867098865', 'Laura'), ('506.39344262295083', 'Ulrikke'), ('507.4', 'Viktorija'), ('508.340206185567', 'Ellie'), ('508.4679802955665', 'Paula Cristina'), ('509.80945757997216', 'Sara'), ('512.1515151515151', 'Haruna'), ('512.3787128712871', 'Julie'), ('514.1732026143791', 'So Jung'), ('514.586319218241', 'Peangtarn'), ('514.7174515235457', 'Lesley'), ('515.3191489361702', 'Nicha'), ('516.1982942430703', 'Laura Ioana'), ('516.6615384615385', 'Makoto'), ('520.9397993311037', 'Doroteja'), ('521.5358361774744', 'Justine'), ('522.6561403508772', 'Kai Lin'), ('522.984693877551', 'Krista'), ('523.2788844621514', 'Miharu'), ('524.7444668008048', 'Chen'), ('524.9192825112108', 'Ana Clara'), ('525.9552572706936', 'Dalila'), ('526.2644836272041', 'Gail'), ('526.3535641547861', 'Sofia'), ('526.3698630136986', 'Mari'), ('528.8673050615595', 'Nina'), ('529.583908045977', 'Sally'), ('529.7777777777778', 'Jia Qi'), ('531.1829405162739', 'Darya'), ('532.6881807180315', 'Marina'), ('533.433770014556', 'Kyung Mi'), ('533.5940594059406', 'Georgia'), ('533.9586374695864', 'Chieh Yu'), ('533.9652351738241', 'Oksana'), ('534.890243902439', 'Hiroko'), ('537.577922077922', 'Nungnadda'), ('539.6164383561644', 'Raluca Georgiana'), ('539.7944621938232', 'Camila'), ('541.1570881226054', 'Sofiya'), ('541.273631840796', 'Bernarda'), ('541.952380952381', 'Montserrat'), ('542.2382851445662', 'Simona'), ('542.7168141592921', 'Nanuli'), ('543.031185031185', 'Nathalia'), ('543.968253968254', 'Hanyu'), ('544.1627906976744', 'Freya'), ('544.2636655948553', 'Marija'), ('544.5041866028708', 'Erika'), ('545.449074074074', 'Yuxuan'), ('546.5551763367463', 'Sarah'), ('547.277108433735', 'Greetje'), ('547.7037037037037', 'Natsumi'), ('550.1941544885177', 'Bibiane'), ('550.9545454545455', 'Dea'), ('551.5304659498208', 'Deniz'), ('551.5557158312297', 'Anna'), ('552.4653465346535', 'Ayaka'), ('553.9434782608696', 'Ekaterine'), ('554.3953934740883', 'Mi'), ('554.5290322580645', 'Nastassja'), ('554.5376344086021', 'Cristiana'), ('555.3384615384615', 'Bunyawi'), ('555.6572164948453', 'Vojislava'), ('556.0428051001821', 'Mariana'), ('556.2303370786517', 'Azra'), ('556.7936681222708', 'Jennifer'), ('557.241418764302', 'Tereza'), ('557.9232456140351', 'Allie'), ('558.0162601626016', 'Paula'), ('560.6778190830236', 'Arina'), ('562.8450704225352', 'Jaimee'), ('563.964505613908', 'Sandra'), ('564.1434426229508', 'Carol'), ('565.8211508553654', 'Silvia'), ('566.4943396226415', 'Natela'), ('566.7873931623932', 'Isabella'), ('566.9148936170212', 'Viktoria'), ('567.0507399577167', 'Korina'), ('567.8518518518518', 'Gioia'), ('567.9464544138929', 'Liga'), ('568.2547169811321', 'Kamila'), ('568.3374316939891', 'Rebecca'), ('569.1904761904761', 'Fanny'), ('569.2647632558965', 'Alexandra'), ('570.2723004694835', 'Constance'), ('570.534951862704', 'Francesca'), ('572.2654545454545', 'So Ra'), ('572.8059701492538', 'Patricia'), ('573.5197368421053', 'Na Ri'), ('573.6708333333333', 'Storm'), ('573.8729603729604', 'Rushmi'), ('574.8723404255319', 'Harmony'), ('574.9808362369338', 'Lina'), ('575.4626436781609', 'Chang'), ('576.4307692307692', 'Dayana'), ('576.9', 'Klaartje'), ('576.9173467252564', 'Julia'), ('577.9677419354839', 'Natalie'), ('578.07962529274', 'Aleksandrina'), ('578.1381578947369', 'Irina Maria'), ('578.5', 'Jiaxi'), ('579.2153846153847', 'Irene'), ('579.437984496124', 'Vanesa'), ('579.5214723926381', 'Elixane'), ('583.1686746987951', 'Kayla'), ('583.530303030303', 'Ching Wen'), ('583.9347826086956', 'Annalisa'), ('584.359375', 'Giuliana'), ('585.093851132686', 'Emily'), ('585.2589641434263', 'Wing Yau Venise'), ('585.8517745302714', 'Justyna'), ('586.2250489236791', 'Miki'), ('586.865', 'Ya Hsuan'), ('586.9412296564195', 'Karolina'), ('589.1298076923077', 'Antonia'), ('591.2544731610338', 'Audrey'), ('591.3809523809524', 'Ivonne'), ('592.5990783410139', 'Jan'), ('593.1506849315068', 'Mizuno'), ('593.1772853185596', 'Nastja'), ('593.9759036144578', 'Chayenne'), ('594.9036697247707', 'Miyu'), ('594.9436936936937', 'Lena'), ('595.3291666666667', 'Vlada'), ('597.6981132075472', 'Ayano'), ('598.2655172413793', 'Ran'), ('600.6881091617934', 'Sophie'), ('601.906914893617', 'Tammi'), ('601.9846625766871', 'Jovana'), ('604.15', 'Alexis'), ('606.1467576791808', 'Kinnie'), ('606.7211740041929', 'Ganna'), ('607.2810218978102', 'Vivien'), ('607.3360995850622', 'Macall'), ('608.1309090909091', 'Yuuki'), ('608.7791798107255', 'Na Lae'), ('609.90625', 'Chantal'), ('611.0757575757576', 'Sunam'), ('611.35', 'Aliona'), ('611.4060995184591', 'Margarita'), ('612.0185185185185', 'Fang Ying'), ('612.736', 'Lavinia'), ('613.195652173913', 'Aminat'), ('613.5330490405117', 'Vasilisa'), ('614.0434782608696', 'Tamara'), ('614.9346733668342', 'Tena'), ('615.1506849315068', 'Dhruthi'), ('615.2230215827338', 'Chinami'), ('617.0379241516966', 'Misa'), ('617.3333333333334', 'Ao'), ('617.4615384615385', 'Nathaly'), ('617.4935251798561', 'Estelle'), ('618.4714285714285', 'Ankita'), ('618.6923076923077', 'Kimberly'), ('619.4154929577464', 'Pernilla'), ('619.6814159292036', 'Adriana'), ('619.9064748201439', 'Mayya'), ('620.4120171673819', 'Clothilde'), ('620.6746411483253', 'Eugeniya'), ('620.9404580152672', 'Katie'), ('622.7673469387755', 'Manon'), ('624.6089494163424', 'Jacqueline'), ('625.013698630137', 'Berfu'), ('626.441935483871', 'Milana'), ('627.12', 'Adrijana'), ('627.7027027027027', 'Indire'), ('627.7777777777778', 'Zhanlan'), ('628.075', 'Miriam Bianca'), ('629.0081967213115', 'Zhaoxuan'), ('629.6443987667009', 'Daria'), ('630.7953529937444', 'Polina'), ('631.8181818181819', 'Nadja'), ('632.2824427480916', 'Shilin'), ('632.3150684931506', 'Snehadevi S'), ('633.027027027027', 'Jasmin'), ('633.5454545454545', 'Kaja'), ('633.9770491803279', 'Quirine'), ('634.3620689655172', 'Natalija'), ('634.7950310559006', 'Melis'), ('635.346516007533', 'Kanae'), ('635.7449168207024', 'Sung Hee'), ('637.4607407407408', 'Nadiya'), ('638.6666666666666', 'Rianna'), ('638.88', 'Ashley'), ('640.8727272727273', 'Sofya'), ('641.046992481203', 'Emma'), ('642.1811989100818', 'Jasmina'), ('642.9487179487179', 'Ylona Georgiana'), ('643.422641509434', 'Keren'), ('643.616049382716', 'Cristina'), ('643.6939163498099', 'Lara'), ('643.9216101694915', 'Daniella'), ('645.2279792746114', 'Carolin'), ('646.0441176470588', 'Ioana Loredana'), ('647.5205479452055', 'Britt'), ('647.922077922078', 'Fernanda'), ('648.2984054669704', 'Fatma'), ('649.5154639175257', 'Sherazad'), ('650.1206896551724', 'Theo'), ('650.1367521367522', 'Chalena'), ('650.6240276577355', 'Amanda'), ('651.4246575342465', 'Riya'), ('652.1984732824427', 'Elyne'), ('652.917808219178', 'Karman'), ('653.2805383022775', 'Bianca'), ('653.5070422535211', 'Prarthana G'), ('654.3773657782928', 'Diana'), ('655.7464059804486', 'Jessica'), ('655.7828348504552', 'Ipek'), ('656.2851711026616', 'Eduarda'), ('656.2932551319648', 'Basak'), ('656.8787276341948', 'Yi Jing'), ('657.0171919770773', 'Marcella'), ('657.3816155988858', 'Patrycja'), ('657.8934169278997', 'Lena Marie'), ('658.5074074074074', 'Arabela'), ('659.2103004291846', 'Vivienne'), ('659.3055555555555', 'Cindy'), ('660.8924731182796', 'Ola'), ('661.2222222222222', 'Xenia'), ('661.3972602739726', 'Ying'), ('661.8474576271186', 'Valeria'), ('661.9589041095891', 'Kajsa'), ('662.1182795698925', 'Mariam'), ('665.686684073107', 'Despina'), ('665.8219178082192', 'Sadafmoh'), ('666.1496062992126', 'Lizette'), ('666.2853403141361', 'Natasa'), ('668.2581196581197', 'Piia'), ('669.2982456140351', 'Dijana'), ('669.448275862069', 'Ria'), ('669.8542372881356', 'Romana Caroline'), ('670.9108527131783', 'Vivian'), ('671.2584369449378', 'Anastasiya'), ('672.2258064516129', 'Raluca Elena'), ('672.730407523511', 'Emelyn'), ('673.6507936507936', 'Lisanne'), ('673.6635071090047', 'Hilda'), ('673.7509157509157', 'Fatima'), ('673.9809523809524', 'Pei Chi'), ('674.9672514619883', 'Karen'), ('675.2445414847161', 'Chloe'), ('675.4124293785311', 'Priscilla'), ('676.1090909090909', 'Rebeka'), ('676.90589198036', 'Michaela'), ('677.4458598726114', 'Laetitia'), ('680.1050228310502', 'Hao Chen'), ('680.1724137931035', 'Lou'), ('680.677700348432', 'Katharina'), ('681.7736842105263', 'Belinda'), ('681.9417582417583', 'Tatiana'), ('682.0972222222222', 'Emina'), ('682.2005532503458', 'Sabina'), ('682.961038961039', 'Jia Jing'), ('683.1081081081081', 'Panna'), ('684.4892086330935', 'Josephine'), ('684.8497652582159', 'Agustina'), ('686.2234432234433', 'Angelica'), ('686.3047619047619', 'Oana Georgeta'), ('686.6470588235294', 'Elena Teodora'), ('687.0229885057471', 'Ines'), ('687.25', 'Mai'), ('687.3120567375887', 'Kim'), ('689.891129032258', 'Mana'), ('691.9934640522875', 'Sviatlana'), ('692.1515151515151', 'Macarena'), ('692.390625', 'Chun Mei'), ('693.6215943491422', 'Giulia'), ('694.0659898477157', 'Agnese'), ('694.2', 'Shanshan'), ('694.341935483871', 'Harriet'), ('694.4808743169399', 'Xin'), ('695.574074074074', 'Marie'), ('696.2878787878788', 'Tess'), ('696.4126984126984', 'Vanda'), ('696.4752475247525', 'Helene'), ('696.7697332607512', 'Gabriela'), ('696.952380952381', 'Bianka'), ('696.9606060606061', 'Karina Ildor'), ('698.7567567567568', 'Suzy'), ('698.8285714285714', 'Yuki Kristina'), ('699.7864583333334', 'Janina'), ('700.7644444444444', 'Raquel'), ('701.4009009009009', 'Wan Ting'), ('702.1784386617101', 'Yasmin'), ('703.1372549019608', 'Sanaz'), ('704.9618138424821', 'Akari'), ('705.4688346883469', 'Benedetta'), ('705.4716981132076', 'Emilie'), ('705.5625', 'Iga'), ('705.8493150684932', 'Qiu Yu'), ('707.1467889908257', 'Julieta Lara'), ('708.618398637138', 'Celine'), ('709.4247787610619', 'Caitlin'), ('709.625', 'Zarah'), ('710.3822682786414', 'Alice'), ('710.3972602739726', 'Petia'), ('710.9617224880383', 'Aki'), ('712.2780373831775', 'Ximena'), ('714.8653846153846', 'Xi Yao'), ('716.3150684931506', 'Gozal'), ('717.7932330827068', 'Bermet'), ('718.047619047619', 'Michika'), ('718.5202702702703', 'Alexia'), ('718.725321888412', 'Carolina'), ('719.3061224489796', 'Chelsey'), ('720.132932166302', 'Natalia'), ('720.1431870669746', 'Ani'), ('720.6428571428571', 'Cristina Madalina'), ('720.7490039840637', 'Daiana'), ('721.14', 'Jillian'), ('721.1643835616438', 'Mirabelle'), ('722.5087719298245', 'Lilla'), ('722.6986301369863', 'Dasha'), ('722.7286493034525', 'Federica'), ('723.484076433121', 'Nikola'), ('724.5', 'Sofie'), ('724.8712871287129', 'Yevgeniya'), ('724.9178743961353', 'Isabel'), ('725.3893333333333', 'Anja'), ('725.5322195704057', 'Yuliana'), ('726.1737089201878', 'Hua Chen'), ('726.1852387843704', 'Veronica'), ('726.2657657657658', 'Andreea Roxana'), ('728.5', 'Ahsha'), ('728.7443609022556', 'Sina'), ('728.7630208333334', 'Oceane'), ('729.0117647058823', 'Vendula'), ('729.0671936758894', 'Hyun Hui'), ('729.1047904191616', 'Poojashree'), ('730.3831168831168', 'Marianna'), ('732.1666666666666', 'Julyette Maria Josephine'), ('732.4260679079956', 'Maya'), ('732.7386018237082', 'Iva'), ('733.1351351351351', 'Erina'), ('734.0', 'Magali'), ('734.6018957345972', 'Veronika'), ('736.1650485436893', 'Di'), ('736.2288557213931', 'Viktoriya'), ('736.4809523809524', 'Megan'), ('736.9747747747748', 'Elizabeth'), ('737.7547169811321', 'Xiaoxi'), ('737.862676056338', 'Pia'), ('739.04802259887', 'Jade'), ('739.7727272727273', 'Ting Fei'), ('740.0214504596527', 'Yana'), ('740.5361842105264', 'Prerna'), ('740.5879828326181', 'Pilar'), ('743.1953125', 'Tjasa'), ('743.6062176165804', 'Sarah Rebecca'), ('744.0', 'Caty'), ('744.7453250222618', 'Danielle'), ('745.421052631579', 'Neda'), ('745.433962264151', 'Maia'), ('746.0962962962963', 'Despoina'), ('746.4803493449782', 'Yurina'), ('747.3172413793103', 'Tayisiya'), ('747.3695652173913', 'Saska'), ('747.4375', 'Amandine'), ('748.0', 'Maddison'), ('748.6622691292876', 'Ingrid Esperanza'), ('748.7238095238096', 'Jaqueline Adina'), ('748.8250591016548', 'Yuka'), ('749.3582089552239', 'Chiraz'), ('750.3207810320781', 'Angelina'), ('750.9460093896714', 'Ellen'), ('751.2668918918919', 'Valentine'), ('751.8679119412942', 'Martina'), ('753.2253164556962', 'Nicola'), ('753.8346456692914', 'Margot'), ('755.4649681528663', 'Cecilia'), ('755.5813953488372', 'Peggy'), ('756.2549019607843', 'Kaitlyn'), ('756.3141592920354', 'Lucy'), ('757.2253521126761', 'Cornelia'), ('758.06', 'Lisa Maria'), ('758.1714285714286', 'Romy'), ('758.5342960288808', 'Dejana'), ('759.2894995093228', 'Stefania'), ('759.5352697095435', 'Gaia'), ('760.4920634920635', 'Jaeda'), ('760.639175257732', 'Anna Arina'), ('762.1578947368421', 'Nidhi'), ('762.4081632653061', 'Kim Alice'), ('762.7606382978723', 'Anne Liz'), ('763.1014492753624', 'Georgia Andreea'), ('763.888198757764', 'Amy'), ('763.8900651465798', 'Barbara'), ('764.6785714285714', 'Deborah'), ('765.1395348837209', 'Kamonwan'), ('765.3777777777777', 'Zoe'), ('766.2549019607843', 'Ingrid'), ('766.4794520547945', 'Charlene'), ('767.4963503649635', 'Naiktha'), ('767.7730496453901', 'Jeannine'), ('768.560975609756', 'Yan'), ('770.8472222222222', 'Emi'), ('772.2402912621359', 'Kazusa'), ('772.2857142857143', 'Genevieve'), ('772.3186813186813', 'Szabina'), ('772.6981132075472', 'Momoko'), ('772.8571428571429', 'Akilah'), ('773.5666666666667', 'Leolia'), ('774.5654761904761', 'Marine'), ('774.64', 'Marcela'), ('774.6837606837607', 'Haruka'), ('775.2734375', 'Albina'), ('775.7269624573379', 'Rishika'), ('778.1648648648649', 'Nicolette'), ('780.7905027932961', 'Klaudia'), ('781.3218390804598', 'Etsuko'), ('781.6993464052288', 'Isabelle'), ('783.1711711711712', 'Marrit'), ('783.8288043478261', 'Gracia'), ('784.0465949820789', 'Seung Yeon'), ('784.8009049773756', 'Makiho'), ('785.0707482993197', 'Beatrice'), ('787.0', 'Maegan'), ('787.5416666666666', 'Ludmilla'), ('787.7645348837209', 'Sylwia'), ('788.0384615384615', 'Erica'), ('788.2622950819672', 'Mira'), ('789.2857142857143', 'Chengyiyi'), ('789.6113989637306', 'Ting Jr'), ('790.1538461538462', 'Adeliya'), ('790.46875', 'Asiya'), ('791.0756207674943', 'Yi'), ('791.1240506329113', 'Syna'), ('791.2352941176471', 'Zeel'), ('792.1927710843373', 'Sri Vaishnavi'), ('792.5', 'Gabriella'), ('794.4931506849315', 'Jiahui'), ('794.5416666666666', 'Zuzanna'), ('794.7118644067797', 'Gloria'), ('795.4736842105264', 'Pranjala'), ('795.6201232032854', 'Rocio'), ('797.2128378378378', 'Lidziya'), ('797.383606557377', 'Guadalupe'), ('798.3181818181819', 'Kylie'), ('799.0552486187845', 'Ionela Andreea'), ('799.0650406504066', 'Carolina Meligeni Rodrigues'), ('799.1332586786115', 'Yumi'), ('799.1875', 'Matilda'), ('799.8668224299065', 'Valeriya'), ('799.9940828402367', 'Kanami'), ('801.6712328767123', 'Yixuan'), ('801.6850649350649', 'Camilla'), ('801.6933333333334', 'Dalia'), ('801.84375', 'Andreea Amalia'), ('802.7222222222222', 'Thai Sa Grana'), ('803.3904761904762', 'Ashvarya'), ('803.7139479905437', 'Camelia Elena'), ('803.8666666666667', 'Domenica'), ('803.9764705882353', 'Amina'), ('804.6277056277056', 'Brooke'), ('804.873831775701', 'Kelly'), ('805.7028985507246', 'Dana'), ('806.2648401826484', 'Valerie'), ('807.616', 'Karla'), ('807.7222222222222', 'Kennedy'), ('808.4545454545455', 'Abbie'), ('808.5096774193548', 'Rutuja'), ('809.697247706422', 'Dianne'), ('810.6666666666666', 'Tinatin'), ('812.4581005586592', 'Sun Jung'), ('812.6', 'Ju Eun'), ('812.85', 'Meiling'), ('813.1351351351351', 'Giada'), ('813.1357142857142', 'Sowjanya'), ('814.4171122994652', 'Xiao'), ('818.2043795620438', 'Jessika'), ('819.3400503778338', 'Ema'), ('819.8425531914894', 'Min Hwa'), ('82.13112391930835', 'Na'), ('820.4563492063492', 'Alena'), ('820.59375', 'Luisa Marie'), ('822.3459915611814', 'Alix'), ('823.0909090909091', 'Ashling'), ('823.6306306306307', 'Clelia'), ('823.8770833333333', 'Vladimira'), ('823.9789029535865', 'Ji Hee'), ('824.3936170212766', 'Yukun'), ('825.039603960396', 'Malin'), ('825.7291666666666', 'Nazari'), ('825.972972972973', 'Leonie'), ('826.0238095238095', 'Komola'), ('826.1388888888889', 'Qianhui'), ('826.2619047619048', 'Claudia'), ('826.6486486486486', 'Phillis'), ('828.0675675675676', 'Nagi'), ('829.5625', 'Astra'), ('832.7818181818182', 'Corina'), ('832.9585365853659', 'Sakiko'), ('833.5061082024433', 'Ji Young'), ('834.1005025125628', 'Bernice'), ('834.2066115702479', 'Borislava'), ('835.1132075471698', 'Constanza'), ('836.6804511278195', 'Katherine'), ('837.7730496453901', 'Kristy'), ('838.1780821917808', 'Manca'), ('838.8065217391304', 'Tomoko'), ('839.4923664122138', 'Ofri'), ('840.0776699029126', 'Saray'), ('841.0514705882352', 'Nives'), ('841.4051724137931', 'Christine'), ('841.7167381974249', 'Tori'), ('841.8387096774194', 'Stamatia'), ('842.1553398058253', 'Carmen Raluca'), ('842.7045454545455', 'Eetee'), ('842.8446601941747', 'Ana Bianca'), ('843.6428571428571', 'Mirjam'), ('843.7260273972603', 'Alba'), ('843.9007633587786', 'Nicky'), ('844.0692307692308', 'Ulyana'), ('844.203007518797', 'Svenja'), ('844.3856812933026', 'Hae Sung'), ('844.7460317460317', 'Kotomi'), ('844.9310344827586', 'Yoon Young'), ('845.375', 'Imane Maelle'), ('845.740638002774', 'Lucia'), ('845.986301369863', 'Lucrezia'), ('846.2727272727273', 'Ludmila'), ('846.9154228855722', 'Kimberley'), ('847.0941176470589', 'Ilze'), ('848.4418604651163', 'Xiaorong'), ('848.9908952959029', 'Chihiro'), ('850.9791666666666', 'Anhzelika'), ('851.1224489795918', 'Marta Huqi'), ('851.5633802816901', 'Sharmada'), ('853.3908045977012', 'Fiona'), ('854.3170731707318', 'Brianna'), ('855.813627254509', 'Alicja'), ('856.0782608695653', 'Vladyslava'), ('857.1692307692308', 'Yukina'), ('857.9508196721312', 'Sang Hee'), ('858.4107142857143', 'Lea'), ('858.9173789173789', 'Seo Kyung'), ('859.2706766917294', 'Rachael'), ('859.3059701492538', 'Anamika'), ('859.8103448275862', 'Vaszilisza'), ('859.8644067796611', 'Luca'), ('860.8104265402843', 'Hirono'), ('861.5050505050505', 'Maria Constanza De Las Mercedes'), ('861.5102040816327', 'Janneke'), ('863.3225806451613', 'Joana'), ('863.5507246376811', 'Patcharin'), ('863.7826086956521', 'Desirae'), ('864.1538461538462', 'Shuo'), ('866.0454545454545', 'Oyku'), ('866.0693069306931', 'Min'), ('866.1075949367089', 'Iris'), ('867.5288461538462', 'Zalina'), ('868.2191780821918', 'Ilka'), ('868.6521739130435', 'Nadezda'), ('868.7624113475177', 'Paula Catalina'), ('868.8904109589041', 'Karine'), ('869.1666666666666', 'Mary'), ('869.1702127659574', 'Sylvia'), ('869.3571428571429', 'Ingrid Alexandra'), ('870.9007633587786', 'Liz Tatiane'), ('871.0790513833992', 'Kaori'), ('871.109375', 'Ivania'), ('871.6926829268293', 'Alona'), ('872.0', 'Ivone'), ('872.0930232558139', 'Breaunna'), ('873.6229508196722', 'Karoline'), ('874.8181818181819', 'Chisa'), ('875.0', 'Mahak'), ('875.9277108433735', 'Sarah Beth'), ('875.9772727272727', 'Clemence'), ('876.1730769230769', 'Eliessa'), ('876.7428571428571', 'Yuki'), ('878.0138888888889', 'Bhuvana'), ('878.1666666666666', 'Tornado Alicia'), ('878.3939393939394', 'Andrea Renee'), ('878.4606741573034', 'Ziyue'), ('878.6666666666666', 'Nam Yeon'), ('880.6527777777778', 'Morgane'), ('882.1071428571429', 'Katharine'), ('883.0777142857143', 'Natasha'), ('883.2352941176471', 'Quinn'), ('883.6090909090909', 'Karina'), ('883.7787610619469', 'Noelle'), ('885.0976744186047', 'Sonja'), ('885.7495107632094', 'Luciana'), ('886.1407407407407', 'Whitney'), ('887.2875', 'Liubov'), ('887.4545454545455', 'Lesedi Sheya'), ('887.502487562189', 'Kyle'), ('888.0055096418732', 'Hulya'), ('888.2213114754098', 'Elisabeth'), ('888.7272727272727', 'Satsuki'), ('889.8028169014085', 'Seone'), ('890.4455445544554', 'Nan Nan'), ('890.6351351351351', 'Carmen'), ('890.8728448275862', 'Ai'), ('891.2340425531914', 'Yuanyi'), ('891.6309523809524', 'Mayar'), ('892.3561643835617', 'Ylena'), ('894.3846153846154', 'Varunya'), ('896.7413793103449', 'Maja'), ('897.0974358974358', 'Manisha'), ('897.4873949579832', 'Yelena'), ('897.6951219512196', 'Shweta'), ('899.9150326797386', 'Libby'), ('900.75', 'Merel'), ('901.3333333333334', 'Kaitlin'), ('901.8717948717949', 'Ayan'), ('902.1470588235294', 'Jenny'), ('903.1666666666666', 'Francisca'), ('903.4289156626506', 'Oleksandra'), ('903.5769230769231', 'Karyn'), ('904.6538461538462', 'Blanca'), ('905.6324786324786', 'Sabrina'), ('907.3557312252965', 'Lu'), ('907.4', 'Ann'), ('908.156862745098', 'Lee'), ('908.3962264150944', 'Mara'), ('909.2', 'Jada'), ('910.396694214876', 'Katherine Gabriela'), ('910.5714285714286', 'Laura D'), ('911.7241379310345', 'Eudice Wong'), ('911.7619047619048', 'Suellen'), ('912.1077844311377', 'Tatsiana'), ('912.120218579235', 'Miriam'), ('912.1523178807947', 'Ai Wen'), ('912.71875', 'Blair'), ('913.4380165289256', 'Nika'), ('913.7272727272727', 'Draginja'), ('914.5321100917431', 'Hayley'), ('914.8607594936709', 'Hongrui'), ('915.5892857142857', 'Pavla'), ('915.5932203389831', 'Aymet'), ('916.559633027523', 'Zsofia'), ('916.7115384615385', 'Anna Katalina'), ('917.0', 'Brienne'), ('918.0769230769231', 'Maria Lourdes'), ('919.6147540983607', 'Ineke'), ('920.1276595744681', 'Dabin'), ('921.3333333333334', 'Valentina'), ('921.6216216216217', 'Nora'), ('922.2255639097745', 'Anaeve'), ('924.2782608695652', 'Kana'), ('924.8818897637796', 'Shakhlo'), ('924.9325842696629', 'Josepha'), ('925.0028776978418', 'Alina'), ('925.4230769230769', 'Jodie Anna'), ('925.9865771812081', 'Ho Ching'), ('927.0350877192982', 'Kassandra'), ('927.7647058823529', 'Charlotte'), ('928.3333333333334', 'Karola Patricia'), ('929.0599369085173', 'Dunja'), ('929.4388489208633', 'Napatsakorn'), ('929.4398496240601', 'Linda'), ('929.6928104575163', 'Natia'), ('930.7027027027027', 'Naima'), ('931.025641025641', 'Joanna'), ('932.8940397350993', 'Samira'), ('935.081081081081', 'Zoe Gwen'), ('935.2322946175638', 'Shivika'), ('936.3392857142857', 'Nozomi'), ('937.7878787878788', 'Wushuang'), ('937.7945205479452', 'Plobrung'), ('939.746835443038', 'Steffi'), ('940.2125603864735', 'Agni'), ('941.4724409448819', 'Catherine'), ('942.7969696969697', 'Erin'), ('943.421052631579', 'Qianqian'), ('943.5432098765432', 'Vladica'), ('943.7397959183673', 'Ainhoa'), ('943.7716535433071', 'Emmanuelle'), ('944.2432432432432', 'Sultan'), ('945.625', 'Alexandria'), ('946.8846153846154', 'Michele Alexandra'), ('946.8934426229508', 'Marlies'), ('947.3333333333334', 'Malou'), ('947.472972972973', 'Anita'), ('949.1239316239316', 'Denise'), ('949.6575342465753', 'Franziska'), ('949.7916666666666', 'Sirui'), ('949.7944444444445', 'Csilla'), ('949.8059701492538', 'Tamachan'), ('95.03465982028241', 'Kimiko'), ('950.0277777777778', 'Eleonora'), ('950.6263736263736', 'Miriana'), ('950.8813559322034', 'Chia Hsien'), ('950.9090909090909', 'Ester'), ('951.0075757575758', 'Veronica M'), ('951.4146341463414', 'Ariadna'), ('951.9764150943396', 'Alice Andrada'), ('952.4411764705883', 'Lynn'), ('952.5619834710744', 'Brynn'), ('954.046875', 'India'), ('954.6', 'Xiyu'), ('955.7833333333333', 'Radina'), ('956.0333333333333', 'Andreea'), ('956.5754716981132', 'Anastasia Evgenyevna'), ('957.2', 'Hanna'), ('957.9512195121952', 'Guiomar'), ('958.0955414012739', 'Madrie'), ('958.1327800829876', 'Verena'), ('959.6981132075472', 'Linnea'), ('960.4941860465116', 'Giorgia'), ('960.6770186335403', 'Agata'), ('961.2631578947369', 'Ana Victoria'), ('961.876923076923', 'Yuenu'), ('962.0188679245283', 'Natella'), ('962.5', 'Ida'), ('962.8536585365854', 'Kanika'), ('963.5', 'Terri'), ('964.1224489795918', 'Clementina Eugenia'), ('965.0', 'Rosa'), ('965.5343511450382', 'Noel'), ('966.0540540540541', 'Estela'), ('966.0588235294117', 'Shuyue'), ('966.4671052631579', 'Viktoryia'), ('967.2978723404256', 'Claudia Antonia'), ('967.6708860759494', 'Jessy'), ('967.9034090909091', 'Shao Yuan'), ('969.5882352941177', 'Anouk'), ('969.6588235294117', 'Taisiya'), ('969.8181818181819', 'Anette'), ('970.3620689655172', 'Andie K'), ('970.9846153846154', 'Brandy'), ('971.2865853658536', 'Beatriz Maria'), ('972.75', 'Lorraine M'), ('973.8617021276596', 'Yeong Won'), ('973.8717948717949', 'Maxine'), ('974.2702702702703', 'Lusine'), ('974.8', 'Simran Kaur'), ('975.3484848484849', 'Sinead'), ('975.6271186440678', 'Ksenija'), ('977.4539007092199', 'Daneika'), ('977.9640591966173', 'Chiara'), ('978.0229885057471', 'Khristina'), ('978.2708333333334', 'Eliza'), ('978.7321428571429', 'Ornella'), ('980.2232142857143', 'Ioana'), ('980.3333333333334', 'Ena'), ('980.575', 'Monika'), ('980.6666666666666', 'Suzuho'), ('980.9076923076923', 'Siqi'), ('981.7517730496454', 'Luisa'), ('981.9814814814815', 'Elizaveta Anna'), ('982.6666666666666', 'Lyann'), ('982.7222222222222', 'Suzan'), ('982.7397260273973', 'Sabastiani'), ('983.0410958904109', 'Yasmine'), ('983.1290322580645', 'Jazzamay'), ('983.359649122807', 'Yue'), ('983.4174757281553', 'Demi'), ('984.1714285714286', 'Rosie'), ('985.7211538461538', 'Gabrielle Faith'), ('986.3944099378882', 'Chun Yan'), ('986.82', 'Lindsey'), ('987.504761904762', 'Mia Nicole'), ('987.6739130434783', 'Margarida'), ('988.7425149700599', 'Li'), ('989.1904761904761', 'Pamela'), ('989.75', 'Zhuoma'), ('990.5210084033613', 'Brittany'), ('990.6', 'Kseniia'), ('992.4222222222222', 'Boyan'), ('992.4870588235294', 'Tyra'), ('992.7225433526012', 'Mi Rae'), ('993.1351351351351', 'Melisa'), ('993.175925925926', 'Marianne'), ('993.2105263157895', 'Josie'), ('993.4255319148937', 'Stefana'), ('994.0612244897959', 'Gabriela Nicole'), ('994.4769230769231', 'Dan Ni'), ('995.4074074074074', 'Guzal'), ('996.0408163265306', 'Lisa Marie'), ('996.2574257425742', 'Claudia Gianina'), ('996.8148148148148', 'Laili'), ('998.5238095238095', 'Sai Samhitha'), ('998.7722772277227', 'Cynthia'), ('999.0215053763441', 'Voni'), ('999.15625', 'Malene'), ('999.2', 'Frances'), ('999.375', 'Mi Zhuoma')] != [('Aastha', '1199.8235294117646'), ('Abbi', '1110.0434782608695'), ('Abbie', '808.4545454545455'), ('Abigail', '387.66706161137444'), ('Abiodun', '1039.6744186046512'), ('Abir', '1228.75'), ('Adeliya', '790.1538461538462'), ('Adnya', '1122.4423076923076'), ('Adriana', '619.6814159292036'), ('Adrienn', '1213.1666666666667'), ('Adrijana', '627.12'), ('Adva', '1255.3333333333333'), ('Afroditi', '1155.0392156862745'), ('Agata', '960.6770186335403'), ('Agata Jadwiga', '1082.3548387096773'), ('Agne', '1231.5'), ('Agnes', '391.3003629764065'), ('Agnese', '694.0659898477157'), ('Agni', '940.2125603864735'), ('Agnieszka', '122.19587628865979'), ('Agustina', '684.8497652582159'), ('Agustina Elena', '1154.25'), ('Ah', '1156.340425531915'), ('Ahlam', '1248.72'), ('Ahsha', '728.5'), ('Ai', '890.8728448275862'), ('Ai Wen', '912.1523178807947'), ('Aida', '1110.3333333333333'), ('Aiko', '284.8724727838258'), ('Ailen', '1034.5833333333333'), ('Aimee', '1200.2'), ('Aina', '1164.95'), ('Ainhoa', '943.7397959183673'), ('Aishwarya', '1024.625'), ('Ajla', '302.84831460674155'), ('Akari', '704.9618138424821'), ('Akgul', '215.25185185185185'), ('Aki', '710.9617224880383'), ('Akiho', '1145.8235294117646'), ('Akiko', '493.98205383848455'), ('Akilah', '772.8571428571429'), ('Akvile', '1038.35'), ('Alana', '1119.1639344262296'), ('Alba', '843.7260273972603'), ('Alberta', '343.22432701894314'), ('Albina', '775.2734375'), ('Aldana', '1185.7142857142858'), ('Alejandra', '1067.019801980198'), ('Aleksandra', '450.22998544395927'), ('Aleksandrina', '578.07962529274'), ('Alena', '820.4563492063492'), ('Alessandra', '1123.4864864864865'), ('Alessia', '1057.628205128205'), ('Alessondra', '1145.1641791044776'), ('Alexa', '383.9921465968586'), ('Alexandra', '569.2647632558965'), ('Alexandria', '945.625'), ('Alexia', '718.5202702702703'), ('Alexis', '604.15'), ('Aliaksandra', '441.9846743295019'), ('Alice', '710.3822682786414'), ('Alice Andrada', '951.9764150943396'), ('Alicia', '1105.1298701298701'), ('Alicja', '855.813627254509'), ('Alina', '925.0028776978418'), ('Aliona', '611.35'), ('Alisa', '453.01556420233464'), ('Alison', '403.48784576697403'), ('Alix', '822.3459915611814'), ('Alize', '252.11485774499474'), ('Alla', '217.85922330097088'), ('Allie', '557.9232456140351'), ('Almudena', '1157.8'), ('Alona', '871.6926829268293'), ('Alory Regina Elorriaga', '1181.6078431372548'), ('Alyona', '496.9431818181818'), ('Amanda', '650.6240276577355'), ('Amandine', '747.4375'), ('Amelie', '1011.3666666666667'), ('Amina', '803.9764705882353'), ('Aminat', '613.195652173913'), ('Amira', '1075.8260869565217'), ('Amra', '415.9078341013825'), ('Amrita', '1209.4'), ('Amy', '763.888198757764'), ('An Sophie', '460.8932038834951'), ('Ana', '396.2893280632411'), ('Ana Bianca', '842.8446601941747'), ('Ana Clara', '524.9192825112108'), ('Ana Gabriela', '1084.7916666666667'), ('Ana Luisa', '1243.4285714285713'), ('Ana Paula', '1031.228855721393'), ('Ana Sofia', '496.7156398104265'), ('Ana Victoria', '961.2631578947369'), ('Anabel', '144.3264367816092'), ('Anaeve', '922.2255639097745'), ('Anais', '482.26169844020797'), ('Anamika', '859.3059701492538'), ('Anastasia', '430.0872542522642'), ('Anastasia Evgenyevna', '956.5754716981132'), ('Anastasiia', '1245.75'), ('Anastasija', '221.66153846153847'), ('Anastasiya', '671.2584369449378'), ('Anca', '1127.7368421052631'), ('Anda', '1150.0'), ('Andie K', '970.3620689655172'), ('Andjela', '1063.4736842105262'), ('Andra Maria', '1275.8235294117646'), ('Andrea', '414.4332292750607'), ('Andrea Renee', '878.3939393939394'), ('Andreea', '956.0333333333333'), ('Andreea Amalia', '801.84375'), ('Andreea Roxana', '726.2657657657658'), ('Andreja', '424.64521739130436'), ('Andressa Cristina', '1184.0416666666667'), ('Andrina', '1045.6666666666667'), ('Aneta', '1152.0857142857142'), ('Anett', '367.2274678111588'), ('Anette', '969.8181818181819'), ('Ange Oby', '1226.3333333333333'), ('Angela', '1128.7272727272727'), ('Angelica', '686.2234432234433'), ('Angeliki', '1089.1603773584907'), ('Angelina', '750.3207810320781'), ('Angelique', '308.56833824975416'), ('Anhelina', '432.6949152542373'), ('Anhzelika', '850.9791666666666'), ('Ani', '720.1431870669746'), ('Anita', '947.472972972973'), ('Anja', '725.3893333333333'), ('Anke', '1228.388888888889'), ('Ankita', '618.4714285714285'), ('Ann', '907.4'), ('Anna', '551.5557158312297'), ('Anna Arina', '760.639175257732'), ('Anna Giulia', '428.5496828752643'), ('Anna Karolina', '345.51020408163265'), ('Anna Katalina', '916.7115384615385'), ('Anna Lena', '201.87700534759358'), ('Anna Maria', '1070.3967391304348'), ('Annalisa', '583.9347826086956'), ('Anne', '248.74237737516572'), ('Anne Liz', '762.7606382978723'), ('Anne Marie', '1237.6363636363637'), ('Anne Sophie', '1252.0'), ('Annie', '1042.037037037037'), ('Annika', '265.79487179487177'), ('Anouk', '969.5882352941177'), ('Antonela', '1051.7096774193549'), ('Antonia', '589.1298076923077'), ('Antonina', '1049.4655172413793'), ('Anushka', '1037.0833333333333'), ('Ao', '617.3333333333334'), ('Apichaya', '1016.5714285714286'), ('Arabela', '658.5074074074074'), ('Arantxa', '279.23336006415394'), ('Aranza', '490.4144736842105'), ('Aravane', '200.97080291970804'), ('Ariadna', '951.4146341463414'), ('Arina', '560.6778190830236'), ('Arina Gabriela', '1224.0'), ('Arlinda', '1074.3333333333333'), ('Arthi', '1281.8461538461538'), ('Aryna', '349.54794520547944'), ('Aselya', '1181.27868852459'), ('Asha', '1151.95'), ('Ashleigh', '331.3681818181818'), ('Ashley', '638.88'), ('Ashling', '823.0909090909091'), ('Ashmitha', '1018.6637931034483'), ('Ashvarya', '803.3904761904762'), ('Asia', '453.43392070484583'), ('Asiya', '790.46875'), ('Assia', '1172.5531914893618'), ('Astra', '829.5625'), ('Astrid Wanja', '1086.45'), ('Audrey', '591.2544731610338'), ('Avgusta', '1208.4285714285713'), ('Axana', '1064.0'), ('Ayaka', '552.4653465346535'), ('Ayan', '901.8717948717949'), ('Ayano', '597.6981132075472'), ('Ayla', '397.83561643835617'), ('Aymet', '915.5932203389831'), ('Ayu Fani', '479.5530612244898'), ('Ayumi', '412.74466019417474'), ('Azra', '556.2303370786517'), ('Barbara', '763.8900651465798'), ('Barbora', '252.6093155893536'), ('Basak', '656.2932551319648'), ('Beatrice', '785.0707482993197'), ('Beatriz', '457.4050279329609'), ('Beatriz Magdalena', '1253.4'), ('Beatriz Maria', '971.2865853658536'), ('Beauty', '1382.1538461538462'), ('Belen', '1167.3368421052633'), ('Belinda', '681.7736842105263'), ('Benedetta', '705.4688346883469'), ('Berfu', '625.013698630137'), ('Bermet', '717.7932330827068'), ('Bernarda', '541.273631840796'), ('Bernice', '834.1005025125628'), ('Berta', '1005.75'), ('Bethanie', '146.59709379128137'), ('Betina', '1229.5714285714287'), ('Bhuvana', '878.0138888888889'), ('Bianca', '653.2805383022775'), ('Bianka', '696.952380952381'), ('Bibiane', '550.1941544885177'), ('Blair', '912.71875'), ('Blanca', '904.6538461538462'), ('Blessing', '1221.8333333333333'), ('Boba', '1254.6341463414635'), ('Bojana', '392.7313829787234'), ('Borislava', '834.2066115702479'), ('Boyan', '992.4222222222222'), ('Brandy', '970.9846153846154'), ('Breaunna', '872.0930232558139'), ('Brenda', '211.01377118644066'), ('Brianna', '854.3170731707318'), ('Brienne', '917.0'), ('Brindtha', '1126.3333333333333'), ('Britt', '647.5205479452055'), ('Brittany', '990.5210084033613'), ('Brooke', '804.6277056277056'), ('Brynn', '952.5619834710744'), ('Bunyawi', '555.3384615384615'), ('Busra', '1140.981981981982'), ('Cagla', '311.87854251012146'), ('Caitlin', '709.4247787610619'), ('Camelia Elena', '803.7139479905437'), ('Cameron', '1192.1818181818182'), ('Camila', '539.7944621938232'), ('Camila Vital', '1192.3783783783783'), ('Camilla', '801.6850649350649'), ('Camille', '1112.9450549450548'), ('Cara', '236.07412398921832'), ('Carina', '416.3666666666667'), ('Carla', '411.70779777206513'), ('Carlota', '1236.7777777777778'), ('Carlotta', '1127.9338842975208'), ('Carly', '318.69978858350953'), ('Carmen', '890.6351351351351'), ('Carmen Raluca', '842.1553398058253'), ('Carol', '564.1434426229508'), ('Carolin', '645.2279792746114'), ('Carolina', '718.725321888412'), ('Carolina Meligeni Rodrigues', '799.0650406504066'), ('Caroline', '342.40130505709624'), ('Caroline B', '1161.5675675675675'), ('Carolyn', '1197.578947368421'), ('Carson', '1020.6'), ('Casey', '378.0163727959698'), ('Catalina', '293.76942355889724'), ('Catherine', '941.4724409448819'), ('Catherine Cartan', '134.21917808219177'), ('Caty', '744.0'), ('Cecilia', '755.4649681528663'), ('Cecilie Lundgaard', '1141.842105263158'), ('Celine', '708.618398637138'), ('Cemre', '1123.3855421686746'), ('Chalena', '650.1367521367522'), ('Chanel', '343.2835365853659'), ('Chanelle', '215.6615811373093'), ('Chang', '575.4626436781609'), ('Chanikarn', '1281.8461538461538'), ('Chantal', '609.90625'), ('Chantelle', '1128.030303030303'), ('Chaoyi', '1232.8'), ('Charlene', '766.4794520547945'), ('Charlotte', '927.7647058823529'), ('Chayenne', '593.9759036144578'), ('Chelsea', '1132.0'), ('Chelsey', '719.3061224489796'), ('Chen', '524.7444668008048'), ('Chengyiyi', '789.2857142857143'), ('Chi Chi', '464.1367781155015'), ('Chi Fan', '1039.3902439024391'), ('Chia Hsien', '950.8813559322034'), ('Chia Jung', '359.3764705882353'), ('Chiaki', '437.73858921161826'), ('Chiara', '977.9640591966173'), ('Chieh Yu', '533.9586374695864'), ('Chihiro', '848.9908952959029'), ('Chin Wei', '385.2651515151515'), ('Chinami', '615.2230215827338'), ('Ching Wen', '583.530303030303'), ('Chiraz', '749.3582089552239'), ('Chisa', '874.8181818181819'), ('Chloe', '675.2445414847161'), ('Chompoothip', '1112.1458333333333'), ('Christie', '1112.875'), ('Christina', '454.9920529801324'), ('Christine', '841.4051724137931'), ('Chun Mei', '692.390625'), ('Chun Yan', '986.3944099378882'), ('Cindy', '659.3055555555555'), ('Claire', '443.45754716981133'), ('Clara', '1190.7307692307693'), ('Claudia', '826.2619047619048'), ('Claudia Antonia', '967.2978723404256'), ('Claudia Gianina', '996.2574257425742'), ('Claudine', '383.6413199426112'), ('Clelia', '823.6306306306307'), ('Clemence', '875.9772727272727'), ('Clementina Eugenia', '964.1224489795918'), ('Clothilde', '620.4120171673819'), ('Coco', '270.5896860986547'), ('Colomba', '1165.093023255814'), ('Conny', '390.0'), ('Constance', '570.2723004694835'), ('Constanza', '835.1132075471698'), ('Constanze', '1245.3333333333333'), ('Corina', '832.7818181818182'), ('Corinna', '356.8219696969697'), ('Cornelia', '757.2253521126761'), ('Cory Ann', '406.5511363636364'), ('Costanza', '1049.0'), ('Cristiana', '554.5376344086021'), ('Cristina', '643.616049382716'), ('Cristina Andreea', '439.5747863247863'), ('Cristina Madalina', '720.6428571428571'), ('Csilla', '949.7944444444445'), ('Cynthia', '998.7722772277227'), ('Da Hye', '1010.3333333333334'), ('Dabin', '920.1276595744681'), ('Dagmara', '1159.1818181818182'), ('Daiana', '720.7490039840637'), ('Dajana', '1181.4736842105262'), ('Dalia', '801.6933333333334'), ('Dalila', '525.9552572706936'), ('Dalma', '279.16438356164383'), ('Damilola', '1493.0'), ('Damini', '1242.0'), ('Damira', '1198.3333333333333'), ('Dan Ni', '994.4769230769231'), ('Dana', '805.7028985507246'), ('Daneika', '977.4539007092199'), ('Danica', '380.609375'), ('Daniela', '348.6364892881825'), ('Daniella', '643.9216101694915'), ('Danielle', '744.7453250222618'), ('Danielle Rose', '434.68'), ('Danijela', '1107.0919540229886'), ('Danka', '302.83268482490274'), ('Daphne', '1226.5454545454545'), ('Daria', '629.6443987667009'), ('Darija', '464.95631067961165'), ('Dariya', '1132.1744186046512'), ('Darya', '531.1829405162739'), ('Dasha', '722.6986301369863'), ('Dayana', '576.4307692307692'), ('Dea', '550.9545454545455'), ('Deborah', '764.6785714285714'), ('Deeon', '1115.0851063829787'), ('Dejana', '758.5342960288808'), ('Demi', '983.4174757281553'), ('Denisa', '419.1633466135458'), ('Denise', '949.1239316239316'), ('Denise Antonela', '1160.3125'), ('Deniz', '551.5304659498208'), ('Deria', '1123.6486486486488'), ('Desirae', '863.7826086956521'), ('Desiree', '1032.2666666666667'), ('Despina', '665.686684073107'), ('Despoina', '746.0962962962963'), ('Destanee', '483.77464788732397'), ('Dewi', '1154.2857142857142'), ('Dhruthi', '615.1506849315068'), ('Di', '736.1650485436893'), ('Dia', '383.7832512315271'), ('Diana', '654.3773657782928'), ('Diana Maria', '1205.7692307692307'), ('Dianne', '809.697247706422'), ('Dijana', '669.2982456140351'), ('Dilara', '1248.2'), ('Dina', '1094.4583333333333'), ('Dinah', '268.05945945945945'), ('Doga Selen', '1234.6176470588234'), ('Domenica', '803.8666666666667'), ('Dominika', '171.71134020618555'), ('Dominique', '1042.7843137254902'), ('Donika', '1131.6333333333334'), ('Donna', '223.50900900900902'), ('Dorien', '1196.56'), ('Doroteja', '520.9397993311037'), ('Draginja', '913.7272727272727'), ('Dunja', '929.0599369085173'), ('Ebony', '1073.1752577319587'), ('Eden', '1029.6888888888889'), ('Edina', '211.67325428194994'), ('Eduarda', '656.2851711026616'), ('Eetee', '842.7045454545455'), ('Ege', '1214.857142857143'), ('Ekaterina', '471.8367290748899'), ('Ekaterine', '553.9434782608696'), ('Elaine', '1221.7931034482758'), ('Eleanor', '1066.5343511450383'), ('Elena', '324.3720930232558'), ('Elena Gabriela', '392.44444444444446'), ('Elena Teodora', '686.6470588235294'), ('Eleni', '249.5244140625'), ('Eleonora', '950.0277777777778'), ('Eleonore', '1087.372340425532'), ('Eliessa', '876.1730769230769'), ('Elina', '421.6573033707865'), ('Elisabeth', '888.2213114754098'), ('Elise', '334.7118644067797'), ('Elitsa', '418.39748953974896'), ('Elixane', '579.5214723926381'), ('Eliza', '978.2708333333334'), ('Elizabeta', '1154.2714285714285'), ('Elizabeth', '736.9747747747748'), ('Elizabeth Anita Alexandria', '1006.2982456140351'), ('Elizaveta', '489.5307517084282'), ('Elizaveta Anna', '981.9814814814815'), ('Elke', '1011.9433962264151'), ('Ella', '1168.7967479674796'), ('Ellen', '750.9460093896714'), ('Ellie', '508.340206185567'), ('Elodie', '1211.2333333333333'), ('Elyne', '652.1984732824427'), ('Ema', '819.3400503778338'), ('Emelyn', '672.730407523511'), ('Emi', '770.8472222222222'), ('Emilia', '1232.0'), ('Emiliana', '1022.9174311926605'), ('Emilie', '705.4716981132076'), ('Emilija', '1209.625'), ('Emiliya', '1092.2771084337348'), ('Emily', '585.093851132686'), ('Emily J', '1041.948717948718'), ('Emina', '682.0972222222222'), ('Emma', '641.046992481203'), ('Emma Christine', '1193.3529411764705'), ('Emmanuelle', '943.7716535433071'), ('En Pei', '1229.7333333333333'), ('Ena', '980.3333333333334'), ('Eri', '321.23595505617976'), ('Erica', '788.0384615384615'), ('Erika', '544.5041866028708'), ('Erin', '942.7969696969697'), ('Erina', '733.1351351351351'), ('Esen', '1218.5652173913043'), ('Estela', '966.0540540540541'), ('Estelle', '617.4935251798561'), ('Ester', '950.9090909090909'), ('Estrella', '347.34943639291464'), ('Etsuko', '781.3218390804598'), ('Eudice Wong', '911.7241379310345'), ('Eugenia', '1157.5'), ('Eugenie', '477.62886597938143'), ('Eugeniya', '620.6746411483253'), ('Eva', '500.29483037156706'), ('Eva Marie', '1083.8333333333333'), ('Eveliina', '1023.8690476190476'), ('Evelyn', '471.5439093484419'), ('Evgenia', '414.66339869281046'), ('Evgeniya', '442.0344827586207'), ('Fang Ying', '612.0185185185185'), ('Fangzhou', '406.9281767955801'), ('Fanny', '569.1904761904761'), ('Farah', '1106.3076923076924'), ('Fatima', '673.7509157509157'), ('Fatimah', '1070.9463414634147'), ('Fatma', '648.2984054669704'), ('Fatyha', '1015.5'), ('Federica', '722.7286493034525'), ('Federica Joe', '1204.7272727272727'), ('Fernanda', '647.922077922078'), ('Ferny', '1187.0384615384614'), ('Fiona', '853.3908045977012'), ('Flavia', '376.47888446215137'), ('Florencia', '451.5810397553517'), ('Frances', '999.2'), ('Francesca', '570.534951862704'), ('Francisca', '903.1666666666666'), ('Francoise', '437.05298013245033'), ('Franziska', '949.6575342465753'), ('Frederikke', '1244.3333333333333'), ('Freya', '544.1627906976744'), ('Gabriela', '696.7697332607512'), ('Gabriela Nicole', '994.0612244897959'), ('Gabriella', '792.5'), ('Gabrielle Faith', '985.7211538461538'), ('Gaelle', '1052.8314606741574'), ('Gaia', '759.5352697095435'), ('Gail', '526.2644836272041'), ('Galina', '305.19563522992985'), ('Ganna', '606.7211740041929'), ('Garbine', '229.3774193548387'), ('Gebriela', '1152.142857142857'), ('Genevieve', '772.2857142857143'), ('Georgia', '533.5940594059406'), ('Georgia Andreea', '763.1014492753624'), ('Georgiana', '1153.9166666666667'), ('Georgina', '396.225'), ('Ghislaine', '1150.6607142857142'), ('Giada', '813.1351351351351'), ('Gioia', '567.8518518518518'), ('Giorgia', '960.4941860465116'), ('Giorgie', '1226.5'), ('Giovanna', '1197.0'), ('Giulia', '693.6215943491422'), ('Giuliana', '584.359375'), ('Gloria', '794.7118644067797'), ('Gozal', '716.3150684931506'), ('Grace', '454.06233062330625'), ('Gracia', '783.8288043478261'), ('Greetje', '547.277108433735'), ('Greta', '296.8219584569733'), ('Guadalupe', '797.383606557377'), ('Guillermina', '1027.0'), ('Guiomar', '957.9512195121952'), ('Gulben', '1168.3396226415093'), ('Gulchekhra', '1196.0'), ('Gulnaz', '1236.6153846153845'), ('Guzal', '995.4074074074074'), ('Gyulnara', '1087.6216216216217'), ('Habiba', '1051.623188405797'), ('Hae Sung', '844.3856812933026'), ('Haine', '1179.4153846153847'), ('Hana', '1110.5376344086021'), ('Hanna', '957.2'), ('Hanyu', '543.968253968254'), ('Hao Chen', '680.1050228310502'), ('Hao Ching', '1153.936507936508'), ('Harmony', '574.8723404255319'), ('Harriet', '694.341935483871'), ('Haruka', '774.6837606837607'), ('Haruna', '512.1515151515151'), ('Hayley', '914.5321100917431'), ('Hazal', '1214.7692307692307'), ('Heather', '167.50632911392404'), ('Heidi', '417.44323483670297'), ('Helen', '1019.4107142857143'), ('Helene', '696.4752475247525'), ('Hikari', '1095.1176470588234'), ('Hilda', '673.6635071090047'), ('Himari', '1219.0'), ('Hiroko', '534.890243902439'), ('Hirono', '860.8104265402843'), ('Ho Ching', '925.9865771812081'), ('Hollie', '1185.75'), ('Hongrui', '914.8607594936709'), ('Hortencia', '1251.1333333333334'), ('Hsin Yuan', '1107.7142857142858'), ('Hua Chen', '726.1737089201878'), ('Huijie', '1118.904761904762'), ('Hulya', '888.0055096418732'), ('Hye Min', '1020.28125'), ('Hyojung', '1069.3208955223881'), ('Hyun Hui', '729.0671936758894'), ('I Hsuan', '1038.6911764705883'), ('Iana', '1085.581818181818'), ('Ida', '962.5'), ('Idia', '1232.2'), ('Iga', '705.5625'), ('Ilay', '1135.5'), ('Ilka', '868.2191780821918'), ('Ilona', '452.625'), ('Ilze', '847.0941176470589'), ('Imane Maelle', '845.375'), ('Ina', '1165.5573770491803'), ('Inci', '1069.0925925925926'), ('India', '954.046875'), ('Indire', '627.7027027027027'), ('Indy', '485.9559748427673'), ('Ineke', '919.6147540983607'), ('Ines', '687.0229885057471'), ('Inger', '1039.0'), ('Ingrid', '766.2549019607843'), ('Ingrid Alexandra', '869.3571428571429'), ('Ingrid Esperanza', '748.6622691292876'), ('Intissar', '1192.5454545454545'), ('Ioana', '980.2232142857143'), ('Ioana Diana', '482.43243243243245'), ('Ioana Loredana', '646.0441176470588'), ('Ionela Andreea', '799.0552486187845'), ('Ipek', '655.7828348504552'), ('Irena', '288.74423480083857'), ('Irene', '579.2153846153847'), ('Irina', '436.84339509862525'), ('Irina Camelia', '285.84388185654007'), ('Irina Maria', '578.1381578947369'), ('Iris', '866.1075949367089'), ('Iryna', '489.5294964028777'), ('Isabel', '724.9178743961353'), ('Isabela', '1114.99375'), ('Isabella', '566.7873931623932'), ('Isabelle', '781.6993464052288'), ('Iulia Maria', '1170.9411764705883'), ('Iva', '732.7386018237082'), ('Ivana', '439.81414868105514'), ('Ivania', '871.109375'), ('Ivanka', '1079.05'), ('Iveta', '117.95684523809524'), ('Ivette', '1136.8535031847134'), ('Ivone', '872.0'), ('Ivonne', '591.3809523809524'), ('Jacqueline', '624.6089494163424'), ('Jada', '909.2'), ('Jade', '739.04802259887'), ('Jaeda', '760.4920634920635'), ('Jaimee', '562.8450704225352'), ('Jaimy Gayle', '1243.875'), ('Jainy', '1037.5274725274726'), ('Jamie', '402.36756756756756'), ('Jamilya', '1247.3333333333333'), ('Jan', '592.5990783410139'), ('Jana', '406.6258503401361'), ('Janette', '240.5306603773585'), ('Janina', '699.7864583333334'), ('Janja', '1262.5416666666667'), ('Janneke', '861.5102040816327'), ('Jaqueline Adina', '748.7238095238096'), ('Jara', '1121.767857142857'), ('Jarmila', '149.46360759493672'), ('Jasmin', '633.027027027027'), ('Jasmina', '642.1811989100818'), ('Jasmine', '437.86915887850466'), ('Jasmine Amber', '1117.64'), ('Jawairiah', '1070.5648854961833'), ('Jazmin', '1035.46'), ('Jazzamay', '983.1290322580645'), ('Jeannine', '767.7730496453901'), ('Jelena', '348.19338235294117'), ('Jennifer', '556.7936681222708'), ('Jenny', '902.1470588235294'), ('Jesika', '501.5860215053763'), ('Jessica', '655.7464059804486'), ('Jessika', '818.2043795620438'), ('Jessy', '967.6708860759494'), ('Ji Hee', '823.9789029535865'), ('Ji Young', '833.5061082024433'), ('Jia', '1169.6923076923076'), ('Jia Jing', '682.961038961039'), ('Jia Qi', '529.7777777777778'), ('Jiahui', '794.4931506849315'), ('Jiakang', '1230.6'), ('Jiatian', '1232.032258064516'), ('Jiaxi', '578.5'), ('Jiaxue', '1161.0'), ('Jie', '114.05571428571429'), ('Jil Belen', '501.0619469026549'), ('Jil Nora', '1116.4190476190477'), ('Jill', '121.9579326923077'), ('Jillian', '721.14'), ('Jin', '1267.0'), ('Jin A', '492.8915187376726'), ('Jin Ju', '1035.6470588235295'), ('Jing Jing', '369.1620469083156'), ('Joana', '863.3225806451613'), ('Joanna', '931.025641025641'), ('Joanne', '1227.8'), ('Jodie Anna', '925.4230769230769'), ('Johana', '1111.8333333333333'), ('Johanna', '310.3405299313052'), ('Jordana', '1022.6198347107438'), ('Josepha', '924.9325842696629'), ('Josephine', '684.4892086330935'), ('Josie', '993.2105263157895'), ('Jovana', '601.9846625766871'), ('Ju Eun', '812.6'), ('Judith', '1224.0'), ('Jule', '1243.904761904762'), ('Julia', '576.9173467252564'), ('Julia Mansano', '1024.6666666666667'), ('Juliana', '1110.0816326530612'), ('Juliana Rocha', '1175.7666666666667'), ('Julie', '512.3787128712871'), ('Julieta Lara', '707.1467889908257'), ('Julita', '1019.9411764705883'), ('Julyette Maria Josephine', '732.1666666666666'), ('June', '1189.0'), ('Junri', '262.30884808013354'), ('Justina', '1212.9166666666667'), ('Justine', '521.5358361774744'), ('Justyna', '585.8517745302714'), ('Kady', '1055.020202020202'), ('Kai Chen', '272.08855291576674'), ('Kai Lin', '522.6561403508772'), ('Kaia', '127.06775067750678'), ('Kaitlin', '901.3333333333334'), ('Kaitlyn', '756.2549019607843'), ('Kaja', '633.5454545454545'), ('Kajsa', '661.9589041095891'), ('Kamila', '568.2547169811321'), ('Kamilla', '1162.8301886792453'), ('Kamonwan', '765.1395348837209'), ('Kana', '924.2782608695652'), ('Kanae', '635.346516007533'), ('Kanako', '1105.3125'), ('Kanami', '799.9940828402367'), ('Kanika', '962.8536585365854'), ('Kaori', '871.0790513833992'), ('Karen', '674.9672514619883'), ('Kariann', '1068.9166666666667'), ('Karin', '472.338003502627'), ('Karina', '883.6090909090909'), ('Karina Ildor', '696.9606060606061'), ('Karina Kristina', '1062.795918367347'), ('Karine', '868.8904109589041'), ('Karis', '1001.0679611650486'), ('Karla', '807.616'), ('Karman', '652.917808219178'), ('Karola Patricia', '928.3333333333334'), ('Karolayne', '1077.8095238095239'), ('Karolina', '586.9412296564195'), ('Karoline', '873.6229508196722'), ('Karyn', '903.5769230769231'), ('Kassandra', '927.0350877192982'), ('Katalin', '331.93949394939494'), ('Katarina', '401.0998263888889'), ('Katarzyna', '459.29286608260327'), ('Kate', '1117.7142857142858'), ('Katerina', '491.8507295173962'), ('Kateryna', '294.33209990749305'), ('Katharina', '680.677700348432'), ('Katharine', '882.1071428571429'), ('Katherine', '836.6804511278195'), ('Katherine Gabriela', '910.396694214876'), ('Kathinka', '415.7'), ('Kathrin', '291.4792817679558'), ('Katie', '620.9404580152672'), ('Katrine Isabel', '1111.08'), ('Katy', '492.6608695652174'), ('Katya', '1050.7'), ('Katyarina', '1010.1818181818181'), ('Kayla', '583.1686746987951'), ('Kaylah', '1163.3478260869565'), ('Kazusa', '772.2402912621359'), ('Kei', '1003.1212121212121'), ('Kelia', '1114.9433962264152'), ('Kelly', '804.873831775701'), ('Kelly S', '312.7584269662921'), ('Kelsey', '1012.325'), ('Kennedy', '807.7222222222222'), ('Keren', '643.422641509434'), ('Keri', '1018.6534653465346'), ('Kerstin', '1020.4271844660194'), ('Khristina', '978.0229885057471'), ('Ki Ryang', '1164.090909090909'), ('Kiki', '287.71625344352617'), ('Kim', '687.3120567375887'), ('Kim Alice', '762.4081632653061'), ('Kimberley', '846.9154228855722'), ('Kimberly', '618.6923076923077'), ('Kimika', '1097.219512195122'), ('Kimiko', '95.03465982028241'), ('Kinnie', '606.1467576791808'), ('Kirsten', '308.64912280701753'), ('Kirsten Andrea', '1035.0384615384614'), ('Klaartje', '576.9'), ('Klara', '235.31431431431432'), ('Klaudia', '780.7905027932961'), ('Komola', '826.0238095238095'), ('Korina', '567.0507399577167'), ('Kotomi', '844.7460317460317'), ('Krista', '522.984693877551'), ('Kristie', '445.18918918918916'), ('Kristina', '343.25546975546973'), ('Kristina N', '1060.5633802816901'), ('Kristy', '837.7730496453901'), ('Kristyna', '443.8467908902692'), ('Ksenia', '482.36648501362396'), ('Kseniia', '990.6'), ('Ksenija', '975.6271186440678'), ('Kumiko', '488.76107382550333'), ('Kurumi', '165.96132596685084'), ('Kveta', '159.62397820163488'), ('Kwan Yau', '1070.0377358490566'), ('Kyle', '887.502487562189'), ('Kylie', '798.3181818181819'), ('Kyoka', '348.54794520547944'), ('Kyra', '443.76148409893995'), ('Kyung Mi', '533.433770014556'), ('Laetitia', '677.4458598726114'), ('Laili', '996.8148148148148'), ('Lamis', '1062.3666666666666'), ('Lara', '643.6939163498099'), ('Larikah', '1054.9019607843138'), ('Laura', '504.4145867098865'), ('Laura D', '910.5714285714286'), ('Laura Ioana', '516.1982942430703'), ('Laura Sofia', '1198.1538461538462'), ('Lauren', '484.9442231075697'), ('Lauryn', '1107.0882352941176'), ('Lavinia', '612.736'), ('Laylo', '1226.076923076923'), ('Layne', '1184.0'), ('Lea', '858.4107142857143'), ('Leah', '1179.6216216216217'), ('Lee', '908.156862745098'), ('Lena', '594.9436936936937'), ('Lena Marie', '657.8934169278997'), ('Lenka', '451.33577981651376'), ('Leolia', '773.5666666666667'), ('Leonie', '825.972972972973'), ('Lesedi Sheya', '887.4545454545455'), ('Lesia', '205.17590361445784'), ('Lesley', '514.7174515235457'), ('Leslie', '1180.5454545454545'), ('Leticia', '481.3229166666667'), ('Leticia Garcia', '1072.4'), ('Leylah Annie', '1030.5'), ('Li', '988.7425149700599'), ('Liana Gabriela', '387.87113402061857'), ('Libby', '899.9150326797386'), ('Libi', '1035.327868852459'), ('Lidia', '1147.8529411764705'), ('Lidziya', '797.2128378378378'), ('Liezel', '284.8326771653543'), ('Liga', '567.9464544138929'), ('Lilla', '722.5087719298245'), ('Lin', '497.42124542124543'), ('Lina', '574.9808362369338'), ('Linda', '929.4398496240601'), ('Lindsay', '275.6055900621118'), ('Lindsey', '986.82'), ('Ling', '418.81925343811395'), ('Liniques', '1184.7222222222222'), ('Linnea', '959.6981132075472'), ('Lisa', '356.0105210420842'), ('Lisa Maria', '758.06'), ('Lisa Marie', '996.0408163265306'), ('Lisanne', '673.6507936507936'), ('Liubov', '887.2875'), ('Livia', '1179.875'), ('Liz Tatiane', '870.9007633587786'), ('Lizaveta', '1120.5652173913043'), ('Lizette', '666.1496062992126'), ('Lorenza', '1231.2727272727273'), ('Lorraine M', '972.75'), ('Lou', '680.1724137931035'), ('Loudmilla', '1220.0'), ('Louisa', '380.5308641975309'), ('Louise', '1070.1025641025642'), ('Lourdes', '188.06095041322314'), ('Lu', '907.3557312252965'), ('Luca', '859.8644067796611'), ('Lucia', '845.740638002774'), ('Luciana', '885.7495107632094'), ('Lucie', '322.62611607142856'), ('Lucrezia', '845.986301369863'), ('Lucy', '756.3141592920354'), ('Ludmila', '846.2727272727273'), ('Ludmilla', '787.5416666666666'), ('Luisa', '981.7517730496454'), ('Luisa Marie', '820.59375'), ('Luksika', '284.22813688212926'), ('Lulu', '1098.2888888888888'), ('Luna', '1139.0'), ('Lusine', '974.2702702702703'), ('Lutfiye', '1190.0629921259842'), ('Lyann', '982.6666666666666'), ('Lynn', '952.4411764705883'), ('Lyudmyla', '382.82479784366575'), ('Macall', '607.3360995850622'), ('Macarena', '692.1515151515151'), ('Madalina', '324.63613231552165'), ('Maddison', '748.0'), ('Madeleine', '1028.0365853658536'), ('Madeline', '1217.469387755102'), ('Madina', '1203.5'), ('Madison', '290.64452214452217'), ('Madrie', '958.0955414012739'), ('Maegan', '787.0'), ('Mafalda', '1139.7'), ('Maftuna', '1173.75'), ('Magali', '734.0'), ('Magalie', '1036.1214953271028'), ('Magda', '300.3974358974359'), ('Magdalena', '443.6296006264683'), ('Magy', '1092.7621951219512'), ('Mahak', '875.0'), ('Mahitha', '1007.15'), ('Mai', '687.25'), ('Maia', '745.433962264151'), ('Maia A', '1206.6666666666667'), ('Maiko', '438.4245810055866'), ('Maileen', '1152.888888888889'), ('Mailen', '410.8463541666667'), ('Maja', '896.7413793103449'), ('Makiho', '784.8009049773756'), ('Makoto', '516.6615384615385'), ('Malene', '999.15625'), ('Malika', '1004.7428571428571'), ('Malin', '825.039603960396'), ('Mallaurie', '1031.5342465753424'), ('Mallory', '143.48235294117646'), ('Malou', '947.3333333333334'), ('Mami', '1153.590909090909'), ('Man Ying Maggie', '1202.2692307692307'), ('Mana', '689.891129032258'), ('Mananchaya', '1230.6'), ('Manca', '838.1780821917808'), ('Mandy', '361.0'), ('Manisha', '897.0974358974358'), ('Manon', '622.7673469387755'), ('Manya', '1181.3548387096773'), ('Mara', '908.3962264150944'), ('Marcela', '774.64'), ('Marcela Guimaraes', '1143.7957746478874'), ('Marcelina', '1247.3636363636363'), ('Marcella', '657.0171919770773'), ('Margalita', '325.5912596401028'), ('Margarida', '987.6739130434783'), ('Margarita', '611.4060995184591'), ('Margaux', '1051.1224489795918'), ('Margot', '753.8346456692914'), ('Mari', '526.3698630136986'), ('Maria', '426.6002565198803'), ('Maria Agustina', '1190.0833333333333'), ('Maria Andrea', '1072.9591836734694'), ('Maria Camila', '1188.5277777777778'), ('Maria Constanza De Las Mercedes', '861.5050505050505'), ('Maria Del Rosario', '1119.4897959183672'), ('Maria Elena', '194.2392065344224'), ('Maria Fernanda', '443.0228531855956'), ('Maria Jesus', '1170.1830985915492'), ('Maria Joao', '486.6092544987147'), ('Maria Jose', '306.1794310722101'), ('Maria Lourdes', '918.0769230769231'), ('Maria Paulina', '1047.98224852071'), ('Maria Teresa', '359.81081081081084'), ('Mariam', '662.1182795698925'), ('Mariana', '556.0428051001821'), ('Marianna', '730.3831168831168'), ('Marianne', '993.175925925926'), ('Mariaryeni', '1085.4242424242425'), ('Marie', '695.574074074074'), ('Marie Eve', '300.56296296296296'), ('Mariia', '1148.9166666666667'), ('Marija', '544.2636655948553'), ('Marijana', '1215.0'), ('Marina', '532.6881807180315'), ('Marine', '774.5654761904761'), ('Marion', '279.78655282817505'), ('Mariona', '1163.0'), ('Marisa', '1067.3413173652696'), ('Mariya', '281.871335504886'), ('Marketa', '353.44444444444446'), ('Marlies', '946.8934426229508'), ('Marrit', '783.1711711711712'), ('Marta', '419.32988047808766'), ('Marta Huqi', '851.1224489795918'), ('Martha', '1056.0588235294117'), ('Martina', '751.8679119412942'), ('Mary', '869.1666666666666'), ('Mary Ann', '1188.7096774193549'), ('Maryna', '323.86176470588236'), ('Masa', '355.7223168654174'), ('Mathilde', '437.11396648044695'), ('Matilda', '799.1875'), ('Maud', '1013.4761904761905'), ('Maureen', '1070.21875'), ('Maurien', '1121.0869565217392'), ('Maxine', '973.8717948717949'), ('May', '1084.0294117647059'), ('Maya', '732.4260679079956'), ('Mayar', '891.6309523809524'), ('Mayo', '407.029702970297'), ('Mayya', '619.9064748201439'), ('Megan', '736.4809523809524'), ('Megumi', '1025.0'), ('Mei Xu', '1031.6'), ('Meiling', '812.85'), ('Meiqi', '1029.1666666666667'), ('Melanie', '372.32502965599053'), ('Melany Solange', '1039.8333333333333'), ('Melina', '1017.2560553633218'), ('Melinda', '169.13578500707214'), ('Melis', '634.7950310559006'), ('Melisa', '993.1351351351351'), ('Melissa', '1154.093023255814'), ('Melissa Ishuan', '1104.357142857143'), ('Meng Ning', '1035.95'), ('Mercedes', '1213.2142857142858'), ('Merel', '900.75'), ('Meritxell', '1182.9107142857142'), ('Mervana', '337.5292682926829'), ('Mi', '554.3953934740883'), ('Mi Jeong', '1071.3076923076924'), ('Mi Rae', '992.7225433526012'), ('Mi Zhuoma', '999.375'), ('Mia Nicole', '987.504761904762'), ('Micaela', '1332.0737704918033'), ('Michaela', '676.90589198036'), ('Michaella', '185.3469387755102'), ('Michela', '1228.9285714285713'), ('Michele Alexandra', '946.8846153846154'), ('Michelle', '280.79959100204496'), ('Michika', '718.047619047619'), ('Mihaela', '376.7356115107914'), ('Mihaela Lorena', '1223.4'), ('Miharu', '523.2788844621514'), ('Mihika', '1064.142857142857'), ('Mihoki', '1110.4411764705883'), ('Miki', '586.2250489236791'), ('Mila', '1201.16'), ('Milagros', '1234.2857142857142'), ('Milana', '626.441935483871'), ('Milena', '1114.4074074074074'), ('Milica', '1221.904761904762'), ('Min', '866.0693069306931'), ('Min Hwa', '819.8425531914894'), ('Minami', '1238.0625'), ('Mira', '788.2622950819672'), ('Mirabelle', '721.1643835616438'), ('Miranda', '1169.4864864864865'), ('Miriam', '912.120218579235'), ('Miriam Bianca', '628.075'), ('Miriana', '950.6263736263736'), ('Mirjam', '843.6428571428571'), ('Mirjana', '186.76587795765877'), ('Misa', '617.0379241516966'), ('Misaki', '208.95263157894738'), ('Mitsumi', '1121.04'), ('Miyabi', '447.93283582089555'), ('Miyu', '594.9036697247707'), ('Mizuno', '593.1506849315068'), ('Molly', '1029.0'), ('Momoko', '772.6981132075472'), ('Mona', '273.57517899761336'), ('Monica', '210.0846394984326'), ('Monika', '980.575'), ('Monique', '462.4270462633452'), ('Montserrat', '541.952380952381'), ('Morgane', '880.6527777777778'), ('Moulika', '1243.4'), ('Mouna', '1258.5'), ('Moyuka', '1198.25'), ('Muazzez', '1227.0'), ('Muge', '1186.9444444444443'), ('Myrtille', '485.40168539325845'), ('Na', '82.13112391930835'), ('Na Lae', '608.7791798107255'), ('Na Ri', '573.5197368421053'), ('Nadezda', '868.6521739130435'), ('Nadia', '407.5463976945245'), ('Nadiya', '637.4607407407408'), ('Nadja', '631.8181818181819'), ('Nagi', '828.0675675675676'), ('Naiktha', '767.4963503649635'), ('Naima', '930.7027027027027'), ('Nam Yeon', '878.6666666666666'), ('Nan Nan', '890.4455445544554'), ('Nanuli', '542.7168141592921'), ('Nao', '313.45625'), ('Naoko', '1180.3828125'), ('Naomi', '483.97225572979494'), ('Napatsakorn', '929.4388489208633'), ('Nastassia', '1138.9166666666667'), ('Nastassja', '554.5290322580645'), ('Nastja', '593.1772853185596'), ('Natalia', '720.132932166302'), ('Natalie', '577.9677419354839'), ('Natalija', '634.3620689655172'), ('Nataliya', '1247.909090909091'), ('Natasa', '666.2853403141361'), ('Natasha', '883.0777142857143'), ('Natela', '566.4943396226415'), ('Natella', '962.0188679245283'), ('Nathalia', '543.031185031185'), ('Nathaly', '617.4615384615385'), ('Natia', '929.6928104575163'), ('Natsumi', '547.7037037037037'), ('Nattawadee', '1177.622641509434'), ('Naz', '1087.3823529411766'), ('Nazari', '825.7291666666666'), ('Neda', '745.421052631579'), ('Nelise', '1164.107142857143'), ('Nermeen', '1069.15'), ('Nevena', '1031.0'), ('Nicha', '515.3191489361702'), ('Nicky', '843.9007633587786'), ('Nicola', '753.2253164556962'), ('Nicole', '499.4127634660422'), ('Nicoleta Catalina', '485.46875'), ('Nicolette', '778.1648648648649'), ('Nidhi', '762.1578947368421'), ('Nigina', '376.7617554858934'), ('Nika', '913.4380165289256'), ('Nikita', '1174.0'), ('Nikki', '1017.3134328358209'), ('Nikol', '1054.0813953488373'), ('Nikola', '723.484076433121'), ('Nina', '528.8673050615595'), ('Nina Isabella', '1124.1666666666667'), ('Nives', '841.0514705882352'), ('Noel', '965.5343511450382'), ('Noelia', '1049.834745762712'), ('Noelle', '883.7787610619469'), ('Nonna', '1167.2758620689656'), ('Noppawan', '374.93926247288505'), ('Nora', '921.6216216216217'), ('Nour', '1096.1140350877192'), ('Nozomi', '936.3392857142857'), ('Nudnida', '436.66881028938906'), ('Nungnadda', '537.577922077922'), ('Nuria', '395.6680227827502'), ('Oana', '1027.1382978723404'), ('Oana Georgeta', '686.3047619047619'), ('Oceane', '728.7630208333334'), ('Ofri', '839.4923664122138'), ('Oksana', '533.9652351738241'), ('Ola', '660.8924731182796'), ('Olawaseun', '1397.5'), ('Olaya', '1112.75'), ('Oleksandra', '903.4289156626506'), ('Olena', '1179.1555555555556'), ('Olesya', '501.44444444444446'), ('Olga', '432.6511627906977'), ('Olivia', '446.7231833910035'), ('Oliwia', '1006.5128205128206'), ('Ons', '435.1470588235294'), ('Ornella', '978.7321428571429'), ('Oyku', '866.0454545454545'), ('Paige Mary', '1156.28125'), ('Pamela', '989.1904761904761'), ('Panna', '683.1081081081081'), ('Paola', '132.12638580931264'), ('Parris', '1099.625'), ('Patcharin', '863.5507246376811'), ('Patricia', '572.8059701492538'), ('Patricia Maria', '403.935'), ('Patrycja', '657.3816155988858'), ('Patty', '385.8135593220339'), ('Paula', '558.0162601626016'), ('Paula Andrea', '1175.909090909091'), ('Paula Catalina', '868.7624113475177'), ('Paula Cristina', '508.4679802955665'), ('Paulina', '1035.7780678851175'), ('Pauline', '298.1861898890259'), ('Pavla', '915.5892857142857'), ('Peangtarn', '514.586319218241'), ('Peggy', '755.5813953488372'), ('Pei Chi', '673.9809523809524'), ('Pei Hsuan', '1106.5'), ('Pei Ju', '1061.3076923076924'), ('Pemra', '465.24962852897477'), ('Pernilla', '619.4154929577464'), ('Petia', '710.3972602739726'), ('Petra', '365.50280484204313'), ('Phenomena', '1211.0'), ('Phillis', '826.6486486486486'), ('Pia', '737.862676056338'), ('Piia', '668.2581196581197'), ('Pilar', '740.5879828326181'), ('Pippa', '1041.0740740740741'), ('Plobrung', '937.7945205479452'), ('Polina', '630.7953529937444'), ('Polona', '478.30369515011546'), ('Poojashree', '729.1047904191616'), ('Pranjala', '795.4736842105264'), ('Prarthana G', '653.5070422535211'), ('Prerna', '740.5361842105264'), ('Priscila', '1137.19'), ('Priscilla', '675.4124293785311'), ('Qiang', '383.4714587737844'), ('Qianhui', '826.1388888888889'), ('Qianqian', '943.421052631579'), ('Qiu Yu', '705.8493150684932'), ('Quinn', '883.2352941176471'), ('Quirine', '633.9770491803279'), ('Rachael', '859.2706766917294'), ('Rachel', '1147.8526315789475'), ('Radina', '955.7833333333333'), ('Rafaela', '1121.2432432432433'), ('Ralina', '1176.5'), ('Raluca', '304.4619771863118'), ('Raluca Elena', '672.2258064516129'), ('Raluca Georgiana', '539.6164383561644'), ('Ramu', '1010.4545454545455'), ('Ramya', '1121.8846153846155'), ('Ran', '598.2655172413793'), ('Rana', '1117.6666666666667'), ('Raquel', '700.7644444444444'), ('Rashmi', '1089.2100840336134'), ('Ratnika', '1021.6504854368932'), ('Raveena', '487.6268656716418'), ('Rebeca', '1145.4333333333334'), ('Rebecca', '568.3374316939891'), ('Rebeka', '676.1090909090909'), ('Regina', '289.60283687943263'), ('Reina', '1019.0'), ('Reka Luca', '323.1388101983003'), ('Remi', '494.6111111111111'), ('Renata', '274.85317919075146'), ('Ria', '669.448275862069'), ('Rianna', '638.6666666666666'), ('Richel', '246.19871794871796'), ('Rika', '290.0614657210402'), ('Riko', '495.22641509433964'), ('Rio', '1125.0363636363636'), ('Risa', '489.65909090909093'), ('Rishika', '775.7269624573379'), ('Rita', '1051.7349397590363'), ('Riya', '651.4246575342465'), ('Roberta', '150.96681415929203'), ('Robin', '431.19607843137254'), ('Robyn', '1054.606896551724'), ('Rocio', '795.6201232032854'), ('Romana', '402.49931972789113'), ('Romana Caroline', '669.8542372881356'), ('Romina', '283.63246554364474'), ('Romy', '758.1714285714286'), ('Rona', '1125.5471698113208'), ('Ronit', '427.0'), ('Ronke', '1072.857142857143'), ('Roosh', '1168.2857142857142'), ('Rosa', '965.0'), ('Rosalia', '1059.73'), ('Rosalie', '1066.5887096774193'), ('Rosie', '984.1714285714286'), ('Roxane', '479.51738241308794'), ('Rui', '1209.625'), ('Rushmi', '573.8729603729604'), ('Rutuja', '808.5096774193548'), ('Ryann', '1069.0379746835442'), ('Saana', '1117.88'), ('Sabastiani', '982.7397260273973'), ('Sabina', '682.2005532503458'), ('Sabina Elena', '1184.6666666666667'), ('Sabine', '203.5871080139373'), ('Sabrina', '905.6324786324786'), ('Sacha', '340.2890442890443'), ('Sachia', '400.8093385214008'), ('Sachie', '368.26881720430106'), ('Sadafmoh', '665.8219178082192'), ('Sai Samhitha', '998.5238095238095'), ('Saisai', '297.39032258064515'), ('Sakiko', '832.9585365853659'), ('Sally', '529.583908045977'), ('Salma', '1204.6666666666667'), ('Samantha', '406.21702404158543'), ('Samira', '932.8940397350993'), ('Sanae', '1105.171875'), ('Sanaz', '703.1372549019608'), ('Sandra', '563.964505613908'), ('Sandy', '1028.9565217391305'), ('Sang Hee', '857.9508196721312'), ('Sania', '177.22695035460993'), ('Sara', '509.80945757997216'), ('Sarah', '546.5551763367463'), ('Sarah Beth', '875.9277108433735'), ('Sarah Rebecca', '743.6062176165804'), ('Sarahi', '1139.2340425531916'), ('Sarai Delfina', '1191.6470588235295'), ('Saray', '840.0776699029126'), ('Sari', '1081.1666666666667'), ('Sarlota', '1209.7777777777778'), ('Sarvinoz', '1235.1960784313726'), ('Sasa', '1033.027027027027'), ('Saska', '747.3695652173913'), ('Satsuki', '888.7272727272727'), ('Savannah', '1142.9285714285713'), ('Schena', '1188.2941176470588'), ('Se Hyun', '1210.2571428571428'), ('Se Jin', '1122.4545454545455'), ('Sean', '1240.92'), ('Seda', '1003.5367647058823'), ('Seira', '1115.72'), ('Selin', '1168.6571428571428'), ('Seo Kyung', '858.9173789173789'), ('Seone', '889.8028169014085'), ('Serena', '14.654294803817603'), ('Sesil', '162.3505747126437'), ('Seung Yeon', '784.0465949820789'), ('Severine', '218.4701086956522'), ('Shahar', '166.41358024691357'), ('Shakhlo', '924.8818897637796'), ('Shakhnoza', '1236.7627118644068'), ('Shangqing', '1228.3235294117646'), ('Shanshan', '694.2'), ('Shao Yuan', '967.9034090909091'), ('Sharmada', '851.5633802816901'), ('Sharon', '296.5792682926829'), ('Sharon Sanchana', '1097.0'), ('Shelby', '372.89398280802294'), ('Shelly', '1171.0'), ('Sheng Nan', '451.8657487091222'), ('Sherazad', '649.5154639175257'), ('Sherry', '1024.0116279069769'), ('Shiho', '500.688679245283'), ('Shilin', '632.2824427480916'), ('Shiori', '1070.6666666666667'), ('Shir', '1154.4166666666667'), ('Shiran', '1187.9245283018868'), ('Shivika', '935.2322946175638'), ('Shou Na', '1120.388888888889'), ('Shreya', '1148.0'), ('Shu Ying', '1042.6802325581396'), ('Shuai', '167.90740740740742'), ('Shuko', '421.44179894179894'), ('Shuo', '864.1538461538462'), ('Shuyue', '966.0588235294117'), ('Shweta', '897.6951219512196'), ('Si Qi', '1047.7575757575758'), ('Silvia', '565.8211508553654'), ('Simona', '542.2382851445662'), ('Simone', '1070.3417721518988'), ('Simran Kaur', '974.8'), ('Sina', '728.7443609022556'), ('Sinead', '975.3484848484849'), ('Sing Le', '1141.842105263158'), ('Siqi', '980.9076923076923'), ('Sirui', '949.7916666666666'), ('Siyu', '1241.1379310344828'), ('Sloane', '259.63589743589745'), ('Smriti', '1184.8260869565217'), ('Sneha', '1225.388888888889'), ('Snehadevi S', '632.3150684931506'), ('So Jung', '514.1732026143791'), ('So Ra', '572.2654545454545'), ('Sofia', '526.3535641547861'), ('Sofico', '1084.107142857143'), ('Sofie', '724.5'), ('Sofiya', '541.1570881226054'), ('Sofya', '640.8727272727273'), ('Sohyun', '1004.6666666666666'), ('Sonia', '1029.0980392156862'), ('Sonja', '885.0976744186047'), ('Sophia', '1221.3333333333333'), ('Sophie', '600.6881091617934'), ('Sorana', '213.75043630017453'), ('Sowjanya', '813.1357142857142'), ('Spurti', '1149.3125'), ('Sri Vaishnavi', '792.1927710843373'), ('Stamatia', '841.8387096774194'), ('Stanislava', '312.54158964879855'), ('Stefana', '993.4255319148937'), ('Stefani', '1167.3333333333333'), ('Stefania', '759.2894995093228'), ('Stefanie', '387.73412112259973'), ('Steffi', '939.746835443038'), ('Stephanie', '439.87772357723577'), ('Stephanie Mariel', '1035.5548387096774'), ('Storm', '573.6708333333333'), ('Su Jeong', '426.3886462882096'), ('Su Wei', '217.2493188010899'), ('Suellen', '911.7619047619048'), ('Sultan', '944.2432432432432'), ('Sun Jung', '812.4581005586592'), ('Sunae', '1229.8'), ('Sunam', '611.0757575757576'), ('Sung Hee', '635.7449168207024'), ('Susan', '1015.6792452830189'), ('Susanne', '417.8053097345133'), ('Suzan', '982.7222222222222'), ('Suzuho', '980.6666666666666'), ('Suzy', '698.7567567567568'), ('Svenja', '844.203007518797'), ('Svetlana', '267.03227571115974'), ('Sviatlana', '691.9934640522875'), ('Sybille', '1002.6792452830189'), ('Sylvia', '869.1702127659574'), ('Sylwia', '787.7645348837209'), ('Syna', '791.1240506329113'), ('Szabina', '772.3186813186813'), ('Tadeja', '343.0985324947589'), ('Taisiya', '969.6588235294117'), ('Talya', '1230.2'), ('Tamachan', '949.8059701492538'), ('Tamar', '1118.4166666666667'), ('Tamara', '614.0434782608696'), ('Tamari', '1146.3934426229507'), ('Tamarine', '121.82273948075202'), ('Tamaryn', '386.7025316455696'), ('Tamira', '135.88910505836577'), ('Tammi', '601.906914893617'), ('Tanaporn', '1113.2325581395348'), ('Tanya', '1023.089430894309'), ('Tara', '475.2979683972912'), ('Tatia', '1075.0'), ('Tatiana', '681.9417582417583'), ('Tatjana', '247.7449768160742'), ('Tatsiana', '912.1077844311377'), ('Tayisiya', '747.3172413793103'), ('Taylor', '387.5662100456621'), ('Tea', '1068.7457627118645'), ('Teliana', '461.06702898550725'), ('Tena', '614.9346733668342'), ('Teodora', '489.27513227513225'), ('Tereza', '557.241418764302'), ('Terri', '963.5'), ('Tess', '696.2878787878788'), ('Tessah', '390.2361111111111'), ('Tetiana', '437.4119658119658'), ('Tetyana', '398.83478260869566'), ('Thai Sa Grana', '802.7222222222222'), ('Theo', '650.1206896551724'), ('Theresa', '1159.5632183908046'), ('Tijana', '1017.7777777777778'), ('Timea', '182.02426160337552'), ('Tina', '425.82394366197184'), ('Tinatin', '810.6666666666666'), ('Ting Fei', '739.7727272727273'), ('Ting Jr', '789.6113989637306'), ('Tingting', '1015.2352941176471'), ('Tjasa', '743.1953125'), ('Tomoko', '838.8065217391304'), ('Tori', '841.7167381974249'), ('Tornado Alicia', '878.1666666666666'), ('Trang', '1029.3196721311476'), ('Treta', '1009.8666666666667'), ('Tsvetana', '131.02074074074073'), ('Tyra', '992.4870588235294'), ('Ulrikke', '506.39344262295083'), ('Ulyana', '844.0692307692308'), ('Urszula', '229.35687022900763'), ('Ushna', '1132.4109589041095'), ('Usue Maitane', '411.5068493150685'), ('Valentina', '921.3333333333334'), ('Valentine', '751.2668918918919'), ('Valentini', '479.8914728682171'), ('Valentyna', '368.14331210191085'), ('Valeria', '661.8474576271186'), ('Valerie', '806.2648401826484'), ('Valeriya', '799.8668224299065'), ('Vanda', '696.4126984126984'), ('Vanesa', '579.437984496124'), ('Vanessa', '398.3106546854942'), ('Vania', '185.75'), ('Vaniya', '1130.6037735849056'), ('Vanja', '1089.7111111111112'), ('Varatchaya', '450.4642082429501'), ('Varunya', '894.3846153846154'), ('Varvara', '382.6888217522659'), ('Vasilisa', '613.5330490405117'), ('Vaszilisza', '859.8103448275862'), ('Vendula', '729.0117647058823'), ('Venus', '32.984862819299906'), ('Vera', '195.66923570969814'), ('Verena', '958.1327800829876'), ('Veronica', '726.1852387843704'), ('Veronica M', '951.0075757575758'), ('Veronika', '734.6018957345972'), ('Vesna', '240.0448979591837'), ('Vicky', '1252.9130434782608'), ('Victoire', '1138.8490566037735'), ('Victoria', '444.9760935910478'), ('Victoria Ariadna', '1236.0'), ('Viktoria', '566.9148936170212'), ('Viktoriia', '1236.5333333333333'), ('Viktorija', '507.4'), ('Viktoriya', '736.2288557213931'), ('Viktoryia', '966.4671052631579'), ('Vilma Y', '1243.0'), ('Vincenza', '1214.1142857142856'), ('Vinciane', '1150.0'), ('Violetta', '1170.840579710145'), ('Virginie', '355.88102893890675'), ('Vishesh', '1208.952380952381'), ('Vita', '1201.25'), ('Vitalia', '296.2025641025641'), ('Vivian', '670.9108527131783'), ('Vivien', '607.2810218978102'), ('Vivienne', '659.2103004291846'), ('Vlada', '595.3291666666667'), ('Vladica', '943.5432098765432'), ('Vladimira', '823.8770833333333'), ('Vladislava', '1006.1769911504425'), ('Vladyslava', '856.0782608695653'), ('Vojislava', '555.6572164948453'), ('Voni', '999.0215053763441'), ('Wan Ting', '701.4009009009009'), ('Wan Yi', '1081.142857142857'), ('Warona', '1249.3333333333333'), ('Wen Hsin', '440.35214446952597'), ('Wen Ling', '1117.55'), ('Wendy Qi Wen', '1011.469696969697'), ('Weronika Jasmina', '1152.7837837837837'), ('Whitney', '886.1407407407407'), ('Wiktoria', '1083.1454545454546'), ('Wing Yau Venise', '585.2589641434263'), ('Wushuang', '937.7878787878788'), ('Xenia', '661.2222222222222'), ('Xi Yao', '714.8653846153846'), ('Xiao', '814.4171122994652'), ('Xiaodi', '467.24657534246575'), ('Xiaorong', '848.4418604651163'), ('Xiaoxi', '737.7547169811321'), ('Ximena', '712.2780373831775'), ('Xin', '694.4808743169399'), ('Xin Yu', '1022.3333333333334'), ('Xinyu', '480.646017699115'), ('Xinyun', '309.35767790262173'), ('Xiyu', '954.6'), ('Xu Liu', '488.7671232876712'), ('Ya', '1225.75'), ('Ya Hsuan', '586.865'), ('Yafan', '325.6162790697674'), ('Yan', '768.560975609756'), ('Yana', '740.0214504596527'), ('Yang', '1177.8823529411766'), ('Yanina', '381.2581602373887'), ('Yanni', '1059.2702702702702'), ('Yarden', '1166.875'), ('Yaroslava', '211.41240310077518'), ('Yasmin', '702.1784386617101'), ('Yasmina', '1227.7777777777778'), ('Yasmine', '983.0410958904109'), ('Yasmyn', '1261.8181818181818'), ('Yawna', '1110.4594594594594'), ('Yayuk', '114.78806907378336'), ('Ye Ra', '431.3144424131627'), ('Ye Xin', '1048.081081081081'), ('Yekaterina', '1155.8191489361702'), ('Yelena', '897.4873949579832'), ('Yeong Won', '973.8617021276596'), ('Yevgeniya', '724.8712871287129'), ('Yi', '791.0756207674943'), ('Yi Fan', '381.5512572533849'), ('Yi Jing', '656.8787276341948'), ('Yi Miao', '418.2566137566138'), ('Yidi', '1185.030303030303'), ('Yihong', '1209.625'), ('Yijia', '1063.9411764705883'), ('Ying', '661.3972602739726'), ('Ying Ying', '403.8775981524249'), ('Yixuan', '801.6712328767123'), ('Ylena', '892.3561643835617'), ('Ylona Georgiana', '642.9487179487179'), ('Yoko', '1128.901098901099'), ('Yolande', '1068.4619883040937'), ('Yoo Ri', '1263.7666666666667'), ('Yoon Young', '844.9310344827586'), ('Yoshimi', '1096.9130434782608'), ('Yosr', '1222.24'), ('You Na', '1170.3461538461538'), ('Ysaline', '458.86633663366337'), ('Yu Jin', '1098.357142857143'), ('Yu Tong', '1239.6666666666667'), ('Yuan', '1054.0'), ('Yuanyi', '891.2340425531914'), ('Yue', '983.359649122807'), ('Yue Yue', '444.96190476190475'), ('Yuenu', '961.876923076923'), ('Yujia', '1034.1304347826087'), ('Yuka', '748.8250591016548'), ('Yukako', '1071.5833333333333'), ('Yuki', '876.7428571428571'), ('Yuki Kristina', '698.8285714285714'), ('Yukina', '857.1692307692308'), ('Yukun', '824.3936170212766'), ('Yulia', '485.35135135135135'), ('Yuliana', '725.5322195704057'), ('Yuliya', '384.87776983559684'), ('Yumi', '799.1332586786115'), ('Yung Jan', '166.6586270871985'), ('Yuqi', '1047.3529411764705'), ('Yurika', '322.17758620689654'), ('Yuriko', '1041.5367231638418'), ('Yurina', '746.4803493449782'), ('Yuuki', '608.1309090909091'), ('Yuval', '1230.2'), ('Yuxuan', '545.449074074074'), ('Yvonne', '318.2867132867133'), ('Zaineb', '1227.344827586207'), ('Zalina', '867.5288461538462'), ('Zarah', '709.625'), ('Zarina', '222.81428571428572'), ('Zeel', '791.2352941176471'), ('Zeynep  Sena', '1229.5714285714287'), ('Zhanlan', '627.7777777777778'), ('Zhaoxuan', '629.0081967213115'), ('Zhibek', '1058.0'), ('Zhima', '1144.45'), ('Zhou', '1237.9'), ('Zhuoma', '989.75'), ('Zi', '391.4656290531777'), ('Zinovia', '1221.5'), ('Ziyue', '878.4606741573034'), ('Zoe', '765.3777777777777'), ('Zoe Gwen', '935.081081081081'), ('Zsofia', '916.559633027523'), ('Zuzana', '451.92875448487956'), ('Zuzanna', '794.5416666666666')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","Not match: [('0', 'Damilola'), ('100', 'Jiatian'), ('1000', 'Gaelle'), ('1002', 'Corina'), ('1002', 'Jenny'), ('1003', 'Karis'), ('1005319', 'Ekaterina'), ('100848', 'Ivana'), ('10087', 'Vanda'), ('101', 'Anca'), ('101', 'Merel'), ('10107', 'Kazusa'), ('1011058', 'Flavia'), ('1013', 'Luca'), ('10133', 'Ingrid Esperanza'), ('1016', 'Peggy'), ('10167', 'Lou'), ('1017069', 'Anna'), ('10178', 'Marianna'), ('101816', 'Yurika'), ('10191', 'Hilda'), ('102', 'Man Ying Maggie'), ('102', 'Mary Ann'), ('102022', 'Kyra'), ('102140', 'Shelby'), ('102260', 'Corinna'), ('1026', 'Marisa'), ('102623', 'Gabriela'), ('102693', 'Mervana'), ('103', 'Elaine'), ('10322', 'Iva'), ('1034', 'Cynthia'), ('1034', 'Sai Samhitha'), ('1036', 'Voni'), ('10360', 'Sina'), ('103659', 'Magda'), ('1039', 'Helen'), ('105', 'Shou Na'), ('105', 'Vincenza'), ('1050', 'Taisiya'), ('10507', 'Albina'), ('10539', 'Sofie'), ('1054', 'Suzy'), ('106', 'Victoria Ariadna'), ('10616', 'Amy'), ('1063', 'Hongrui'), ('10630', 'Tori'), ('106375', 'Maria Teresa'), ('106520', 'Giulia'), ('1067', 'Maja'), ('106762', 'Claudine'), ('106927', 'Vitalia'), ('107', 'Adrienn'), ('107', 'Mila'), ('10705', 'Xinyu'), ('10751', 'Ai'), ('107595', 'Ying Ying'), ('1077', 'Carmen Raluca'), ('107880', 'Anna Karolina'), ('108', 'Sohyun'), ('1082', 'Nora'), ('1083', 'Astra'), ('10859', 'Pia'), ('10865', 'Fatima'), ('109', 'Dorien'), ('1090', 'Marianne'), ('109192', 'Martina'), ('1092', 'Jordana'), ('109256', 'Xinyun'), ('1093', 'Gabrielle Faith'), ('10947', 'Jan'), ('1096', 'Oana'), ('1098', 'Mia Nicole'), ('110', 'Agne'), ('110290', 'Zi'), ('1103', 'Elizabeth Anita Alexandria'), ('1103', 'Robyn'), ('11032', 'Benedetta'), ('1108372', 'Lucie'), ('111', 'Caroline B'), ('111', 'Rosa'), ('111', 'Shangqing'), ('1119', 'Brittany'), ('11201', 'Sviatlana'), ('11216', 'Eduarda'), ('11218', 'Ema'), ('11251', 'Yasmin'), ('112562', 'Katalin'), ('112570', 'Teliana'), ('11260', 'Fanny'), ('11320', 'Maiko'), ('1132514', 'Angelique'), ('113359', 'Saisai'), ('11393', 'Alina'), ('114', 'June'), ('114098', 'Donna'), ('114104', 'Monique'), ('1142', 'Ilka'), ('114687', 'Marie Eve'), ('1149', 'Simone'), ('115', 'Nina Isabella'), ('1152', 'Bhuvana'), ('115293', 'Abigail'), ('11569', 'Georgina'), ('11572', 'Katy'), ('11596', 'Anja'), ('116', 'Clara'), ('11608', 'Arabela'), ('11623', 'Lizette'), ('1165205', 'Daniela'), ('11653', 'Wan Ting'), ('116548', 'Ajla'), ('116857', 'Qiang'), ('11694', 'Wing Yau Venise'), ('117', 'Doga Selen'), ('117', 'Shir'), ('11714', 'Camilla'), ('11721', 'Azra'), ('117472', 'Masa'), ('1176', 'Kaja'), ('117825', 'Sharon'), ('118', 'Huijie'), ('1180', 'Miriana'), ('1187', 'Ludmilla'), ('11873', 'Akari'), ('1188', 'Patcharin'), ('1192', 'Demi'), ('119279', 'Diana'), ('11954', 'Cecilia'), ('119756', 'Olivia'), ('119797', 'Cagla'), ('12', 'Anastasiia'), ('12', 'Brienne'), ('12', 'Damini'), ('12', 'Maia A'), ('12', 'Mouna'), ('120', 'Abiodun'), ('120', 'Hsin Yuan'), ('120', 'Wen Ling'), ('120995', 'Natalie'), ('121', 'Zhuoma'), ('1213', 'Bianka'), ('1214', 'Pranjala'), ('122', 'Hikari'), ('1222', 'Hye Min'), ('122331', 'Regina'), ('1225', 'Erina'), ('1225', 'Ioana'), ('1227', 'Claudia Antonia'), ('1229', 'Tanya'), ('12295', 'Robin'), ('123', 'Boba'), ('12304', 'Clothilde'), ('123243', 'Zarina'), ('1235', 'Anastasia Evgenyevna'), ('1235', 'Maia'), ('1236', 'Costanza'), ('1236', 'Kylie'), ('12379', 'Macall'), ('12388', 'Kim Alice'), ('1240', 'Monika'), ('12402', 'Tena'), ('12474', 'Yuka'), ('1247887', 'Elena'), ('12519', 'Chun Mei'), ('12525', 'Janina'), ('1254', 'Vladislava'), ('12554', 'Elyne'), ('1258', 'Emiliana'), ('1259', 'Yue'), ('126', 'Apichaya'), ('126', 'Stefani'), ('1261', 'Dabin'), ('12633', 'Indire'), ('126811', 'Estrella'), ('12693', 'Yurina'), ('1270', 'Sarah Beth'), ('12708', 'Aminat'), ('1272285', 'Marion'), ('12727', 'Andreea Roxana'), ('12728', 'Emelyn'), ('1277', 'Sang Hee'), ('128', 'Livia'), ('128183', 'Junri'), ('12829', 'Alexia'), ('128509', 'Yayuk'), ('1289', 'Tatsiana'), ('129', 'Colomba'), ('129', 'Juliana Rocha'), ('12906', 'Kamila'), ('1297', 'Gloria'), ('13', 'Giorgie'), ('13006', 'Poojashree'), ('13010', 'Ivonne'), ('13037', 'Marcella'), ('13041', 'Vivien'), ('1306087', 'Francesca'), ('13064', 'Sarah Rebecca'), ('1312', 'Seone'), ('13141', 'Chinami'), ('13241', 'Nathaly'), ('13254', 'Megan'), ('1333', 'Nozomi'), ('13389', 'Alexis'), ('1339', 'Marrit'), ('134', 'Dewi'), ('134', 'Nonna'), ('134', 'Sneha'), ('1344', 'Brynn'), ('135', 'Lizaveta'), ('1352', 'Xiaoxi'), ('1358', 'Ineke'), ('1358928', 'Na'), ('136', 'Camila Vital'), ('136', 'Yidi'), ('1363', 'Shao Yuan'), ('13643', 'Angelica'), ('1365', 'Andreea Amalia'), ('1367', 'Ana Victoria'), ('13686', 'Natalija'), ('13697', 'Kayla'), ('13717', 'Agnese'), ('137327', 'Belinda'), ('1375', 'Jaeda'), ('13761', 'Ellen'), ('138', 'Maurien'), ('1380', 'Yixuan'), ('1381', 'Yolande'), ('13843', 'Irina Maria'), ('138782', 'Alexa'), ('1388', 'Maria Paulina'), ('1397', 'Stephanie Mariel'), ('13978', 'Jil Belen'), ('1401', 'Rita'), ('140108', 'Aiko'), ('1401125', 'Nadia'), ('141', 'Ah'), ('141', 'Assia'), ('141', 'Deeon'), ('14123', 'Milana'), ('141257', 'Maria Fernanda'), ('141257', 'Rika'), ('141281', 'Kathrin'), ('14129', 'Makoto'), ('1417', 'Da Hye'), ('141876', 'Claire'), ('142', 'Jasmine Amber'), ('142', 'Nelise'), ('142', 'Shelly'), ('1420', 'Ziyue'), ('14212', 'Natasa'), ('14213', 'Carol'), ('1424', 'Alba'), ('142454', 'Lindsay'), ('1427', 'Anna Maria'), ('14277', 'Guadalupe'), ('143', 'Gebriela'), ('143', 'Se Hyun'), ('1433335', 'Anastasia'), ('143422', 'Janette'), ('1437656', 'Samantha'), ('144', 'Seira'), ('1440', 'Emilie'), ('1445', 'Xi Yao'), ('1446', 'Julyette Maria Josephine'), ('1446', 'Panna'), ('1453', 'Ylona Georgiana'), ('14578', 'Xenia'), ('1458', 'Miriam Bianca'), ('14608', 'Manon'), ('1465', 'Boyan'), ('1469', 'Seda'), ('147', 'Madeline'), ('147', 'Paige Mary'), ('14709', 'Ran'), ('148', 'Maria Camila'), ('148', 'Sarai Delfina'), ('148', 'Schena'), ('1483', 'Shu Ying'), ('14838', 'Aki'), ('1484', 'Andreea'), ('14865', 'Jasmine'), ('148701', 'Raluca'), ('148728', 'Kristyna'), ('149', 'Dina'), ('14942', 'Lena Marie'), ('15', 'Chaoyi'), ('15', 'Jiakang'), ('15', 'Jin'), ('15', 'Joanne'), ('15', 'Luna'), ('15', 'Mananchaya'), ('15', 'Mihaela Lorena'), ('15', 'Moulika'), ('15', 'Sunae'), ('150', 'Dajana'), ('15001', 'Chantal'), ('1501', 'Zsofia'), ('15071', 'Yuuki'), ('151', 'Tingting'), ('15102', 'Kinnie'), ('15190', 'Chloe'), ('15198', 'Valentini'), ('152', 'Leah'), ('15218', 'Caitlin'), ('15248', 'Yuliana'), ('1527', 'Ilze'), ('153', 'Martha'), ('1535', 'Nagi'), ('1536', 'Kana'), ('15365', 'Natasha'), ('154', 'Arlinda'), ('154', 'Mahak'), ('15401', 'Chihiro'), ('1544', 'Sultan'), ('154484', 'Mariya'), ('154599', 'Jessica'), ('1546', 'Ylena'), ('155', 'Alory Regina Elorriaga'), ('155143', 'Yulia'), ('1553', 'Jiahui'), ('1558', 'Noel'), ('156', 'Afroditi'), ('156', 'Maria Lourdes'), ('156531', 'Julie'), ('157', 'Amira'), ('157', 'Francisca'), ('1578', 'Alejandra'), ('158', 'Agustina Elena'), ('1583', 'Lisa Marie'), ('1589', 'Lucrezia'), ('1589674', 'Ana'), ('159', 'Amrita'), ('159', 'Andrina'), ('159', 'Spurti'), ('159155', 'Valeria'), ('15935', 'Dalma'), ('15955', 'Ana Sofia'), ('15970', 'Kathinka'), ('160', 'Anda'), ('160', 'Dagmara'), ('160164', 'Michelle'), ('1607', 'Daneika'), ('1609', 'Emmanuelle'), ('160945', 'Katerina'), ('161', 'Ramya'), ('1614', 'Domenica'), ('162', 'Muge'), ('1622', 'Clemence'), ('1624', 'Marlies'), ('1626', 'Mira'), ('1626', 'Sylvia'), ('16276', 'Susanne'), ('163', 'Mafalda'), ('16303', 'Natela'), ('163036', 'Darya'), ('163239', 'Naomi'), ('1633', 'Louise'), ('164', 'Donika'), ('164900', 'Lenka'), ('16494', 'Nanuli'), ('165013', 'Rebecca'), ('165477', 'Erika'), ('1657', 'Anette'), ('16621', 'Valeriya'), ('16663', 'Daniella'), ('166760', 'Brenda'), ('167', 'Farah'), ('1671', 'Luisa'), ('1676', 'Imane Maelle'), ('1678', 'Veronica M'), ('1679', 'Hayley'), ('16790', 'Marcela'), ('168', 'Denise Antonela'), ('168', 'Rebeca'), ('16886', 'Rocio'), ('169', 'Lidia'), ('169', 'Selin'), ('169371', 'Annika'), ('169500', 'Vesna'), ('1696', 'Li'), ('170', 'Nevena'), ('17020', 'Romana Caroline'), ('170617', 'Daria'), ('17078', 'Ya Hsuan'), ('171', 'Melissa Ishuan'), ('17185', 'Lucia'), ('172', 'Annie'), ('172004', 'Kai Chen'), ('172431', 'Paula'), ('1726', 'Chiraz'), ('1728', 'Yuriko'), ('173', 'Leslie'), ('17382', 'Indy'), ('1744', 'Sri Vaishnavi'), ('1748', 'Yasmine'), ('17514', 'Patrycja'), ('17577', 'Krista'), ('17587', 'Fernanda'), ('17597', 'Danica'), ('176', 'Mi Jeong'), ('177170', 'Kurumi'), ('177458', 'Lara'), ('178', 'Sarvinoz'), ('17819', 'Jesika'), ('1788', 'Mayar'), ('179', 'Weronika Jasmina'), ('1795', 'Noelle'), ('17967', 'Anhelina'), ('17975', 'Sanaz'), ('18', 'Constanze'), ('18', 'Gulchekhra'), ('18', 'Jamilya'), ('18', 'Shiori'), ('18', 'Terri'), ('180', 'Miranda'), ('1801033', 'Agnieszka'), ('181', 'Pei Ju'), ('182', 'Yoo Ri'), ('18210', 'So Ra'), ('18211', 'Elixane'), ('18219', 'Fiona'), ('1822', 'Luisa Marie'), ('1828', 'Yukun'), ('18286', 'Marketa'), ('1832', 'Petia'), ('18371', 'Sofiya'), ('184', 'Yujia'), ('1848', 'Georgia Andreea'), ('185', 'Maria Agustina'), ('1856', 'Yelena'), ('1858', 'Mi Rae'), ('1864', 'Tornado Alicia'), ('187', 'Chantelle'), ('187', 'Xin Yu'), ('1873', 'Haruna'), ('18781', 'Vojislava'), ('18824', 'Celine'), ('1884', 'Min'), ('1884', 'Trang'), ('1892', 'Maria Constanza De Las Mercedes'), ('1894', 'Katherine Gabriela'), ('1899', 'Kristy'), ('1901', 'Agata'), ('19048', 'Angelina'), ('19065', 'Despina'), ('1906587', 'Svetlana'), ('19092', 'Bernarda'), ('190997', 'Jamie'), ('191', 'Alexandria'), ('1917', 'Magali'), ('19173', 'Mai'), ('1920', 'Beatriz Maria'), ('19223', 'Na Ri'), ('192296', 'Severine'), ('1923', 'Dasha'), ('1929137', 'Vera'), ('193362', 'Tereza'), ('1936', 'Karine'), ('193767', 'Mandy'), ('19446', 'Aryna'), ('1945', 'Napatsakorn'), ('19495', 'Ximena'), ('195', 'Saana'), ('1955', 'Joana'), ('1958404', 'Petra'), ('1960', 'Lilla'), ('1962', 'Anaeve'), ('1977', 'Mirabelle'), ('1978', 'Eden'), ('197904', 'Patricia'), ('198', 'Shakhnoza'), ('1987', 'Viktoryia'), ('1990', 'Amina'), ('1991', 'Jillian'), ('1997', 'Margarida'), ('19989', 'Yi'), ('2', 'Olawaseun'), ('200', 'Melissa'), ('201', 'Mihoki'), ('201173', 'Nina'), ('201258', 'Mariana'), ('20132', 'Chayenne'), ('20142', 'Kanae'), ('201856', 'Renata'), ('20196', 'Melis'), ('202', 'Aneta'), ('2020', 'Samira'), ('202172', 'Camila'), ('20236', 'Zhaoxuan'), ('2025', 'Noelia'), ('20269', 'Yumi'), ('202697', 'Casey'), ('202780', 'Heather'), ('2034', 'Qiu Yu'), ('20368', 'Elizabeth'), ('203782', 'Misaki'), ('204801', 'Eugenie'), ('20481', 'Marija'), ('2052', 'Zalina'), ('206', 'Almudena'), ('206', 'Mariia'), ('2061', 'Momoko'), ('2061', 'Saray'), ('206375', 'Yuliya'), ('206981', 'Evgeniya'), ('207', 'Lauryn'), ('2070', 'Manca'), ('2076949', 'Caroline'), ('208108', 'Sesil'), ('20869', 'Cory Ann'), ('209', 'Parris'), ('2094', 'Ivania'), ('20989', 'Eugeniya'), ('21', 'Ana Luisa'), ('21', 'Avgusta'), ('21', 'Betina'), ('21', 'Julia Mansano'), ('21', 'Zeynep  Sena'), ('210', 'Maud'), ('210101', 'Kveta'), ('21152', 'Storm'), ('21205', 'Miharu'), ('2122', 'Shakhlo'), ('21261', 'Fatma'), ('2127', 'Szabina'), ('2127', 'Tea'), ('2133', 'Macarena'), ('2133', 'Ornella'), ('21340', 'Piia'), ('21360', 'Yue Yue'), ('2141', 'Ana Paula'), ('214121', 'Kiki'), ('21417', 'Korina'), ('2142854', 'Victoria'), ('215', 'Deria'), ('21599', 'Ankita'), ('21624', 'Antonia'), ('2166', 'Zhanlan'), ('21685', 'Francoise'), ('21728', 'Agustina'), ('2177', 'Anita'), ('219', 'Adnya'), ('219', 'Agata Jadwiga'), ('219', 'Maureen'), ('2191', 'Yuki Kristina'), ('22', 'Caty'), ('22', 'Layne'), ('22', 'Nikita'), ('221', 'Inger'), ('2216', 'Liz Tatiane'), ('221695', 'Silvia'), ('2217', 'Ai Wen'), ('2221', 'Clelia'), ('2221', 'Vendula'), ('224', 'Hao Ching'), ('224', 'Nattawadee'), ('224', 'Sandy'), ('22443', 'Yi Jing'), ('2249', 'Theo'), ('225', 'May'), ('22578', 'Vlada'), ('2258', 'Zuzanna'), ('225987', 'Lesia'), ('226', 'Aimee'), ('226', 'Mariaryeni'), ('2266', 'Madrie'), ('2275', 'Sadafmoh'), ('228', 'Andjela'), ('228', 'Rafaela'), ('2280', 'Kajsa'), ('22840', 'Miyabi'), ('228538', 'Akgul'), ('2287', 'Eleanor'), ('229', 'Kanako'), ('229391', 'Yung Jan'), ('22977', 'Sherazad'), ('22978', 'Quirine'), ('230', 'Micaela'), ('230262', 'Tatjana'), ('23195', 'Riko'), ('2321', 'Ashvarya'), ('2338', 'Anamika'), ('23411', 'Liga'), ('235', 'Alessandra'), ('23564', 'Montserrat'), ('235721', 'Coco'), ('2358', 'Alice Andrada'), ('236', 'Shiran'), ('2362', 'Libby'), ('23620', 'Deniz'), ('23668', 'Maya'), ('2369', 'Aliona'), ('237', 'Kaylah'), ('2371', 'Ho Ching'), ('2378', 'Shanshan'), ('238', 'Aselya'), ('238', 'Gyulnara'), ('238803', 'Alberta'), ('23897', 'Lavinia'), ('23968', 'Miyu'), ('23976', 'Doroteja'), ('24', 'Christie'), ('24', 'Emilija'), ('24', 'Hollie'), ('24', 'Jaimy Gayle'), ('24', 'Pei Hsuan'), ('24', 'Rui'), ('24', 'Ya'), ('24', 'Yihong'), ('2400', 'Ulyana'), ('240195', 'Greta'), ('2403', 'Ioana Diana'), ('24062', 'Keren'), ('240762', 'Cara'), ('241', 'Pamela'), ('24184', 'Aranza'), ('242', 'You Na'), ('2421', 'Ana Bianca'), ('242619', 'Michaella'), ('24279', 'Yuxuan'), ('243', 'Pippa'), ('2433', 'Ainhoa'), ('2434', 'Maddison'), ('2438', 'Christine'), ('2446', 'Eetee'), ('244807', 'Lauren'), ('245', 'Angela'), ('245139', 'Mathilde'), ('24523', 'Nungnadda'), ('24542', 'Miki'), ('24569', 'Mi'), ('24595', 'Katharina'), ('247237', 'Stefanie'), ('2484', 'Giorgia'), ('2487', 'Britt'), ('2489', 'Malin'), ('24897', 'Stefania'), ('249', 'Kamilla'), ('249446', 'Edina'), ('250056', 'Catalina'), ('251', 'Naz'), ('2515436', 'Jelena'), ('25166', 'Constance'), ('25183', 'Alyona'), ('2524', 'Alessia'), ('2526', 'Natia'), ('253', 'Ivone'), ('2531', 'Nicky'), ('253320', 'Alla'), ('253471', 'Romina'), ('254491', 'Yvonne'), ('254520', 'Karin'), ('25496', 'Marie'), ('255', 'Larikah'), ('255', 'Vaniya'), ('2570', 'Vladyslava'), ('259', 'Nam Yeon'), ('259116', 'Nuria'), ('2592', 'Rachael'), ('26', 'Beauty'), ('26059', 'Kyung Mi'), ('26077', 'Tammi'), ('2609', 'Melina'), ('26185', 'Na Lae'), ('26209', 'Jade'), ('26226', 'Viktoriya'), ('26280', 'Peangtarn'), ('2634', 'Riya'), ('2641', 'Saska'), ('265', 'Alessondra'), ('26585', 'Chang'), ('2661', 'Nadja'), ('266197', 'Sandra'), ('2662', 'Liubov'), ('26624', 'Basak'), ('266251', 'Zuzana'), ('267679', 'Marta'), ('26779', 'Chen'), ('268277', 'Anastasija'), ('268372', 'Jana'), ('26897', 'Ekaterine'), ('269', 'Astrid Wanja'), ('269', 'Paula Andrea'), ('26950', 'Ilona'), ('27', 'Carlota'), ('27', 'Sabina Elena'), ('27', 'Sarlota'), ('27', 'Vilma Y'), ('27', 'Yasmina'), ('270102', 'Kimiko'), ('27011', 'Evelyn'), ('2706', 'Nives'), ('27061', 'Beatrice'), ('2710', 'Josepha'), ('27118', 'Ulrikke'), ('272', 'Kimika'), ('272', 'Mirjam'), ('272889', 'Sania'), ('2738', 'Dhruthi'), ('27452', 'Rushmi'), ('27462', 'Jacqueline'), ('274936', 'Su Wei'), ('275', 'Yanni'), ('275255', 'Urszula'), ('275364', 'Chanelle'), ('27580', 'Hiroko'), ('276', 'Chompoothip'), ('276', 'Sirui'), ('277', 'Chengyiyi'), ('2772', 'Zoe'), ('27804', 'Ysaline'), ('2782', 'Hanna'), ('279', 'Milena'), ('279', 'Nermeen'), ('27997', 'Lena'), ('28', 'Roosh'), ('280', 'Antonela'), ('28045', 'Adriana'), ('28098', 'Nathalia'), ('281', 'Laura D'), ('281', 'Ye Xin'), ('281', 'Yuan'), ('2820', 'Snehadevi S'), ('282445', 'Mona'), ('283166', 'Bojana'), ('284', 'Meritxell'), ('285', 'Yoko'), ('2850', 'Berfu'), ('286', 'Julita'), ('286', 'Lesedi Sheya'), ('2864', 'Gozal'), ('2875425', 'Venus'), ('2877', 'Zoe Gwen'), ('288', 'Ailen'), ('288', 'Ana Gabriela'), ('289', 'Carson'), ('289', 'Giovanna'), ('290', 'Ghislaine'), ('290299', 'Melinda'), ('291', 'Ivanka'), ('291', 'Vanja'), ('292', 'Ina'), ('29214', 'Romana'), ('2922', 'Brianna'), ('29250', 'Nastja'), ('2927', 'Mizuno'), ('2929', 'Agni'), ('293366', 'Irina Camelia'), ('2935', 'Giuliana'), ('294', 'Haine'), ('294', 'Kei'), ('294', 'Maria Jesus'), ('29442', 'Annalisa'), ('296', 'Maria Del Rosario'), ('2961', 'Sowjanya'), ('296736', 'Maria Elena'), ('298', 'Kseniia'), ('298', 'Violetta'), ('29852', 'Sung Hee'), ('299530', 'Vania'), ('299698', 'Irina'), ('3', 'Arina Gabriela'), ('3', 'Himari'), ('3', 'Judith'), ('3', 'Marijana'), ('3', 'Phenomena'), ('30', 'Brindtha'), ('30', 'Damira'), ('30', 'Lyann'), ('30', 'Zhou'), ('3002', 'Jiaxi'), ('30035', 'Katie'), ('30136', 'Ganna'), ('3018', 'Verena'), ('30191', 'Viktoria'), ('3029', 'Emina'), ('302957', 'Galina'), ('30304', 'Justyna'), ('304', 'Abbi'), ('304', 'Lulu'), ('304', 'Tamari'), ('30401', 'Raquel'), ('30669', 'Vanesa'), ('3073', 'Malou'), ('308', 'Katrine Isabel'), ('308', 'Rona'), ('3085', 'Steffi'), ('309', 'Mitsumi'), ('3094', 'Nan Nan'), ('30972', 'Nicha'), ('309990', 'Ayumi'), ('310215', 'Christina'), ('3112', 'Manisha'), ('312', 'Blanca'), ('3121', 'Dana'), ('3127', 'Karla'), ('313187', 'Pauline'), ('3133', 'Irene'), ('314747', 'Elina'), ('315', 'Xiyu'), ('316', 'Malene'), ('316', 'Sasa'), ('31620', 'Cindy'), ('3165', 'Ronit'), ('317', 'Cristina Madalina'), ('31741', 'Gioia'), ('3187', 'Bunyawi'), ('3193', 'Karman'), ('32', 'Moyuka'), ('32', 'Yarden'), ('320', 'Suellen'), ('3200', 'Kyle'), ('320083', 'Eva'), ('3208', 'Paulina'), ('32169', 'Karen'), ('322202', 'Tamira'), ('323', 'Malika'), ('323', 'Maria Andrea'), ('323527', 'Alison'), ('324', 'Kelia'), ('324', 'Suzuho'), ('32445', 'Mayo'), ('325216', 'Polona'), ('3255', 'Shweta'), ('32581', 'Claudia'), ('3298', 'Denise'), ('33', 'Anne Sophie'), ('33', 'Daphne'), ('33', 'Intissar'), ('33', 'Lorenza'), ('33', 'Marcelina'), ('33', 'Nataliya'), ('330', 'Karyn'), ('33054', 'Allie'), ('331434', 'Mirjana'), ('333', 'Tijana'), ('33301', 'Chia Jung'), ('333150', 'Jarmila'), ('33388', 'Fangzhou'), ('33550', 'Nicola'), ('336', 'Rosie'), ('336', 'Shuyue'), ('336', 'Sofico'), ('3361', 'Tjasa'), ('33624', 'Audrey'), ('33672', 'Su Jeong'), ('3374', 'Chun Yan'), ('338', 'Valentina'), ('33822', 'Laura Ioana'), ('34', 'Kate'), ('340', 'Melisa'), ('3426', 'Jeannine'), ('344', 'Suzan'), ('3445', 'Lu'), ('34453', 'Jasmin'), ('3453', 'Ju Eun'), ('34570', 'Eri'), ('34647', 'Kristie'), ('3466', 'Matilda'), ('3470', 'Borislava'), ('3471', 'Ingrid'), ('34795', 'Tatiana'), ('34796', 'Chieh Yu'), ('3497', 'Ola'), ('351', 'Belen'), ('352458', 'Sloane'), ('354', 'Desirae'), ('354', 'Sanae'), ('355', 'Jodie Anna'), ('358', 'Chisa'), ('359', 'Frances'), ('359013', 'Jill'), ('3592', 'Yoon Young'), ('359374', 'Anna Lena'), ('3594', 'Sunam'), ('35957', 'Aleksandrina'), ('36', 'Ange Oby'), ('36', 'Eugenia'), ('36', 'Justina'), ('3613355', 'Maria'), ('3621', 'Anouk'), ('3623', 'Varunya'), ('362372', 'Marina'), ('3627', 'Carolina Meligeni Rodrigues'), ('363', 'Katharine'), ('363', 'Oliwia'), ('363', 'Wiktoria'), ('3633', 'Haruka'), ('3642', 'Rutuja'), ('3657', 'Michika'), ('366', 'Yijia'), ('36696', 'Ana Clara'), ('36714', 'Vivian'), ('36889', 'Carolina'), ('369810', 'Alisa'), ('37', 'Vinciane'), ('371035', 'Lourdes'), ('371140', 'Ksenia'), ('3714', 'Paula Catalina'), ('371662', 'Bethanie'), ('3724', 'Kanami'), ('37384', 'Paula Cristina'), ('3748', 'Khristina'), ('376', 'Estela'), ('376', 'Yekaterina'), ('3763', 'Vaszilisza'), ('377', 'Lusine'), ('377', 'Theresa'), ('37817', 'Kai Lin'), ('3783', 'Ying'), ('37981', 'Natsumi'), ('38', 'Cameron'), ('38086', 'Mari'), ('3809', 'Zarah'), ('3811', 'Olesya'), ('38116', 'Remi'), ('382', 'Oyku'), ('3825', 'Miriam'), ('383077', 'Kirsten'), ('383495', 'Aravane'), ('385', 'Alana'), ('38501', 'Ayu Fani'), ('385636', 'Melanie'), ('38651', 'Gail'), ('38793', 'Roxane'), ('3880', 'Emi'), ('38850', 'Taylor'), ('3894', 'Bernice'), ('39', 'Arthi'), ('39', 'Chanikarn'), ('39', 'Gulnaz'), ('39', 'Laylo'), ('390', 'Maxine'), ('390148', 'Agnes'), ('3905', 'Kaitlyn'), ('3908', 'Ester'), ('39102', 'Yana'), ('392', 'Draginja'), ('39270', 'Jovana'), ('3928', 'Helene'), ('39307', 'Sophie'), ('39352', 'Ipek'), ('39418', 'Justine'), ('3942', 'Despoina'), ('395', 'Iana'), ('395', 'Mahitha'), ('39523', 'Mailen'), ('39687', 'Yafan'), ('39782', 'Liezel'), ('39960', 'Shiho'), ('39989', 'Estelle'), ('4', 'Mariona'), ('40', 'Johana'), ('40', 'Lorraine M'), ('40', 'Mei Xu'), ('40', 'Olaya'), ('40', 'Ralina'), ('40060', 'Tamaryn'), ('401409', 'Varvara'), ('401857', 'Magdalena'), ('403', 'Kwan Yau'), ('403127', 'Paola'), ('40341', 'Lin'), ('40410', 'Ines'), ('404915', 'Yaroslava'), ('405', 'Eleonora'), ('4052', 'Alona'), ('4053', 'Cornelia'), ('406', 'Inci'), ('4060', 'Mariam'), ('40633', 'Wen Hsin'), ('407', 'Megumi'), ('40823', 'Danielle'), ('4093', 'Julieta Lara'), ('41', 'Eva Marie'), ('410', 'Gulben'), ('410', 'Karina Kristina'), ('410', 'Kelsey'), ('4106', 'Sharmada'), ('4122', 'Jessika'), ('4128', 'Pavla'), ('412872', 'Garbine'), ('413', 'Hana'), ('413', 'Ushna'), ('413759', 'Maria Jose'), ('414', 'Jin Ju'), ('414', 'Juliana'), ('41575', 'Amandine'), ('416', 'Kaitlin'), ('417', 'Meiling'), ('41792', 'Teodora'), ('41925', 'Darija'), ('4196', 'Yan'), ('4197', 'Lea'), ('42', 'Milagros'), ('42', 'Tatia'), ('42', 'Wan Yi'), ('4216', 'Linda'), ('4232828', 'Serena'), ('42527', 'Vasilisa'), ('4258', 'Raluca Georgiana'), ('42676', 'Sachie'), ('427', 'Mihika'), ('42773', 'Chiaki'), ('42925', 'Lesley'), ('4294', 'Oana Georgeta'), ('43', 'Emilia'), ('43020', 'Tetyana'), ('4314', 'Marine'), ('434692', 'Arantxa'), ('435038', 'Kateryna'), ('43550', 'Myrtille'), ('4356', 'Charlotte'), ('4368', 'Hirono'), ('43755', 'Patricia Maria'), ('43779', 'Elise'), ('4380', 'Naiktha'), ('43862', 'Jasmina'), ('439179', 'Eleni'), ('44', 'Federica Joe'), ('440', 'Genevieve'), ('440', 'Naima'), ('443', 'Ramu'), ('443695', 'Iveta'), ('444303', 'Katarina'), ('44497', 'Mallory'), ('447434', 'Nicole'), ('4499', 'Sonja'), ('45', 'Idia'), ('45', 'Talya'), ('45', 'Yuval'), ('45115', 'Leticia'), ('451414', 'Aleksandra'), ('452', 'Yu Jin'), ('4535', 'Xu Liu'), ('454', 'Victoire'), ('4543', 'Tyra'), ('455', 'Dominique'), ('456', 'Lamis'), ('456422', 'Tsvetana'), ('457043', 'Sorana'), ('4580', 'Kim'), ('45884', 'Catherine Cartan'), ('461', 'Sarahi'), ('4611', 'Shivika'), ('4612', 'Jia Qi'), ('46124', 'Shuko'), ('4619', 'Adrijana'), ('462', 'Kirsten Andrea'), ('46355', 'Jin A'), ('464', 'Andrea Renee'), ('464', 'Jara'), ('464', 'Sari'), ('4643', 'Hanyu'), ('465', 'Karolayne'), ('467', 'Ida'), ('467', 'Kady'), ('467', 'Simran Kaur'), ('468', 'Gabriela Nicole'), ('469', 'Rachel'), ('46908', 'Anais'), ('4703', 'Dunja'), ('4705', 'Kelly'), ('4709', 'Elisabeth'), ('472', 'Erica'), ('472', 'Joanna'), ('47282', 'So Jung'), ('4743', 'Iris'), ('476', 'Tinatin'), ('47651', 'Nigina'), ('4766', 'Ingrid Alexandra'), ('476768', 'Madison'), ('4777', 'Isabelle'), ('47854', 'Valentyna'), ('47867', 'Ye Ra'), ('4787', 'Margot'), ('4789', 'Xiao'), ('48', 'Georgiana'), ('48', 'Leylah Annie'), ('48', 'Mercedes'), ('480', 'Anushka'), ('480', 'Eliza'), ('480', 'Sonia'), ('4809', 'Klaudia'), ('48117', 'Jia Jing'), ('4831', 'Kimberly'), ('484', 'Antonina'), ('484', 'Olena'), ('484140', 'Sofia'), ('48788', 'Asia'), ('48811', 'Ani'), ('48857', 'Dalila'), ('49', 'Ronke'), ('490', 'Adeliya'), ('491', 'Nikol'), ('49122', 'Chi Chi'), ('4914', 'Chalena'), ('49207', 'Anna Giulia'), ('4941', 'Ao'), ('49412', 'Stanislava'), ('4962', 'Kotomi'), ('497', 'Stefana'), ('49767', 'Sachia'), ('49784', 'Sabina'), ('4980', 'Josephine'), ('4987', 'Catherine'), ('49980', 'Ashley'), ('5', 'Chelsea'), ('50', 'Ege'), ('500', 'Lindsey'), ('5007', 'Jaimee'), ('50184', 'Bibiane'), ('502', 'Susan'), ('5027', 'Nadezda'), ('505', 'Yuki'), ('5051', 'Tayisiya'), ('5057', 'Xiaodi'), ('50700', 'Louisa'), ('51', 'Andra Maria'), ('510', 'Priscila'), ('511', 'I Hsuan'), ('511', 'Magalie'), ('512490', 'Karolina'), ('515', 'Katya'), ('5155', 'Ashling'), ('515957', 'Barbora'), ('5173', 'Ayano'), ('51803', 'An Sophie'), ('519208', 'Virginie'), ('52', 'Ahsha'), ('52', 'En Pei'), ('52', 'Ilay'), ('52', 'Jia'), ('5214', 'Abbie'), ('5216', 'Alicja'), ('522', 'Libi'), ('522', 'Sharon Sanchana'), ('52274', 'Conny'), ('525', 'Maegan'), ('526', 'Ella'), ('5269', 'Anne Liz'), ('52889', 'Emily'), ('531', 'Si Qi'), ('53401', 'Barbara'), ('53480', 'Sally'), ('5356', 'Erin'), ('536', 'Elizabeta'), ('53610', 'Sheng Nan'), ('537', 'Busra'), ('5372', 'Ofri'), ('538', 'Clementina Eugenia'), ('5387', 'Raveena'), ('5393', 'Kimberley'), ('54', 'Anke'), ('54', 'Maftuna'), ('541', 'Emiliya'), ('54140', 'Tamara'), ('5416', 'Jaqueline Adina'), ('54172', 'Lyudmyla'), ('542', 'Meng Ning'), ('5422', 'Alix'), ('5425', 'Ioana Loredana'), ('5425', 'Nidhi'), ('543', 'Ivette'), ('54340', 'Varatchaya'), ('545', 'Danijela'), ('54798', 'Tara'), ('5493', 'Karina Ildor'), ('553107', 'Johanna'), ('555', 'Kristina N'), ('556', 'Rio'), ('5566', 'Ria'), ('559', 'Yuqi'), ('5592', 'Makiho'), ('55981', 'Misa'), ('5604', 'Whitney'), ('5619', 'Dayana'), ('562', 'Carlotta'), ('56212', 'Kumiko'), ('56242', 'Ons'), ('565', 'Molly'), ('56596', 'Nadiya'), ('567', 'Eleonore'), ('56817', 'Federica'), ('568191', 'Klara'), ('5683', 'Charlene'), ('56853', 'Oceane'), ('5687', 'Prarthana G'), ('571', 'Ayan'), ('574', 'Camille'), ('57585', 'Tina'), ('576', 'Guillermina'), ('57745', 'Alice'), ('578964', 'Laura'), ('5803', 'Rebeka'), ('581', 'Sybille'), ('5818', 'Klaartje'), ('58279', 'Oksana'), ('5866', 'Kamonwan'), ('587309', 'Monica'), ('58741', 'Ashleigh'), ('5880', 'Kelly S'), ('590911', 'Sabine'), ('59412', 'Cristina'), ('594217', 'Lisa'), ('594281', 'Tamarine'), ('5944', 'Harmony'), ('595', 'Laili'), ('596', 'Michele Alexandra'), ('59671', 'Nao'), ('596901', 'Alize'), ('597', 'Ryann'), ('597', 'Shuo'), ('59775', 'Evgenia'), ('59997', 'Liana Gabriela'), ('6', 'Loudmilla'), ('6', 'Madina'), ('6', 'Muazzez'), ('6', 'Shreya'), ('60', 'Tamar'), ('601693', 'Kristina'), ('602453', 'Yanina'), ('605', 'Andie K'), ('60646', 'Yi Fan'), ('60702', 'Amra'), ('6078', 'Laetitia'), ('608309', 'Stephanie'), ('60908', 'Pemra'), ('610820', 'Jie'), ('611', 'Jil Nora'), ('61196', 'Aliaksandra'), ('612072', 'Timea'), ('613', 'Wendy Qi Wen'), ('614', 'Nikki'), ('6146', 'Valerie'), ('6159', 'Chiara'), ('6168', 'Greetje'), ('6179', 'Gabriella'), ('61839', 'Yi Miao'), ('62', 'Ann'), ('62252', 'Risa'), ('625', 'Ksenija'), ('6256', 'Csilla'), ('625836', 'Kaia'), ('628', 'Jazzamay'), ('62861', 'Chanel'), ('6288', 'Yevgeniya'), ('62938', 'Madalina'), ('62977', 'Elizaveta'), ('63', 'Jule'), ('63', 'Milica'), ('63013', 'Nudnida'), ('6341', 'Svenja'), ('636', 'Elizaveta Anna'), ('6369', 'Dianne'), ('639', 'Dan Ni'), ('63998', 'Bianca'), ('64', 'Jada'), ('64', 'Reina'), ('64', 'Vita'), ('640', 'Akvile'), ('6404', 'Pilar'), ('641', 'Qianqian'), ('645', 'Ludmila'), ('64525', 'Ling'), ('646', 'Quinn'), ('6470', 'Vladimira'), ('647811', 'Anne'), ('648', 'Ashmitha'), ('648', 'Yawna'), ('649', 'Natella'), ('65', 'Emma Christine'), ('65152', 'Nastassja'), ('6525', 'Freya'), ('653', 'Kennedy'), ('653', 'Mary'), ('6542', 'Lucy'), ('6547', 'Elena Teodora'), ('65522', 'Denisa'), ('6564', 'Seo Kyung'), ('6573', 'Pernilla'), ('6591', 'Sun Jung'), ('66', 'Salma'), ('662', 'Blessing'), ('66271', 'Reka Luca'), ('662926', 'Shahar'), ('664', 'Phillis'), ('6650', 'Anna Arina'), ('6650', 'Seung Yeon'), ('667', 'Chi Fan'), ('6688', 'Isabel'), ('669546', 'Carla'), ('67017', 'Dinah'), ('672', 'Leonie'), ('67459', 'Carly'), ('676', 'Breaunna'), ('677', 'Angeliki'), ('677', 'Giada'), ('677', 'Yoshimi'), ('6777', 'Chelsey'), ('678793', 'Anabel'), ('679', 'Chia Hsien'), ('68', 'Aastha'), ('6809', 'Lidziya'), ('681', 'Se Jin'), ('6810', 'Sabrina'), ('682', 'Yuenu'), ('68207', 'Amanda'), ('683', 'Marcela Guimaraes'), ('683', 'Qianhui'), ('687', 'Guiomar'), ('688', 'Mallaurie'), ('688', 'Sinead'), ('68925', 'Jing Jing'), ('69', 'Esen'), ('6906', 'Morgane'), ('69242', 'Mihaela'), ('6948', 'Ionela Andreea'), ('697', 'Linnea'), ('699', 'Radina'), ('7', 'Axana'), ('7', 'Zhibek'), ('70', 'Savannah'), ('701', 'Komola'), ('702', 'Mara'), ('702', 'Zeel'), ('7027', 'Dea'), ('703', 'Aida'), ('704', 'Kassandra'), ('70504', 'Chin Wei'), ('706', 'Thai Sa Grana'), ('70613', 'Grace'), ('7062', 'Brooke'), ('709', 'Desiree'), ('71', 'Aldana'), ('71', 'Vishesh'), ('71', 'Yasmyn'), ('71072', 'Anett'), ('713', 'Ebony'), ('714', 'Isabela'), ('7147', 'Etsuko'), ('715', 'Madeleine'), ('716', 'Siqi'), ('71645', 'Vanessa'), ('7165', 'Tess'), ('717', 'Xiaorong'), ('7179', 'Ji Hee'), ('72', 'Abir'), ('72', 'Andressa Cristina'), ('72', 'Carolyn'), ('72', 'Janja'), ('72', 'Liniques'), ('72', 'Mi Zhuoma'), ('72', 'Nastassia'), ('724638', 'Simona'), ('725', 'Brandy'), ('72682', 'Maria Joao'), ('73', 'Yang'), ('73192', 'Veronika'), ('7323', 'Patty'), ('733', 'Lee'), ('7353', 'Dijana'), ('73589', 'Noppawan'), ('736', 'Treta'), ('7367', 'Hua Chen'), ('74', 'Iulia Maria'), ('74', 'Zinovia'), ('741', 'Rashmi'), ('742', 'Akilah'), ('7431', 'Tomoko'), ('744', 'Eveliina'), ('7444', 'Ayla'), ('74453', 'Andreja'), ('7486', 'Cristiana'), ('75', 'Beatriz Magdalena'), ('75', 'Sean'), ('75', 'Yosr'), ('750', 'Leolia'), ('75337', 'Tetiana'), ('75414', 'Cristina Andreea'), ('756', 'Magy'), ('75850', 'Anastasiya'), ('760', 'Nour'), ('7605', 'Deborah'), ('761', 'Jainy'), ('762', 'India'), ('764', 'Tanaporn'), ('76586', 'Michaela'), ('76747', 'Polina'), ('77', 'Vicky'), ('772', 'Yuanyi'), ('773929', 'Olga'), ('775', 'Guzal'), ('77519', 'Luksika'), ('7755', 'Fang Ying'), ('776', 'Karola Patricia'), ('7772', 'Elena Gabriela'), ('778', 'Marta Huqi'), ('7797', 'Hulya'), ('78', 'Ferny'), ('78', 'Hazal'), ('780', 'Sabastiani'), ('78204', 'Sacha'), ('78265', 'Margarita'), ('7843', 'Katherine'), ('78461', 'Sarah'), ('78513', 'Nikola'), ('7874', 'Usue Maitane'), ('7898', 'Lisa Maria'), ('791', 'Aymet'), ('79511', 'Viktorija'), ('7975', 'Ching Wen'), ('79958', 'Dia'), ('7996', 'Ayaka'), ('7998', 'Gaia'), ('7999', 'Gracia'), ('80', 'Fatyha'), ('801', 'Sherry'), ('802', 'Asiya'), ('803', 'Rosalia'), ('804', 'Josie'), ('8072', 'Stamatia'), ('8079', 'Ellie'), ('809611', 'Roberta'), ('811', 'Habiba'), ('81222', 'Jennifer'), ('814', 'Berta'), ('8145', 'Ting Fei'), ('8146', 'Nicoleta Catalina'), ('8174', 'Carmen'), ('8180', 'Hae Sung'), ('8203', 'Priscilla'), ('822', 'Jawairiah'), ('823', 'Ena'), ('8268', 'Sylwia'), ('8284', 'Lisanne'), ('83', 'Akiho'), ('83', 'Maileen'), ('8301', 'Hyun Hui'), ('8305', 'Luciana'), ('83476', 'Isabella'), ('836', 'Anhzelika'), ('83659', 'Tadeja'), ('837', 'Lynn'), ('84', 'Yukako'), ('8406', 'Kaori'), ('84184', 'Richel'), ('843', 'Tamachan'), ('8441', 'Bermet'), ('84446', 'Akiko'), ('8448', 'Rishika'), ('84543', 'Veronica'), ('85', 'Ahlam'), ('85', 'Dilara'), ('85', 'Kariann'), ('85022', 'Emma'), ('8507', 'Danielle Rose'), ('85425', 'Maryna'), ('857', 'Dariya'), ('857', 'Naoko'), ('8589', 'Daiana'), ('8592', 'Ji Young'), ('86', 'Ki Ryang'), ('8608', 'Harriet'), ('861', 'Janneke'), ('8676', 'Ting Jr'), ('87', 'Leticia Garcia'), ('87', 'Siyu'), ('87', 'Zaineb'), ('870', 'Hyojung'), ('8700', 'Oleksandra'), ('87263', 'Elitsa'), ('8744', 'Xin'), ('876', 'Lutfiye'), ('87844', 'Iryna'), ('879', 'Wushuang'), ('87958', 'Danka'), ('880', 'Rosalie'), ('882', 'Eliessa'), ('8832', 'Alena'), ('88369', 'Irena'), ('88542', 'Heidi'), ('887', 'Amelie'), ('8900', 'Pei Chi'), ('891796', 'Julia'), ('8918', 'Vivienne'), ('89361', 'Florencia'), ('8939', 'Dalia'), ('894', 'Keri'), ('898', 'Fatimah'), ('9', 'Adva'), ('9', 'Frederikke'), ('9', 'Rana'), ('9', 'Warona'), ('9', 'Yu Tong'), ('90', 'Elodie'), ('90', 'Michela'), ('90', 'Viktoriia'), ('9001', 'Syna'), ('9036', 'Kyoka'), ('90451', 'Carina'), ('905', 'Blair'), ('905', 'Margaux'), ('906', 'Satsuki'), ('9064', 'Mayya'), ('907', 'Anna Katalina'), ('907', 'Constanza'), ('908', 'Jazmin'), ('9093', 'Carolin'), ('910', 'Karoline'), ('911', 'Romy'), ('91117', 'Lina'), ('9116', 'Tessah'), ('9120', 'Nika'), ('913829', 'Shuai'), ('9147', 'Camelia Elena'), ('914981', 'Sara'), ('916', 'Iga'), ('9180', 'Sofya'), ('918746', 'Dominika'), ('919', 'Kanika'), ('92', 'Aina'), ('9202', 'Raluca Elena'), ('920433', 'Andrea'), ('9227', 'Destanee'), ('923', 'Jessy'), ('93', 'Manya'), ('9318', 'Prerna'), ('9338', 'Sakiko'), ('934', 'Claudia Gianina'), ('934', 'Plobrung'), ('9355', 'Karina'), ('93730', 'Katarzyna'), ('942', 'Kerstin'), ('95', 'Cecilie Lundgaard'), ('95', 'Sing Le'), ('9536', 'Neda'), ('955267', 'Alexandra'), ('957', 'Ratnika'), ('958', 'Cemre'), ('9593', 'Mana'), ('96', 'Aishwarya'), ('96', 'Jiaxue'), ('96', 'Mami'), ('96', 'Meiqi'), ('96', 'Minami'), ('96', 'Smriti'), ('96', 'Sophia'), ('960', 'Elke'), ('9600', 'Georgia'), ('9627', 'Nicolette'), ('9631', 'Hao Chen'), ('9634', 'Shilin'), ('964', 'Emily J'), ('966', 'Yeong Won'), ('96852', 'Arina'), ('97', 'Katyarina'), ('97', 'Laura Sofia'), ('97', 'Melany Solange'), ('97400', 'Natalia'), ('976', 'Eudice Wong'), ('9780', 'Di'), ('98', 'Hortencia'), ('980', 'Ariadna'), ('980', 'Nazari'), ('984', 'Rianna'), ('9846', 'Dejana'), ('98798', 'Beatriz'), ('99', 'Anne Marie'), ('99', 'Asha'), ('99', 'Diana Maria'), ('99', 'Zhima'), ('9926', 'Valentine'), ('993', 'Alicia'), ('9938', 'Min Hwa'), ('994', 'Franziska'), ('997', 'Vladica'), ('998', 'Yukina'), ('99836', 'Margalita')] != [('Aastha', '68'), ('Abbi', '304'), ('Abbie', '5214'), ('Abigail', '115293'), ('Abiodun', '120'), ('Abir', '72'), ('Adeliya', '490'), ('Adnya', '219'), ('Adriana', '28045'), ('Adrienn', '107'), ('Adrijana', '4619'), ('Adva', '9'), ('Afroditi', '156'), ('Agata', '1901'), ('Agata Jadwiga', '219'), ('Agne', '110'), ('Agnes', '390148'), ('Agnese', '13717'), ('Agni', '2929'), ('Agnieszka', '1801033'), ('Agustina', '21728'), ('Agustina Elena', '158'), ('Ah', '141'), ('Ahlam', '85'), ('Ahsha', '52'), ('Ai', '10751'), ('Ai Wen', '2217'), ('Aida', '703'), ('Aiko', '140108'), ('Ailen', '288'), ('Aimee', '226'), ('Aina', '92'), ('Ainhoa', '2433'), ('Aishwarya', '96'), ('Ajla', '116548'), ('Akari', '11873'), ('Akgul', '228538'), ('Aki', '14838'), ('Akiho', '83'), ('Akiko', '84446'), ('Akilah', '742'), ('Akvile', '640'), ('Alana', '385'), ('Alba', '1424'), ('Alberta', '238803'), ('Albina', '10507'), ('Aldana', '71'), ('Alejandra', '1578'), ('Aleksandra', '451414'), ('Aleksandrina', '35957'), ('Alena', '8832'), ('Alessandra', '235'), ('Alessia', '2524'), ('Alessondra', '265'), ('Alexa', '138782'), ('Alexandra', '955267'), ('Alexandria', '191'), ('Alexia', '12829'), ('Alexis', '13389'), ('Aliaksandra', '61196'), ('Alice', '57745'), ('Alice Andrada', '2358'), ('Alicia', '993'), ('Alicja', '5216'), ('Alina', '11393'), ('Aliona', '2369'), ('Alisa', '369810'), ('Alison', '323527'), ('Alix', '5422'), ('Alize', '596901'), ('Alla', '253320'), ('Allie', '33054'), ('Almudena', '206'), ('Alona', '4052'), ('Alory Regina Elorriaga', '155'), ('Alyona', '25183'), ('Amanda', '68207'), ('Amandine', '41575'), ('Amelie', '887'), ('Amina', '1990'), ('Aminat', '12708'), ('Amira', '157'), ('Amra', '60702'), ('Amrita', '159'), ('Amy', '10616'), ('An Sophie', '51803'), ('Ana', '1589674'), ('Ana Bianca', '2421'), ('Ana Clara', '36696'), ('Ana Gabriela', '288'), ('Ana Luisa', '21'), ('Ana Paula', '2141'), ('Ana Sofia', '15955'), ('Ana Victoria', '1367'), ('Anabel', '678793'), ('Anaeve', '1962'), ('Anais', '46908'), ('Anamika', '2338'), ('Anastasia', '1433335'), ('Anastasia Evgenyevna', '1235'), ('Anastasiia', '12'), ('Anastasija', '268277'), ('Anastasiya', '75850'), ('Anca', '101'), ('Anda', '160'), ('Andie K', '605'), ('Andjela', '228'), ('Andra Maria', '51'), ('Andrea', '920433'), ('Andrea Renee', '464'), ('Andreea', '1484'), ('Andreea Amalia', '1365'), ('Andreea Roxana', '12727'), ('Andreja', '74453'), ('Andressa Cristina', '72'), ('Andrina', '159'), ('Aneta', '202'), ('Anett', '71072'), ('Anette', '1657'), ('Ange Oby', '36'), ('Angela', '245'), ('Angelica', '13643'), ('Angeliki', '677'), ('Angelina', '19048'), ('Angelique', '1132514'), ('Anhelina', '17967'), ('Anhzelika', '836'), ('Ani', '48811'), ('Anita', '2177'), ('Anja', '11596'), ('Anke', '54'), ('Ankita', '21599'), ('Ann', '62'), ('Anna', '1017069'), ('Anna Arina', '6650'), ('Anna Giulia', '49207'), ('Anna Karolina', '107880'), ('Anna Katalina', '907'), ('Anna Lena', '359374'), ('Anna Maria', '1427'), ('Annalisa', '29442'), ('Anne', '647811'), ('Anne Liz', '5269'), ('Anne Marie', '99'), ('Anne Sophie', '33'), ('Annie', '172'), ('Annika', '169371'), ('Anouk', '3621'), ('Antonela', '280'), ('Antonia', '21624'), ('Antonina', '484'), ('Anushka', '480'), ('Ao', '4941'), ('Apichaya', '126'), ('Arabela', '11608'), ('Arantxa', '434692'), ('Aranza', '24184'), ('Aravane', '383495'), ('Ariadna', '980'), ('Arina', '96852'), ('Arina Gabriela', '3'), ('Arlinda', '154'), ('Arthi', '39'), ('Aryna', '19446'), ('Aselya', '238'), ('Asha', '99'), ('Ashleigh', '58741'), ('Ashley', '49980'), ('Ashling', '5155'), ('Ashmitha', '648'), ('Ashvarya', '2321'), ('Asia', '48788'), ('Asiya', '802'), ('Assia', '141'), ('Astra', '1083'), ('Astrid Wanja', '269'), ('Audrey', '33624'), ('Avgusta', '21'), ('Axana', '7'), ('Ayaka', '7996'), ('Ayan', '571'), ('Ayano', '5173'), ('Ayla', '7444'), ('Aymet', '791'), ('Ayu Fani', '38501'), ('Ayumi', '309990'), ('Azra', '11721'), ('Barbara', '53401'), ('Barbora', '515957'), ('Basak', '26624'), ('Beatrice', '27061'), ('Beatriz', '98798'), ('Beatriz Magdalena', '75'), ('Beatriz Maria', '1920'), ('Beauty', '26'), ('Belen', '351'), ('Belinda', '137327'), ('Benedetta', '11032'), ('Berfu', '2850'), ('Bermet', '8441'), ('Bernarda', '19092'), ('Bernice', '3894'), ('Berta', '814'), ('Bethanie', '371662'), ('Betina', '21'), ('Bhuvana', '1152'), ('Bianca', '63998'), ('Bianka', '1213'), ('Bibiane', '50184'), ('Blair', '905'), ('Blanca', '312'), ('Blessing', '662'), ('Boba', '123'), ('Bojana', '283166'), ('Borislava', '3470'), ('Boyan', '1465'), ('Brandy', '725'), ('Breaunna', '676'), ('Brenda', '166760'), ('Brianna', '2922'), ('Brienne', '12'), ('Brindtha', '30'), ('Britt', '2487'), ('Brittany', '1119'), ('Brooke', '7062'), ('Brynn', '1344'), ('Bunyawi', '3187'), ('Busra', '537'), ('Cagla', '119797'), ('Caitlin', '15218'), ('Camelia Elena', '9147'), ('Cameron', '38'), ('Camila', '202172'), ('Camila Vital', '136'), ('Camilla', '11714'), ('Camille', '574'), ('Cara', '240762'), ('Carina', '90451'), ('Carla', '669546'), ('Carlota', '27'), ('Carlotta', '562'), ('Carly', '67459'), ('Carmen', '8174'), ('Carmen Raluca', '1077'), ('Carol', '14213'), ('Carolin', '9093'), ('Carolina', '36889'), ('Carolina Meligeni Rodrigues', '3627'), ('Caroline', '2076949'), ('Caroline B', '111'), ('Carolyn', '72'), ('Carson', '289'), ('Casey', '202697'), ('Catalina', '250056'), ('Catherine', '4987'), ('Catherine Cartan', '45884'), ('Caty', '22'), ('Cecilia', '11954'), ('Cecilie Lundgaard', '95'), ('Celine', '18824'), ('Cemre', '958'), ('Chalena', '4914'), ('Chanel', '62861'), ('Chanelle', '275364'), ('Chang', '26585'), ('Chanikarn', '39'), ('Chantal', '15001'), ('Chantelle', '187'), ('Chaoyi', '15'), ('Charlene', '5683'), ('Charlotte', '4356'), ('Chayenne', '20132'), ('Chelsea', '5'), ('Chelsey', '6777'), ('Chen', '26779'), ('Chengyiyi', '277'), ('Chi Chi', '49122'), ('Chi Fan', '667'), ('Chia Hsien', '679'), ('Chia Jung', '33301'), ('Chiaki', '42773'), ('Chiara', '6159'), ('Chieh Yu', '34796'), ('Chihiro', '15401'), ('Chin Wei', '70504'), ('Chinami', '13141'), ('Ching Wen', '7975'), ('Chiraz', '1726'), ('Chisa', '358'), ('Chloe', '15190'), ('Chompoothip', '276'), ('Christie', '24'), ('Christina', '310215'), ('Christine', '2438'), ('Chun Mei', '12519'), ('Chun Yan', '3374'), ('Cindy', '31620'), ('Claire', '141876'), ('Clara', '116'), ('Claudia', '32581'), ('Claudia Antonia', '1227'), ('Claudia Gianina', '934'), ('Claudine', '106762'), ('Clelia', '2221'), ('Clemence', '1622'), ('Clementina Eugenia', '538'), ('Clothilde', '12304'), ('Coco', '235721'), ('Colomba', '129'), ('Conny', '52274'), ('Constance', '25166'), ('Constanza', '907'), ('Constanze', '18'), ('Corina', '1002'), ('Corinna', '102260'), ('Cornelia', '4053'), ('Cory Ann', '20869'), ('Costanza', '1236'), ('Cristiana', '7486'), ('Cristina', '59412'), ('Cristina Andreea', '75414'), ('Cristina Madalina', '317'), ('Csilla', '6256'), ('Cynthia', '1034'), ('Da Hye', '1417'), ('Dabin', '1261'), ('Dagmara', '160'), ('Daiana', '8589'), ('Dajana', '150'), ('Dalia', '8939'), ('Dalila', '48857'), ('Dalma', '15935'), ('Damilola', '0'), ('Damini', '12'), ('Damira', '30'), ('Dan Ni', '639'), ('Dana', '3121'), ('Daneika', '1607'), ('Danica', '17597'), ('Daniela', '1165205'), ('Daniella', '16663'), ('Danielle', '40823'), ('Danielle Rose', '8507'), ('Danijela', '545'), ('Danka', '87958'), ('Daphne', '33'), ('Daria', '170617'), ('Darija', '41925'), ('Dariya', '857'), ('Darya', '163036'), ('Dasha', '1923'), ('Dayana', '5619'), ('Dea', '7027'), ('Deborah', '7605'), ('Deeon', '141'), ('Dejana', '9846'), ('Demi', '1192'), ('Denisa', '65522'), ('Denise', '3298'), ('Denise Antonela', '168'), ('Deniz', '23620'), ('Deria', '215'), ('Desirae', '354'), ('Desiree', '709'), ('Despina', '19065'), ('Despoina', '3942'), ('Destanee', '9227'), ('Dewi', '134'), ('Dhruthi', '2738'), ('Di', '9780'), ('Dia', '79958'), ('Diana', '119279'), ('Diana Maria', '99'), ('Dianne', '6369'), ('Dijana', '7353'), ('Dilara', '85'), ('Dina', '149'), ('Dinah', '67017'), ('Doga Selen', '117'), ('Domenica', '1614'), ('Dominika', '918746'), ('Dominique', '455'), ('Donika', '164'), ('Donna', '114098'), ('Dorien', '109'), ('Doroteja', '23976'), ('Draginja', '392'), ('Dunja', '4703'), ('Ebony', '713'), ('Eden', '1978'), ('Edina', '249446'), ('Eduarda', '11216'), ('Eetee', '2446'), ('Ege', '50'), ('Ekaterina', '1005319'), ('Ekaterine', '26897'), ('Elaine', '103'), ('Eleanor', '2287'), ('Elena', '1247887'), ('Elena Gabriela', '7772'), ('Elena Teodora', '6547'), ('Eleni', '439179'), ('Eleonora', '405'), ('Eleonore', '567'), ('Eliessa', '882'), ('Elina', '314747'), ('Elisabeth', '4709'), ('Elise', '43779'), ('Elitsa', '87263'), ('Elixane', '18211'), ('Eliza', '480'), ('Elizabeta', '536'), ('Elizabeth', '20368'), ('Elizabeth Anita Alexandria', '1103'), ('Elizaveta', '62977'), ('Elizaveta Anna', '636'), ('Elke', '960'), ('Ella', '526'), ('Ellen', '13761'), ('Ellie', '8079'), ('Elodie', '90'), ('Elyne', '12554'), ('Ema', '11218'), ('Emelyn', '12728'), ('Emi', '3880'), ('Emilia', '43'), ('Emiliana', '1258'), ('Emilie', '1440'), ('Emilija', '24'), ('Emiliya', '541'), ('Emily', '52889'), ('Emily J', '964'), ('Emina', '3029'), ('Emma', '85022'), ('Emma Christine', '65'), ('Emmanuelle', '1609'), ('En Pei', '52'), ('Ena', '823'), ('Eri', '34570'), ('Erica', '472'), ('Erika', '165477'), ('Erin', '5356'), ('Erina', '1225'), ('Esen', '69'), ('Estela', '376'), ('Estelle', '39989'), ('Ester', '3908'), ('Estrella', '126811'), ('Etsuko', '7147'), ('Eudice Wong', '976'), ('Eugenia', '36'), ('Eugenie', '204801'), ('Eugeniya', '20989'), ('Eva', '320083'), ('Eva Marie', '41'), ('Eveliina', '744'), ('Evelyn', '27011'), ('Evgenia', '59775'), ('Evgeniya', '206981'), ('Fang Ying', '7755'), ('Fangzhou', '33388'), ('Fanny', '11260'), ('Farah', '167'), ('Fatima', '10865'), ('Fatimah', '898'), ('Fatma', '21261'), ('Fatyha', '80'), ('Federica', '56817'), ('Federica Joe', '44'), ('Fernanda', '17587'), ('Ferny', '78'), ('Fiona', '18219'), ('Flavia', '1011058'), ('Florencia', '89361'), ('Frances', '359'), ('Francesca', '1306087'), ('Francisca', '157'), ('Francoise', '21685'), ('Franziska', '994'), ('Frederikke', '9'), ('Freya', '6525'), ('Gabriela', '102623'), ('Gabriela Nicole', '468'), ('Gabriella', '6179'), ('Gabrielle Faith', '1093'), ('Gaelle', '1000'), ('Gaia', '7998'), ('Gail', '38651'), ('Galina', '302957'), ('Ganna', '30136'), ('Garbine', '412872'), ('Gebriela', '143'), ('Genevieve', '440'), ('Georgia', '9600'), ('Georgia Andreea', '1848'), ('Georgiana', '48'), ('Georgina', '11569'), ('Ghislaine', '290'), ('Giada', '677'), ('Gioia', '31741'), ('Giorgia', '2484'), ('Giorgie', '13'), ('Giovanna', '289'), ('Giulia', '106520'), ('Giuliana', '2935'), ('Gloria', '1297'), ('Gozal', '2864'), ('Grace', '70613'), ('Gracia', '7999'), ('Greetje', '6168'), ('Greta', '240195'), ('Guadalupe', '14277'), ('Guillermina', '576'), ('Guiomar', '687'), ('Gulben', '410'), ('Gulchekhra', '18'), ('Gulnaz', '39'), ('Guzal', '775'), ('Gyulnara', '238'), ('Habiba', '811'), ('Hae Sung', '8180'), ('Haine', '294'), ('Hana', '413'), ('Hanna', '2782'), ('Hanyu', '4643'), ('Hao Chen', '9631'), ('Hao Ching', '224'), ('Harmony', '5944'), ('Harriet', '8608'), ('Haruka', '3633'), ('Haruna', '1873'), ('Hayley', '1679'), ('Hazal', '78'), ('Heather', '202780'), ('Heidi', '88542'), ('Helen', '1039'), ('Helene', '3928'), ('Hikari', '122'), ('Hilda', '10191'), ('Himari', '3'), ('Hiroko', '27580'), ('Hirono', '4368'), ('Ho Ching', '2371'), ('Hollie', '24'), ('Hongrui', '1063'), ('Hortencia', '98'), ('Hsin Yuan', '120'), ('Hua Chen', '7367'), ('Huijie', '118'), ('Hulya', '7797'), ('Hye Min', '1222'), ('Hyojung', '870'), ('Hyun Hui', '8301'), ('I Hsuan', '511'), ('Iana', '395'), ('Ida', '467'), ('Idia', '45'), ('Iga', '916'), ('Ilay', '52'), ('Ilka', '1142'), ('Ilona', '26950'), ('Ilze', '1527'), ('Imane Maelle', '1676'), ('Ina', '292'), ('Inci', '406'), ('India', '762'), ('Indire', '12633'), ('Indy', '17382'), ('Ineke', '1358'), ('Ines', '40410'), ('Inger', '221'), ('Ingrid', '3471'), ('Ingrid Alexandra', '4766'), ('Ingrid Esperanza', '10133'), ('Intissar', '33'), ('Ioana', '1225'), ('Ioana Diana', '2403'), ('Ioana Loredana', '5425'), ('Ionela Andreea', '6948'), ('Ipek', '39352'), ('Irena', '88369'), ('Irene', '3133'), ('Irina', '299698'), ('Irina Camelia', '293366'), ('Irina Maria', '13843'), ('Iris', '4743'), ('Iryna', '87844'), ('Isabel', '6688'), ('Isabela', '714'), ('Isabella', '83476'), ('Isabelle', '4777'), ('Iulia Maria', '74'), ('Iva', '10322'), ('Ivana', '100848'), ('Ivania', '2094'), ('Ivanka', '291'), ('Iveta', '443695'), ('Ivette', '543'), ('Ivone', '253'), ('Ivonne', '13010'), ('Jacqueline', '27462'), ('Jada', '64'), ('Jade', '26209'), ('Jaeda', '1375'), ('Jaimee', '5007'), ('Jaimy Gayle', '24'), ('Jainy', '761'), ('Jamie', '190997'), ('Jamilya', '18'), ('Jan', '10947'), ('Jana', '268372'), ('Janette', '143422'), ('Janina', '12525'), ('Janja', '72'), ('Janneke', '861'), ('Jaqueline Adina', '5416'), ('Jara', '464'), ('Jarmila', '333150'), ('Jasmin', '34453'), ('Jasmina', '43862'), ('Jasmine', '14865'), ('Jasmine Amber', '142'), ('Jawairiah', '822'), ('Jazmin', '908'), ('Jazzamay', '628'), ('Jeannine', '3426'), ('Jelena', '2515436'), ('Jennifer', '81222'), ('Jenny', '1002'), ('Jesika', '17819'), ('Jessica', '154599'), ('Jessika', '4122'), ('Jessy', '923'), ('Ji Hee', '7179'), ('Ji Young', '8592'), ('Jia', '52'), ('Jia Jing', '48117'), ('Jia Qi', '4612'), ('Jiahui', '1553'), ('Jiakang', '15'), ('Jiatian', '100'), ('Jiaxi', '3002'), ('Jiaxue', '96'), ('Jie', '610820'), ('Jil Belen', '13978'), ('Jil Nora', '611'), ('Jill', '359013'), ('Jillian', '1991'), ('Jin', '15'), ('Jin A', '46355'), ('Jin Ju', '414'), ('Jing Jing', '68925'), ('Joana', '1955'), ('Joanna', '472'), ('Joanne', '15'), ('Jodie Anna', '355'), ('Johana', '40'), ('Johanna', '553107'), ('Jordana', '1092'), ('Josepha', '2710'), ('Josephine', '4980'), ('Josie', '804'), ('Jovana', '39270'), ('Ju Eun', '3453'), ('Judith', '3'), ('Jule', '63'), ('Julia', '891796'), ('Julia Mansano', '21'), ('Juliana', '414'), ('Juliana Rocha', '129'), ('Julie', '156531'), ('Julieta Lara', '4093'), ('Julita', '286'), ('Julyette Maria Josephine', '1446'), ('June', '114'), ('Junri', '128183'), ('Justina', '36'), ('Justine', '39418'), ('Justyna', '30304'), ('Kady', '467'), ('Kai Chen', '172004'), ('Kai Lin', '37817'), ('Kaia', '625836'), ('Kaitlin', '416'), ('Kaitlyn', '3905'), ('Kaja', '1176'), ('Kajsa', '2280'), ('Kamila', '12906'), ('Kamilla', '249'), ('Kamonwan', '5866'), ('Kana', '1536'), ('Kanae', '20142'), ('Kanako', '229'), ('Kanami', '3724'), ('Kanika', '919'), ('Kaori', '8406'), ('Karen', '32169'), ('Kariann', '85'), ('Karin', '254520'), ('Karina', '9355'), ('Karina Ildor', '5493'), ('Karina Kristina', '410'), ('Karine', '1936'), ('Karis', '1003'), ('Karla', '3127'), ('Karman', '3193'), ('Karola Patricia', '776'), ('Karolayne', '465'), ('Karolina', '512490'), ('Karoline', '910'), ('Karyn', '330'), ('Kassandra', '704'), ('Katalin', '112562'), ('Katarina', '444303'), ('Katarzyna', '93730'), ('Kate', '34'), ('Katerina', '160945'), ('Kateryna', '435038'), ('Katharina', '24595'), ('Katharine', '363'), ('Katherine', '7843'), ('Katherine Gabriela', '1894'), ('Kathinka', '15970'), ('Kathrin', '141281'), ('Katie', '30035'), ('Katrine Isabel', '308'), ('Katy', '11572'), ('Katya', '515'), ('Katyarina', '97'), ('Kayla', '13697'), ('Kaylah', '237'), ('Kazusa', '10107'), ('Kei', '294'), ('Kelia', '324'), ('Kelly', '4705'), ('Kelly S', '5880'), ('Kelsey', '410'), ('Kennedy', '653'), ('Keren', '24062'), ('Keri', '894'), ('Kerstin', '942'), ('Khristina', '3748'), ('Ki Ryang', '86'), ('Kiki', '214121'), ('Kim', '4580'), ('Kim Alice', '12388'), ('Kimberley', '5393'), ('Kimberly', '4831'), ('Kimika', '272'), ('Kimiko', '270102'), ('Kinnie', '15102'), ('Kirsten', '383077'), ('Kirsten Andrea', '462'), ('Klaartje', '5818'), ('Klara', '568191'), ('Klaudia', '4809'), ('Komola', '701'), ('Korina', '21417'), ('Kotomi', '4962'), ('Krista', '17577'), ('Kristie', '34647'), ('Kristina', '601693'), ('Kristina N', '555'), ('Kristy', '1899'), ('Kristyna', '148728'), ('Ksenia', '371140'), ('Kseniia', '298'), ('Ksenija', '625'), ('Kumiko', '56212'), ('Kurumi', '177170'), ('Kveta', '210101'), ('Kwan Yau', '403'), ('Kyle', '3200'), ('Kylie', '1236'), ('Kyoka', '9036'), ('Kyra', '102022'), ('Kyung Mi', '26059'), ('Laetitia', '6078'), ('Laili', '595'), ('Lamis', '456'), ('Lara', '177458'), ('Larikah', '255'), ('Laura', '578964'), ('Laura D', '281'), ('Laura Ioana', '33822'), ('Laura Sofia', '97'), ('Lauren', '244807'), ('Lauryn', '207'), ('Lavinia', '23897'), ('Laylo', '39'), ('Layne', '22'), ('Lea', '4197'), ('Leah', '152'), ('Lee', '733'), ('Lena', '27997'), ('Lena Marie', '14942'), ('Lenka', '164900'), ('Leolia', '750'), ('Leonie', '672'), ('Lesedi Sheya', '286'), ('Lesia', '225987'), ('Lesley', '42925'), ('Leslie', '173'), ('Leticia', '45115'), ('Leticia Garcia', '87'), ('Leylah Annie', '48'), ('Li', '1696'), ('Liana Gabriela', '59997'), ('Libby', '2362'), ('Libi', '522'), ('Lidia', '169'), ('Lidziya', '6809'), ('Liezel', '39782'), ('Liga', '23411'), ('Lilla', '1960'), ('Lin', '40341'), ('Lina', '91117'), ('Linda', '4216'), ('Lindsay', '142454'), ('Lindsey', '500'), ('Ling', '64525'), ('Liniques', '72'), ('Linnea', '697'), ('Lisa', '594217'), ('Lisa Maria', '7898'), ('Lisa Marie', '1583'), ('Lisanne', '8284'), ('Liubov', '2662'), ('Livia', '128'), ('Liz Tatiane', '2216'), ('Lizaveta', '135'), ('Lizette', '11623'), ('Lorenza', '33'), ('Lorraine M', '40'), ('Lou', '10167'), ('Loudmilla', '6'), ('Louisa', '50700'), ('Louise', '1633'), ('Lourdes', '371035'), ('Lu', '3445'), ('Luca', '1013'), ('Lucia', '17185'), ('Luciana', '8305'), ('Lucie', '1108372'), ('Lucrezia', '1589'), ('Lucy', '6542'), ('Ludmila', '645'), ('Ludmilla', '1187'), ('Luisa', '1671'), ('Luisa Marie', '1822'), ('Luksika', '77519'), ('Lulu', '304'), ('Luna', '15'), ('Lusine', '377'), ('Lutfiye', '876'), ('Lyann', '30'), ('Lynn', '837'), ('Lyudmyla', '54172'), ('Macall', '12379'), ('Macarena', '2133'), ('Madalina', '62938'), ('Maddison', '2434'), ('Madeleine', '715'), ('Madeline', '147'), ('Madina', '6'), ('Madison', '476768'), ('Madrie', '2266'), ('Maegan', '525'), ('Mafalda', '163'), ('Maftuna', '54'), ('Magali', '1917'), ('Magalie', '511'), ('Magda', '103659'), ('Magdalena', '401857'), ('Magy', '756'), ('Mahak', '154'), ('Mahitha', '395'), ('Mai', '19173'), ('Maia', '1235'), ('Maia A', '12'), ('Maiko', '11320'), ('Maileen', '83'), ('Mailen', '39523'), ('Maja', '1067'), ('Makiho', '5592'), ('Makoto', '14129'), ('Malene', '316'), ('Malika', '323'), ('Malin', '2489'), ('Mallaurie', '688'), ('Mallory', '44497'), ('Malou', '3073'), ('Mami', '96'), ('Man Ying Maggie', '102'), ('Mana', '9593'), ('Mananchaya', '15'), ('Manca', '2070'), ('Mandy', '193767'), ('Manisha', '3112'), ('Manon', '14608'), ('Manya', '93'), ('Mara', '702'), ('Marcela', '16790'), ('Marcela Guimaraes', '683'), ('Marcelina', '33'), ('Marcella', '13037'), ('Margalita', '99836'), ('Margarida', '1997'), ('Margarita', '78265'), ('Margaux', '905'), ('Margot', '4787'), ('Mari', '38086'), ('Maria', '3613355'), ('Maria Agustina', '185'), ('Maria Andrea', '323'), ('Maria Camila', '148'), ('Maria Constanza De Las Mercedes', '1892'), ('Maria Del Rosario', '296'), ('Maria Elena', '296736'), ('Maria Fernanda', '141257'), ('Maria Jesus', '294'), ('Maria Joao', '72682'), ('Maria Jose', '413759'), ('Maria Lourdes', '156'), ('Maria Paulina', '1388'), ('Maria Teresa', '106375'), ('Mariam', '4060'), ('Mariana', '201258'), ('Marianna', '10178'), ('Marianne', '1090'), ('Mariaryeni', '226'), ('Marie', '25496'), ('Marie Eve', '114687'), ('Mariia', '206'), ('Marija', '20481'), ('Marijana', '3'), ('Marina', '362372'), ('Marine', '4314'), ('Marion', '1272285'), ('Mariona', '4'), ('Marisa', '1026'), ('Mariya', '154484'), ('Marketa', '18286'), ('Marlies', '1624'), ('Marrit', '1339'), ('Marta', '267679'), ('Marta Huqi', '778'), ('Martha', '153'), ('Martina', '109192'), ('Mary', '653'), ('Mary Ann', '102'), ('Maryna', '85425'), ('Masa', '117472'), ('Mathilde', '245139'), ('Matilda', '3466'), ('Maud', '210'), ('Maureen', '219'), ('Maurien', '138'), ('Maxine', '390'), ('May', '225'), ('Maya', '23668'), ('Mayar', '1788'), ('Mayo', '32445'), ('Mayya', '9064'), ('Megan', '13254'), ('Megumi', '407'), ('Mei Xu', '40'), ('Meiling', '417'), ('Meiqi', '96'), ('Melanie', '385636'), ('Melany Solange', '97'), ('Melina', '2609'), ('Melinda', '290299'), ('Melis', '20196'), ('Melisa', '340'), ('Melissa', '200'), ('Melissa Ishuan', '171'), ('Meng Ning', '542'), ('Mercedes', '48'), ('Merel', '101'), ('Meritxell', '284'), ('Mervana', '102693'), ('Mi', '24569'), ('Mi Jeong', '176'), ('Mi Rae', '1858'), ('Mi Zhuoma', '72'), ('Mia Nicole', '1098'), ('Micaela', '230'), ('Michaela', '76586'), ('Michaella', '242619'), ('Michela', '90'), ('Michele Alexandra', '596'), ('Michelle', '160164'), ('Michika', '3657'), ('Mihaela', '69242'), ('Mihaela Lorena', '15'), ('Miharu', '21205'), ('Mihika', '427'), ('Mihoki', '201'), ('Miki', '24542'), ('Mila', '107'), ('Milagros', '42'), ('Milana', '14123'), ('Milena', '279'), ('Milica', '63'), ('Min', '1884'), ('Min Hwa', '9938'), ('Minami', '96'), ('Mira', '1626'), ('Mirabelle', '1977'), ('Miranda', '180'), ('Miriam', '3825'), ('Miriam Bianca', '1458'), ('Miriana', '1180'), ('Mirjam', '272'), ('Mirjana', '331434'), ('Misa', '55981'), ('Misaki', '203782'), ('Mitsumi', '309'), ('Miyabi', '22840'), ('Miyu', '23968'), ('Mizuno', '2927'), ('Molly', '565'), ('Momoko', '2061'), ('Mona', '282445'), ('Monica', '587309'), ('Monika', '1240'), ('Monique', '114104'), ('Montserrat', '23564'), ('Morgane', '6906'), ('Moulika', '15'), ('Mouna', '12'), ('Moyuka', '32'), ('Muazzez', '6'), ('Muge', '162'), ('Myrtille', '43550'), ('Na', '1358928'), ('Na Lae', '26185'), ('Na Ri', '19223'), ('Nadezda', '5027'), ('Nadia', '1401125'), ('Nadiya', '56596'), ('Nadja', '2661'), ('Nagi', '1535'), ('Naiktha', '4380'), ('Naima', '440'), ('Nam Yeon', '259'), ('Nan Nan', '3094'), ('Nanuli', '16494'), ('Nao', '59671'), ('Naoko', '857'), ('Naomi', '163239'), ('Napatsakorn', '1945'), ('Nastassia', '72'), ('Nastassja', '65152'), ('Nastja', '29250'), ('Natalia', '97400'), ('Natalie', '120995'), ('Natalija', '13686'), ('Nataliya', '33'), ('Natasa', '14212'), ('Natasha', '15365'), ('Natela', '16303'), ('Natella', '649'), ('Nathalia', '28098'), ('Nathaly', '13241'), ('Natia', '2526'), ('Natsumi', '37981'), ('Nattawadee', '224'), ('Naz', '251'), ('Nazari', '980'), ('Neda', '9536'), ('Nelise', '142'), ('Nermeen', '279'), ('Nevena', '170'), ('Nicha', '30972'), ('Nicky', '2531'), ('Nicola', '33550'), ('Nicole', '447434'), ('Nicoleta Catalina', '8146'), ('Nicolette', '9627'), ('Nidhi', '5425'), ('Nigina', '47651'), ('Nika', '9120'), ('Nikita', '22'), ('Nikki', '614'), ('Nikol', '491'), ('Nikola', '78513'), ('Nina', '201173'), ('Nina Isabella', '115'), ('Nives', '2706'), ('Noel', '1558'), ('Noelia', '2025'), ('Noelle', '1795'), ('Nonna', '134'), ('Noppawan', '73589'), ('Nora', '1082'), ('Nour', '760'), ('Nozomi', '1333'), ('Nudnida', '63013'), ('Nungnadda', '24523'), ('Nuria', '259116'), ('Oana', '1096'), ('Oana Georgeta', '4294'), ('Oceane', '56853'), ('Ofri', '5372'), ('Oksana', '58279'), ('Ola', '3497'), ('Olawaseun', '2'), ('Olaya', '40'), ('Oleksandra', '8700'), ('Olena', '484'), ('Olesya', '3811'), ('Olga', '773929'), ('Olivia', '119756'), ('Oliwia', '363'), ('Ons', '56242'), ('Ornella', '2133'), ('Oyku', '382'), ('Paige Mary', '147'), ('Pamela', '241'), ('Panna', '1446'), ('Paola', '403127'), ('Parris', '209'), ('Patcharin', '1188'), ('Patricia', '197904'), ('Patricia Maria', '43755'), ('Patrycja', '17514'), ('Patty', '7323'), ('Paula', '172431'), ('Paula Andrea', '269'), ('Paula Catalina', '3714'), ('Paula Cristina', '37384'), ('Paulina', '3208'), ('Pauline', '313187'), ('Pavla', '4128'), ('Peangtarn', '26280'), ('Peggy', '1016'), ('Pei Chi', '8900'), ('Pei Hsuan', '24'), ('Pei Ju', '181'), ('Pemra', '60908'), ('Pernilla', '6573'), ('Petia', '1832'), ('Petra', '1958404'), ('Phenomena', '3'), ('Phillis', '664'), ('Pia', '10859'), ('Piia', '21340'), ('Pilar', '6404'), ('Pippa', '243'), ('Plobrung', '934'), ('Polina', '76747'), ('Polona', '325216'), ('Poojashree', '13006'), ('Pranjala', '1214'), ('Prarthana G', '5687'), ('Prerna', '9318'), ('Priscila', '510'), ('Priscilla', '8203'), ('Qiang', '116857'), ('Qianhui', '683'), ('Qianqian', '641'), ('Qiu Yu', '2034'), ('Quinn', '646'), ('Quirine', '22978'), ('Rachael', '2592'), ('Rachel', '469'), ('Radina', '699'), ('Rafaela', '228'), ('Ralina', '40'), ('Raluca', '148701'), ('Raluca Elena', '9202'), ('Raluca Georgiana', '4258'), ('Ramu', '443'), ('Ramya', '161'), ('Ran', '14709'), ('Rana', '9'), ('Raquel', '30401'), ('Rashmi', '741'), ('Ratnika', '957'), ('Raveena', '5387'), ('Rebeca', '168'), ('Rebecca', '165013'), ('Rebeka', '5803'), ('Regina', '122331'), ('Reina', '64'), ('Reka Luca', '66271'), ('Remi', '38116'), ('Renata', '201856'), ('Ria', '5566'), ('Rianna', '984'), ('Richel', '84184'), ('Rika', '141257'), ('Riko', '23195'), ('Rio', '556'), ('Risa', '62252'), ('Rishika', '8448'), ('Rita', '1401'), ('Riya', '2634'), ('Roberta', '809611'), ('Robin', '12295'), ('Robyn', '1103'), ('Rocio', '16886'), ('Romana', '29214'), ('Romana Caroline', '17020'), ('Romina', '253471'), ('Romy', '911'), ('Rona', '308'), ('Ronit', '3165'), ('Ronke', '49'), ('Roosh', '28'), ('Rosa', '111'), ('Rosalia', '803'), ('Rosalie', '880'), ('Rosie', '336'), ('Roxane', '38793'), ('Rui', '24'), ('Rushmi', '27452'), ('Rutuja', '3642'), ('Ryann', '597'), ('Saana', '195'), ('Sabastiani', '780'), ('Sabina', '49784'), ('Sabina Elena', '27'), ('Sabine', '590911'), ('Sabrina', '6810'), ('Sacha', '78204'), ('Sachia', '49767'), ('Sachie', '42676'), ('Sadafmoh', '2275'), ('Sai Samhitha', '1034'), ('Saisai', '113359'), ('Sakiko', '9338'), ('Sally', '53480'), ('Salma', '66'), ('Samantha', '1437656'), ('Samira', '2020'), ('Sanae', '354'), ('Sanaz', '17975'), ('Sandra', '266197'), ('Sandy', '224'), ('Sang Hee', '1277'), ('Sania', '272889'), ('Sara', '914981'), ('Sarah', '78461'), ('Sarah Beth', '1270'), ('Sarah Rebecca', '13064'), ('Sarahi', '461'), ('Sarai Delfina', '148'), ('Saray', '2061'), ('Sari', '464'), ('Sarlota', '27'), ('Sarvinoz', '178'), ('Sasa', '316'), ('Saska', '2641'), ('Satsuki', '906'), ('Savannah', '70'), ('Schena', '148'), ('Se Hyun', '143'), ('Se Jin', '681'), ('Sean', '75'), ('Seda', '1469'), ('Seira', '144'), ('Selin', '169'), ('Seo Kyung', '6564'), ('Seone', '1312'), ('Serena', '4232828'), ('Sesil', '208108'), ('Seung Yeon', '6650'), ('Severine', '192296'), ('Shahar', '662926'), ('Shakhlo', '2122'), ('Shakhnoza', '198'), ('Shangqing', '111'), ('Shanshan', '2378'), ('Shao Yuan', '1363'), ('Sharmada', '4106'), ('Sharon', '117825'), ('Sharon Sanchana', '522'), ('Shelby', '102140'), ('Shelly', '142'), ('Sheng Nan', '53610'), ('Sherazad', '22977'), ('Sherry', '801'), ('Shiho', '39960'), ('Shilin', '9634'), ('Shiori', '18'), ('Shir', '117'), ('Shiran', '236'), ('Shivika', '4611'), ('Shou Na', '105'), ('Shreya', '6'), ('Shu Ying', '1483'), ('Shuai', '913829'), ('Shuko', '46124'), ('Shuo', '597'), ('Shuyue', '336'), ('Shweta', '3255'), ('Si Qi', '531'), ('Silvia', '221695'), ('Simona', '724638'), ('Simone', '1149'), ('Simran Kaur', '467'), ('Sina', '10360'), ('Sinead', '688'), ('Sing Le', '95'), ('Siqi', '716'), ('Sirui', '276'), ('Siyu', '87'), ('Sloane', '352458'), ('Smriti', '96'), ('Sneha', '134'), ('Snehadevi S', '2820'), ('So Jung', '47282'), ('So Ra', '18210'), ('Sofia', '484140'), ('Sofico', '336'), ('Sofie', '10539'), ('Sofiya', '18371'), ('Sofya', '9180'), ('Sohyun', '108'), ('Sonia', '480'), ('Sonja', '4499'), ('Sophia', '96'), ('Sophie', '39307'), ('Sorana', '457043'), ('Sowjanya', '2961'), ('Spurti', '159'), ('Sri Vaishnavi', '1744'), ('Stamatia', '8072'), ('Stanislava', '49412'), ('Stefana', '497'), ('Stefani', '126'), ('Stefania', '24897'), ('Stefanie', '247237'), ('Steffi', '3085'), ('Stephanie', '608309'), ('Stephanie Mariel', '1397'), ('Storm', '21152'), ('Su Jeong', '33672'), ('Su Wei', '274936'), ('Suellen', '320'), ('Sultan', '1544'), ('Sun Jung', '6591'), ('Sunae', '15'), ('Sunam', '3594'), ('Sung Hee', '29852'), ('Susan', '502'), ('Susanne', '16276'), ('Suzan', '344'), ('Suzuho', '324'), ('Suzy', '1054'), ('Svenja', '6341'), ('Svetlana', '1906587'), ('Sviatlana', '11201'), ('Sybille', '581'), ('Sylvia', '1626'), ('Sylwia', '8268'), ('Syna', '9001'), ('Szabina', '2127'), ('Tadeja', '83659'), ('Taisiya', '1050'), ('Talya', '45'), ('Tamachan', '843'), ('Tamar', '60'), ('Tamara', '54140'), ('Tamari', '304'), ('Tamarine', '594281'), ('Tamaryn', '40060'), ('Tamira', '322202'), ('Tammi', '26077'), ('Tanaporn', '764'), ('Tanya', '1229'), ('Tara', '54798'), ('Tatia', '42'), ('Tatiana', '34795'), ('Tatjana', '230262'), ('Tatsiana', '1289'), ('Tayisiya', '5051'), ('Taylor', '38850'), ('Tea', '2127'), ('Teliana', '112570'), ('Tena', '12402'), ('Teodora', '41792'), ('Tereza', '193362'), ('Terri', '18'), ('Tess', '7165'), ('Tessah', '9116'), ('Tetiana', '75337'), ('Tetyana', '43020'), ('Thai Sa Grana', '706'), ('Theo', '2249'), ('Theresa', '377'), ('Tijana', '333'), ('Timea', '612072'), ('Tina', '57585'), ('Tinatin', '476'), ('Ting Fei', '8145'), ('Ting Jr', '8676'), ('Tingting', '151'), ('Tjasa', '3361'), ('Tomoko', '7431'), ('Tori', '10630'), ('Tornado Alicia', '1864'), ('Trang', '1884'), ('Treta', '736'), ('Tsvetana', '456422'), ('Tyra', '4543'), ('Ulrikke', '27118'), ('Ulyana', '2400'), ('Urszula', '275255'), ('Ushna', '413'), ('Usue Maitane', '7874'), ('Valentina', '338'), ('Valentine', '9926'), ('Valentini', '15198'), ('Valentyna', '47854'), ('Valeria', '159155'), ('Valerie', '6146'), ('Valeriya', '16621'), ('Vanda', '10087'), ('Vanesa', '30669'), ('Vanessa', '71645'), ('Vania', '299530'), ('Vaniya', '255'), ('Vanja', '291'), ('Varatchaya', '54340'), ('Varunya', '3623'), ('Varvara', '401409'), ('Vasilisa', '42527'), ('Vaszilisza', '3763'), ('Vendula', '2221'), ('Venus', '2875425'), ('Vera', '1929137'), ('Verena', '3018'), ('Veronica', '84543'), ('Veronica M', '1678'), ('Veronika', '73192'), ('Vesna', '169500'), ('Vicky', '77'), ('Victoire', '454'), ('Victoria', '2142854'), ('Victoria Ariadna', '106'), ('Viktoria', '30191'), ('Viktoriia', '90'), ('Viktorija', '79511'), ('Viktoriya', '26226'), ('Viktoryia', '1987'), ('Vilma Y', '27'), ('Vincenza', '105'), ('Vinciane', '37'), ('Violetta', '298'), ('Virginie', '519208'), ('Vishesh', '71'), ('Vita', '64'), ('Vitalia', '106927'), ('Vivian', '36714'), ('Vivien', '13041'), ('Vivienne', '8918'), ('Vlada', '22578'), ('Vladica', '997'), ('Vladimira', '6470'), ('Vladislava', '1254'), ('Vladyslava', '2570'), ('Vojislava', '18781'), ('Voni', '1036'), ('Wan Ting', '11653'), ('Wan Yi', '42'), ('Warona', '9'), ('Wen Hsin', '40633'), ('Wen Ling', '120'), ('Wendy Qi Wen', '613'), ('Weronika Jasmina', '179'), ('Whitney', '5604'), ('Wiktoria', '363'), ('Wing Yau Venise', '11694'), ('Wushuang', '879'), ('Xenia', '14578'), ('Xi Yao', '1445'), ('Xiao', '4789'), ('Xiaodi', '5057'), ('Xiaorong', '717'), ('Xiaoxi', '1352'), ('Ximena', '19495'), ('Xin', '8744'), ('Xin Yu', '187'), ('Xinyu', '10705'), ('Xinyun', '109256'), ('Xiyu', '315'), ('Xu Liu', '4535'), ('Ya', '24'), ('Ya Hsuan', '17078'), ('Yafan', '39687'), ('Yan', '4196'), ('Yana', '39102'), ('Yang', '73'), ('Yanina', '602453'), ('Yanni', '275'), ('Yarden', '32'), ('Yaroslava', '404915'), ('Yasmin', '11251'), ('Yasmina', '27'), ('Yasmine', '1748'), ('Yasmyn', '71'), ('Yawna', '648'), ('Yayuk', '128509'), ('Ye Ra', '47867'), ('Ye Xin', '281'), ('Yekaterina', '376'), ('Yelena', '1856'), ('Yeong Won', '966'), ('Yevgeniya', '6288'), ('Yi', '19989'), ('Yi Fan', '60646'), ('Yi Jing', '22443'), ('Yi Miao', '61839'), ('Yidi', '136'), ('Yihong', '24'), ('Yijia', '366'), ('Ying', '3783'), ('Ying Ying', '107595'), ('Yixuan', '1380'), ('Ylena', '1546'), ('Ylona Georgiana', '1453'), ('Yoko', '285'), ('Yolande', '1381'), ('Yoo Ri', '182'), ('Yoon Young', '3592'), ('Yoshimi', '677'), ('Yosr', '75'), ('You Na', '242'), ('Ysaline', '27804'), ('Yu Jin', '452'), ('Yu Tong', '9'), ('Yuan', '281'), ('Yuanyi', '772'), ('Yue', '1259'), ('Yue Yue', '21360'), ('Yuenu', '682'), ('Yujia', '184'), ('Yuka', '12474'), ('Yukako', '84'), ('Yuki', '505'), ('Yuki Kristina', '2191'), ('Yukina', '998'), ('Yukun', '1828'), ('Yulia', '155143'), ('Yuliana', '15248'), ('Yuliya', '206375'), ('Yumi', '20269'), ('Yung Jan', '229391'), ('Yuqi', '559'), ('Yurika', '101816'), ('Yuriko', '1728'), ('Yurina', '12693'), ('Yuuki', '15071'), ('Yuval', '45'), ('Yuxuan', '24279'), ('Yvonne', '254491'), ('Zaineb', '87'), ('Zalina', '2052'), ('Zarah', '3809'), ('Zarina', '123243'), ('Zeel', '702'), ('Zeynep  Sena', '21'), ('Zhanlan', '2166'), ('Zhaoxuan', '20236'), ('Zhibek', '7'), ('Zhima', '99'), ('Zhou', '30'), ('Zhuoma', '121'), ('Zi', '110290'), ('Zinovia', '74'), ('Ziyue', '1420'), ('Zoe', '2772'), ('Zoe Gwen', '2877'), ('Zsofia', '1501'), ('Zuzana', '266251'), ('Zuzanna', '2258')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id","Not match: [('0', 'Damilola'), ('100', 'Jiatian'), ('1000', 'Gaelle'), ('1002', 'Corina'), ('1002', 'Jenny'), ('1003', 'Karis'), ('1005319', 'Ekaterina'), ('100848', 'Ivana'), ('10087', 'Vanda'), ('101', 'Anca'), ('101', 'Merel'), ('10107', 'Kazusa'), ('1011058', 'Flavia'), ('1013', 'Luca'), ('10133', 'Ingrid Esperanza'), ('1016', 'Peggy'), ('10167', 'Lou'), ('1017069', 'Anna'), ('10178', 'Marianna'), ('101816', 'Yurika'), ('10191', 'Hilda'), ('102', 'Man Ying Maggie'), ('102', 'Mary Ann'), ('102022', 'Kyra'), ('102140', 'Shelby'), ('102260', 'Corinna'), ('1026', 'Marisa'), ('102623', 'Gabriela'), ('102693', 'Mervana'), ('103', 'Elaine'), ('10322', 'Iva'), ('1034', 'Cynthia'), ('1034', 'Sai Samhitha'), ('1036', 'Voni'), ('10360', 'Sina'), ('103659', 'Magda'), ('1039', 'Helen'), ('105', 'Shou Na'), ('105', 'Vincenza'), ('1050', 'Taisiya'), ('10507', 'Albina'), ('10539', 'Sofie'), ('1054', 'Suzy'), ('106', 'Victoria Ariadna'), ('10616', 'Amy'), ('1063', 'Hongrui'), ('10630', 'Tori'), ('106375', 'Maria Teresa'), ('106520', 'Giulia'), ('1067', 'Maja'), ('106762', 'Claudine'), ('106927', 'Vitalia'), ('107', 'Adrienn'), ('107', 'Mila'), ('10705', 'Xinyu'), ('10751', 'Ai'), ('107595', 'Ying Ying'), ('1077', 'Carmen Raluca'), ('107880', 'Anna Karolina'), ('108', 'Sohyun'), ('1082', 'Nora'), ('1083', 'Astra'), ('10859', 'Pia'), ('10865', 'Fatima'), ('109', 'Dorien'), ('1090', 'Marianne'), ('109192', 'Martina'), ('1092', 'Jordana'), ('109256', 'Xinyun'), ('1093', 'Gabrielle Faith'), ('10947', 'Jan'), ('1096', 'Oana'), ('1098', 'Mia Nicole'), ('110', 'Agne'), ('110290', 'Zi'), ('1103', 'Elizabeth Anita Alexandria'), ('1103', 'Robyn'), ('11032', 'Benedetta'), ('1108372', 'Lucie'), ('111', 'Caroline B'), ('111', 'Rosa'), ('111', 'Shangqing'), ('1119', 'Brittany'), ('11201', 'Sviatlana'), ('11216', 'Eduarda'), ('11218', 'Ema'), ('11251', 'Yasmin'), ('112562', 'Katalin'), ('112570', 'Teliana'), ('11260', 'Fanny'), ('11320', 'Maiko'), ('1132514', 'Angelique'), ('113359', 'Saisai'), ('11393', 'Alina'), ('114', 'June'), ('114098', 'Donna'), ('114104', 'Monique'), ('1142', 'Ilka'), ('114687', 'Marie Eve'), ('1149', 'Simone'), ('115', 'Nina Isabella'), ('1152', 'Bhuvana'), ('115293', 'Abigail'), ('11569', 'Georgina'), ('11572', 'Katy'), ('11596', 'Anja'), ('116', 'Clara'), ('11608', 'Arabela'), ('11623', 'Lizette'), ('1165205', 'Daniela'), ('11653', 'Wan Ting'), ('116548', 'Ajla'), ('116857', 'Qiang'), ('11694', 'Wing Yau Venise'), ('117', 'Doga Selen'), ('117', 'Shir'), ('11714', 'Camilla'), ('11721', 'Azra'), ('117472', 'Masa'), ('1176', 'Kaja'), ('117825', 'Sharon'), ('118', 'Huijie'), ('1180', 'Miriana'), ('1187', 'Ludmilla'), ('11873', 'Akari'), ('1188', 'Patcharin'), ('1192', 'Demi'), ('119279', 'Diana'), ('11954', 'Cecilia'), ('119756', 'Olivia'), ('119797', 'Cagla'), ('12', 'Anastasiia'), ('12', 'Brienne'), ('12', 'Damini'), ('12', 'Maia A'), ('12', 'Mouna'), ('120', 'Abiodun'), ('120', 'Hsin Yuan'), ('120', 'Wen Ling'), ('120995', 'Natalie'), ('121', 'Zhuoma'), ('1213', 'Bianka'), ('1214', 'Pranjala'), ('122', 'Hikari'), ('1222', 'Hye Min'), ('122331', 'Regina'), ('1225', 'Erina'), ('1225', 'Ioana'), ('1227', 'Claudia Antonia'), ('1229', 'Tanya'), ('12295', 'Robin'), ('123', 'Boba'), ('12304', 'Clothilde'), ('123243', 'Zarina'), ('1235', 'Anastasia Evgenyevna'), ('1235', 'Maia'), ('1236', 'Costanza'), ('1236', 'Kylie'), ('12379', 'Macall'), ('12388', 'Kim Alice'), ('1240', 'Monika'), ('12402', 'Tena'), ('12474', 'Yuka'), ('1247887', 'Elena'), ('12519', 'Chun Mei'), ('12525', 'Janina'), ('1254', 'Vladislava'), ('12554', 'Elyne'), ('1258', 'Emiliana'), ('1259', 'Yue'), ('126', 'Apichaya'), ('126', 'Stefani'), ('1261', 'Dabin'), ('12633', 'Indire'), ('126811', 'Estrella'), ('12693', 'Yurina'), ('1270', 'Sarah Beth'), ('12708', 'Aminat'), ('1272285', 'Marion'), ('12727', 'Andreea Roxana'), ('12728', 'Emelyn'), ('1277', 'Sang Hee'), ('128', 'Livia'), ('128183', 'Junri'), ('12829', 'Alexia'), ('128509', 'Yayuk'), ('1289', 'Tatsiana'), ('129', 'Colomba'), ('129', 'Juliana Rocha'), ('12906', 'Kamila'), ('1297', 'Gloria'), ('13', 'Giorgie'), ('13006', 'Poojashree'), ('13010', 'Ivonne'), ('13037', 'Marcella'), ('13041', 'Vivien'), ('1306087', 'Francesca'), ('13064', 'Sarah Rebecca'), ('1312', 'Seone'), ('13141', 'Chinami'), ('13241', 'Nathaly'), ('13254', 'Megan'), ('1333', 'Nozomi'), ('13389', 'Alexis'), ('1339', 'Marrit'), ('134', 'Dewi'), ('134', 'Nonna'), ('134', 'Sneha'), ('1344', 'Brynn'), ('135', 'Lizaveta'), ('1352', 'Xiaoxi'), ('1358', 'Ineke'), ('1358928', 'Na'), ('136', 'Camila Vital'), ('136', 'Yidi'), ('1363', 'Shao Yuan'), ('13643', 'Angelica'), ('1365', 'Andreea Amalia'), ('1367', 'Ana Victoria'), ('13686', 'Natalija'), ('13697', 'Kayla'), ('13717', 'Agnese'), ('137327', 'Belinda'), ('1375', 'Jaeda'), ('13761', 'Ellen'), ('138', 'Maurien'), ('1380', 'Yixuan'), ('1381', 'Yolande'), ('13843', 'Irina Maria'), ('138782', 'Alexa'), ('1388', 'Maria Paulina'), ('1397', 'Stephanie Mariel'), ('13978', 'Jil Belen'), ('1401', 'Rita'), ('140108', 'Aiko'), ('1401125', 'Nadia'), ('141', 'Ah'), ('141', 'Assia'), ('141', 'Deeon'), ('14123', 'Milana'), ('141257', 'Maria Fernanda'), ('141257', 'Rika'), ('141281', 'Kathrin'), ('14129', 'Makoto'), ('1417', 'Da Hye'), ('141876', 'Claire'), ('142', 'Jasmine Amber'), ('142', 'Nelise'), ('142', 'Shelly'), ('1420', 'Ziyue'), ('14212', 'Natasa'), ('14213', 'Carol'), ('1424', 'Alba'), ('142454', 'Lindsay'), ('1427', 'Anna Maria'), ('14277', 'Guadalupe'), ('143', 'Gebriela'), ('143', 'Se Hyun'), ('1433335', 'Anastasia'), ('143422', 'Janette'), ('1437656', 'Samantha'), ('144', 'Seira'), ('1440', 'Emilie'), ('1445', 'Xi Yao'), ('1446', 'Julyette Maria Josephine'), ('1446', 'Panna'), ('1453', 'Ylona Georgiana'), ('14578', 'Xenia'), ('1458', 'Miriam Bianca'), ('14608', 'Manon'), ('1465', 'Boyan'), ('1469', 'Seda'), ('147', 'Madeline'), ('147', 'Paige Mary'), ('14709', 'Ran'), ('148', 'Maria Camila'), ('148', 'Sarai Delfina'), ('148', 'Schena'), ('1483', 'Shu Ying'), ('14838', 'Aki'), ('1484', 'Andreea'), ('14865', 'Jasmine'), ('148701', 'Raluca'), ('148728', 'Kristyna'), ('149', 'Dina'), ('14942', 'Lena Marie'), ('15', 'Chaoyi'), ('15', 'Jiakang'), ('15', 'Jin'), ('15', 'Joanne'), ('15', 'Luna'), ('15', 'Mananchaya'), ('15', 'Mihaela Lorena'), ('15', 'Moulika'), ('15', 'Sunae'), ('150', 'Dajana'), ('15001', 'Chantal'), ('1501', 'Zsofia'), ('15071', 'Yuuki'), ('151', 'Tingting'), ('15102', 'Kinnie'), ('15190', 'Chloe'), ('15198', 'Valentini'), ('152', 'Leah'), ('15218', 'Caitlin'), ('15248', 'Yuliana'), ('1527', 'Ilze'), ('153', 'Martha'), ('1535', 'Nagi'), ('1536', 'Kana'), ('15365', 'Natasha'), ('154', 'Arlinda'), ('154', 'Mahak'), ('15401', 'Chihiro'), ('1544', 'Sultan'), ('154484', 'Mariya'), ('154599', 'Jessica'), ('1546', 'Ylena'), ('155', 'Alory Regina Elorriaga'), ('155143', 'Yulia'), ('1553', 'Jiahui'), ('1558', 'Noel'), ('156', 'Afroditi'), ('156', 'Maria Lourdes'), ('156531', 'Julie'), ('157', 'Amira'), ('157', 'Francisca'), ('1578', 'Alejandra'), ('158', 'Agustina Elena'), ('1583', 'Lisa Marie'), ('1589', 'Lucrezia'), ('1589674', 'Ana'), ('159', 'Amrita'), ('159', 'Andrina'), ('159', 'Spurti'), ('159155', 'Valeria'), ('15935', 'Dalma'), ('15955', 'Ana Sofia'), ('15970', 'Kathinka'), ('160', 'Anda'), ('160', 'Dagmara'), ('160164', 'Michelle'), ('1607', 'Daneika'), ('1609', 'Emmanuelle'), ('160945', 'Katerina'), ('161', 'Ramya'), ('1614', 'Domenica'), ('162', 'Muge'), ('1622', 'Clemence'), ('1624', 'Marlies'), ('1626', 'Mira'), ('1626', 'Sylvia'), ('16276', 'Susanne'), ('163', 'Mafalda'), ('16303', 'Natela'), ('163036', 'Darya'), ('163239', 'Naomi'), ('1633', 'Louise'), ('164', 'Donika'), ('164900', 'Lenka'), ('16494', 'Nanuli'), ('165013', 'Rebecca'), ('165477', 'Erika'), ('1657', 'Anette'), ('16621', 'Valeriya'), ('16663', 'Daniella'), ('166760', 'Brenda'), ('167', 'Farah'), ('1671', 'Luisa'), ('1676', 'Imane Maelle'), ('1678', 'Veronica M'), ('1679', 'Hayley'), ('16790', 'Marcela'), ('168', 'Denise Antonela'), ('168', 'Rebeca'), ('16886', 'Rocio'), ('169', 'Lidia'), ('169', 'Selin'), ('169371', 'Annika'), ('169500', 'Vesna'), ('1696', 'Li'), ('170', 'Nevena'), ('17020', 'Romana Caroline'), ('170617', 'Daria'), ('17078', 'Ya Hsuan'), ('171', 'Melissa Ishuan'), ('17185', 'Lucia'), ('172', 'Annie'), ('172004', 'Kai Chen'), ('172431', 'Paula'), ('1726', 'Chiraz'), ('1728', 'Yuriko'), ('173', 'Leslie'), ('17382', 'Indy'), ('1744', 'Sri Vaishnavi'), ('1748', 'Yasmine'), ('17514', 'Patrycja'), ('17577', 'Krista'), ('17587', 'Fernanda'), ('17597', 'Danica'), ('176', 'Mi Jeong'), ('177170', 'Kurumi'), ('177458', 'Lara'), ('178', 'Sarvinoz'), ('17819', 'Jesika'), ('1788', 'Mayar'), ('179', 'Weronika Jasmina'), ('1795', 'Noelle'), ('17967', 'Anhelina'), ('17975', 'Sanaz'), ('18', 'Constanze'), ('18', 'Gulchekhra'), ('18', 'Jamilya'), ('18', 'Shiori'), ('18', 'Terri'), ('180', 'Miranda'), ('1801033', 'Agnieszka'), ('181', 'Pei Ju'), ('182', 'Yoo Ri'), ('18210', 'So Ra'), ('18211', 'Elixane'), ('18219', 'Fiona'), ('1822', 'Luisa Marie'), ('1828', 'Yukun'), ('18286', 'Marketa'), ('1832', 'Petia'), ('18371', 'Sofiya'), ('184', 'Yujia'), ('1848', 'Georgia Andreea'), ('185', 'Maria Agustina'), ('1856', 'Yelena'), ('1858', 'Mi Rae'), ('1864', 'Tornado Alicia'), ('187', 'Chantelle'), ('187', 'Xin Yu'), ('1873', 'Haruna'), ('18781', 'Vojislava'), ('18824', 'Celine'), ('1884', 'Min'), ('1884', 'Trang'), ('1892', 'Maria Constanza De Las Mercedes'), ('1894', 'Katherine Gabriela'), ('1899', 'Kristy'), ('1901', 'Agata'), ('19048', 'Angelina'), ('19065', 'Despina'), ('1906587', 'Svetlana'), ('19092', 'Bernarda'), ('190997', 'Jamie'), ('191', 'Alexandria'), ('1917', 'Magali'), ('19173', 'Mai'), ('1920', 'Beatriz Maria'), ('19223', 'Na Ri'), ('192296', 'Severine'), ('1923', 'Dasha'), ('1929137', 'Vera'), ('193362', 'Tereza'), ('1936', 'Karine'), ('193767', 'Mandy'), ('19446', 'Aryna'), ('1945', 'Napatsakorn'), ('19495', 'Ximena'), ('195', 'Saana'), ('1955', 'Joana'), ('1958404', 'Petra'), ('1960', 'Lilla'), ('1962', 'Anaeve'), ('1977', 'Mirabelle'), ('1978', 'Eden'), ('197904', 'Patricia'), ('198', 'Shakhnoza'), ('1987', 'Viktoryia'), ('1990', 'Amina'), ('1991', 'Jillian'), ('1997', 'Margarida'), ('19989', 'Yi'), ('2', 'Olawaseun'), ('200', 'Melissa'), ('201', 'Mihoki'), ('201173', 'Nina'), ('201258', 'Mariana'), ('20132', 'Chayenne'), ('20142', 'Kanae'), ('201856', 'Renata'), ('20196', 'Melis'), ('202', 'Aneta'), ('2020', 'Samira'), ('202172', 'Camila'), ('20236', 'Zhaoxuan'), ('2025', 'Noelia'), ('20269', 'Yumi'), ('202697', 'Casey'), ('202780', 'Heather'), ('2034', 'Qiu Yu'), ('20368', 'Elizabeth'), ('203782', 'Misaki'), ('204801', 'Eugenie'), ('20481', 'Marija'), ('2052', 'Zalina'), ('206', 'Almudena'), ('206', 'Mariia'), ('2061', 'Momoko'), ('2061', 'Saray'), ('206375', 'Yuliya'), ('206981', 'Evgeniya'), ('207', 'Lauryn'), ('2070', 'Manca'), ('2076949', 'Caroline'), ('208108', 'Sesil'), ('20869', 'Cory Ann'), ('209', 'Parris'), ('2094', 'Ivania'), ('20989', 'Eugeniya'), ('21', 'Ana Luisa'), ('21', 'Avgusta'), ('21', 'Betina'), ('21', 'Julia Mansano'), ('21', 'Zeynep  Sena'), ('210', 'Maud'), ('210101', 'Kveta'), ('21152', 'Storm'), ('21205', 'Miharu'), ('2122', 'Shakhlo'), ('21261', 'Fatma'), ('2127', 'Szabina'), ('2127', 'Tea'), ('2133', 'Macarena'), ('2133', 'Ornella'), ('21340', 'Piia'), ('21360', 'Yue Yue'), ('2141', 'Ana Paula'), ('214121', 'Kiki'), ('21417', 'Korina'), ('2142854', 'Victoria'), ('215', 'Deria'), ('21599', 'Ankita'), ('21624', 'Antonia'), ('2166', 'Zhanlan'), ('21685', 'Francoise'), ('21728', 'Agustina'), ('2177', 'Anita'), ('219', 'Adnya'), ('219', 'Agata Jadwiga'), ('219', 'Maureen'), ('2191', 'Yuki Kristina'), ('22', 'Caty'), ('22', 'Layne'), ('22', 'Nikita'), ('221', 'Inger'), ('2216', 'Liz Tatiane'), ('221695', 'Silvia'), ('2217', 'Ai Wen'), ('2221', 'Clelia'), ('2221', 'Vendula'), ('224', 'Hao Ching'), ('224', 'Nattawadee'), ('224', 'Sandy'), ('22443', 'Yi Jing'), ('2249', 'Theo'), ('225', 'May'), ('22578', 'Vlada'), ('2258', 'Zuzanna'), ('225987', 'Lesia'), ('226', 'Aimee'), ('226', 'Mariaryeni'), ('2266', 'Madrie'), ('2275', 'Sadafmoh'), ('228', 'Andjela'), ('228', 'Rafaela'), ('2280', 'Kajsa'), ('22840', 'Miyabi'), ('228538', 'Akgul'), ('2287', 'Eleanor'), ('229', 'Kanako'), ('229391', 'Yung Jan'), ('22977', 'Sherazad'), ('22978', 'Quirine'), ('230', 'Micaela'), ('230262', 'Tatjana'), ('23195', 'Riko'), ('2321', 'Ashvarya'), ('2338', 'Anamika'), ('23411', 'Liga'), ('235', 'Alessandra'), ('23564', 'Montserrat'), ('235721', 'Coco'), ('2358', 'Alice Andrada'), ('236', 'Shiran'), ('2362', 'Libby'), ('23620', 'Deniz'), ('23668', 'Maya'), ('2369', 'Aliona'), ('237', 'Kaylah'), ('2371', 'Ho Ching'), ('2378', 'Shanshan'), ('238', 'Aselya'), ('238', 'Gyulnara'), ('238803', 'Alberta'), ('23897', 'Lavinia'), ('23968', 'Miyu'), ('23976', 'Doroteja'), ('24', 'Christie'), ('24', 'Emilija'), ('24', 'Hollie'), ('24', 'Jaimy Gayle'), ('24', 'Pei Hsuan'), ('24', 'Rui'), ('24', 'Ya'), ('24', 'Yihong'), ('2400', 'Ulyana'), ('240195', 'Greta'), ('2403', 'Ioana Diana'), ('24062', 'Keren'), ('240762', 'Cara'), ('241', 'Pamela'), ('24184', 'Aranza'), ('242', 'You Na'), ('2421', 'Ana Bianca'), ('242619', 'Michaella'), ('24279', 'Yuxuan'), ('243', 'Pippa'), ('2433', 'Ainhoa'), ('2434', 'Maddison'), ('2438', 'Christine'), ('2446', 'Eetee'), ('244807', 'Lauren'), ('245', 'Angela'), ('245139', 'Mathilde'), ('24523', 'Nungnadda'), ('24542', 'Miki'), ('24569', 'Mi'), ('24595', 'Katharina'), ('247237', 'Stefanie'), ('2484', 'Giorgia'), ('2487', 'Britt'), ('2489', 'Malin'), ('24897', 'Stefania'), ('249', 'Kamilla'), ('249446', 'Edina'), ('250056', 'Catalina'), ('251', 'Naz'), ('2515436', 'Jelena'), ('25166', 'Constance'), ('25183', 'Alyona'), ('2524', 'Alessia'), ('2526', 'Natia'), ('253', 'Ivone'), ('2531', 'Nicky'), ('253320', 'Alla'), ('253471', 'Romina'), ('254491', 'Yvonne'), ('254520', 'Karin'), ('25496', 'Marie'), ('255', 'Larikah'), ('255', 'Vaniya'), ('2570', 'Vladyslava'), ('259', 'Nam Yeon'), ('259116', 'Nuria'), ('2592', 'Rachael'), ('26', 'Beauty'), ('26059', 'Kyung Mi'), ('26077', 'Tammi'), ('2609', 'Melina'), ('26185', 'Na Lae'), ('26209', 'Jade'), ('26226', 'Viktoriya'), ('26280', 'Peangtarn'), ('2634', 'Riya'), ('2641', 'Saska'), ('265', 'Alessondra'), ('26585', 'Chang'), ('2661', 'Nadja'), ('266197', 'Sandra'), ('2662', 'Liubov'), ('26624', 'Basak'), ('266251', 'Zuzana'), ('267679', 'Marta'), ('26779', 'Chen'), ('268277', 'Anastasija'), ('268372', 'Jana'), ('26897', 'Ekaterine'), ('269', 'Astrid Wanja'), ('269', 'Paula Andrea'), ('26950', 'Ilona'), ('27', 'Carlota'), ('27', 'Sabina Elena'), ('27', 'Sarlota'), ('27', 'Vilma Y'), ('27', 'Yasmina'), ('270102', 'Kimiko'), ('27011', 'Evelyn'), ('2706', 'Nives'), ('27061', 'Beatrice'), ('2710', 'Josepha'), ('27118', 'Ulrikke'), ('272', 'Kimika'), ('272', 'Mirjam'), ('272889', 'Sania'), ('2738', 'Dhruthi'), ('27452', 'Rushmi'), ('27462', 'Jacqueline'), ('274936', 'Su Wei'), ('275', 'Yanni'), ('275255', 'Urszula'), ('275364', 'Chanelle'), ('27580', 'Hiroko'), ('276', 'Chompoothip'), ('276', 'Sirui'), ('277', 'Chengyiyi'), ('2772', 'Zoe'), ('27804', 'Ysaline'), ('2782', 'Hanna'), ('279', 'Milena'), ('279', 'Nermeen'), ('27997', 'Lena'), ('28', 'Roosh'), ('280', 'Antonela'), ('28045', 'Adriana'), ('28098', 'Nathalia'), ('281', 'Laura D'), ('281', 'Ye Xin'), ('281', 'Yuan'), ('2820', 'Snehadevi S'), ('282445', 'Mona'), ('283166', 'Bojana'), ('284', 'Meritxell'), ('285', 'Yoko'), ('2850', 'Berfu'), ('286', 'Julita'), ('286', 'Lesedi Sheya'), ('2864', 'Gozal'), ('2875425', 'Venus'), ('2877', 'Zoe Gwen'), ('288', 'Ailen'), ('288', 'Ana Gabriela'), ('289', 'Carson'), ('289', 'Giovanna'), ('290', 'Ghislaine'), ('290299', 'Melinda'), ('291', 'Ivanka'), ('291', 'Vanja'), ('292', 'Ina'), ('29214', 'Romana'), ('2922', 'Brianna'), ('29250', 'Nastja'), ('2927', 'Mizuno'), ('2929', 'Agni'), ('293366', 'Irina Camelia'), ('2935', 'Giuliana'), ('294', 'Haine'), ('294', 'Kei'), ('294', 'Maria Jesus'), ('29442', 'Annalisa'), ('296', 'Maria Del Rosario'), ('2961', 'Sowjanya'), ('296736', 'Maria Elena'), ('298', 'Kseniia'), ('298', 'Violetta'), ('29852', 'Sung Hee'), ('299530', 'Vania'), ('299698', 'Irina'), ('3', 'Arina Gabriela'), ('3', 'Himari'), ('3', 'Judith'), ('3', 'Marijana'), ('3', 'Phenomena'), ('30', 'Brindtha'), ('30', 'Damira'), ('30', 'Lyann'), ('30', 'Zhou'), ('3002', 'Jiaxi'), ('30035', 'Katie'), ('30136', 'Ganna'), ('3018', 'Verena'), ('30191', 'Viktoria'), ('3029', 'Emina'), ('302957', 'Galina'), ('30304', 'Justyna'), ('304', 'Abbi'), ('304', 'Lulu'), ('304', 'Tamari'), ('30401', 'Raquel'), ('30669', 'Vanesa'), ('3073', 'Malou'), ('308', 'Katrine Isabel'), ('308', 'Rona'), ('3085', 'Steffi'), ('309', 'Mitsumi'), ('3094', 'Nan Nan'), ('30972', 'Nicha'), ('309990', 'Ayumi'), ('310215', 'Christina'), ('3112', 'Manisha'), ('312', 'Blanca'), ('3121', 'Dana'), ('3127', 'Karla'), ('313187', 'Pauline'), ('3133', 'Irene'), ('314747', 'Elina'), ('315', 'Xiyu'), ('316', 'Malene'), ('316', 'Sasa'), ('31620', 'Cindy'), ('3165', 'Ronit'), ('317', 'Cristina Madalina'), ('31741', 'Gioia'), ('3187', 'Bunyawi'), ('3193', 'Karman'), ('32', 'Moyuka'), ('32', 'Yarden'), ('320', 'Suellen'), ('3200', 'Kyle'), ('320083', 'Eva'), ('3208', 'Paulina'), ('32169', 'Karen'), ('322202', 'Tamira'), ('323', 'Malika'), ('323', 'Maria Andrea'), ('323527', 'Alison'), ('324', 'Kelia'), ('324', 'Suzuho'), ('32445', 'Mayo'), ('325216', 'Polona'), ('3255', 'Shweta'), ('32581', 'Claudia'), ('3298', 'Denise'), ('33', 'Anne Sophie'), ('33', 'Daphne'), ('33', 'Intissar'), ('33', 'Lorenza'), ('33', 'Marcelina'), ('33', 'Nataliya'), ('330', 'Karyn'), ('33054', 'Allie'), ('331434', 'Mirjana'), ('333', 'Tijana'), ('33301', 'Chia Jung'), ('333150', 'Jarmila'), ('33388', 'Fangzhou'), ('33550', 'Nicola'), ('336', 'Rosie'), ('336', 'Shuyue'), ('336', 'Sofico'), ('3361', 'Tjasa'), ('33624', 'Audrey'), ('33672', 'Su Jeong'), ('3374', 'Chun Yan'), ('338', 'Valentina'), ('33822', 'Laura Ioana'), ('34', 'Kate'), ('340', 'Melisa'), ('3426', 'Jeannine'), ('344', 'Suzan'), ('3445', 'Lu'), ('34453', 'Jasmin'), ('3453', 'Ju Eun'), ('34570', 'Eri'), ('34647', 'Kristie'), ('3466', 'Matilda'), ('3470', 'Borislava'), ('3471', 'Ingrid'), ('34795', 'Tatiana'), ('34796', 'Chieh Yu'), ('3497', 'Ola'), ('351', 'Belen'), ('352458', 'Sloane'), ('354', 'Desirae'), ('354', 'Sanae'), ('355', 'Jodie Anna'), ('358', 'Chisa'), ('359', 'Frances'), ('359013', 'Jill'), ('3592', 'Yoon Young'), ('359374', 'Anna Lena'), ('3594', 'Sunam'), ('35957', 'Aleksandrina'), ('36', 'Ange Oby'), ('36', 'Eugenia'), ('36', 'Justina'), ('3613355', 'Maria'), ('3621', 'Anouk'), ('3623', 'Varunya'), ('362372', 'Marina'), ('3627', 'Carolina Meligeni Rodrigues'), ('363', 'Katharine'), ('363', 'Oliwia'), ('363', 'Wiktoria'), ('3633', 'Haruka'), ('3642', 'Rutuja'), ('3657', 'Michika'), ('366', 'Yijia'), ('36696', 'Ana Clara'), ('36714', 'Vivian'), ('36889', 'Carolina'), ('369810', 'Alisa'), ('37', 'Vinciane'), ('371035', 'Lourdes'), ('371140', 'Ksenia'), ('3714', 'Paula Catalina'), ('371662', 'Bethanie'), ('3724', 'Kanami'), ('37384', 'Paula Cristina'), ('3748', 'Khristina'), ('376', 'Estela'), ('376', 'Yekaterina'), ('3763', 'Vaszilisza'), ('377', 'Lusine'), ('377', 'Theresa'), ('37817', 'Kai Lin'), ('3783', 'Ying'), ('37981', 'Natsumi'), ('38', 'Cameron'), ('38086', 'Mari'), ('3809', 'Zarah'), ('3811', 'Olesya'), ('38116', 'Remi'), ('382', 'Oyku'), ('3825', 'Miriam'), ('383077', 'Kirsten'), ('383495', 'Aravane'), ('385', 'Alana'), ('38501', 'Ayu Fani'), ('385636', 'Melanie'), ('38651', 'Gail'), ('38793', 'Roxane'), ('3880', 'Emi'), ('38850', 'Taylor'), ('3894', 'Bernice'), ('39', 'Arthi'), ('39', 'Chanikarn'), ('39', 'Gulnaz'), ('39', 'Laylo'), ('390', 'Maxine'), ('390148', 'Agnes'), ('3905', 'Kaitlyn'), ('3908', 'Ester'), ('39102', 'Yana'), ('392', 'Draginja'), ('39270', 'Jovana'), ('3928', 'Helene'), ('39307', 'Sophie'), ('39352', 'Ipek'), ('39418', 'Justine'), ('3942', 'Despoina'), ('395', 'Iana'), ('395', 'Mahitha'), ('39523', 'Mailen'), ('39687', 'Yafan'), ('39782', 'Liezel'), ('39960', 'Shiho'), ('39989', 'Estelle'), ('4', 'Mariona'), ('40', 'Johana'), ('40', 'Lorraine M'), ('40', 'Mei Xu'), ('40', 'Olaya'), ('40', 'Ralina'), ('40060', 'Tamaryn'), ('401409', 'Varvara'), ('401857', 'Magdalena'), ('403', 'Kwan Yau'), ('403127', 'Paola'), ('40341', 'Lin'), ('40410', 'Ines'), ('404915', 'Yaroslava'), ('405', 'Eleonora'), ('4052', 'Alona'), ('4053', 'Cornelia'), ('406', 'Inci'), ('4060', 'Mariam'), ('40633', 'Wen Hsin'), ('407', 'Megumi'), ('40823', 'Danielle'), ('4093', 'Julieta Lara'), ('41', 'Eva Marie'), ('410', 'Gulben'), ('410', 'Karina Kristina'), ('410', 'Kelsey'), ('4106', 'Sharmada'), ('4122', 'Jessika'), ('4128', 'Pavla'), ('412872', 'Garbine'), ('413', 'Hana'), ('413', 'Ushna'), ('413759', 'Maria Jose'), ('414', 'Jin Ju'), ('414', 'Juliana'), ('41575', 'Amandine'), ('416', 'Kaitlin'), ('417', 'Meiling'), ('41792', 'Teodora'), ('41925', 'Darija'), ('4196', 'Yan'), ('4197', 'Lea'), ('42', 'Milagros'), ('42', 'Tatia'), ('42', 'Wan Yi'), ('4216', 'Linda'), ('4232828', 'Serena'), ('42527', 'Vasilisa'), ('4258', 'Raluca Georgiana'), ('42676', 'Sachie'), ('427', 'Mihika'), ('42773', 'Chiaki'), ('42925', 'Lesley'), ('4294', 'Oana Georgeta'), ('43', 'Emilia'), ('43020', 'Tetyana'), ('4314', 'Marine'), ('434692', 'Arantxa'), ('435038', 'Kateryna'), ('43550', 'Myrtille'), ('4356', 'Charlotte'), ('4368', 'Hirono'), ('43755', 'Patricia Maria'), ('43779', 'Elise'), ('4380', 'Naiktha'), ('43862', 'Jasmina'), ('439179', 'Eleni'), ('44', 'Federica Joe'), ('440', 'Genevieve'), ('440', 'Naima'), ('443', 'Ramu'), ('443695', 'Iveta'), ('444303', 'Katarina'), ('44497', 'Mallory'), ('447434', 'Nicole'), ('4499', 'Sonja'), ('45', 'Idia'), ('45', 'Talya'), ('45', 'Yuval'), ('45115', 'Leticia'), ('451414', 'Aleksandra'), ('452', 'Yu Jin'), ('4535', 'Xu Liu'), ('454', 'Victoire'), ('4543', 'Tyra'), ('455', 'Dominique'), ('456', 'Lamis'), ('456422', 'Tsvetana'), ('457043', 'Sorana'), ('4580', 'Kim'), ('45884', 'Catherine Cartan'), ('461', 'Sarahi'), ('4611', 'Shivika'), ('4612', 'Jia Qi'), ('46124', 'Shuko'), ('4619', 'Adrijana'), ('462', 'Kirsten Andrea'), ('46355', 'Jin A'), ('464', 'Andrea Renee'), ('464', 'Jara'), ('464', 'Sari'), ('4643', 'Hanyu'), ('465', 'Karolayne'), ('467', 'Ida'), ('467', 'Kady'), ('467', 'Simran Kaur'), ('468', 'Gabriela Nicole'), ('469', 'Rachel'), ('46908', 'Anais'), ('4703', 'Dunja'), ('4705', 'Kelly'), ('4709', 'Elisabeth'), ('472', 'Erica'), ('472', 'Joanna'), ('47282', 'So Jung'), ('4743', 'Iris'), ('476', 'Tinatin'), ('47651', 'Nigina'), ('4766', 'Ingrid Alexandra'), ('476768', 'Madison'), ('4777', 'Isabelle'), ('47854', 'Valentyna'), ('47867', 'Ye Ra'), ('4787', 'Margot'), ('4789', 'Xiao'), ('48', 'Georgiana'), ('48', 'Leylah Annie'), ('48', 'Mercedes'), ('480', 'Anushka'), ('480', 'Eliza'), ('480', 'Sonia'), ('4809', 'Klaudia'), ('48117', 'Jia Jing'), ('4831', 'Kimberly'), ('484', 'Antonina'), ('484', 'Olena'), ('484140', 'Sofia'), ('48788', 'Asia'), ('48811', 'Ani'), ('48857', 'Dalila'), ('49', 'Ronke'), ('490', 'Adeliya'), ('491', 'Nikol'), ('49122', 'Chi Chi'), ('4914', 'Chalena'), ('49207', 'Anna Giulia'), ('4941', 'Ao'), ('49412', 'Stanislava'), ('4962', 'Kotomi'), ('497', 'Stefana'), ('49767', 'Sachia'), ('49784', 'Sabina'), ('4980', 'Josephine'), ('4987', 'Catherine'), ('49980', 'Ashley'), ('5', 'Chelsea'), ('50', 'Ege'), ('500', 'Lindsey'), ('5007', 'Jaimee'), ('50184', 'Bibiane'), ('502', 'Susan'), ('5027', 'Nadezda'), ('505', 'Yuki'), ('5051', 'Tayisiya'), ('5057', 'Xiaodi'), ('50700', 'Louisa'), ('51', 'Andra Maria'), ('510', 'Priscila'), ('511', 'I Hsuan'), ('511', 'Magalie'), ('512490', 'Karolina'), ('515', 'Katya'), ('5155', 'Ashling'), ('515957', 'Barbora'), ('5173', 'Ayano'), ('51803', 'An Sophie'), ('519208', 'Virginie'), ('52', 'Ahsha'), ('52', 'En Pei'), ('52', 'Ilay'), ('52', 'Jia'), ('5214', 'Abbie'), ('5216', 'Alicja'), ('522', 'Libi'), ('522', 'Sharon Sanchana'), ('52274', 'Conny'), ('525', 'Maegan'), ('526', 'Ella'), ('5269', 'Anne Liz'), ('52889', 'Emily'), ('531', 'Si Qi'), ('53401', 'Barbara'), ('53480', 'Sally'), ('5356', 'Erin'), ('536', 'Elizabeta'), ('53610', 'Sheng Nan'), ('537', 'Busra'), ('5372', 'Ofri'), ('538', 'Clementina Eugenia'), ('5387', 'Raveena'), ('5393', 'Kimberley'), ('54', 'Anke'), ('54', 'Maftuna'), ('541', 'Emiliya'), ('54140', 'Tamara'), ('5416', 'Jaqueline Adina'), ('54172', 'Lyudmyla'), ('542', 'Meng Ning'), ('5422', 'Alix'), ('5425', 'Ioana Loredana'), ('5425', 'Nidhi'), ('543', 'Ivette'), ('54340', 'Varatchaya'), ('545', 'Danijela'), ('54798', 'Tara'), ('5493', 'Karina Ildor'), ('553107', 'Johanna'), ('555', 'Kristina N'), ('556', 'Rio'), ('5566', 'Ria'), ('559', 'Yuqi'), ('5592', 'Makiho'), ('55981', 'Misa'), ('5604', 'Whitney'), ('5619', 'Dayana'), ('562', 'Carlotta'), ('56212', 'Kumiko'), ('56242', 'Ons'), ('565', 'Molly'), ('56596', 'Nadiya'), ('567', 'Eleonore'), ('56817', 'Federica'), ('568191', 'Klara'), ('5683', 'Charlene'), ('56853', 'Oceane'), ('5687', 'Prarthana G'), ('571', 'Ayan'), ('574', 'Camille'), ('57585', 'Tina'), ('576', 'Guillermina'), ('57745', 'Alice'), ('578964', 'Laura'), ('5803', 'Rebeka'), ('581', 'Sybille'), ('5818', 'Klaartje'), ('58279', 'Oksana'), ('5866', 'Kamonwan'), ('587309', 'Monica'), ('58741', 'Ashleigh'), ('5880', 'Kelly S'), ('590911', 'Sabine'), ('59412', 'Cristina'), ('594217', 'Lisa'), ('594281', 'Tamarine'), ('5944', 'Harmony'), ('595', 'Laili'), ('596', 'Michele Alexandra'), ('59671', 'Nao'), ('596901', 'Alize'), ('597', 'Ryann'), ('597', 'Shuo'), ('59775', 'Evgenia'), ('59997', 'Liana Gabriela'), ('6', 'Loudmilla'), ('6', 'Madina'), ('6', 'Muazzez'), ('6', 'Shreya'), ('60', 'Tamar'), ('601693', 'Kristina'), ('602453', 'Yanina'), ('605', 'Andie K'), ('60646', 'Yi Fan'), ('60702', 'Amra'), ('6078', 'Laetitia'), ('608309', 'Stephanie'), ('60908', 'Pemra'), ('610820', 'Jie'), ('611', 'Jil Nora'), ('61196', 'Aliaksandra'), ('612072', 'Timea'), ('613', 'Wendy Qi Wen'), ('614', 'Nikki'), ('6146', 'Valerie'), ('6159', 'Chiara'), ('6168', 'Greetje'), ('6179', 'Gabriella'), ('61839', 'Yi Miao'), ('62', 'Ann'), ('62252', 'Risa'), ('625', 'Ksenija'), ('6256', 'Csilla'), ('625836', 'Kaia'), ('628', 'Jazzamay'), ('62861', 'Chanel'), ('6288', 'Yevgeniya'), ('62938', 'Madalina'), ('62977', 'Elizaveta'), ('63', 'Jule'), ('63', 'Milica'), ('63013', 'Nudnida'), ('6341', 'Svenja'), ('636', 'Elizaveta Anna'), ('6369', 'Dianne'), ('639', 'Dan Ni'), ('63998', 'Bianca'), ('64', 'Jada'), ('64', 'Reina'), ('64', 'Vita'), ('640', 'Akvile'), ('6404', 'Pilar'), ('641', 'Qianqian'), ('645', 'Ludmila'), ('64525', 'Ling'), ('646', 'Quinn'), ('6470', 'Vladimira'), ('647811', 'Anne'), ('648', 'Ashmitha'), ('648', 'Yawna'), ('649', 'Natella'), ('65', 'Emma Christine'), ('65152', 'Nastassja'), ('6525', 'Freya'), ('653', 'Kennedy'), ('653', 'Mary'), ('6542', 'Lucy'), ('6547', 'Elena Teodora'), ('65522', 'Denisa'), ('6564', 'Seo Kyung'), ('6573', 'Pernilla'), ('6591', 'Sun Jung'), ('66', 'Salma'), ('662', 'Blessing'), ('66271', 'Reka Luca'), ('662926', 'Shahar'), ('664', 'Phillis'), ('6650', 'Anna Arina'), ('6650', 'Seung Yeon'), ('667', 'Chi Fan'), ('6688', 'Isabel'), ('669546', 'Carla'), ('67017', 'Dinah'), ('672', 'Leonie'), ('67459', 'Carly'), ('676', 'Breaunna'), ('677', 'Angeliki'), ('677', 'Giada'), ('677', 'Yoshimi'), ('6777', 'Chelsey'), ('678793', 'Anabel'), ('679', 'Chia Hsien'), ('68', 'Aastha'), ('6809', 'Lidziya'), ('681', 'Se Jin'), ('6810', 'Sabrina'), ('682', 'Yuenu'), ('68207', 'Amanda'), ('683', 'Marcela Guimaraes'), ('683', 'Qianhui'), ('687', 'Guiomar'), ('688', 'Mallaurie'), ('688', 'Sinead'), ('68925', 'Jing Jing'), ('69', 'Esen'), ('6906', 'Morgane'), ('69242', 'Mihaela'), ('6948', 'Ionela Andreea'), ('697', 'Linnea'), ('699', 'Radina'), ('7', 'Axana'), ('7', 'Zhibek'), ('70', 'Savannah'), ('701', 'Komola'), ('702', 'Mara'), ('702', 'Zeel'), ('7027', 'Dea'), ('703', 'Aida'), ('704', 'Kassandra'), ('70504', 'Chin Wei'), ('706', 'Thai Sa Grana'), ('70613', 'Grace'), ('7062', 'Brooke'), ('709', 'Desiree'), ('71', 'Aldana'), ('71', 'Vishesh'), ('71', 'Yasmyn'), ('71072', 'Anett'), ('713', 'Ebony'), ('714', 'Isabela'), ('7147', 'Etsuko'), ('715', 'Madeleine'), ('716', 'Siqi'), ('71645', 'Vanessa'), ('7165', 'Tess'), ('717', 'Xiaorong'), ('7179', 'Ji Hee'), ('72', 'Abir'), ('72', 'Andressa Cristina'), ('72', 'Carolyn'), ('72', 'Janja'), ('72', 'Liniques'), ('72', 'Mi Zhuoma'), ('72', 'Nastassia'), ('724638', 'Simona'), ('725', 'Brandy'), ('72682', 'Maria Joao'), ('73', 'Yang'), ('73192', 'Veronika'), ('7323', 'Patty'), ('733', 'Lee'), ('7353', 'Dijana'), ('73589', 'Noppawan'), ('736', 'Treta'), ('7367', 'Hua Chen'), ('74', 'Iulia Maria'), ('74', 'Zinovia'), ('741', 'Rashmi'), ('742', 'Akilah'), ('7431', 'Tomoko'), ('744', 'Eveliina'), ('7444', 'Ayla'), ('74453', 'Andreja'), ('7486', 'Cristiana'), ('75', 'Beatriz Magdalena'), ('75', 'Sean'), ('75', 'Yosr'), ('750', 'Leolia'), ('75337', 'Tetiana'), ('75414', 'Cristina Andreea'), ('756', 'Magy'), ('75850', 'Anastasiya'), ('760', 'Nour'), ('7605', 'Deborah'), ('761', 'Jainy'), ('762', 'India'), ('764', 'Tanaporn'), ('76586', 'Michaela'), ('76747', 'Polina'), ('77', 'Vicky'), ('772', 'Yuanyi'), ('773929', 'Olga'), ('775', 'Guzal'), ('77519', 'Luksika'), ('7755', 'Fang Ying'), ('776', 'Karola Patricia'), ('7772', 'Elena Gabriela'), ('778', 'Marta Huqi'), ('7797', 'Hulya'), ('78', 'Ferny'), ('78', 'Hazal'), ('780', 'Sabastiani'), ('78204', 'Sacha'), ('78265', 'Margarita'), ('7843', 'Katherine'), ('78461', 'Sarah'), ('78513', 'Nikola'), ('7874', 'Usue Maitane'), ('7898', 'Lisa Maria'), ('791', 'Aymet'), ('79511', 'Viktorija'), ('7975', 'Ching Wen'), ('79958', 'Dia'), ('7996', 'Ayaka'), ('7998', 'Gaia'), ('7999', 'Gracia'), ('80', 'Fatyha'), ('801', 'Sherry'), ('802', 'Asiya'), ('803', 'Rosalia'), ('804', 'Josie'), ('8072', 'Stamatia'), ('8079', 'Ellie'), ('809611', 'Roberta'), ('811', 'Habiba'), ('81222', 'Jennifer'), ('814', 'Berta'), ('8145', 'Ting Fei'), ('8146', 'Nicoleta Catalina'), ('8174', 'Carmen'), ('8180', 'Hae Sung'), ('8203', 'Priscilla'), ('822', 'Jawairiah'), ('823', 'Ena'), ('8268', 'Sylwia'), ('8284', 'Lisanne'), ('83', 'Akiho'), ('83', 'Maileen'), ('8301', 'Hyun Hui'), ('8305', 'Luciana'), ('83476', 'Isabella'), ('836', 'Anhzelika'), ('83659', 'Tadeja'), ('837', 'Lynn'), ('84', 'Yukako'), ('8406', 'Kaori'), ('84184', 'Richel'), ('843', 'Tamachan'), ('8441', 'Bermet'), ('84446', 'Akiko'), ('8448', 'Rishika'), ('84543', 'Veronica'), ('85', 'Ahlam'), ('85', 'Dilara'), ('85', 'Kariann'), ('85022', 'Emma'), ('8507', 'Danielle Rose'), ('85425', 'Maryna'), ('857', 'Dariya'), ('857', 'Naoko'), ('8589', 'Daiana'), ('8592', 'Ji Young'), ('86', 'Ki Ryang'), ('8608', 'Harriet'), ('861', 'Janneke'), ('8676', 'Ting Jr'), ('87', 'Leticia Garcia'), ('87', 'Siyu'), ('87', 'Zaineb'), ('870', 'Hyojung'), ('8700', 'Oleksandra'), ('87263', 'Elitsa'), ('8744', 'Xin'), ('876', 'Lutfiye'), ('87844', 'Iryna'), ('879', 'Wushuang'), ('87958', 'Danka'), ('880', 'Rosalie'), ('882', 'Eliessa'), ('8832', 'Alena'), ('88369', 'Irena'), ('88542', 'Heidi'), ('887', 'Amelie'), ('8900', 'Pei Chi'), ('891796', 'Julia'), ('8918', 'Vivienne'), ('89361', 'Florencia'), ('8939', 'Dalia'), ('894', 'Keri'), ('898', 'Fatimah'), ('9', 'Adva'), ('9', 'Frederikke'), ('9', 'Rana'), ('9', 'Warona'), ('9', 'Yu Tong'), ('90', 'Elodie'), ('90', 'Michela'), ('90', 'Viktoriia'), ('9001', 'Syna'), ('9036', 'Kyoka'), ('90451', 'Carina'), ('905', 'Blair'), ('905', 'Margaux'), ('906', 'Satsuki'), ('9064', 'Mayya'), ('907', 'Anna Katalina'), ('907', 'Constanza'), ('908', 'Jazmin'), ('9093', 'Carolin'), ('910', 'Karoline'), ('911', 'Romy'), ('91117', 'Lina'), ('9116', 'Tessah'), ('9120', 'Nika'), ('913829', 'Shuai'), ('9147', 'Camelia Elena'), ('914981', 'Sara'), ('916', 'Iga'), ('9180', 'Sofya'), ('918746', 'Dominika'), ('919', 'Kanika'), ('92', 'Aina'), ('9202', 'Raluca Elena'), ('920433', 'Andrea'), ('9227', 'Destanee'), ('923', 'Jessy'), ('93', 'Manya'), ('9318', 'Prerna'), ('9338', 'Sakiko'), ('934', 'Claudia Gianina'), ('934', 'Plobrung'), ('9355', 'Karina'), ('93730', 'Katarzyna'), ('942', 'Kerstin'), ('95', 'Cecilie Lundgaard'), ('95', 'Sing Le'), ('9536', 'Neda'), ('955267', 'Alexandra'), ('957', 'Ratnika'), ('958', 'Cemre'), ('9593', 'Mana'), ('96', 'Aishwarya'), ('96', 'Jiaxue'), ('96', 'Mami'), ('96', 'Meiqi'), ('96', 'Minami'), ('96', 'Smriti'), ('96', 'Sophia'), ('960', 'Elke'), ('9600', 'Georgia'), ('9627', 'Nicolette'), ('9631', 'Hao Chen'), ('9634', 'Shilin'), ('964', 'Emily J'), ('966', 'Yeong Won'), ('96852', 'Arina'), ('97', 'Katyarina'), ('97', 'Laura Sofia'), ('97', 'Melany Solange'), ('97400', 'Natalia'), ('976', 'Eudice Wong'), ('9780', 'Di'), ('98', 'Hortencia'), ('980', 'Ariadna'), ('980', 'Nazari'), ('984', 'Rianna'), ('9846', 'Dejana'), ('98798', 'Beatriz'), ('99', 'Anne Marie'), ('99', 'Asha'), ('99', 'Diana Maria'), ('99', 'Zhima'), ('9926', 'Valentine'), ('993', 'Alicia'), ('9938', 'Min Hwa'), ('994', 'Franziska'), ('997', 'Vladica'), ('998', 'Yukina'), ('99836', 'Margalita')] != [('Aastha', '68'), ('Abbi', '304'), ('Abbie', '5214'), ('Abigail', '111645'), ('Abigail', '310'), ('Abigail', '3254'), ('Abigail', '84'), ('Abiodun', '120'), ('Abir', '72'), ('Adeliya', '490'), ('Adnya', '219'), ('Adriana', '26610'), ('Adriana', '509'), ('Adriana', '57'), ('Adriana', '869'), ('Adrienn', '39'), ('Adrienn', '68'), ('Adrijana', '4619'), ('Adva', '9'), ('Afroditi', '156'), ('Agata', '1901'), ('Agata Jadwiga', '219'), ('Agne', '110'), ('Agnes', '11981'), ('Agnes', '339796'), ('Agnes', '38371'), ('Agnese', '13717'), ('Agni', '2929'), ('Agnieszka', '1801033'), ('Agustina', '16'), ('Agustina', '21007'), ('Agustina', '705'), ('Agustina Elena', '158'), ('Ah', '141'), ('Ahlam', '85'), ('Ahsha', '52'), ('Ai', '1574'), ('Ai', '9177'), ('Ai Wen', '2217'), ('Aida', '703'), ('Aiko', '138707'), ('Aiko', '1401'), ('Ailen', '288'), ('Aimee', '226'), ('Aina', '92'), ('Ainhoa', '2433'), ('Aishwarya', '96'), ('Ajla', '116548'), ('Akari', '11873'), ('Akgul', '228538'), ('Aki', '14838'), ('Akiho', '83'), ('Akiko', '37074'), ('Akiko', '47321'), ('Akiko', '51'), ('Akilah', '742'), ('Akvile', '640'), ('Alana', '385'), ('Alba', '1424'), ('Alberta', '238803'), ('Albina', '10507'), ('Aldana', '71'), ('Alejandra', '187'), ('Alejandra', '470'), ('Alejandra', '921'), ('Aleksandra', '107965'), ('Aleksandra', '164'), ('Aleksandra', '2068'), ('Aleksandra', '24'), ('Aleksandra', '338720'), ('Aleksandra', '466'), ('Aleksandra', '582'), ('Aleksandra', '59'), ('Aleksandra', '655'), ('Aleksandra', '711'), ('Aleksandrina', '35957'), ('Alena', '111'), ('Alena', '18'), ('Alena', '54'), ('Alena', '8649'), ('Alessandra', '235'), ('Alessia', '1826'), ('Alessia', '286'), ('Alessia', '3'), ('Alessia', '317'), ('Alessia', '92'), ('Alessondra', '265'), ('Alexa', '110'), ('Alexa', '131846'), ('Alexa', '2135'), ('Alexa', '324'), ('Alexa', '4367'), ('Alexandra', '1039'), ('Alexandra', '104'), ('Alexandra', '1183'), ('Alexandra', '121'), ('Alexandra', '136645'), ('Alexandra', '142'), ('Alexandra', '162178'), ('Alexandra', '17308'), ('Alexandra', '1751'), ('Alexandra', '1924'), ('Alexandra', '2015'), ('Alexandra', '261247'), ('Alexandra', '295579'), ('Alexandra', '3519'), ('Alexandra', '3540'), ('Alexandra', '37627'), ('Alexandra', '3842'), ('Alexandra', '452'), ('Alexandra', '5419'), ('Alexandra', '562'), ('Alexandra', '9273'), ('Alexandra', '9699'), ('Alexandra', '98'), ('Alexandria', '191'), ('Alexia', '12772'), ('Alexia', '57'), ('Alexis', '13371'), ('Alexis', '18'), ('Aliaksandra', '61196'), ('Alice', '15010'), ('Alice', '21875'), ('Alice', '2492'), ('Alice', '308'), ('Alice', '3928'), ('Alice', '6824'), ('Alice', '7308'), ('Alice Andrada', '2358'), ('Alicia', '290'), ('Alicia', '616'), ('Alicia', '87'), ('Alicja', '5216'), ('Alina', '1243'), ('Alina', '2417'), ('Alina', '31'), ('Alina', '33'), ('Alina', '3332'), ('Alina', '4280'), ('Alina', '57'), ('Aliona', '2369'), ('Alisa', '1294'), ('Alisa', '3'), ('Alisa', '33'), ('Alisa', '368086'), ('Alisa', '394'), ('Alison', '201699'), ('Alison', '24920'), ('Alison', '96908'), ('Alix', '5422'), ('Alize', '535684'), ('Alize', '61217'), ('Alla', '253320'), ('Allie', '15969'), ('Allie', '17085'), ('Almudena', '206'), ('Alona', '289'), ('Alona', '3699'), ('Alona', '64'), ('Alory Regina Elorriaga', '155'), ('Alyona', '25183'), ('Amanda', '20922'), ('Amanda', '33691'), ('Amanda', '432'), ('Amanda', '4578'), ('Amanda', '8584'), ('Amandine', '35243'), ('Amandine', '6332'), ('Amelie', '887'), ('Amina', '1905'), ('Amina', '85'), ('Aminat', '12708'), ('Amira', '157'), ('Amra', '60702'), ('Amrita', '159'), ('Amy', '305'), ('Amy', '838'), ('Amy', '9473'), ('An Sophie', '51803'), ('Ana', '1320911'), ('Ana', '171'), ('Ana', '209'), ('Ana', '24'), ('Ana', '254'), ('Ana', '27275'), ('Ana', '3'), ('Ana', '46852'), ('Ana', '6497'), ('Ana', '651'), ('Ana', '720'), ('Ana', '88510'), ('Ana', '97597'), ('Ana Bianca', '2421'), ('Ana Clara', '36696'), ('Ana Gabriela', '288'), ('Ana Luisa', '21'), ('Ana Paula', '1153'), ('Ana Paula', '988'), ('Ana Sofia', '15955'), ('Ana Victoria', '1367'), ('Anabel', '678793'), ('Anaeve', '1962'), ('Anais', '318'), ('Anais', '46590'), ('Anamika', '2338'), ('Anastasia', '113115'), ('Anastasia', '120'), ('Anastasia', '12551'), ('Anastasia', '140'), ('Anastasia', '216035'), ('Anastasia', '293766'), ('Anastasia', '2967'), ('Anastasia', '3077'), ('Anastasia', '354'), ('Anastasia', '3838'), ('Anastasia', '41457'), ('Anastasia', '4517'), ('Anastasia', '471'), ('Anastasia', '5562'), ('Anastasia', '5816'), ('Anastasia', '610'), ('Anastasia', '710284'), ('Anastasia', '762'), ('Anastasia', '8125'), ('Anastasia', '9768'), ('Anastasia Evgenyevna', '1235'), ('Anastasiia', '12'), ('Anastasija', '268214'), ('Anastasija', '63'), ('Anastasiya', '1033'), ('Anastasiya', '144'), ('Anastasiya', '16968'), ('Anastasiya', '221'), ('Anastasiya', '2591'), ('Anastasiya', '2642'), ('Anastasiya', '3443'), ('Anastasiya', '406'), ('Anastasiya', '47480'), ('Anastasiya', '922'), ('Anca', '101'), ('Anda', '160'), ('Andie K', '605'), ('Andjela', '228'), ('Andra Maria', '51'), ('Andrea', '1303'), ('Andrea', '194566'), ('Andrea', '2355'), ('Andrea', '24384'), ('Andrea', '32964'), ('Andrea', '342'), ('Andrea', '39240'), ('Andrea', '494'), ('Andrea', '624785'), ('Andrea Renee', '464'), ('Andreea', '1236'), ('Andreea', '248'), ('Andreea Amalia', '1365'), ('Andreea Roxana', '12727'), ('Andreja', '74453'), ('Andressa Cristina', '72'), ('Andrina', '159'), ('Aneta', '199'), ('Aneta', '3'), ('Anett', '71072'), ('Anette', '1657'), ('Ange Oby', '36'), ('Angela', '209'), ('Angela', '36'), ('Angelica', '13577'), ('Angelica', '66'), ('Angeliki', '677'), ('Angelina', '16231'), ('Angelina', '2221'), ('Angelina', '458'), ('Angelina', '48'), ('Angelina', '90'), ('Angelique', '1105308'), ('Angelique', '2370'), ('Angelique', '24836'), ('Anhelina', '17967'), ('Anhzelika', '836'), ('Ani', '2252'), ('Ani', '36361'), ('Ani', '630'), ('Ani', '9568'), ('Anita', '2177'), ('Anja', '11596'), ('Anke', '54'), ('Ankita', '21599'), ('Ann', '62'), ('Anna', '101468'), ('Anna', '1019'), ('Anna', '1026'), ('Anna', '122'), ('Anna', '124'), ('Anna', '13232'), ('Anna', '13517'), ('Anna', '13583'), ('Anna', '15218'), ('Anna', '185'), ('Anna', '19595'), ('Anna', '2052'), ('Anna', '206032'), ('Anna', '23373'), ('Anna', '236'), ('Anna', '24100'), ('Anna', '2493'), ('Anna', '33'), ('Anna', '35'), ('Anna', '373'), ('Anna', '416'), ('Anna', '42083'), ('Anna', '4477'), ('Anna', '487'), ('Anna', '497'), ('Anna', '514484'), ('Anna', '5581'), ('Anna', '622'), ('Anna', '641'), ('Anna', '66'), ('Anna', '780'), ('Anna', '85'), ('Anna', '9034'), ('Anna Arina', '6650'), ('Anna Giulia', '49207'), ('Anna Karolina', '107880'), ('Anna Katalina', '907'), ('Anna Lena', '276403'), ('Anna Lena', '82971'), ('Anna Maria', '100'), ('Anna Maria', '453'), ('Anna Maria', '874'), ('Annalisa', '29442'), ('Anne', '242145'), ('Anne', '335693'), ('Anne', '69973'), ('Anne Liz', '5269'), ('Anne Marie', '99'), ('Anne Sophie', '33'), ('Annie', '172'), ('Annika', '169371'), ('Anouk', '1069'), ('Anouk', '2552'), ('Antonela', '280'), ('Antonia', '21624'), ('Antonina', '484'), ('Anushka', '480'), ('Ao', '4941'), ('Apichaya', '126'), ('Arabela', '11608'), ('Arantxa', '191994'), ('Arantxa', '240'), ('Arantxa', '242458'), ('Aranza', '24184'), ('Aravane', '383495'), ('Ariadna', '980'), ('Arina', '2157'), ('Arina', '443'), ('Arina', '94252'), ('Arina Gabriela', '3'), ('Arlinda', '154'), ('Arthi', '39'), ('Aryna', '19446'), ('Aselya', '238'), ('Asha', '99'), ('Ashleigh', '58741'), ('Ashley', '1088'), ('Ashley', '1644'), ('Ashley', '2781'), ('Ashley', '43781'), ('Ashley', '686'), ('Ashling', '5155'), ('Ashmitha', '648'), ('Ashvarya', '2321'), ('Asia', '48788'), ('Asiya', '802'), ('Assia', '141'), ('Astra', '1083'), ('Astrid Wanja', '269'), ('Audrey', '29458'), ('Audrey', '4166'), ('Avgusta', '21'), ('Axana', '7'), ('Ayaka', '7996'), ('Ayan', '571'), ('Ayano', '5173'), ('Ayla', '7444'), ('Aymet', '791'), ('Ayu Fani', '38501'), ('Ayumi', '22451'), ('Ayumi', '235'), ('Ayumi', '286994'), ('Ayumi', '310'), ('Azra', '11721'), ('Barbara', '1088'), ('Barbara', '1598'), ('Barbara', '1947'), ('Barbara', '219'), ('Barbara', '24616'), ('Barbara', '7461'), ('Barbara', '8211'), ('Barbara', '8261'), ('Barbora', '16496'), ('Barbora', '28890'), ('Barbora', '469763'), ('Barbora', '808'), ('Basak', '123'), ('Basak', '26501'), ('Beatrice', '1104'), ('Beatrice', '1793'), ('Beatrice', '19264'), ('Beatrice', '4134'), ('Beatrice', '766'), ('Beatriz', '35516'), ('Beatriz', '54'), ('Beatriz', '63228'), ('Beatriz Magdalena', '75'), ('Beatriz Maria', '1920'), ('Beauty', '26'), ('Belen', '351'), ('Belinda', '135048'), ('Belinda', '2279'), ('Benedetta', '11032'), ('Berfu', '2850'), ('Bermet', '8441'), ('Bernarda', '19092'), ('Bernice', '3894'), ('Berta', '814'), ('Bethanie', '371662'), ('Betina', '21'), ('Bhuvana', '1152'), ('Bianca', '3317'), ('Bianca', '41135'), ('Bianca', '4954'), ('Bianca', '5376'), ('Bianca', '9216'), ('Bianka', '1213'), ('Bibiane', '50184'), ('Blair', '905'), ('Blanca', '312'), ('Blessing', '287'), ('Blessing', '375'), ('Boba', '123'), ('Bojana', '1858'), ('Bojana', '251714'), ('Bojana', '29054'), ('Bojana', '540'), ('Borislava', '3470'), ('Boyan', '1465'), ('Brandy', '725'), ('Breaunna', '676'), ('Brenda', '164339'), ('Brenda', '2421'), ('Brianna', '2922'), ('Brienne', '12'), ('Brindtha', '30'), ('Britt', '2487'), ('Brittany', '1032'), ('Brittany', '87'), ('Brooke', '144'), ('Brooke', '6918'), ('Brynn', '1344'), ('Bunyawi', '3187'), ('Busra', '537'), ('Cagla', '119797'), ('Caitlin', '107'), ('Caitlin', '15111'), ('Camelia Elena', '9147'), ('Cameron', '38'), ('Camila', '10136'), ('Camila', '110'), ('Camila', '137'), ('Camila', '186544'), ('Camila', '26'), ('Camila', '4411'), ('Camila', '808'), ('Camila Vital', '136'), ('Camilla', '3113'), ('Camilla', '8601'), ('Camille', '133'), ('Camille', '441'), ('Cara', '240762'), ('Carina', '90451'), ('Carla', '15032'), ('Carla', '1550'), ('Carla', '399'), ('Carla', '643043'), ('Carla', '9522'), ('Carlota', '27'), ('Carlotta', '33'), ('Carlotta', '529'), ('Carly', '67459'), ('Carmen', '554'), ('Carmen', '615'), ('Carmen', '7005'), ('Carmen Raluca', '1077'), ('Carol', '14213'), ('Carolin', '72'), ('Carolin', '9021'), ('Carolina', '13759'), ('Carolina', '14061'), ('Carolina', '1647'), ('Carolina', '2894'), ('Carolina', '4528'), ('Carolina Meligeni Rodrigues', '3627'), ('Caroline', '12'), ('Caroline', '1852481'), ('Caroline', '1897'), ('Caroline', '208822'), ('Caroline', '329'), ('Caroline', '400'), ('Caroline', '5222'), ('Caroline', '544'), ('Caroline', '63'), ('Caroline', '7179'), ('Caroline B', '111'), ('Carolyn', '72'), ('Carson', '289'), ('Casey', '1186'), ('Casey', '201511'), ('Catalina', '221309'), ('Catalina', '28747'), ('Catherine', '1558'), ('Catherine', '3051'), ('Catherine', '378'), ('Catherine Cartan', '45884'), ('Caty', '22'), ('Cecilia', '11770'), ('Cecilia', '88'), ('Cecilia', '96'), ('Cecilie Lundgaard', '95'), ('Celine', '13135'), ('Celine', '5689'), ('Cemre', '958'), ('Chalena', '4914'), ('Chanel', '62861'), ('Chanelle', '1644'), ('Chanelle', '273720'), ('Chang', '26585'), ('Chanikarn', '39'), ('Chantal', '15001'), ('Chantelle', '187'), ('Chaoyi', '15'), ('Charlene', '5683'), ('Charlotte', '1212'), ('Charlotte', '15'), ('Charlotte', '2127'), ('Charlotte', '286'), ('Charlotte', '48'), ('Charlotte', '668'), ('Chayenne', '20132'), ('Chelsea', '5'), ('Chelsey', '6777'), ('Chen', '26779'), ('Chengyiyi', '277'), ('Chi Chi', '49122'), ('Chi Fan', '667'), ('Chia Hsien', '679'), ('Chia Jung', '33301'), ('Chiaki', '42773'), ('Chiara', '147'), ('Chiara', '2042'), ('Chiara', '206'), ('Chiara', '209'), ('Chiara', '3'), ('Chiara', '3053'), ('Chiara', '499'), ('Chieh Yu', '34796'), ('Chihiro', '2539'), ('Chihiro', '4411'), ('Chihiro', '8451'), ('Chin Wei', '70504'), ('Chinami', '13141'), ('Ching Wen', '7975'), ('Chiraz', '1726'), ('Chisa', '358'), ('Chloe', '15190'), ('Chompoothip', '276'), ('Christie', '24'), ('Christina', '1846'), ('Christina', '300153'), ('Christina', '8216'), ('Christine', '2438'), ('Chun Mei', '12519'), ('Chun Yan', '3374'), ('Cindy', '264'), ('Cindy', '31356'), ('Claire', '107656'), ('Claire', '29976'), ('Claire', '4244'), ('Clara', '35'), ('Clara', '81'), ('Claudia', '1269'), ('Claudia', '165'), ('Claudia', '179'), ('Claudia', '302'), ('Claudia', '30315'), ('Claudia', '351'), ('Claudia Antonia', '1227'), ('Claudia Gianina', '934'), ('Claudine', '106762'), ('Clelia', '2221'), ('Clemence', '1622'), ('Clementina Eugenia', '538'), ('Clothilde', '12304'), ('Coco', '235721'), ('Colomba', '129'), ('Conny', '52274'), ('Constance', '25166'), ('Constanza', '907'), ('Constanze', '18'), ('Corina', '1002'), ('Corinna', '102260'), ('Cornelia', '4053'), ('Cory Ann', '20869'), ('Costanza', '1186'), ('Costanza', '50'), ('Cristiana', '7486'), ('Cristina', '124'), ('Cristina', '2605'), ('Cristina', '2713'), ('Cristina', '3927'), ('Cristina', '44297'), ('Cristina', '5746'), ('Cristina Andreea', '75414'), ('Cristina Madalina', '317'), ('Csilla', '2338'), ('Csilla', '3918'), ('Cynthia', '1034'), ('Da Hye', '1417'), ('Dabin', '1261'), ('Dagmara', '160'), ('Daiana', '8589'), ('Dajana', '150'), ('Dalia', '8939'), ('Dalila', '244'), ('Dalila', '47772'), ('Dalila', '841'), ('Dalma', '15935'), ('Damilola', '0'), ('Damini', '12'), ('Damira', '30'), ('Dan Ni', '639'), ('Dana', '1257'), ('Dana', '1864'), ('Daneika', '1607'), ('Danica', '17597'), ('Daniela', '1135382'), ('Daniela', '114'), ('Daniela', '1560'), ('Daniela', '26653'), ('Daniela', '30'), ('Daniela', '553'), ('Daniela', '675'), ('Daniela', '72'), ('Daniela', '82'), ('Daniela', '84'), ('Daniella', '147'), ('Daniella', '16516'), ('Danielle', '12038'), ('Danielle', '1295'), ('Danielle', '20600'), ('Danielle', '6890'), ('Danielle Rose', '8507'), ('Danijela', '545'), ('Danka', '87958'), ('Daphne', '33'), ('Daria', '112'), ('Daria', '116'), ('Daria', '1243'), ('Daria', '12630'), ('Daria', '148173'), ('Daria', '2274'), ('Daria', '353'), ('Daria', '5708'), ('Daria', '8'), ('Darija', '41925'), ('Dariya', '45'), ('Dariya', '812'), ('Darya', '267'), ('Darya', '3549'), ('Darya', '504'), ('Darya', '71887'), ('Darya', '86829'), ('Dasha', '1923'), ('Dayana', '5619'), ('Dea', '7027'), ('Deborah', '113'), ('Deborah', '3580'), ('Deborah', '3912'), ('Deeon', '141'), ('Dejana', '2332'), ('Dejana', '7514'), ('Demi', '1192'), ('Denisa', '65522'), ('Denise', '1478'), ('Denise', '1820'), ('Denise Antonela', '168'), ('Deniz', '23554'), ('Deniz', '66'), ('Deria', '215'), ('Desirae', '354'), ('Desiree', '709'), ('Despina', '19065'), ('Despoina', '3942'), ('Destanee', '9227'), ('Dewi', '134'), ('Dhruthi', '2738'), ('Di', '9780'), ('Dia', '79958'), ('Diana', '1174'), ('Diana', '211'), ('Diana', '2512'), ('Diana', '28959'), ('Diana', '3029'), ('Diana', '33443'), ('Diana', '40344'), ('Diana', '4050'), ('Diana', '5491'), ('Diana', '66'), ('Diana Maria', '99'), ('Dianne', '6369'), ('Dijana', '7353'), ('Dilara', '85'), ('Dina', '149'), ('Dinah', '67017'), ('Doga Selen', '117'), ('Domenica', '1614'), ('Dominika', '449'), ('Dominika', '918297'), ('Dominique', '36'), ('Dominique', '419'), ('Donika', '164'), ('Donna', '114098'), ('Dorien', '109'), ('Doroteja', '23976'), ('Draginja', '392'), ('Dunja', '1328'), ('Dunja', '3375'), ('Ebony', '713'), ('Eden', '1689'), ('Eden', '235'), ('Eden', '54'), ('Edina', '249446'), ('Eduarda', '11216'), ('Eetee', '2446'), ('Ege', '50'), ('Ekaterina', '106669'), ('Ekaterina', '15816'), ('Ekaterina', '1869'), ('Ekaterina', '1900'), ('Ekaterina', '193847'), ('Ekaterina', '1986'), ('Ekaterina', '216'), ('Ekaterina', '2443'), ('Ekaterina', '266'), ('Ekaterina', '30'), ('Ekaterina', '33874'), ('Ekaterina', '44'), ('Ekaterina', '484'), ('Ekaterina', '570080'), ('Ekaterina', '63'), ('Ekaterina', '658'), ('Ekaterina', '71'), ('Ekaterina', '75003'), ('Ekaterine', '26897'), ('Elaine', '103'), ('Eleanor', '1964'), ('Eleanor', '323'), ('Elena', '1043'), ('Elena', '120'), ('Elena', '1810'), ('Elena', '20'), ('Elena', '253351'), ('Elena', '364725'), ('Elena', '425'), ('Elena', '50'), ('Elena', '52008'), ('Elena', '526'), ('Elena', '573809'), ('Elena Gabriela', '7772'), ('Elena Teodora', '6547'), ('Eleni', '28'), ('Eleni', '3233'), ('Eleni', '435918'), ('Eleonora', '405'), ('Eleonore', '126'), ('Eleonore', '441'), ('Eliessa', '882'), ('Elina', '181'), ('Elina', '286'), ('Elina', '314280'), ('Elisabeth', '127'), ('Elisabeth', '1565'), ('Elisabeth', '3017'), ('Elise', '43779'), ('Elitsa', '87263'), ('Elixane', '18211'), ('Eliza', '480'), ('Elizabeta', '536'), ('Elizabeth', '11603'), ('Elizabeth', '15'), ('Elizabeth', '353'), ('Elizabeth', '8388'), ('Elizabeth', '9'), ('Elizabeth Anita Alexandria', '1103'), ('Elizaveta', '104'), ('Elizaveta', '21746'), ('Elizaveta', '41127'), ('Elizaveta Anna', '636'), ('Elke', '232'), ('Elke', '728'), ('Ella', '103'), ('Ella', '423'), ('Ellen', '2714'), ('Ellen', '4349'), ('Ellen', '6698'), ('Ellie', '39'), ('Ellie', '8040'), ('Elodie', '90'), ('Elyne', '12554'), ('Ema', '147'), ('Ema', '2937'), ('Ema', '78'), ('Ema', '8056'), ('Emelyn', '12728'), ('Emi', '3880'), ('Emilia', '43'), ('Emiliana', '271'), ('Emiliana', '987'), ('Emilie', '1440'), ('Emilija', '24'), ('Emiliya', '541'), ('Emily', '1676'), ('Emily', '236'), ('Emily', '328'), ('Emily', '49709'), ('Emily', '940'), ('Emily J', '964'), ('Emina', '3029'), ('Emma', '1015'), ('Emma', '206'), ('Emma', '236'), ('Emma', '491'), ('Emma', '5466'), ('Emma', '77512'), ('Emma', '96'), ('Emma Christine', '65'), ('Emmanuelle', '118'), ('Emmanuelle', '513'), ('Emmanuelle', '978'), ('En Pei', '52'), ('Ena', '323'), ('Ena', '500'), ('Eri', '34570'), ('Erica', '472'), ('Erika', '12098'), ('Erika', '185'), ('Erika', '30'), ('Erika', '53764'), ('Erika', '703'), ('Erika', '98697'), ('Erin', '1216'), ('Erin', '4140'), ('Erina', '1225'), ('Esen', '69'), ('Estela', '376'), ('Estelle', '32414'), ('Estelle', '7575'), ('Ester', '3908'), ('Estrella', '126811'), ('Etsuko', '7147'), ('Eudice Wong', '976'), ('Eugenia', '36'), ('Eugenie', '173'), ('Eugenie', '204628'), ('Eugeniya', '20989'), ('Eva', '1250'), ('Eva', '190592'), ('Eva', '249'), ('Eva', '267'), ('Eva', '28'), ('Eva', '40'), ('Eva', '503'), ('Eva', '53947'), ('Eva', '64840'), ('Eva', '6841'), ('Eva', '705'), ('Eva', '821'), ('Eva Marie', '41'), ('Eveliina', '744'), ('Evelyn', '27011'), ('Evgenia', '59775'), ('Evgeniya', '203969'), ('Evgeniya', '2107'), ('Evgeniya', '63'), ('Evgeniya', '842'), ('Fang Ying', '7755'), ('Fangzhou', '33388'), ('Fanny', '2231'), ('Fanny', '9029'), ('Farah', '167'), ('Fatima', '10865'), ('Fatimah', '898'), ('Fatma', '21261'), ('Fatyha', '80'), ('Federica', '1086'), ('Federica', '1817'), ('Federica', '21862'), ('Federica', '24242'), ('Federica', '7015'), ('Federica', '795'), ('Federica Joe', '44'), ('Fernanda', '17563'), ('Fernanda', '24'), ('Ferny', '78'), ('Fiona', '1459'), ('Fiona', '15077'), ('Fiona', '1594'), ('Fiona', '89'), ('Flavia', '1006803'), ('Flavia', '3709'), ('Flavia', '546'), ('Florencia', '1347'), ('Florencia', '88014'), ('Frances', '359'), ('Francesca', '1134'), ('Francesca', '1279791'), ('Francesca', '1304'), ('Francesca', '188'), ('Francesca', '2340'), ('Francesca', '3092'), ('Francesca', '3582'), ('Francesca', '3788'), ('Francesca', '4811'), ('Francesca', '5934'), ('Francesca', '60'), ('Francesca', '63'), ('Francisca', '157'), ('Francoise', '21685'), ('Franziska', '25'), ('Franziska', '969'), ('Frederikke', '9'), ('Freya', '6525'), ('Gabriela', '18658'), ('Gabriela', '24'), ('Gabriela', '2641'), ('Gabriela', '27322'), ('Gabriela', '310'), ('Gabriela', '37550'), ('Gabriela', '3975'), ('Gabriela', '712'), ('Gabriela', '862'), ('Gabriela', '9573'), ('Gabriela', '996'), ('Gabriela Nicole', '468'), ('Gabriella', '305'), ('Gabriella', '480'), ('Gabriella', '5394'), ('Gabrielle Faith', '1093'), ('Gaelle', '464'), ('Gaelle', '536'), ('Gaia', '7998'), ('Gail', '38651'), ('Galina', '265162'), ('Galina', '37795'), ('Ganna', '11552'), ('Ganna', '18584'), ('Garbine', '412872'), ('Gebriela', '143'), ('Genevieve', '440'), ('Georgia', '9600'), ('Georgia Andreea', '1848'), ('Georgiana', '48'), ('Georgina', '11547'), ('Georgina', '22'), ('Ghislaine', '290'), ('Giada', '677'), ('Gioia', '31741'), ('Giorgia', '1521'), ('Giorgia', '178'), ('Giorgia', '785'), ('Giorgie', '13'), ('Giovanna', '289'), ('Giulia', '1140'), ('Giulia', '120'), ('Giulia', '1833'), ('Giulia', '1884'), ('Giulia', '2634'), ('Giulia', '33872'), ('Giulia', '5466'), ('Giulia', '59'), ('Giulia', '59436'), ('Giulia', '76'), ('Giuliana', '2935'), ('Gloria', '1297'), ('Gozal', '2864'), ('Grace', '70529'), ('Grace', '84'), ('Gracia', '7999'), ('Greetje', '6168'), ('Greta', '240126'), ('Greta', '69'), ('Guadalupe', '6439'), ('Guadalupe', '7838'), ('Guillermina', '576'), ('Guiomar', '687'), ('Gulben', '410'), ('Gulchekhra', '18'), ('Gulnaz', '39'), ('Guzal', '775'), ('Gyulnara', '238'), ('Habiba', '811'), ('Hae Sung', '8180'), ('Haine', '294'), ('Hana', '3'), ('Hana', '346'), ('Hana', '64'), ('Hanna', '2243'), ('Hanna', '539'), ('Hanyu', '4643'), ('Hao Chen', '9631'), ('Hao Ching', '224'), ('Harmony', '5944'), ('Harriet', '8608'), ('Haruka', '3633'), ('Haruna', '1873'), ('Hayley', '1679'), ('Hazal', '78'), ('Heather', '202780'), ('Heidi', '88542'), ('Helen', '198'), ('Helen', '841'), ('Helene', '3856'), ('Helene', '72'), ('Hikari', '122'), ('Hilda', '10191'), ('Himari', '3'), ('Hiroko', '27580'), ('Hirono', '4368'), ('Ho Ching', '2371'), ('Hollie', '24'), ('Hongrui', '1063'), ('Hortencia', '98'), ('Hsin Yuan', '120'), ('Hua Chen', '7367'), ('Huijie', '118'), ('Hulya', '7797'), ('Hye Min', '1222'), ('Hyojung', '870'), ('Hyun Hui', '8301'), ('I Hsuan', '511'), ('Iana', '395'), ('Ida', '467'), ('Idia', '45'), ('Iga', '916'), ('Ilay', '52'), ('Ilka', '1142'), ('Ilona', '26950'), ('Ilze', '1527'), ('Imane Maelle', '1676'), ('Ina', '292'), ('Inci', '406'), ('India', '762'), ('Indire', '12633'), ('Indy', '17382'), ('Ineke', '1358'), ('Ines', '172'), ('Ines', '2344'), ('Ines', '37020'), ('Ines', '78'), ('Ines', '796'), ('Inger', '221'), ('Ingrid', '1253'), ('Ingrid', '2218'), ('Ingrid Alexandra', '4766'), ('Ingrid Esperanza', '10133'), ('Intissar', '33'), ('Ioana', '128'), ('Ioana', '211'), ('Ioana', '227'), ('Ioana', '659'), ('Ioana Diana', '2403'), ('Ioana Loredana', '5425'), ('Ionela Andreea', '6948'), ('Ipek', '13029'), ('Ipek', '25946'), ('Ipek', '377'), ('Irena', '88369'), ('Irene', '3133'), ('Irina', '152780'), ('Irina', '17'), ('Irina', '194'), ('Irina', '20'), ('Irina', '21221'), ('Irina', '3018'), ('Irina', '57224'), ('Irina', '65224'), ('Irina Camelia', '293366'), ('Irina Maria', '13843'), ('Iris', '4743'), ('Iryna', '234'), ('Iryna', '3471'), ('Iryna', '84139'), ('Isabel', '6688'), ('Isabela', '714'), ('Isabella', '166'), ('Isabella', '27'), ('Isabella', '36746'), ('Isabella', '36973'), ('Isabella', '9564'), ('Isabelle', '4054'), ('Isabelle', '723'), ('Iulia Maria', '74'), ('Iva', '3235'), ('Iva', '7087'), ('Ivana', '1531'), ('Ivana', '23892'), ('Ivana', '75330'), ('Ivana', '95'), ('Ivania', '2094'), ('Ivanka', '291'), ('Iveta', '443695'), ('Ivette', '543'), ('Ivone', '253'), ('Ivonne', '13010'), ('Jacqueline', '22928'), ('Jacqueline', '4093'), ('Jacqueline', '441'), ('Jada', '64'), ('Jade', '1023'), ('Jade', '17071'), ('Jade', '239'), ('Jade', '7876'), ('Jaeda', '1375'), ('Jaimee', '5007'), ('Jaimy Gayle', '24'), ('Jainy', '761'), ('Jamie', '170487'), ('Jamie', '20510'), ('Jamilya', '18'), ('Jan', '10947'), ('Jana', '110902'), ('Jana', '121823'), ('Jana', '20650'), ('Jana', '465'), ('Jana', '5161'), ('Jana', '9371'), ('Janette', '143422'), ('Janina', '12525'), ('Janja', '72'), ('Janneke', '861'), ('Jaqueline Adina', '5416'), ('Jara', '464'), ('Jarmila', '333150'), ('Jasmin', '1214'), ('Jasmin', '24180'), ('Jasmin', '659'), ('Jasmin', '8400'), ('Jasmina', '36744'), ('Jasmina', '7118'), ('Jasmine', '14865'), ('Jasmine Amber', '142'), ('Jawairiah', '822'), ('Jazmin', '908'), ('Jazzamay', '628'), ('Jeannine', '3426'), ('Jelena', '101685'), ('Jelena', '1733205'), ('Jelena', '296'), ('Jelena', '44294'), ('Jelena', '626517'), ('Jelena', '64'), ('Jelena', '711'), ('Jelena', '777'), ('Jelena', '7887'), ('Jennifer', '1228'), ('Jennifer', '2350'), ('Jennifer', '35193'), ('Jennifer', '42451'), ('Jenny', '1002'), ('Jesika', '17819'), ('Jessica', '1283'), ('Jessica', '1784'), ('Jessica', '2284'), ('Jessica', '2581'), ('Jessica', '391'), ('Jessica', '45'), ('Jessica', '487'), ('Jessica', '6021'), ('Jessica', '64277'), ('Jessica', '65879'), ('Jessica', '7751'), ('Jessica', '895'), ('Jessica', '921'), ('Jessika', '4122'), ('Jessy', '923'), ('Ji Hee', '321'), ('Ji Hee', '6858'), ('Ji Young', '8592'), ('Jia', '52'), ('Jia Jing', '48117'), ('Jia Qi', '4612'), ('Jiahui', '1553'), ('Jiakang', '15'), ('Jiatian', '100'), ('Jiaxi', '3002'), ('Jiaxue', '96'), ('Jie', '610820'), ('Jil Belen', '13978'), ('Jil Nora', '611'), ('Jill', '359013'), ('Jillian', '1991'), ('Jin', '15'), ('Jin A', '46355'), ('Jin Ju', '414'), ('Jing Jing', '68925'), ('Joana', '1050'), ('Joana', '905'), ('Joanna', '472'), ('Joanne', '15'), ('Jodie Anna', '355'), ('Johana', '40'), ('Johanna', '264234'), ('Johanna', '288192'), ('Johanna', '681'), ('Jordana', '1092'), ('Josepha', '2710'), ('Josephine', '4980'), ('Josie', '804'), ('Jovana', '128'), ('Jovana', '39142'), ('Ju Eun', '3453'), ('Judith', '3'), ('Jule', '63'), ('Julia', '10236'), ('Julia', '103781'), ('Julia', '108628'), ('Julia', '164'), ('Julia', '1967'), ('Julia', '204'), ('Julia', '30040'), ('Julia', '323'), ('Julia', '406'), ('Julia', '4145'), ('Julia', '4433'), ('Julia', '4777'), ('Julia', '506901'), ('Julia', '522'), ('Julia', '6411'), ('Julia', '68207'), ('Julia', '6904'), ('Julia', '7'), ('Julia', '7687'), ('Julia', '7882'), ('Julia', '8307'), ('Julia', '9864'), ('Julia Mansano', '21'), ('Juliana', '414'), ('Juliana Rocha', '129'), ('Julie', '1368'), ('Julie', '154138'), ('Julie', '216'), ('Julie', '333'), ('Julie', '476'), ('Julieta Lara', '4093'), ('Julita', '286'), ('Julyette Maria Josephine', '1446'), ('June', '114'), ('Junri', '128183'), ('Justina', '36'), ('Justine', '38541'), ('Justine', '877'), ('Justyna', '30304'), ('Kady', '467'), ('Kai Chen', '172004'), ('Kai Lin', '37817'), ('Kaia', '625836'), ('Kaitlin', '416'), ('Kaitlyn', '3329'), ('Kaitlyn', '576'), ('Kaja', '1176'), ('Kajsa', '2280'), ('Kamila', '12906'), ('Kamilla', '249'), ('Kamonwan', '5866'), ('Kana', '1536'), ('Kanae', '20142'), ('Kanako', '229'), ('Kanami', '3724'), ('Kanika', '919'), ('Kaori', '8406'), ('Karen', '15555'), ('Karen', '16614'), ('Kariann', '85'), ('Karin', '12185'), ('Karin', '197'), ('Karin', '236630'), ('Karin', '5508'), ('Karina', '33'), ('Karina', '4334'), ('Karina', '4988'), ('Karina Ildor', '5493'), ('Karina Kristina', '410'), ('Karine', '1936'), ('Karis', '1003'), ('Karla', '3127'), ('Karman', '3193'), ('Karola Patricia', '776'), ('Karolayne', '465'), ('Karolina', '10538'), ('Karolina', '159'), ('Karolina', '16815'), ('Karolina', '175'), ('Karolina', '18043'), ('Karolina', '200'), ('Karolina', '337'), ('Karolina', '33846'), ('Karolina', '39'), ('Karolina', '431365'), ('Karolina', '48'), ('Karolina', '925'), ('Karoline', '910'), ('Karyn', '330'), ('Kassandra', '704'), ('Katalin', '112562'), ('Katarina', '1101'), ('Katarina', '271'), ('Katarina', '437442'), ('Katarina', '4598'), ('Katarina', '891'), ('Katarzyna', '230'), ('Katarzyna', '25598'), ('Katarzyna', '67902'), ('Kate', '34'), ('Katerina', '10237'), ('Katerina', '13368'), ('Katerina', '190'), ('Katerina', '24682'), ('Katerina', '29566'), ('Katerina', '82902'), ('Kateryna', '1713'), ('Kateryna', '30'), ('Kateryna', '356602'), ('Kateryna', '422'), ('Kateryna', '76271'), ('Katharina', '11829'), ('Katharina', '1517'), ('Katharina', '1571'), ('Katharina', '2605'), ('Katharina', '7073'), ('Katharine', '363'), ('Katherine', '1977'), ('Katherine', '4906'), ('Katherine', '960'), ('Katherine Gabriela', '1894'), ('Kathinka', '15970'), ('Kathrin', '141281'), ('Katie', '16716'), ('Katie', '5045'), ('Katie', '735'), ('Katie', '7539'), ('Katrine Isabel', '308'), ('Katy', '11572'), ('Katya', '515'), ('Katyarina', '97'), ('Kayla', '124'), ('Kayla', '13573'), ('Kaylah', '237'), ('Kazusa', '10107'), ('Kei', '294'), ('Kelia', '324'), ('Kelly', '4105'), ('Kelly', '600'), ('Kelly S', '5880'), ('Kelsey', '410'), ('Kennedy', '653'), ('Keren', '24062'), ('Keri', '894'), ('Kerstin', '942'), ('Khristina', '3233'), ('Khristina', '515'), ('Ki Ryang', '86'), ('Kiki', '214121'), ('Kim', '4473'), ('Kim', '53'), ('Kim', '54'), ('Kim Alice', '12388'), ('Kimberley', '288'), ('Kimberley', '5105'), ('Kimberly', '4831'), ('Kimika', '272'), ('Kimiko', '270102'), ('Kinnie', '15102'), ('Kirsten', '382453'), ('Kirsten', '624'), ('Kirsten Andrea', '462'), ('Klaartje', '5818'), ('Klara', '1738'), ('Klara', '566453'), ('Klaudia', '4809'), ('Komola', '701'), ('Korina', '21417'), ('Kotomi', '4962'), ('Krista', '17577'), ('Kristie', '34647'), ('Kristina', '105'), ('Kristina', '133889'), ('Kristina', '200972'), ('Kristina', '224'), ('Kristina', '261445'), ('Kristina', '4277'), ('Kristina', '772'), ('Kristina', '9'), ('Kristina N', '555'), ('Kristy', '1899'), ('Kristyna', '148477'), ('Kristyna', '251'), ('Ksenia', '12596'), ('Ksenia', '131'), ('Ksenia', '1635'), ('Ksenia', '211151'), ('Ksenia', '26842'), ('Ksenia', '325'), ('Ksenia', '449'), ('Ksenia', '56579'), ('Ksenia', '61432'), ('Kseniia', '298'), ('Ksenija', '625'), ('Kumiko', '56212'), ('Kurumi', '177170'), ('Kveta', '210101'), ('Kwan Yau', '403'), ('Kyle', '3200'), ('Kylie', '1236'), ('Kyoka', '9036'), ('Kyra', '542'), ('Kyra', '6681'), ('Kyra', '94799'), ('Kyung Mi', '26059'), ('Laetitia', '6078'), ('Laili', '595'), ('Lamis', '456'), ('Lara', '10993'), ('Lara', '161059'), ('Lara', '164'), ('Lara', '5229'), ('Lara', '6'), ('Lara', '7'), ('Larikah', '255'), ('Laura', '11073'), ('Laura', '13464'), ('Laura', '146176'), ('Laura', '160614'), ('Laura', '183089'), ('Laura', '2183'), ('Laura', '261'), ('Laura', '302'), ('Laura', '439'), ('Laura', '456'), ('Laura', '468'), ('Laura', '519'), ('Laura', '59763'), ('Laura', '60'), ('Laura', '97'), ('Laura D', '281'), ('Laura Ioana', '33822'), ('Laura Sofia', '97'), ('Lauren', '1532'), ('Lauren', '156236'), ('Lauren', '16732'), ('Lauren', '69'), ('Lauren', '70159'), ('Lauren', '79'), ('Lauryn', '207'), ('Lavinia', '23897'), ('Laylo', '39'), ('Layne', '22'), ('Lea', '306'), ('Lea', '3365'), ('Lea', '526'), ('Leah', '152'), ('Lee', '733'), ('Lena', '107'), ('Lena', '1196'), ('Lena', '26631'), ('Lena', '63'), ('Lena Marie', '14942'), ('Lenka', '3230'), ('Lenka', '40435'), ('Lenka', '50987'), ('Lenka', '69314'), ('Lenka', '934'), ('Leolia', '750'), ('Leonie', '672'), ('Lesedi Sheya', '286'), ('Lesia', '225987'), ('Lesley', '42925'), ('Leslie', '173'), ('Leticia', '45115'), ('Leticia Garcia', '87'), ('Leylah Annie', '48'), ('Li', '1696'), ('Liana Gabriela', '59997'), ('Libby', '2362'), ('Libi', '522'), ('Lidia', '169'), ('Lidziya', '6809'), ('Liezel', '39782'), ('Liga', '23411'), ('Lilla', '1960'), ('Lin', '40341'), ('Lina', '175'), ('Lina', '17750'), ('Lina', '3217'), ('Lina', '69089'), ('Lina', '804'), ('Lina', '82'), ('Linda', '1754'), ('Linda', '2417'), ('Linda', '45'), ('Lindsay', '142454'), ('Lindsey', '500'), ('Ling', '64525'), ('Liniques', '72'), ('Linnea', '697'), ('Lisa', '1019'), ('Lisa', '111'), ('Lisa', '2271'), ('Lisa', '27408'), ('Lisa', '30427'), ('Lisa', '532884'), ('Lisa', '97'), ('Lisa Maria', '7898'), ('Lisa Marie', '1202'), ('Lisa Marie', '381'), ('Lisanne', '8284'), ('Liubov', '2662'), ('Livia', '128'), ('Liz Tatiane', '2216'), ('Lizaveta', '135'), ('Lizette', '11623'), ('Lorenza', '33'), ('Lorraine M', '40'), ('Lou', '10143'), ('Lou', '24'), ('Loudmilla', '6'), ('Louisa', '50700'), ('Louise', '1286'), ('Louise', '149'), ('Louise', '198'), ('Lourdes', '371035'), ('Lu', '3445'), ('Luca', '1013'), ('Lucia', '1002'), ('Lucia', '12855'), ('Lucia', '17'), ('Lucia', '215'), ('Lucia', '2413'), ('Lucia', '52'), ('Lucia', '554'), ('Lucia', '77'), ('Luciana', '24'), ('Luciana', '8281'), ('Lucie', '11037'), ('Lucie', '152'), ('Lucie', '318382'), ('Lucie', '778801'), ('Lucrezia', '1589'), ('Lucy', '6542'), ('Ludmila', '645'), ('Ludmilla', '1187'), ('Luisa', '1373'), ('Luisa', '298'), ('Luisa Marie', '1822'), ('Luksika', '77519'), ('Lulu', '304'), ('Luna', '15'), ('Lusine', '377'), ('Lutfiye', '876'), ('Lyann', '30'), ('Lynn', '190'), ('Lynn', '647'), ('Lyudmyla', '54172'), ('Macall', '12379'), ('Macarena', '2133'), ('Madalina', '62938'), ('Maddison', '2434'), ('Madeleine', '715'), ('Madeline', '147'), ('Madina', '6'), ('Madison', '172851'), ('Madison', '284'), ('Madison', '303633'), ('Madrie', '2266'), ('Maegan', '525'), ('Mafalda', '163'), ('Maftuna', '54'), ('Magali', '1917'), ('Magalie', '511'), ('Magda', '103659'), ('Magdalena', '16523'), ('Magdalena', '209'), ('Magdalena', '2783'), ('Magdalena', '372858'), ('Magdalena', '57'), ('Magdalena', '9427'), ('Magy', '756'), ('Mahak', '154'), ('Mahitha', '395'), ('Mai', '16929'), ('Mai', '562'), ('Mai', '833'), ('Mai', '849'), ('Maia', '1235'), ('Maia A', '12'), ('Maiko', '11320'), ('Maileen', '83'), ('Mailen', '39523'), ('Maja', '88'), ('Maja', '979'), ('Makiho', '5592'), ('Makoto', '14129'), ('Malene', '316'), ('Malika', '323'), ('Malin', '2489'), ('Mallaurie', '688'), ('Mallory', '44497'), ('Malou', '3073'), ('Mami', '96'), ('Man Ying Maggie', '102'), ('Mana', '9593'), ('Mananchaya', '15'), ('Manca', '2070'), ('Mandy', '191721'), ('Mandy', '2046'), ('Manisha', '3112'), ('Manon', '14056'), ('Manon', '552'), ('Manya', '93'), ('Mara', '702'), ('Marcela', '118'), ('Marcela', '16352'), ('Marcela', '320'), ('Marcela Guimaraes', '683'), ('Marcelina', '33'), ('Marcella', '13037'), ('Margalita', '99836'), ('Margarida', '1997'), ('Margarita', '16824'), ('Margarita', '60475'), ('Margarita', '966'), ('Margaux', '209'), ('Margaux', '57'), ('Margaux', '631'), ('Margaux', '8'), ('Margot', '414'), ('Margot', '4305'), ('Margot', '68'), ('Mari', '32785'), ('Mari', '5301'), ('Maria', '1023'), ('Maria', '1069'), ('Maria', '111'), ('Maria', '12063'), ('Maria', '238'), ('Maria', '25'), ('Maria', '2549520'), ('Maria', '29169'), ('Maria', '381'), ('Maria', '41999'), ('Maria', '43077'), ('Maria', '437'), ('Maria', '58599'), ('Maria', '59'), ('Maria', '5975'), ('Maria', '622'), ('Maria', '69'), ('Maria', '773249'), ('Maria', '780'), ('Maria', '84951'), ('Maria', '9939'), ('Maria Agustina', '185'), ('Maria Andrea', '323'), ('Maria Camila', '148'), ('Maria Constanza De Las Mercedes', '1892'), ('Maria Del Rosario', '296'), ('Maria Elena', '296736'), ('Maria Fernanda', '2708'), ('Maria Fernanda', '56363'), ('Maria Fernanda', '82186'), ('Maria Jesus', '294'), ('Maria Joao', '72682'), ('Maria Jose', '1838'), ('Maria Jose', '411921'), ('Maria Lourdes', '156'), ('Maria Paulina', '1388'), ('Maria Teresa', '106375'), ('Mariam', '4060'), ('Mariana', '115'), ('Mariana', '1224'), ('Mariana', '194050'), ('Mariana', '2215'), ('Mariana', '3654'), ('Marianna', '627'), ('Marianna', '9551'), ('Marianne', '1090'), ('Mariaryeni', '226'), ('Marie', '10527'), ('Marie', '1210'), ('Marie', '12486'), ('Marie', '384'), ('Marie', '889'), ('Marie Eve', '114687'), ('Mariia', '206'), ('Marija', '20451'), ('Marija', '30'), ('Marijana', '3'), ('Marina', '17497'), ('Marina', '219'), ('Marina', '262043'), ('Marina', '34536'), ('Marina', '38215'), ('Marina', '388'), ('Marina', '7740'), ('Marina', '849'), ('Marina', '885'), ('Marine', '4314'), ('Marion', '1266653'), ('Marion', '5632'), ('Mariona', '4'), ('Marisa', '1026'), ('Mariya', '154484'), ('Marketa', '18286'), ('Marlies', '1624'), ('Marrit', '1339'), ('Marta', '193960'), ('Marta', '263'), ('Marta', '301'), ('Marta', '325'), ('Marta', '338'), ('Marta', '5557'), ('Marta', '66109'), ('Marta', '826'), ('Marta Huqi', '778'), ('Martha', '153'), ('Martina', '10707'), ('Martina', '12291'), ('Martina', '13935'), ('Martina', '1394'), ('Martina', '14434'), ('Martina', '1534'), ('Martina', '15861'), ('Martina', '1689'), ('Martina', '1736'), ('Martina', '230'), ('Martina', '24123'), ('Martina', '265'), ('Martina', '28'), ('Martina', '3440'), ('Martina', '483'), ('Martina', '7042'), ('Mary', '653'), ('Mary Ann', '102'), ('Maryna', '84453'), ('Maryna', '972'), ('Masa', '116481'), ('Masa', '991'), ('Mathilde', '1249'), ('Mathilde', '242988'), ('Mathilde', '377'), ('Mathilde', '525'), ('Matilda', '3466'), ('Maud', '210'), ('Maureen', '219'), ('Maurien', '138'), ('Maxine', '390'), ('May', '225'), ('Maya', '10489'), ('Maya', '12849'), ('Maya', '272'), ('Maya', '58'), ('Mayar', '1696'), ('Mayar', '92'), ('Mayo', '32445'), ('Mayya', '9064'), ('Megan', '13001'), ('Megan', '253'), ('Megumi', '407'), ('Mei Xu', '40'), ('Meiling', '417'), ('Meiqi', '96'), ('Melanie', '225546'), ('Melanie', '65170'), ('Melanie', '7209'), ('Melanie', '87711'), ('Melany Solange', '97'), ('Melina', '2609'), ('Melinda', '290299'), ('Melis', '19804'), ('Melis', '392'), ('Melisa', '340'), ('Melissa', '200'), ('Melissa Ishuan', '171'), ('Meng Ning', '542'), ('Mercedes', '48'), ('Merel', '101'), ('Meritxell', '284'), ('Mervana', '102693'), ('Mi', '24569'), ('Mi Jeong', '176'), ('Mi Rae', '1858'), ('Mi Zhuoma', '72'), ('Mia Nicole', '1098'), ('Micaela', '230'), ('Michaela', '2237'), ('Michaela', '2300'), ('Michaela', '32049'), ('Michaela', '34262'), ('Michaela', '4204'), ('Michaela', '713'), ('Michaela', '821'), ('Michaella', '242619'), ('Michela', '90'), ('Michele Alexandra', '596'), ('Michelle', '159005'), ('Michelle', '282'), ('Michelle', '877'), ('Michika', '3657'), ('Mihaela', '69242'), ('Mihaela Lorena', '15'), ('Miharu', '21205'), ('Mihika', '427'), ('Mihoki', '201'), ('Miki', '24542'), ('Mila', '107'), ('Milagros', '42'), ('Milana', '14123'), ('Milena', '279'), ('Milica', '63'), ('Min', '1884'), ('Min Hwa', '9938'), ('Minami', '96'), ('Mira', '1626'), ('Mirabelle', '1977'), ('Miranda', '180'), ('Miriam', '1312'), ('Miriam', '2513'), ('Miriam Bianca', '1458'), ('Miriana', '1180'), ('Mirjam', '272'), ('Mirjana', '331434'), ('Misa', '1472'), ('Misa', '54509'), ('Misaki', '203782'), ('Mitsumi', '309'), ('Miyabi', '22840'), ('Miyu', '23968'), ('Mizuno', '2927'), ('Molly', '32'), ('Molly', '533'), ('Momoko', '2061'), ('Mona', '282445'), ('Monica', '164200'), ('Monica', '423109'), ('Monika', '1145'), ('Monika', '95'), ('Monique', '1028'), ('Monique', '106781'), ('Monique', '6295'), ('Montserrat', '23564'), ('Morgane', '548'), ('Morgane', '6358'), ('Moulika', '15'), ('Mouna', '12'), ('Moyuka', '32'), ('Muazzez', '6'), ('Muge', '162'), ('Myrtille', '43550'), ('Na', '1358928'), ('Na Lae', '26185'), ('Na Ri', '19223'), ('Nadezda', '5027'), ('Nadia', '1361265'), ('Nadia', '14772'), ('Nadia', '17280'), ('Nadia', '2166'), ('Nadia', '5642'), ('Nadiya', '51346'), ('Nadiya', '5250'), ('Nadja', '2661'), ('Nagi', '1535'), ('Naiktha', '4380'), ('Naima', '440'), ('Nam Yeon', '259'), ('Nan Nan', '3094'), ('Nanuli', '16494'), ('Nao', '59671'), ('Naoko', '857'), ('Naomi', '1979'), ('Naomi', '42'), ('Naomi', '5916'), ('Naomi', '60678'), ('Naomi', '94624'), ('Napatsakorn', '1945'), ('Nastassia', '72'), ('Nastassja', '65152'), ('Nastja', '29250'), ('Natalia', '146'), ('Natalia', '20251'), ('Natalia', '230'), ('Natalia', '2556'), ('Natalia', '283'), ('Natalia', '3027'), ('Natalia', '30786'), ('Natalia', '32336'), ('Natalia', '33'), ('Natalia', '7752'), ('Natalie', '1463'), ('Natalie', '193'), ('Natalie', '320'), ('Natalie', '37660'), ('Natalie', '403'), ('Natalie', '4298'), ('Natalie', '76568'), ('Natalie', '90'), ('Natalija', '1243'), ('Natalija', '12443'), ('Nataliya', '33'), ('Natasa', '14212'), ('Natasha', '1000'), ('Natasha', '36'), ('Natasha', '3641'), ('Natasha', '4673'), ('Natasha', '537'), ('Natasha', '5478'), ('Natela', '16303'), ('Natella', '649'), ('Nathalia', '28098'), ('Nathaly', '13241'), ('Natia', '2526'), ('Natsumi', '37183'), ('Natsumi', '798'), ('Nattawadee', '224'), ('Naz', '251'), ('Nazari', '980'), ('Neda', '8669'), ('Neda', '867'), ('Nelise', '142'), ('Nermeen', '279'), ('Nevena', '170'), ('Nicha', '30972'), ('Nicky', '2531'), ('Nicola', '26603'), ('Nicola', '3105'), ('Nicola', '3842'), ('Nicole', '11146'), ('Nicole', '114'), ('Nicole', '133'), ('Nicole', '23123'), ('Nicole', '2333'), ('Nicole', '2390'), ('Nicole', '24544'), ('Nicole', '289370'), ('Nicole', '3682'), ('Nicole', '44'), ('Nicole', '456'), ('Nicole', '5119'), ('Nicole', '784'), ('Nicole', '84098'), ('Nicole', '98'), ('Nicoleta Catalina', '8146'), ('Nicolette', '9627'), ('Nidhi', '5425'), ('Nigina', '47651'), ('Nika', '199'), ('Nika', '442'), ('Nika', '8479'), ('Nikita', '22'), ('Nikki', '614'), ('Nikol', '491'), ('Nikola', '1224'), ('Nikola', '142'), ('Nikola', '20210'), ('Nikola', '46787'), ('Nikola', '80'), ('Nikola', '90'), ('Nikola', '9980'), ('Nina', '116'), ('Nina', '126'), ('Nina', '155172'), ('Nina', '1588'), ('Nina', '17911'), ('Nina', '19346'), ('Nina', '21'), ('Nina', '2447'), ('Nina', '254'), ('Nina', '283'), ('Nina', '3131'), ('Nina', '778'), ('Nina Isabella', '115'), ('Nives', '2706'), ('Noel', '1558'), ('Noelia', '1475'), ('Noelia', '550'), ('Noelle', '1795'), ('Nonna', '134'), ('Noppawan', '73589'), ('Nora', '1082'), ('Nour', '120'), ('Nour', '640'), ('Nozomi', '1333'), ('Nudnida', '63013'), ('Nungnadda', '24523'), ('Nuria', '15836'), ('Nuria', '243280'), ('Oana', '148'), ('Oana', '948'), ('Oana Georgeta', '4294'), ('Oceane', '3040'), ('Oceane', '53813'), ('Ofri', '5372'), ('Oksana', '58279'), ('Ola', '3497'), ('Olawaseun', '2'), ('Olaya', '40'), ('Oleksandra', '1531'), ('Oleksandra', '440'), ('Oleksandra', '6729'), ('Olena', '436'), ('Olena', '48'), ('Olesya', '3811'), ('Olga', '14905'), ('Olga', '1592'), ('Olga', '165915'), ('Olga', '16849'), ('Olga', '172000'), ('Olga', '21423'), ('Olga', '22497'), ('Olga', '341060'), ('Olga', '7190'), ('Olga', '908'), ('Olga', '9590'), ('Olivia', '115102'), ('Olivia', '153'), ('Olivia', '4501'), ('Oliwia', '363'), ('Ons', '56242'), ('Ornella', '2133'), ('Oyku', '382'), ('Paige Mary', '147'), ('Pamela', '241'), ('Panna', '1446'), ('Paola', '403127'), ('Parris', '209'), ('Patcharin', '1188'), ('Patricia', '11034'), ('Patricia', '166'), ('Patricia', '185492'), ('Patricia', '247'), ('Patricia', '376'), ('Patricia', '589'), ('Patricia Maria', '43755'), ('Patrycja', '16980'), ('Patrycja', '534'), ('Patty', '7323'), ('Paula', '101053'), ('Paula', '1110'), ('Paula', '1136'), ('Paula', '118'), ('Paula', '13329'), ('Paula', '55625'), ('Paula', '60'), ('Paula Andrea', '269'), ('Paula Catalina', '3714'), ('Paula Cristina', '37384'), ('Paulina', '130'), ('Paulina', '1390'), ('Paulina', '1688'), ('Pauline', '309700'), ('Pauline', '3487'), ('Pavla', '4128'), ('Peangtarn', '26280'), ('Peggy', '1016'), ('Pei Chi', '8900'), ('Pei Hsuan', '24'), ('Pei Ju', '181'), ('Pemra', '60908'), ('Pernilla', '6573'), ('Petia', '1832'), ('Petra', '1304308'), ('Petra', '13266'), ('Petra', '2105'), ('Petra', '22'), ('Petra', '239025'), ('Petra', '2561'), ('Petra', '292551'), ('Petra', '36'), ('Petra', '38'), ('Petra', '5055'), ('Petra', '99437'), ('Phenomena', '3'), ('Phillis', '664'), ('Pia', '1798'), ('Pia', '9061'), ('Piia', '21340'), ('Pilar', '6404'), ('Pippa', '243'), ('Plobrung', '934'), ('Polina', '1119'), ('Polina', '14751'), ('Polina', '158'), ('Polina', '16816'), ('Polina', '170'), ('Polina', '179'), ('Polina', '19387'), ('Polina', '23884'), ('Polina', '280'), ('Polina', '3'), ('Polona', '318325'), ('Polona', '6891'), ('Poojashree', '13006'), ('Pranjala', '1214'), ('Prarthana G', '5687'), ('Prerna', '9318'), ('Priscila', '504'), ('Priscila', '6'), ('Priscilla', '1984'), ('Priscilla', '6219'), ('Qiang', '116857'), ('Qianhui', '683'), ('Qianqian', '641'), ('Qiu Yu', '2034'), ('Quinn', '646'), ('Quirine', '22978'), ('Rachael', '2592'), ('Rachel', '469'), ('Radina', '699'), ('Rafaela', '228'), ('Ralina', '40'), ('Raluca', '148701'), ('Raluca Elena', '9202'), ('Raluca Georgiana', '4258'), ('Ramu', '443'), ('Ramya', '161'), ('Ran', '14306'), ('Ran', '403'), ('Rana', '9'), ('Raquel', '1322'), ('Raquel', '29079'), ('Rashmi', '741'), ('Ratnika', '957'), ('Raveena', '5387'), ('Rebeca', '168'), ('Rebecca', '111308'), ('Rebecca', '22305'), ('Rebecca', '31058'), ('Rebecca', '342'), ('Rebeka', '1057'), ('Rebeka', '4746'), ('Regina', '122331'), ('Reina', '64'), ('Reka Luca', '66271'), ('Remi', '38116'), ('Renata', '193694'), ('Renata', '8162'), ('Ria', '5566'), ('Rianna', '984'), ('Richel', '84184'), ('Rika', '141257'), ('Riko', '23195'), ('Rio', '556'), ('Risa', '142'), ('Risa', '2634'), ('Risa', '59476'), ('Rishika', '8448'), ('Rita', '428'), ('Rita', '973'), ('Riya', '2634'), ('Roberta', '809611'), ('Robin', '12295'), ('Robyn', '1103'), ('Rocio', '108'), ('Rocio', '16778'), ('Romana', '29214'), ('Romana Caroline', '17020'), ('Romina', '253471'), ('Romy', '911'), ('Rona', '308'), ('Ronit', '3165'), ('Ronke', '49'), ('Roosh', '28'), ('Rosa', '111'), ('Rosalia', '803'), ('Rosalie', '164'), ('Rosalie', '716'), ('Rosie', '336'), ('Roxane', '38793'), ('Rui', '24'), ('Rushmi', '27452'), ('Rutuja', '3642'), ('Ryann', '597'), ('Saana', '195'), ('Sabastiani', '780'), ('Sabina', '2309'), ('Sabina', '287'), ('Sabina', '3071'), ('Sabina', '320'), ('Sabina', '43797'), ('Sabina Elena', '27'), ('Sabine', '590911'), ('Sabrina', '1904'), ('Sabrina', '211'), ('Sabrina', '3669'), ('Sabrina', '75'), ('Sabrina', '951'), ('Sacha', '78204'), ('Sachia', '49767'), ('Sachie', '42676'), ('Sadafmoh', '2275'), ('Sai Samhitha', '1034'), ('Saisai', '113359'), ('Sakiko', '9338'), ('Sally', '53480'), ('Salma', '57'), ('Salma', '9'), ('Samantha', '1089'), ('Samantha', '1365135'), ('Samantha', '26624'), ('Samantha', '302'), ('Samantha', '340'), ('Samantha', '44166'), ('Samira', '2020'), ('Sanae', '354'), ('Sanaz', '17975'), ('Sandra', '1054'), ('Sandra', '107'), ('Sandra', '11022'), ('Sandra', '1304'), ('Sandra', '15'), ('Sandra', '156294'), ('Sandra', '258'), ('Sandra', '37253'), ('Sandra', '45503'), ('Sandra', '4708'), ('Sandra', '491'), ('Sandra', '60'), ('Sandra', '8128'), ('Sandy', '224'), ('Sang Hee', '1277'), ('Sania', '272889'), ('Sara', '100'), ('Sara', '1142'), ('Sara', '129'), ('Sara', '1646'), ('Sara', '19'), ('Sara', '2439'), ('Sara', '327'), ('Sara', '3748'), ('Sara', '43349'), ('Sara', '58'), ('Sara', '644'), ('Sara', '861380'), ('Sarah', '26649'), ('Sarah', '293'), ('Sarah', '328'), ('Sarah', '354'), ('Sarah', '50'), ('Sarah', '50787'), ('Sarah Beth', '1270'), ('Sarah Rebecca', '13064'), ('Sarahi', '461'), ('Sarai Delfina', '148'), ('Saray', '2061'), ('Sari', '464'), ('Sarlota', '27'), ('Sarvinoz', '178'), ('Sasa', '316'), ('Saska', '2641'), ('Satsuki', '906'), ('Savannah', '70'), ('Schena', '148'), ('Se Hyun', '143'), ('Se Jin', '681'), ('Sean', '75'), ('Seda', '1469'), ('Seira', '144'), ('Selin', '169'), ('Seo Kyung', '6564'), ('Seone', '1312'), ('Serena', '4232828'), ('Sesil', '208108'), ('Seung Yeon', '6650'), ('Severine', '192296'), ('Shahar', '662926'), ('Shakhlo', '2122'), ('Shakhnoza', '198'), ('Shangqing', '111'), ('Shanshan', '2378'), ('Shao Yuan', '1363'), ('Sharmada', '4106'), ('Sharon', '117825'), ('Sharon Sanchana', '522'), ('Shelby', '100708'), ('Shelby', '1432'), ('Shelly', '142'), ('Sheng Nan', '53610'), ('Sherazad', '10094'), ('Sherazad', '12883'), ('Sherry', '801'), ('Shiho', '247'), ('Shiho', '39713'), ('Shilin', '9634'), ('Shiori', '18'), ('Shir', '117'), ('Shiran', '236'), ('Shivika', '4611'), ('Shou Na', '105'), ('Shreya', '6'), ('Shu Ying', '1483'), ('Shuai', '258237'), ('Shuai', '655592'), ('Shuko', '46124'), ('Shuo', '597'), ('Shuyue', '336'), ('Shweta', '3255'), ('Si Qi', '531'), ('Silvia', '13618'), ('Silvia', '204373'), ('Silvia', '2589'), ('Silvia', '291'), ('Silvia', '3'), ('Silvia', '821'), ('Simona', '1980'), ('Simona', '344'), ('Simona', '476'), ('Simona', '712373'), ('Simona', '9465'), ('Simone', '532'), ('Simone', '617'), ('Simran Kaur', '467'), ('Sina', '10360'), ('Sinead', '688'), ('Sing Le', '95'), ('Siqi', '716'), ('Sirui', '276'), ('Siyu', '87'), ('Sloane', '352458'), ('Smriti', '96'), ('Sneha', '134'), ('Snehadevi S', '2820'), ('So Jung', '47282'), ('So Ra', '18210'), ('Sofia', '108'), ('Sofia', '12858'), ('Sofia', '2114'), ('Sofia', '248'), ('Sofia', '26112'), ('Sofia', '364579'), ('Sofia', '462'), ('Sofia', '531'), ('Sofia', '5800'), ('Sofia', '71232'), ('Sofia', '96'), ('Sofico', '336'), ('Sofie', '10539'), ('Sofiya', '18371'), ('Sofya', '593'), ('Sofya', '8587'), ('Sohyun', '108'), ('Sonia', '480'), ('Sonja', '238'), ('Sonja', '4261'), ('Sophia', '96'), ('Sophie', '12367'), ('Sophie', '23823'), ('Sophie', '2800'), ('Sophie', '317'), ('Sorana', '457043'), ('Sowjanya', '2961'), ('Spurti', '159'), ('Sri Vaishnavi', '1744'), ('Stamatia', '8072'), ('Stanislava', '49412'), ('Stefana', '497'), ('Stefani', '126'), ('Stefania', '120'), ('Stefania', '1363'), ('Stefania', '19313'), ('Stefania', '210'), ('Stefania', '3891'), ('Stefanie', '2331'), ('Stefanie', '243897'), ('Stefanie', '309'), ('Stefanie', '700'), ('Steffi', '2233'), ('Steffi', '852'), ('Stephanie', '1012'), ('Stephanie', '1921'), ('Stephanie', '198461'), ('Stephanie', '27781'), ('Stephanie', '301101'), ('Stephanie', '353'), ('Stephanie', '3564'), ('Stephanie', '3988'), ('Stephanie', '681'), ('Stephanie', '69447'), ('Stephanie Mariel', '1397'), ('Storm', '21152'), ('Su Jeong', '33672'), ('Su Wei', '274936'), ('Suellen', '320'), ('Sultan', '1544'), ('Sun Jung', '6591'), ('Sunae', '15'), ('Sunam', '3594'), ('Sung Hee', '29509'), ('Sung Hee', '343'), ('Susan', '502'), ('Susanne', '16276'), ('Suzan', '344'), ('Suzuho', '324'), ('Suzy', '1054'), ('Svenja', '3'), ('Svenja', '6338'), ('Svetlana', '1852305'), ('Svetlana', '54282'), ('Sviatlana', '11201'), ('Sybille', '581'), ('Sylvia', '1626'), ('Sylwia', '8268'), ('Syna', '9001'), ('Szabina', '2127'), ('Tadeja', '83659'), ('Taisiya', '1050'), ('Talya', '45'), ('Tamachan', '843'), ('Tamar', '60'), ('Tamara', '15450'), ('Tamara', '15617'), ('Tamara', '19735'), ('Tamara', '3231'), ('Tamara', '42'), ('Tamara', '65'), ('Tamari', '304'), ('Tamarine', '594281'), ('Tamaryn', '40060'), ('Tamira', '322202'), ('Tammi', '26077'), ('Tanaporn', '764'), ('Tanya', '1229'), ('Tara', '54798'), ('Tatia', '42'), ('Tatiana', '12096'), ('Tatiana', '21926'), ('Tatiana', '57'), ('Tatiana', '716'), ('Tatjana', '160892'), ('Tatjana', '69370'), ('Tatsiana', '1289'), ('Tayisiya', '5051'), ('Taylor', '38766'), ('Taylor', '84'), ('Tea', '2127'), ('Teliana', '112570'), ('Tena', '12402'), ('Teodora', '155'), ('Teodora', '41206'), ('Teodora', '431'), ('Tereza', '173'), ('Tereza', '29622'), ('Tereza', '332'), ('Tereza', '33994'), ('Tereza', '3863'), ('Tereza', '48873'), ('Tereza', '528'), ('Tereza', '66177'), ('Tereza', '9800'), ('Terri', '18'), ('Tess', '7165'), ('Tessah', '9116'), ('Tetiana', '75337'), ('Tetyana', '43020'), ('Thai Sa Grana', '706'), ('Theo', '2249'), ('Theresa', '377'), ('Tijana', '333'), ('Timea', '195681'), ('Timea', '416391'), ('Tina', '541'), ('Tina', '57044'), ('Tinatin', '476'), ('Ting Fei', '8145'), ('Ting Jr', '8676'), ('Tingting', '151'), ('Tjasa', '3361'), ('Tomoko', '36'), ('Tomoko', '7395'), ('Tori', '10630'), ('Tornado Alicia', '1864'), ('Trang', '1884'), ('Treta', '736'), ('Tsvetana', '456422'), ('Tyra', '4543'), ('Ulrikke', '27118'), ('Ulyana', '2400'), ('Urszula', '275255'), ('Ushna', '413'), ('Usue Maitane', '7874'), ('Valentina', '338'), ('Valentine', '159'), ('Valentine', '9767'), ('Valentini', '15198'), ('Valentyna', '47854'), ('Valeria', '1848'), ('Valeria', '2107'), ('Valeria', '3395'), ('Valeria', '3495'), ('Valeria', '384'), ('Valeria', '393'), ('Valeria', '45'), ('Valeria', '51691'), ('Valeria', '538'), ('Valeria', '95259'), ('Valerie', '103'), ('Valerie', '6043'), ('Valeriya', '13150'), ('Valeriya', '1317'), ('Valeriya', '160'), ('Valeriya', '452'), ('Valeriya', '554'), ('Valeriya', '62'), ('Valeriya', '926'), ('Vanda', '10087'), ('Vanesa', '30669'), ('Vanessa', '71573'), ('Vanessa', '72'), ('Vania', '299530'), ('Vaniya', '255'), ('Vanja', '291'), ('Varatchaya', '54340'), ('Varunya', '3623'), ('Varvara', '11985'), ('Varvara', '388528'), ('Varvara', '57'), ('Varvara', '839'), ('Vasilisa', '1085'), ('Vasilisa', '41442'), ('Vaszilisza', '3763'), ('Vendula', '2221'), ('Venus', '2875425'), ('Vera', '141'), ('Vera', '143'), ('Vera', '1524624'), ('Vera', '192'), ('Vera', '395971'), ('Vera', '8066'), ('Verena', '1034'), ('Verena', '1597'), ('Verena', '387'), ('Veronica', '1464'), ('Veronica', '310'), ('Veronica', '520'), ('Veronica', '82249'), ('Veronica M', '1678'), ('Veronika', '117'), ('Veronika', '15659'), ('Veronika', '2045'), ('Veronika', '244'), ('Veronika', '256'), ('Veronika', '2862'), ('Veronika', '408'), ('Veronika', '51601'), ('Vesna', '169500'), ('Vicky', '77'), ('Victoire', '454'), ('Victoria', '10436'), ('Victoria', '13911'), ('Victoria', '170'), ('Victoria', '2024970'), ('Victoria', '21688'), ('Victoria', '221'), ('Victoria', '24'), ('Victoria', '26048'), ('Victoria', '40691'), ('Victoria', '4212'), ('Victoria', '438'), ('Victoria', '45'), ('Victoria Ariadna', '106'), ('Viktoria', '13506'), ('Viktoria', '13982'), ('Viktoria', '2703'), ('Viktoriia', '90'), ('Viktorija', '17970'), ('Viktorija', '61541'), ('Viktoriya', '179'), ('Viktoriya', '219'), ('Viktoriya', '25736'), ('Viktoriya', '92'), ('Viktoryia', '1561'), ('Viktoryia', '426'), ('Vilma Y', '27'), ('Vincenza', '105'), ('Vinciane', '37'), ('Violetta', '202'), ('Violetta', '96'), ('Virginie', '4444'), ('Virginie', '514764'), ('Vishesh', '71'), ('Vita', '64'), ('Vitalia', '106924'), ('Vitalia', '3'), ('Vivian', '1049'), ('Vivian', '29513'), ('Vivian', '5534'), ('Vivian', '618'), ('Vivien', '13041'), ('Vivienne', '8918'), ('Vlada', '22487'), ('Vlada', '91'), ('Vladica', '997'), ('Vladimira', '6470'), ('Vladislava', '1254'), ('Vladyslava', '2570'), ('Vojislava', '18781'), ('Voni', '1036'), ('Wan Ting', '11653'), ('Wan Yi', '42'), ('Warona', '9'), ('Wen Hsin', '40633'), ('Wen Ling', '120'), ('Wendy Qi Wen', '613'), ('Weronika Jasmina', '179'), ('Whitney', '5514'), ('Whitney', '90'), ('Wiktoria', '363'), ('Wing Yau Venise', '11694'), ('Wushuang', '879'), ('Xenia', '14578'), ('Xi Yao', '1445'), ('Xiao', '4789'), ('Xiaodi', '5057'), ('Xiaorong', '717'), ('Xiaoxi', '1352'), ('Ximena', '19066'), ('Ximena', '429'), ('Xin', '8744'), ('Xin Yu', '187'), ('Xinyu', '1207'), ('Xinyu', '9498'), ('Xinyun', '109256'), ('Xiyu', '315'), ('Xu Liu', '4535'), ('Ya', '24'), ('Ya Hsuan', '17078'), ('Yafan', '39687'), ('Yan', '4196'), ('Yana', '11316'), ('Yana', '114'), ('Yana', '16152'), ('Yana', '2526'), ('Yana', '270'), ('Yana', '490'), ('Yana', '8234'), ('Yang', '73'), ('Yanina', '1664'), ('Yanina', '600789'), ('Yanni', '275'), ('Yarden', '32'), ('Yaroslava', '404915'), ('Yasmin', '11217'), ('Yasmin', '34'), ('Yasmina', '27'), ('Yasmine', '1469'), ('Yasmine', '279'), ('Yasmyn', '71'), ('Yawna', '648'), ('Yayuk', '128509'), ('Ye Ra', '47867'), ('Ye Xin', '281'), ('Yekaterina', '3'), ('Yekaterina', '314'), ('Yekaterina', '59'), ('Yelena', '1856'), ('Yeong Won', '966'), ('Yevgeniya', '6288'), ('Yi', '13791'), ('Yi', '2644'), ('Yi', '3554'), ('Yi Fan', '60646'), ('Yi Jing', '22443'), ('Yi Miao', '61839'), ('Yidi', '136'), ('Yihong', '24'), ('Yijia', '366'), ('Ying', '3783'), ('Ying Ying', '107595'), ('Yixuan', '1380'), ('Ylena', '1546'), ('Ylona Georgiana', '1453'), ('Yoko', '285'), ('Yolande', '1381'), ('Yoo Ri', '182'), ('Yoon Young', '3592'), ('Yoshimi', '677'), ('Yosr', '75'), ('You Na', '242'), ('Ysaline', '27804'), ('Yu Jin', '452'), ('Yu Tong', '9'), ('Yuan', '281'), ('Yuanyi', '772'), ('Yue', '1259'), ('Yue Yue', '21360'), ('Yuenu', '682'), ('Yujia', '184'), ('Yuka', '3618'), ('Yuka', '8856'), ('Yukako', '84'), ('Yuki', '505'), ('Yuki Kristina', '2191'), ('Yukina', '998'), ('Yukun', '1828'), ('Yulia', '153672'), ('Yulia', '156'), ('Yulia', '364'), ('Yulia', '4'), ('Yulia', '48'), ('Yulia', '899'), ('Yuliana', '15030'), ('Yuliana', '218'), ('Yuliya', '139'), ('Yuliya', '164785'), ('Yuliya', '318'), ('Yuliya', '36939'), ('Yuliya', '4194'), ('Yumi', '10407'), ('Yumi', '9862'), ('Yung Jan', '229391'), ('Yuqi', '559'), ('Yurika', '101816'), ('Yuriko', '1060'), ('Yuriko', '668'), ('Yurina', '12693'), ('Yuuki', '15071'), ('Yuval', '45'), ('Yuxuan', '24279'), ('Yvonne', '246168'), ('Yvonne', '8323'), ('Zaineb', '87'), ('Zalina', '2052'), ('Zarah', '3809'), ('Zarina', '123243'), ('Zeel', '702'), ('Zeynep  Sena', '21'), ('Zhanlan', '2166'), ('Zhaoxuan', '20236'), ('Zhibek', '7'), ('Zhima', '99'), ('Zhou', '30'), ('Zhuoma', '121'), ('Zi', '11004'), ('Zi', '99286'), ('Zinovia', '74'), ('Ziyue', '1420'), ('Zoe', '2691'), ('Zoe', '81'), ('Zoe Gwen', '2877'), ('Zsofia', '1501'), ('Zuzana', '13007'), ('Zuzana', '161'), ('Zuzana', '193144'), ('Zuzana', '23632'), ('Zuzana', '36307'), ('Zuzanna', '2258')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT COUNT(country_code), country_code FROM players GROUP BY country_code",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT COUNT(country_code), country_code FROM players GROUP BY country_code;",,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50,,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT COUNT(tours), ranking_date FROM rankings GROUP BY ranking_date","Not match: [('0', '19870119'), ('0', '19870126'), ('0', '19870202'), ('0', '19870209'), ('0', '19870302'), ('0', '19870330'), ('0', '19870406'), ('0', '19870413'), ('0', '19870420'), ('0', '19870427'), ('0', '19870504'), ('0', '19870511'), ('0', '19870518'), ('0', '19870525'), ('0', '19870601'), ('0', '19870608'), ('0', '19870615'), ('0', '19870622'), ('0', '19870629'), ('0', '19870706'), ('0', '19870713'), ('0', '19870720'), ('0', '19870727'), ('0', '19870803'), ('0', '19870810'), ('0', '19870817'), ('0', '19870824'), ('0', '19870831'), ('0', '19870907'), ('0', '19870914'), ('0', '19870921'), ('0', '19870928'), ('0', '19871005'), ('0', '19871012'), ('0', '19871019'), ('0', '19871026'), ('0', '19871102'), ('0', '19871109'), ('0', '19871116'), ('0', '19871123'), ('0', '19871130'), ('0', '19871207'), ('0', '19871214'), ('0', '19871221'), ('0', '19871228'), ('0', '19880101'), ('0', '19880104'), ('0', '19880111'), ('0', '19880118'), ('0', '19880125'), ('0', '19880201'), ('0', '19880208'), ('0', '19880215'), ('0', '19880222'), ('0', '19880229'), ('0', '19880307'), ('0', '19880314'), ('0', '19880321'), ('0', '19880328'), ('0', '19880404'), ('0', '19880411'), ('0', '19880418'), ('0', '19880425'), ('0', '19880502'), ('0', '19880509'), ('0', '19880516'), ('0', '19880523'), ('0', '19880530'), ('0', '19880606'), ('0', '19880613'), ('0', '19880620'), ('0', '19880627'), ('0', '19880704'), ('0', '19880711'), ('0', '19880718'), ('0', '19880725'), ('0', '19880801'), ('0', '19880808'), ('0', '19880815'), ('0', '19880822'), ('0', '19880829'), ('0', '19880905'), ('0', '19880912'), ('0', '19880919'), ('0', '19880926'), ('0', '19881003'), ('0', '19881010'), ('0', '19881017'), ('0', '19881024'), ('0', '19881031'), ('0', '19881107'), ('0', '19881114'), ('0', '19890213'), ('0', '19890220'), ('0', '19890227'), ('0', '19890306'), ('0', '19890327'), ('0', '19890403'), ('10003', '20091019'), ('10025', '20091026'), ('1004', '20010212'), ('10061', '20091102'), ('1011', '20010507'), ('1011', '20010514'), ('10116', '20091109'), ('1013', '20000131'), ('10137', '20091116'), ('10204', '20091123'), ('10221', '20091207'), ('10238', '20091130'), ('1027', '20010219'), ('1027', '20010226'), ('1027', '20010305'), ('1027', '20010312'), ('10272', '20091214'), ('10272', '20091221'), ('1029', '20010521'), ('10318', '20091228'), ('10318', '20100101'), ('10318', '20100104'), ('10320', '20100111'), ('10329', '20100118'), ('10329', '20100125'), ('10372', '20100208'), ('10373', '20100201'), ('1038', '20000207'), ('1038', '20000214'), ('1038', '20000221'), ('1038', '20000228'), ('10389', '20100215'), ('10404', '20100222'), ('10412', '20100322'), ('10412', '20100329'), ('10430', '20100301'), ('10442', '20100308'), ('10442', '20100315'), ('10481', '20100405'), ('10515', '20100412'), ('10543', '20100419'), ('10576', '20100510'), ('10580', '20100426'), ('10590', '20100503'), ('10593', '20100517'), ('10613', '20100607'), ('10630', '20100614'), ('10634', '20100524'), ('10634', '20100531'), ('10634', '20100621'), ('10634', '20100628'), ('1065', '20000306'), ('1065', '20000313'), ('1065', '20000320'), ('1065', '20000327'), ('1065', '20000403'), ('1067', '20010528'), ('1067', '20010604'), ('10685', '20100705'), ('10726', '20100712'), ('1073', '20010625'), ('1073', '20010702'), ('10756', '20100719'), ('10817', '20100726'), ('10835', '20100802'), ('1093', '20000410'), ('1093', '20000417'), ('1093', '20000424'), ('10937', '20100809'), ('1094', '20010611'), ('1094', '20010618'), ('10999', '20100816'), ('1101', '20010319'), ('1101', '20010326'), ('11026', '20100823'), ('1106', '20000515'), ('1106', '20000522'), ('1106', '20000529'), ('1106', '20000605'), ('11125', '20100830'), ('11125', '20100906'), ('1113', '20010709'), ('1122', '20000501'), ('1122', '20000508'), ('11256', '20100913'), ('11290', '20100920'), ('11339', '20100927'), ('1135', '20010716'), ('11460', '20101004'), ('1149', '20010723'), ('1149', '20010730'), ('11566', '20101011'), ('11594', '20101018'), ('1160', '20000612'), ('1160', '20000619'), ('11617', '20101025'), ('11687', '20101101'), ('1173', '20001106'), ('11735', '20101108'), ('1175', '20010806'), ('1175', '20010813'), ('1175', '20010820'), ('118', '19950717'), ('118', '19950724'), ('118', '19950731'), ('118', '19950807'), ('118', '19950814'), ('11814', '20101115'), ('11845', '20101122'), ('1187', '20040510'), ('11877', '20101129'), ('1188', '20000626'), ('1188', '20000703'), ('11888', '20101206'), ('119', '19920824'), ('11904', '20101227'), ('11904', '20110101'), ('11907', '20101213'), ('11913', '20101220'), ('1201', '20010827'), ('1201', '20010903'), ('1204', '20000710'), ('1205', '20000717'), ('12060', '20110103'), ('12067', '20110110'), ('12094', '20110117'), ('12094', '20110124'), ('1212', '20000724'), ('12143', '20110131'), ('12181', '20110207'), ('12201', '20110221'), ('12204', '20110214'), ('1223', '20001002'), ('1224', '20000814'), ('1224', '20000821'), ('1224', '20000828'), ('1224', '20000904'), ('12254', '20110228'), ('12267', '20110307'), ('12267', '20110314'), ('1228', '20010910'), ('12303', '20110321'), ('12303', '20110328'), ('1231', '20000925'), ('1231', '20010917'), ('1232', '20001009'), ('12343', '20110404'), ('12398', '20110411'), ('1241', '20000911'), ('12422', '20110425'), ('12434', '20110418'), ('12438', '20110502'), ('1245', '20001023'), ('12467', '20110516'), ('1247', '20001030'), ('12482', '20110509'), ('125', '19960108'), ('125', '19960115'), ('125', '19960122'), ('125', '19960129'), ('125', '19960205'), ('125', '19960212'), ('125', '19960219'), ('12522', '20110523'), ('12522', '20110530'), ('1253', '20001016'), ('1263', '20010924'), ('1265', '20000918'), ('12659', '20110606'), ('1267', '20011008'), ('12682', '20110613'), ('12686', '20110620'), ('12686', '20110627'), ('1276', '20000731'), ('1276', '20000807'), ('12867', '20110704'), ('1287', '20011001'), ('1288', '20011015'), ('12895', '20110711'), ('1291', '20011022'), ('12927', '20110718'), ('12999', '20110801'), ('13006', '20110725'), ('13048', '20130318'), ('13081', '20110808'), ('131', '19950821'), ('131', '19950828'), ('131', '19950904'), ('131', '19950911'), ('131', '19950918'), ('131', '19950925'), ('131', '19951002'), ('131', '19951009'), ('131', '19951016'), ('131', '19951023'), ('131', '19951030'), ('131', '19951106'), ('1312', '20011029'), ('1312', '20011105'), ('13129', '20110815'), ('13140', '20110822'), ('13174', '20110829'), ('13174', '20110905'), ('13299', '20110912'), ('13342', '20110919'), ('13372', '20111003'), ('13382', '20110926'), ('13382', '20111010'), ('13411', '20111017'), ('13443', '20111024'), ('13443', '20111107'), ('13465', '20111031'), ('13482', '20111114'), ('13517', '20111128'), ('13518', '20111121'), ('13536', '20111212'), ('13542', '20111205'), ('13565', '20111219'), ('13603', '20111226'), ('13603', '20120101'), ('13610', '20120102'), ('13618', '20120116'), ('13618', '20120123'), ('13628', '20120109'), ('13666', '20120206'), ('13667', '20120130'), ('13674', '20120213'), ('13719', '20120220'), ('13788', '20120227'), ('13791', '20120305'), ('13791', '20120312'), ('138', '19951113'), ('138', '19951120'), ('138', '19951127'), ('138', '19951204'), ('138', '19951211'), ('138', '19951218'), ('138', '19951225'), ('138', '19960101'), ('13818', '20120319'), ('13818', '20120326'), ('13881', '20120402'), ('13902', '20120409'), ('13938', '20120416'), ('13949', '20121231'), ('13964', '20120423'), ('13966', '20130107'), ('13983', '20120430'), ('14015', '20120514'), ('14016', '20120507'), ('14034', '20120521'), ('14072', '20120611'), ('14087', '20120528'), ('14087', '20120604'), ('1412', '20011112'), ('1412', '20011119'), ('14138', '20120618'), ('14172', '20120625'), ('14172', '20120702'), ('14180', '20120709'), ('1422', '20020204'), ('1422', '20020211'), ('1422', '20020218'), ('14223', '20120716'), ('1424', '20020225'), ('1424', '20020304'), ('1424', '20020311'), ('14250', '20120723'), ('14264', '20120730'), ('14286', '20120806'), ('1430', '20011217'), ('1430', '20011224'), ('1430', '20011231'), ('1430', '20020101'), ('1430', '20020107'), ('1430', '20020114'), ('1430', '20020121'), ('1430', '20020128'), ('14331', '20120813'), ('14361', '20120820'), ('1437', '20011126'), ('1437', '20011203'), ('1437', '20011210'), ('14389', '20120827'), ('14389', '20120903'), ('14389', '20120910'), ('14402', '20120917'), ('14438', '20120924'), ('14449', '20130415'), ('14451', '20130422'), ('14462', '20130429'), ('14472', '20121001'), ('1448', '20020318'), ('1448', '20020325'), ('14480', '20121008'), ('14487', '20130506'), ('14513', '20121015'), ('14516', '20130513'), ('14525', '20121022'), ('14531', '20130520'), ('14545', '20130527'), ('14545', '20130603'), ('14547', '20121029'), ('14553', '20130610'), ('14554', '20130225'), ('14569', '20130617'), ('14585', '20121105'), ('14591', '20130408'), ('14599', '20130812'), ('14610', '20121203'), ('14612', '20121126'), ('14621', '20121112'), ('14624', '20121119'), ('14633', '20121217'), ('14639', '20121210'), ('14648', '20130101'), ('14649', '20121224'), ('14649', '20130218'), ('14650', '20130624'), ('14651', '20130211'), ('14651', '20130708'), ('14652', '20130204'), ('14667', '20130114'), ('14667', '20130121'), ('14667', '20130128'), ('14679', '20130805'), ('14689', '20130715'), ('14695', '20130304'), ('147', '19960226'), ('147', '19960304'), ('147', '19960311'), ('147', '19960318'), ('147', '19960325'), ('147', '19960401'), ('147', '19960408'), ('147', '19960415'), ('147', '19960422'), ('147', '19960429'), ('147', '19960506'), ('147', '19960513'), ('147', '19960520'), ('147', '19960527'), ('147', '19960603'), ('147', '19960610'), ('147', '19960617'), ('147', '19960624'), ('147', '19960701'), ('14714', '20130826'), ('14727', '20130311'), ('14740', '20130819'), ('14751', '20130722'), ('14766', '20130729'), ('14796', '20130902'), ('14820', '20130909'), ('14866', '20130916'), ('14878', '20130923'), ('14885', '20130930'), ('1489', '20040419'), ('15025', '20131021'), ('15028', '20131007'), ('15071', '20131028'), ('15072', '20131014'), ('15098', '20131104'), ('15101', '20131111'), ('15151', '20131118'), ('15334', '20131202'), ('15337', '20131125'), ('15475', '20150427'), ('15512', '20131209'), ('15540', '20131216'), ('15545', '20150413'), ('15557', '20150302'), ('15568', '20150420'), ('15578', '20150406'), ('15623', '20150518'), ('15632', '20140203'), ('15637', '20140113'), ('15637', '20140210'), ('15646', '20140127'), ('15659', '20140224'), ('15701', '20131223'), ('15703', '20140106'), ('15708', '20131230'), ('15710', '20150511'), ('1573', '20020401'), ('1574', '20020408'), ('1574', '20020415'), ('1574', '20020422'), ('15741', '20150525'), ('15741', '20150608'), ('15761', '20150803'), ('1577', '20020429'), ('1577', '20020513'), ('1577', '20020520'), ('1577', '20020527'), ('1577', '20020603'), ('15776', '20150810'), ('15800', '20150921'), ('15810', '20150622'), ('15832', '20150914'), ('15908', '20150824'), ('15983', '20170717'), ('16111', '20170306'), ('16124', '20170508'), ('16138', '20151019'), ('16138', '20170724'), ('16145', '20170731'), ('16147', '20170807'), ('16157', '20170612'), ('16161', '20170911'), ('16178', '20151005'), ('16184', '20150831'), ('16184', '20170626'), ('16189', '20170619'), ('16191', '20151012'), ('16204', '20170515'), ('16207', '20170220'), ('16226', '20170424'), ('16230', '20170320'), ('16233', '20161010'), ('16249', '20161114'), ('16268', '20170814'), ('16270', '20170417'), ('16279', '20170821'), ('16290', '20170522'), ('16293', '20151102'), ('16293', '20160627'), ('16294', '20161128'), ('16301', '20170828'), ('16303', '20170501'), ('16305', '20160926'), ('16305', '20170213'), ('16314', '20160620'), ('16316', '20160919'), ('16325', '20160815'), ('16336', '20161205'), ('16345', '20161121'), ('16349', '20161031'), ('16351', '20160523'), ('16361', '20160606'), ('16364', '20161107'), ('16372', '20170102'), ('16374', '20160509'), ('16379', '20170116'), ('16387', '20161212'), ('16388', '20160502'), ('164', '19970707'), ('16406', '20170109'), ('16446', '20160411'), ('16454', '20160222'), ('16454', '20160418'), ('16489', '20160425'), ('16515', '20160229'), ('16517', '20160307'), ('16518', '20160118'), ('16529', '20160215'), ('16586', '20160208'), ('16597', '20170703'), ('16629', '20160201'), ('16649', '20170529'), ('171', '19960708'), ('171', '19960715'), ('171', '19960722'), ('171', '19960729'), ('171', '19960805'), ('171', '19960812'), ('171', '19960819'), ('171', '19960826'), ('171', '19960902'), ('172', '19960916'), ('172', '19960923'), ('172', '19960930'), ('172', '19961007'), ('1730', '20020506'), ('175', '19961014'), ('175', '19961021'), ('1783', '20020610'), ('1783', '20020624'), ('1783', '20020701'), ('1803', '20020617'), ('1828', '20020722'), ('1834', '20020708'), ('1835', '20020715'), ('185', '19961223'), ('185', '19961230'), ('185', '19970101'), ('185', '19970106'), ('185', '19970113'), ('185', '19970120'), ('1853', '20020729'), ('1853', '20020805'), ('1860', '20030526'), ('191', '19961028'), ('191', '19961104'), ('1915', '20020819'), ('1925', '20020812'), ('194', '19960909'), ('209', '19970127'), ('209', '19970203'), ('209', '19970210'), ('209', '19970217'), ('2111', '20020826'), ('2111', '20020902'), ('213', '19961111'), ('213', '19961118'), ('213', '19961125'), ('213', '19961202'), ('213', '19961209'), ('213', '19961216'), ('223', '19970224'), ('223', '19970303'), ('223', '19970310'), ('223', '19970317'), ('223', '19970324'), ('223', '19970331'), ('223', '19970407'), ('225', '19970414'), ('225', '19970421'), ('225', '19970428'), ('225', '19970505'), ('225', '19970512'), ('225', '19970519'), ('225', '19970526'), ('225', '19970602'), ('225', '19970609'), ('225', '19970616'), ('225', '19970623'), ('225', '19970630'), ('2361', '20040517'), ('2451', '20020909'), ('2457', '20020916'), ('2462', '20020923'), ('2490', '20030217'), ('2496', '20020930'), ('2497', '20021111'), ('2497', '20021118'), ('2497', '20021125'), ('2497', '20021202'), ('2497', '20021209'), ('2497', '20021216'), ('2497', '20021223'), ('2497', '20021230'), ('2497', '20030101'), ('2497', '20030106'), ('2497', '20030113'), ('2497', '20030120'), ('2497', '20030127'), ('2498', '20021104'), ('2505', '20021021'), ('2505', '20021028'), ('2507', '20030210'), ('2517', '20030203'), ('2520', '20021014'), ('2526', '20021007'), ('2528', '20030224'), ('2535', '20040531'), ('2549', '20030303'), ('2549', '20030310'), ('257', '19970714'), ('257', '19970721'), ('257', '19970728'), ('2571', '20030317'), ('2571', '20030324'), ('2587', '20030407'), ('2587', '20030414'), ('2608', '20030421'), ('2613', '20040503'), ('2614', '20030331'), ('2652', '20030505'), ('2671', '20030512'), ('2719', '20030428'), ('2728', '20030519'), ('2728', '20030602'), ('273', '19970804'), ('273', '19970811'), ('273', '19970818'), ('273', '19970825'), ('273', '19970901'), ('273', '19970908'), ('273', '19970915'), ('273', '19970922'), ('273', '19970929'), ('273', '19971006'), ('2730', '20030707'), ('2731', '20030623'), ('2731', '20030630'), ('2732', '20030804'), ('2734', '20030811'), ('2753', '20030609'), ('2753', '20030616'), ('2755', '20030714'), ('2755', '20030818'), ('2759', '20030721'), ('2777', '20030728'), ('2798', '20030908'), ('28', '19890101'), ('28', '19900101'), ('2801', '20030825'), ('2801', '20030901'), ('2847', '20030915'), ('2862', '20030922'), ('29', '19881121'), ('29', '19881128'), ('29', '19881205'), ('29', '19881212'), ('29', '19881219'), ('29', '19881226'), ('29', '19890102'), ('29', '19890109'), ('29', '19890116'), ('29', '19890123'), ('29', '19890130'), ('29', '19890206'), ('29', '19890313'), ('29', '19890320'), ('29', '19890410'), ('29', '19890417'), ('29', '19890424'), ('29', '19890501'), ('29', '19890508'), ('29', '19890515'), ('29', '19890522'), ('29', '19890529'), ('29', '19890605'), ('29', '19890612'), ('29', '19890619'), ('29', '19890626'), ('29', '19890703'), ('29', '19890710'), ('29', '19890717'), ('29', '19890724'), ('29', '19890731'), ('29', '19890807'), ('29', '19890814'), ('29', '19890821'), ('29', '19890828'), ('29', '19890904'), ('29', '19890911'), ('29', '19890918'), ('29', '19890925'), ('29', '19891002'), ('29', '19891009'), ('29', '19891016'), ('29', '19891023'), ('29', '19891030'), ('29', '19891106'), ('29', '19891113'), ('29', '19891120'), ('29', '19891127'), ('29', '19891204'), ('29', '19891211'), ('29', '19891218'), ('29', '19891225'), ('29', '19900108'), ('29', '19900115'), ('29', '19900122'), ('29', '19900129'), ('29', '19900205'), ('29', '19900212'), ('29', '19900219'), ('29', '19900226'), ('29', '19900305'), ('29', '19900312'), ('29', '19900319'), ('29', '19900326'), ('29', '19900402'), ('29', '19900409'), ('29', '19900416'), ('29', '19900423'), ('29', '19900430'), ('29', '19900507'), ('29', '19900514'), ('29', '19900521'), ('29', '19900528'), ('29', '19900604'), ('29', '19900611'), ('29', '19910101'), ('29', '19910311'), ('29', '19910318'), ('29', '19910325'), ('29', '19910401'), ('29', '19910408'), ('29', '19910415'), ('29', '19910422'), ('29', '19910429'), ('29', '19910506'), ('29', '19910513'), ('29', '19910520'), ('29', '19910527'), ('29', '19910603'), ('29', '19910610'), ('29', '19910617'), ('29', '19910624'), ('29', '19910701'), ('29', '19910715'), ('29', '19910722'), ('29', '19910729'), ('29', '19910805'), ('29', '19910812'), ('29', '19910819'), ('29', '19920210'), ('2930', '20030929'), ('2955', '20040524'), ('2961', '20031006'), ('2966', '20031013'), ('299', '19971013'), ('30', '19900618'), ('30', '19900625'), ('30', '19900702'), ('30', '19900709'), ('30', '19900716'), ('30', '19900723'), ('30', '19900730'), ('30', '19900806'), ('30', '19900813'), ('30', '19900820'), ('30', '19900827'), ('30', '19900903'), ('30', '19900910'), ('30', '19900917'), ('30', '19900924'), ('30', '19901001'), ('30', '19901008'), ('30', '19901015'), ('30', '19901022'), ('30', '19901029'), ('30', '19901105'), ('30', '19901112'), ('30', '19901119'), ('30', '19901126'), ('30', '19901203'), ('30', '19901210'), ('30', '19901217'), ('30', '19901224'), ('30', '19901231'), ('30', '19910107'), ('30', '19910114'), ('30', '19910121'), ('30', '19910128'), ('30', '19910204'), ('30', '19910211'), ('30', '19910218'), ('30', '19910225'), ('30', '19910304'), ('30', '19910708'), ('30', '19910826'), ('30', '19910902'), ('30', '19910909'), ('30', '19910916'), ('30', '19910923'), ('30', '19910930'), ('3020', '20031027'), ('3035', '20031020'), ('3038', '20031103'), ('3052', '20031110'), ('3065', '20031117'), ('3092', '20031124'), ('31', '19911007'), ('31', '19911014'), ('31', '19911021'), ('31', '19911028'), ('31', '19911202'), ('3120', '20031201'), ('314', '19971020'), ('314', '19971027'), ('3190', '20031208'), ('32', '19930208'), ('3206', '20040105'), ('3206', '20040112'), ('3206', '20040119'), ('3206', '20040126'), ('3211', '20031215'), ('3211', '20031222'), ('3214', '20031229'), ('3214', '20040101'), ('3257', '20040202'), ('3265', '20040209'), ('3277', '20040405'), ('3279', '20040301'), ('3282', '20040216'), ('3282', '20040223'), ('3286', '20040308'), ('3286', '20040315'), ('3286', '20040322'), ('3286', '20040329'), ('3286', '20040412'), ('337', '19971103'), ('337', '19971110'), ('3379', '20040426'), ('3433', '20040607'), ('3456', '20040614'), ('3492', '20040621'), ('3492', '20040628'), ('3498', '20040705'), ('3516', '20040712'), ('3587', '20040719'), ('3592', '20040726'), ('3592', '20040802'), ('363', '19971117'), ('363', '19971124'), ('363', '19971201'), ('3645', '20040809'), ('3647', '20040816'), ('3661', '20040823'), ('3705', '20040830'), ('3705', '20040906'), ('3785', '20040913'), ('3831', '20040920'), ('3913', '20040927'), ('394', '19971208'), ('394', '19971215'), ('394', '19971222'), ('394', '19971229'), ('394', '19980101'), ('394', '19980105'), ('394', '19980112'), ('394', '19980119'), ('394', '19980126'), ('394', '19980202'), ('394', '19980209'), ('394', '19980216'), ('394', '19980223'), ('394', '19980302'), ('394', '19980309'), ('394', '19980316'), ('394', '19980323'), ('3957', '20041004'), ('3968', '20041025'), ('3986', '20041011'), ('3987', '20041018'), ('4011', '20041101'), ('4071', '20041108'), ('4124', '20041115'), ('4145', '20041122'), ('4147', '20041129'), ('4160', '20041206'), ('4160', '20041213'), ('4160', '20041220'), ('4160', '20041227'), ('4160', '20050101'), ('4160', '20050103'), ('4160', '20050110'), ('4160', '20050117'), ('4160', '20050124'), ('4198', '20050131'), ('4198', '20050207'), ('4211', '20050214'), ('426', '19980330'), ('426', '19980406'), ('4286', '20050221'), ('4286', '20050228'), ('43', '19930802'), ('43', '19930809'), ('43', '19930816'), ('43', '19930823'), ('43', '19930830'), ('43', '19930906'), ('43', '19930913'), ('4313', '20050307'), ('4313', '20050314'), ('4333', '20050321'), ('4333', '20050328'), ('4362', '20050404'), ('4371', '20050411'), ('4379', '20050418'), ('4379', '20050425'), ('4379', '20050502'), ('44', '19911104'), ('44', '19911111'), ('44', '19911118'), ('44', '19911125'), ('44', '19911209'), ('44', '19920101'), ('44', '19930101'), ('44', '19930517'), ('44', '19930524'), ('44', '19930531'), ('44', '19930607'), ('44', '19930614'), ('44', '19930621'), ('44', '19930628'), ('44', '19940418'), ('4470', '20050509'), ('4489', '20050516'), ('45', '19911216'), ('45', '19911223'), ('45', '19911230'), ('45', '19920106'), ('45', '19920113'), ('45', '19920120'), ('45', '19920127'), ('45', '19920203'), ('45', '19920217'), ('45', '19920224'), ('45', '19920302'), ('45', '19920309'), ('45', '19920316'), ('45', '19920323'), ('45', '19920330'), ('45', '19920406'), ('45', '19920413'), ('45', '19920420'), ('45', '19920427'), ('45', '19920504'), ('45', '19920511'), ('45', '19920518'), ('45', '19920525'), ('45', '19920601'), ('45', '19920608'), ('45', '19920615'), ('45', '19920622'), ('45', '19920629'), ('45', '19920706'), ('45', '19920727'), ('45', '19921228'), ('45', '19930104'), ('45', '19930111'), ('45', '19930118'), ('45', '19930125'), ('45', '19930201'), ('45', '19930215'), ('45', '19930222'), ('45', '19930301'), ('45', '19930308'), ('45', '19930315'), ('45', '19930322'), ('45', '19930329'), ('45', '19930405'), ('4522', '20050523'), ('4522', '20050530'), ('459', '19980413'), ('459', '19980420'), ('459', '19980427'), ('459', '19980504'), ('459', '19980511'), ('459', '19980518'), ('459', '19980525'), ('459', '19980601'), ('46', '19920713'), ('46', '19920720'), ('4682', '20050606'), ('4705', '20050613'), ('4727', '20050620'), ('4727', '20050627'), ('4792', '20050704'), ('4812', '20160111'), ('4816', '20050711'), ('4847', '20050718'), ('4859', '20050725'), ('4926', '20050801'), ('4982', '20050808'), ('5020', '20050815'), ('5090', '20050822'), ('5100', '20050829'), ('5100', '20050905'), ('5173', '20050919'), ('5175', '20050926'), ('5187', '20050912'), ('5215', '20051003'), ('5237', '20051017'), ('5249', '20051010'), ('5257', '20051024'), ('5331', '20051031'), ('5357', '20051114'), ('5362', '20051107'), ('5391', '20051121'), ('5401', '20051128'), ('5425', '20060206'), ('543', '19980608'), ('5441', '20060130'), ('5441', '20060213'), ('5452', '20051205'), ('5452', '20051212'), ('5452', '20051219'), ('5452', '20051226'), ('5452', '20060101'), ('5452', '20060102'), ('5452', '20060109'), ('5452', '20060116'), ('5452', '20060123'), ('5478', '20060220'), ('5528', '20060227'), ('5548', '20060306'), ('5548', '20060313'), ('5559', '20060320'), ('5559', '20060327'), ('5626', '20060403'), ('5626', '20060410'), ('5644', '20060417'), ('5654', '20060508'), ('5656', '20060501'), ('5658', '20060424'), ('5683', '20060515'), ('569', '19980615'), ('57', '19940425'), ('57', '19940502'), ('57', '19940509'), ('57', '19940516'), ('57', '19940523'), ('57', '19940530'), ('5721', '20060522'), ('5798', '20060529'), ('5798', '20060605'), ('58', '19931004'), ('58', '19931011'), ('58', '19931018'), ('58', '19931025'), ('58', '19931101'), ('58', '19931108'), ('5862', '20060612'), ('5897', '20060619'), ('59', '19941024'), ('59', '19941031'), ('590', '19980622'), ('590', '19980629'), ('5944', '20060626'), ('5944', '20060703'), ('5983', '20060710'), ('60', '19940718'), ('60', '19940725'), ('60', '19940801'), ('60', '19940808'), ('60', '19940815'), ('60', '19940822'), ('60', '19940829'), ('60', '19940905'), ('6026', '20060717'), ('6065', '20060724'), ('61', '19940328'), ('61', '19940411'), ('6133', '20060731'), ('6151', '20060807'), ('62', '19921005'), ('62', '19921012'), ('62', '19921019'), ('62', '19921026'), ('62', '19921102'), ('62', '19921109'), ('62', '19921116'), ('62', '19921123'), ('62', '19921130'), ('62', '19921207'), ('62', '19921214'), ('62', '19921221'), ('62', '19930412'), ('62', '19930419'), ('62', '19930426'), ('62', '19930503'), ('62', '19930510'), ('62', '19930705'), ('62', '19930712'), ('62', '19930719'), ('62', '19930726'), ('62', '19940131'), ('62', '19940228'), ('62', '19940307'), ('62', '19940314'), ('62', '19940321'), ('62', '19940404'), ('6226', '20060814'), ('6284', '20060828'), ('6284', '20060904'), ('6289', '20060821'), ('63', '19940207'), ('63', '19940214'), ('63', '19940221'), ('6304', '20060911'), ('631', '19980817'), ('631', '19980824'), ('633', '19980706'), ('633', '19980713'), ('633', '19980720'), ('634', '19980727'), ('634', '19980803'), ('634', '19980810'), ('6347', '20060918'), ('6376', '20060925'), ('6436', '20061002'), ('65', '19940606'), ('65', '19940613'), ('65', '19940620'), ('65', '19940627'), ('6520', '20061009'), ('660', '19980831'), ('660', '19980907'), ('6629', '20061016'), ('663', '19980914'), ('663', '19980921'), ('67', '19940704'), ('67', '19940711'), ('6730', '20061023'), ('6790', '20130401'), ('68', '19940912'), ('68', '19940919'), ('6807', '20061113'), ('6808', '20061030'), ('6816', '20061106'), ('683', '19980928'), ('688', '19981005'), ('688', '19981012'), ('6893', '20061120'), ('6896', '20061127'), ('69', '19940926'), ('69', '19941003'), ('69', '19941010'), ('69', '19941017'), ('69', '19941107'), ('69', '19941114'), ('69', '19941121'), ('69', '19941128'), ('69', '19941205'), ('69', '19941212'), ('69', '19941219'), ('69', '19941226'), ('69', '19950101'), ('69', '19950102'), ('69', '19950109'), ('69', '19950116'), ('69', '19950123'), ('69', '19950130'), ('69', '19950206'), ('69', '19950213'), ('69', '19950220'), ('69', '19950227'), ('69', '19950306'), ('69', '19950313'), ('69', '19950320'), ('69', '19950327'), ('69', '19950403'), ('69', '19950410'), ('69', '19950417'), ('69', '19950424'), ('69', '19950501'), ('69', '19950508'), ('69', '19950515'), ('69', '19950522'), ('69', '19950529'), ('69', '19950605'), ('692', '19981109'), ('692', '19981116'), ('692', '19981123'), ('6925', '20070129'), ('6925', '20070205'), ('6926', '20070108'), ('6926', '20070115'), ('6926', '20070122'), ('693', '19981026'), ('693', '19981102'), ('6930', '20070212'), ('6931', '20061204'), ('6942', '20070219'), ('6953', '20061211'), ('6953', '20061218'), ('6953', '20061225'), ('6953', '20070101'), ('696', '19981019'), ('6988', '20070226'), ('7017', '20070305'), ('7017', '20070312'), ('703', '19981207'), ('703', '19981214'), ('703', '19981221'), ('703', '19981228'), ('703', '19990101'), ('7058', '20070319'), ('7058', '20070326'), ('709', '19981130'), ('7139', '20070402'), ('7175', '20070409'), ('7197', '20070416'), ('7197', '20070423'), ('7197', '20070430'), ('722', '19990104'), ('722', '19990111'), ('722', '19990118'), ('722', '19990125'), ('723', '19990208'), ('723', '19990215'), ('723', '19990222'), ('723', '19990301'), ('723', '19990308'), ('7233', '20070507'), ('728', '19990201'), ('728', '19990315'), ('728', '19990322'), ('728', '19990329'), ('728', '19990405'), ('728', '19990412'), ('728', '19990419'), ('73', '19920803'), ('73', '19920810'), ('73', '19920817'), ('73', '19940101'), ('7317', '20070514'), ('7341', '20070521'), ('7365', '20070528'), ('7365', '20070604'), ('7448', '20070611'), ('7448', '20070618'), ('7470', '20070723'), ('7473', '20070625'), ('7473', '20070702'), ('7478', '20070716'), ('7495', '20070709'), ('75', '19930927'), ('75', '19931115'), ('75', '19931122'), ('75', '19931129'), ('75', '19931206'), ('75', '19931213'), ('75', '19931220'), ('75', '19931227'), ('75', '19940103'), ('75', '19940110'), ('75', '19940117'), ('75', '19940124'), ('7503', '20070820'), ('7504', '20070827'), ('7504', '20070903'), ('752', '19990426'), ('7522', '20070806'), ('7527', '20070813'), ('7528', '20070730'), ('76', '19930920'), ('7602', '20070910'), ('761', '19990503'), ('761', '19990510'), ('7638', '20071022'), ('7643', '20070917'), ('7650', '20071203'), ('7659', '20071210'), ('7659', '20071217'), ('7664', '20071112'), ('7666', '20071119'), ('7674', '20071126'), ('7677', '20071105'), ('7682', '20071224'), ('7682', '20071231'), ('7682', '20080101'), ('7682', '20080107'), ('7686', '20070924'), ('7687', '20071015'), ('7691', '20080128'), ('7697', '20071001'), ('7707', '20071008'), ('7711', '20071029'), ('7711', '20080114'), ('7711', '20080121'), ('7716', '20080204'), ('7731', '20080225'), ('7742', '20080218'), ('7743', '20080211'), ('7761', '20080303'), ('777', '19990517'), ('777', '19990524'), ('777', '19990531'), ('7790', '20080310'), ('7790', '20080317'), ('7832', '20080324'), ('7832', '20080331'), ('7873', '20080407'), ('7889', '20080414'), ('7917', '20080421'), ('7917', '20080428'), ('7929', '20080505'), ('7966', '20080623'), ('7966', '20080630'), ('7970', '20080616'), ('8002', '20080512'), ('8022', '20080519'), ('8030', '20080609'), ('804', '19990607'), ('804', '19990614'), ('804', '19990621'), ('804', '19990628'), ('804', '19990705'), ('8089', '20080707'), ('8090', '20080526'), ('8090', '20080602'), ('8113', '20080714'), ('8235', '20080721'), ('8280', '20080728'), ('829', '19990712'), ('829', '19990719'), ('829', '19990726'), ('829', '19990802'), ('8325', '20080804'), ('8372', '20080811'), ('8387', '20080818'), ('8417', '20080825'), ('8417', '20080901'), ('8527', '20080908'), ('853', '19990823'), ('8565', '20140217'), ('8585', '20140120'), ('861', '19990830'), ('861', '19990906'), ('8639', '20080915'), ('8690', '20080922'), ('870', '19990809'), ('873', '19990816'), ('8731', '20080929'), ('8762', '20081006'), ('879', '19990913'), ('879', '19990920'), ('8794', '20081013'), ('8836', '20081020'), ('8898', '20081027'), ('8956', '20081103'), ('899', '19990927'), ('8996', '20081110'), ('90', '19920831'), ('90', '19920907'), ('90', '19920914'), ('90', '19920921'), ('90', '19920928'), ('9003', '20081117'), ('9019', '20081124'), ('9050', '20081201'), ('9053', '20090309'), ('9053', '20090316'), ('9057', '20090323'), ('9057', '20090330'), ('9059', '20090216'), ('9063', '20090223'), ('9063', '20090302'), ('9064', '20090105'), ('9064', '20090112'), ('9064', '20090119'), ('9064', '20090126'), ('9066', '20090406'), ('9070', '20081222'), ('9070', '20081229'), ('9070', '20090101'), ('9076', '20081208'), ('9077', '20081215'), ('9087', '20090202'), ('9087', '20090209'), ('9094', '20090504'), ('9110', '20090420'), ('9111', '20090427'), ('9121', '20090413'), ('914', '20010402'), ('9140', '20090518'), ('9143', '20090511'), ('9153', '20090525'), ('9153', '20090601'), ('9203', '20090608'), ('9239', '20090615'), ('9255', '20090622'), ('9255', '20090629'), ('927', '19991004'), ('930', '20010409'), ('9310', '20090706'), ('9376', '20090713'), ('941', '19991011'), ('941', '19991025'), ('941', '19991101'), ('941', '19991108'), ('941', '19991115'), ('941', '19991122'), ('9474', '20090720'), ('952', '20010416'), ('9589', '20090727'), ('9598', '20090810'), ('96', '19950612'), ('96', '19950619'), ('96', '19950626'), ('96', '19950703'), ('961', '20001120'), ('961', '20001127'), ('961', '20001204'), ('961', '20010423'), ('9611', '20090803'), ('964', '19991018'), ('964', '20001113'), ('964', '20001211'), ('964', '20001218'), ('964', '20001225'), ('964', '20010101'), ('964', '20010108'), ('964', '20010115'), ('964', '20010122'), ('9642', '20090817'), ('966', '19991129'), ('966', '19991206'), ('9682', '20090824'), ('9682', '20090831'), ('9682', '20090907'), ('97', '19950710'), ('977', '20010129'), ('977', '20010205'), ('9808', '20090914'), ('9856', '20090921'), ('988', '20010430'), ('989', '19991213'), ('989', '19991220'), ('989', '19991227'), ('989', '20000101'), ('989', '20000103'), ('989', '20000110'), ('989', '20000117'), ('989', '20000124'), ('9918', '20090928'), ('9925', '20091012'), ('9929', '20091005')] != [('1', '19870119'), ('1', '19870126'), ('1', '19870202'), ('1', '19870209'), ('1', '19870302'), ('1', '19870330'), ('1', '19870406'), ('1', '19870413'), ('1', '19870420'), ('1', '19870427'), ('1', '19870504'), ('1', '19870511'), ('1', '19870518'), ('1', '19870525'), ('1', '19870601'), ('1', '19870608'), ('1', '19870615'), ('1', '19870622'), ('1', '19870629'), ('1', '19870706'), ('1', '19870713'), ('1', '19870720'), ('1', '19870727'), ('1', '19870803'), ('1', '19870810'), ('1', '19870817'), ('1', '19870824'), ('1', '19870831'), ('1', '19870907'), ('1', '19870914'), ('1', '19870921'), ('1', '19870928'), ('1', '19871005'), ('1', '19871012'), ('1', '19871019'), ('1', '19871026'), ('1', '19871102'), ('1', '19871109'), ('1', '19871116'), ('1', '19871123'), ('1', '19871130'), ('1', '19871207'), ('1', '19871214'), ('1', '19871221'), ('1', '19871228'), ('1', '19880101'), ('1', '19880104'), ('1', '19880111'), ('1', '19880118'), ('1', '19880125'), ('1', '19880201'), ('1', '19880208'), ('1', '19880215'), ('1', '19880222'), ('1', '19880229'), ('1', '19880307'), ('1', '19880314'), ('1', '19880321'), ('1', '19880926'), ('1', '19881003'), ('1', '19881010'), ('1', '19881017'), ('1', '19890327'), ('1', '19890403'), ('10', '19911104'), ('10', '19911111'), ('10', '19911118'), ('10', '19911125'), ('10', '19911209'), ('10', '19931108'), ('100', '20011126'), ('100', '20020304'), ('100', '20020311'), ('102', '20020318'), ('102', '20020325'), ('1027', '20110704'), ('1034', '20110711'), ('1040', '20110718'), ('1049', '20110725'), ('1052', '20110801'), ('1062', '20110808'), ('1063', '20110822'), ('1064', '20110815'), ('1069', '20110829'), ('1069', '20110905'), ('1083', '20110912'), ('1095', '20110919'), ('1097', '20111003'), ('1097', '20111010'), ('1098', '20111107'), ('1099', '20110926'), ('11', '19911216'), ('11', '19911223'), ('11', '19911230'), ('11', '19920101'), ('11', '19920106'), ('11', '19920113'), ('11', '19920120'), ('11', '19920127'), ('11', '19920203'), ('11', '19920217'), ('11', '19920224'), ('11', '19920302'), ('11', '19920309'), ('11', '19920316'), ('11', '19920323'), ('11', '19920330'), ('11', '19920406'), ('11', '19920413'), ('11', '19920420'), ('11', '19920427'), ('11', '19920504'), ('11', '19920511'), ('11', '19920518'), ('11', '19920525'), ('11', '19920601'), ('11', '19930208'), ('11', '19930517'), ('11', '19930524'), ('11', '19930531'), ('11', '19930607'), ('11', '19930614'), ('11', '19930621'), ('11', '19930628'), ('11', '19931011'), ('11', '19931018'), ('11', '19931025'), ('11', '19931101'), ('11', '19931115'), ('11', '19931122'), ('1100', '20111024'), ('1101', '20111017'), ('1105', '20111114'), ('1107', '20111031'), ('111', '20020401'), ('1113', '20111128'), ('1114', '20111121'), ('1118', '20111212'), ('1119', '20111205'), ('1119', '20111219'), ('112', '20020408'), ('112', '20020415'), ('1123', '20120116'), ('1123', '20120123'), ('1124', '20111226'), ('1124', '20120101'), ('1124', '20120102'), ('1125', '20120109'), ('1129', '20120206'), ('113', '20020422'), ('1131', '20120130'), ('1133', '20120213'), ('1136', '20120220'), ('114', '20020429'), ('114', '20020513'), ('114', '20020520'), ('114', '20020527'), ('114', '20020603'), ('1151', '20120227'), ('1153', '20120305'), ('1153', '20120312'), ('1156', '20120319'), ('1156', '20120326'), ('1164', '20120402'), ('1167', '20120409'), ('1169', '20120416'), ('1172', '20120423'), ('1173', '20120430'), ('1179', '20120514'), ('1179', '20120709'), ('1182', '20120507'), ('1182', '20120521'), ('1184', '20120716'), ('1186', '20120806'), ('1187', '20120611'), ('1187', '20120723'), ('1187', '20120730'), ('1190', '20120917'), ('1190', '20130422'), ('1191', '20130429'), ('1192', '20130415'), ('1193', '20120528'), ('1193', '20120604'), ('1193', '20120813'), ('1195', '20120618'), ('1196', '20120910'), ('1196', '20120924'), ('1197', '20120820'), ('1197', '20121029'), ('1197', '20121203'), ('12', '19920608'), ('12', '19920615'), ('12', '19920622'), ('12', '19920629'), ('12', '19920706'), ('12', '19920727'), ('12', '19921228'), ('12', '19930101'), ('12', '19930104'), ('12', '19930111'), ('12', '19930118'), ('12', '19930125'), ('12', '19930201'), ('12', '19930215'), ('12', '19930222'), ('12', '19930301'), ('12', '19930308'), ('12', '19930315'), ('12', '19930322'), ('12', '19930329'), ('12', '19930405'), ('12', '19931004'), ('1200', '20130408'), ('1201', '20121008'), ('1201', '20121022'), ('1201', '20121126'), ('1201', '20121217'), ('1201', '20130506'), ('1202', '20120827'), ('1202', '20120903'), ('1202', '20121001'), ('1203', '20121015'), ('1203', '20121105'), ('1203', '20130101'), ('1203', '20130610'), ('1204', '20120625'), ('1204', '20120702'), ('1204', '20121231'), ('1205', '20121210'), ('1205', '20121224'), ('1205', '20130128'), ('1205', '20130218'), ('1205', '20130225'), ('1206', '20130107'), ('1206', '20130211'), ('1206', '20130520'), ('1208', '20121119'), ('1208', '20130204'), ('1208', '20130513'), ('1208', '20130527'), ('1208', '20130603'), ('1208', '20130617'), ('1209', '20121112'), ('1209', '20130114'), ('1209', '20130121'), ('1216', '20130304'), ('1216', '20130311'), ('1219', '20130624'), ('1229', '20130708'), ('1229', '20130715'), ('1229', '20130812'), ('123', '20020506'), ('1232', '20130805'), ('1232', '20130826'), ('1232', '20130902'), ('1233', '20130819'), ('1234', '20130909'), ('1235', '20130722'), ('1236', '20130916'), ('1236', '20130930'), ('1239', '20130923'), ('1243', '20130729'), ('1243', '20131007'), ('1251', '20131014'), ('1258', '20131111'), ('1259', '20131021'), ('126', '20020610'), ('126', '20020624'), ('126', '20020701'), ('1262', '20131104'), ('1264', '20131118'), ('1265', '20131028'), ('1266', '20170717'), ('127', '20020617'), ('1272', '20150427'), ('1272', '20150622'), ('1273', '20150420'), ('1276', '20150406'), ('1276', '20150413'), ('1276', '20170626'), ('1277', '20131125'), ('1278', '20150608'), ('1278', '20170731'), ('1279', '20131202'), ('1280', '20170911'), ('1281', '20170724'), ('1282', '20150803'), ('1282', '20170619'), ('1283', '20150511'), ('1283', '20150518'), ('1285', '20170821'), ('1286', '20170807'), ('1286', '20170828'), ('1287', '20150302'), ('1288', '20170814'), ('1289', '20170612'), ('129', '20020708'), ('1290', '20161010'), ('1290', '20170424'), ('1291', '20170306'), ('1291', '20170320'), ('1291', '20170703'), ('1292', '20150525'), ('1292', '20150914'), ('1293', '20131209'), ('1293', '20150810'), ('1293', '20170220'), ('1293', '20170508'), ('1294', '20150824'), ('1294', '20170417'), ('1294', '20170501'), ('1295', '20170213'), ('1296', '20150921'), ('1297', '20170515'), ('1299', '20160919'), ('1299', '20170522'), ('13', '19920713'), ('13', '19920720'), ('13', '19920803'), ('13', '19920810'), ('13', '19920817'), ('13', '19921005'), ('13', '19921012'), ('13', '19921019'), ('13', '19921026'), ('13', '19921102'), ('13', '19921109'), ('13', '19921116'), ('13', '19921123'), ('13', '19921130'), ('13', '19921207'), ('13', '19921214'), ('13', '19921221'), ('13', '19930412'), ('13', '19930419'), ('13', '19930426'), ('13', '19930503'), ('13', '19930510'), ('13', '19930705'), ('13', '19930712'), ('13', '19930719'), ('13', '19930726'), ('13', '19930920'), ('13', '19930927'), ('13', '19931129'), ('13', '19940718'), ('13', '19940725'), ('13', '19940801'), ('13', '19940808'), ('13', '19940815'), ('13', '19940822'), ('13', '19940829'), ('13', '19940905'), ('1301', '20161114'), ('1302', '20131216'), ('1302', '20160926'), ('1303', '20161031'), ('1305', '20140113'), ('1305', '20161107'), ('1306', '20140127'), ('1306', '20150831'), ('1306', '20161121'), ('1306', '20170116'), ('1307', '20140106'), ('1307', '20161205'), ('1307', '20170102'), ('1308', '20161128'), ('1308', '20161212'), ('1309', '20131223'), ('1309', '20140203'), ('1309', '20170109'), ('131', '20020715'), ('131', '20020722'), ('131', '20020729'), ('131', '20020805'), ('131', '20030526'), ('1311', '20131230'), ('1311', '20140210'), ('1312', '20151005'), ('1312', '20170529'), ('1316', '20140224'), ('1316', '20151012'), ('1316', '20160627'), ('1317', '20151019'), ('1321', '20160815'), ('1322', '20151102'), ('1322', '20160606'), ('1322', '20160620'), ('1326', '20160523'), ('1327', '20160502'), ('133', '20020819'), ('1330', '20160418'), ('1330', '20160425'), ('1332', '20160411'), ('1332', '20160509'), ('134', '20020812'), ('1341', '20160208'), ('1343', '20160222'), ('1345', '20160201'), ('1346', '20160215'), ('1347', '20160118'), ('1347', '20160229'), ('1349', '20160307'), ('14', '19920831'), ('14', '19920907'), ('14', '19920914'), ('14', '19920921'), ('14', '19920928'), ('14', '19940418'), ('146', '20020826'), ('146', '20020902'), ('15', '19940307'), ('15', '19940314'), ('15', '19940321'), ('15', '19940328'), ('15', '19940411'), ('15', '19940425'), ('15', '19940912'), ('15', '19940919'), ('151', '20040517'), ('16', '19931206'), ('16', '19940110'), ('16', '19940131'), ('16', '19940228'), ('16', '19940404'), ('16', '19940502'), ('16', '19940509'), ('16', '19940516'), ('16', '19940926'), ('164', '20040531'), ('168', '20040503'), ('17', '19920824'), ('17', '19931213'), ('17', '19931220'), ('17', '19931227'), ('17', '19940101'), ('17', '19940103'), ('17', '19940117'), ('17', '19940124'), ('17', '19940207'), ('17', '19940214'), ('17', '19940221'), ('17', '19940523'), ('17', '19940530'), ('17', '19940606'), ('17', '19940613'), ('17', '19941003'), ('17', '19941010'), ('17', '19941017'), ('17', '19941024'), ('17', '19941107'), ('17', '19941114'), ('17', '19941121'), ('17', '19941128'), ('17', '19941205'), ('176', '20020909'), ('177', '20020916'), ('178', '20020923'), ('18', '19940620'), ('18', '19940627'), ('18', '19940704'), ('18', '19941031'), ('18', '19941212'), ('18', '19941219'), ('18', '19941226'), ('18', '19950101'), ('18', '19950102'), ('18', '19950109'), ('18', '19950116'), ('18', '19950123'), ('18', '19950130'), ('18', '19950206'), ('18', '19950213'), ('18', '19950220'), ('18', '19950227'), ('18', '19950306'), ('18', '19950313'), ('18', '19950320'), ('18', '19950327'), ('18', '19950403'), ('18', '19950410'), ('18', '19950417'), ('18', '19950424'), ('18', '19950501'), ('18', '19950508'), ('18', '19950515'), ('18', '19950522'), ('18', '19950529'), ('18', '19950605'), ('180', '20020930'), ('181', '20021021'), ('182', '20021028'), ('182', '20021202'), ('182', '20021209'), ('182', '20021216'), ('182', '20021223'), ('182', '20021230'), ('182', '20030101'), ('182', '20030106'), ('182', '20030113'), ('182', '20030120'), ('182', '20030127'), ('183', '20021014'), ('183', '20021104'), ('183', '20030217'), ('184', '20021007'), ('184', '20021111'), ('184', '20021118'), ('184', '20021125'), ('184', '20030203'), ('184', '20030210'), ('185', '20030224'), ('187', '20030303'), ('187', '20030310'), ('188', '20030317'), ('188', '20030324'), ('188', '20030407'), ('188', '20030414'), ('189', '20030331'), ('189', '20030421'), ('19', '19950612'), ('19', '19950619'), ('19', '19950626'), ('19', '19950703'), ('194', '20030505'), ('194', '20030512'), ('196', '20030428'), ('196', '20030519'), ('196', '20030602'), ('196', '20030804'), ('196', '20030811'), ('196', '20040524'), ('198', '20030623'), ('198', '20030630'), ('198', '20030707'), ('198', '20030818'), ('199', '20030609'), ('199', '20030616'), ('199', '20030714'), ('199', '20030728'), ('2', '19880328'), ('2', '19880404'), ('2', '19880411'), ('2', '19880418'), ('2', '19880425'), ('2', '19880502'), ('2', '19880509'), ('2', '19880516'), ('2', '19880523'), ('2', '19880530'), ('2', '19880606'), ('2', '19880613'), ('2', '19880620'), ('2', '19880627'), ('2', '19880704'), ('2', '19880711'), ('2', '19880718'), ('2', '19880725'), ('2', '19880801'), ('2', '19880808'), ('2', '19880815'), ('2', '19880822'), ('2', '19880829'), ('2', '19880905'), ('2', '19880912'), ('2', '19880919'), ('2', '19881024'), ('2', '19881031'), ('2', '19881107'), ('2', '19881114'), ('2', '19890213'), ('2', '19890220'), ('2', '19890227'), ('2', '19890306'), ('20', '19940711'), ('20', '19950710'), ('200', '20030721'), ('200', '20030825'), ('200', '20030901'), ('200', '20160111'), ('201', '20030908'), ('201', '20030915'), ('202', '20030922'), ('207', '20030929'), ('209', '20031027'), ('21', '19950717'), ('21', '19950724'), ('210', '20031006'), ('211', '20031013'), ('213', '20031020'), ('213', '20031103'), ('213', '20031110'), ('215', '20031117'), ('216', '20031124'), ('218', '20031201'), ('22', '19950731'), ('22', '19950807'), ('22', '19950814'), ('221', '20031208'), ('222', '20031215'), ('222', '20031222'), ('222', '20040105'), ('222', '20040112'), ('222', '20040119'), ('222', '20040126'), ('223', '20031229'), ('223', '20040101'), ('224', '20040202'), ('225', '20040209'), ('225', '20040301'), ('226', '20040216'), ('226', '20040223'), ('226', '20040308'), ('226', '20040315'), ('226', '20040322'), ('226', '20040329'), ('226', '20040405'), ('227', '20040412'), ('23', '19950821'), ('23', '19950828'), ('23', '19950904'), ('23', '19950911'), ('23', '19950918'), ('23', '19950925'), ('23', '19951002'), ('230', '20040426'), ('24', '19951009'), ('24', '19951016'), ('24', '19951023'), ('24', '19951030'), ('24', '19951106'), ('24', '19960108'), ('24', '19960115'), ('24', '19960122'), ('24', '19960129'), ('240', '20040607'), ('241', '20040614'), ('243', '20040621'), ('243', '20040628'), ('246', '20040705'), ('247', '20040712'), ('249', '20040719'), ('25', '19951113'), ('25', '19951120'), ('25', '19951127'), ('25', '19951204'), ('25', '19951211'), ('25', '19951218'), ('25', '19951225'), ('25', '19960101'), ('25', '19960205'), ('25', '19960212'), ('25', '19960219'), ('252', '20040726'), ('252', '20040802'), ('253', '20040809'), ('254', '20040816'), ('255', '20040823'), ('258', '20040830'), ('258', '20040906'), ('26', '19960226'), ('26', '19960304'), ('26', '19960311'), ('26', '19960318'), ('26', '19960325'), ('26', '19960401'), ('26', '19960408'), ('26', '19960415'), ('26', '19960422'), ('26', '19960429'), ('26', '19960506'), ('26', '19960513'), ('26', '19960520'), ('26', '19960527'), ('26', '19960603'), ('26', '19960610'), ('26', '19960617'), ('26', '19960624'), ('26', '19960701'), ('26', '19960916'), ('26', '19960923'), ('26', '19960930'), ('26', '19961007'), ('260', '20040913'), ('262', '20040920'), ('269', '20040927'), ('27', '19960708'), ('27', '19960715'), ('27', '19960722'), ('27', '19960729'), ('27', '19960805'), ('27', '19960812'), ('27', '19960819'), ('27', '19960826'), ('27', '19960902'), ('27', '19961014'), ('27', '19961021'), ('27', '19970707'), ('273', '20041004'), ('274', '20041011'), ('275', '20041018'), ('278', '20041025'), ('28', '19960909'), ('285', '20041101'), ('289', '20041108'), ('29', '19961028'), ('29', '19961104'), ('292', '20041115'), ('292', '20041122'), ('293', '20041129'), ('294', '20041206'), ('294', '20041213'), ('294', '20041220'), ('294', '20041227'), ('294', '20050101'), ('294', '20050103'), ('294', '20050110'), ('294', '20050117'), ('294', '20050124'), ('296', '20050131'), ('296', '20050207'), ('296', '20050214'), ('3', '19881121'), ('3', '19881128'), ('3', '19881205'), ('3', '19881212'), ('3', '19881219'), ('3', '19881226'), ('3', '19890101'), ('3', '19890102'), ('3', '19890109'), ('3', '19890116'), ('3', '19890123'), ('3', '19890130'), ('3', '19890206'), ('3', '19890313'), ('3', '19890320'), ('3', '19890410'), ('3', '19890417'), ('3', '19890424'), ('3', '19890501'), ('3', '19890508'), ('3', '19890515'), ('3', '19890522'), ('3', '19890529'), ('3', '19890605'), ('3', '19890612'), ('3', '19890619'), ('3', '19890626'), ('3', '19890703'), ('3', '19890710'), ('3', '19890717'), ('3', '19890724'), ('3', '19890731'), ('3', '19890807'), ('3', '19890814'), ('3', '19890821'), ('3', '19890828'), ('3', '19890904'), ('3', '19890911'), ('3', '19890918'), ('30', '19961111'), ('30', '19961223'), ('30', '19961230'), ('30', '19970101'), ('30', '19970106'), ('30', '19970113'), ('30', '19970120'), ('300', '20050221'), ('300', '20050228'), ('300', '20130401'), ('302', '20050307'), ('302', '20050314'), ('304', '20050321'), ('304', '20050328'), ('306', '20050404'), ('307', '20050411'), ('308', '20050418'), ('308', '20050425'), ('308', '20050502'), ('31', '19961118'), ('31', '19961125'), ('31', '19961202'), ('31', '19961209'), ('31', '19961216'), ('31', '19970127'), ('31', '19970203'), ('31', '19970210'), ('31', '19970217'), ('313', '20050509'), ('313', '20050516'), ('319', '20050523'), ('319', '20050530'), ('32', '19970224'), ('32', '19970303'), ('32', '19970310'), ('32', '19970317'), ('32', '19970324'), ('32', '19970331'), ('32', '19970407'), ('33', '19970414'), ('33', '19970421'), ('33', '19970428'), ('33', '19970505'), ('33', '19970512'), ('33', '19970519'), ('33', '19970526'), ('33', '19970602'), ('33', '19970609'), ('33', '19970616'), ('33', '19970623'), ('33', '19970630'), ('330', '20050606'), ('332', '20050613'), ('333', '20050620'), ('333', '20050627'), ('341', '20050704'), ('343', '20050711'), ('345', '20050718'), ('346', '20050725'), ('350', '20050801'), ('352', '20050808'), ('354', '20050815'), ('357', '20050822'), ('358', '20050829'), ('358', '20050905'), ('36', '19970714'), ('365', '20050919'), ('366', '20050926'), ('366', '20051003'), ('367', '20051024'), ('368', '20050912'), ('369', '20051010'), ('369', '20051017'), ('37', '19970721'), ('37', '19970728'), ('376', '20051031'), ('379', '20051107'), ('38', '19970804'), ('38', '19970811'), ('38', '19970818'), ('38', '19970825'), ('38', '19970901'), ('38', '19970908'), ('38', '19970915'), ('38', '19970922'), ('38', '19970929'), ('38', '19971006'), ('381', '20051114'), ('382', '20051121'), ('384', '20051128'), ('385', '20060206'), ('387', '20051205'), ('387', '20060130'), ('387', '20060213'), ('388', '20051212'), ('388', '20051219'), ('388', '20051226'), ('388', '20060101'), ('388', '20060102'), ('388', '20060109'), ('388', '20060116'), ('388', '20060123'), ('388', '20060220'), ('39', '19971013'), ('392', '20060227'), ('394', '20060306'), ('394', '20060313'), ('396', '20060320'), ('396', '20060327'), ('40', '19971020'), ('40', '19971027'), ('400', '20060403'), ('400', '20060410'), ('400', '20140120'), ('400', '20140217'), ('402', '20060417'), ('403', '20060501'), ('403', '20060508'), ('404', '20060424'), ('406', '20060515'), ('409', '20060522'), ('41', '19971103'), ('41', '19971110'), ('414', '20060529'), ('414', '20060605'), ('421', '20060612'), ('421', '20060619'), ('425', '20060626'), ('425', '20060703'), ('43', '19971117'), ('430', '20060710'), ('434', '20060717'), ('438', '20060724'), ('44', '19971124'), ('44', '19971201'), ('444', '20060731'), ('447', '20060807'), ('45', '19980202'), ('45', '19980209'), ('45', '19980216'), ('45', '19980223'), ('45', '19980302'), ('45', '19980309'), ('45', '19980316'), ('45', '19980323'), ('454', '20060814'), ('459', '20060821'), ('459', '20060828'), ('459', '20060904'), ('46', '19971208'), ('46', '19971215'), ('46', '19971222'), ('46', '19971229'), ('46', '19980101'), ('46', '19980105'), ('46', '19980112'), ('46', '19980119'), ('46', '19980126'), ('462', '20060911'), ('466', '20060918'), ('468', '20060925'), ('469', '20061002'), ('47', '19980330'), ('47', '19980406'), ('474', '20061009'), ('479', '20061016'), ('48', '19980413'), ('48', '19980420'), ('48', '19980427'), ('48', '19980504'), ('48', '19980511'), ('48', '19980518'), ('48', '19980525'), ('48', '19980601'), ('488', '20061023'), ('489', '20061030'), ('490', '20061106'), ('490', '20061113'), ('496', '20061120'), ('496', '20061127'), ('498', '20070129'), ('498', '20070205'), ('498', '20070212'), ('498', '20070219'), ('499', '20070108'), ('499', '20070115'), ('499', '20070122'), ('5', '19890925'), ('5', '19891002'), ('5', '19891009'), ('5', '19891016'), ('5', '19891023'), ('5', '19891030'), ('5', '19891106'), ('5', '19891113'), ('5', '19891120'), ('5', '19891127'), ('5', '19891204'), ('5', '19891211'), ('5', '19891218'), ('5', '19891225'), ('5', '19900101'), ('5', '19900108'), ('5', '19900115'), ('5', '19900122'), ('5', '19900129'), ('5', '19900205'), ('5', '19900212'), ('5', '19900219'), ('5', '19900226'), ('5', '19900305'), ('5', '19900312'), ('5', '19900319'), ('5', '19900326'), ('5', '19900402'), ('5', '19900409'), ('5', '19900416'), ('5', '19900423'), ('5', '19900430'), ('5', '19900507'), ('5', '19900514'), ('5', '19900521'), ('5', '19900528'), ('5', '19900604'), ('5', '19900611'), ('5', '19910311'), ('5', '19910318'), ('5', '19910325'), ('5', '19910401'), ('5', '19910408'), ('5', '19910415'), ('5', '19910422'), ('5', '19910429'), ('5', '19910506'), ('5', '19910513'), ('5', '19910520'), ('5', '19910527'), ('5', '19910603'), ('5', '19910610'), ('5', '19910617'), ('5', '19910624'), ('5', '19910701'), ('500', '20070226'), ('501', '20061204'), ('501', '20061211'), ('501', '20061218'), ('501', '20061225'), ('501', '20070101'), ('501', '20070305'), ('501', '20070312'), ('505', '20070319'), ('505', '20070326'), ('509', '20070402'), ('51', '19980608'), ('511', '20070409'), ('511', '20070416'), ('511', '20070423'), ('511', '20070430'), ('512', '20070507'), ('515', '20070514'), ('515', '20070521'), ('517', '20070528'), ('517', '20070604'), ('517', '20071126'), ('518', '20070611'), ('518', '20070723'), ('519', '20070618'), ('519', '20070625'), ('519', '20070702'), ('519', '20070716'), ('52', '19980615'), ('520', '20071022'), ('520', '20071203'), ('521', '20070709'), ('521', '20070730'), ('521', '20071119'), ('521', '20071210'), ('521', '20071217'), ('523', '20071112'), ('524', '20070806'), ('524', '20070827'), ('524', '20070903'), ('524', '20071029'), ('524', '20071105'), ('525', '20070820'), ('525', '20071015'), ('525', '20071224'), ('525', '20071231'), ('525', '20080101'), ('525', '20080107'), ('525', '20080128'), ('526', '20071008'), ('526', '20080114'), ('526', '20080121'), ('526', '20080225'), ('527', '20070813'), ('527', '20070910'), ('527', '20080204'), ('527', '20080218'), ('528', '20080211'), ('528', '20080303'), ('529', '20070917'), ('529', '20071001'), ('53', '19980622'), ('53', '19980629'), ('531', '20070924'), ('531', '20080310'), ('531', '20080317'), ('532', '20080324'), ('532', '20080331'), ('534', '20080407'), ('537', '20080414'), ('540', '20080421'), ('540', '20080428'), ('541', '20080505'), ('541', '20080616'), ('543', '20080623'), ('543', '20080630'), ('544', '20080512'), ('545', '20080609'), ('546', '20080519'), ('55', '19980706'), ('55', '19980713'), ('55', '19980720'), ('55', '19980817'), ('55', '19980824'), ('551', '20080526'), ('551', '20080602'), ('551', '20080707'), ('555', '20080714'), ('56', '19980727'), ('56', '19980803'), ('56', '19980810'), ('56', '19980831'), ('56', '19980907'), ('562', '20080721'), ('563', '20080728'), ('568', '20080804'), ('57', '19980914'), ('57', '19980921'), ('57', '19980928'), ('57', '19981109'), ('57', '19981116'), ('57', '19981123'), ('572', '20080811'), ('573', '20080818'), ('576', '20080825'), ('576', '20080901'), ('58', '19981005'), ('58', '19981012'), ('58', '19981026'), ('58', '19981102'), ('587', '20080908'), ('59', '19981019'), ('59', '19981130'), ('59', '19981207'), ('59', '19981214'), ('59', '19981221'), ('59', '19981228'), ('59', '19990101'), ('59', '19990301'), ('59', '19990308'), ('593', '20080915'), ('596', '20080922'), ('6', '19900618'), ('6', '19900625'), ('6', '19900702'), ('6', '19900709'), ('6', '19900716'), ('6', '19900723'), ('6', '19900730'), ('6', '19900806'), ('6', '19900813'), ('6', '19900820'), ('6', '19900827'), ('6', '19900903'), ('6', '19900910'), ('6', '19900917'), ('6', '19900924'), ('6', '19901001'), ('6', '19901008'), ('6', '19901015'), ('6', '19901022'), ('6', '19901029'), ('6', '19901105'), ('6', '19901112'), ('6', '19901119'), ('6', '19901126'), ('6', '19901203'), ('6', '19901210'), ('6', '19901217'), ('6', '19901224'), ('6', '19901231'), ('6', '19910101'), ('6', '19910107'), ('6', '19910114'), ('6', '19910121'), ('6', '19910128'), ('6', '19910204'), ('6', '19910211'), ('6', '19910218'), ('6', '19910225'), ('6', '19910304'), ('6', '19910715'), ('6', '19910722'), ('6', '19910729'), ('6', '19910805'), ('6', '19910812'), ('6', '19910819'), ('6', '19920210'), ('60', '19990104'), ('60', '19990111'), ('60', '19990118'), ('60', '19990125'), ('60', '19990208'), ('60', '19990215'), ('60', '19990222'), ('60', '19990315'), ('60', '19990322'), ('60', '19990329'), ('60', '19990405'), ('60', '19990412'), ('60', '19990419'), ('600', '20080929'), ('601', '20081006'), ('602', '20081013'), ('604', '20081020'), ('61', '19990201'), ('617', '20081027'), ('62', '19990426'), ('621', '20081103'), ('621', '20081117'), ('622', '20081110'), ('622', '20081124'), ('622', '20081201'), ('623', '20090105'), ('623', '20090112'), ('623', '20090119'), ('623', '20090126'), ('623', '20090216'), ('623', '20090309'), ('623', '20090316'), ('623', '20090504'), ('624', '20090202'), ('624', '20090209'), ('624', '20090302'), ('625', '20081208'), ('625', '20081222'), ('625', '20081229'), ('625', '20090101'), ('625', '20090223'), ('626', '20081215'), ('626', '20090323'), ('626', '20090330'), ('626', '20090406'), ('626', '20090427'), ('627', '20090518'), ('628', '20090413'), ('628', '20090420'), ('629', '20090511'), ('63', '19990510'), ('630', '20090525'), ('630', '20090601'), ('635', '20090608'), ('64', '19990503'), ('64', '19990517'), ('64', '19990524'), ('64', '19990531'), ('643', '20090615'), ('647', '20090622'), ('647', '20090629'), ('654', '20090706'), ('66', '19990607'), ('66', '19990614'), ('66', '19990621'), ('66', '19990628'), ('66', '19990705'), ('660', '20090713'), ('668', '20090720'), ('67', '19990712'), ('67', '19990719'), ('67', '19990726'), ('67', '19990802'), ('673', '20090803'), ('674', '20090727'), ('674', '20090810'), ('674', '20090817'), ('678', '20090824'), ('678', '20090831'), ('678', '20090907'), ('684', '20090914'), ('686', '20090921'), ('69', '19990809'), ('69', '19990823'), ('695', '20090928'), ('696', '20091005'), ('696', '20091012'), ('7', '19910708'), ('7', '19910826'), ('7', '19910902'), ('7', '19910909'), ('7', '19910916'), ('7', '19910923'), ('7', '19910930'), ('70', '19990816'), ('701', '20091019'), ('704', '20091026'), ('705', '20091102'), ('71', '20010402'), ('71', '20010409'), ('711', '20091109'), ('714', '20091116'), ('72', '19990830'), ('72', '19990906'), ('72', '20010416'), ('720', '20091123'), ('720', '20091207'), ('723', '20091130'), ('724', '20091214'), ('725', '20091221'), ('726', '20100111'), ('727', '20091228'), ('727', '20100101'), ('727', '20100104'), ('729', '20100118'), ('729', '20100125'), ('73', '19990913'), ('73', '19990920'), ('732', '20100208'), ('733', '20100201'), ('734', '20100215'), ('735', '20100222'), ('735', '20100322'), ('735', '20100329'), ('736', '20100301'), ('737', '20100308'), ('737', '20100315'), ('739', '20100405'), ('74', '20001120'), ('74', '20001127'), ('74', '20001204'), ('74', '20010423'), ('743', '20100412'), ('745', '20100419'), ('75', '19990927'), ('75', '20001113'), ('75', '20001211'), ('75', '20001218'), ('75', '20001225'), ('75', '20010101'), ('75', '20010108'), ('75', '20010115'), ('75', '20010122'), ('75', '20010430'), ('750', '20100426'), ('750', '20100510'), ('750', '20100517'), ('750', '20100607'), ('750', '20100621'), ('750', '20100628'), ('751', '20100614'), ('752', '20100524'), ('752', '20100531'), ('753', '20100503'), ('753', '20100705'), ('76', '20010129'), ('76', '20010205'), ('76', '20010507'), ('76', '20010514'), ('76', '20040510'), ('763', '20100712'), ('764', '20100719'), ('768', '20100726'), ('77', '19991004'), ('77', '20010212'), ('77', '20010521'), ('774', '20100802'), ('78', '19991025'), ('78', '19991101'), ('78', '19991108'), ('78', '19991115'), ('78', '19991122'), ('78', '20010219'), ('78', '20010226'), ('78', '20010305'), ('78', '20010312'), ('788', '20100809'), ('789', '20100816'), ('79', '19991011'), ('79', '19991129'), ('79', '19991206'), ('79', '20010528'), ('79', '20010604'), ('79', '20010611'), ('79', '20010618'), ('79', '20010625'), ('79', '20010702'), ('79', '20010709'), ('792', '20100823'), ('8', '19911007'), ('8', '19911014'), ('8', '19911021'), ('8', '19911028'), ('80', '19991018'), ('80', '19991213'), ('80', '19991220'), ('80', '19991227'), ('80', '20000101'), ('80', '20000103'), ('80', '20000110'), ('80', '20000117'), ('80', '20000124'), ('80', '20000131'), ('80', '20010716'), ('80', '20010723'), ('80', '20010730'), ('800', '20100830'), ('800', '20100906'), ('800', '20130318'), ('81', '20000207'), ('81', '20000214'), ('81', '20000221'), ('81', '20000228'), ('81', '20010806'), ('81', '20010813'), ('81', '20010820'), ('818', '20100913'), ('82', '20000306'), ('82', '20000313'), ('82', '20000320'), ('82', '20000327'), ('82', '20000403'), ('82', '20010319'), ('82', '20010326'), ('82', '20010827'), ('82', '20010903'), ('822', '20100920'), ('825', '20100927'), ('83', '20000410'), ('83', '20000417'), ('83', '20000424'), ('83', '20010910'), ('835', '20101004'), ('84', '20000515'), ('84', '20000522'), ('84', '20000529'), ('84', '20000605'), ('84', '20010917'), ('84', '20011008'), ('847', '20101011'), ('85', '20000501'), ('85', '20000508'), ('85', '20011001'), ('85', '20011015'), ('853', '20101018'), ('858', '20101025'), ('86', '20001106'), ('86', '20010924'), ('869', '20101101'), ('87', '20000612'), ('87', '20000619'), ('87', '20011022'), ('873', '20101108'), ('883', '20101115'), ('886', '20101122'), ('889', '20101129'), ('89', '20000626'), ('89', '20000703'), ('89', '20001002'), ('89', '20011029'), ('89', '20011105'), ('893', '20101206'), ('894', '20101213'), ('895', '20101227'), ('895', '20110101'), ('896', '20101220'), ('9', '19911202'), ('9', '19930802'), ('9', '19930809'), ('9', '19930816'), ('9', '19930823'), ('9', '19930830'), ('9', '19930906'), ('9', '19930913'), ('90', '20000710'), ('90', '20000925'), ('90', '20001009'), ('91', '20000717'), ('91', '20000814'), ('91', '20000821'), ('91', '20000828'), ('91', '20000904'), ('913', '20110103'), ('913', '20110110'), ('915', '20110117'), ('915', '20110124'), ('918', '20110131'), ('92', '20000724'), ('92', '20000911'), ('92', '20001016'), ('92', '20001023'), ('92', '20040419'), ('923', '20110207'), ('924', '20110214'), ('925', '20110221'), ('93', '20000918'), ('93', '20001030'), ('930', '20110228'), ('931', '20110307'), ('931', '20110314'), ('934', '20110321'), ('934', '20110328'), ('941', '20110404'), ('946', '20110411'), ('951', '20110502'), ('953', '20110418'), ('953', '20110425'), ('957', '20110509'), ('958', '20110516'), ('96', '20000731'), ('96', '20000807'), ('96', '20011112'), ('966', '20110523'), ('966', '20110530'), ('97', '20011119'), ('97', '20020204'), ('98', '20011217'), ('98', '20011224'), ('98', '20011231'), ('98', '20020101'), ('98', '20020107'), ('98', '20020114'), ('98', '20020121'), ('98', '20020128'), ('98', '20020211'), ('98', '20020218'), ('987', '20110606'), ('99', '20011203'), ('99', '20011210'), ('99', '20020225'), ('992', '20110613'), ('996', '20110620'), ('996', '20110627')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT COUNT(tours), ranking_date FROM rankings GROUP BY ranking_date","Not match: [('0', '19870119'), ('0', '19870126'), ('0', '19870202'), ('0', '19870209'), ('0', '19870302'), ('0', '19870330'), ('0', '19870406'), ('0', '19870413'), ('0', '19870420'), ('0', '19870427'), ('0', '19870504'), ('0', '19870511'), ('0', '19870518'), ('0', '19870525'), ('0', '19870601'), ('0', '19870608'), ('0', '19870615'), ('0', '19870622'), ('0', '19870629'), ('0', '19870706'), ('0', '19870713'), ('0', '19870720'), ('0', '19870727'), ('0', '19870803'), ('0', '19870810'), ('0', '19870817'), ('0', '19870824'), ('0', '19870831'), ('0', '19870907'), ('0', '19870914'), ('0', '19870921'), ('0', '19870928'), ('0', '19871005'), ('0', '19871012'), ('0', '19871019'), ('0', '19871026'), ('0', '19871102'), ('0', '19871109'), ('0', '19871116'), ('0', '19871123'), ('0', '19871130'), ('0', '19871207'), ('0', '19871214'), ('0', '19871221'), ('0', '19871228'), ('0', '19880101'), ('0', '19880104'), ('0', '19880111'), ('0', '19880118'), ('0', '19880125'), ('0', '19880201'), ('0', '19880208'), ('0', '19880215'), ('0', '19880222'), ('0', '19880229'), ('0', '19880307'), ('0', '19880314'), ('0', '19880321'), ('0', '19880328'), ('0', '19880404'), ('0', '19880411'), ('0', '19880418'), ('0', '19880425'), ('0', '19880502'), ('0', '19880509'), ('0', '19880516'), ('0', '19880523'), ('0', '19880530'), ('0', '19880606'), ('0', '19880613'), ('0', '19880620'), ('0', '19880627'), ('0', '19880704'), ('0', '19880711'), ('0', '19880718'), ('0', '19880725'), ('0', '19880801'), ('0', '19880808'), ('0', '19880815'), ('0', '19880822'), ('0', '19880829'), ('0', '19880905'), ('0', '19880912'), ('0', '19880919'), ('0', '19880926'), ('0', '19881003'), ('0', '19881010'), ('0', '19881017'), ('0', '19881024'), ('0', '19881031'), ('0', '19881107'), ('0', '19881114'), ('0', '19890213'), ('0', '19890220'), ('0', '19890227'), ('0', '19890306'), ('0', '19890327'), ('0', '19890403'), ('10003', '20091019'), ('10025', '20091026'), ('1004', '20010212'), ('10061', '20091102'), ('1011', '20010507'), ('1011', '20010514'), ('10116', '20091109'), ('1013', '20000131'), ('10137', '20091116'), ('10204', '20091123'), ('10221', '20091207'), ('10238', '20091130'), ('1027', '20010219'), ('1027', '20010226'), ('1027', '20010305'), ('1027', '20010312'), ('10272', '20091214'), ('10272', '20091221'), ('1029', '20010521'), ('10318', '20091228'), ('10318', '20100101'), ('10318', '20100104'), ('10320', '20100111'), ('10329', '20100118'), ('10329', '20100125'), ('10372', '20100208'), ('10373', '20100201'), ('1038', '20000207'), ('1038', '20000214'), ('1038', '20000221'), ('1038', '20000228'), ('10389', '20100215'), ('10404', '20100222'), ('10412', '20100322'), ('10412', '20100329'), ('10430', '20100301'), ('10442', '20100308'), ('10442', '20100315'), ('10481', '20100405'), ('10515', '20100412'), ('10543', '20100419'), ('10576', '20100510'), ('10580', '20100426'), ('10590', '20100503'), ('10593', '20100517'), ('10613', '20100607'), ('10630', '20100614'), ('10634', '20100524'), ('10634', '20100531'), ('10634', '20100621'), ('10634', '20100628'), ('1065', '20000306'), ('1065', '20000313'), ('1065', '20000320'), ('1065', '20000327'), ('1065', '20000403'), ('1067', '20010528'), ('1067', '20010604'), ('10685', '20100705'), ('10726', '20100712'), ('1073', '20010625'), ('1073', '20010702'), ('10756', '20100719'), ('10817', '20100726'), ('10835', '20100802'), ('1093', '20000410'), ('1093', '20000417'), ('1093', '20000424'), ('10937', '20100809'), ('1094', '20010611'), ('1094', '20010618'), ('10999', '20100816'), ('1101', '20010319'), ('1101', '20010326'), ('11026', '20100823'), ('1106', '20000515'), ('1106', '20000522'), ('1106', '20000529'), ('1106', '20000605'), ('11125', '20100830'), ('11125', '20100906'), ('1113', '20010709'), ('1122', '20000501'), ('1122', '20000508'), ('11256', '20100913'), ('11290', '20100920'), ('11339', '20100927'), ('1135', '20010716'), ('11460', '20101004'), ('1149', '20010723'), ('1149', '20010730'), ('11566', '20101011'), ('11594', '20101018'), ('1160', '20000612'), ('1160', '20000619'), ('11617', '20101025'), ('11687', '20101101'), ('1173', '20001106'), ('11735', '20101108'), ('1175', '20010806'), ('1175', '20010813'), ('1175', '20010820'), ('118', '19950717'), ('118', '19950724'), ('118', '19950731'), ('118', '19950807'), ('118', '19950814'), ('11814', '20101115'), ('11845', '20101122'), ('1187', '20040510'), ('11877', '20101129'), ('1188', '20000626'), ('1188', '20000703'), ('11888', '20101206'), ('119', '19920824'), ('11904', '20101227'), ('11904', '20110101'), ('11907', '20101213'), ('11913', '20101220'), ('1201', '20010827'), ('1201', '20010903'), ('1204', '20000710'), ('1205', '20000717'), ('12060', '20110103'), ('12067', '20110110'), ('12094', '20110117'), ('12094', '20110124'), ('1212', '20000724'), ('12143', '20110131'), ('12181', '20110207'), ('12201', '20110221'), ('12204', '20110214'), ('1223', '20001002'), ('1224', '20000814'), ('1224', '20000821'), ('1224', '20000828'), ('1224', '20000904'), ('12254', '20110228'), ('12267', '20110307'), ('12267', '20110314'), ('1228', '20010910'), ('12303', '20110321'), ('12303', '20110328'), ('1231', '20000925'), ('1231', '20010917'), ('1232', '20001009'), ('12343', '20110404'), ('12398', '20110411'), ('1241', '20000911'), ('12422', '20110425'), ('12434', '20110418'), ('12438', '20110502'), ('1245', '20001023'), ('12467', '20110516'), ('1247', '20001030'), ('12482', '20110509'), ('125', '19960108'), ('125', '19960115'), ('125', '19960122'), ('125', '19960129'), ('125', '19960205'), ('125', '19960212'), ('125', '19960219'), ('12522', '20110523'), ('12522', '20110530'), ('1253', '20001016'), ('1263', '20010924'), ('1265', '20000918'), ('12659', '20110606'), ('1267', '20011008'), ('12682', '20110613'), ('12686', '20110620'), ('12686', '20110627'), ('1276', '20000731'), ('1276', '20000807'), ('12867', '20110704'), ('1287', '20011001'), ('1288', '20011015'), ('12895', '20110711'), ('1291', '20011022'), ('12927', '20110718'), ('12999', '20110801'), ('13006', '20110725'), ('13048', '20130318'), ('13081', '20110808'), ('131', '19950821'), ('131', '19950828'), ('131', '19950904'), ('131', '19950911'), ('131', '19950918'), ('131', '19950925'), ('131', '19951002'), ('131', '19951009'), ('131', '19951016'), ('131', '19951023'), ('131', '19951030'), ('131', '19951106'), ('1312', '20011029'), ('1312', '20011105'), ('13129', '20110815'), ('13140', '20110822'), ('13174', '20110829'), ('13174', '20110905'), ('13299', '20110912'), ('13342', '20110919'), ('13372', '20111003'), ('13382', '20110926'), ('13382', '20111010'), ('13411', '20111017'), ('13443', '20111024'), ('13443', '20111107'), ('13465', '20111031'), ('13482', '20111114'), ('13517', '20111128'), ('13518', '20111121'), ('13536', '20111212'), ('13542', '20111205'), ('13565', '20111219'), ('13603', '20111226'), ('13603', '20120101'), ('13610', '20120102'), ('13618', '20120116'), ('13618', '20120123'), ('13628', '20120109'), ('13666', '20120206'), ('13667', '20120130'), ('13674', '20120213'), ('13719', '20120220'), ('13788', '20120227'), ('13791', '20120305'), ('13791', '20120312'), ('138', '19951113'), ('138', '19951120'), ('138', '19951127'), ('138', '19951204'), ('138', '19951211'), ('138', '19951218'), ('138', '19951225'), ('138', '19960101'), ('13818', '20120319'), ('13818', '20120326'), ('13881', '20120402'), ('13902', '20120409'), ('13938', '20120416'), ('13949', '20121231'), ('13964', '20120423'), ('13966', '20130107'), ('13983', '20120430'), ('14015', '20120514'), ('14016', '20120507'), ('14034', '20120521'), ('14072', '20120611'), ('14087', '20120528'), ('14087', '20120604'), ('1412', '20011112'), ('1412', '20011119'), ('14138', '20120618'), ('14172', '20120625'), ('14172', '20120702'), ('14180', '20120709'), ('1422', '20020204'), ('1422', '20020211'), ('1422', '20020218'), ('14223', '20120716'), ('1424', '20020225'), ('1424', '20020304'), ('1424', '20020311'), ('14250', '20120723'), ('14264', '20120730'), ('14286', '20120806'), ('1430', '20011217'), ('1430', '20011224'), ('1430', '20011231'), ('1430', '20020101'), ('1430', '20020107'), ('1430', '20020114'), ('1430', '20020121'), ('1430', '20020128'), ('14331', '20120813'), ('14361', '20120820'), ('1437', '20011126'), ('1437', '20011203'), ('1437', '20011210'), ('14389', '20120827'), ('14389', '20120903'), ('14389', '20120910'), ('14402', '20120917'), ('14438', '20120924'), ('14449', '20130415'), ('14451', '20130422'), ('14462', '20130429'), ('14472', '20121001'), ('1448', '20020318'), ('1448', '20020325'), ('14480', '20121008'), ('14487', '20130506'), ('14513', '20121015'), ('14516', '20130513'), ('14525', '20121022'), ('14531', '20130520'), ('14545', '20130527'), ('14545', '20130603'), ('14547', '20121029'), ('14553', '20130610'), ('14554', '20130225'), ('14569', '20130617'), ('14585', '20121105'), ('14591', '20130408'), ('14599', '20130812'), ('14610', '20121203'), ('14612', '20121126'), ('14621', '20121112'), ('14624', '20121119'), ('14633', '20121217'), ('14639', '20121210'), ('14648', '20130101'), ('14649', '20121224'), ('14649', '20130218'), ('14650', '20130624'), ('14651', '20130211'), ('14651', '20130708'), ('14652', '20130204'), ('14667', '20130114'), ('14667', '20130121'), ('14667', '20130128'), ('14679', '20130805'), ('14689', '20130715'), ('14695', '20130304'), ('147', '19960226'), ('147', '19960304'), ('147', '19960311'), ('147', '19960318'), ('147', '19960325'), ('147', '19960401'), ('147', '19960408'), ('147', '19960415'), ('147', '19960422'), ('147', '19960429'), ('147', '19960506'), ('147', '19960513'), ('147', '19960520'), ('147', '19960527'), ('147', '19960603'), ('147', '19960610'), ('147', '19960617'), ('147', '19960624'), ('147', '19960701'), ('14714', '20130826'), ('14727', '20130311'), ('14740', '20130819'), ('14751', '20130722'), ('14766', '20130729'), ('14796', '20130902'), ('14820', '20130909'), ('14866', '20130916'), ('14878', '20130923'), ('14885', '20130930'), ('1489', '20040419'), ('15025', '20131021'), ('15028', '20131007'), ('15071', '20131028'), ('15072', '20131014'), ('15098', '20131104'), ('15101', '20131111'), ('15151', '20131118'), ('15334', '20131202'), ('15337', '20131125'), ('15475', '20150427'), ('15512', '20131209'), ('15540', '20131216'), ('15545', '20150413'), ('15557', '20150302'), ('15568', '20150420'), ('15578', '20150406'), ('15623', '20150518'), ('15632', '20140203'), ('15637', '20140113'), ('15637', '20140210'), ('15646', '20140127'), ('15659', '20140224'), ('15701', '20131223'), ('15703', '20140106'), ('15708', '20131230'), ('15710', '20150511'), ('1573', '20020401'), ('1574', '20020408'), ('1574', '20020415'), ('1574', '20020422'), ('15741', '20150525'), ('15741', '20150608'), ('15761', '20150803'), ('1577', '20020429'), ('1577', '20020513'), ('1577', '20020520'), ('1577', '20020527'), ('1577', '20020603'), ('15776', '20150810'), ('15800', '20150921'), ('15810', '20150622'), ('15832', '20150914'), ('15908', '20150824'), ('15983', '20170717'), ('16111', '20170306'), ('16124', '20170508'), ('16138', '20151019'), ('16138', '20170724'), ('16145', '20170731'), ('16147', '20170807'), ('16157', '20170612'), ('16161', '20170911'), ('16178', '20151005'), ('16184', '20150831'), ('16184', '20170626'), ('16189', '20170619'), ('16191', '20151012'), ('16204', '20170515'), ('16207', '20170220'), ('16226', '20170424'), ('16230', '20170320'), ('16233', '20161010'), ('16249', '20161114'), ('16268', '20170814'), ('16270', '20170417'), ('16279', '20170821'), ('16290', '20170522'), ('16293', '20151102'), ('16293', '20160627'), ('16294', '20161128'), ('16301', '20170828'), ('16303', '20170501'), ('16305', '20160926'), ('16305', '20170213'), ('16314', '20160620'), ('16316', '20160919'), ('16325', '20160815'), ('16336', '20161205'), ('16345', '20161121'), ('16349', '20161031'), ('16351', '20160523'), ('16361', '20160606'), ('16364', '20161107'), ('16372', '20170102'), ('16374', '20160509'), ('16379', '20170116'), ('16387', '20161212'), ('16388', '20160502'), ('164', '19970707'), ('16406', '20170109'), ('16446', '20160411'), ('16454', '20160222'), ('16454', '20160418'), ('16489', '20160425'), ('16515', '20160229'), ('16517', '20160307'), ('16518', '20160118'), ('16529', '20160215'), ('16586', '20160208'), ('16597', '20170703'), ('16629', '20160201'), ('16649', '20170529'), ('171', '19960708'), ('171', '19960715'), ('171', '19960722'), ('171', '19960729'), ('171', '19960805'), ('171', '19960812'), ('171', '19960819'), ('171', '19960826'), ('171', '19960902'), ('172', '19960916'), ('172', '19960923'), ('172', '19960930'), ('172', '19961007'), ('1730', '20020506'), ('175', '19961014'), ('175', '19961021'), ('1783', '20020610'), ('1783', '20020624'), ('1783', '20020701'), ('1803', '20020617'), ('1828', '20020722'), ('1834', '20020708'), ('1835', '20020715'), ('185', '19961223'), ('185', '19961230'), ('185', '19970101'), ('185', '19970106'), ('185', '19970113'), ('185', '19970120'), ('1853', '20020729'), ('1853', '20020805'), ('1860', '20030526'), ('191', '19961028'), ('191', '19961104'), ('1915', '20020819'), ('1925', '20020812'), ('194', '19960909'), ('209', '19970127'), ('209', '19970203'), ('209', '19970210'), ('209', '19970217'), ('2111', '20020826'), ('2111', '20020902'), ('213', '19961111'), ('213', '19961118'), ('213', '19961125'), ('213', '19961202'), ('213', '19961209'), ('213', '19961216'), ('223', '19970224'), ('223', '19970303'), ('223', '19970310'), ('223', '19970317'), ('223', '19970324'), ('223', '19970331'), ('223', '19970407'), ('225', '19970414'), ('225', '19970421'), ('225', '19970428'), ('225', '19970505'), ('225', '19970512'), ('225', '19970519'), ('225', '19970526'), ('225', '19970602'), ('225', '19970609'), ('225', '19970616'), ('225', '19970623'), ('225', '19970630'), ('2361', '20040517'), ('2451', '20020909'), ('2457', '20020916'), ('2462', '20020923'), ('2490', '20030217'), ('2496', '20020930'), ('2497', '20021111'), ('2497', '20021118'), ('2497', '20021125'), ('2497', '20021202'), ('2497', '20021209'), ('2497', '20021216'), ('2497', '20021223'), ('2497', '20021230'), ('2497', '20030101'), ('2497', '20030106'), ('2497', '20030113'), ('2497', '20030120'), ('2497', '20030127'), ('2498', '20021104'), ('2505', '20021021'), ('2505', '20021028'), ('2507', '20030210'), ('2517', '20030203'), ('2520', '20021014'), ('2526', '20021007'), ('2528', '20030224'), ('2535', '20040531'), ('2549', '20030303'), ('2549', '20030310'), ('257', '19970714'), ('257', '19970721'), ('257', '19970728'), ('2571', '20030317'), ('2571', '20030324'), ('2587', '20030407'), ('2587', '20030414'), ('2608', '20030421'), ('2613', '20040503'), ('2614', '20030331'), ('2652', '20030505'), ('2671', '20030512'), ('2719', '20030428'), ('2728', '20030519'), ('2728', '20030602'), ('273', '19970804'), ('273', '19970811'), ('273', '19970818'), ('273', '19970825'), ('273', '19970901'), ('273', '19970908'), ('273', '19970915'), ('273', '19970922'), ('273', '19970929'), ('273', '19971006'), ('2730', '20030707'), ('2731', '20030623'), ('2731', '20030630'), ('2732', '20030804'), ('2734', '20030811'), ('2753', '20030609'), ('2753', '20030616'), ('2755', '20030714'), ('2755', '20030818'), ('2759', '20030721'), ('2777', '20030728'), ('2798', '20030908'), ('28', '19890101'), ('28', '19900101'), ('2801', '20030825'), ('2801', '20030901'), ('2847', '20030915'), ('2862', '20030922'), ('29', '19881121'), ('29', '19881128'), ('29', '19881205'), ('29', '19881212'), ('29', '19881219'), ('29', '19881226'), ('29', '19890102'), ('29', '19890109'), ('29', '19890116'), ('29', '19890123'), ('29', '19890130'), ('29', '19890206'), ('29', '19890313'), ('29', '19890320'), ('29', '19890410'), ('29', '19890417'), ('29', '19890424'), ('29', '19890501'), ('29', '19890508'), ('29', '19890515'), ('29', '19890522'), ('29', '19890529'), ('29', '19890605'), ('29', '19890612'), ('29', '19890619'), ('29', '19890626'), ('29', '19890703'), ('29', '19890710'), ('29', '19890717'), ('29', '19890724'), ('29', '19890731'), ('29', '19890807'), ('29', '19890814'), ('29', '19890821'), ('29', '19890828'), ('29', '19890904'), ('29', '19890911'), ('29', '19890918'), ('29', '19890925'), ('29', '19891002'), ('29', '19891009'), ('29', '19891016'), ('29', '19891023'), ('29', '19891030'), ('29', '19891106'), ('29', '19891113'), ('29', '19891120'), ('29', '19891127'), ('29', '19891204'), ('29', '19891211'), ('29', '19891218'), ('29', '19891225'), ('29', '19900108'), ('29', '19900115'), ('29', '19900122'), ('29', '19900129'), ('29', '19900205'), ('29', '19900212'), ('29', '19900219'), ('29', '19900226'), ('29', '19900305'), ('29', '19900312'), ('29', '19900319'), ('29', '19900326'), ('29', '19900402'), ('29', '19900409'), ('29', '19900416'), ('29', '19900423'), ('29', '19900430'), ('29', '19900507'), ('29', '19900514'), ('29', '19900521'), ('29', '19900528'), ('29', '19900604'), ('29', '19900611'), ('29', '19910101'), ('29', '19910311'), ('29', '19910318'), ('29', '19910325'), ('29', '19910401'), ('29', '19910408'), ('29', '19910415'), ('29', '19910422'), ('29', '19910429'), ('29', '19910506'), ('29', '19910513'), ('29', '19910520'), ('29', '19910527'), ('29', '19910603'), ('29', '19910610'), ('29', '19910617'), ('29', '19910624'), ('29', '19910701'), ('29', '19910715'), ('29', '19910722'), ('29', '19910729'), ('29', '19910805'), ('29', '19910812'), ('29', '19910819'), ('29', '19920210'), ('2930', '20030929'), ('2955', '20040524'), ('2961', '20031006'), ('2966', '20031013'), ('299', '19971013'), ('30', '19900618'), ('30', '19900625'), ('30', '19900702'), ('30', '19900709'), ('30', '19900716'), ('30', '19900723'), ('30', '19900730'), ('30', '19900806'), ('30', '19900813'), ('30', '19900820'), ('30', '19900827'), ('30', '19900903'), ('30', '19900910'), ('30', '19900917'), ('30', '19900924'), ('30', '19901001'), ('30', '19901008'), ('30', '19901015'), ('30', '19901022'), ('30', '19901029'), ('30', '19901105'), ('30', '19901112'), ('30', '19901119'), ('30', '19901126'), ('30', '19901203'), ('30', '19901210'), ('30', '19901217'), ('30', '19901224'), ('30', '19901231'), ('30', '19910107'), ('30', '19910114'), ('30', '19910121'), ('30', '19910128'), ('30', '19910204'), ('30', '19910211'), ('30', '19910218'), ('30', '19910225'), ('30', '19910304'), ('30', '19910708'), ('30', '19910826'), ('30', '19910902'), ('30', '19910909'), ('30', '19910916'), ('30', '19910923'), ('30', '19910930'), ('3020', '20031027'), ('3035', '20031020'), ('3038', '20031103'), ('3052', '20031110'), ('3065', '20031117'), ('3092', '20031124'), ('31', '19911007'), ('31', '19911014'), ('31', '19911021'), ('31', '19911028'), ('31', '19911202'), ('3120', '20031201'), ('314', '19971020'), ('314', '19971027'), ('3190', '20031208'), ('32', '19930208'), ('3206', '20040105'), ('3206', '20040112'), ('3206', '20040119'), ('3206', '20040126'), ('3211', '20031215'), ('3211', '20031222'), ('3214', '20031229'), ('3214', '20040101'), ('3257', '20040202'), ('3265', '20040209'), ('3277', '20040405'), ('3279', '20040301'), ('3282', '20040216'), ('3282', '20040223'), ('3286', '20040308'), ('3286', '20040315'), ('3286', '20040322'), ('3286', '20040329'), ('3286', '20040412'), ('337', '19971103'), ('337', '19971110'), ('3379', '20040426'), ('3433', '20040607'), ('3456', '20040614'), ('3492', '20040621'), ('3492', '20040628'), ('3498', '20040705'), ('3516', '20040712'), ('3587', '20040719'), ('3592', '20040726'), ('3592', '20040802'), ('363', '19971117'), ('363', '19971124'), ('363', '19971201'), ('3645', '20040809'), ('3647', '20040816'), ('3661', '20040823'), ('3705', '20040830'), ('3705', '20040906'), ('3785', '20040913'), ('3831', '20040920'), ('3913', '20040927'), ('394', '19971208'), ('394', '19971215'), ('394', '19971222'), ('394', '19971229'), ('394', '19980101'), ('394', '19980105'), ('394', '19980112'), ('394', '19980119'), ('394', '19980126'), ('394', '19980202'), ('394', '19980209'), ('394', '19980216'), ('394', '19980223'), ('394', '19980302'), ('394', '19980309'), ('394', '19980316'), ('394', '19980323'), ('3957', '20041004'), ('3968', '20041025'), ('3986', '20041011'), ('3987', '20041018'), ('4011', '20041101'), ('4071', '20041108'), ('4124', '20041115'), ('4145', '20041122'), ('4147', '20041129'), ('4160', '20041206'), ('4160', '20041213'), ('4160', '20041220'), ('4160', '20041227'), ('4160', '20050101'), ('4160', '20050103'), ('4160', '20050110'), ('4160', '20050117'), ('4160', '20050124'), ('4198', '20050131'), ('4198', '20050207'), ('4211', '20050214'), ('426', '19980330'), ('426', '19980406'), ('4286', '20050221'), ('4286', '20050228'), ('43', '19930802'), ('43', '19930809'), ('43', '19930816'), ('43', '19930823'), ('43', '19930830'), ('43', '19930906'), ('43', '19930913'), ('4313', '20050307'), ('4313', '20050314'), ('4333', '20050321'), ('4333', '20050328'), ('4362', '20050404'), ('4371', '20050411'), ('4379', '20050418'), ('4379', '20050425'), ('4379', '20050502'), ('44', '19911104'), ('44', '19911111'), ('44', '19911118'), ('44', '19911125'), ('44', '19911209'), ('44', '19920101'), ('44', '19930101'), ('44', '19930517'), ('44', '19930524'), ('44', '19930531'), ('44', '19930607'), ('44', '19930614'), ('44', '19930621'), ('44', '19930628'), ('44', '19940418'), ('4470', '20050509'), ('4489', '20050516'), ('45', '19911216'), ('45', '19911223'), ('45', '19911230'), ('45', '19920106'), ('45', '19920113'), ('45', '19920120'), ('45', '19920127'), ('45', '19920203'), ('45', '19920217'), ('45', '19920224'), ('45', '19920302'), ('45', '19920309'), ('45', '19920316'), ('45', '19920323'), ('45', '19920330'), ('45', '19920406'), ('45', '19920413'), ('45', '19920420'), ('45', '19920427'), ('45', '19920504'), ('45', '19920511'), ('45', '19920518'), ('45', '19920525'), ('45', '19920601'), ('45', '19920608'), ('45', '19920615'), ('45', '19920622'), ('45', '19920629'), ('45', '19920706'), ('45', '19920727'), ('45', '19921228'), ('45', '19930104'), ('45', '19930111'), ('45', '19930118'), ('45', '19930125'), ('45', '19930201'), ('45', '19930215'), ('45', '19930222'), ('45', '19930301'), ('45', '19930308'), ('45', '19930315'), ('45', '19930322'), ('45', '19930329'), ('45', '19930405'), ('4522', '20050523'), ('4522', '20050530'), ('459', '19980413'), ('459', '19980420'), ('459', '19980427'), ('459', '19980504'), ('459', '19980511'), ('459', '19980518'), ('459', '19980525'), ('459', '19980601'), ('46', '19920713'), ('46', '19920720'), ('4682', '20050606'), ('4705', '20050613'), ('4727', '20050620'), ('4727', '20050627'), ('4792', '20050704'), ('4812', '20160111'), ('4816', '20050711'), ('4847', '20050718'), ('4859', '20050725'), ('4926', '20050801'), ('4982', '20050808'), ('5020', '20050815'), ('5090', '20050822'), ('5100', '20050829'), ('5100', '20050905'), ('5173', '20050919'), ('5175', '20050926'), ('5187', '20050912'), ('5215', '20051003'), ('5237', '20051017'), ('5249', '20051010'), ('5257', '20051024'), ('5331', '20051031'), ('5357', '20051114'), ('5362', '20051107'), ('5391', '20051121'), ('5401', '20051128'), ('5425', '20060206'), ('543', '19980608'), ('5441', '20060130'), ('5441', '20060213'), ('5452', '20051205'), ('5452', '20051212'), ('5452', '20051219'), ('5452', '20051226'), ('5452', '20060101'), ('5452', '20060102'), ('5452', '20060109'), ('5452', '20060116'), ('5452', '20060123'), ('5478', '20060220'), ('5528', '20060227'), ('5548', '20060306'), ('5548', '20060313'), ('5559', '20060320'), ('5559', '20060327'), ('5626', '20060403'), ('5626', '20060410'), ('5644', '20060417'), ('5654', '20060508'), ('5656', '20060501'), ('5658', '20060424'), ('5683', '20060515'), ('569', '19980615'), ('57', '19940425'), ('57', '19940502'), ('57', '19940509'), ('57', '19940516'), ('57', '19940523'), ('57', '19940530'), ('5721', '20060522'), ('5798', '20060529'), ('5798', '20060605'), ('58', '19931004'), ('58', '19931011'), ('58', '19931018'), ('58', '19931025'), ('58', '19931101'), ('58', '19931108'), ('5862', '20060612'), ('5897', '20060619'), ('59', '19941024'), ('59', '19941031'), ('590', '19980622'), ('590', '19980629'), ('5944', '20060626'), ('5944', '20060703'), ('5983', '20060710'), ('60', '19940718'), ('60', '19940725'), ('60', '19940801'), ('60', '19940808'), ('60', '19940815'), ('60', '19940822'), ('60', '19940829'), ('60', '19940905'), ('6026', '20060717'), ('6065', '20060724'), ('61', '19940328'), ('61', '19940411'), ('6133', '20060731'), ('6151', '20060807'), ('62', '19921005'), ('62', '19921012'), ('62', '19921019'), ('62', '19921026'), ('62', '19921102'), ('62', '19921109'), ('62', '19921116'), ('62', '19921123'), ('62', '19921130'), ('62', '19921207'), ('62', '19921214'), ('62', '19921221'), ('62', '19930412'), ('62', '19930419'), ('62', '19930426'), ('62', '19930503'), ('62', '19930510'), ('62', '19930705'), ('62', '19930712'), ('62', '19930719'), ('62', '19930726'), ('62', '19940131'), ('62', '19940228'), ('62', '19940307'), ('62', '19940314'), ('62', '19940321'), ('62', '19940404'), ('6226', '20060814'), ('6284', '20060828'), ('6284', '20060904'), ('6289', '20060821'), ('63', '19940207'), ('63', '19940214'), ('63', '19940221'), ('6304', '20060911'), ('631', '19980817'), ('631', '19980824'), ('633', '19980706'), ('633', '19980713'), ('633', '19980720'), ('634', '19980727'), ('634', '19980803'), ('634', '19980810'), ('6347', '20060918'), ('6376', '20060925'), ('6436', '20061002'), ('65', '19940606'), ('65', '19940613'), ('65', '19940620'), ('65', '19940627'), ('6520', '20061009'), ('660', '19980831'), ('660', '19980907'), ('6629', '20061016'), ('663', '19980914'), ('663', '19980921'), ('67', '19940704'), ('67', '19940711'), ('6730', '20061023'), ('6790', '20130401'), ('68', '19940912'), ('68', '19940919'), ('6807', '20061113'), ('6808', '20061030'), ('6816', '20061106'), ('683', '19980928'), ('688', '19981005'), ('688', '19981012'), ('6893', '20061120'), ('6896', '20061127'), ('69', '19940926'), ('69', '19941003'), ('69', '19941010'), ('69', '19941017'), ('69', '19941107'), ('69', '19941114'), ('69', '19941121'), ('69', '19941128'), ('69', '19941205'), ('69', '19941212'), ('69', '19941219'), ('69', '19941226'), ('69', '19950101'), ('69', '19950102'), ('69', '19950109'), ('69', '19950116'), ('69', '19950123'), ('69', '19950130'), ('69', '19950206'), ('69', '19950213'), ('69', '19950220'), ('69', '19950227'), ('69', '19950306'), ('69', '19950313'), ('69', '19950320'), ('69', '19950327'), ('69', '19950403'), ('69', '19950410'), ('69', '19950417'), ('69', '19950424'), ('69', '19950501'), ('69', '19950508'), ('69', '19950515'), ('69', '19950522'), ('69', '19950529'), ('69', '19950605'), ('692', '19981109'), ('692', '19981116'), ('692', '19981123'), ('6925', '20070129'), ('6925', '20070205'), ('6926', '20070108'), ('6926', '20070115'), ('6926', '20070122'), ('693', '19981026'), ('693', '19981102'), ('6930', '20070212'), ('6931', '20061204'), ('6942', '20070219'), ('6953', '20061211'), ('6953', '20061218'), ('6953', '20061225'), ('6953', '20070101'), ('696', '19981019'), ('6988', '20070226'), ('7017', '20070305'), ('7017', '20070312'), ('703', '19981207'), ('703', '19981214'), ('703', '19981221'), ('703', '19981228'), ('703', '19990101'), ('7058', '20070319'), ('7058', '20070326'), ('709', '19981130'), ('7139', '20070402'), ('7175', '20070409'), ('7197', '20070416'), ('7197', '20070423'), ('7197', '20070430'), ('722', '19990104'), ('722', '19990111'), ('722', '19990118'), ('722', '19990125'), ('723', '19990208'), ('723', '19990215'), ('723', '19990222'), ('723', '19990301'), ('723', '19990308'), ('7233', '20070507'), ('728', '19990201'), ('728', '19990315'), ('728', '19990322'), ('728', '19990329'), ('728', '19990405'), ('728', '19990412'), ('728', '19990419'), ('73', '19920803'), ('73', '19920810'), ('73', '19920817'), ('73', '19940101'), ('7317', '20070514'), ('7341', '20070521'), ('7365', '20070528'), ('7365', '20070604'), ('7448', '20070611'), ('7448', '20070618'), ('7470', '20070723'), ('7473', '20070625'), ('7473', '20070702'), ('7478', '20070716'), ('7495', '20070709'), ('75', '19930927'), ('75', '19931115'), ('75', '19931122'), ('75', '19931129'), ('75', '19931206'), ('75', '19931213'), ('75', '19931220'), ('75', '19931227'), ('75', '19940103'), ('75', '19940110'), ('75', '19940117'), ('75', '19940124'), ('7503', '20070820'), ('7504', '20070827'), ('7504', '20070903'), ('752', '19990426'), ('7522', '20070806'), ('7527', '20070813'), ('7528', '20070730'), ('76', '19930920'), ('7602', '20070910'), ('761', '19990503'), ('761', '19990510'), ('7638', '20071022'), ('7643', '20070917'), ('7650', '20071203'), ('7659', '20071210'), ('7659', '20071217'), ('7664', '20071112'), ('7666', '20071119'), ('7674', '20071126'), ('7677', '20071105'), ('7682', '20071224'), ('7682', '20071231'), ('7682', '20080101'), ('7682', '20080107'), ('7686', '20070924'), ('7687', '20071015'), ('7691', '20080128'), ('7697', '20071001'), ('7707', '20071008'), ('7711', '20071029'), ('7711', '20080114'), ('7711', '20080121'), ('7716', '20080204'), ('7731', '20080225'), ('7742', '20080218'), ('7743', '20080211'), ('7761', '20080303'), ('777', '19990517'), ('777', '19990524'), ('777', '19990531'), ('7790', '20080310'), ('7790', '20080317'), ('7832', '20080324'), ('7832', '20080331'), ('7873', '20080407'), ('7889', '20080414'), ('7917', '20080421'), ('7917', '20080428'), ('7929', '20080505'), ('7966', '20080623'), ('7966', '20080630'), ('7970', '20080616'), ('8002', '20080512'), ('8022', '20080519'), ('8030', '20080609'), ('804', '19990607'), ('804', '19990614'), ('804', '19990621'), ('804', '19990628'), ('804', '19990705'), ('8089', '20080707'), ('8090', '20080526'), ('8090', '20080602'), ('8113', '20080714'), ('8235', '20080721'), ('8280', '20080728'), ('829', '19990712'), ('829', '19990719'), ('829', '19990726'), ('829', '19990802'), ('8325', '20080804'), ('8372', '20080811'), ('8387', '20080818'), ('8417', '20080825'), ('8417', '20080901'), ('8527', '20080908'), ('853', '19990823'), ('8565', '20140217'), ('8585', '20140120'), ('861', '19990830'), ('861', '19990906'), ('8639', '20080915'), ('8690', '20080922'), ('870', '19990809'), ('873', '19990816'), ('8731', '20080929'), ('8762', '20081006'), ('879', '19990913'), ('879', '19990920'), ('8794', '20081013'), ('8836', '20081020'), ('8898', '20081027'), ('8956', '20081103'), ('899', '19990927'), ('8996', '20081110'), ('90', '19920831'), ('90', '19920907'), ('90', '19920914'), ('90', '19920921'), ('90', '19920928'), ('9003', '20081117'), ('9019', '20081124'), ('9050', '20081201'), ('9053', '20090309'), ('9053', '20090316'), ('9057', '20090323'), ('9057', '20090330'), ('9059', '20090216'), ('9063', '20090223'), ('9063', '20090302'), ('9064', '20090105'), ('9064', '20090112'), ('9064', '20090119'), ('9064', '20090126'), ('9066', '20090406'), ('9070', '20081222'), ('9070', '20081229'), ('9070', '20090101'), ('9076', '20081208'), ('9077', '20081215'), ('9087', '20090202'), ('9087', '20090209'), ('9094', '20090504'), ('9110', '20090420'), ('9111', '20090427'), ('9121', '20090413'), ('914', '20010402'), ('9140', '20090518'), ('9143', '20090511'), ('9153', '20090525'), ('9153', '20090601'), ('9203', '20090608'), ('9239', '20090615'), ('9255', '20090622'), ('9255', '20090629'), ('927', '19991004'), ('930', '20010409'), ('9310', '20090706'), ('9376', '20090713'), ('941', '19991011'), ('941', '19991025'), ('941', '19991101'), ('941', '19991108'), ('941', '19991115'), ('941', '19991122'), ('9474', '20090720'), ('952', '20010416'), ('9589', '20090727'), ('9598', '20090810'), ('96', '19950612'), ('96', '19950619'), ('96', '19950626'), ('96', '19950703'), ('961', '20001120'), ('961', '20001127'), ('961', '20001204'), ('961', '20010423'), ('9611', '20090803'), ('964', '19991018'), ('964', '20001113'), ('964', '20001211'), ('964', '20001218'), ('964', '20001225'), ('964', '20010101'), ('964', '20010108'), ('964', '20010115'), ('964', '20010122'), ('9642', '20090817'), ('966', '19991129'), ('966', '19991206'), ('9682', '20090824'), ('9682', '20090831'), ('9682', '20090907'), ('97', '19950710'), ('977', '20010129'), ('977', '20010205'), ('9808', '20090914'), ('9856', '20090921'), ('988', '20010430'), ('989', '19991213'), ('989', '19991220'), ('989', '19991227'), ('989', '20000101'), ('989', '20000103'), ('989', '20000110'), ('989', '20000117'), ('989', '20000124'), ('9918', '20090928'), ('9925', '20091012'), ('9929', '20091005')] != [('1', '19870119'), ('1', '19870126'), ('1', '19870202'), ('1', '19870209'), ('1', '19870302'), ('1', '19870330'), ('1', '19870406'), ('1', '19870413'), ('1', '19870420'), ('1', '19870427'), ('1', '19870504'), ('1', '19870511'), ('1', '19870518'), ('1', '19870525'), ('1', '19870601'), ('1', '19870608'), ('1', '19870615'), ('1', '19870622'), ('1', '19870629'), ('1', '19870706'), ('1', '19870713'), ('1', '19870720'), ('1', '19870727'), ('1', '19870803'), ('1', '19870810'), ('1', '19870817'), ('1', '19870824'), ('1', '19870831'), ('1', '19870907'), ('1', '19870914'), ('1', '19870921'), ('1', '19870928'), ('1', '19871005'), ('1', '19871012'), ('1', '19871019'), ('1', '19871026'), ('1', '19871102'), ('1', '19871109'), ('1', '19871116'), ('1', '19871123'), ('1', '19871130'), ('1', '19871207'), ('1', '19871214'), ('1', '19871221'), ('1', '19871228'), ('1', '19880101'), ('1', '19880104'), ('1', '19880111'), ('1', '19880118'), ('1', '19880125'), ('1', '19880201'), ('1', '19880208'), ('1', '19880215'), ('1', '19880222'), ('1', '19880229'), ('1', '19880307'), ('1', '19880314'), ('1', '19880321'), ('1', '19880926'), ('1', '19881003'), ('1', '19881010'), ('1', '19881017'), ('1', '19890327'), ('1', '19890403'), ('10', '19911104'), ('10', '19911111'), ('10', '19911118'), ('10', '19911125'), ('10', '19911209'), ('10', '19931108'), ('100', '20011126'), ('100', '20020304'), ('100', '20020311'), ('102', '20020318'), ('102', '20020325'), ('1027', '20110704'), ('1034', '20110711'), ('1040', '20110718'), ('1049', '20110725'), ('1052', '20110801'), ('1062', '20110808'), ('1063', '20110822'), ('1064', '20110815'), ('1069', '20110829'), ('1069', '20110905'), ('1083', '20110912'), ('1095', '20110919'), ('1097', '20111003'), ('1097', '20111010'), ('1098', '20111107'), ('1099', '20110926'), ('11', '19911216'), ('11', '19911223'), ('11', '19911230'), ('11', '19920101'), ('11', '19920106'), ('11', '19920113'), ('11', '19920120'), ('11', '19920127'), ('11', '19920203'), ('11', '19920217'), ('11', '19920224'), ('11', '19920302'), ('11', '19920309'), ('11', '19920316'), ('11', '19920323'), ('11', '19920330'), ('11', '19920406'), ('11', '19920413'), ('11', '19920420'), ('11', '19920427'), ('11', '19920504'), ('11', '19920511'), ('11', '19920518'), ('11', '19920525'), ('11', '19920601'), ('11', '19930208'), ('11', '19930517'), ('11', '19930524'), ('11', '19930531'), ('11', '19930607'), ('11', '19930614'), ('11', '19930621'), ('11', '19930628'), ('11', '19931011'), ('11', '19931018'), ('11', '19931025'), ('11', '19931101'), ('11', '19931115'), ('11', '19931122'), ('1100', '20111024'), ('1101', '20111017'), ('1105', '20111114'), ('1107', '20111031'), ('111', '20020401'), ('1113', '20111128'), ('1114', '20111121'), ('1118', '20111212'), ('1119', '20111205'), ('1119', '20111219'), ('112', '20020408'), ('112', '20020415'), ('1123', '20120116'), ('1123', '20120123'), ('1124', '20111226'), ('1124', '20120101'), ('1124', '20120102'), ('1125', '20120109'), ('1129', '20120206'), ('113', '20020422'), ('1131', '20120130'), ('1133', '20120213'), ('1136', '20120220'), ('114', '20020429'), ('114', '20020513'), ('114', '20020520'), ('114', '20020527'), ('114', '20020603'), ('1151', '20120227'), ('1153', '20120305'), ('1153', '20120312'), ('1156', '20120319'), ('1156', '20120326'), ('1164', '20120402'), ('1167', '20120409'), ('1169', '20120416'), ('1172', '20120423'), ('1173', '20120430'), ('1179', '20120514'), ('1179', '20120709'), ('1182', '20120507'), ('1182', '20120521'), ('1184', '20120716'), ('1186', '20120806'), ('1187', '20120611'), ('1187', '20120723'), ('1187', '20120730'), ('1190', '20120917'), ('1190', '20130422'), ('1191', '20130429'), ('1192', '20130415'), ('1193', '20120528'), ('1193', '20120604'), ('1193', '20120813'), ('1195', '20120618'), ('1196', '20120910'), ('1196', '20120924'), ('1197', '20120820'), ('1197', '20121029'), ('1197', '20121203'), ('12', '19920608'), ('12', '19920615'), ('12', '19920622'), ('12', '19920629'), ('12', '19920706'), ('12', '19920727'), ('12', '19921228'), ('12', '19930101'), ('12', '19930104'), ('12', '19930111'), ('12', '19930118'), ('12', '19930125'), ('12', '19930201'), ('12', '19930215'), ('12', '19930222'), ('12', '19930301'), ('12', '19930308'), ('12', '19930315'), ('12', '19930322'), ('12', '19930329'), ('12', '19930405'), ('12', '19931004'), ('1200', '20130408'), ('1201', '20121008'), ('1201', '20121022'), ('1201', '20121126'), ('1201', '20121217'), ('1201', '20130506'), ('1202', '20120827'), ('1202', '20120903'), ('1202', '20121001'), ('1203', '20121015'), ('1203', '20121105'), ('1203', '20130101'), ('1203', '20130610'), ('1204', '20120625'), ('1204', '20120702'), ('1204', '20121231'), ('1205', '20121210'), ('1205', '20121224'), ('1205', '20130128'), ('1205', '20130218'), ('1205', '20130225'), ('1206', '20130107'), ('1206', '20130211'), ('1206', '20130520'), ('1208', '20121119'), ('1208', '20130204'), ('1208', '20130513'), ('1208', '20130527'), ('1208', '20130603'), ('1208', '20130617'), ('1209', '20121112'), ('1209', '20130114'), ('1209', '20130121'), ('1216', '20130304'), ('1216', '20130311'), ('1219', '20130624'), ('1229', '20130708'), ('1229', '20130715'), ('1229', '20130812'), ('123', '20020506'), ('1232', '20130805'), ('1232', '20130826'), ('1232', '20130902'), ('1233', '20130819'), ('1234', '20130909'), ('1235', '20130722'), ('1236', '20130916'), ('1236', '20130930'), ('1239', '20130923'), ('1243', '20130729'), ('1243', '20131007'), ('1251', '20131014'), ('1258', '20131111'), ('1259', '20131021'), ('126', '20020610'), ('126', '20020624'), ('126', '20020701'), ('1262', '20131104'), ('1264', '20131118'), ('1265', '20131028'), ('1266', '20170717'), ('127', '20020617'), ('1272', '20150427'), ('1272', '20150622'), ('1273', '20150420'), ('1276', '20150406'), ('1276', '20150413'), ('1276', '20170626'), ('1277', '20131125'), ('1278', '20150608'), ('1278', '20170731'), ('1279', '20131202'), ('1280', '20170911'), ('1281', '20170724'), ('1282', '20150803'), ('1282', '20170619'), ('1283', '20150511'), ('1283', '20150518'), ('1285', '20170821'), ('1286', '20170807'), ('1286', '20170828'), ('1287', '20150302'), ('1288', '20170814'), ('1289', '20170612'), ('129', '20020708'), ('1290', '20161010'), ('1290', '20170424'), ('1291', '20170306'), ('1291', '20170320'), ('1291', '20170703'), ('1292', '20150525'), ('1292', '20150914'), ('1293', '20131209'), ('1293', '20150810'), ('1293', '20170220'), ('1293', '20170508'), ('1294', '20150824'), ('1294', '20170417'), ('1294', '20170501'), ('1295', '20170213'), ('1296', '20150921'), ('1297', '20170515'), ('1299', '20160919'), ('1299', '20170522'), ('13', '19920713'), ('13', '19920720'), ('13', '19920803'), ('13', '19920810'), ('13', '19920817'), ('13', '19921005'), ('13', '19921012'), ('13', '19921019'), ('13', '19921026'), ('13', '19921102'), ('13', '19921109'), ('13', '19921116'), ('13', '19921123'), ('13', '19921130'), ('13', '19921207'), ('13', '19921214'), ('13', '19921221'), ('13', '19930412'), ('13', '19930419'), ('13', '19930426'), ('13', '19930503'), ('13', '19930510'), ('13', '19930705'), ('13', '19930712'), ('13', '19930719'), ('13', '19930726'), ('13', '19930920'), ('13', '19930927'), ('13', '19931129'), ('13', '19940718'), ('13', '19940725'), ('13', '19940801'), ('13', '19940808'), ('13', '19940815'), ('13', '19940822'), ('13', '19940829'), ('13', '19940905'), ('1301', '20161114'), ('1302', '20131216'), ('1302', '20160926'), ('1303', '20161031'), ('1305', '20140113'), ('1305', '20161107'), ('1306', '20140127'), ('1306', '20150831'), ('1306', '20161121'), ('1306', '20170116'), ('1307', '20140106'), ('1307', '20161205'), ('1307', '20170102'), ('1308', '20161128'), ('1308', '20161212'), ('1309', '20131223'), ('1309', '20140203'), ('1309', '20170109'), ('131', '20020715'), ('131', '20020722'), ('131', '20020729'), ('131', '20020805'), ('131', '20030526'), ('1311', '20131230'), ('1311', '20140210'), ('1312', '20151005'), ('1312', '20170529'), ('1316', '20140224'), ('1316', '20151012'), ('1316', '20160627'), ('1317', '20151019'), ('1321', '20160815'), ('1322', '20151102'), ('1322', '20160606'), ('1322', '20160620'), ('1326', '20160523'), ('1327', '20160502'), ('133', '20020819'), ('1330', '20160418'), ('1330', '20160425'), ('1332', '20160411'), ('1332', '20160509'), ('134', '20020812'), ('1341', '20160208'), ('1343', '20160222'), ('1345', '20160201'), ('1346', '20160215'), ('1347', '20160118'), ('1347', '20160229'), ('1349', '20160307'), ('14', '19920831'), ('14', '19920907'), ('14', '19920914'), ('14', '19920921'), ('14', '19920928'), ('14', '19940418'), ('146', '20020826'), ('146', '20020902'), ('15', '19940307'), ('15', '19940314'), ('15', '19940321'), ('15', '19940328'), ('15', '19940411'), ('15', '19940425'), ('15', '19940912'), ('15', '19940919'), ('151', '20040517'), ('16', '19931206'), ('16', '19940110'), ('16', '19940131'), ('16', '19940228'), ('16', '19940404'), ('16', '19940502'), ('16', '19940509'), ('16', '19940516'), ('16', '19940926'), ('164', '20040531'), ('168', '20040503'), ('17', '19920824'), ('17', '19931213'), ('17', '19931220'), ('17', '19931227'), ('17', '19940101'), ('17', '19940103'), ('17', '19940117'), ('17', '19940124'), ('17', '19940207'), ('17', '19940214'), ('17', '19940221'), ('17', '19940523'), ('17', '19940530'), ('17', '19940606'), ('17', '19940613'), ('17', '19941003'), ('17', '19941010'), ('17', '19941017'), ('17', '19941024'), ('17', '19941107'), ('17', '19941114'), ('17', '19941121'), ('17', '19941128'), ('17', '19941205'), ('176', '20020909'), ('177', '20020916'), ('178', '20020923'), ('18', '19940620'), ('18', '19940627'), ('18', '19940704'), ('18', '19941031'), ('18', '19941212'), ('18', '19941219'), ('18', '19941226'), ('18', '19950101'), ('18', '19950102'), ('18', '19950109'), ('18', '19950116'), ('18', '19950123'), ('18', '19950130'), ('18', '19950206'), ('18', '19950213'), ('18', '19950220'), ('18', '19950227'), ('18', '19950306'), ('18', '19950313'), ('18', '19950320'), ('18', '19950327'), ('18', '19950403'), ('18', '19950410'), ('18', '19950417'), ('18', '19950424'), ('18', '19950501'), ('18', '19950508'), ('18', '19950515'), ('18', '19950522'), ('18', '19950529'), ('18', '19950605'), ('180', '20020930'), ('181', '20021021'), ('182', '20021028'), ('182', '20021202'), ('182', '20021209'), ('182', '20021216'), ('182', '20021223'), ('182', '20021230'), ('182', '20030101'), ('182', '20030106'), ('182', '20030113'), ('182', '20030120'), ('182', '20030127'), ('183', '20021014'), ('183', '20021104'), ('183', '20030217'), ('184', '20021007'), ('184', '20021111'), ('184', '20021118'), ('184', '20021125'), ('184', '20030203'), ('184', '20030210'), ('185', '20030224'), ('187', '20030303'), ('187', '20030310'), ('188', '20030317'), ('188', '20030324'), ('188', '20030407'), ('188', '20030414'), ('189', '20030331'), ('189', '20030421'), ('19', '19950612'), ('19', '19950619'), ('19', '19950626'), ('19', '19950703'), ('194', '20030505'), ('194', '20030512'), ('196', '20030428'), ('196', '20030519'), ('196', '20030602'), ('196', '20030804'), ('196', '20030811'), ('196', '20040524'), ('198', '20030623'), ('198', '20030630'), ('198', '20030707'), ('198', '20030818'), ('199', '20030609'), ('199', '20030616'), ('199', '20030714'), ('199', '20030728'), ('2', '19880328'), ('2', '19880404'), ('2', '19880411'), ('2', '19880418'), ('2', '19880425'), ('2', '19880502'), ('2', '19880509'), ('2', '19880516'), ('2', '19880523'), ('2', '19880530'), ('2', '19880606'), ('2', '19880613'), ('2', '19880620'), ('2', '19880627'), ('2', '19880704'), ('2', '19880711'), ('2', '19880718'), ('2', '19880725'), ('2', '19880801'), ('2', '19880808'), ('2', '19880815'), ('2', '19880822'), ('2', '19880829'), ('2', '19880905'), ('2', '19880912'), ('2', '19880919'), ('2', '19881024'), ('2', '19881031'), ('2', '19881107'), ('2', '19881114'), ('2', '19890213'), ('2', '19890220'), ('2', '19890227'), ('2', '19890306'), ('20', '19940711'), ('20', '19950710'), ('200', '20030721'), ('200', '20030825'), ('200', '20030901'), ('200', '20160111'), ('201', '20030908'), ('201', '20030915'), ('202', '20030922'), ('207', '20030929'), ('209', '20031027'), ('21', '19950717'), ('21', '19950724'), ('210', '20031006'), ('211', '20031013'), ('213', '20031020'), ('213', '20031103'), ('213', '20031110'), ('215', '20031117'), ('216', '20031124'), ('218', '20031201'), ('22', '19950731'), ('22', '19950807'), ('22', '19950814'), ('221', '20031208'), ('222', '20031215'), ('222', '20031222'), ('222', '20040105'), ('222', '20040112'), ('222', '20040119'), ('222', '20040126'), ('223', '20031229'), ('223', '20040101'), ('224', '20040202'), ('225', '20040209'), ('225', '20040301'), ('226', '20040216'), ('226', '20040223'), ('226', '20040308'), ('226', '20040315'), ('226', '20040322'), ('226', '20040329'), ('226', '20040405'), ('227', '20040412'), ('23', '19950821'), ('23', '19950828'), ('23', '19950904'), ('23', '19950911'), ('23', '19950918'), ('23', '19950925'), ('23', '19951002'), ('230', '20040426'), ('24', '19951009'), ('24', '19951016'), ('24', '19951023'), ('24', '19951030'), ('24', '19951106'), ('24', '19960108'), ('24', '19960115'), ('24', '19960122'), ('24', '19960129'), ('240', '20040607'), ('241', '20040614'), ('243', '20040621'), ('243', '20040628'), ('246', '20040705'), ('247', '20040712'), ('249', '20040719'), ('25', '19951113'), ('25', '19951120'), ('25', '19951127'), ('25', '19951204'), ('25', '19951211'), ('25', '19951218'), ('25', '19951225'), ('25', '19960101'), ('25', '19960205'), ('25', '19960212'), ('25', '19960219'), ('252', '20040726'), ('252', '20040802'), ('253', '20040809'), ('254', '20040816'), ('255', '20040823'), ('258', '20040830'), ('258', '20040906'), ('26', '19960226'), ('26', '19960304'), ('26', '19960311'), ('26', '19960318'), ('26', '19960325'), ('26', '19960401'), ('26', '19960408'), ('26', '19960415'), ('26', '19960422'), ('26', '19960429'), ('26', '19960506'), ('26', '19960513'), ('26', '19960520'), ('26', '19960527'), ('26', '19960603'), ('26', '19960610'), ('26', '19960617'), ('26', '19960624'), ('26', '19960701'), ('26', '19960916'), ('26', '19960923'), ('26', '19960930'), ('26', '19961007'), ('260', '20040913'), ('262', '20040920'), ('269', '20040927'), ('27', '19960708'), ('27', '19960715'), ('27', '19960722'), ('27', '19960729'), ('27', '19960805'), ('27', '19960812'), ('27', '19960819'), ('27', '19960826'), ('27', '19960902'), ('27', '19961014'), ('27', '19961021'), ('27', '19970707'), ('273', '20041004'), ('274', '20041011'), ('275', '20041018'), ('278', '20041025'), ('28', '19960909'), ('285', '20041101'), ('289', '20041108'), ('29', '19961028'), ('29', '19961104'), ('292', '20041115'), ('292', '20041122'), ('293', '20041129'), ('294', '20041206'), ('294', '20041213'), ('294', '20041220'), ('294', '20041227'), ('294', '20050101'), ('294', '20050103'), ('294', '20050110'), ('294', '20050117'), ('294', '20050124'), ('296', '20050131'), ('296', '20050207'), ('296', '20050214'), ('3', '19881121'), ('3', '19881128'), ('3', '19881205'), ('3', '19881212'), ('3', '19881219'), ('3', '19881226'), ('3', '19890101'), ('3', '19890102'), ('3', '19890109'), ('3', '19890116'), ('3', '19890123'), ('3', '19890130'), ('3', '19890206'), ('3', '19890313'), ('3', '19890320'), ('3', '19890410'), ('3', '19890417'), ('3', '19890424'), ('3', '19890501'), ('3', '19890508'), ('3', '19890515'), ('3', '19890522'), ('3', '19890529'), ('3', '19890605'), ('3', '19890612'), ('3', '19890619'), ('3', '19890626'), ('3', '19890703'), ('3', '19890710'), ('3', '19890717'), ('3', '19890724'), ('3', '19890731'), ('3', '19890807'), ('3', '19890814'), ('3', '19890821'), ('3', '19890828'), ('3', '19890904'), ('3', '19890911'), ('3', '19890918'), ('30', '19961111'), ('30', '19961223'), ('30', '19961230'), ('30', '19970101'), ('30', '19970106'), ('30', '19970113'), ('30', '19970120'), ('300', '20050221'), ('300', '20050228'), ('300', '20130401'), ('302', '20050307'), ('302', '20050314'), ('304', '20050321'), ('304', '20050328'), ('306', '20050404'), ('307', '20050411'), ('308', '20050418'), ('308', '20050425'), ('308', '20050502'), ('31', '19961118'), ('31', '19961125'), ('31', '19961202'), ('31', '19961209'), ('31', '19961216'), ('31', '19970127'), ('31', '19970203'), ('31', '19970210'), ('31', '19970217'), ('313', '20050509'), ('313', '20050516'), ('319', '20050523'), ('319', '20050530'), ('32', '19970224'), ('32', '19970303'), ('32', '19970310'), ('32', '19970317'), ('32', '19970324'), ('32', '19970331'), ('32', '19970407'), ('33', '19970414'), ('33', '19970421'), ('33', '19970428'), ('33', '19970505'), ('33', '19970512'), ('33', '19970519'), ('33', '19970526'), ('33', '19970602'), ('33', '19970609'), ('33', '19970616'), ('33', '19970623'), ('33', '19970630'), ('330', '20050606'), ('332', '20050613'), ('333', '20050620'), ('333', '20050627'), ('341', '20050704'), ('343', '20050711'), ('345', '20050718'), ('346', '20050725'), ('350', '20050801'), ('352', '20050808'), ('354', '20050815'), ('357', '20050822'), ('358', '20050829'), ('358', '20050905'), ('36', '19970714'), ('365', '20050919'), ('366', '20050926'), ('366', '20051003'), ('367', '20051024'), ('368', '20050912'), ('369', '20051010'), ('369', '20051017'), ('37', '19970721'), ('37', '19970728'), ('376', '20051031'), ('379', '20051107'), ('38', '19970804'), ('38', '19970811'), ('38', '19970818'), ('38', '19970825'), ('38', '19970901'), ('38', '19970908'), ('38', '19970915'), ('38', '19970922'), ('38', '19970929'), ('38', '19971006'), ('381', '20051114'), ('382', '20051121'), ('384', '20051128'), ('385', '20060206'), ('387', '20051205'), ('387', '20060130'), ('387', '20060213'), ('388', '20051212'), ('388', '20051219'), ('388', '20051226'), ('388', '20060101'), ('388', '20060102'), ('388', '20060109'), ('388', '20060116'), ('388', '20060123'), ('388', '20060220'), ('39', '19971013'), ('392', '20060227'), ('394', '20060306'), ('394', '20060313'), ('396', '20060320'), ('396', '20060327'), ('40', '19971020'), ('40', '19971027'), ('400', '20060403'), ('400', '20060410'), ('400', '20140120'), ('400', '20140217'), ('402', '20060417'), ('403', '20060501'), ('403', '20060508'), ('404', '20060424'), ('406', '20060515'), ('409', '20060522'), ('41', '19971103'), ('41', '19971110'), ('414', '20060529'), ('414', '20060605'), ('421', '20060612'), ('421', '20060619'), ('425', '20060626'), ('425', '20060703'), ('43', '19971117'), ('430', '20060710'), ('434', '20060717'), ('438', '20060724'), ('44', '19971124'), ('44', '19971201'), ('444', '20060731'), ('447', '20060807'), ('45', '19980202'), ('45', '19980209'), ('45', '19980216'), ('45', '19980223'), ('45', '19980302'), ('45', '19980309'), ('45', '19980316'), ('45', '19980323'), ('454', '20060814'), ('459', '20060821'), ('459', '20060828'), ('459', '20060904'), ('46', '19971208'), ('46', '19971215'), ('46', '19971222'), ('46', '19971229'), ('46', '19980101'), ('46', '19980105'), ('46', '19980112'), ('46', '19980119'), ('46', '19980126'), ('462', '20060911'), ('466', '20060918'), ('468', '20060925'), ('469', '20061002'), ('47', '19980330'), ('47', '19980406'), ('474', '20061009'), ('479', '20061016'), ('48', '19980413'), ('48', '19980420'), ('48', '19980427'), ('48', '19980504'), ('48', '19980511'), ('48', '19980518'), ('48', '19980525'), ('48', '19980601'), ('488', '20061023'), ('489', '20061030'), ('490', '20061106'), ('490', '20061113'), ('496', '20061120'), ('496', '20061127'), ('498', '20070129'), ('498', '20070205'), ('498', '20070212'), ('498', '20070219'), ('499', '20070108'), ('499', '20070115'), ('499', '20070122'), ('5', '19890925'), ('5', '19891002'), ('5', '19891009'), ('5', '19891016'), ('5', '19891023'), ('5', '19891030'), ('5', '19891106'), ('5', '19891113'), ('5', '19891120'), ('5', '19891127'), ('5', '19891204'), ('5', '19891211'), ('5', '19891218'), ('5', '19891225'), ('5', '19900101'), ('5', '19900108'), ('5', '19900115'), ('5', '19900122'), ('5', '19900129'), ('5', '19900205'), ('5', '19900212'), ('5', '19900219'), ('5', '19900226'), ('5', '19900305'), ('5', '19900312'), ('5', '19900319'), ('5', '19900326'), ('5', '19900402'), ('5', '19900409'), ('5', '19900416'), ('5', '19900423'), ('5', '19900430'), ('5', '19900507'), ('5', '19900514'), ('5', '19900521'), ('5', '19900528'), ('5', '19900604'), ('5', '19900611'), ('5', '19910311'), ('5', '19910318'), ('5', '19910325'), ('5', '19910401'), ('5', '19910408'), ('5', '19910415'), ('5', '19910422'), ('5', '19910429'), ('5', '19910506'), ('5', '19910513'), ('5', '19910520'), ('5', '19910527'), ('5', '19910603'), ('5', '19910610'), ('5', '19910617'), ('5', '19910624'), ('5', '19910701'), ('500', '20070226'), ('501', '20061204'), ('501', '20061211'), ('501', '20061218'), ('501', '20061225'), ('501', '20070101'), ('501', '20070305'), ('501', '20070312'), ('505', '20070319'), ('505', '20070326'), ('509', '20070402'), ('51', '19980608'), ('511', '20070409'), ('511', '20070416'), ('511', '20070423'), ('511', '20070430'), ('512', '20070507'), ('515', '20070514'), ('515', '20070521'), ('517', '20070528'), ('517', '20070604'), ('517', '20071126'), ('518', '20070611'), ('518', '20070723'), ('519', '20070618'), ('519', '20070625'), ('519', '20070702'), ('519', '20070716'), ('52', '19980615'), ('520', '20071022'), ('520', '20071203'), ('521', '20070709'), ('521', '20070730'), ('521', '20071119'), ('521', '20071210'), ('521', '20071217'), ('523', '20071112'), ('524', '20070806'), ('524', '20070827'), ('524', '20070903'), ('524', '20071029'), ('524', '20071105'), ('525', '20070820'), ('525', '20071015'), ('525', '20071224'), ('525', '20071231'), ('525', '20080101'), ('525', '20080107'), ('525', '20080128'), ('526', '20071008'), ('526', '20080114'), ('526', '20080121'), ('526', '20080225'), ('527', '20070813'), ('527', '20070910'), ('527', '20080204'), ('527', '20080218'), ('528', '20080211'), ('528', '20080303'), ('529', '20070917'), ('529', '20071001'), ('53', '19980622'), ('53', '19980629'), ('531', '20070924'), ('531', '20080310'), ('531', '20080317'), ('532', '20080324'), ('532', '20080331'), ('534', '20080407'), ('537', '20080414'), ('540', '20080421'), ('540', '20080428'), ('541', '20080505'), ('541', '20080616'), ('543', '20080623'), ('543', '20080630'), ('544', '20080512'), ('545', '20080609'), ('546', '20080519'), ('55', '19980706'), ('55', '19980713'), ('55', '19980720'), ('55', '19980817'), ('55', '19980824'), ('551', '20080526'), ('551', '20080602'), ('551', '20080707'), ('555', '20080714'), ('56', '19980727'), ('56', '19980803'), ('56', '19980810'), ('56', '19980831'), ('56', '19980907'), ('562', '20080721'), ('563', '20080728'), ('568', '20080804'), ('57', '19980914'), ('57', '19980921'), ('57', '19980928'), ('57', '19981109'), ('57', '19981116'), ('57', '19981123'), ('572', '20080811'), ('573', '20080818'), ('576', '20080825'), ('576', '20080901'), ('58', '19981005'), ('58', '19981012'), ('58', '19981026'), ('58', '19981102'), ('587', '20080908'), ('59', '19981019'), ('59', '19981130'), ('59', '19981207'), ('59', '19981214'), ('59', '19981221'), ('59', '19981228'), ('59', '19990101'), ('59', '19990301'), ('59', '19990308'), ('593', '20080915'), ('596', '20080922'), ('6', '19900618'), ('6', '19900625'), ('6', '19900702'), ('6', '19900709'), ('6', '19900716'), ('6', '19900723'), ('6', '19900730'), ('6', '19900806'), ('6', '19900813'), ('6', '19900820'), ('6', '19900827'), ('6', '19900903'), ('6', '19900910'), ('6', '19900917'), ('6', '19900924'), ('6', '19901001'), ('6', '19901008'), ('6', '19901015'), ('6', '19901022'), ('6', '19901029'), ('6', '19901105'), ('6', '19901112'), ('6', '19901119'), ('6', '19901126'), ('6', '19901203'), ('6', '19901210'), ('6', '19901217'), ('6', '19901224'), ('6', '19901231'), ('6', '19910101'), ('6', '19910107'), ('6', '19910114'), ('6', '19910121'), ('6', '19910128'), ('6', '19910204'), ('6', '19910211'), ('6', '19910218'), ('6', '19910225'), ('6', '19910304'), ('6', '19910715'), ('6', '19910722'), ('6', '19910729'), ('6', '19910805'), ('6', '19910812'), ('6', '19910819'), ('6', '19920210'), ('60', '19990104'), ('60', '19990111'), ('60', '19990118'), ('60', '19990125'), ('60', '19990208'), ('60', '19990215'), ('60', '19990222'), ('60', '19990315'), ('60', '19990322'), ('60', '19990329'), ('60', '19990405'), ('60', '19990412'), ('60', '19990419'), ('600', '20080929'), ('601', '20081006'), ('602', '20081013'), ('604', '20081020'), ('61', '19990201'), ('617', '20081027'), ('62', '19990426'), ('621', '20081103'), ('621', '20081117'), ('622', '20081110'), ('622', '20081124'), ('622', '20081201'), ('623', '20090105'), ('623', '20090112'), ('623', '20090119'), ('623', '20090126'), ('623', '20090216'), ('623', '20090309'), ('623', '20090316'), ('623', '20090504'), ('624', '20090202'), ('624', '20090209'), ('624', '20090302'), ('625', '20081208'), ('625', '20081222'), ('625', '20081229'), ('625', '20090101'), ('625', '20090223'), ('626', '20081215'), ('626', '20090323'), ('626', '20090330'), ('626', '20090406'), ('626', '20090427'), ('627', '20090518'), ('628', '20090413'), ('628', '20090420'), ('629', '20090511'), ('63', '19990510'), ('630', '20090525'), ('630', '20090601'), ('635', '20090608'), ('64', '19990503'), ('64', '19990517'), ('64', '19990524'), ('64', '19990531'), ('643', '20090615'), ('647', '20090622'), ('647', '20090629'), ('654', '20090706'), ('66', '19990607'), ('66', '19990614'), ('66', '19990621'), ('66', '19990628'), ('66', '19990705'), ('660', '20090713'), ('668', '20090720'), ('67', '19990712'), ('67', '19990719'), ('67', '19990726'), ('67', '19990802'), ('673', '20090803'), ('674', '20090727'), ('674', '20090810'), ('674', '20090817'), ('678', '20090824'), ('678', '20090831'), ('678', '20090907'), ('684', '20090914'), ('686', '20090921'), ('69', '19990809'), ('69', '19990823'), ('695', '20090928'), ('696', '20091005'), ('696', '20091012'), ('7', '19910708'), ('7', '19910826'), ('7', '19910902'), ('7', '19910909'), ('7', '19910916'), ('7', '19910923'), ('7', '19910930'), ('70', '19990816'), ('701', '20091019'), ('704', '20091026'), ('705', '20091102'), ('71', '20010402'), ('71', '20010409'), ('711', '20091109'), ('714', '20091116'), ('72', '19990830'), ('72', '19990906'), ('72', '20010416'), ('720', '20091123'), ('720', '20091207'), ('723', '20091130'), ('724', '20091214'), ('725', '20091221'), ('726', '20100111'), ('727', '20091228'), ('727', '20100101'), ('727', '20100104'), ('729', '20100118'), ('729', '20100125'), ('73', '19990913'), ('73', '19990920'), ('732', '20100208'), ('733', '20100201'), ('734', '20100215'), ('735', '20100222'), ('735', '20100322'), ('735', '20100329'), ('736', '20100301'), ('737', '20100308'), ('737', '20100315'), ('739', '20100405'), ('74', '20001120'), ('74', '20001127'), ('74', '20001204'), ('74', '20010423'), ('743', '20100412'), ('745', '20100419'), ('75', '19990927'), ('75', '20001113'), ('75', '20001211'), ('75', '20001218'), ('75', '20001225'), ('75', '20010101'), ('75', '20010108'), ('75', '20010115'), ('75', '20010122'), ('75', '20010430'), ('750', '20100426'), ('750', '20100510'), ('750', '20100517'), ('750', '20100607'), ('750', '20100621'), ('750', '20100628'), ('751', '20100614'), ('752', '20100524'), ('752', '20100531'), ('753', '20100503'), ('753', '20100705'), ('76', '20010129'), ('76', '20010205'), ('76', '20010507'), ('76', '20010514'), ('76', '20040510'), ('763', '20100712'), ('764', '20100719'), ('768', '20100726'), ('77', '19991004'), ('77', '20010212'), ('77', '20010521'), ('774', '20100802'), ('78', '19991025'), ('78', '19991101'), ('78', '19991108'), ('78', '19991115'), ('78', '19991122'), ('78', '20010219'), ('78', '20010226'), ('78', '20010305'), ('78', '20010312'), ('788', '20100809'), ('789', '20100816'), ('79', '19991011'), ('79', '19991129'), ('79', '19991206'), ('79', '20010528'), ('79', '20010604'), ('79', '20010611'), ('79', '20010618'), ('79', '20010625'), ('79', '20010702'), ('79', '20010709'), ('792', '20100823'), ('8', '19911007'), ('8', '19911014'), ('8', '19911021'), ('8', '19911028'), ('80', '19991018'), ('80', '19991213'), ('80', '19991220'), ('80', '19991227'), ('80', '20000101'), ('80', '20000103'), ('80', '20000110'), ('80', '20000117'), ('80', '20000124'), ('80', '20000131'), ('80', '20010716'), ('80', '20010723'), ('80', '20010730'), ('800', '20100830'), ('800', '20100906'), ('800', '20130318'), ('81', '20000207'), ('81', '20000214'), ('81', '20000221'), ('81', '20000228'), ('81', '20010806'), ('81', '20010813'), ('81', '20010820'), ('818', '20100913'), ('82', '20000306'), ('82', '20000313'), ('82', '20000320'), ('82', '20000327'), ('82', '20000403'), ('82', '20010319'), ('82', '20010326'), ('82', '20010827'), ('82', '20010903'), ('822', '20100920'), ('825', '20100927'), ('83', '20000410'), ('83', '20000417'), ('83', '20000424'), ('83', '20010910'), ('835', '20101004'), ('84', '20000515'), ('84', '20000522'), ('84', '20000529'), ('84', '20000605'), ('84', '20010917'), ('84', '20011008'), ('847', '20101011'), ('85', '20000501'), ('85', '20000508'), ('85', '20011001'), ('85', '20011015'), ('853', '20101018'), ('858', '20101025'), ('86', '20001106'), ('86', '20010924'), ('869', '20101101'), ('87', '20000612'), ('87', '20000619'), ('87', '20011022'), ('873', '20101108'), ('883', '20101115'), ('886', '20101122'), ('889', '20101129'), ('89', '20000626'), ('89', '20000703'), ('89', '20001002'), ('89', '20011029'), ('89', '20011105'), ('893', '20101206'), ('894', '20101213'), ('895', '20101227'), ('895', '20110101'), ('896', '20101220'), ('9', '19911202'), ('9', '19930802'), ('9', '19930809'), ('9', '19930816'), ('9', '19930823'), ('9', '19930830'), ('9', '19930906'), ('9', '19930913'), ('90', '20000710'), ('90', '20000925'), ('90', '20001009'), ('91', '20000717'), ('91', '20000814'), ('91', '20000821'), ('91', '20000828'), ('91', '20000904'), ('913', '20110103'), ('913', '20110110'), ('915', '20110117'), ('915', '20110124'), ('918', '20110131'), ('92', '20000724'), ('92', '20000911'), ('92', '20001016'), ('92', '20001023'), ('92', '20040419'), ('923', '20110207'), ('924', '20110214'), ('925', '20110221'), ('93', '20000918'), ('93', '20001030'), ('930', '20110228'), ('931', '20110307'), ('931', '20110314'), ('934', '20110321'), ('934', '20110328'), ('941', '20110404'), ('946', '20110411'), ('951', '20110502'), ('953', '20110418'), ('953', '20110425'), ('957', '20110509'), ('958', '20110516'), ('96', '20000731'), ('96', '20000807'), ('96', '20011112'), ('966', '20110523'), ('966', '20110530'), ('97', '20011119'), ('97', '20020204'), ('98', '20011217'), ('98', '20011224'), ('98', '20011231'), ('98', '20020101'), ('98', '20020107'), ('98', '20020114'), ('98', '20020121'), ('98', '20020128'), ('98', '20020211'), ('98', '20020218'), ('987', '20110606'), ('99', '20011203'), ('99', '20011210'), ('99', '20020225'), ('992', '20110613'), ('996', '20110620'), ('996', '20110627')]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT COUNT(*) , YEAR FROM matches GROUP BY YEAR",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT COUNT(*) , year FROM matches GROUP BY year",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT T1.winner_name, T1.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T1.winner_age LIMIT 3",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT T2.winner_name, T2.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T1.winner_age LIMIT 3",OperationalError('no such column: T2.winner_name'),False
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT COUNT(DISTINCT winner_name) FROM matches WHERE loser_hand = 'Left-handed' AND winner_hand = 'Left-handed';,"Not match: [('2',)] != [('0',)]",False
spider_data/database/wta_1/wta_1.sqlite,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT COUNT(T1.winner_hand) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.winner_hand = 'Left-handed' AND T1.tourney_name = 'WTA Championships';,"Not match: [('2',)] != [('0',)]",False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name, T2.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",OperationalError('no such column: T2.country_code'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name, T2.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",OperationalError('no such column: T2.country_code'),False
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT COUNT(hand), hand FROM players GROUP BY hand",,True
spider_data/database/wta_1/wta_1.sqlite,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT COUNT(hand) , hand FROM players GROUP BY hand",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';,,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  tonnage FROM ship ORDER BY name DESC",SELECT name FROM ship ORDER BY name DESC,"Not match: [('Bacchus', 't'), ('Bon Accord', 't'), ('HMS Atalanta', '225'), ('HMS Avon', '391'), ('Lettice', 't'), ('Mary', 't'), ('Three Brothers', 't')] != [('Bacchus',), ('Bon Accord',), ('HMS Atalanta',), ('HMS Avon',), ('Lettice',), ('Mary',), ('Three Brothers',)]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  date FROM battle","SELECT name, date, result FROM battle;","Not match: [('Battle of Adrianople', '14 April 1205'), ('Battle of Boruy', 'June 1205'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Philippopolis', '31 June 1208'), ('Battle of Rodosto', 'February 1206'), ('Battle of Rusion', '31 January 1206'), ('Battle of Serres', 'June 1205'), ('Siege of Constantinople', '1235')] != [('Battle of Adrianople', '14 April 1205', 'Bulgarian victory'), ('Battle of Boruy', 'June 1205', 'Bulgarian victory'), ('Battle of Messinopolis', '4 September 1207', 'Bulgarian victory'), ('Battle of Philippopolis', '31 June 1208', 'Latin victory'), ('Battle of Rodosto', 'February 1206', 'Bulgarian victory'), ('Battle of Rusion', '31 January 1206', 'Bulgarian victory'), ('Battle of Serres', 'June 1205', 'Bulgarian victory'), ('Siege of Constantinople', '1235', 'Two Year Truce')]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT max(killed) ,  min(killed) FROM death","SELECT MAX(killed) ,  MIN(killed) FROM death",,True
spider_data/database/battle_death/battle_death.sqlite,SELECT avg(injured) FROM death,SELECT AVG(injured) FROM death,,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",SELECT T2.note FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't';,OperationalError('no such column: T2.note'),False
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'",,True
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id HAVING SUM(T2.killed) > 10;","Not match: [('5', 'Battle of Messinopolis'), ('6', 'Battle of Boruy'), ('8', 'Siege of Constantinople')] != [('1', 'Battle of Adrianople'), ('3', 'Battle of Rusion'), ('5', 'Battle of Messinopolis')]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id, T2.name FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T1.caused_by_ship_id ORDER BY SUM(T1.injured) DESC LIMIT 1","Not match: [('5', 'Three Brothers')] != [('4', 'HMS Avon')]",False
spider_data/database/battle_death/battle_death.sqlite,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';,,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(DISTINCT RESULT) FROM battle,SELECT COUNT(DISTINCT result) FROM battle,,True
spider_data/database/battle_death/battle_death.sqlite,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,SELECT COUNT(*) FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.tonnage = '225' AND T1.result != 'lost',"Not match: [('7',)] != [('1',)]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT T1.name, T2.date FROM ship AS T1 INNER JOIN battle AS T2 ON T1.id = T2.id WHERE T1.name IN ('Lettice', 'HMS Atalanta')","Not match: [('Siege of Constantinople', '1235')] != [('HMS Atalanta', '31 June 1208'), ('Lettice', '14 April 1205')]",False
spider_data/database/battle_death/battle_death.sqlite,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT T1.name, T2.result, T3.bulgarian_commander FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle INNER JOIN ship AS T3 ON T1.id = T3.lost_in_battle WHERE T2.location = 'English Channel' AND T2.lost_in_battle IS NULL",OperationalError('no such column: T2.result'),False
spider_data/database/battle_death/battle_death.sqlite,SELECT note FROM death WHERE note LIKE '%East%',SELECT note FROM death WHERE note LIKE '%East%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1, line_2 FROM Addresses;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1, line_2 FROM Addresses ORDER BY address_id LIMIT 1, 1","Not match: [('0144 Lamar Plaza Apt. 346', 'Suite 703'), ('0643 Muller Vista', 'Suite 383'), ('16998 Mraz Lodge', 'Apt. 689'), ('186 Evan Motorway Apt. 409', 'Suite 079'), ('193 Marlin Brook', 'Apt. 406'), ('202 Hessel Views Apt. 468', 'Apt. 305'), ('2294 Grant Square Apt. 235', 'Apt. 370'), ('3999 Aufderhar Ways Suite 593', 'Apt. 388'), ('492 Wilkinson Route', 'Suite 865'), ('67942 Carlotta Ferry Apt. 686', 'Apt. 583'), ('7081 Eda Center', 'Suite 830'), ('74046 Metz Walk Apt. 113', 'Suite 674'), ('858 Peggie Bypass Suite 212', 'Apt. 335'), ('9283 Schulist Falls Apt. 037', 'Suite 239'), ('979 Haag Shores Suite 656', 'Apt. 468')] != [('3999 Aufderhar Ways Suite 593', 'Apt. 388')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT COUNT(*) FROM Courses,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Courses,SELECT COUNT(*) FROM Courses,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name = 'math',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses WHERE course_name LIKE '%math%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT T1.department_name, T2.degree_program_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1","Not match: [('statistics', '8')] != [('statistics', '4')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT COUNT(department_id) FROM Degree_Programs,"Not match: [('10',)] != [('15',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT COUNT(DISTINCT department_id) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs,"Not match: [('3',)] != [('15',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE department_id IN ( SELECT department_id FROM Departments WHERE department_name = 'Engineering' );,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE department_id IN ( SELECT department_id FROM Departments WHERE department_name = 'Engineering' );,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name, section_description FROM Sections;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT section_name ,  section_description FROM Sections","SELECT section_name, section_description FROM Sections;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name, T1.course_id FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING COUNT(T2.section_id) <= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT T1.course_name, T1.course_id FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_name < 2","Not match: [('cal', '7'), ('db', '12'), ('dl', '9'), ('ds', '1'), ('en', '4'), ('fr', '5'), ('la', '6'), ('math', '2'), ('ml', '10'), ('nlp', '8'), ('pl', '14')] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN ( SELECT semester_id, MAX(student_enrolment_id) AS max_enrolment_id FROM Student_Enrolment GROUP BY semester_id ) AS T2 ON T1.semester_id = T2.semester_id","Not match: [('summer 2010', '2')] != [('fall 2018', '13'), ('spring 2010', '1'), ('spring 2012', '6'), ('spring 2015', '9'), ('spring 2018', '12'), ('spring 2018', '5'), ('spring 2019', '15'), ('summer 2010', '2'), ('winter 2010', '4')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name, T1.middle_name, T1.last_name, T2.student_enrolment_id FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs GROUP BY degree_program_id HAVING COUNT(degree_program_id) > 1 )","Not match: [('Jarvis', 'Aaliyah', 'Carroll', '4'), ('Jordy', 'Osborne', 'Rempel', '14'), ('Reva', 'Golda', 'Osinski', '9')] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name, T1.middle_name, T1.last_name, SE.student_enrolment_id FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs GROUP BY degree_program_id HAVING COUNT(degree_program_id) > 1)",OperationalError('no such column: SE.student_enrolment_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'","Not match: [('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')] != [('Frida', 'Aisha', 'Huel'), ('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'","Not match: [('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_summary_name, COUNT(T2.student_id) FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1","Not match: [('9', 'Bachelor')] != [('Bachelor', '3')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.degree_program_id) AS num_enrollments FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY num_enrollments DESC LIMIT 1","Not match: [('7', 'Frida', 'Aisha', 'Huel', '3', '7')] != [('7', 'Frida', 'Aisha', 'Huel', '3')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.first_name, T1.middle_name, T1.last_name, SE.student_enrolment_id, COUNT(SE.degree_program_id) FROM Students AS T1 INNER JOIN Student_Enrolment AS SE ON T1.student_id = SE.student_id GROUP BY SE.student_id ORDER BY COUNT(SE.degree_program_id) DESC LIMIT 1","Not match: [('7', 'Frida', 'Aisha', 'Huel', '3', '7')] != [('Frida', 'Aisha', 'Huel', '3', '3')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT T1.semester_name FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id HAVING COUNT(T2.student_enrolment_id) = 0,"Not match: [('fall 2010',), ('spring 2013',), ('spring 2014',), ('spring 2016',), ('spring 2017',), ('winter 2018',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,"Not match: [('ai',), ('db',), ('en',), ('la',), ('math',), ('ml',), ('nlp',), ('os',), ('pl',), ('rs',)] != [('ai',), ('db',), ('en',), ('la',), ('la',), ('math',), ('math',), ('ml',), ('ml',), ('nlp',), ('os',), ('pl',), ('pl',), ('rs',), ('rs',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.student_course_id) > 0,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1,"Not match: [('rs',)] != [('pl',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1,"Not match: [('rs',)] != [('pl',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T2.last_name FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id WHERE T1.state_province_county = 'North Carolina' AND T2.student_enrolment_id IS NULL,OperationalError('no such column: T2.student_enrolment_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN ( SELECT student_id FROM Student_Enrolment ),"Not match: [('Gleichner',), ('Weimann',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date, T2.student_course_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.student_course_id HAVING COUNT(T2.student_course_id) >= 2","Not match: [('1975-05-06 12:04:47', '8'), ('1998-11-22 12:18:29', '15'), ('2010-12-13 10:55:15', '6'), ('2013-06-30 13:01:40', '5')] != [('1975-05-06 12:04:47', '96'), ('1975-10-28 15:16:51', '0'), ('1984-01-18 23:07:07', '76')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';,"Not match: [] != [('(096)889-8954x524',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 ORDER BY date_first_registered LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id ORDER BY T1.date_first_registered LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T1.permanent_address_id != T2.address_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T1.permanent_address_id != T1.current_address_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1","Not match: [('9', '0643 Muller Vista', 'Suite 383')] != [('9', '0643 Muller Vista', 'Suite 383', '')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id, T1.line_1, T1.line_2 FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(transcript_date) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(transcript_date) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT MIN(transcript_date), other_details FROM Transcripts",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT COUNT(*) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(*) FROM Transcripts,SELECT COUNT(*) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT MAX(transcript_date) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT MAX(transcript_date) FROM Transcripts;,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT COUNT(DISTINCT T1.student_course_id) ,  T1.student_course_id FROM Transcript_Contents AS T1 INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id","Not match: [('4', '0')] != [('9', '0')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT MAX(T1.student_course_id), T2.enrollment_id FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.enrollment_id",OperationalError('no such column: T2.enrollment_id'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) LIMIT 1",,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.semester_id IN ( SELECT semester_id FROM Semesters GROUP BY semester_id HAVING COUNT(student_id) > 1 ),OperationalError('misuse of aggregate: COUNT()'),False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Masters' ) AND T2.degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelors' );,"Not match: [('13',)] != []",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT COUNT(DISTINCT T1.address_id) FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT count(DISTINCT current_address_id) FROM Students,SELECT DISTINCT T1.address_id FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id,"Not match: [('9',)] != [('1',), ('10',), ('11',), ('12',), ('14',), ('15',), ('2',), ('3',), ('4',), ('5',), ('6',), ('7',), ('8',), ('9',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT * FROM Students ORDER BY last_name, first_name, middle_name DESC","Not match: [('assumenda',), ('atque',), ('autem',), ('dolorum',), ('et',), ('facilis',), ('laborum',), ('nesciunt',), ('non',), ('omnis',), ('omnis',), ('qui',), ('quia',), ('rerum',), ('voluptatem',)] != [('1', '10', '15', 'Timmothy', 'Anna', 'Ward', '(096)889-8954x524', 'erwin.zboncak@example.com', '965', '1971-02-05 07:28:23', '1971-05-17 19:28:49', 'quia'), ('10', '15', '14', 'Helga', 'Cleve', 'Mohr', '677.401.9382', 'nya.lesch@example.net', '43', '2009-09-25 00:14:25', '2017-07-09 21:38:43', 'rerum'), ('11', '14', '4', 'Gregg', 'Mossie', 'Schuppe', '(462)246-7921', 'nbruen@example.org', '494', '1989-05-24 23:31:29', '1975-10-09 00:49:27', 'omnis'), ('12', '14', '9', 'Orrin', 'Neal', 'Kemmer', '(982)153-1469x1733', 'beth42@example.org', '6274274', '2005-12-15 08:42:10', '2006-08-04 17:26:49', 'non'), ('13', '9', '8', 'Deon', 'Brooklyn', 'Weimann', '(213)445-0399x85208', 'jhuel@example.com', '68095', '1986-02-24 21:12:23', '2014-05-30 23:32:02', 'assumenda'), ('14', '12', '11', 'Jordy', 'Osborne', 'Rempel', '(605)919-3594x3661', 'gracie29@example.com', '34458427', '2004-12-24 12:36:46', '1999-08-24 00:07:10', 'et'), ('15', '2', '9', 'Jett', 'Alberta', 'Jaskolski', '877.549.9067x8723', 'mya88@example.org', '156', '1982-06-19 13:15:18', '1982-06-11 00:25:39', 'omnis'), ('2', '12', '5', 'Hobart', 'Lorenz', 'Balistreri', '1-009-710-5151', 'swift.kolby@example.com', '304246', '1976-10-26 02:33:06', '2013-10-05 17:41:28', 'autem'), ('3', '9', '5', 'Warren', 'Violet', 'Gleichner', '07661787471', 'johns.unique@example.net', '3', '2007-08-29 23:25:41', '2007-03-31 09:53:19', 'facilis'), ('4', '7', '11', 'Jarvis', 'Aaliyah', 'Carroll', '09700166582', 'jillian26@example.net', '141072406', '2014-03-28 05:48:23', '2007-08-02 04:12:58', 'atque'), ('5', '9', '9', 'Milton', 'Vaughn', 'Christiansen', '171-642-5684', 'lhartmann@example.org', '', '1973-05-19 19:12:46', '2007-11-28 12:50:21', 'laborum'), ('6', '6', '3', 'Stanford', 'Mona', 'Rogahn', '436.613.7683', 'skassulke@example.net', '248', '1997-03-20 16:47:25', '2016-04-09 12:27:04', 'qui'), ('7', '15', '3', 'Frida', 'Aisha', 'Huel', '1-879-796-8987x164', 'baumbach.lucious@example.org', '668', '2018-03-13 09:56:22', '1997-11-16 08:54:33', 'dolorum'), ('8', '1', '5', 'Delaney', 'Judd', 'Ankunding', '03174364122', 'dell43@example.net', '402', '1982-02-14 08:46:35', '2004-12-08 05:29:11', 'voluptatem'), ('9', '2', '15', 'Reva', 'Golda', 'Osinski', '(507)365-8405', ""qo'kon@example.com"", '39', '2017-01-04 08:10:25', '1990-09-01 05:03:27', 'nesciunt')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT * FROM Students ORDER BY last_name DESC;,"Not match: [('assumenda',), ('atque',), ('autem',), ('dolorum',), ('et',), ('facilis',), ('laborum',), ('nesciunt',), ('non',), ('omnis',), ('omnis',), ('qui',), ('quia',), ('rerum',), ('voluptatem',)] != [('1', '10', '15', 'Timmothy', 'Anna', 'Ward', '(096)889-8954x524', 'erwin.zboncak@example.com', '965', '1971-02-05 07:28:23', '1971-05-17 19:28:49', 'quia'), ('10', '15', '14', 'Helga', 'Cleve', 'Mohr', '677.401.9382', 'nya.lesch@example.net', '43', '2009-09-25 00:14:25', '2017-07-09 21:38:43', 'rerum'), ('11', '14', '4', 'Gregg', 'Mossie', 'Schuppe', '(462)246-7921', 'nbruen@example.org', '494', '1989-05-24 23:31:29', '1975-10-09 00:49:27', 'omnis'), ('12', '14', '9', 'Orrin', 'Neal', 'Kemmer', '(982)153-1469x1733', 'beth42@example.org', '6274274', '2005-12-15 08:42:10', '2006-08-04 17:26:49', 'non'), ('13', '9', '8', 'Deon', 'Brooklyn', 'Weimann', '(213)445-0399x85208', 'jhuel@example.com', '68095', '1986-02-24 21:12:23', '2014-05-30 23:32:02', 'assumenda'), ('14', '12', '11', 'Jordy', 'Osborne', 'Rempel', '(605)919-3594x3661', 'gracie29@example.com', '34458427', '2004-12-24 12:36:46', '1999-08-24 00:07:10', 'et'), ('15', '2', '9', 'Jett', 'Alberta', 'Jaskolski', '877.549.9067x8723', 'mya88@example.org', '156', '1982-06-19 13:15:18', '1982-06-11 00:25:39', 'omnis'), ('2', '12', '5', 'Hobart', 'Lorenz', 'Balistreri', '1-009-710-5151', 'swift.kolby@example.com', '304246', '1976-10-26 02:33:06', '2013-10-05 17:41:28', 'autem'), ('3', '9', '5', 'Warren', 'Violet', 'Gleichner', '07661787471', 'johns.unique@example.net', '3', '2007-08-29 23:25:41', '2007-03-31 09:53:19', 'facilis'), ('4', '7', '11', 'Jarvis', 'Aaliyah', 'Carroll', '09700166582', 'jillian26@example.net', '141072406', '2014-03-28 05:48:23', '2007-08-02 04:12:58', 'atque'), ('5', '9', '9', 'Milton', 'Vaughn', 'Christiansen', '171-642-5684', 'lhartmann@example.org', '', '1973-05-19 19:12:46', '2007-11-28 12:50:21', 'laborum'), ('6', '6', '3', 'Stanford', 'Mona', 'Rogahn', '436.613.7683', 'skassulke@example.net', '248', '1997-03-20 16:47:25', '2016-04-09 12:27:04', 'qui'), ('7', '15', '3', 'Frida', 'Aisha', 'Huel', '1-879-796-8987x164', 'baumbach.lucious@example.org', '668', '2018-03-13 09:56:22', '1997-11-16 08:54:33', 'dolorum'), ('8', '1', '5', 'Delaney', 'Judd', 'Ankunding', '03174364122', 'dell43@example.net', '402', '1982-02-14 08:46:35', '2004-12-08 05:29:11', 'voluptatem'), ('9', '2', '15', 'Reva', 'Golda', 'Osinski', '(507)365-8405', ""qo'kon@example.com"", '39', '2017-01-04 08:10:25', '1990-09-01 05:03:27', 'nesciunt')]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM Sections WHERE section_name = 'h';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM Sections WHERE section_name = 'h';,,True
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582',"Not match: [('Jarvis',)] != [('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)]",False
spider_data/database/student_transcripts_tracking/student_transcripts_tracking.sqlite,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id OR T1.permanent_address_id = T2.address_id WHERE T1.cell_mobile_number = '09700166582',"Not match: [('Jarvis',)] != [('Jarvis',), ('Jarvis',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT COUNT(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT Title, Original_air_date FROM Cartoon ORDER BY Original_air_date;","Not match: [('Dawn of the Dead Man!', 'Ben Jones'), ('Day of the Dark Knight!', 'Ben Jones'), ('Deep Cover for Batman!', 'Michael Chang'), ('Enter the Outsiders!', 'Michael Chang'), ('Evil Under the Sea!', 'Michael Chang'), ('Fall of the Blue Beetle!', 'Brandon Vietti'), ('Invasion of the Secret Santas!', 'Brandon Vietti'), ('Journey to the Center of the Bat!', 'Michael Chang'), ('Return of the Fearsome Fangs!', 'Brandon Vietti'), ('Terror on Dinosaur Island!', 'Brandon Vietti'), ('The Eyes of Despero!', 'Ben Jones'), ('The Rise of the Blue Beetle!', 'Ben Jones')] != [('Dawn of the Dead Man!', 'January16,2009'), ('Day of the Dark Knight!', 'January2,2009'), ('Deep Cover for Batman!', 'February27,2009'), ('Enter the Outsiders!', 'January9,2009'), ('Evil Under the Sea!', 'December5,2008'), ('Fall of the Blue Beetle!', 'January23,2009'), ('Invasion of the Secret Santas!', 'December12,2008'), ('Journey to the Center of the Bat!', 'January30,2009'), ('Return of the Fearsome Fangs!', 'February20,2009'), ('Terror on Dinosaur Island!', 'November21,2008'), ('The Eyes of Despero!', 'February6,2009'), ('The Rise of the Blue Beetle!', 'November14,2008')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",SELECT COUNT(DISTINCT series_name) FROM TV_Channel;,"Not match: [('15', '1')] != [('15',)]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";",SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT COUNT(id) FROM TV_Channel WHERE Language = 'English',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT COUNT(id) FROM TV_Channel WHERE Language = 'English',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) ASC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle',"Not match: [('Sky Radio',)] != []",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio';,OperationalError('no such column: T2.Title'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Title FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating,,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT Episode, Rating FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 3;","Not match: [('A Love of a Lifetime', '5.8'), ('Friendly Skies', '5.3'), ('Game Three', '4.4')] != [('Double Down', '3.4'), ('Keepers', '3.7'), ('The Legend of Dylan McCleen', '3.8')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT MIN(Share), MAX(Share) FROM TV_series","Not match: [('9.0', '5.0')] != [('5.0', '9.0')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT MAX(Share) , MIN(Share) FROM TV_series",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime""",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio',,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = ""Sky Radio"")",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT COUNT(id) FROM Cartoon WHERE Directed_by IN ('John R. Dilworth', 'Genndy Tartakovsky')","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('0',)]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by, COUNT(Directed_by) FROM Cartoon GROUP BY Directed_by","Not match: [('4', 'Ben Jones'), ('4', 'Brandon Vietti'), ('4', 'Michael Chang')] != [('Ben Jones', '4'), ('Brandon Vietti', '4'), ('Michael Chang', '4')]",False
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'","Not match: [('Sky Famiglia + Sky HD', 'MTV Live HD')] != []",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'","Not match: [('Sky Famiglia + Sky HD', 'MTV Live HD')] != []",False
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey',,True
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey',"Not match: [('Poland',)] != [('Italy',), ('United Kingdom',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT Country FROM TV_Channel WHERE Content = 'Cartoons' AND Written_by != 'Todd Casey',OperationalError('no such column: Written_by'),False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')","Not match: [('MTV Dance', 'United Kingdom')] != [('Classica', 'Italy'), ('MTV Dance', 'United Kingdom'), ('MTV Dance', 'United Kingdom'), ('MTV Dance', 'United Kingdom'), ('MTV Hits', 'Italy'), ('MTV Rocks', 'United Kingdom'), ('Music Box Italia', 'Italy'), ('Sky Radio', 'Italy')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones' OR T2.Directed_by = 'Michael Chang'","Not match: [('MTV Dance', 'United Kingdom')] != [('Classica', 'Italy'), ('MTV Dance', 'United Kingdom'), ('MTV Dance', 'United Kingdom'), ('MTV Dance', 'United Kingdom'), ('MTV Hits', 'Italy'), ('MTV Rocks', 'United Kingdom'), ('Music Box Italia', 'Italy'), ('Sky Radio', 'Italy')]",False
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'",,True
spider_data/database/tvshow/tvshow.sqlite,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'",,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2,,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(id) > 2,"Not match: [('700',)] != []",False
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' ),,True
spider_data/database/tvshow/tvshow.sqlite,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT T1.id FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by != 'Ben Jones',"Not match: [('701',), ('703',), ('705',), ('706',), ('708',), ('709',), ('713',), ('714',), ('715',), ('717',), ('719',)] != [('700',), ('701',), ('703',), ('705',), ('706',), ('707',), ('707',), ('708',)]",False
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' ),,True
spider_data/database/tvshow/tvshow.sqlite,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' ),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT COUNT(*) FROM poker_player;,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(*) FROM poker_player,SELECT COUNT(*) FROM poker_player;,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made, Best_Finish FROM poker_player;",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made, Best_Finish FROM poker_player",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT AVG(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(Earnings) FROM poker_player,SELECT AVG(Earnings) FROM poker_player,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT MAX(Money_Rank) FROM poker_player,"Not match: [('58.0',)] != [('166.0',)]",False
spider_data/database/poker_player/poker_player.sqlite,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT MAX(Money_Rank) FROM poker_player,"Not match: [('58.0',)] != [('166.0',)]",False
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,"SELECT MAX ""Final_Table_Made"" FROM poker_player WHERE ""Earnings"" < 200000",OperationalError('no such column: MAX'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC;,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1_Final_Table_Made ASC,OperationalError('no such column: T1_Final_Table_Made'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1,OperationalError('no such column: Height'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT MAX(Money_Rank) FROM poker_player WHERE People_ID = ( SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1 ),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT AVG(Earnings) FROM poker_player WHERE Height > 200,OperationalError('no such column: Height'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT AVG(Earnings) FROM poker_player WHERE Height > 200,OperationalError('no such column: Height'),False
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(Nationality) DESC LIMIT 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) > 1,,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name, Birth_Date FROM people ORDER BY Name ASC",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name, Birth_Date FROM people ORDER BY Name",,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""",SELECT Name FROM people WHERE Nationality != 'Russia',,True
spider_data/database/poker_player/poker_player.sqlite,"SELECT Name FROM people WHERE Nationality != ""Russia""",SELECT Name FROM people WHERE Nationality != 'Russia',,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM poker_player ),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM poker_player ),,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,"SELECT COUNT(DISTINCT ""Nationality"") FROM people",,True
spider_data/database/poker_player/poker_player.sqlite,SELECT count(DISTINCT Nationality) FROM people,"SELECT COUNT(DISTINCT ""Nationality"") FROM people",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM area_code_state,SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;,"Not match: [('305',)] != [('51',)]",False
spider_data/database/voter_1/voter_1.sqlite,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id, phone_number, state FROM VOTES;",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT max(created) FROM votes WHERE state  =  'CA',SELECT created FROM VOTES WHERE state = 'CA',,True
spider_data/database/voter_1/voter_1.sqlite,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway',,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT DISTINCT state ,  created FROM votes","SELECT DISTINCT state, created FROM VOTES;",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number HAVING COUNT(T2.vote_id) >= 2",,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number ORDER BY COUNT(T2.vote_id) LIMIT 1",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',"SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA')",,True
spider_data/database/voter_1/voter_1.sqlite,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN ( SELECT contestant_number FROM VOTES );,,True
spider_data/database/voter_1/voter_1.sqlite,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1,,True
spider_data/database/voter_1/voter_1.sqlite,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT T1.created, T2.state, T2.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling';",OperationalError('no such column: T2.state'),False
spider_data/database/voter_1/voter_1.sqlite,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.area_code = T2.state WHERE T2.contestant_number IN ( SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling' ) AND T2.contestant_number IN ( SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss' );,"Not match: [('212',), ('315',), ('347',), ('516',), ('518',), ('585',), ('607',), ('631',), ('646',), ('716',), ('718',), ('845',), ('914',), ('917',)] != []",False
spider_data/database/voter_1/voter_1.sqlite,"select contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%',,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950;,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE GovernmentForm = 'Republic',"Not match: [('122',)] != [('1',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE GovernmentForm = 'Republic',"Not match: [('122',)] != [('1',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",SELECT SUM(`SurfaceArea`) FROM country WHERE `Region` = 'Caribbean',,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",SELECT SUM(`SurfaceArea`) FROM `country` WHERE Continent = 'Carribean';,"Not match: [('234423.0',)] != [('',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",SELECT Continent FROM country WHERE Name = 'Anguilla';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",SELECT Continent FROM country WHERE Name = 'Anguilla';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
spider_data/database/world_1/world_1.sqlite,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul',,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY T2.Percentage DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba',"Not match: [('Papiamento',)] != [('Dutch',), ('English',), ('Papiamento',), ('Spanish',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola';","Not match: [('12878000', 'Central Africa')] != [('Central Africa', '12878000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola';","Not match: [('12878000', 'Central Africa')] != [('Central Africa', '12878000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Name = 'Central Africa';,"Not match: [('50.31111111111111',)] != [('',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT T1.Name FROM country AS T1 INNER JOIN ( SELECT Continent, MIN(LifeExpectancy) AS MinLifeExpectancy FROM country GROUP BY Continent ) AS T2 ON T1.Continent = T2.Continent WHERE T1.LifeExpectancy = T2.MinLifeExpectancy AND T1.Continent = 'Asia'",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia';",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT Population, MAX(GNP) FROM country WHERE Continent = 'Asia'","Not match: [('3705025700', '3787042.0')] != [('126714000', '3787042.0')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""",SELECT AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic' AND Continent = 'Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""",SELECT AVG(`LifeExpectancy`) FROM country WHERE GovernmentForm = 'Republic' AND Continent = 'Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""",SELECT SUM(T1.SurfaceArea) FROM country AS T1 INNER JOIN country AS T2 ON T1.Continent = T2.Continent WHERE T1.Name = 'Asia' OR T2.Name = 'Europe';,"Not match: [('54930138.9',)] != [('',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT SUM(`SurfaceArea`) FROM country WHERE Continent IN ('Asia', 'Europe')",,True
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""",SELECT Population FROM city WHERE District = 'Gelderland',"Not match: [('545548',)] != [('101574',), ('138020',), ('152463',), ('153491',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""",SELECT SUM(Population) FROM city WHERE District = 'Gelderland',,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'","Not match: [('510.3333333333333', '329000')] != [('', '')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT AVG(GNP), SUM(Population) FROM country WHERE Code IN ('USA', 'US')","Not match: [('510.3333333333333', '329000')] != [('8510700.0', '278357000')]",False
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT COUNT(DISTINCT Language) FROM countrylanguage;,,True
spider_data/database/world_1/world_1.sqlite,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT COUNT(DISTINCT Language) FROM countrylanguage;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND T1.Name = 'Afghanistan';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T',"Not match: [('2',)] != [('102',)]",False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.Language ORDER BY COUNT(T1.Language) DESC LIMIT 1;,"Not match: [('United States',)] != [('Aruba',)]",False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.Language ORDER BY SUM(T1.Percentage) DESC LIMIT 1;,"Not match: [('United States',)] != [('Aruba',)]",False
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Continent FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY COUNT(T1.Language) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Continent FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY COUNT(T1.Language) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT COUNT(DISTINCT T2.CountryCode) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.Language = 'Dutch';,"Not match: [('3',)] != [('0',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')","Not match: [('3',)] != [('2',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'French')","Not match: [('Canada',), ('Monaco',), ('Seychelles',), ('United States',), ('Vanuatu',), ('Virgin Islands, U.S.',)] != [('American Samoa',), ('Andorra',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Australia',), ('Bahrain',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Brunei',), ('Burundi',), ('Canada',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Cook Islands',), ('Denmark',), ('Falkland Islands',), ('France',), ('French Polynesia',), ('Gibraltar',), ('Guadeloupe',), ('Guam',), ('Haiti',), ('Hong Kong',), ('Iceland',), ('Ireland',), ('Italy',), ('Japan',), ('Kuwait',), ('Lebanon',), ('Lesotho',), ('Luxembourg',), ('Macao',), ('Madagascar',), ('Malaysia',), ('Maldives',), ('Malta',), ('Marshall Islands',), ('Martinique',), ('Mauritius',), ('Mayotte',), ('Monaco',), ('Monaco',), ('Montserrat',), ('Nauru',), ('Netherlands Antilles',), ('New Caledonia',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Norway',), ('Palau',), ('Puerto Rico',), ('Rwanda',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Pierre and Miquelon',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Sao Tome and Principe',), ('Seychelles',), ('Seychelles',), ('South Africa',), ('Switzerland',), ('Tokelau',), ('Tonga',), ('Trinidad and Tobago',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' AND T1.Language = 'French';,"Not match: [('Canada',), ('Monaco',), ('Seychelles',), ('United States',), ('Vanuatu',), ('Virgin Islands, U.S.',)] != []",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' AND T1.IsOfficial = 'T';,"Not match: [('Canada',), ('Seychelles',), ('Vanuatu',)] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Australia',), ('Barbados',), ('Belize',), ('Bermuda',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Malta',), ('Marshall Islands',), ('Montserrat',), ('Nauru',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'French') AND T1.IsOfficial = 'T'","Not match: [('Canada',), ('Seychelles',), ('Vanuatu',)] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Australia',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Burundi',), ('Canada',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Falkland Islands',), ('France',), ('French Polynesia',), ('Gibraltar',), ('Guadeloupe',), ('Guam',), ('Haiti',), ('Hong Kong',), ('Ireland',), ('Lesotho',), ('Luxembourg',), ('Madagascar',), ('Malta',), ('Marshall Islands',), ('Martinique',), ('Mayotte',), ('Monaco',), ('Montserrat',), ('Nauru',), ('New Caledonia',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Palau',), ('Rwanda',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Pierre and Miquelon',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('Seychelles',), ('South Africa',), ('Switzerland',), ('Tokelau',), ('Tonga',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT T2.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese',OperationalError('no such column: T2.Continent'),False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT COUNT(DISTINCT T2.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese',OperationalError('no such column: T2.Continent'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT T2.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')",OperationalError('no such column: T2.Region'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT T2.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')",OperationalError('no such column: T2.Region'),False
spider_data/database/world_1/world_1.sqlite,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""","SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial IN ('T', 'Y')","Not match: [] != [('Afghanistan',), ('Afghanistan',), ('Albania',), ('Algeria',), ('American Samoa',), ('American Samoa',), ('Andorra',), ('Anguilla',), ('Antigua and Barbuda',), ('Argentina',), ('Armenia',), ('Aruba',), ('Australia',), ('Austria',), ('Azerbaijan',), ('Bahrain',), ('Bangladesh',), ('Barbados',), ('Belarus',), ('Belarus',), ('Belgium',), ('Belgium',), ('Belgium',), ('Belize',), ('Bermuda',), ('Bhutan',), ('Bolivia',), ('Bolivia',), ('Bolivia',), ('Bosnia and Herzegovina',), ('Brazil',), ('Brunei',), ('Bulgaria',), ('Burundi',), ('Burundi',), ('Cambodia',), ('Canada',), ('Canada',), ('Cape Verde',), ('Cayman Islands',), ('Chad',), ('Chile',), ('China',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Colombia',), ('Comoros',), ('Cook Islands',), ('Costa Rica',), ('Croatia',), ('Cuba',), ('Cyprus',), ('Cyprus',), ('Czech Republic',), ('Denmark',), ('Djibouti',), ('Dominican Republic',), ('East Timor',), ('Ecuador',), ('Egypt',), ('El Salvador',), ('Eritrea',), ('Estonia',), ('Falkland Islands',), ('Faroe Islands',), ('Faroe Islands',), ('Fiji Islands',), ('Finland',), ('Finland',), ('France',), ('French Polynesia',), ('Georgia',), ('Germany',), ('Gibraltar',), ('Greece',), ('Greenland',), ('Greenland',), ('Guadeloupe',), ('Guam',), ('Guam',), ('Guatemala',), ('Guinea-Bissau',), ('Haiti',), ('Holy See (Vatican City State)',), ('Honduras',), ('Hong Kong',), ('Hungary',), ('Iceland',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Ireland',), ('Ireland',), ('Israel',), ('Israel',), ('Italy',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kiribati',), ('Kuwait',), ('Kyrgyzstan',), ('Kyrgyzstan',), ('Laos',), ('Latvia',), ('Lebanon',), ('Lesotho',), ('Lesotho',), ('Libyan Arab Jamahiriya',), ('Liechtenstein',), ('Lithuania',), ('Luxembourg',), ('Luxembourg',), ('Luxembourg',), ('Macao',), ('Macedonia',), ('Madagascar',), ('Madagascar',), ('Malawi',), ('Malaysia',), ('Maldives',), ('Malta',), ('Malta',), ('Marshall Islands',), ('Marshall Islands',), ('Martinique',), ('Mayotte',), ('Mexico',), ('Moldova',), ('Monaco',), ('Mongolia',), ('Montserrat',), ('Morocco',), ('Myanmar',), ('Nauru',), ('Nauru',), ('Nepal',), ('Netherlands',), ('Netherlands Antilles',), ('Netherlands Antilles',), ('New Caledonia',), ('New Zealand',), ('Nicaragua',), ('Niue',), ('Norfolk Island',), ('North Korea',), ('Northern Mariana Islands',), ('Norway',), ('Oman',), ('Pakistan',), ('Palau',), ('Palau',), ('Panama',), ('Paraguay',), ('Paraguay',), ('Peru',), ('Peru',), ('Peru',), ('Philippines',), ('Poland',), ('Portugal',), ('Puerto Rico',), ('Qatar',), ('Romania',), ('Romania',), ('Russian Federation',), ('Rwanda',), ('Rwanda',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Pierre and Miquelon',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Samoa',), ('San Marino',), ('Saudi Arabia',), ('Senegal',), ('Seychelles',), ('Seychelles',), ('Singapore',), ('Singapore',), ('Singapore',), ('Slovakia',), ('Slovenia',), ('Somalia',), ('Somalia',), ('South Africa',), ('South Africa',), ('South Africa',), ('South Africa',), ('South Korea',), ('Spain',), ('Sri Lanka',), ('Sri Lanka',), ('Sudan',), ('Svalbard and Jan Mayen',), ('Swaziland',), ('Sweden',), ('Switzerland',), ('Switzerland',), ('Switzerland',), ('Switzerland',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Tanzania',), ('Thailand',), ('Togo',), ('Togo',), ('Tokelau',), ('Tonga',), ('Tonga',), ('Tunisia',), ('Turkey',), ('Turkmenistan',), ('Turks and Caicos Islands',), ('Tuvalu',), ('Tuvalu',), ('Ukraine',), ('United Arab Emirates',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Uruguay',), ('Uzbekistan',), ('Vanuatu',), ('Vanuatu',), ('Vanuatu',), ('Venezuela',), ('Vietnam',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Western Sahara',), ('Yemen',), ('Yugoslavia',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""","SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')","Not match: [('ABW', 'Aruba', 'North America', 'Caribbean', '193.0', '', '103000', '78.4', '828.0', '793.0', 'Aruba', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '129', 'AW', 'ABW', 'Dutch', 'T', '5.3'), ('AIA', 'Anguilla', 'North America', 'Caribbean', '96.0', '', '8000', '76.1', '63.2', '', 'Anguilla', 'Dependent Territory of the UK', 'Elisabeth II', '62', 'AI', 'AIA', 'English', 'T', '0.0'), ('ANT', 'Netherlands Antilles', 'North America', 'Caribbean', '800.0', '', '217000', '74.7', '1941.0', '', 'Nederlandse Antillen', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', '33', 'AN', 'ANT', 'Dutch', 'T', '0.0'), ('ASM', 'American Samoa', 'Oceania', 'Polynesia', '199.0', '', '68000', '75.1', '334.0', '', 'Amerika Samoa', 'US Territory', 'George W. Bush', '54', 'AS', 'ASM', 'English', 'T', '3.1'), ('ATG', 'Antigua and Barbuda', 'North America', 'Caribbean', '442.0', '1981', '68000', '70.5', '612.0', '584.0', 'Antigua and Barbuda', 'Constitutional Monarchy', 'Elisabeth II', '63', 'AG', 'ATG', 'English', 'T', '0.0'), ('AUS', 'Australia', 'Oceania', 'Australia and New Zealand', '7741220.0', '1901', '18886000', '79.8', '351182.0', '392911.0', 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', '135', 'AU', 'AUS', 'English', 'T', '81.2'), ('BEL', 'Belgium', 'Europe', 'Western Europe', '30518.0', '1830', '10239000', '77.8', '249704.0', '243948.0', 'België/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', '179', 'BE', 'BEL', 'Dutch', 'T', '59.2'), ('BLZ', 'Belize', 'North America', 'Central America', '22696.0', '1981', '241000', '70.9', '630.0', '616.0', 'Belize', 'Constitutional Monarchy', 'Elisabeth II', '185', 'BZ', 'BLZ', 'English', 'T', '50.8'), ('BMU', 'Bermuda', 'North America', 'North America', '53.0', '', '65000', '76.9', '2328.0', '2190.0', 'Bermuda', 'Dependent Territory of the UK', 'Elisabeth II', '191', 'BM', 'BMU', 'English', 'T', '100.0'), ('BRB', 'Barbados', 'North America', 'Caribbean', '430.0', '1966', '270000', '73.0', '2223.0', '2186.0', 'Barbados', 'Constitutional Monarchy', 'Elisabeth II', '174', 'BB', 'BRB', 'English', 'T', '0.0'), ('CAN', 'Canada', 'North America', 'North America', '9970610.0', '1867', '31147000', '79.4', '598862.0', '625626.0', 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', '1822', 'CA', 'CAN', 'English', 'T', '60.4'), ('CCK', 'Cocos (Keeling) Islands', 'Oceania', 'Australia and New Zealand', '14.0', '', '600', '', '0.0', '', 'Cocos (Keeling) Islands', 'Territory of Australia', 'Elisabeth II', '2317', 'CC', 'CCK', 'English', 'T', '0.0'), ('CXR', 'Christmas Island', 'Oceania', 'Australia and New Zealand', '135.0', '', '2500', '', '0.0', '', 'Christmas Island', 'Territory of Australia', 'Elisabeth II', '1791', 'CX', 'CXR', 'English', 'T', '0.0'), ('CYM', 'Cayman Islands', 'North America', 'Caribbean', '264.0', '', '38000', '78.9', '1263.0', '1186.0', 'Cayman Islands', 'Dependent Territory of the UK', 'Elisabeth II', '553', 'KY', 'CYM', 'English', 'T', '0.0'), ('FLK', 'Falkland Islands', 'South America', 'South America', '12173.0', '', '2000', '', '0.0', '', 'Falkland Islands', 'Dependent Territory of the UK', 'Elisabeth II', '763', 'FK', 'FLK', 'English', 'T', '0.0'), ('GBR', 'United Kingdom', 'Europe', 'British Islands', '242900.0', '1066', '59623400', '77.7', '1378330.0', '1296830.0', 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', '456', 'GB', 'GBR', 'English', 'T', '97.3'), ('GIB', 'Gibraltar', 'Europe', 'Southern Europe', '6.0', '', '25000', '79.0', '258.0', '', 'Gibraltar', 'Dependent Territory of the UK', 'Elisabeth II', '915', 'GI', 'GIB', 'English', 'T', '88.9'), ('GUM', 'Guam', 'Oceania', 'Micronesia', '549.0', '', '168000', '77.8', '1197.0', '1136.0', 'Guam', 'US Territory', 'George W. Bush', '921', 'GU', 'GUM', 'English', 'T', '37.5'), ('HKG', 'Hong Kong', 'Asia', 'Eastern Asia', '1075.0', '', '6782000', '79.5', '166448.0', '173610.0', 'Xianggang/Hong Kong', 'Special Administrative Region of China', 'Jiang Zemin', '937', 'HK', 'HKG', 'English', 'T', '2.2'), ('IRL', 'Ireland', 'Europe', 'British Islands', '70273.0', '1921', '3775100', '76.8', '75921.0', '73132.0', 'Ireland/Éire', 'Republic', 'Mary McAleese', '1447', 'IE', 'IRL', 'English', 'T', '98.4'), ('KNA', 'Saint Kitts and Nevis', 'North America', 'Caribbean', '261.0', '1983', '38000', '70.7', '299.0', '', 'Saint Kitts and Nevis', 'Constitutional Monarchy', 'Elisabeth II', '3064', 'KN', 'KNA', 'English', 'T', '0.0'), ('LCA', 'Saint Lucia', 'North America', 'Caribbean', '622.0', '1979', '154000', '72.3', '571.0', '', 'Saint Lucia', 'Constitutional Monarchy', 'Elisabeth II', '3065', 'LC', 'LCA', 'English', 'T', '20.0'), ('LSO', 'Lesotho', 'Africa', 'Southern Africa', '30355.0', '1966', '2153000', '50.8', '1061.0', '1161.0', 'Lesotho', 'Constitutional Monarchy', 'Letsie III', '2437', 'LS', 'LSO', 'English', 'T', '0.0'), ('MHL', 'Marshall Islands', 'Oceania', 'Micronesia', '181.0', '1990', '64000', '65.5', '97.0', '', 'Marshall Islands/Majol', 'Republic', 'Kessai Note', '2507', 'MH', 'MHL', 'English', 'T', '0.0'), ('MLT', 'Malta', 'Europe', 'Southern Europe', '316.0', '1964', '380200', '77.9', '3512.0', '3338.0', 'Malta', 'Republic', 'Guido de Marco', '2484', 'MT', 'MLT', 'English', 'T', '2.1'), ('MNP', 'Northern Mariana Islands', 'Oceania', 'Micronesia', '464.0', '', '78000', '75.5', '0.0', '', 'Northern Mariana Islands', 'Commonwealth of the US', 'George W. Bush', '2913', 'MP', 'MNP', 'English', 'T', '4.8'), ('MSR', 'Montserrat', 'North America', 'Caribbean', '102.0', '', '11000', '78.0', '109.0', '', 'Montserrat', 'Dependent Territory of the UK', 'Elisabeth II', '2697', 'MS', 'MSR', 'English', 'T', '0.0'), ('NFK', 'Norfolk Island', 'Oceania', 'Australia and New Zealand', '36.0', '', '2000', '', '0.0', '', 'Norfolk Island', 'Territory of Australia', 'Elisabeth II', '2806', 'NF', 'NFK', 'English', 'T', '0.0'), ('NIU', 'Niue', 'Oceania', 'Polynesia', '260.0', '', '2000', '', '0.0', '', 'Niue', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '2805', 'NU', 'NIU', 'English', 'T', '0.0'), ('NLD', 'Netherlands', 'Europe', 'Western Europe', '41526.0', '1581', '15864000', '78.3', '371362.0', '360478.0', 'Nederland', 'Constitutional Monarchy', 'Beatrix', '5', 'NL', 'NLD', 'Dutch', 'T', '95.6'), ('NRU', 'Nauru', 'Oceania', 'Micronesia', '21.0', '1968', '12000', '60.8', '197.0', '', 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', '2728', 'NR', 'NRU', 'English', 'T', '7.5'), ('NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', '270534.0', '1907', '3862000', '77.8', '54669.0', '64960.0', 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', '3499', 'NZ', 'NZL', 'English', 'T', '87.0'), ('PLW', 'Palau', 'Oceania', 'Micronesia', '459.0', '1994', '19000', '68.6', '105.0', '', 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', '2881', 'PW', 'PLW', 'English', 'T', '3.2'), ('SHN', 'Saint Helena', 'Africa', 'Western Africa', '314.0', '', '6000', '76.8', '0.0', '', 'Saint Helena', 'Dependent Territory of the UK', 'Elisabeth II', '3063', 'SH', 'SHN', 'English', 'T', '0.0'), ('SYC', 'Seychelles', 'Africa', 'Eastern Africa', '455.0', '1976', '77000', '70.4', '536.0', '539.0', 'Sesel/Seychelles', 'Republic', 'France-Albert René', '3206', 'SC', 'SYC', 'English', 'T', '3.8'), ('TCA', 'Turks and Caicos Islands', 'North America', 'Caribbean', '430.0', '', '17000', '73.3', '96.0', '', 'The Turks and Caicos Islands', 'Dependent Territory of the UK', 'Elisabeth II', '3423', 'TC', 'TCA', 'English', 'T', '0.0'), ('TKL', 'Tokelau', 'Oceania', 'Polynesia', '12.0', '', '2000', '', '0.0', '', 'Tokelau', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', '3333', 'TK', 'TKL', 'English', 'T', '0.0'), ('TON', 'Tonga', 'Oceania', 'Polynesia', '650.0', '1970', '99000', '67.9', '146.0', '170.0', 'Tonga', 'Monarchy', ""Taufa'ahau Tupou IV"", '3334', 'TO', 'TON', 'English', 'T', '0.0'), ('TUV', 'Tuvalu', 'Oceania', 'Polynesia', '26.0', '1978', '12000', '66.3', '6.0', '', 'Tuvalu', 'Constitutional Monarchy', 'Elisabeth II', '3424', 'TV', 'TUV', 'English', 'T', '0.0'), ('UMI', 'United States Minor Outlying Islands', 'Oceania', 'Micronesia/Caribbean', '16.0', '', '0', '', '0.0', '', 'United States Minor Outlying Islands', 'Dependent Territory of the US', 'George W. Bush', '', 'UM', 'UMI', 'English', 'T', '0.0'), ('USA', 'United States', 'North America', 'North America', '9363520.0', '1776', '278357000', '77.1', '8510700.0', '8110900.0', 'United States', 'Federal Republic', 'George W. Bush', '3813', 'US', 'USA', 'English', 'T', '86.2'), ('VCT', 'Saint Vincent and the Grenadines', 'North America', 'Caribbean', '388.0', '1979', '114000', '72.3', '285.0', '', 'Saint Vincent and the Grenadines', 'Constitutional Monarchy', 'Elisabeth II', '3066', 'VC', 'VCT', 'English', 'T', '0.0'), ('VGB', 'Virgin Islands, British', 'North America', 'Caribbean', '151.0', '', '21000', '75.4', '612.0', '573.0', 'British Virgin Islands', 'Dependent Territory of the UK', 'Elisabeth II', '537', 'VG', 'VGB', 'English', 'T', '0.0'), ('VIR', 'Virgin Islands, U.S.', 'North America', 'Caribbean', '347.0', '', '93000', '78.1', '0.0', '', 'Virgin Islands of the United States', 'US Territory', 'George W. Bush', '4067', 'VI', 'VIR', 'English', 'T', '81.7'), ('VUT', 'Vanuatu', 'Oceania', 'Melanesia', '12189.0', '1980', '190000', '60.6', '261.0', '246.0', 'Vanuatu', 'Republic', 'John Bani', '3537', 'VU', 'VUT', 'English', 'T', '28.3'), ('WSM', 'Samoa', 'Oceania', 'Polynesia', '2831.0', '1962', '180000', '69.2', '141.0', '157.0', 'Samoa', 'Parlementary Monarchy', 'Malietoa Tanumafili II', '3169', 'WS', 'WSM', 'English', 'T', '0.6'), ('ZAF', 'South Africa', 'Africa', 'Southern Africa', '1221037.0', '1910', '40377000', '51.1', '116729.0', '129092.0', 'South Africa', 'Republic', 'Thabo Mbeki', '716', 'ZA', 'ZAF', 'English', 'T', '8.5'), ('ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', '390757.0', '1980', '11669000', '37.8', '5951.0', '8670.0', 'Zimbabwe', 'Republic', 'Robert G. Mugabe', '4068', 'ZW', 'ZWE', 'English', 'T', '2.2')] != [('American Samoa',), ('Anguilla',), ('Antigua and Barbuda',), ('Aruba',), ('Aruba',), ('Australia',), ('Bahrain',), ('Barbados',), ('Belgium',), ('Belize',), ('Bermuda',), ('Brunei',), ('Canada',), ('Canada',), ('Cayman Islands',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Cook Islands',), ('Denmark',), ('Falkland Islands',), ('Gibraltar',), ('Guam',), ('Hong Kong',), ('Iceland',), ('Ireland',), ('Japan',), ('Kuwait',), ('Lesotho',), ('Macao',), ('Malaysia',), ('Maldives',), ('Malta',), ('Marshall Islands',), ('Monaco',), ('Montserrat',), ('Nauru',), ('Netherlands',), ('Netherlands Antilles',), ('Netherlands Antilles',), ('New Zealand',), ('Niue',), ('Norfolk Island',), ('Northern Mariana Islands',), ('Norway',), ('Palau',), ('Puerto Rico',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('Seychelles',), ('South Africa',), ('Tokelau',), ('Tonga',), ('Trinidad and Tobago',), ('Turks and Caicos Islands',), ('Tuvalu',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Vanuatu',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Zimbabwe',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(T2.Language) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(T2.Language) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T2.CountryCode) = 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T2.CountryCode) = 1,,True
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN city AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1;,"Not match: [('New York', '8008278')] != [('New York',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN city AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1;,"Not match: [('New York', '8008278')] != [('New York',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;",,True
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN ( SELECT Code FROM countrylanguage WHERE IsOfficial = 'T' );,"Not match: [('65.4827027027027',)] != [('',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN ( SELECT Code FROM countrylanguage WHERE IsOfficial = 'T' ),"Not match: [('65.4827027027027',)] != [('',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT COUNT(*) FROM country WHERE Code NOT IN ( SELECT Code FROM countrylanguage WHERE Language = 'English' );,"Not match: [('5451331150',)] != [('0',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT COUNT(T2.CountryCode) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language != 'English',"Not match: [('5451331150',)] != [('924',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix';,"Not match: [('Dutch',), ('Dutch',), ('Dutch',), ('Papiamento',)] != [('Arabic',), ('Dutch',), ('Dutch',), ('Dutch',), ('English',), ('English',), ('Fries',), ('Papiamento',), ('Papiamento',), ('Spanish',), ('Turkish',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix';,"Not match: [('Dutch',), ('Dutch',), ('Dutch',), ('Papiamento',)] != [('Arabic',), ('Dutch',), ('Dutch',), ('Dutch',), ('English',), ('English',), ('Fries',), ('Papiamento',), ('Papiamento',), ('Spanish',), ('Turkish',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T',,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930;,"Not match: [('40',)] != [('153',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT DISTINCT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code = T2.Code WHERE T1.SurfaceArea > ( SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe' ),"Not match: [('Afghanistan',), ('Albania',), ('Algeria',), ('American Samoa',), ('Andorra',), ('Angola',), ('Anguilla',), ('Antarctica',), ('Antigua and Barbuda',), ('Argentina',), ('Armenia',), ('Aruba',), ('Australia',), ('Austria',), ('Azerbaijan',), ('Bahamas',), ('Bahrain',), ('Bangladesh',), ('Barbados',), ('Belarus',), ('Belgium',), ('Belize',), ('Benin',), ('Bermuda',), ('Bhutan',), ('Bolivia',), ('Bosnia and Herzegovina',), ('Botswana',), ('Bouvet Island',), ('Brazil',), ('British Indian Ocean Territory',), ('Brunei',), ('Bulgaria',), ('Burkina Faso',), ('Burundi',), ('Cambodia',), ('Cameroon',), ('Canada',), ('Cape Verde',), ('Cayman Islands',), ('Central African Republic',), ('Chad',), ('Chile',), ('China',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Colombia',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Cook Islands',), ('Costa Rica',), ('Croatia',), ('Cuba',), ('Cyprus',), ('Czech Republic',), ('Côte d’Ivoire',), ('Denmark',), ('Djibouti',), ('Dominica',), ('Dominican Republic',), ('East Timor',), ('Ecuador',), ('Egypt',), ('El Salvador',), ('Equatorial Guinea',), ('Eritrea',), ('Estonia',), ('Ethiopia',), ('Falkland Islands',), ('Faroe Islands',), ('Fiji Islands',), ('Finland',), ('France',), ('French Guiana',), ('French Polynesia',), ('French Southern territories',), ('Gabon',), ('Gambia',), ('Georgia',), ('Germany',), ('Ghana',), ('Gibraltar',), ('Greece',), ('Greenland',), ('Grenada',), ('Guadeloupe',), ('Guam',), ('Guatemala',), ('Guinea',), ('Guinea-Bissau',), ('Guyana',), ('Haiti',), ('Heard Island and McDonald Islands',), ('Honduras',), ('Hong Kong',), ('Hungary',), ('Iceland',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Ireland',), ('Israel',), ('Italy',), ('Jamaica',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kenya',), ('Kiribati',), ('Kuwait',), ('Kyrgyzstan',), ('Laos',), ('Latvia',), ('Lebanon',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Liechtenstein',), ('Lithuania',), ('Luxembourg',), ('Macao',), ('Macedonia',), ('Madagascar',), ('Malawi',), ('Malaysia',), ('Maldives',), ('Mali',), ('Malta',), ('Marshall Islands',), ('Martinique',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Mexico',), ('Micronesia, Federated States of',), ('Moldova',), ('Monaco',), ('Mongolia',), ('Montserrat',), ('Morocco',), ('Mozambique',), ('Myanmar',), ('Namibia',), ('Nauru',), ('Nepal',), ('Netherlands',), ('Netherlands Antilles',), ('New Caledonia',), ('New Zealand',), ('Nicaragua',), ('Niger',), ('Nigeria',), ('Niue',), ('Norfolk Island',), ('North Korea',), ('Northern Mariana Islands',), ('Norway',), ('Oman',), ('Pakistan',), ('Palau',), ('Palestine',), ('Panama',), ('Papua New Guinea',), ('Paraguay',), ('Peru',), ('Philippines',), ('Pitcairn',), ('Poland',), ('Portugal',), ('Puerto Rico',), ('Qatar',), ('Romania',), ('Russian Federation',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Pierre and Miquelon',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('San Marino',), ('Sao Tome and Principe',), ('Saudi Arabia',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Singapore',), ('Slovakia',), ('Slovenia',), ('Solomon Islands',), ('Somalia',), ('South Africa',), ('South Georgia and the South Sandwich Islands',), ('South Korea',), ('Spain',), ('Sri Lanka',), ('Sudan',), ('Suriname',), ('Svalbard and Jan Mayen',), ('Swaziland',), ('Sweden',), ('Switzerland',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Tanzania',), ('Thailand',), ('Togo',), ('Tokelau',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Turkey',), ('Turkmenistan',), ('Turks and Caicos Islands',), ('Tuvalu',), ('Uganda',), ('Ukraine',), ('United Arab Emirates',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Uruguay',), ('Uzbekistan',), ('Vanuatu',), ('Venezuela',), ('Vietnam',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Wallis and Futuna',), ('Western Sahara',), ('Yemen',), ('Yugoslavia',), ('Zambia',), ('Zimbabwe',)] != []",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT Name FROM country WHERE SurfaceArea > ( SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe' ),"Not match: [('Afghanistan',), ('Albania',), ('Algeria',), ('American Samoa',), ('Andorra',), ('Angola',), ('Anguilla',), ('Antarctica',), ('Antigua and Barbuda',), ('Argentina',), ('Armenia',), ('Aruba',), ('Australia',), ('Austria',), ('Azerbaijan',), ('Bahamas',), ('Bahrain',), ('Bangladesh',), ('Barbados',), ('Belarus',), ('Belgium',), ('Belize',), ('Benin',), ('Bermuda',), ('Bhutan',), ('Bolivia',), ('Bosnia and Herzegovina',), ('Botswana',), ('Bouvet Island',), ('Brazil',), ('British Indian Ocean Territory',), ('Brunei',), ('Bulgaria',), ('Burkina Faso',), ('Burundi',), ('Cambodia',), ('Cameroon',), ('Canada',), ('Cape Verde',), ('Cayman Islands',), ('Central African Republic',), ('Chad',), ('Chile',), ('China',), ('Christmas Island',), ('Cocos (Keeling) Islands',), ('Colombia',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Cook Islands',), ('Costa Rica',), ('Croatia',), ('Cuba',), ('Cyprus',), ('Czech Republic',), ('Côte d’Ivoire',), ('Denmark',), ('Djibouti',), ('Dominica',), ('Dominican Republic',), ('East Timor',), ('Ecuador',), ('Egypt',), ('El Salvador',), ('Equatorial Guinea',), ('Eritrea',), ('Estonia',), ('Ethiopia',), ('Falkland Islands',), ('Faroe Islands',), ('Fiji Islands',), ('Finland',), ('France',), ('French Guiana',), ('French Polynesia',), ('French Southern territories',), ('Gabon',), ('Gambia',), ('Georgia',), ('Germany',), ('Ghana',), ('Gibraltar',), ('Greece',), ('Greenland',), ('Grenada',), ('Guadeloupe',), ('Guam',), ('Guatemala',), ('Guinea',), ('Guinea-Bissau',), ('Guyana',), ('Haiti',), ('Heard Island and McDonald Islands',), ('Honduras',), ('Hong Kong',), ('Hungary',), ('Iceland',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Ireland',), ('Israel',), ('Italy',), ('Jamaica',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kenya',), ('Kiribati',), ('Kuwait',), ('Kyrgyzstan',), ('Laos',), ('Latvia',), ('Lebanon',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Liechtenstein',), ('Lithuania',), ('Luxembourg',), ('Macao',), ('Macedonia',), ('Madagascar',), ('Malawi',), ('Malaysia',), ('Maldives',), ('Mali',), ('Malta',), ('Marshall Islands',), ('Martinique',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Mexico',), ('Micronesia, Federated States of',), ('Moldova',), ('Monaco',), ('Mongolia',), ('Montserrat',), ('Morocco',), ('Mozambique',), ('Myanmar',), ('Namibia',), ('Nauru',), ('Nepal',), ('Netherlands',), ('Netherlands Antilles',), ('New Caledonia',), ('New Zealand',), ('Nicaragua',), ('Niger',), ('Nigeria',), ('Niue',), ('Norfolk Island',), ('North Korea',), ('Northern Mariana Islands',), ('Norway',), ('Oman',), ('Pakistan',), ('Palau',), ('Palestine',), ('Panama',), ('Papua New Guinea',), ('Paraguay',), ('Peru',), ('Philippines',), ('Pitcairn',), ('Poland',), ('Portugal',), ('Puerto Rico',), ('Qatar',), ('Romania',), ('Russian Federation',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Saint Kitts and Nevis',), ('Saint Lucia',), ('Saint Pierre and Miquelon',), ('Saint Vincent and the Grenadines',), ('Samoa',), ('San Marino',), ('Sao Tome and Principe',), ('Saudi Arabia',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Singapore',), ('Slovakia',), ('Slovenia',), ('Solomon Islands',), ('Somalia',), ('South Africa',), ('South Georgia and the South Sandwich Islands',), ('South Korea',), ('Spain',), ('Sri Lanka',), ('Sudan',), ('Suriname',), ('Svalbard and Jan Mayen',), ('Swaziland',), ('Sweden',), ('Switzerland',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Tanzania',), ('Thailand',), ('Togo',), ('Tokelau',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Turkey',), ('Turkmenistan',), ('Turks and Caicos Islands',), ('Tuvalu',), ('Uganda',), ('Ukraine',), ('United Arab Emirates',), ('United Kingdom',), ('United States',), ('United States Minor Outlying Islands',), ('Uruguay',), ('Uzbekistan',), ('Vanuatu',), ('Venezuela',), ('Vietnam',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Wallis and Futuna',), ('Western Sahara',), ('Yemen',), ('Yugoslavia',), ('Zambia',), ('Zimbabwe',)] != []",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",SELECT Name FROM country WHERE Continent = 'Africa' AND Population < ( SELECT MIN(Population) FROM country WHERE Continent = 'Asia' ),"Not match: [('Algeria',), ('Angola',), ('Benin',), ('Botswana',), ('British Indian Ocean Territory',), ('Burkina Faso',), ('Burundi',), ('Cameroon',), ('Cape Verde',), ('Central African Republic',), ('Chad',), ('Comoros',), ('Congo',), ('Congo, The Democratic Republic of the',), ('Côte d’Ivoire',), ('Djibouti',), ('Egypt',), ('Equatorial Guinea',), ('Eritrea',), ('Ethiopia',), ('Gabon',), ('Gambia',), ('Ghana',), ('Guinea',), ('Guinea-Bissau',), ('Kenya',), ('Lesotho',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Madagascar',), ('Malawi',), ('Mali',), ('Mauritania',), ('Mauritius',), ('Mayotte',), ('Morocco',), ('Mozambique',), ('Namibia',), ('Niger',), ('Nigeria',), ('Rwanda',), ('Réunion',), ('Saint Helena',), ('Sao Tome and Principe',), ('Senegal',), ('Seychelles',), ('Sierra Leone',), ('Somalia',), ('South Africa',), ('Sudan',), ('Swaziland',), ('Tanzania',), ('Togo',), ('Tunisia',), ('Uganda',), ('Western Sahara',), ('Zambia',), ('Zimbabwe',)] != [('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',), ('Sao Tome and Principe',), ('Seychelles',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")",SELECT Name FROM country WHERE Population < ( SELECT MIN(Population) FROM country WHERE Continent = 'Asia' ) AND Continent = 'Africa';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",SELECT Name FROM country WHERE Population > ( SELECT MAX(Population) FROM country WHERE Continent = 'Africa' ) AND Continent = 'Asia';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",SELECT Name FROM country WHERE Population > ( SELECT MAX(Population) FROM country WHERE Continent = 'Africa' ) AND Continent = 'Asia';,"Not match: [('Afghanistan',), ('Armenia',), ('Azerbaijan',), ('Bahrain',), ('Bangladesh',), ('Bhutan',), ('Brunei',), ('Cambodia',), ('China',), ('Cyprus',), ('East Timor',), ('Georgia',), ('Hong Kong',), ('India',), ('Indonesia',), ('Iran',), ('Iraq',), ('Israel',), ('Japan',), ('Jordan',), ('Kazakstan',), ('Kuwait',), ('Kyrgyzstan',), ('Laos',), ('Lebanon',), ('Macao',), ('Malaysia',), ('Maldives',), ('Mongolia',), ('Myanmar',), ('Nepal',), ('North Korea',), ('Oman',), ('Pakistan',), ('Palestine',), ('Philippines',), ('Qatar',), ('Saudi Arabia',), ('Singapore',), ('South Korea',), ('Sri Lanka',), ('Syria',), ('Taiwan',), ('Tajikistan',), ('Thailand',), ('Turkey',), ('Turkmenistan',), ('United Arab Emirates',), ('Uzbekistan',), ('Vietnam',), ('Yemen',)] != [('Bangladesh',), ('China',), ('India',), ('Indonesia',), ('Japan',), ('Pakistan',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT CountryCode FROM countrylanguage WHERE Language != 'English',"Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT CountryCode FROM countrylanguage WHERE Language != 'English',"Not match: [('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT T2.CountryCode FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language != 'English',OperationalError('no such column: T2.CountryCode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT CountryCode FROM countrylanguage WHERE Language != 'English',"Not match: [('ABW',), ('AFG',), ('AGO',), ('ALB',), ('AND',), ('ANT',), ('ARE',), ('ARG',), ('ARM',), ('ASM',), ('ATG',), ('AUS',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHR',), ('BHS',), ('BIH',), ('BLR',), ('BLZ',), ('BOL',), ('BRA',), ('BRB',), ('BRN',), ('BTN',), ('BWA',), ('CAF',), ('CAN',), ('CCK',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COK',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DNK',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GBR',), ('GEO',), ('GHA',), ('GIB',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUM',), ('GUY',), ('HKG',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRL',), ('IRN',), ('IRQ',), ('ISL',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('JPN',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KNA',), ('KOR',), ('KWT',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LCA',), ('LIE',), ('LKA',), ('LSO',), ('LTU',), ('LUX',), ('LVA',), ('MAC',), ('MAR',), ('MCO',), ('MDA',), ('MDG',), ('MDV',), ('MEX',), ('MHL',), ('MKD',), ('MLI',), ('MLT',), ('MMR',), ('MNG',), ('MNP',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYS',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NIU',), ('NLD',), ('NOR',), ('NPL',), ('NRU',), ('NZL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PLW',), ('PNG',), ('POL',), ('PRI',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYC',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKL',), ('TKM',), ('TMP',), ('TON',), ('TTO',), ('TUN',), ('TUR',), ('TUV',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('USA',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VIR',), ('VNM',), ('VUT',), ('WLF',), ('WSM',), ('YEM',), ('YUG',), ('ZAF',), ('ZMB',), ('ZWE',)] != [('ABW',), ('ABW',), ('ABW',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AFG',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('AGO',), ('ALB',), ('ALB',), ('ALB',), ('AND',), ('AND',), ('AND',), ('AND',), ('ANT',), ('ANT',), ('ARE',), ('ARE',), ('ARG',), ('ARG',), ('ARG',), ('ARM',), ('ARM',), ('ASM',), ('ASM',), ('ATG',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUS',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AUT',), ('AZE',), ('AZE',), ('AZE',), ('AZE',), ('BDI',), ('BDI',), ('BDI',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEL',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BEN',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BFA',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGD',), ('BGR',), ('BGR',), ('BGR',), ('BGR',), ('BHR',), ('BHS',), ('BHS',), ('BIH',), ('BLR',), ('BLR',), ('BLR',), ('BLR',), ('BLZ',), ('BLZ',), ('BLZ',), ('BOL',), ('BOL',), ('BOL',), ('BOL',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRA',), ('BRB',), ('BRN',), ('BRN',), ('BRN',), ('BTN',), ('BTN',), ('BTN',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('BWA',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAF',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CAN',), ('CCK',), ('CHE',), ('CHE',), ('CHE',), ('CHE',), ('CHL',), ('CHL',), ('CHL',), ('CHL',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CHN',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CIV',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('CMR',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COD',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COG',), ('COK',), ('COL',), ('COL',), ('COL',), ('COL',), ('COL',), ('COM',), ('COM',), ('COM',), ('COM',), ('COM',), ('CPV',), ('CPV',), ('CRI',), ('CRI',), ('CRI',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CYP',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('CZE',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DEU',), ('DJI',), ('DJI',), ('DJI',), ('DMA',), ('DMA',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DNK',), ('DOM',), ('DOM',), ('DZA',), ('DZA',), ('ECU',), ('ECU',), ('EGY',), ('EGY',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ERI',), ('ESH',), ('ESP',), ('ESP',), ('ESP',), ('ESP',), ('EST',), ('EST',), ('EST',), ('EST',), ('EST',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('ETH',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FIN',), ('FJI',), ('FJI',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRA',), ('FRO',), ('FRO',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('FSM',), ('GAB',), ('GAB',), ('GAB',), ('GAB',), ('GBR',), ('GBR',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GEO',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GHA',), ('GIB',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GIN',), ('GLP',), ('GLP',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GMB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNB',), ('GNQ',), ('GNQ',), ('GRC',), ('GRC',), ('GRD',), ('GRL',), ('GRL',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GTM',), ('GUF',), ('GUF',), ('GUM',), ('GUM',), ('GUM',), ('GUM',), ('GUY',), ('GUY',), ('GUY',), ('HKG',), ('HKG',), ('HKG',), ('HKG',), ('HND',), ('HND',), ('HND',), ('HND',), ('HRV',), ('HRV',), ('HTI',), ('HTI',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('HUN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IDN',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IND',), ('IRL',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRN',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('IRQ',), ('ISL',), ('ISR',), ('ISR',), ('ISR',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('ITA',), ('JAM',), ('JAM',), ('JOR',), ('JOR',), ('JOR',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('JPN',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KAZ',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KEN',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KGZ',), ('KHM',), ('KHM',), ('KHM',), ('KHM',), ('KIR',), ('KIR',), ('KNA',), ('KOR',), ('KOR',), ('KWT',), ('LAO',), ('LAO',), ('LAO',), ('LAO',), ('LBN',), ('LBN',), ('LBN',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBR',), ('LBY',), ('LBY',), ('LCA',), ('LIE',), ('LIE',), ('LIE',), ('LKA',), ('LKA',), ('LKA',), ('LSO',), ('LSO',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LTU',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LUX',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('LVA',), ('MAC',), ('MAC',), ('MAC',), ('MAR',), ('MAR',), ('MCO',), ('MCO',), ('MCO',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDA',), ('MDG',), ('MDG',), ('MDV',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MEX',), ('MHL',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MKD',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLI',), ('MLT',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MMR',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNG',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MNP',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MOZ',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MRT',), ('MTQ',), ('MTQ',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MUS',), ('MWI',), ('MWI',), ('MWI',), ('MWI',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYS',), ('MYT',), ('MYT',), ('MYT',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NAM',), ('NCL',), ('NCL',), ('NCL',), ('NER',), ('NER',), ('NER',), ('NER',), ('NER',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NGA',), ('NIC',), ('NIC',), ('NIC',), ('NIC',), ('NIU',), ('NLD',), ('NLD',), ('NLD',), ('NLD',), ('NOR',), ('NOR',), ('NOR',), ('NOR',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NPL',), ('NRU',), ('NRU',), ('NRU',), ('NRU',), ('NZL',), ('OMN',), ('OMN',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAK',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PAN',), ('PCN',), ('PER',), ('PER',), ('PER',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PHL',), ('PLW',), ('PLW',), ('PLW',), ('PNG',), ('PNG',), ('POL',), ('POL',), ('POL',), ('POL',), ('PRI',), ('PRK',), ('PRK',), ('PRT',), ('PRY',), ('PRY',), ('PRY',), ('PRY',), ('PSE',), ('PSE',), ('PYF',), ('PYF',), ('PYF',), ('QAT',), ('QAT',), ('REU',), ('REU',), ('REU',), ('REU',), ('REU',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('ROM',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RUS',), ('RWA',), ('RWA',), ('SAU',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SDN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SEN',), ('SGP',), ('SGP',), ('SGP',), ('SJM',), ('SJM',), ('SLB',), ('SLB',), ('SLB',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLV',), ('SLV',), ('SMR',), ('SOM',), ('SOM',), ('SPM',), ('STP',), ('STP',), ('SUR',), ('SUR',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVK',), ('SVN',), ('SVN',), ('SVN',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWE',), ('SWZ',), ('SWZ',), ('SYC',), ('SYC',), ('SYR',), ('SYR',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TCD',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('TGO',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('THA',), ('TJK',), ('TJK',), ('TJK',), ('TKL',), ('TKM',), ('TKM',), ('TKM',), ('TKM',), ('TMP',), ('TMP',), ('TON',), ('TTO',), ('TTO',), ('TUN',), ('TUN',), ('TUN',), ('TUR',), ('TUR',), ('TUR',), ('TUV',), ('TUV',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TWN',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('TZA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UGA',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('UKR',), ('URY',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('USA',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VEN',), ('VEN',), ('VIR',), ('VIR',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VNM',), ('VUT',), ('VUT',), ('WLF',), ('WLF',), ('WSM',), ('WSM',), ('YEM',), ('YEM',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('YUG',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZAF',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZMB',), ('ZWE',), ('ZWE',), ('ZWE',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Language NOT IN ( SELECT Language FROM countrylanguage );,OperationalError('no such column: Language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Language NOT IN ( SELECT Language FROM countrylanguage );,OperationalError('no such column: Language'),False
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T2.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Europe' AND T2.Name NOT IN ( SELECT Name FROM countrylanguage WHERE IsOfficial = 'T' );,OperationalError('ambiguous column name: Name'),False
spider_data/database/world_1/world_1.sqlite,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T2.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial != 'T' AND T1.Continent = 'Europe';,OperationalError('no such column: T2.Name'),False
spider_data/database/world_1/world_1.sqlite,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T2.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' AND T2.Language = 'Chinese',OperationalError('no such column: T2.Name'),False
spider_data/database/world_1/world_1.sqlite,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""",SELECT DISTINCT T2.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' AND T2.IsOfficial = 'T';,OperationalError('no such column: T2.Name'),False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population LIMIT 1;","Not match: [('Antarctica', '13120000.0', '')] != [('Antarctica', '', '13120000.0')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population LIMIT 1;","Not match: [('Antarctica', '13120000.0', '')] != [('Antarctica', '', '13120000.0')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Population, Name, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;","Not match: [('Russian Federation', '146934000', 'Vladimir Putin')] != [('146934000', 'Russian Federation', 'Vladimir Putin')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name, Population, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;",,True
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T2.Name, COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Code HAVING COUNT(T1.Language) >= 3","Not match: [('10', 'Congo, The Democratic Republic of the'), ('10', 'Iran'), ('10', 'Kenya'), ('10', 'Mozambique'), ('10', 'Nigeria'), ('10', 'Philippines'), ('10', 'Sudan'), ('10', 'Uganda'), ('11', 'South Africa'), ('11', 'Tanzania'), ('12', 'Canada'), ('12', 'China'), ('12', 'India'), ('12', 'Russian Federation'), ('12', 'United States'), ('3', 'Albania'), ('3', 'American Samoa'), ('3', 'Argentina'), ('3', 'Bhutan'), ('3', 'Burundi'), ('3', 'Djibouti'), ('3', 'French Polynesia'), ('3', 'Guyana'), ('3', 'Israel'), ('3', 'Jordan'), ('3', 'Lebanon'), ('3', 'Lesotho'), ('3', 'Liechtenstein'), ('3', 'Mayotte'), ('3', 'Netherlands Antilles'), ('3', 'New Caledonia'), ('3', 'Peru'), ('3', 'Samoa'), ('3', 'Seychelles'), ('3', 'Singapore'), ('3', 'Slovenia'), ('3', 'Solomon Islands'), ('3', 'Sri Lanka'), ('3', 'Tajikistan'), ('3', 'Trinidad and Tobago'), ('3', 'Tunisia'), ('3', 'Turkey'), ('3', 'Tuvalu'), ('3', 'United Kingdom'), ('3', 'Vanuatu'), ('3', 'Venezuela'), ('3', 'Virgin Islands, U.S.'), ('4', 'Andorra'), ('4', 'Aruba'), ('4', 'Azerbaijan'), ('4', 'Belarus'), ('4', 'Belize'), ('4', 'Bolivia'), ('4', 'Brunei'), ('4', 'Bulgaria'), ('4', 'Cambodia'), ('4', 'Chile'), ('4', 'Costa Rica'), ('4', 'Gabon'), ('4', 'Honduras'), ('4', 'Laos'), ('4', 'Macao'), ('4', 'Malawi'), ('4', 'Monaco'), ('4', 'Netherlands'), ('4', 'Nicaragua'), ('4', 'Palau'), ('4', 'Paraguay'), ('4', 'Poland'), ('4', 'Spain'), ('4', 'Switzerland'), ('4', 'Turkmenistan'), ('4', 'Zimbabwe'), ('5', 'Afghanistan'), ('5', 'Botswana'), ('5', 'Brazil'), ('5', 'Colombia'), ('5', 'Comoros'), ('5', 'Côte d’Ivoire'), ('5', 'Estonia'), ('5', 'Finland'), ('5', 'Gambia'), ('5', 'Guam'), ('5', 'Guatemala'), ('5', 'Hong Kong'), ('5', 'Iraq'), ('5', 'Lithuania'), ('5', 'Luxembourg'), ('5', 'Macedonia'), ('5', 'Moldova'), ('5', 'Nauru'), ('5', 'Niger'), ('5', 'Norway'), ('5', 'Réunion'), ('5', 'Slovakia'), ('6', 'Belgium'), ('6', 'Burkina Faso'), ('6', 'Central African Republic'), ('6', 'Congo'), ('6', 'Eritrea'), ('6', 'France'), ('6', 'Georgia'), ('6', 'Germany'), ('6', 'Ghana'), ('6', 'Guinea-Bissau'), ('6', 'Hungary'), ('6', 'Japan'), ('6', 'Kazakstan'), ('6', 'Latvia'), ('6', 'Malaysia'), ('6', 'Mali'), ('6', 'Mauritania'), ('6', 'Mauritius'), ('6', 'Mexico'), ('6', 'Micronesia, Federated States of'), ('6', 'Mongolia'), ('6', 'Northern Mariana Islands'), ('6', 'Panama'), ('6', 'Romania'), ('6', 'Senegal'), ('6', 'Sweden'), ('6', 'Taiwan'), ('6', 'Thailand'), ('6', 'Uzbekistan'), ('6', 'Yugoslavia'), ('6', 'Zambia'), ('7', 'Bangladesh'), ('7', 'Benin'), ('7', 'Denmark'), ('7', 'Ethiopia'), ('7', 'Guinea'), ('7', 'Kyrgyzstan'), ('7', 'Nepal'), ('7', 'Ukraine'), ('8', 'Australia'), ('8', 'Austria'), ('8', 'Cameroon'), ('8', 'Chad'), ('8', 'Czech Republic'), ('8', 'Italy'), ('8', 'Liberia'), ('8', 'Myanmar'), ('8', 'Namibia'), ('8', 'Pakistan'), ('8', 'Sierra Leone'), ('8', 'Togo'), ('9', 'Angola'), ('9', 'Indonesia'), ('9', 'Vietnam')] != [('Afghanistan', '5'), ('Albania', '3'), ('American Samoa', '3'), ('Andorra', '4'), ('Angola', '9'), ('Argentina', '3'), ('Aruba', '4'), ('Australia', '8'), ('Austria', '8'), ('Azerbaijan', '4'), ('Bangladesh', '7'), ('Belarus', '4'), ('Belgium', '6'), ('Belize', '4'), ('Benin', '7'), ('Bhutan', '3'), ('Bolivia', '4'), ('Botswana', '5'), ('Brazil', '5'), ('Brunei', '4'), ('Bulgaria', '4'), ('Burkina Faso', '6'), ('Burundi', '3'), ('Cambodia', '4'), ('Cameroon', '8'), ('Canada', '12'), ('Central African Republic', '6'), ('Chad', '8'), ('Chile', '4'), ('China', '12'), ('Colombia', '5'), ('Comoros', '5'), ('Congo', '6'), ('Congo, The Democratic Republic of the', '10'), ('Costa Rica', '4'), ('Czech Republic', '8'), ('Côte d’Ivoire', '5'), ('Denmark', '7'), ('Djibouti', '3'), ('Eritrea', '6'), ('Estonia', '5'), ('Ethiopia', '7'), ('Finland', '5'), ('France', '6'), ('French Polynesia', '3'), ('Gabon', '4'), ('Gambia', '5'), ('Georgia', '6'), ('Germany', '6'), ('Ghana', '6'), ('Guam', '5'), ('Guatemala', '5'), ('Guinea', '7'), ('Guinea-Bissau', '6'), ('Guyana', '3'), ('Honduras', '4'), ('Hong Kong', '5'), ('Hungary', '6'), ('India', '12'), ('Indonesia', '9'), ('Iran', '10'), ('Iraq', '5'), ('Israel', '3'), ('Italy', '8'), ('Japan', '6'), ('Jordan', '3'), ('Kazakstan', '6'), ('Kenya', '10'), ('Kyrgyzstan', '7'), ('Laos', '4'), ('Latvia', '6'), ('Lebanon', '3'), ('Lesotho', '3'), ('Liberia', '8'), ('Liechtenstein', '3'), ('Lithuania', '5'), ('Luxembourg', '5'), ('Macao', '4'), ('Macedonia', '5'), ('Malawi', '4'), ('Malaysia', '6'), ('Mali', '6'), ('Mauritania', '6'), ('Mauritius', '6'), ('Mayotte', '3'), ('Mexico', '6'), ('Micronesia, Federated States of', '6'), ('Moldova', '5'), ('Monaco', '4'), ('Mongolia', '6'), ('Mozambique', '10'), ('Myanmar', '8'), ('Namibia', '8'), ('Nauru', '5'), ('Nepal', '7'), ('Netherlands', '4'), ('Netherlands Antilles', '3'), ('New Caledonia', '3'), ('Nicaragua', '4'), ('Niger', '5'), ('Nigeria', '10'), ('Northern Mariana Islands', '6'), ('Norway', '5'), ('Pakistan', '8'), ('Palau', '4'), ('Panama', '6'), ('Paraguay', '4'), ('Peru', '3'), ('Philippines', '10'), ('Poland', '4'), ('Romania', '6'), ('Russian Federation', '12'), ('Réunion', '5'), ('Samoa', '3'), ('Senegal', '6'), ('Seychelles', '3'), ('Sierra Leone', '8'), ('Singapore', '3'), ('Slovakia', '5'), ('Slovenia', '3'), ('Solomon Islands', '3'), ('South Africa', '11'), ('Spain', '4'), ('Sri Lanka', '3'), ('Sudan', '10'), ('Sweden', '6'), ('Switzerland', '4'), ('Taiwan', '6'), ('Tajikistan', '3'), ('Tanzania', '11'), ('Thailand', '6'), ('Togo', '8'), ('Trinidad and Tobago', '3'), ('Tunisia', '3'), ('Turkey', '3'), ('Turkmenistan', '4'), ('Tuvalu', '3'), ('Uganda', '10'), ('Ukraine', '7'), ('United Kingdom', '3'), ('United States', '12'), ('Uzbekistan', '6'), ('Vanuatu', '3'), ('Venezuela', '3'), ('Vietnam', '9'), ('Virgin Islands, U.S.', '3'), ('Yugoslavia', '6'), ('Zambia', '6'), ('Zimbabwe', '4')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T2.Name, COUNT(T2.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Percentage > 2 GROUP BY T2.Name",OperationalError('no such column: T2.Language'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city GROUP BY District HAVING SUM(Population) > (SELECT AVG(Population) FROM city)","Not match: [('1', 'Abidjan'), ('1', 'Abu Dhabi'), ('1', 'Adana'), ('1', 'Addis Abeba'), ('1', 'Aden'), ('1', 'Aguascalientes'), ('1', 'Ahal'), ('1', 'Alagoas'), ('1', 'Aleksandria'), ('1', 'Aleppo'), ('1', 'Alger'), ('1', 'Almaty Qalasy'), ('1', 'Altai'), ('1', 'Amazonas'), ('1', 'Amman'), ('1', 'Anambra & Enugu & Eb'), ('1', 'Ankara'), ('1', 'Antalya'), ('1', 'Antananarivo'), ('1', 'Antioquia'), ('1', 'Antwerpen'), ('1', 'Aragonia'), ('1', 'Aragua'), ('1', 'Arequipa'), ('1', 'Arkangeli'), ('1', 'Ashanti'), ('1', 'Assam'), ('1', 'Astrahan'), ('1', 'Asunción'), ('1', 'Atlantique'), ('1', 'Atlántico'), ('1', 'Attika'), ('1', 'Auckland'), ('1', 'Baden-Württemberg'), ('1', 'Baghdad'), ('1', 'Baki'), ('1', 'Bali'), ('1', 'Baluchistan'), ('1', 'Bamako'), ('1', 'Banaadir'), ('1', 'Bangkok'), ('1', 'Bangui'), ('1', 'Baskimaa'), ('1', 'Basra'), ('1', 'Baškortostan'), ('1', 'Beirut'), ('1', 'Bengasi'), ('1', 'Berliini'), ('1', 'Bihar'), ('1', 'Bishkek shaary'), ('1', 'Blantyre'), ('1', 'Bratislava'), ('1', 'Brazzaville'), ('1', 'Bremen'), ('1', 'British Colombia'), ('1', 'Brjansk'), ('1', 'Budapest'), ('1', 'Bukarest'), ('1', 'Bulawayo'), ('1', 'Burjatia'), ('1', 'Bursa'), ('1', 'Callao'), ('1', 'Campania'), ('1', 'Canary Islands'), ('1', 'Carabobo'), ('1', 'Casablanca'), ('1', 'Ceará'), ('1', 'Central Macedonia'), ('1', 'Central Serbia'), ('1', 'Central Visayas'), ('1', 'Centre'), ('1', 'Chandigarh'), ('1', 'Chari-Baguirmi'), ('1', 'Chiapas'), ('1', 'Chisinau'), ('1', 'Chittagong'), ('1', 'Chollabuk'), ('1', 'Chongqing'), ('1', 'Chungchongbuk'), ('1', 'Coast'), ('1', 'Cochabamba'), ('1', 'Conakry'), ('1', 'Constantine'), ('1', 'Cortés'), ('1', 'Córdoba'), ('1', 'Damascus'), ('1', 'Dar es Salaam'), ('1', 'Delhi'), ('1', 'Dhaka'), ('1', 'District of Columbia'), ('1', 'Distrito Central'), ('1', 'Distrito Nacional'), ('1', 'Diyarbakir'), ('1', 'Djibouti'), ('1', 'Doha'), ('1', 'Dolnoslaskie'), ('1', 'Dubai'), ('1', 'Durango'), ('1', 'East Azerbaidzan'), ('1', 'East Kasai'), ('1', 'Eastern Cape'), ('1', 'Ehime'), ('1', 'Emilia-Romagna'), ('1', 'Esfahan'), ('1', 'Eskisehir'), ('1', 'Estuaire'), ('1', 'Fars'), ('1', 'Federaatio'), ('1', 'Fukushima'), ('1', 'Fès-Boulemane'), ('1', 'Gansu'), ('1', 'Gaza'), ('1', 'Gaziantep'), ('1', 'Georgia'), ('1', 'Gifu'), ('1', 'Gilan'), ('1', 'Giza'), ('1', 'Goiás'), ('1', 'Gomel'), ('1', 'Grad Sofija'), ('1', 'Grad Zagreb'), ('1', 'Greater Accra'), ('1', 'Guatemala'), ('1', 'Guayas'), ('1', 'Guerrero'), ('1', 'Habarovsk'), ('1', 'Hainan'), ('1', 'Haiphong'), ('1', 'Hamadan'), ('1', 'Hamburg'), ('1', 'Hamgyong N'), ('1', 'Hamgyong P'), ('1', 'Hanoi'), ('1', 'Harare'), ('1', 'Harjumaa'), ('1', 'Harkova'), ('1', 'Haryana'), ('1', 'Haute-Zaïre'), ('1', 'Hawaii'), ('1', 'Herson'), ('1', 'Hessen'), ('1', 'Hims'), ('1', 'Hlavní mesto Praha'), ('1', 'Ho Chi Minh City'), ('1', 'Hongkong'), ('1', 'Horad Minsk'), ('1', 'Hsinchu'), ('1', 'Illinois'), ('1', 'Inchon'), ('1', 'Indiana'), ('1', 'Irbil'), ('1', 'Irkutsk'), ('1', 'Ishikawa'), ('1', 'Islamabad'), ('1', 'Istanbul'), ('1', 'Ivanovo'), ('1', 'Izmir'), ('1', 'Içel'), ('1', 'Jakarta Raya'), ('1', 'Jambi'), ('1', 'Jammu and Kashmir'), ('1', 'Jaroslavl'), ('1', 'Jerusalem'), ('1', 'Jizní Morava'), ('1', 'Kabol'), ('1', 'Kadiogo'), ('1', 'Kaduna'), ('1', 'Kagoshima'), ('1', 'Kairo'), ('1', 'Kalimantan Barat'), ('1', 'Kalimantan Selatan'), ('1', 'Kalimantan Timur'), ('1', 'Kaliningrad'), ('1', 'Kano & Jigawa'), ('1', 'Kaohsiung'), ('1', 'Karotegin'), ('1', 'Katalonia'), ('1', 'Kaunas'), ('1', 'Kayseri'), ('1', 'Keelung'), ('1', 'Kerman'), ('1', 'Kermanshah'), ('1', 'Khorasan'), ('1', 'Khulna'), ('1', 'Khuzestan'), ('1', 'Kinshasa'), ('1', 'Kiova'), ('1', 'Kirov'), ('1', 'Konya'), ('1', 'Kouilou'), ('1', 'Kowloon and New Kowl'), ('1', 'Krasnojarsk'), ('1', 'Kujawsko-Pomorskie'), ('1', 'Kumamoto'), ('1', 'Kurgan'), ('1', 'Kursk'), ('1', 'Kwangju'), ('1', 'Kwara & Kogi'), ('1', 'Kyongsangbuk'), ('1', 'Kyoto'), ('1', 'København'), ('1', 'La Habana'), ('1', 'La Libertad'), ('1', 'Lagos'), ('1', 'Lambayeque'), ('1', 'Lampung'), ('1', 'Lara'), ('1', 'Latium'), ('1', 'Leinster'), ('1', 'Liguria'), ('1', 'Lilongwe'), ('1', 'Lima'), ('1', 'Lipetsk'), ('1', 'Littoral'), ('1', 'Lodzkie'), ('1', 'Lombardia'), ('1', 'Loreto'), ('1', 'Louisiana'), ('1', 'Luanda'), ('1', 'Lubelskie'), ('1', 'Lugansk'), ('1', 'Lusaka'), ('1', 'Luxor'), ('1', 'Lviv'), ('1', 'Macau'), ('1', 'Madrid'), ('1', 'Maekel'), ('1', 'Magdalena'), ('1', 'Malopolskie'), ('1', 'Managua'), ('1', 'Mandalay'), ('1', 'Manitoba'), ('1', 'Maranhão'), ('1', 'Maritime'), ('1', 'Markazi'), ('1', 'Marrakech-Tensift-Al'), ('1', 'Maryland'), ('1', 'Massachusetts'), ('1', 'Mato Grosso'), ('1', 'Mato Grosso do Sul'), ('1', 'Mazowieckie'), ('1', 'Medina'), ('1', 'Meknès-Tafilalet'), ('1', 'Michigan'), ('1', 'Michoacán de Ocampo'), ('1', 'Midi-Pyrénées'), ('1', 'Minnesota'), ('1', 'Miranda'), ('1', 'Missouri'), ('1', 'Miyagi'), ('1', 'Mogiljov'), ('1', 'Montevideo'), ('1', 'Montserrado'), ('1', 'Moscow (City)'), ('1', 'Murcia'), ('1', 'Murmansk'), ('1', 'Mykolajiv'), ('1', 'Nagano'), ('1', 'Nagasaki'), ('1', 'Nairobi'), ('1', 'Namangan'), ('1', 'Nampo-si'), ('1', 'Nara'), ('1', 'Nebraska'), ('1', 'Nevada'), ('1', 'New Mexico'), ('1', 'New South Wales'), ('1', 'New York'), ('1', 'Newmaa'), ('1', 'Niamey'), ('1', 'Niedersachsen'), ('1', 'Niigata'), ('1', 'Ninawa'), ('1', 'Ningxia'), ('1', 'Nizni Novgorod'), ('1', 'Noord-Holland'), ('1', 'Norte de Santander'), ('1', 'North Carolina'), ('1', 'Northern Mindanao'), ('1', 'Nothwest Border Prov'), ('1', 'Nouakchott'), ('1', 'Novosibirsk'), ('1', 'Odesa'), ('1', 'Ogun'), ('1', 'Oita'), ('1', 'Omsk'), ('1', 'Ondo & Ekiti'), ('1', 'Oran'), ('1', 'Oregon'), ('1', 'Orenburg'), ('1', 'Oriental'), ('1', 'Oslo'), ('1', 'Ouest'), ('1', 'Panamá'), ('1', 'Peking'), ('1', 'Pennsylvania'), ('1', 'Penza'), ('1', 'Perak'), ('1', 'Perm'), ('1', 'Phnom Penh'), ('1', 'Piauí'), ('1', 'Pichincha'), ('1', 'Piemonte'), ('1', 'Pietari'), ('1', 'Pomorskie'), ('1', 'Port Said'), ('1', 'Primorje'), ('1', 'Provence-Alpes-Côte'), ('1', 'Puebla'), ('1', 'Pusan'), ('1', 'Pyongyang-si'), ('1', 'Qaraghandy'), ('1', 'Qinghai'), ('1', 'Qom'), ('1', 'Quang Nam-Da Nang'), ('1', 'Queensland'), ('1', 'Querétaro de Arteaga'), ('1', 'Quintana Roo'), ('1', 'Québec'), ('1', 'Rangoon [Yangon]'), ('1', 'Rhône-Alpes'), ('1', 'Riau'), ('1', 'Riika'), ('1', 'Rio Grande do Norte'), ('1', 'Rio Grande do Sul'), ('1', 'Risaralda'), ('1', 'Rivers & Bayelsa'), ('1', 'Riyadh'), ('1', 'Rjazan'), ('1', 'Rostov-na-Donu'), ('1', 'Salta'), ('1', 'Samarkand'), ('1', 'San Juan'), ('1', 'San Luis Potosí'), ('1', 'San Salvador'), ('1', 'Sanaa'), ('1', 'Sanliurfa'), ('1', 'Santa Catarina'), ('1', 'Santa Cruz'), ('1', 'Santafé de Bogotá'), ('1', 'Santander'), ('1', 'Santiago de Cuba'), ('1', 'Saratov'), ('1', 'Seoul'), ('1', 'Sergipe'), ('1', 'Shanghai'), ('1', 'Sisilia'), ('1', 'Sistan va Baluchesta'), ('1', 'Skopje'), ('1', 'Smolensk'), ('1', 'Sofala'), ('1', 'South Australia'), ('1', 'South Kazakstan'), ('1', 'Suez'), ('1', 'Sulawesi Selatan'), ('1', 'Sumatera Barat'), ('1', 'Sumatera Selatan'), ('1', 'Sumatera Utara'), ('1', 'Tabasco'), ('1', 'Taegu'), ('1', 'Taejon'), ('1', 'Taichung'), ('1', 'Tainan'), ('1', 'Tanger-Tétouan'), ('1', 'Tbilisi'), ('1', 'Tianjin'), ('1', 'Tjumen'), ('1', 'Tochigi'), ('1', 'Tolima'), ('1', 'Tomsk'), ('1', 'Toscana'), ('1', 'Toskent Shahri'), ('1', 'Tripoli'), ('1', 'Tucumán'), ('1', 'Tula'), ('1', 'Tunis'), ('1', 'Tver'), ('1', 'Tšuvassia'), ('1', 'Udmurtia'), ('1', 'Ulaanbaatar'), ('1', 'Uljanovsk'), ('1', 'Valencia'), ('1', 'Valle'), ('1', 'Viangchan'), ('1', 'Victoria'), ('1', 'Vilna'), ('1', 'Vinnytsja'), ('1', 'Virginia'), ('1', 'Volgograd'), ('1', 'Voronez'), ('1', 'Wakayama'), ('1', 'Washington'), ('1', 'West Australia'), ('1', 'West Azerbaidzan'), ('1', 'West Götanmaan län'), ('1', 'West Kasai'), ('1', 'Western Cape'), ('1', 'Western Mindanao'), ('1', 'Wielkopolskie'), ('1', 'Wien'), ('1', 'Wilayah Persekutuan'), ('1', 'Wisconsin'), ('1', 'Xinxiang'), ('1', 'Yerevan'), ('1', 'Yogyakarta'), ('1', 'Yucatán'), ('1', 'Yunnan'), ('1', 'Zachodnio-Pomorskie'), ('1', 'Zaporizzja'), ('1', 'Zulia'), ('1', 'al-Daqahliya'), ('1', 'al-Qalyubiya'), ('1', 'al-Sharqiya'), ('1', 'al-Sulaymaniya'), ('1', 'al-Tamim'), ('1', 'al-Zarqa'), ('1', 'Île-de-France'), ('1', '–'), ('11', 'Punjab'), ('12', 'Buenos Aires'), ('12', 'Liaoning'), ('12', 'National Capital Reg'), ('12', 'Uttar Pradesh'), ('13', 'Maharashtra'), ('13', 'São Paulo'), ('2', 'Aichi'), ('2', 'Alberta'), ('2', 'Andalusia'), ('2', 'Bahia'), ('2', 'Baijeri'), ('2', 'Bolívar'), ('2', 'Cap-Vert'), ('2', 'Central'), ('2', 'Central Java'), ('2', 'Chhatisgarh'), ('2', 'Chihuahua'), ('2', 'Coahuila de Zaragoza'), ('2', 'Colorado'), ('2', 'Dnipropetrovsk'), ('2', 'East Java'), ('2', 'Florida'), ('2', 'Fujian'), ('2', 'Fukuoka'), ('2', 'Guizhou'), ('2', 'Hiroshima'), ('2', 'Hokkaido'), ('2', 'Jharkhand'), ('2', 'Jiangxi'), ('2', 'Kemerovo'), ('2', 'Krasnodar'), ('2', 'La Paz'), ('2', 'Lisboa'), ('2', 'Maputo'), ('2', 'Ohio'), ('2', 'Okayama'), ('2', 'Oklahoma'), ('2', 'Orissa'), ('2', 'Paraná'), ('2', 'Paraíba'), ('2', 'Pará'), ('2', 'Rabat-Salé-Zammour-Z'), ('2', 'Saksi'), ('2', 'Samara'), ('2', 'Santa Fé'), ('2', 'Scotland'), ('2', 'Shaanxi'), ('2', 'Shaba'), ('2', 'Shizuoka'), ('2', 'Sindh'), ('2', 'Sonora'), ('2', 'Southern Mindanao'), ('2', 'Southern Tagalog'), ('2', 'Sverdlovsk'), ('2', 'Tamaulipas'), ('2', 'Tatarstan'), ('2', 'Teheran'), ('2', 'Tennessee'), ('2', 'Tšeljabinsk'), ('2', 'Veracruz'), ('2', 'Western'), ('2', 'Western Visayas'), ('2', 'Zuid-Holland'), ('2', 'al-Gharbiya'), ('3', 'Arizona'), ('3', 'Baja California'), ('3', 'Donetsk'), ('3', 'Guanajuato'), ('3', 'Guangxi'), ('3', 'Inner Mongolia'), ('3', 'Jalisco'), ('3', 'Karnataka'), ('3', 'Kerala'), ('3', 'Khartum'), ('3', 'Kyongsangnam'), ('3', 'Mekka'), ('3', 'Nuevo León'), ('3', 'Pernambuco'), ('3', 'Saitama'), ('3', 'Santiago'), ('3', 'Shanxi'), ('3', 'Sichuan'), ('3', 'Sinaloa'), ('3', 'Tokyo-to'), ('3', 'West Bengali'), ('3', 'Zhejiang'), ('4', 'Chiba'), ('4', 'Distrito Federal'), ('4', 'Guangdong'), ('4', 'Hubei'), ('4', 'Hunan'), ('4', 'Hyogo'), ('4', 'Jilin'), ('4', 'KwaZulu-Natal'), ('4', 'Minas Gerais'), ('4', 'Ontario'), ('4', 'West Java'), ('5', 'Andhra Pradesh'), ('5', 'Anhui'), ('5', 'Gujarat'), ('5', 'Kanagawa'), ('5', 'Madhya Pradesh'), ('5', 'Oyo & Osun'), ('5', 'Rajasthan'), ('5', 'Taipei'), ('5', 'Tamil Nadu'), ('6', 'Hebei'), ('6', 'Osaka'), ('6', 'Texas'), ('7', 'England'), ('7', 'Gauteng'), ('7', 'Henan'), ('7', 'Jiangsu'), ('7', 'Kyonggi'), ('7', 'Nordrhein-Westfalen'), ('7', 'Shandong'), ('8', 'California'), ('8', 'Rio de Janeiro'), ('9', 'Heilongjiang'), ('9', 'México')] != [('', '4'), ('Abidjan', '1'), ('Abu Dhabi', '2'), ('Adana', '3'), ('Addis Abeba', '1'), ('Aden', '1'), ('Aguascalientes', '1'), ('Ahal', '1'), ('Aichi', '15'), ('Alabama', '4'), ('Alagoas', '2'), ('Alberta', '2'), ('Aleksandria', '1'), ('Aleppo', '1'), ('Alger', '1'), ('Almaty Qalasy', '1'), ('Alsace', '2'), ('Altai', '3'), ('Amazonas', '1'), ('Amman', '2'), ('Anambra & Enugu & Eb', '3'), ('Andalusia', '12'), ('Andhra Pradesh', '35'), ('Anhalt Sachsen', '2'), ('Anhui', '16'), ('Ankara', '1'), ('Antalya', '2'), ('Antananarivo', '2'), ('Antioquia', '4'), ('Antofagasta', '2'), ('Antwerpen', '1'), ('Anzoátegui', '4'), ('Aomori', '3'), ('Apulia', '7'), ('Aragonia', '1'), ('Aragua', '3'), ('Arequipa', '1'), ('Ariana', '2'), ('Arizona', '9'), ('Arkangeli', '2'), ('Ashanti', '1'), ('Assam', '4'), ('Astrahan', '1'), ('Asturia', '2'), ('Asunción', '1'), ('Atlantique', '1'), ('Atlántico', '2'), ('Attika', '4'), ('Auckland', '4'), ('Baden-Württemberg', '10'), ('Baghdad', '1'), ('Bahia', '15'), ('Baijeri', '8'), ('Baja California', '3'), ('Baki', '1'), ('Bali', '1'), ('Baluchistan', '2'), ('Bamako', '1'), ('Banaadir', '1'), ('Bangkok', '1'), ('Bangui', '1'), ('Baskimaa', '4'), ('Basra', '1'), ('Bauchi & Gombe', '3'), ('Baškortostan', '5'), ('Beirut', '1'), ('Belgorod', '2'), ('Bengasi', '1'), ('Berliini', '1'), ('Bicol', '6'), ('Bihar', '13'), ('Bishkek shaary', '1'), ('Blantyre', '1'), ('Bolívar', '3'), ('Bratislava', '1'), ('Brazzaville', '1'), ('Bremen', '2'), ('Brest', '3'), ('British Colombia', '9'), ('Brjansk', '1'), ('Budapest', '1'), ('Buenos Aires', '31'), ('Bukarest', '1'), ('Bulawayo', '1'), ('Burjatia', '1'), ('Bursa', '2'), ('Bíobío', '6'), ('Cagayan Valley', '4'), ('California', '68'), ('Callao', '2'), ('Campania', '4'), ('Campeche', '2'), ('Canary Islands', '3'), ('Cap-Vert', '3'), ('Carabobo', '3'), ('Caraga', '4'), ('Casablanca', '2'), ('Castilla and León', '4'), ('Ceará', '6'), ('Central', '11'), ('Central Java', '11'), ('Central Luzon', '22'), ('Central Macedonia', '1'), ('Central Mindanao', '5'), ('Central Serbia', '3'), ('Central Visayas', '8'), ('Centre', '3'), ('Chandigarh', '1'), ('Changhwa', '2'), ('Chari-Baguirmi', '1'), ('Chhatisgarh', '7'), ('Chiapas', '6'), ('Chiba', '19'), ('Chihuahua', '5'), ('Chisinau', '1'), ('Chittagong', '3'), ('Chollabuk', '6'), ('Chollanam', '5'), ('Chongqing', '1'), ('Chungchongbuk', '3'), ('Chungchongnam', '6'), ('Coahuila de Zaragoza', '6'), ('Coast', '1'), ('Cochabamba', '1'), ('Colima', '3'), ('Colorado', '9'), ('Conakry', '1'), ('Connecticut', '5'), ('Constantine', '1'), ('Copperbelt', '5'), ('Coquimbo', '3'), ('Cortés', '1'), ('Cundinamarca', '2'), ('Córdoba', '3'), ('Dagestan', '2'), ('Damascus', '1'), ('Dar es Salaam', '1'), ('Delhi', '3'), ('Dhaka', '8'), ('District of Columbia', '1'), ('Distrito Central', '1'), ('Distrito Federal', '5'), ('Distrito Nacional', '1'), ('Diyarbakir', '2'), ('Djibouti', '1'), ('Dnipropetrovsk', '5'), ('Doha', '1'), ('Dolnoslaskie', '4'), ('Donetsk', '8'), ('Doukkala-Abda', '2'), ('Dubai', '1'), ('Durango', '3'), ('East Azerbaidzan', '3'), ('East Java', '13'), ('East Kasai', '2'), ('East Kazakstan', '2'), ('Eastern', '3'), ('Eastern Cape', '4'), ('Eastern Visayas', '4'), ('Edo & Delta', '3'), ('Ehime', '3'), ('Emilia-Romagna', '10'), ('England', '71'), ('Esfahan', '5'), ('Eskisehir', '1'), ('Espírito Santo', '7'), ('Estuaire', '1'), ('Falcón', '2'), ('Fargona', '3'), ('Fars', '3'), ('Federaatio', '2'), ('Florida', '15'), ('Free State', '3'), ('Fujian', '12'), ('Fukuoka', '5'), ('Fukushima', '4'), ('Fès-Boulemane', '1'), ('Galicia', '4'), ('Gansu', '7'), ('Gauteng', '21'), ('Gaza', '2'), ('Gaziantep', '1'), ('Gelderland', '4'), ('Georgia', '6'), ('Gifu', '4'), ('Gilan', '2'), ('Giza', '4'), ('Goiás', '6'), ('Gomel', '2'), ('Grad Sofija', '1'), ('Grad Zagreb', '1'), ('Greater Accra', '2'), ('Grodno', '2'), ('Guanajuato', '15'), ('Guangdong', '20'), ('Guangxi', '9'), ('Guatemala', '3'), ('Guayas', '3'), ('Guerrero', '6'), ('Guizhou', '6'), ('Gujarat', '21'), ('Gumma', '5'), ('Ha Darom', '3'), ('Ha Merkaz', '4'), ('Habarovsk', '2'), ('Hainan', '2'), ('Haiphong', '1'), ('Hamadan', '2'), ('Hamburg', '1'), ('Hamgyong N', '1'), ('Hamgyong P', '2'), ('Hanoi', '1'), ('Hanti-Mansia', '3'), ('Harare', '3'), ('Harjumaa', '1'), ('Harkova', '1'), ('Haryana', '12'), ('Haute-Zaïre', '1'), ('Hawaii', '1'), ('Hebei', '12'), ('Heilongjiang', '21'), ('Henan', '18'), ('Herson', '1'), ('Hessen', '5'), ('Hidalgo', '3'), ('Hims', '1'), ('Hiroshima', '5'), ('Hlavní mesto Praha', '1'), ('Hmelnytskyi', '2'), ('Ho Chi Minh City', '1'), ('Hokkaido', '10'), ('Hongkong', '1'), ('Horad Minsk', '1'), ('Hsinchu', '1'), ('Hubei', '22'), ('Hunan', '18'), ('Hyogo', '11'), ('Ibaragi', '5'), ('Illinois', '8'), ('Ilocos', '7'), ('Inchon', '1'), ('Indiana', '5'), ('Inner Mongolia', '13'), ('Iowa', '3'), ('Irbil', '1'), ('Irkutsk', '5'), ('Ishikawa', '2'), ('Islamabad', '1'), ('Istanbul', '2'), ('Ivanovo', '2'), ('Izmir', '1'), ('Içel', '1'), ('Jakarta Raya', '1'), ('Jalisco', '8'), ('Jambi', '1'), ('Jammu and Kashmir', '2'), ('Jaroslavl', '2'), ('Jerusalem', '1'), ('Jharkhand', '8'), ('Jiangsu', '25'), ('Jiangxi', '11'), ('Jilin', '20'), ('Jizní Morava', '1'), ('Kabol', '1'), ('Kadiogo', '1'), ('Kaduna', '2'), ('Kagoshima', '1'), ('Kairo', '1'), ('Kalimantan Barat', '1'), ('Kalimantan Selatan', '1'), ('Kalimantan Timur', '2'), ('Kaliningrad', '1'), ('Kaluga', '2'), ('Kanagawa', '15'), ('Kang-won', '4'), ('Kano & Jigawa', '1'), ('Kansas', '4'), ('Kaohsiung', '3'), ('Karnataka', '17'), ('Karotegin', '1'), ('Katalonia', '9'), ('Kaunas', '1'), ('Kayseri', '1'), ('Keelung', '1'), ('Kemerovo', '7'), ('Kentucky', '2'), ('Kerala', '7'), ('Kerman', '3'), ('Kermanshah', '1'), ('Khartum', '3'), ('Khorasan', '6'), ('Khulna', '2'), ('Khuzestan', '6'), ('Kinshasa', '1'), ('Kiova', '3'), ('Kirov', '2'), ('Kirovograd', '2'), ('Kocaeli', '2'), ('Komi', '3'), ('Konya', '1'), ('Kordestan', '2'), ('Kouilou', '1'), ('Kowloon and New Kowl', '1'), ('Krasnodar', '4'), ('Krasnojarsk', '5'), ('Krim', '4'), ('Kujawsko-Pomorskie', '4'), ('Kumamoto', '2'), ('Kurgan', '1'), ('Kursk', '2'), ('KwaZulu-Natal', '8'), ('Kwangju', '1'), ('Kwara & Kogi', '2'), ('Kyonggi', '18'), ('Kyongsangbuk', '10'), ('Kyongsangnam', '11'), ('Kyoto', '4'), ('København', '1'), ('La Habana', '1'), ('La Libertad', '2'), ('La Paz', '2'), ('Lagos', '6'), ('Lambayeque', '1'), ('Lampung', '1'), ('Languedoc-Roussillon', '3'), ('Lara', '1'), ('Latium', '2'), ('Leinster', '1'), ('Liaoning', '21'), ('Liguria', '2'), ('Lilongwe', '1'), ('Lima', '1'), ('Lipetsk', '2'), ('Lisboa', '3'), ('Littoral', '2'), ('Lodzkie', '1'), ('Lombardia', '4'), ('Lorestan', '2'), ('Loreto', '1'), ('Los Lagos', '3'), ('Louisiana', '5'), ('Luanda', '1'), ('Lubelskie', '1'), ('Lugansk', '6'), ('Lusaka', '1'), ('Luxor', '1'), ('Lviv', '1'), ('Macau', '1'), ('Madhya Pradesh', '21'), ('Madrid', '8'), ('Maekel', '1'), ('Magdalena', '1'), ('Maharashtra', '35'), ('Malopolskie', '2'), ('Managua', '1'), ('Mandalay', '3'), ('Manitoba', '1'), ('Maputo', '2'), ('Maranhão', '7'), ('Maritime', '1'), ('Markazi', '1'), ('Marrakech-Tensift-Al', '1'), ('Maryland', '1'), ('Massachusetts', '8'), ('Mato Grosso', '3'), ('Mato Grosso do Sul', '3'), ('Mazandaran', '5'), ('Mazowieckie', '3'), ('Medina', '2'), ('Mekka', '4'), ('Meknès-Tafilalet', '1'), ('Mendoza', '5'), ('Michigan', '8'), ('Michoacán de Ocampo', '7'), ('Midi-Pyrénées', '1'), ('Mie', '6'), ('Minas Gerais', '27'), ('Minnesota', '2'), ('Miranda', '6'), ('Missouri', '4'), ('Miyagi', '2'), ('Miyazaki', '3'), ('Mogiljov', '2'), ('Montevideo', '1'), ('Montserrado', '1'), ('Morelos', '4'), ('Moscow (City)', '2'), ('Moskova', '18'), ('Murcia', '2'), ('Murmansk', '1'), ('Mykolajiv', '1'), ('México', '27'), ('Nagano', '4'), ('Nagasaki', '3'), ('Nairobi', '1'), ('Namangan', '1'), ('Nampo-si', '1'), ('Nampula', '2'), ('Nara', '4'), ('National Capital Reg', '16'), ('Nayarit', '2'), ('Nebraska', '2'), ('Nevada', '6'), ('New Jersey', '4'), ('New Mexico', '1'), ('New South Wales', '4'), ('New York', '6'), ('Newmaa', '3'), ('Niamey', '1'), ('Niedersachsen', '8'), ('Niigata', '4'), ('Ninawa', '1'), ('Ningxia', '2'), ('Nizni Novgorod', '3'), ('Nonthaburi', '2'), ('Noord-Brabant', '4'), ('Noord-Holland', '5'), ('Nord-Pas-de-Calais', '3'), ('Nordrhein-Westfalen', '37'), ('Norte de Santander', '1'), ('North Carolina', '7'), ('North West', '3'), ('Northern Mindanao', '5'), ('Nothwest Border Prov', '7'), ('Nouakchott', '1'), ('Novosibirsk', '1'), ('Nuevo León', '7'), ('Oaxaca', '2'), ('Odesa', '2'), ('Ogun', '3'), ('Ohio', '6'), ('Oita', '2'), ('Okayama', '3'), ('Okinawa', '3'), ('Oklahoma', '3'), ('Omsk', '1'), ('Ondo & Ekiti', '9'), ('Ontario', '27'), ('Oran', '1'), ('Oregon', '3'), ('Orenburg', '3'), ('Oriental', '2'), ('Orissa', '7'), ('Osaka', '22'), ('Oslo', '1'), ('Ouest', '4'), ('Oyo & Osun', '18'), ('Panamá', '1'), ('Paraná', '14'), ('Paraíba', '4'), ('Pará', '8'), ('Pavlodar', '2'), ('Pays de la Loire', '3'), ('Peking', '2'), ('Pennsylvania', '4'), ('Penza', '2'), ('Perak', '2'), ('Perm', '4'), ('Pernambuco', '11'), ('Phnom Penh', '1'), ('Piauí', '2'), ('Pichincha', '2'), ('Piemonte', '3'), ('Pietari', '3'), ('Piura', '3'), ('Pomorskie', '3'), ('Port Said', '1'), ('Portuguesa', '3'), ('Primorje', '3'), ('Provence-Alpes-Côte', '4'), ('Puebla', '5'), ('Pultava', '2'), ('Punjab', '47'), ('Pusan', '1'), ('Pyongyang-si', '1'), ('Qaraghandy', '3'), ('Qinghai', '1'), ('Qom', '2'), ('Quang Nam-Da Nang', '1'), ('Queensland', '4'), ('Querétaro de Arteaga', '1'), ('Quintana Roo', '2'), ('Québec', '5'), ('Rabat-Salé-Zammour-Z', '3'), ('Rajasthan', '14'), ('Rajshahi', '9'), ('Rangoon [Yangon]', '1'), ('Rheinland-Pfalz', '5'), ('Rhône-Alpes', '4'), ('Riau', '3'), ('Riika', '1'), ('Rio Grande do Norte', '3'), ('Rio Grande do Sul', '20'), ('Rio de Janeiro', '22'), ('Risaralda', '2'), ('Rivers & Bayelsa', '1'), ('Riyadh', '1'), ('Rjazan', '1'), ('Rondônia', '2'), ('Rostov-na-Donu', '7'), ('Saitama', '21'), ('Saksi', '4'), ('Salta', '1'), ('Samara', '4'), ('Samarkand', '1'), ('San Juan', '2'), ('San Luis Potosí', '3'), ('San Salvador', '4'), ('Sanaa', '1'), ('Sanliurfa', '2'), ('Santa Catarina', '10'), ('Santa Cruz', '1'), ('Santa Fé', '2'), ('Santafé de Bogotá', '1'), ('Santander', '4'), ('Santiago', '5'), ('Santiago de Cuba', '1'), ('Saratov', '4'), ('Saskatchewan', '2'), ('Schleswig-Holstein', '2'), ('Scotland', '4'), ('Selangor', '4'), ('Seoul', '1'), ('Sergipe', '2'), ('Severní Morava', '2'), ('Shaanxi', '8'), ('Shaba', '4'), ('Shandong', '32'), ('Shanghai', '1'), ('Shanxi', '9'), ('Shiga', '3'), ('Shizuoka', '9'), ('Sichuan', '21'), ('Sinaloa', '6'), ('Sind', '7'), ('Sindh', '4'), ('Sisilia', '4'), ('Sistan va Baluchesta', '2'), ('Skopje', '1'), ('Skåne län', '3'), ('Slaskie', '14'), ('Smolensk', '1'), ('Sofala', '1'), ('Sokoto & Kebbi & Zam', '2'), ('Sonora', '6'), ('South Australia', '1'), ('South Kazakstan', '1'), ('Southern Mindanao', '10'), ('Southern Tagalog', '31'), ('Stavropol', '5'), ('Sucre', '3'), ('Suez', '1'), ('Sulawesi Selatan', '1'), ('Sulawesi Utara', '2'), ('Sumatera Barat', '1'), ('Sumatera Selatan', '2'), ('Sumatera Utara', '7'), ('Sumy', '3'), ('Sverdlovsk', '6'), ('São Paulo', '69'), ('Tabasco', '6'), ('Taegu', '1'), ('Taejon', '1'), ('Taichung', '3'), ('Tainan', '2'), ('Taipei', '13'), ('Tamaulipas', '9'), ('Tambov', '2'), ('Tamil Nadu', '28'), ('Tanger-Tétouan', '4'), ('Taoyuan', '5'), ('Tarapacá', '2'), ('Tatarstan', '6'), ('Tbilisi', '1'), ('Teheran', '6'), ('Tel Aviv', '5'), ('Tennessee', '5'), ('Texas', '26'), ('Thiès', '2'), ('Thüringen', '3'), ('Tianjin', '1'), ('Tjumen', '2'), ('Tochigi', '4'), ('Tokyo-to', '18'), ('Tolima', '1'), ('Tomsk', '2'), ('Toscana', '5'), ('Toskent', '3'), ('Toskent Shahri', '1'), ('Toyama', '2'), ('Tripoli', '1'), ('Tucumán', '1'), ('Tula', '2'), ('Tunis', '1'), ('Tver', '1'), ('Tšeljabinsk', '4'), ('Tšerkasy', '2'), ('Tšuvassia', '2'), ('Udmurtia', '4'), ('Ulaanbaatar', '1'), ('Uljanovsk', '2'), ('Utah', '4'), ('Utrecht', '2'), ('Uttar Pradesh', '43'), ('Uttaranchal', '3'), ('Valencia', '4'), ('Valle', '6'), ('Valparaíso', '3'), ('Varna', '3'), ('Veneto', '4'), ('Veracruz', '16'), ('Viangchan', '1'), ('Victoria', '2'), ('Vilna', '1'), ('Vinnytsja', '1'), ('Virginia', '10'), ('Vitebsk', '3'), ('Vladimir', '3'), ('Volgograd', '3'), ('Vologda', '2'), ('Voronez', '1'), ('Wakayama', '1'), ('Wales', '3'), ('Washington', '5'), ('West Australia', '1'), ('West Azerbaidzan', '5'), ('West Bengali', '46'), ('West Götanmaan län', '2'), ('West Java', '25'), ('West Kasai', '2'), ('Western', '8'), ('Western Cape', '3'), ('Western Mindanao', '3'), ('Western Visayas', '9'), ('Wielkopolskie', '2'), ('Wien', '1'), ('Wilayah Persekutuan', '1'), ('Wisconsin', '4'), ('Xinxiang', '10'), ('Yamagata', '4'), ('Yamaguchi', '6'), ('Yerevan', '1'), ('Yogyakarta', '2'), ('Yucatán', '1'), ('Yunnan', '5'), ('Zacatecas', '3'), ('Zachodnio-Pomorskie', '2'), ('Zambézia', '3'), ('Zaporizzja', '3'), ('Zhejiang', '16'), ('Zuid-Holland', '6'), ('Zulia', '3'), ('Zytomyr', '2'), ('al-Buhayra', '2'), ('al-Daqahliya', '3'), ('al-Gharbiya', '2'), ('al-Qalyubiya', '4'), ('al-Sharqiya', '10'), ('al-Sulaymaniya', '1'), ('al-Tamim', '1'), ('al-Zarqa', '2'), ('Île-de-France', '4'), ('–', '18')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city GROUP BY District HAVING AVG(Population) > (SELECT AVG(Population) FROM city)","Not match: [('1', 'Abidjan'), ('1', 'Abu Dhabi'), ('1', 'Adana'), ('1', 'Addis Abeba'), ('1', 'Aden'), ('1', 'Aguascalientes'), ('1', 'Ahal'), ('1', 'Alagoas'), ('1', 'Aleksandria'), ('1', 'Aleppo'), ('1', 'Alger'), ('1', 'Almaty Qalasy'), ('1', 'Altai'), ('1', 'Amazonas'), ('1', 'Amman'), ('1', 'Anambra & Enugu & Eb'), ('1', 'Ankara'), ('1', 'Antalya'), ('1', 'Antananarivo'), ('1', 'Antioquia'), ('1', 'Antwerpen'), ('1', 'Aragonia'), ('1', 'Aragua'), ('1', 'Arequipa'), ('1', 'Arkangeli'), ('1', 'Ashanti'), ('1', 'Assam'), ('1', 'Astrahan'), ('1', 'Asunción'), ('1', 'Atlantique'), ('1', 'Atlántico'), ('1', 'Attika'), ('1', 'Auckland'), ('1', 'Baden-Württemberg'), ('1', 'Baghdad'), ('1', 'Baki'), ('1', 'Bali'), ('1', 'Baluchistan'), ('1', 'Bamako'), ('1', 'Banaadir'), ('1', 'Bangkok'), ('1', 'Bangui'), ('1', 'Baskimaa'), ('1', 'Basra'), ('1', 'Baškortostan'), ('1', 'Beirut'), ('1', 'Bengasi'), ('1', 'Berliini'), ('1', 'Bihar'), ('1', 'Bishkek shaary'), ('1', 'Blantyre'), ('1', 'Bratislava'), ('1', 'Brazzaville'), ('1', 'Bremen'), ('1', 'British Colombia'), ('1', 'Brjansk'), ('1', 'Budapest'), ('1', 'Bukarest'), ('1', 'Bulawayo'), ('1', 'Burjatia'), ('1', 'Bursa'), ('1', 'Callao'), ('1', 'Campania'), ('1', 'Canary Islands'), ('1', 'Carabobo'), ('1', 'Casablanca'), ('1', 'Ceará'), ('1', 'Central Macedonia'), ('1', 'Central Serbia'), ('1', 'Central Visayas'), ('1', 'Centre'), ('1', 'Chandigarh'), ('1', 'Chari-Baguirmi'), ('1', 'Chiapas'), ('1', 'Chisinau'), ('1', 'Chittagong'), ('1', 'Chollabuk'), ('1', 'Chongqing'), ('1', 'Chungchongbuk'), ('1', 'Coast'), ('1', 'Cochabamba'), ('1', 'Conakry'), ('1', 'Constantine'), ('1', 'Cortés'), ('1', 'Córdoba'), ('1', 'Damascus'), ('1', 'Dar es Salaam'), ('1', 'Delhi'), ('1', 'Dhaka'), ('1', 'District of Columbia'), ('1', 'Distrito Central'), ('1', 'Distrito Nacional'), ('1', 'Diyarbakir'), ('1', 'Djibouti'), ('1', 'Doha'), ('1', 'Dolnoslaskie'), ('1', 'Dubai'), ('1', 'Durango'), ('1', 'East Azerbaidzan'), ('1', 'East Kasai'), ('1', 'Eastern Cape'), ('1', 'Ehime'), ('1', 'Emilia-Romagna'), ('1', 'Esfahan'), ('1', 'Eskisehir'), ('1', 'Estuaire'), ('1', 'Fars'), ('1', 'Federaatio'), ('1', 'Fukushima'), ('1', 'Fès-Boulemane'), ('1', 'Gansu'), ('1', 'Gaza'), ('1', 'Gaziantep'), ('1', 'Georgia'), ('1', 'Gifu'), ('1', 'Gilan'), ('1', 'Giza'), ('1', 'Goiás'), ('1', 'Gomel'), ('1', 'Grad Sofija'), ('1', 'Grad Zagreb'), ('1', 'Greater Accra'), ('1', 'Guatemala'), ('1', 'Guayas'), ('1', 'Guerrero'), ('1', 'Habarovsk'), ('1', 'Hainan'), ('1', 'Haiphong'), ('1', 'Hamadan'), ('1', 'Hamburg'), ('1', 'Hamgyong N'), ('1', 'Hamgyong P'), ('1', 'Hanoi'), ('1', 'Harare'), ('1', 'Harjumaa'), ('1', 'Harkova'), ('1', 'Haryana'), ('1', 'Haute-Zaïre'), ('1', 'Hawaii'), ('1', 'Herson'), ('1', 'Hessen'), ('1', 'Hims'), ('1', 'Hlavní mesto Praha'), ('1', 'Ho Chi Minh City'), ('1', 'Hongkong'), ('1', 'Horad Minsk'), ('1', 'Hsinchu'), ('1', 'Illinois'), ('1', 'Inchon'), ('1', 'Indiana'), ('1', 'Irbil'), ('1', 'Irkutsk'), ('1', 'Ishikawa'), ('1', 'Islamabad'), ('1', 'Istanbul'), ('1', 'Ivanovo'), ('1', 'Izmir'), ('1', 'Içel'), ('1', 'Jakarta Raya'), ('1', 'Jambi'), ('1', 'Jammu and Kashmir'), ('1', 'Jaroslavl'), ('1', 'Jerusalem'), ('1', 'Jizní Morava'), ('1', 'Kabol'), ('1', 'Kadiogo'), ('1', 'Kaduna'), ('1', 'Kagoshima'), ('1', 'Kairo'), ('1', 'Kalimantan Barat'), ('1', 'Kalimantan Selatan'), ('1', 'Kalimantan Timur'), ('1', 'Kaliningrad'), ('1', 'Kano & Jigawa'), ('1', 'Kaohsiung'), ('1', 'Karotegin'), ('1', 'Katalonia'), ('1', 'Kaunas'), ('1', 'Kayseri'), ('1', 'Keelung'), ('1', 'Kerman'), ('1', 'Kermanshah'), ('1', 'Khorasan'), ('1', 'Khulna'), ('1', 'Khuzestan'), ('1', 'Kinshasa'), ('1', 'Kiova'), ('1', 'Kirov'), ('1', 'Konya'), ('1', 'Kouilou'), ('1', 'Kowloon and New Kowl'), ('1', 'Krasnojarsk'), ('1', 'Kujawsko-Pomorskie'), ('1', 'Kumamoto'), ('1', 'Kurgan'), ('1', 'Kursk'), ('1', 'Kwangju'), ('1', 'Kwara & Kogi'), ('1', 'Kyongsangbuk'), ('1', 'Kyoto'), ('1', 'København'), ('1', 'La Habana'), ('1', 'La Libertad'), ('1', 'Lagos'), ('1', 'Lambayeque'), ('1', 'Lampung'), ('1', 'Lara'), ('1', 'Latium'), ('1', 'Leinster'), ('1', 'Liguria'), ('1', 'Lilongwe'), ('1', 'Lima'), ('1', 'Lipetsk'), ('1', 'Littoral'), ('1', 'Lodzkie'), ('1', 'Lombardia'), ('1', 'Loreto'), ('1', 'Louisiana'), ('1', 'Luanda'), ('1', 'Lubelskie'), ('1', 'Lugansk'), ('1', 'Lusaka'), ('1', 'Luxor'), ('1', 'Lviv'), ('1', 'Macau'), ('1', 'Madrid'), ('1', 'Maekel'), ('1', 'Magdalena'), ('1', 'Malopolskie'), ('1', 'Managua'), ('1', 'Mandalay'), ('1', 'Manitoba'), ('1', 'Maranhão'), ('1', 'Maritime'), ('1', 'Markazi'), ('1', 'Marrakech-Tensift-Al'), ('1', 'Maryland'), ('1', 'Massachusetts'), ('1', 'Mato Grosso'), ('1', 'Mato Grosso do Sul'), ('1', 'Mazowieckie'), ('1', 'Medina'), ('1', 'Meknès-Tafilalet'), ('1', 'Michigan'), ('1', 'Michoacán de Ocampo'), ('1', 'Midi-Pyrénées'), ('1', 'Minnesota'), ('1', 'Miranda'), ('1', 'Missouri'), ('1', 'Miyagi'), ('1', 'Mogiljov'), ('1', 'Montevideo'), ('1', 'Montserrado'), ('1', 'Moscow (City)'), ('1', 'Murcia'), ('1', 'Murmansk'), ('1', 'Mykolajiv'), ('1', 'Nagano'), ('1', 'Nagasaki'), ('1', 'Nairobi'), ('1', 'Namangan'), ('1', 'Nampo-si'), ('1', 'Nara'), ('1', 'Nebraska'), ('1', 'Nevada'), ('1', 'New Mexico'), ('1', 'New South Wales'), ('1', 'New York'), ('1', 'Newmaa'), ('1', 'Niamey'), ('1', 'Niedersachsen'), ('1', 'Niigata'), ('1', 'Ninawa'), ('1', 'Ningxia'), ('1', 'Nizni Novgorod'), ('1', 'Noord-Holland'), ('1', 'Norte de Santander'), ('1', 'North Carolina'), ('1', 'Northern Mindanao'), ('1', 'Nothwest Border Prov'), ('1', 'Nouakchott'), ('1', 'Novosibirsk'), ('1', 'Odesa'), ('1', 'Ogun'), ('1', 'Oita'), ('1', 'Omsk'), ('1', 'Ondo & Ekiti'), ('1', 'Oran'), ('1', 'Oregon'), ('1', 'Orenburg'), ('1', 'Oriental'), ('1', 'Oslo'), ('1', 'Ouest'), ('1', 'Panamá'), ('1', 'Peking'), ('1', 'Pennsylvania'), ('1', 'Penza'), ('1', 'Perak'), ('1', 'Perm'), ('1', 'Phnom Penh'), ('1', 'Piauí'), ('1', 'Pichincha'), ('1', 'Piemonte'), ('1', 'Pietari'), ('1', 'Pomorskie'), ('1', 'Port Said'), ('1', 'Primorje'), ('1', 'Provence-Alpes-Côte'), ('1', 'Puebla'), ('1', 'Pusan'), ('1', 'Pyongyang-si'), ('1', 'Qaraghandy'), ('1', 'Qinghai'), ('1', 'Qom'), ('1', 'Quang Nam-Da Nang'), ('1', 'Queensland'), ('1', 'Querétaro de Arteaga'), ('1', 'Quintana Roo'), ('1', 'Québec'), ('1', 'Rangoon [Yangon]'), ('1', 'Rhône-Alpes'), ('1', 'Riau'), ('1', 'Riika'), ('1', 'Rio Grande do Norte'), ('1', 'Rio Grande do Sul'), ('1', 'Risaralda'), ('1', 'Rivers & Bayelsa'), ('1', 'Riyadh'), ('1', 'Rjazan'), ('1', 'Rostov-na-Donu'), ('1', 'Salta'), ('1', 'Samarkand'), ('1', 'San Juan'), ('1', 'San Luis Potosí'), ('1', 'San Salvador'), ('1', 'Sanaa'), ('1', 'Sanliurfa'), ('1', 'Santa Catarina'), ('1', 'Santa Cruz'), ('1', 'Santafé de Bogotá'), ('1', 'Santander'), ('1', 'Santiago de Cuba'), ('1', 'Saratov'), ('1', 'Seoul'), ('1', 'Sergipe'), ('1', 'Shanghai'), ('1', 'Sisilia'), ('1', 'Sistan va Baluchesta'), ('1', 'Skopje'), ('1', 'Smolensk'), ('1', 'Sofala'), ('1', 'South Australia'), ('1', 'South Kazakstan'), ('1', 'Suez'), ('1', 'Sulawesi Selatan'), ('1', 'Sumatera Barat'), ('1', 'Sumatera Selatan'), ('1', 'Sumatera Utara'), ('1', 'Tabasco'), ('1', 'Taegu'), ('1', 'Taejon'), ('1', 'Taichung'), ('1', 'Tainan'), ('1', 'Tanger-Tétouan'), ('1', 'Tbilisi'), ('1', 'Tianjin'), ('1', 'Tjumen'), ('1', 'Tochigi'), ('1', 'Tolima'), ('1', 'Tomsk'), ('1', 'Toscana'), ('1', 'Toskent Shahri'), ('1', 'Tripoli'), ('1', 'Tucumán'), ('1', 'Tula'), ('1', 'Tunis'), ('1', 'Tver'), ('1', 'Tšuvassia'), ('1', 'Udmurtia'), ('1', 'Ulaanbaatar'), ('1', 'Uljanovsk'), ('1', 'Valencia'), ('1', 'Valle'), ('1', 'Viangchan'), ('1', 'Victoria'), ('1', 'Vilna'), ('1', 'Vinnytsja'), ('1', 'Virginia'), ('1', 'Volgograd'), ('1', 'Voronez'), ('1', 'Wakayama'), ('1', 'Washington'), ('1', 'West Australia'), ('1', 'West Azerbaidzan'), ('1', 'West Götanmaan län'), ('1', 'West Kasai'), ('1', 'Western Cape'), ('1', 'Western Mindanao'), ('1', 'Wielkopolskie'), ('1', 'Wien'), ('1', 'Wilayah Persekutuan'), ('1', 'Wisconsin'), ('1', 'Xinxiang'), ('1', 'Yerevan'), ('1', 'Yogyakarta'), ('1', 'Yucatán'), ('1', 'Yunnan'), ('1', 'Zachodnio-Pomorskie'), ('1', 'Zaporizzja'), ('1', 'Zulia'), ('1', 'al-Daqahliya'), ('1', 'al-Qalyubiya'), ('1', 'al-Sharqiya'), ('1', 'al-Sulaymaniya'), ('1', 'al-Tamim'), ('1', 'al-Zarqa'), ('1', 'Île-de-France'), ('1', '–'), ('11', 'Punjab'), ('12', 'Buenos Aires'), ('12', 'Liaoning'), ('12', 'National Capital Reg'), ('12', 'Uttar Pradesh'), ('13', 'Maharashtra'), ('13', 'São Paulo'), ('2', 'Aichi'), ('2', 'Alberta'), ('2', 'Andalusia'), ('2', 'Bahia'), ('2', 'Baijeri'), ('2', 'Bolívar'), ('2', 'Cap-Vert'), ('2', 'Central'), ('2', 'Central Java'), ('2', 'Chhatisgarh'), ('2', 'Chihuahua'), ('2', 'Coahuila de Zaragoza'), ('2', 'Colorado'), ('2', 'Dnipropetrovsk'), ('2', 'East Java'), ('2', 'Florida'), ('2', 'Fujian'), ('2', 'Fukuoka'), ('2', 'Guizhou'), ('2', 'Hiroshima'), ('2', 'Hokkaido'), ('2', 'Jharkhand'), ('2', 'Jiangxi'), ('2', 'Kemerovo'), ('2', 'Krasnodar'), ('2', 'La Paz'), ('2', 'Lisboa'), ('2', 'Maputo'), ('2', 'Ohio'), ('2', 'Okayama'), ('2', 'Oklahoma'), ('2', 'Orissa'), ('2', 'Paraná'), ('2', 'Paraíba'), ('2', 'Pará'), ('2', 'Rabat-Salé-Zammour-Z'), ('2', 'Saksi'), ('2', 'Samara'), ('2', 'Santa Fé'), ('2', 'Scotland'), ('2', 'Shaanxi'), ('2', 'Shaba'), ('2', 'Shizuoka'), ('2', 'Sindh'), ('2', 'Sonora'), ('2', 'Southern Mindanao'), ('2', 'Southern Tagalog'), ('2', 'Sverdlovsk'), ('2', 'Tamaulipas'), ('2', 'Tatarstan'), ('2', 'Teheran'), ('2', 'Tennessee'), ('2', 'Tšeljabinsk'), ('2', 'Veracruz'), ('2', 'Western'), ('2', 'Western Visayas'), ('2', 'Zuid-Holland'), ('2', 'al-Gharbiya'), ('3', 'Arizona'), ('3', 'Baja California'), ('3', 'Donetsk'), ('3', 'Guanajuato'), ('3', 'Guangxi'), ('3', 'Inner Mongolia'), ('3', 'Jalisco'), ('3', 'Karnataka'), ('3', 'Kerala'), ('3', 'Khartum'), ('3', 'Kyongsangnam'), ('3', 'Mekka'), ('3', 'Nuevo León'), ('3', 'Pernambuco'), ('3', 'Saitama'), ('3', 'Santiago'), ('3', 'Shanxi'), ('3', 'Sichuan'), ('3', 'Sinaloa'), ('3', 'Tokyo-to'), ('3', 'West Bengali'), ('3', 'Zhejiang'), ('4', 'Chiba'), ('4', 'Distrito Federal'), ('4', 'Guangdong'), ('4', 'Hubei'), ('4', 'Hunan'), ('4', 'Hyogo'), ('4', 'Jilin'), ('4', 'KwaZulu-Natal'), ('4', 'Minas Gerais'), ('4', 'Ontario'), ('4', 'West Java'), ('5', 'Andhra Pradesh'), ('5', 'Anhui'), ('5', 'Gujarat'), ('5', 'Kanagawa'), ('5', 'Madhya Pradesh'), ('5', 'Oyo & Osun'), ('5', 'Rajasthan'), ('5', 'Taipei'), ('5', 'Tamil Nadu'), ('6', 'Hebei'), ('6', 'Osaka'), ('6', 'Texas'), ('7', 'England'), ('7', 'Gauteng'), ('7', 'Henan'), ('7', 'Jiangsu'), ('7', 'Kyonggi'), ('7', 'Nordrhein-Westfalen'), ('7', 'Shandong'), ('8', 'California'), ('8', 'Rio de Janeiro'), ('9', 'Heilongjiang'), ('9', 'México')] != [('Abidjan', '1'), ('Adana', '3'), ('Addis Abeba', '1'), ('Aden', '1'), ('Aguascalientes', '1'), ('Ahal', '1'), ('Alagoas', '2'), ('Alberta', '2'), ('Aleksandria', '1'), ('Aleppo', '1'), ('Alger', '1'), ('Almaty Qalasy', '1'), ('Amazonas', '1'), ('Amman', '2'), ('Ankara', '1'), ('Antananarivo', '2'), ('Antioquia', '4'), ('Antwerpen', '1'), ('Aragonia', '1'), ('Arequipa', '1'), ('Arizona', '9'), ('Ashanti', '1'), ('Astrahan', '1'), ('Asunción', '1'), ('Atlantique', '1'), ('Atlántico', '2'), ('Baghdad', '1'), ('Baja California', '3'), ('Baki', '1'), ('Bali', '1'), ('Bamako', '1'), ('Banaadir', '1'), ('Bangkok', '1'), ('Bangui', '1'), ('Basra', '1'), ('Beirut', '1'), ('Bengasi', '1'), ('Berliini', '1'), ('Bishkek shaary', '1'), ('Blantyre', '1'), ('Bolívar', '3'), ('Bratislava', '1'), ('Brazzaville', '1'), ('Brjansk', '1'), ('Budapest', '1'), ('Bukarest', '1'), ('Bulawayo', '1'), ('Burjatia', '1'), ('Bursa', '2'), ('Cap-Vert', '3'), ('Carabobo', '3'), ('Casablanca', '2'), ('Ceará', '6'), ('Central Macedonia', '1'), ('Central Serbia', '3'), ('Centre', '3'), ('Chandigarh', '1'), ('Chari-Baguirmi', '1'), ('Chihuahua', '5'), ('Chisinau', '1'), ('Chittagong', '3'), ('Chongqing', '1'), ('Coast', '1'), ('Cochabamba', '1'), ('Conakry', '1'), ('Constantine', '1'), ('Cortés', '1'), ('Córdoba', '3'), ('Damascus', '1'), ('Dar es Salaam', '1'), ('Delhi', '3'), ('Dhaka', '8'), ('District of Columbia', '1'), ('Distrito Central', '1'), ('Distrito Federal', '5'), ('Distrito Nacional', '1'), ('Djibouti', '1'), ('Dnipropetrovsk', '5'), ('Doha', '1'), ('Dubai', '1'), ('East Azerbaidzan', '3'), ('East Java', '13'), ('East Kasai', '2'), ('Esfahan', '5'), ('Eskisehir', '1'), ('Estuaire', '1'), ('Fars', '3'), ('Fukuoka', '5'), ('Fès-Boulemane', '1'), ('Gansu', '7'), ('Gaziantep', '1'), ('Giza', '4'), ('Grad Sofija', '1'), ('Grad Zagreb', '1'), ('Greater Accra', '2'), ('Guangdong', '20'), ('Guatemala', '3'), ('Guayas', '3'), ('Guizhou', '6'), ('Gujarat', '21'), ('Habarovsk', '2'), ('Haiphong', '1'), ('Hamburg', '1'), ('Hamgyong N', '1'), ('Hamgyong P', '2'), ('Hanoi', '1'), ('Harare', '3'), ('Harjumaa', '1'), ('Harkova', '1'), ('Haute-Zaïre', '1'), ('Hawaii', '1'), ('Hebei', '12'), ('Heilongjiang', '21'), ('Henan', '18'), ('Herson', '1'), ('Hims', '1'), ('Hiroshima', '5'), ('Hlavní mesto Praha', '1'), ('Ho Chi Minh City', '1'), ('Hongkong', '1'), ('Horad Minsk', '1'), ('Hsinchu', '1'), ('Hubei', '22'), ('Hyogo', '11'), ('Illinois', '8'), ('Inchon', '1'), ('Irbil', '1'), ('Islamabad', '1'), ('Istanbul', '2'), ('Izmir', '1'), ('Içel', '1'), ('Jakarta Raya', '1'), ('Jalisco', '8'), ('Jambi', '1'), ('Jammu and Kashmir', '2'), ('Jaroslavl', '2'), ('Jerusalem', '1'), ('Jiangsu', '25'), ('Jilin', '20'), ('Jizní Morava', '1'), ('Kabol', '1'), ('Kadiogo', '1'), ('Kaduna', '2'), ('Kagoshima', '1'), ('Kairo', '1'), ('Kalimantan Barat', '1'), ('Kalimantan Selatan', '1'), ('Kalimantan Timur', '2'), ('Kaliningrad', '1'), ('Kanagawa', '15'), ('Kano & Jigawa', '1'), ('Kaohsiung', '3'), ('Karnataka', '17'), ('Karotegin', '1'), ('Kaunas', '1'), ('Kayseri', '1'), ('Keelung', '1'), ('Kermanshah', '1'), ('Khartum', '3'), ('Khorasan', '6'), ('Khulna', '2'), ('Kinshasa', '1'), ('Kiova', '3'), ('Konya', '1'), ('Kouilou', '1'), ('Kowloon and New Kowl', '1'), ('Kumamoto', '2'), ('Kurgan', '1'), ('Kwangju', '1'), ('Kyonggi', '18'), ('Kyoto', '4'), ('København', '1'), ('La Habana', '1'), ('La Libertad', '2'), ('La Paz', '2'), ('Lagos', '6'), ('Lambayeque', '1'), ('Lampung', '1'), ('Lara', '1'), ('Latium', '2'), ('Leinster', '1'), ('Liaoning', '21'), ('Liguria', '2'), ('Lilongwe', '1'), ('Lima', '1'), ('Lisboa', '3'), ('Littoral', '2'), ('Lodzkie', '1'), ('Lombardia', '4'), ('Loreto', '1'), ('Luanda', '1'), ('Lubelskie', '1'), ('Lusaka', '1'), ('Luxor', '1'), ('Lviv', '1'), ('Macau', '1'), ('Madrid', '8'), ('Maekel', '1'), ('Magdalena', '1'), ('Maharashtra', '35'), ('Malopolskie', '2'), ('Managua', '1'), ('Mandalay', '3'), ('Manitoba', '1'), ('Maputo', '2'), ('Maritime', '1'), ('Markazi', '1'), ('Marrakech-Tensift-Al', '1'), ('Maryland', '1'), ('Mazowieckie', '3'), ('Medina', '2'), ('Mekka', '4'), ('Meknès-Tafilalet', '1'), ('Midi-Pyrénées', '1'), ('Miyagi', '2'), ('Montevideo', '1'), ('Montserrado', '1'), ('Moscow (City)', '2'), ('Murmansk', '1'), ('Mykolajiv', '1'), ('México', '27'), ('Nairobi', '1'), ('Namangan', '1'), ('Nampo-si', '1'), ('National Capital Reg', '16'), ('New Mexico', '1'), ('New South Wales', '4'), ('New York', '6'), ('Niamey', '1'), ('Ninawa', '1'), ('Ningxia', '2'), ('Nizni Novgorod', '3'), ('Norte de Santander', '1'), ('Nouakchott', '1'), ('Novosibirsk', '1'), ('Nuevo León', '7'), ('Odesa', '2'), ('Ohio', '6'), ('Okayama', '3'), ('Omsk', '1'), ('Oran', '1'), ('Osaka', '22'), ('Oslo', '1'), ('Ouest', '4'), ('Panamá', '1'), ('Peking', '2'), ('Pennsylvania', '4'), ('Phnom Penh', '1'), ('Piauí', '2'), ('Pichincha', '2'), ('Piemonte', '3'), ('Pietari', '3'), ('Port Said', '1'), ('Provence-Alpes-Côte', '4'), ('Puebla', '5'), ('Punjab', '47'), ('Pusan', '1'), ('Pyongyang-si', '1'), ('Qinghai', '1'), ('Qom', '2'), ('Quang Nam-Da Nang', '1'), ('Queensland', '4'), ('Querétaro de Arteaga', '1'), ('Rabat-Salé-Zammour-Z', '3'), ('Rajasthan', '14'), ('Rangoon [Yangon]', '1'), ('Riika', '1'), ('Rio de Janeiro', '22'), ('Rivers & Bayelsa', '1'), ('Riyadh', '1'), ('Rjazan', '1'), ('Salta', '1'), ('Samara', '4'), ('Samarkand', '1'), ('Sanaa', '1'), ('Santa Cruz', '1'), ('Santa Fé', '2'), ('Santafé de Bogotá', '1'), ('Santiago', '5'), ('Santiago de Cuba', '1'), ('Scotland', '4'), ('Seoul', '1'), ('Shaanxi', '8'), ('Shaba', '4'), ('Shandong', '32'), ('Shanghai', '1'), ('Shanxi', '9'), ('Sichuan', '21'), ('Sindh', '4'), ('Sisilia', '4'), ('Skopje', '1'), ('Smolensk', '1'), ('Sofala', '1'), ('South Australia', '1'), ('South Kazakstan', '1'), ('Suez', '1'), ('Sulawesi Selatan', '1'), ('Sumatera Barat', '1'), ('Sumatera Selatan', '2'), ('Sumatera Utara', '7'), ('Sverdlovsk', '6'), ('São Paulo', '69'), ('Taegu', '1'), ('Taejon', '1'), ('Taichung', '3'), ('Tainan', '2'), ('Taipei', '13'), ('Tamil Nadu', '28'), ('Tatarstan', '6'), ('Tbilisi', '1'), ('Teheran', '6'), ('Texas', '26'), ('Tianjin', '1'), ('Tokyo-to', '18'), ('Tolima', '1'), ('Toskent Shahri', '1'), ('Tripoli', '1'), ('Tucumán', '1'), ('Tunis', '1'), ('Tver', '1'), ('Tšeljabinsk', '4'), ('Ulaanbaatar', '1'), ('Uljanovsk', '2'), ('Valle', '6'), ('Viangchan', '1'), ('Victoria', '2'), ('Vilna', '1'), ('Vinnytsja', '1'), ('Volgograd', '3'), ('Voronez', '1'), ('Wakayama', '1'), ('West Australia', '1'), ('Western Cape', '3'), ('Wien', '1'), ('Wilayah Persekutuan', '1'), ('Yerevan', '1'), ('Yucatán', '1'), ('Yunnan', '5'), ('Zaporizzja', '3'), ('Zhejiang', '16'), ('Zulia', '3'), ('al-Gharbiya', '2'), ('al-Sulaymaniya', '1'), ('al-Tamim', '1'), ('Île-de-France', '4')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT T1.GovernmentForm, SUM(T1.Population) FROM country AS T1 INNER JOIN ( SELECT GovernmentForm, AVG(LifeExpectancy) AS avg_life_expectancy FROM country GROUP BY GovernmentForm ) AS T2 ON T1.GovernmentForm = T2.GovernmentForm WHERE T2.avg_life_expectancy > 72","Not match: [('115072000', 'Socialistic Republic'), ('1731000', 'Overseas Department of France'), ('193050', 'Dependent Territory of the UK'), ('1972000', 'Constitutional Monarchy (Emirate)'), ('2441000', 'Emirate Federation'), ('2870000', 'Monarchy (Sultanate)'), ('320000', 'Nonmetropolitan Territory of The Netherlands'), ('329000', 'US Territory'), ('3947000', 'Commonwealth of the US'), ('464000', 'Nonmetropolitan Territory of France'), ('5605000', 'Socialistic State'), ('617000', 'Monarchy (Emirate)'), ('7160400', 'Federation'), ('7255000', 'Special Administrative Region of China'), ('78000', 'Parliamentary Coprincipality'), ('82516000', 'Constitutional Monarchy, Federation'), ('99000', 'Part of Denmark')] != [('Nonmetropolitan Territory of The Netherlands', '232669450')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm","Not match: [('115072000', 'Socialistic Republic'), ('1731000', 'Overseas Department of France'), ('193050', 'Dependent Territory of the UK'), ('1972000', 'Constitutional Monarchy (Emirate)'), ('2441000', 'Emirate Federation'), ('2870000', 'Monarchy (Sultanate)'), ('320000', 'Nonmetropolitan Territory of The Netherlands'), ('329000', 'US Territory'), ('3947000', 'Commonwealth of the US'), ('464000', 'Nonmetropolitan Territory of France'), ('5605000', 'Socialistic State'), ('617000', 'Monarchy (Emirate)'), ('7160400', 'Federation'), ('7255000', 'Special Administrative Region of China'), ('78000', 'Parliamentary Coprincipality'), ('82516000', 'Constitutional Monarchy, Federation'), ('99000', 'Part of Denmark')] != [('Commonwealth of the US', '3947000'), ('Constitutional Monarchy', '272881000'), ('Constitutional Monarchy (Emirate)', '1972000'), ('Constitutional Monarchy, Federation', '60272000'), ('Dependent Territory of the UK', '191000'), ('Emirate Federation', '2441000'), ('Federal Republic', '440455500'), ('Federation', '7160400'), ('Monarchy', '599000'), ('Monarchy (Emirate)', '617000'), ('Monarchy (Sultanate)', '328000'), ('Nonmetropolitan Territory of France', '449000'), ('Nonmetropolitan Territory of The Netherlands', '320000'), ('Overseas Department of France', '1731000'), ('Parliamentary Coprincipality', '78000'), ('Part of Denmark', '43000'), ('Republic', '338610500'), ('Socialistic Republic', '11201000'), ('Socialistic State', '5605000'), ('Special Administrative Region of China', '7255000'), ('Territorial Collectivity of France', '7000'), ('US Territory', '329000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT T1.Continent, AVG(T2.LifeExpectancy), SUM(T2.Population) FROM country AS T1 INNER JOIN country AS T2 ON T1.Code = T2.Code WHERE T2.LifeExpectancy < 72 GROUP BY T1.Continent;","Not match: [('30401150', '69.715', 'Oceania'), ('345780000', '70.94615384615385', 'South America'), ('3705025700', '67.44117647058823', 'Asia'), ('784475000', '52.5719298245614', 'Africa')] != [('Africa', '50.903773584905665', '768579000'), ('Asia', '63.91621621621622', '3480378000'), ('Europe', '69.0', '267630700'), ('North America', '67.61538461538461', '138422000'), ('Oceania', '66.20769230769231', '6866000'), ('South America', '67.62857142857142', '260351000')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT T1.Continent, SUM(T2.Population), AVG(T2.LifeExpectancy) FROM country AS T1 INNER JOIN country AS T2 ON T1.Code = T2.Code WHERE T1.Continent IN ( SELECT Continent FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72 )","Not match: [('30401150', '69.715', 'Oceania'), ('345780000', '70.94615384615385', 'South America'), ('3705025700', '67.44117647058823', 'Asia'), ('784475000', '52.5719298245614', 'Africa')] != [('Asia', '4865681850', '62.0758865248227')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;",,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;",,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3;,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3;,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population LIMIT 3;,,True
spider_data/database/world_1/world_1.sqlite,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population LIMIT 3;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""",SELECT COUNT(*) FROM country WHERE Continent = 'Asia';,,True
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) FROM country WHERE continent  =  ""Asia""",SELECT COUNT(DISTINCT Continent) FROM country WHERE Continent = 'Asia';,"Not match: [('51',)] != [('1',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""",SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""",SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;,,True
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;","Not match: [('', '')] != [('480753000', '1344763.7222222222')]",False
spider_data/database/world_1/world_1.sqlite,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;,,True
spider_data/database/world_1/world_1.sqlite,select name from city where population between 160000 and 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.Language ORDER BY COUNT(T2.CountryCode) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1;,,True
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY AVG(T2.Percentage) DESC LIMIT 1,"Not match: [('Akan', 'CIV', '30.0'), ('Akan', 'GHA', '52.4'), ('Albaniana', 'ALB', '97.9'), ('Arabic', 'ARE', '42.0'), ('Arabic', 'BHR', '67.7'), ('Arabic', 'DZA', '86.0'), ('Arabic', 'EGY', '98.8'), ('Arabic', 'ESH', '100.0'), ('Arabic', 'IRQ', '77.2'), ('Arabic', 'JOR', '97.9'), ('Arabic', 'KWT', '78.1'), ('Arabic', 'LBN', '93.0'), ('Arabic', 'LBY', '96.0'), ('Arabic', 'MAR', '65.0'), ('Arabic', 'OMN', '76.7'), ('Arabic', 'PSE', '95.9'), ('Arabic', 'QAT', '40.7'), ('Arabic', 'SAU', '95.0'), ('Arabic', 'SDN', '49.4'), ('Arabic', 'SYR', '90.0'), ('Arabic', 'TUN', '69.9'), ('Arabic', 'YEM', '99.6'), ('Armenian', 'ARM', '93.4'), ('Azerbaijani', 'AZE', '89.0'), ('Bajan', 'BRB', '95.1'), ('Bambara', 'MLI', '31.8'), ('Belorussian', 'BLR', '65.6'), ('Bemba', 'ZMB', '29.7'), ('Bengali', 'BGD', '97.7'), ('Bislama', 'VUT', '56.6'), ('Bulgariana', 'BGR', '83.2'), ('Burmese', 'MMR', '69.0'), ('Canton Chinese', 'HKG', '88.7'), ('Canton Chinese', 'MAC', '85.6'), ('Chichewa', 'MWI', '58.3'), ('Chinese', 'CHN', '92.0'), ('Chinese', 'CXR', '0.0'), ('Chinese', 'SGP', '77.1'), ('Comorian', 'COM', '75.0'), ('Creole English', 'ATG', '95.7'), ('Creole English', 'BHS', '89.7'), ('Creole English', 'DMA', '100.0'), ('Creole English', 'GRD', '100.0'), ('Creole English', 'GUY', '96.4'), ('Creole English', 'JAM', '94.2'), ('Creole English', 'KNA', '100.0'), ('Creole English', 'VCT', '99.1'), ('Creole French', 'GLP', '95.0'), ('Creole French', 'GUF', '94.3'), ('Creole French', 'LCA', '80.0'), ('Creole French', 'MTQ', '96.6'), ('Creole French', 'MUS', '70.6'), ('Creole French', 'REU', '91.5'), ('Crioulo', 'CPV', '100.0'), ('Crioulo', 'GNB', '36.4'), ('Crioulo', 'STP', '86.3'), ('Czech', 'CZE', '81.2'), ('Danish', 'DNK', '93.5'), ('Dhivehi', 'MDV', '100.0'), ('Dutch', 'BEL', '59.2'), ('Dutch', 'NLD', '95.6'), ('Dzongkha', 'BTN', '50.0'), ('English', 'AIA', '0.0'), ('English', 'AUS', '81.2'), ('English', 'BLZ', '50.8'), ('English', 'BMU', '100.0'), ('English', 'CAN', '60.4'), ('English', 'CCK', '0.0'), ('English', 'COK', '0.0'), ('English', 'CYM', '0.0'), ('English', 'FLK', '0.0'), ('English', 'GBR', '97.3'), ('English', 'GIB', '88.9'), ('English', 'GUM', '37.5'), ('English', 'IRL', '98.4'), ('English', 'MSR', '0.0'), ('English', 'NFK', '0.0'), ('English', 'NIU', '0.0'), ('English', 'NZL', '87.0'), ('English', 'SHN', '0.0'), ('English', 'TCA', '0.0'), ('English', 'TKL', '0.0'), ('English', 'TTO', '93.5'), ('English', 'UMI', '0.0'), ('English', 'USA', '86.2'), ('English', 'VGB', '0.0'), ('English', 'VIR', '81.7'), ('Estonian', 'EST', '65.3'), ('Ewe', 'TGO', '23.2'), ('Fang', 'CMR', '19.7'), ('Fang', 'GAB', '35.8'), ('Fang', 'GNQ', '84.8'), ('Faroese', 'FRO', '100.0'), ('Fijian', 'FJI', '50.8'), ('Finnish', 'FIN', '92.7'), ('Fon', 'BEN', '39.8'), ('French', 'FRA', '93.6'), ('French', 'MCO', '41.9'), ('French', 'SPM', '0.0'), ('Ful', 'GIN', '38.6'), ('Futuna', 'WLF', '0.0'), ('Ganda', 'UGA', '18.1'), ('Gbaya', 'CAF', '23.8'), ('Georgiana', 'GEO', '71.7'), ('German', 'AUT', '92.0'), ('German', 'CHE', '63.6'), ('German', 'DEU', '91.3'), ('German', 'LIE', '89.0'), ('Greek', 'CYP', '74.1'), ('Greek', 'GRC', '98.5'), ('Greenlandic', 'GRL', '87.5'), ('Haiti Creole', 'HTI', '100.0'), ('Hassaniya', 'MRT', '81.7'), ('Hausa', 'NER', '53.1'), ('Hebrew', 'ISR', '63.1'), ('Hindi', 'IND', '39.9'), ('Hungarian', 'HUN', '98.5'), ('Icelandic', 'ISL', '95.7'), ('Italian', 'ITA', '94.1'), ('Italian', 'SMR', '100.0'), ('Italian', 'VAT', '0.0'), ('Japanese', 'JPN', '99.1'), ('Javanese', 'IDN', '39.4'), ('Joruba', 'NGA', '21.4'), ('Kazakh', 'KAZ', '46.0'), ('Khmer', 'KHM', '88.6'), ('Kikuyu', 'KEN', '20.9'), ('Kirgiz', 'KGZ', '59.7'), ('Kiribati', 'KIR', '98.9'), ('Kirundi', 'BDI', '98.1'), ('Kongo', 'COG', '51.5'), ('Korean', 'KOR', '99.9'), ('Korean', 'PRK', '99.9'), ('Kpelle', 'LBR', '19.5'), ('Lao', 'LAO', '67.2'), ('Latvian', 'LVA', '55.1'), ('Lithuanian', 'LTU', '81.6'), ('Luba', 'COD', '18.0'), ('Luxembourgish', 'LUX', '64.4'), ('Macedonian', 'MKD', '66.5'), ('Mahoré', 'MYT', '41.9'), ('Makua', 'MOZ', '27.8'), ('Malagasy', 'MDG', '98.9'), ('Malay', 'BRN', '45.5'), ('Malay', 'MYS', '58.4'), ('Malenasian Languages', 'NCL', '45.4'), ('Malenasian Languages', 'SLB', '85.6'), ('Malinke', 'GMB', '34.1'), ('Maltese', 'MLT', '95.8'), ('Marshallese', 'MHL', '96.8'), ('Mende', 'SLE', '34.8'), ('Min', 'TWN', '66.7'), ('Mongolian', 'MNG', '78.8'), ('Mossi', 'BFA', '50.2'), ('Nauru', 'NRU', '57.5'), ('Nepali', 'NPL', '50.4'), ('Norwegian', 'NOR', '96.6'), ('Norwegian', 'SJM', '0.0'), ('Nyamwesi', 'TZA', '21.1'), ('Oromo', 'ETH', '31.0'), ('Ovambo', 'NAM', '50.7'), ('Ovimbundu', 'AGO', '37.2'), ('Palau', 'PLW', '82.2'), ('Papiamento', 'ABW', '76.7'), ('Papiamento', 'ANT', '86.2'), ('Papuan Languages', 'PNG', '78.1'), ('Pashto', 'AFG', '52.4'), ('Persian', 'IRN', '45.7'), ('Philippene Languages', 'MNP', '34.1'), ('Pilipino', 'PHL', '29.3'), ('Pitcairnese', 'PCN', '0.0'), ('Polish', 'POL', '97.6'), ('Portuguese', 'BRA', '97.5'), ('Portuguese', 'PRT', '99.0'), ('Portuguese', 'TMP', '0.0'), ('Punjabi', 'PAK', '48.2'), ('Romanian', 'MDA', '61.9'), ('Romanian', 'ROM', '90.7'), ('Russian', 'RUS', '86.6'), ('Rwanda', 'RWA', '100.0'), ('Samoan', 'ASM', '90.6'), ('Samoan-English', 'WSM', '52.0'), ('Sara', 'TCD', '27.7'), ('Serbo-Croatian', 'BIH', '99.2'), ('Serbo-Croatian', 'HRV', '95.9'), ('Serbo-Croatian', 'YUG', '75.2'), ('Seselwa', 'SYC', '91.3'), ('Shona', 'ZWE', '72.1'), ('Singali', 'LKA', '60.3'), ('Slovak', 'SVK', '85.6'), ('Slovene', 'SVN', '87.9'), ('Somali', 'DJI', '43.9'), ('Somali', 'SOM', '98.3'), ('Sotho', 'LSO', '85.0'), ('Spanish', 'AND', '44.6'), ('Spanish', 'ARG', '96.8'), ('Spanish', 'BOL', '87.7'), ('Spanish', 'CHL', '89.7'), ('Spanish', 'COL', '99.0'), ('Spanish', 'CRI', '97.5'), ('Spanish', 'CUB', '100.0'), ('Spanish', 'DOM', '98.0'), ('Spanish', 'ECU', '93.0'), ('Spanish', 'ESP', '74.4'), ('Spanish', 'GTM', '64.7'), ('Spanish', 'HND', '97.2'), ('Spanish', 'MEX', '92.1'), ('Spanish', 'NIC', '97.6'), ('Spanish', 'PAN', '76.8'), ('Spanish', 'PER', '79.8'), ('Spanish', 'PRI', '51.3'), ('Spanish', 'PRY', '55.1'), ('Spanish', 'SLV', '100.0'), ('Spanish', 'URY', '95.7'), ('Spanish', 'VEN', '96.9'), ('Sranantonga', 'SUR', '81.0'), ('Swazi', 'SWZ', '89.9'), ('Swedish', 'SWE', '89.5'), ('Tadzhik', 'TJK', '62.2'), ('Tahitian', 'PYF', '46.4'), ('Thai', 'THA', '52.6'), ('Tigrinja', 'ERI', '49.1'), ('Tongan', 'TON', '98.3'), ('Trukese', 'FSM', '41.6'), ('Tswana', 'BWA', '75.5'), ('Turkish', 'TUR', '87.6'), ('Turkmenian', 'TKM', '76.7'), ('Tuvalu', 'TUV', '92.5'), ('Ukrainian', 'UKR', '64.7'), ('Uzbek', 'UZB', '72.6'), ('Vietnamese', 'VNM', '86.8'), ('Wolof', 'SEN', '48.1'), ('Zulu', 'ZAF', '22.7')] != [('English',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T2.CountryCode, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY AVG(T2.Percentage) DESC LIMIT 10;","Not match: [('Akan', 'CIV', '30.0'), ('Akan', 'GHA', '52.4'), ('Albaniana', 'ALB', '97.9'), ('Arabic', 'ARE', '42.0'), ('Arabic', 'BHR', '67.7'), ('Arabic', 'DZA', '86.0'), ('Arabic', 'EGY', '98.8'), ('Arabic', 'ESH', '100.0'), ('Arabic', 'IRQ', '77.2'), ('Arabic', 'JOR', '97.9'), ('Arabic', 'KWT', '78.1'), ('Arabic', 'LBN', '93.0'), ('Arabic', 'LBY', '96.0'), ('Arabic', 'MAR', '65.0'), ('Arabic', 'OMN', '76.7'), ('Arabic', 'PSE', '95.9'), ('Arabic', 'QAT', '40.7'), ('Arabic', 'SAU', '95.0'), ('Arabic', 'SDN', '49.4'), ('Arabic', 'SYR', '90.0'), ('Arabic', 'TUN', '69.9'), ('Arabic', 'YEM', '99.6'), ('Armenian', 'ARM', '93.4'), ('Azerbaijani', 'AZE', '89.0'), ('Bajan', 'BRB', '95.1'), ('Bambara', 'MLI', '31.8'), ('Belorussian', 'BLR', '65.6'), ('Bemba', 'ZMB', '29.7'), ('Bengali', 'BGD', '97.7'), ('Bislama', 'VUT', '56.6'), ('Bulgariana', 'BGR', '83.2'), ('Burmese', 'MMR', '69.0'), ('Canton Chinese', 'HKG', '88.7'), ('Canton Chinese', 'MAC', '85.6'), ('Chichewa', 'MWI', '58.3'), ('Chinese', 'CHN', '92.0'), ('Chinese', 'CXR', '0.0'), ('Chinese', 'SGP', '77.1'), ('Comorian', 'COM', '75.0'), ('Creole English', 'ATG', '95.7'), ('Creole English', 'BHS', '89.7'), ('Creole English', 'DMA', '100.0'), ('Creole English', 'GRD', '100.0'), ('Creole English', 'GUY', '96.4'), ('Creole English', 'JAM', '94.2'), ('Creole English', 'KNA', '100.0'), ('Creole English', 'VCT', '99.1'), ('Creole French', 'GLP', '95.0'), ('Creole French', 'GUF', '94.3'), ('Creole French', 'LCA', '80.0'), ('Creole French', 'MTQ', '96.6'), ('Creole French', 'MUS', '70.6'), ('Creole French', 'REU', '91.5'), ('Crioulo', 'CPV', '100.0'), ('Crioulo', 'GNB', '36.4'), ('Crioulo', 'STP', '86.3'), ('Czech', 'CZE', '81.2'), ('Danish', 'DNK', '93.5'), ('Dhivehi', 'MDV', '100.0'), ('Dutch', 'BEL', '59.2'), ('Dutch', 'NLD', '95.6'), ('Dzongkha', 'BTN', '50.0'), ('English', 'AIA', '0.0'), ('English', 'AUS', '81.2'), ('English', 'BLZ', '50.8'), ('English', 'BMU', '100.0'), ('English', 'CAN', '60.4'), ('English', 'CCK', '0.0'), ('English', 'COK', '0.0'), ('English', 'CYM', '0.0'), ('English', 'FLK', '0.0'), ('English', 'GBR', '97.3'), ('English', 'GIB', '88.9'), ('English', 'GUM', '37.5'), ('English', 'IRL', '98.4'), ('English', 'MSR', '0.0'), ('English', 'NFK', '0.0'), ('English', 'NIU', '0.0'), ('English', 'NZL', '87.0'), ('English', 'SHN', '0.0'), ('English', 'TCA', '0.0'), ('English', 'TKL', '0.0'), ('English', 'TTO', '93.5'), ('English', 'UMI', '0.0'), ('English', 'USA', '86.2'), ('English', 'VGB', '0.0'), ('English', 'VIR', '81.7'), ('Estonian', 'EST', '65.3'), ('Ewe', 'TGO', '23.2'), ('Fang', 'CMR', '19.7'), ('Fang', 'GAB', '35.8'), ('Fang', 'GNQ', '84.8'), ('Faroese', 'FRO', '100.0'), ('Fijian', 'FJI', '50.8'), ('Finnish', 'FIN', '92.7'), ('Fon', 'BEN', '39.8'), ('French', 'FRA', '93.6'), ('French', 'MCO', '41.9'), ('French', 'SPM', '0.0'), ('Ful', 'GIN', '38.6'), ('Futuna', 'WLF', '0.0'), ('Ganda', 'UGA', '18.1'), ('Gbaya', 'CAF', '23.8'), ('Georgiana', 'GEO', '71.7'), ('German', 'AUT', '92.0'), ('German', 'CHE', '63.6'), ('German', 'DEU', '91.3'), ('German', 'LIE', '89.0'), ('Greek', 'CYP', '74.1'), ('Greek', 'GRC', '98.5'), ('Greenlandic', 'GRL', '87.5'), ('Haiti Creole', 'HTI', '100.0'), ('Hassaniya', 'MRT', '81.7'), ('Hausa', 'NER', '53.1'), ('Hebrew', 'ISR', '63.1'), ('Hindi', 'IND', '39.9'), ('Hungarian', 'HUN', '98.5'), ('Icelandic', 'ISL', '95.7'), ('Italian', 'ITA', '94.1'), ('Italian', 'SMR', '100.0'), ('Italian', 'VAT', '0.0'), ('Japanese', 'JPN', '99.1'), ('Javanese', 'IDN', '39.4'), ('Joruba', 'NGA', '21.4'), ('Kazakh', 'KAZ', '46.0'), ('Khmer', 'KHM', '88.6'), ('Kikuyu', 'KEN', '20.9'), ('Kirgiz', 'KGZ', '59.7'), ('Kiribati', 'KIR', '98.9'), ('Kirundi', 'BDI', '98.1'), ('Kongo', 'COG', '51.5'), ('Korean', 'KOR', '99.9'), ('Korean', 'PRK', '99.9'), ('Kpelle', 'LBR', '19.5'), ('Lao', 'LAO', '67.2'), ('Latvian', 'LVA', '55.1'), ('Lithuanian', 'LTU', '81.6'), ('Luba', 'COD', '18.0'), ('Luxembourgish', 'LUX', '64.4'), ('Macedonian', 'MKD', '66.5'), ('Mahoré', 'MYT', '41.9'), ('Makua', 'MOZ', '27.8'), ('Malagasy', 'MDG', '98.9'), ('Malay', 'BRN', '45.5'), ('Malay', 'MYS', '58.4'), ('Malenasian Languages', 'NCL', '45.4'), ('Malenasian Languages', 'SLB', '85.6'), ('Malinke', 'GMB', '34.1'), ('Maltese', 'MLT', '95.8'), ('Marshallese', 'MHL', '96.8'), ('Mende', 'SLE', '34.8'), ('Min', 'TWN', '66.7'), ('Mongolian', 'MNG', '78.8'), ('Mossi', 'BFA', '50.2'), ('Nauru', 'NRU', '57.5'), ('Nepali', 'NPL', '50.4'), ('Norwegian', 'NOR', '96.6'), ('Norwegian', 'SJM', '0.0'), ('Nyamwesi', 'TZA', '21.1'), ('Oromo', 'ETH', '31.0'), ('Ovambo', 'NAM', '50.7'), ('Ovimbundu', 'AGO', '37.2'), ('Palau', 'PLW', '82.2'), ('Papiamento', 'ABW', '76.7'), ('Papiamento', 'ANT', '86.2'), ('Papuan Languages', 'PNG', '78.1'), ('Pashto', 'AFG', '52.4'), ('Persian', 'IRN', '45.7'), ('Philippene Languages', 'MNP', '34.1'), ('Pilipino', 'PHL', '29.3'), ('Pitcairnese', 'PCN', '0.0'), ('Polish', 'POL', '97.6'), ('Portuguese', 'BRA', '97.5'), ('Portuguese', 'PRT', '99.0'), ('Portuguese', 'TMP', '0.0'), ('Punjabi', 'PAK', '48.2'), ('Romanian', 'MDA', '61.9'), ('Romanian', 'ROM', '90.7'), ('Russian', 'RUS', '86.6'), ('Rwanda', 'RWA', '100.0'), ('Samoan', 'ASM', '90.6'), ('Samoan-English', 'WSM', '52.0'), ('Sara', 'TCD', '27.7'), ('Serbo-Croatian', 'BIH', '99.2'), ('Serbo-Croatian', 'HRV', '95.9'), ('Serbo-Croatian', 'YUG', '75.2'), ('Seselwa', 'SYC', '91.3'), ('Shona', 'ZWE', '72.1'), ('Singali', 'LKA', '60.3'), ('Slovak', 'SVK', '85.6'), ('Slovene', 'SVN', '87.9'), ('Somali', 'DJI', '43.9'), ('Somali', 'SOM', '98.3'), ('Sotho', 'LSO', '85.0'), ('Spanish', 'AND', '44.6'), ('Spanish', 'ARG', '96.8'), ('Spanish', 'BOL', '87.7'), ('Spanish', 'CHL', '89.7'), ('Spanish', 'COL', '99.0'), ('Spanish', 'CRI', '97.5'), ('Spanish', 'CUB', '100.0'), ('Spanish', 'DOM', '98.0'), ('Spanish', 'ECU', '93.0'), ('Spanish', 'ESP', '74.4'), ('Spanish', 'GTM', '64.7'), ('Spanish', 'HND', '97.2'), ('Spanish', 'MEX', '92.1'), ('Spanish', 'NIC', '97.6'), ('Spanish', 'PAN', '76.8'), ('Spanish', 'PER', '79.8'), ('Spanish', 'PRI', '51.3'), ('Spanish', 'PRY', '55.1'), ('Spanish', 'SLV', '100.0'), ('Spanish', 'URY', '95.7'), ('Spanish', 'VEN', '96.9'), ('Sranantonga', 'SUR', '81.0'), ('Swazi', 'SWZ', '89.9'), ('Swedish', 'SWE', '89.5'), ('Tadzhik', 'TJK', '62.2'), ('Tahitian', 'PYF', '46.4'), ('Thai', 'THA', '52.6'), ('Tigrinja', 'ERI', '49.1'), ('Tongan', 'TON', '98.3'), ('Trukese', 'FSM', '41.6'), ('Tswana', 'BWA', '75.5'), ('Turkish', 'TUR', '87.6'), ('Turkmenian', 'TKM', '76.7'), ('Tuvalu', 'TUV', '92.5'), ('Ukrainian', 'UKR', '64.7'), ('Uzbek', 'UZB', '72.6'), ('Vietnamese', 'VNM', '86.8'), ('Wolof', 'SEN', '48.1'), ('Zulu', 'ZAF', '22.7')] != [('BHS', 'Creole English'), ('BIH', 'Serbo-Croatian'), ('BMU', 'English'), ('CUB', 'Spanish'), ('ESH', 'Arabic'), ('GRD', 'Creole English'), ('PRT', 'Portuguese'), ('SAU', 'Arabic'), ('SMR', 'Italian'), ('URY', 'Spanish')]",False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(DISTINCT T2.CountryCode) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Percentage = ( SELECT MAX(Percentage) FROM countrylanguage );,OperationalError('no such column: T2.CountryCode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(DISTINCT T2.CountryCode) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Spanish',OperationalError('no such column: T2.CountryCode'),False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT T2.Code FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Spanish' ORDER BY T1.Percentage DESC LIMIT 1,"Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('CUB',)]",False
spider_data/database/world_1/world_1.sqlite,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish',"Not match: [('ABW', '7.4'), ('AND', '44.6'), ('ARG', '96.8'), ('BLZ', '31.6'), ('BOL', '87.7'), ('CAN', '0.7'), ('CHL', '89.7'), ('COL', '99.0'), ('CRI', '97.5'), ('CUB', '100.0'), ('DOM', '98.0'), ('ECU', '93.0'), ('ESP', '74.4'), ('FRA', '0.4'), ('GTM', '64.7'), ('HND', '97.2'), ('MEX', '92.1'), ('NIC', '97.6'), ('PAN', '76.8'), ('PER', '79.8'), ('PRI', '51.3'), ('PRY', '55.1'), ('SLV', '100.0'), ('SWE', '0.6'), ('URY', '95.7'), ('USA', '7.5'), ('VEN', '96.9'), ('VIR', '13.3')] != [('ABW',), ('AND',), ('ARG',), ('BLZ',), ('BOL',), ('CAN',), ('CHL',), ('COL',), ('CRI',), ('CUB',), ('DOM',), ('ECU',), ('ESP',), ('FRA',), ('GTM',), ('HND',), ('MEX',), ('NIC',), ('PAN',), ('PER',), ('PRI',), ('PRY',), ('SLV',), ('SWE',), ('URY',), ('USA',), ('VEN',), ('VIR',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT COUNT(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(*) FROM conductor,SELECT COUNT(*) FROM conductor,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT AVG(Attendance) FROM show;,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT avg(Attendance) FROM SHOW,SELECT AVG(Attendance) FROM show,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT MAX(CASE WHEN Type != 'Live final' THEN Share END), MIN(CASE WHEN Type != 'Live final' THEN Share END) FROM performance",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT MAX(Share) , MIN(Share) FROM performance WHERE Type != 'Live final'",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,"SELECT COUNT(DISTINCT ""Nationality"") FROM conductor",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT count(DISTINCT Nationality) FROM conductor,"SELECT COUNT(DISTINCT ""Nationality"") FROM ""conductor"";",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Name HAVING COUNT(T2.Conductor_ID) > 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Conductor_ID) > 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1,"Not match: [('Michael Tilson Thomas',)] != [('Valeri Gergiev',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1,"Not match: [('Michael Tilson Thomas',)] != [('Valeri Gergiev',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008;,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",SELECT COUNT(Record_Company) FROM orchestra GROUP BY Record_Company,"Not match: [('Columbia Masterworks', '1'), ('Decca Records', '2'), ('Delos Records', '1'), ('Deutsche Grammophon', '1'), ('EMI', '1'), ('Koch Records / Naxos Records', '1'), ('Kultur', '1'), ('Mercury Records', '1'), ('Philips', '1'), ('Philips Classics Records', '1'), ('RCA', '1')] != [('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('1',), ('2',)]",False
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra ORDER BY COUNT(*) ASC,OperationalError('misuse of aggregate: COUNT()'),False
spider_data/database/orchestra/orchestra.sqlite,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance );,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance );,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003,,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')",,True
spider_data/database/orchestra/orchestra.sqlite,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')",,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT DISTINCT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Orchestra_ID IN ( SELECT T2.Orchestra_ID FROM performance AS T2 GROUP BY T2.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1 );,,True
spider_data/database/orchestra/orchestra.sqlite,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T2.`Year_of_Founded` FROM performance AS T1 INNER JOIN orchestra AS T2 ON T1.`Orchestra_ID` = T2.`Orchestra_ID` GROUP BY T1.`Orchestra_ID` HAVING COUNT(T1.`Performance_ID`) > 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT COUNT(*) FROM Highschooler WHERE grade = 9;,"Not match: [('16',)] != [('4',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler,SELECT COUNT(*) FROM Highschooler WHERE grade = 9 OR grade = 10 OR grade = 11;,"Not match: [('16',)] != [('12',)]",False
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name, grade FROM Highschooler WHERE grade > 0",,True
spider_data/database/network_1/network_1.sqlite,"SELECT name ,  grade FROM Highschooler","SELECT name, grade FROM Highschooler",,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""",SELECT grade FROM Highschooler WHERE name = 'Kyle',,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""",SELECT grade FROM Highschooler WHERE name = 'Kyle',,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10;,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade = 10;,,True
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",SELECT ID FROM Highschooler WHERE name = 'Kyle',,True
spider_data/database/network_1/network_1.sqlite,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",SELECT ID FROM Highschooler WHERE name = 'Kyle',,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,"SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)",,True
spider_data/database/network_1/network_1.sqlite,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,"SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)",,True
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT COUNT(*) ,  grade FROM Highschooler GROUP BY grade","Not match: [('10', '4'), ('11', '4'), ('12', '4'), ('9', '4')] != [('4', '10'), ('4', '11'), ('4', '12'), ('4', '9')]",False
spider_data/database/network_1/network_1.sqlite,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT COUNT(*) ,  grade FROM Highschooler GROUP BY grade","Not match: [('10', '4'), ('11', '4'), ('12', '4'), ('9', '4')] != [('4', '10'), ('4', '11'), ('4', '12'), ('4', '9')]",False
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT MAX(grade) FROM Highschooler,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4,,True
spider_data/database/network_1/network_1.sqlite,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4,,True
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT T1.student_id ,  COUNT(T2.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id",OperationalError('no such column: T2.friend_id'),False
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",SELECT COUNT(*) FROM Friend,"Not match: [('1101', '1'), ('1247', '2'), ('1304', '1'), ('1316', '1'), ('1381', '1'), ('1468', '2'), ('1501', '1'), ('1510', '2'), ('1661', '1'), ('1689', '2'), ('1709', '1'), ('1782', '3'), ('1911', '1'), ('1934', '1')] != [('20',)]",False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID",,True
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T1.name, COUNT(*) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id OR T1.ID = T2.friend_id GROUP BY T1.ID","Not match: [('Alexis', '2'), ('Andrew', '3'), ('Austin', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '2'), ('Haley', '1'), ('Jessica', '1'), ('Jordan', '1'), ('Jordan', '2'), ('Kris', '2'), ('Kyle', '1'), ('Logan', '1'), ('Tiffany', '1')] != [('Alexis', '4'), ('Andrew', '4'), ('Austin', '2'), ('Brittany', '2'), ('Cassandra', '2'), ('Gabriel', '2'), ('Gabriel', '3'), ('Haley', '2'), ('Jessica', '3'), ('John', '1'), ('Jordan', '2'), ('Jordan', '3'), ('Kris', '3'), ('Kyle', '3'), ('Logan', '2'), ('Tiffany', '2')]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3,,True
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.friend_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle'),"Not match: [('Jordan',)] != [('Austin',), ('Jessica',)]",False
spider_data/database/network_1/network_1.sqlite,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.friend_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle'),"Not match: [('Jordan',)] != [('Austin',), ('Jessica',)]",False
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT COUNT(*) FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle'),,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT COUNT(T1.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle'),,True
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL,,True
spider_data/database/network_1/network_1.sqlite,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL,,True
spider_data/database/network_1/network_1.sqlite,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL,"Not match: [('Brittany',), ('John',)] != []",False
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT DISTINCT T1.id FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.id = T2.student_id WHERE T2.friend_id IS NOT NULL AND T1.id IN ( SELECT T3.liked_id FROM Likes AS T4 WHERE T4.student_id != T4.liked_id ),OperationalError('no such column: T3.liked_id'),False
spider_data/database/network_1/network_1.sqlite,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.id FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.id = T2.student_id INNER JOIN Likes AS T3 ON T1.id = T3.student_id WHERE T2.friend_id IS NOT NULL AND T3.liked_id IS NOT NULL,"Not match: [('1101',), ('1247',), ('1304',), ('1468',), ('1501',), ('1689',), ('1709',), ('1934',)] != [('1247',), ('1247',), ('1316',), ('1501',), ('1689',), ('1689',), ('1709',), ('1782',), ('1782',), ('1782',), ('1911',), ('1934',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id IN ( SELECT friend_id FROM Friend ) AND T1.ID NOT IN ( SELECT student_id FROM Friend );,"Not match: [('Alexis',), ('Cassandra',), ('Gabriel',), ('Haley',), ('Jessica',), ('Jordan',), ('Kris',), ('Kyle',)] != [('Brittany',), ('John',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id IN ( SELECT friend_id FROM Friend ) AND T1.ID NOT IN ( SELECT student_id FROM Likes );,"Not match: [('Alexis',), ('Cassandra',), ('Gabriel',), ('Haley',), ('Jessica',), ('Jordan',), ('Kris',), ('Kyle',)] != []",False
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT COUNT(*) ,  student_id FROM Likes GROUP BY student_id","Not match: [('1025', '1'), ('1247', '1'), ('1316', '1'), ('1501', '1'), ('1641', '1'), ('1689', '1'), ('1709', '1'), ('1782', '1'), ('1911', '1'), ('1934', '1')] != [('1', '1025'), ('1', '1247'), ('1', '1316'), ('1', '1501'), ('1', '1641'), ('1', '1689'), ('1', '1709'), ('1', '1782'), ('1', '1911'), ('1', '1934')]",False
spider_data/database/network_1/network_1.sqlite,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","SELECT COUNT(*) ,  student_id FROM Likes GROUP BY student_id","Not match: [('1025', '1'), ('1247', '1'), ('1316', '1'), ('1501', '1'), ('1641', '1'), ('1689', '1'), ('1709', '1'), ('1782', '1'), ('1911', '1'), ('1934', '1')] != [('1', '1025'), ('1', '1247'), ('1', '1316'), ('1', '1501'), ('1', '1641'), ('1', '1689'), ('1', '1709'), ('1', '1782'), ('1', '1911'), ('1', '1934')]",False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T1.name, COUNT(*) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name","Not match: [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '1'), ('Gabriel', '1'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')] != [('Alexis', '1'), ('Andrew', '1'), ('Austin', '1'), ('Brittany', '1'), ('Cassandra', '1'), ('Gabriel', '2'), ('Jessica', '1'), ('John', '1'), ('Kyle', '1')]",False
spider_data/database/network_1/network_1.sqlite,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT T1.name, COUNT(*) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID",,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.liked_id) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.liked_id) DESC LIMIT 1,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.liked_id) >= 2,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.liked_id) >= 2,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2 AND T1.grade > 5,,True
spider_data/database/network_1/network_1.sqlite,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2 AND T1.grade > 5,,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle'),,True
spider_data/database/network_1/network_1.sqlite,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT COUNT(*) FROM Likes WHERE student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle'),,True
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id,"Not match: [('10.428571428571429',)] != [('10.25',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id,"Not match: [('10.428571428571429',)] != [('10.25',)]",False
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL,,True
spider_data/database/network_1/network_1.sqlite,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state,"Not match: [('Indiana',), ('Mississippi',), ('Wisconsin',)] != [('Indiana',), ('Indiana',), ('Mississippi',), ('Wisconsin',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id,"Not match: [('5.111111111111111',)] != [('5.466666666666667',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id,"Not match: [('5.111111111111111',)] != [('5.466666666666667',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT T1 profesional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_type_code) > 2",OperationalError('no such column: T1'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) > 2 WHERE T1.state = 'Indiana'","OperationalError('near ""WHERE"": syntax error')",False
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.cost_of_treatment < 1000,"Not match: [('Bessie',), ('Betty',), ('George',), ('Hipolito',), ('Holden',), ('Houston',), ('Jeffrey',), ('Jesus',), ('Kacey',), ('Mavis',), ('Merritt',), ('Narciso',)] != [('Evangeline',), ('Evangeline',), ('Hipolito',), ('Hipolito',), ('Holden',), ('Houston',), ('Jesus',), ('Kacey',), ('Lyric',), ('Lyric',), ('Lyric',), ('Narciso',), ('Troy',), ('Troy',), ('Troy',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.cost_of_treatment <= 1000,"Not match: [('Bessie',), ('Betty',), ('George',), ('Hipolito',), ('Holden',), ('Houston',), ('Jeffrey',), ('Jesus',), ('Kacey',), ('Mavis',), ('Merritt',), ('Narciso',)] != [('Evangeline',), ('Evangeline',), ('Hipolito',), ('Hipolito',), ('Holden',), ('Houston',), ('Jesus',), ('Kacey',), ('Lyric',), ('Lyric',), ('Lyric',), ('Narciso',), ('Troy',), ('Troy',), ('Troy',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT T1.first_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.name NOT IN ( SELECT name FROM Dogs WHERE breed_code IN ( SELECT breed_code FROM Breeds ) ),"Not match: [('Adelle',), ('Brady',), ('Cindy',), ('Danny',), ('Domenica',), ('Emelie',), ('Ericka',), ('Gay',), ('Heather',), ('Jaclyn',), ('Jayson',), ('Johann',), ('Kade',), ('Karley',), ('Lesly',), ('Lorenz',), ('Melisa',), ('Monte',), ('Nora',), ('Olaf',), ('Orlando',), ('Rachelle',), ('Rolando',), ('Ruben',), ('Sigurd',), ('Taryn',), ('Tre',), ('Velva',), ('Vernice',), ('Winfield',)] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT T1.first_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.name NOT IN ( SELECT name FROM Dogs WHERE breed_code IN ( SELECT breed_code FROM Breeds ) OR size_code IN ( SELECT size_code FROM Sizes ) ),"Not match: [('Adelle',), ('Brady',), ('Cindy',), ('Danny',), ('Domenica',), ('Emelie',), ('Ericka',), ('Gay',), ('Heather',), ('Jaclyn',), ('Jayson',), ('Johann',), ('Kade',), ('Karley',), ('Lesly',), ('Lorenz',), ('Melisa',), ('Monte',), ('Nora',), ('Olaf',), ('Orlando',), ('Rachelle',), ('Rolando',), ('Ruben',), ('Sigurd',), ('Taryn',), ('Tre',), ('Velva',), ('Vernice',), ('Winfield',)] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.dog_id IS NULL",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.treatment_id IS NULL",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(T2.dog_id) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(T2.dog_id) DESC LIMIT 1",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id, T1.role, T2.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2",OperationalError('no such column: T1.role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id, T2.role, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",OperationalError('no such column: T2.role'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(T1.dog_id) DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(T1.dog_id) DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.last_name, T2.first_name FROM Owners AS T1 INNER JOIN Treatments AS T2 ON T1.owner_id = T2.dog_id GROUP BY T1.owner_id ORDER BY COUNT(T2.treatment_type_code) DESC LIMIT 1",OperationalError('no such column: T2.first_name'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id, T1.last_name FROM Owners AS T1 INNER JOIN Treatments AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1",OperationalError('no such column: T2.owner_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) LIMIT 1,OperationalError('no such column: treatment_type_description'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM Treatments WHERE cost_of_treatment = ( SELECT MIN(cost_of_treatment) FROM Treatments );,OperationalError('no such column: treatment_type_description'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 INNER JOIN Treatments AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1",OperationalError('no such column: T2.owner_id'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1",OperationalError('no such column: T2.cost_of_treatment'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2","Not match: [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('4', '00230569697'), ('6', '139-321-7313'), ('8', '328.842.3792'), ('9', '962-983-8109x3509')] != [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('6', '139-321-7313'), ('9', '962-983-8109x3509')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) > 1","Not match: [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('4', '00230569697'), ('6', '139-321-7313'), ('8', '328.842.3792'), ('9', '962-983-8109x3509')] != [('10', '461-801-2600'), ('14', '1-185-137-1945x409'), ('6', '139-321-7313'), ('9', '962-983-8109x3509')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < ( SELECT AVG(cost_of_treatment) FROM Treatments );","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != [('Domenica', 'Jacobs'), ('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Monte', 'Kshlerin'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly""), ('Vernice', 'Tillman'), ('Vernice', 'Tillman')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T2.cost_of_treatment HAVING AVG(T2.cost_of_treatment) > T2.cost_of_treatment","Not match: [('Brady', 'Pouros'), ('Danny', 'Considine'), ('Domenica', 'Jacobs'), ('Ericka', 'Murazik'), ('Jayson', 'Ullrich'), ('Karley', 'Hyatt'), ('Lesly', 'Walter'), ('Monte', 'Kshlerin'), ('Olaf', 'Watsica'), ('Ruben', ""O'Reilly""), ('Sigurd', 'Frami'), ('Taryn', 'Braun'), ('Velva', 'Hayes'), ('Vernice', 'Tillman'), ('Winfield', 'Christiansen')] != []",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2 profesional_id","OperationalError('near ""profesional_id"": syntax error')",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT cost_of_treatment, treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name, T1.last_name, T2.size FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",OperationalError('no such column: T2.size'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code IN ( SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1 )","Not match: [('Houston', '2018-03-15 20:25:34'), ('Kacey', '2018-03-15 19:10:02'), ('Lyric', '2018-03-08 05:26:23'), ('Lyric', '2018-03-14 19:10:40'), ('Lyric', '2018-03-19 04:39:54')] != [('Evangeline', '2018-03-10 11:45:58'), ('Evangeline', '2018-03-13 12:22:58'), ('Hipolito', '2018-03-01 04:14:46'), ('Hipolito', '2018-03-24 22:25:58'), ('Narciso', '2018-02-26 09:08:53')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id ORDER BY COUNT(T2.treatment_type_code) ASC LIMIT 1","Not match: [('Houston', '2018-03-15 20:25:34'), ('Kacey', '2018-03-15 19:10:02'), ('Lyric', '2018-03-08 05:26:23'), ('Lyric', '2018-03-14 19:10:40'), ('Lyric', '2018-03-19 04:39:54')] != [('Kacey', '2018-03-15 19:10:02')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.treatment_type_code IS NOT NULL","Not match: [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')] != [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","Not match: [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')] != [('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47')]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY T2.age LIMIT 1,"Not match: [('Feil',), ('Fisher',), ('Rippin',)] != [('Nicolas',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY T2.age LIMIT 1,"Not match: [('Feil',), ('Fisher',), ('Rippin',)] != [('Nicolas',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived ,  date_departed FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived ,  date_departed FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(treatment_id) FROM Treatments;,"Not match: [('9',)] != [('15',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments WHERE treatment_type_code IS NOT NULL;,"Not match: [('9',)] != [('15',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id WHERE T1.treatment_type_code IN ('Dog Treatment'),"Not match: [('8',)] != [('0',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT T1.role_code, T1.street, T1.city, T1.state FROM Professionals AS T1 INNER JOIN ( SELECT city FROM Professionals WHERE city LIKE '%West%' ) AS T2 ON T1.city = T2.city",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT COUNT(*) FROM Dogs WHERE age < ( SELECT AVG(age) FROM Dogs );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT COUNT(*) FROM Dogs WHERE age < ( SELECT AVG(age) FROM Dogs );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT COUNT(owner_id) FROM Dogs WHERE abandoned_yn = 'Y',"Not match: [('3',)] != [('0',)]",False
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT COUNT(owner_id) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT T1.name, T1.age, T1.weight FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.abandoned_yn = '1'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT AVG(age) FROM Dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT avg(age) FROM Dogs,SELECT AVG(age) FROM Dogs;,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT MAX(T1.age) FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(age) FROM Dogs,SELECT MAX(T1.age) FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type, charge_amount FROM Charges;",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type, charge_amount FROM Charges;",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT MAX(charge_amount) FROM Charges,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,SELECT max(charge_amount) FROM Charges,SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1,,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, cell_number, home_phone FROM Professionals",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, cell_number, home_phone FROM Professionals",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT breed_code, size_code FROM Dogs GROUP BY breed_code, size_code",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT breed_code ,  size_code FROM Dogs",,True
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",OperationalError('no such column: T2.treatment_type_description'),False
spider_data/database/dog_kennels/dog_kennels.sqlite,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",OperationalError('no such column: T2.treatment_type_description'),False
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT COUNT(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT count(*) FROM singer,SELECT COUNT(*) FROM singer,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year, Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year, Citizenship FROM singer",,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT Name FROM singer WHERE Citizenship != 'France',,True
spider_data/database/singer/singer.sqlite,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT Name FROM singer WHERE Citizenship != 'French',"Not match: [('Abigail Johnson',), ('Alice Walton',), ('Christy Walton',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Susanne Klatten',)] != [('Abigail Johnson',), ('Alice Walton',), ('Christy Walton',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Liliane Bettencourt',), ('Susanne Klatten',)]",False
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1;,,True
spider_data/database/singer/singer.sqlite,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1,,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",,True
spider_data/database/singer/singer.sqlite,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",SELECT MAX(Net_Worth_Millions) FROM singer WHERE Citizenship IS NOT NULL,"Not match: [('Australia', '17.0'), ('Chile', '17.4'), ('France', '30.0'), ('Germany', '14.3'), ('United States', '28.8')] != [('30.0',)]",False
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
spider_data/database/singer/singer.sqlite,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT T2.Title, T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T1.Singer_ID) > 1,,True
spider_data/database/singer/singer.sqlite,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T1.Song_ID) > 1,,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",,True
spider_data/database/singer/singer.sqlite,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",SELECT SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name,"Not match: [('Christy Walton', '651421.0'), ('Gina Rinehart', '292000.0'), ('Iris Fontbona', '335000.0'), ('Jacqueline Mars', '275000.0'), ('Liliane Bettencourt', '1646407.0'), ('Susanne Klatten', '261000.0')] != [('1646407.0',), ('261000.0',), ('275000.0',), ('292000.0',), ('335000.0',), ('651421.0',)]",False
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song );,,True
spider_data/database/singer/singer.sqlite,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL,,True
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year BETWEEN 1945 AND 1955,"Not match: [('United States',)] != [('Australia',), ('United States',), ('United States',)]",False
spider_data/database/singer/singer.sqlite,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT Citizenship FROM singer WHERE Birth_Year BETWEEN 1945 AND 1955,"Not match: [('United States',)] != [('Australia',), ('United States',), ('United States',)]",False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT count(*) FROM Other_Available_Features,SELECT COUNT(feature_id) FROM Other_Available_Features,,True
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_id = ( SELECT feature_id FROM Features WHERE feature_name = 'AirCon' ),OperationalError('no such table: Features'),False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code IS NOT NULL;,"Not match: [('Apartment, Flat, Condo, etc.',), ('Field, Meadow.',), ('House, Bungalow, etc.',), ('Other, to be determined.',), ('Shop, Retail Outlet.',)] != [('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Field, Meadow.',), ('House, Bungalow, etc.',), ('House, Bungalow, etc.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Shop, Retail Outlet.',), ('Shop, Retail Outlet.',)]",False
spider_data/database/real_estate_properties/real_estate_properties.sqlite,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT property_name FROM Properties WHERE room_count > 1 AND property_type_code IN ('HSE', 'APT')","Not match: [('longacre',), ('parc coliseum',), ('parc east',), ('park',), ('renoir',), ('ten tower',), ('the cole',), ('vogue',)] != []",False
